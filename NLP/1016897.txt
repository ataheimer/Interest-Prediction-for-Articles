t increas internet capac use local search a open shortest path first ospf one commonli use intradomain internet rout protocol traffic flow rout along shortest path split flow evenli node sever outgo link shortest path destin weight link therebi shortest path rout chang network oper weight could set proport physic length link often main goal avoid congest ie overload link standard heurist recommend cisco a major router vendor make weight link invers proport capacityw studi problem optim ospf weight given set project demand avoid congest show problem nphard even approxim propos local search heurist solv it also provid worstcas result perform ospf rout vs optim multicommod flow rout numer experi compar result obtain local search heurist optim multicommod flow rout well simpl commonli use heurist set weight experi done propos nextgener att worldnet backbon well synthet internetwork b introduct provis internet servic provid isp backbon network intradomain ip traffic big challeng particularli due rapid growth network user demand time network topolog capac may seem insuffici meet current demand time mount pressur isp provid qualiti servic qo term servic level agreement sla custom loos guarante delay loss throughput issu point import traffic engin make effici use exist network resourc tailor rout prevail traffic gener rout problem optim use exist network resourc seen gener rout problem defin follow given capacit direct graph whose node arc repres router capacit link them demand matrix that pair s t node tell us much traffic flow need send t refer sourc destin demand mani entri may zero particular ds t zero path g arc a associ cost function phi a load a depend close load capac ca precis a phi continu function phi deriv xca function phi illustr figur view model retransmiss delay caus packet loss gener cheap send flow arc small util aca cost increas progress util approach explod go formal object distribut demand flow minim sum aa phi a result cost arc explos increas cost load exce capac object typic impli keep maxutil max aa aca least possibl exact definit object function import techniqu long piecewis linear increas convex function gener rout cost load figur arc cost phi a function load a arc capac ca problem limit distribut flow path problem therefor formul solv polynomi time fraction multicommod flow problem show section definit gener rout problem except exact choic object function equival one use eg awduch et al controversi featur assumpt estim demand matrix demand matrix could case propos att worldnet backbon base concret measur flow sourcedestin pair feldmann et al demand matrix could also base concret set custom subscript virtual leas line servic demand matrix assumpt accommod unpredict burst traffic howev deal predict period chang say morn even simpli think two independ rout problem one morn one even ospf versu mpl rout protocol unfortun intradomain internet rout protocol today support free distribut flow sourc destin defin gener rout problem common protocol today open shortest path first ospf moy protocol network oper assign weight link shortest path router destin comput use weight length link router next link shortest path possibl destin store tabl flow arriv router sent destin split flow link shortest path destin definit ospf protocol specifi split approxim even simplic assum split exactli even for att worldnet simplif lead reason estim qualiti ospf rout depend highli choic weight nevertheless recommend cisco a major router vendor often set invers proport capac link without take knowledg demand account wide believ ospf protocol flexibl enough provid good load balanc given demand matrix awduch et al x one reason introduc flexibl multiprotocol label switch mpl technolog mpl one principl decid path individu packet henc simul solut gener rout problem distribut packet path sourcedestin pair use distribut use flow mpl technolog disadvantag first all mpl yet wide deploy let alon test second ospf rout simpler sens rout complet determin one weight arc is need make individu rout decis sourcedestin pair also link fail weight remain link immedi determin new rout result gener question studi paper is suffici clever weight set make ospf rout perform nearli well optim generalmpl rout first answer neg arbitrari n construct instanc rout problem n node ospf rout averag flow arc utiliza tion n time higher maxutil optim gener solut concret object function demonstr gap factor approach cost optim gener rout cost optim ospf rout worst possibl gap achiev set weight next natur question is well ospf rout perform real network particular want answer question propos att worldnet backbon addit studi synthet internetwork gener suggest calvert et al zegura et al find perfect answer hard sens nphard find even approxim optim set ospf weight arbitrari network instead resort local search heurist guarante find optim solut surprisingli turn propos att worldnet backbon well synthet network heurist found weight set make ospf rout perform within percent optim gener rout thu propos att worldnet backbon project demand concret object function would substanti traffic engin gain switch exist welltest understood robust ospf technolog new mpl altern also compar local search heurist standard heurist weight invers proport capac proport physic distanc found that network capac could support increas demand respect concret cost function and simultan respect keep maxutil technic contribut local search heurist origin use hash tabl avoid cycl search diversif use hash tabl avoid cycl local search alreadi propos woodruff zemel approach differ sens elimin complet solut alreadi encount need concept solut attribut precis approach close relat strict tabu search battiti tecchiolli solut map hash valu that seen uniqu solut attribut allow valu twice complet search use mechan obtain diversif is knowledg new idea test befor local search heurist also origin use advanc dynam graph algorithm comput ospf rout result given set weight turn comput bottleneck mani differ solut evalu neighborhood explor howev neighborhood structur allow local chang weight therefor develop effici algorithm updat rout recomput cost solut weight chang speedup critic local search reach good solut within reason time bound typic reduc comput time factor relat work best knowledg previou work deal even split ospf rout previou work optim ospf weight rodrigu ramakrishnan lin wang bley grotchel wessali either chosen weight avoid multipl shortest path sourc destin appli protocol break tie thu select uniqu shortest path sourcedestin pair besid differ model deal even split approach also technic differ first all deal much larger network detail rodrigu ramakrishnan present local search like our use singl descent contrast consid nonimprov move henc deal problem avoid cycl largest network consid rodrigu ramakrishnan node link also bley grotchel wessali use singl descent local search largest network consid link mention simultan deal problem design network wherea tri optim weight given network final lin wang present complet differ approach base lagrangian relax consid network node experi propos att worldnet backbon node link synthet network node link scale experi make speed issu motiv innov use dynam graph algorithm local search section formal gener rout model multicommod flow problem ferent size topolog network section famili network construct demonstr larg gap ospf multicommod flow rout section show problem optim ospf weight nphard section present local search algorithm guid search hash tabl section show speedup calcul use dynam graph algorithm section report numer experi conclud section comment result obtain mathemat formul optim rout given direct network capac ca a demand matrix that pair s t n theta n tell demand ds t traffic flow t sometim refer nonzero entri demand pair s t arc a associ variabl f st tell much traffic flow goe a variabl a repres total load arc a ie sum flow go a phi use model piecewis linear cost function arc a notat gener rout problem formul follow linear program fact uncapacit multicommod flow problem increas piecewis linear cost aa phi subject uuva uvua gammadst vs a phi a a ca a ca a phi a gamma ca a phi a gamma ca a phi a gamma ca a constraint flow conserv constraint ensur desir traffic flow rout t constraint defin load arc constraint defin cost arc program complet linear program formul gener rout problem henc solv optim polynomi time khachiyan experi solv problem call cplex version via ampl denot phi opt optim solut gener rout problem ospf rout ospf rout choos posit integ weight w arc length path sum arc weight extra condit flow leav node aim given destin evenli spread first arc shortest path destin precis sourcedestin pair s t n theta n node u f st shortest path t shortest path t note rout demand complet determin shortest path turn determin weight assign arc denot phi optospf optim cost ospf rout normal cost introduc normal scale factor cost function allow us compar cost across differ size topolog network defin measur introduc ds dist delta distanc measur unit weight hop count also let phi unitospf denot cost ospf rout unit weight present sever nice properti phi uncap phi unitospf ii inspir name uncapacit i phi uncap total load traffic flow goe along unit weight shortest path unlimit capac iii phi uncap minim total load network iv phi uncap phi opt abov maxim valu phi proof i follow directli definit ii follow i sinc ratio cost load arc capac time load iii follow i send flow along longer path increas load iii get iv sinc smallest possibl ratio cost load final get v ii sinc decreas capac arc given load increas arc cost strictli less factor capac stay posit scale cost defin as lemma iv v immedi get note get phi mean rout along unit weight shortest path load stay capac ideal situat mathemat model point increas capac network packet cost util figur arc packet cost function util packet level view perhap instruct way understand cost function packet level interpret demand ds t measur mani packet ident size expect send within certain time frame packet follow singl path t pay cost arc use origin cost function phi per packet cost use arc phi aa per packet cost close relat probabl packet lost now phi obtain sum path cost packet per packet arc cost phi aa function oe util aca function oe depict figur first oe util oe increas full arc grow rapidli toward cost factor packet ratio current cost cost would paid could follow unitweight shortest path without hit util henc pay minim cost arc travers latter ideal situat measur phi uncap therefor phi measur weight averag packet cost factor packet weight proport unitweight distanc end point packet follow shortest path arc exactli full cost factor exactli cost factor cours obtain arc go capac other go below packet follow longer detour use less congest arc nevertheless natur say rout congest network follow maxim gap optim gener rout optim ospf rout less factor lemma show gap fact approach proof base construct ospf lead bad congest natur definit congest fact construct provid neg exampl type rout flow node given destin split split evenli outgo link use precis arbitrari n construct instanc rout problem n node one demand path sourc destin shortest respect unit weight hop count instanc ospf rout averag flow arc n time higher maxutil optim gener solut concret object function demonstr gap factor approach cost optim gener rout cost optim ospf rout famili network g n optim gener rout approach time better optim ospf rout n proof graph defin node set ng arc set v capac arc ae otherwis final singl demand size n sourc destin t graph g n on node arc illustr figur high capac arc repres thick line construct exactli n path t n link path optim solut gener rout model obvious given send one unit flow along path mean arc get flow third capac therefor unit flow follow path length n optim cost phi n opt equal n ospf model freeli decid path use even split first path use get half flow ie n unit second get n unit on asymptot mean almost flow goe along arc load factor n capac sinc path use least n capac optim ospf cost phi n optospf satisfi figur g n conclud ratio ospf cost optim cost optospf opt complex section formal present hard result state nphard find even approxim optim set ospf weight proof defer appendix a hard present concret cost function phi defin section much gener class cost function also prove hard approxim respect maxutil anoth natur measur qualiti rout case inapproxim factor much wors result later obtain experiment cost function section theorem nphard optim ospf weight set respect cost function defin within factor optim theorem deriv follow hard result larg class cost function theorem let ff fi fix constant suppos total rout cost aa psi a psi l ffl l ca psi l ffca then fi ff nphard optim ospf weight set respect aa psi la within factor optim proof theorem defer appendix a verifi theorem gener theorem claim proof theorem impli theorem order get hypothesi theorem suffici see equival problem obtain defin new capac use modifi cost function defin phi new cost function satisfi hypothesi theorem lead inapproxim factor greater final state hard maxutil theorem nphard optim maxutil ospf rout within factor ospf weight set use local search ospf rout arc a choos weight w weight uniqu determin shortest path rout traffic flow load arc final valu cost function phi rest section present local search heurist determin weight w a order minim phi suppos want minim function f set x feasibl solut local search techniqu iter procedur iter defin neighborhood current solut x x choos next solut x neighborhood often want neighbor x n x improv f sens differ local search heurist aris essenti definit neighborhood way explor choic next solut neigh borhood descent method consid entir neighborhood select improv neighbor stop local minimum found metaheurist tabu search simul anneal allow nonimprov move appli restrict neighborhood avoid cycl extens survey local search applic found aart lenstra remaind section first describ neighborhood structur appli solv weight set problem second use hash tabl address problem avoid cycl hash tabl also use avoid repetit neighborhood explor neighborhood search aim intensifi search promis region often great practic import search new region neighborhood search fail improv best solut while techniqu call search diversif address end section first step choos maxim weight w restrict attent weight idea behind use small weight increas chanc even split due multipl shortest path node destin neighborhood structur solut weight set problem complet character vector w aa weight defin neighbor w n w w one two follow oper appli w singl weight chang simpl modif consist chang singl weight defin neighbor w w arc possibl weight set w evenli balanc flow assum cost function phi arc increas convex mean want avoid highli congest arc want split flow evenli possibl differ arc precis consid demand node demand go goe given node u intuit would like ospf rout split flow go u evenli along arc leav u case arc leav u belong shortest path u t precis node adjac u p one shortest path u t illustr figur want set w denot sum weight arc belong p simpl way achiev goal set w otherwis w drawback approach arc belong one shortest path u may alreadi congest modif weight propos send flow congest arc obvious undesir featur therefor decid choos random threshold ratio modifi weight arc maxim subset b arc leav u l w u l w a denot load result weight vector w way flow leav u toward chang arc b choos random allow diversifi search figur second type move tri make path form u equal length anoth drawback approach ensur weight remain w max done ad condit max ib wp choos b detail rest section explor full neighborhood neighbor explor next solut best accord cost function guid search hash tabl simplest local search heurist descent method that iter select best element neighborhood stop element improv object function approach lead local minimum often far optim solut problem heurist allow nonimprov move consid unfortun nonimprov move lead cycl one must provid mechan avoid it tabu search algorithm glover glover laguna exampl make use tabu list record attribut solut encount recent iter forbid solut attribut neighborhood structur weight set problem quit complex effici design tabu attribut search paramet length tabu list would requir lot work instead develop search strategi complet avoid cycl without need store complex solut attribut approach call strict tabu search studi battiti tecchiolli test differ techniqu implement it name revers elimin method glover hash woodruff zemel digit tree knuth turn revers elimin method much expens memori comput requir furthermor digit tree best suit binari variabl would expens memorywis encod solut jaj dimension bit integ vector therefor resort hash hash function w p w lz h w z figur exampl hash function singl weight w w compress solut singl integ valu send differ solut integ small probabl implement strict tabu search use boolean tabl record valu produc hash function encount begin algorithm entri set fals w solut produc given iter set hw true and search neighborhood reject solut w hw true check solut encount therefor perform constant time point carlton barn risk collis whenev w w show collis aris high probabl iter case roughli solut elimin collis howev elimin solut essenti random sinc approach alreadi highli random critic moreov weight set problem mani differ solut ie weight vector lead arc load total cost therefor even good solut kill collis high chanc solut lead rout surviv hash function use base develop carter wegman dietzfelbing thorup properti probabl two differ weight set get hash valu function truli random case function use woodruff zemel suppos weight repres mbit integ log w max want map lbit integ case arc a associ random l m gamma bit integ p defin hash function h w singl weight w consid p w m l gamma bit integ take lbit integ obtain drop highest bit lowest bit p w illustr figur hash valu w defin aa h w phi denot bitwis xor oper big advantag use xor oper allow fast updat hash valu singl weight chang precis w equal w except given w w hw comput w phi h w local search perform iter record solut thu use fraction potenti hash valu speed neighborhood evalu due complex neighborhood structur evenli balanc flow turn sever move often lead weight set simpl exampl node w singl incom arc v w node u v w exactli balanc destin v destin w effici would like avoid evalu equival move again hash tabl use tool achiev goal insid neighborhood explor defin secondari hash tabl use store encount weight set abov evalu move lead hash valu alreadi met neighborhood structur use also drawback number neighbor given solut larg explor neighborhood complet may time consum avoid drawback evalu randomli select set neighbor start evalu neighborhood time current solut improv divid size sampl multipli time current solut improv moreov enforc sampl least neighborhood diversif anoth import ingredi local search effici diversif aim diversif escap region explor without improv search region yet unexplor particular case mani weight set lead rout therefor observ local minimum reach mani neighbor cost lead long seri iter cost valu escap long valley search space secondari hash tabl use tabl gener reset end iter sinc want avoid repetit insid singl iter onli howev neighborhood explor lead solut better current one reset tabl happen sever iter collis occur potenti good solut exclud forc algorithm escap region current explor collis appear reason rate size secondari hash tabl must small compar primari one experi size time number cost iter figur evolut local search iter att worldnet backbon arc network att worldnet propos backbon link give secondari size wherea primari size approach diversif use avoid region lot local minima cost suffici complet escap one region go possibl attract one therefor time best solut found improv iter randomli perturb current solut order explor new region search space perturb consist ad randomli select perturb uniformli chosen weight present figur evolut cost iter search one run instanc att worldnet backbon impact diversif scheme high variat cost observ figur algorithm allow diversifi move observ quick descent good region bad move cost evalu section first show evalu cost function static case network specifi weight set comput cost function scratch unfortun time consum local search afterward show reus comput exploit fact weight chang current solut solut neighborhood static case given direct graph capac fc g aa demand matrix d weight fw g aa instanc consid graph spars moreov weight graph maxim distanc two node ojn j want comput cost function phi basic problem comput load result weight set consid one destin time comput total flow sourc n t give rise certain partial load l arc done comput destin t comput load l arc comput flow t first step use dijkstra algorithm comput distanc normal dijkstra algorithm comput distanc away sourc appli implement dijkstra algorithm graph obtain revers orient arc g comput distanc node u comput set arc shortest path t is node u let ffi u denot degre ie observ v w l proof even flow split outgo shortest path arc give follow straightforward calcul l vw use observ comput load l vw follow node v n visit order decreas distanc v t visit node v first set second set l l v w see algorithm work correctli assum induct dealt correctli node visit v sinc everi arc u v enter v stem node u strictli t know u visit previous henc induct load l uv correct sinc incom arc load correct v visit outgo arc load comput correctli observ use bucket prioriti queue dijkstra algorithm comput destin take time henc total time bound ojn j dynam case local search want evalu cost mani differ weight set evalu bottleneck comput save time tri exploit fact evalu consecut weight set typic arc weight chang thu make sens tri lazi recomput everyth scratch reus much possibl respect shortest path idea alreadi well studi ramalingam rep appli algorithm directli basic result that recomput spend time proport number arc incid node u whose distanc u chang experi typic chang gain substanti order factor node graph similar posit experi lazi report frigioni et al set chang distanc immedi give us set updat arc ad delet present lazi method find chang load oper set critic node initi consist node incom outgo updat arc repeat follow empti first take node v maxim updat distanc v remov v final v w updat v w new l l vw set l l add w see suffic first note node visit consid order decreas distanc follow alway take node maxim distanc add new node w closer current visit node v consequ dynam algorithm behav exactli static algorithm except treat node howev node whose incom outgo arc set chang whose incom arc load chang put node skip know load around would exactli previou evalu order measur impact dynam updat cost perform algorithm perform iter variou network differ demand set result present tabl tabl see dynam updat make algorithm time faster averag time faster improv critic us typic ran local search bit hour order get good solut numer experi present result obtain propos att worldnet backbon well synthet internetwork besid compar local search heurist heurospf gener optimum opt compar ospf rout oblivi weight set base properti arc alon ignor rest network oblivi heurist averag tabl comput time iter local search in second ffl invcapospf set weight arc invers proport capac recommend cisco experi capac divid maxim capac get integ weight link found weight divid maxim capac capac link ffl unitospf set arc weight ffl lospf set weight proport physic euclidean distanc l norm ffl randomospf choos weight randomli local search heurist start randomli gener weight perform it erat largest graph took approxim one hour random start point weight chosen randomospf initi cost local search randomospf result att worldnet backbon differ scale project demand matrix present tabl here scale demand matrix mean multipli entri common number algorithm run independ scale henc opt randomospf heurospf use differ rout differ scale wherea unitospf invcapospf alway use rout entri normal cost phi introduc section normal cost follow maxutil parenthesi bold line tabl correspond origin nonscal demand ospf scheme normal cost maxutil calcul weight set rout howev opt optim normal cost optim maxutil comput independ differ rout expect gener rout abl get optim normal cost max util simultan result also depict graphic figur first graph show normal cost horizont line show threshold regard network congest second graph show maxutil also gener three flavor synthet graph level hierarch graph graph produc use gener gtitm zegura base model calvert et al zegura et al arc divid two class local access arc long distanc arc arc capac equal local access arc long distanc arc pure random graph probabl arc two node given constant paramet use control densiti graph arc capac set tabl result propos att worldnet backbon waxman graph node uniformli distribut point unit squar probabl arc two node u v given ff fi paramet use control densiti graph ffiu v euclidean distanc u v delta maximum distanc two node waxman arc capac set abov level hierarch graph realist known model internetwork random graph waxman graph cleaner mathemat perspect demand gener follow node u pick two random number further pair u v node pick random number c uv demand u v ffo u v c uv e gammaffiuv ff paramet delta largest euclidean distanc pair node abov u v reflect fact differ node less activ sender receiv thu model hot spot net multipli three random variabl quit larg variat demand factor e gammaffiuvdelta impli rel demand close pair node result synthet network present figur note random waxman graph capac equal invcapospf repres via unitospf discuss present paper local search heurist optim ospf weight use intradomain internet rout heurist test substanti set instanc cost demand invcapospf unitospf heurospf opt maxutil demand invcapospf unitospf heurospf opt figur att propos backbon node arc scale project cost demand invcapospf unitospf heurospf opt maxutil demand invcapospf unitospf heurospf opt figur level graph node arc cost demand invcapospf unitospf heurospf opt maxutil demand invcapospf unitospf heurospf opt figur level graph node arc invcapospf unitospf heurospf opt maxutil demand invcapospf unitospf heurospf opt figur level graph node arc cost demand invcapospf unitospf heurospf opt maxutil demand invcapospf unitospf heurospf opt figur level graph node arc unitospf heurospf opt maxutil demand unitospf heurospf opt figur random graph node arc cost demand unitospf heurospf opt maxutil demand unitospf heurospf opt figur random graph node arc cost demand unitospf heurospf opt maxutil demand unitospf heurospf opt figur waxman graph node arc cost demand unitospf heurospf opt maxutil demand unitospf heurospf opt figur waxman graph node arc includ propos att worldnet backbon project demand would nice run real world data data typic compani secret consid result att worldnet backbon project nonscal demand ie bold line tabl observ heurist heurospf within optim contrast oblivi method least consid gener pictur normal cost figur see lospf randomospf typic worst come invcapospf unitospf close togeth invcapospf gener slightli better for random waxman graph figur invcapospf coincid unitospf sinc link capac recal invcapospf cisco recommend comfort see best oblivi heurist clear winner ospf scheme heurospf is fact much closer gener optimum oblivi ospf scheme quantifi differ differ scheme note curv randomospf start pretti flat then quit suddenli start increas rapidli pattern somewhat similar figur surpris sinc figur show curv network consist singl arc reason randomospf follow pattern weight set gener randomli entri jump curv randomospf figur nice illustr luck impact weight set one could cours run randomospf sever time use best solut figur clear even errat badli randomospf perform never best purpos includ randomospf abl compar weight set random choic interestingli particular demand valu randomospf valu initi solut local search heurist howev jump randomospf transfer heurospf henc seem oblivi qualiti initi solut interest comparison differ scheme amount demand cope network get congest section defin threshold congest exact threshold inconsequenti consid propos att worldnet backbon figur level graph figur see heurospf allow us cope demand cisco recommend invcapospf averag around maximum achiev figur particular figur lospf actual quit well gener invcapospf better oblivi heurist henc challeng one compet with moreov figur heurospf less abl cope demand optim gener rout opt figur heurospf opt recal theorem nphard approxim optim cost ospf solut within factor idea whether exist ospf solut closer opt one found heurist pictur gener repeat random graph figur except heurospf tend littl away opt though still less waxman graph figur signific differ rel model unitinvcapospf tend get closer opt opt allow averag increas demand thu leav less scope improv hand waxman graph heurospf nearli coincid opt random waxman graph consid much less realist level graph see support evid conjectur typic internetwork heur ospf abl suppli larg part gain opt may invcapospf oblivi heurist turn attent maxutil get order scheme invcapospf winner among oblivi scheme heurospf overal best ospf scheme advantag use heurospf maxutil interest local search use maxutil object steplik pattern heurospf show impact chang phi exampl figur see heurospf fight keep max util order avoid high penalti get load capac follow pattern analysi normal cost ask much demand deal get maxutil see heurospf beat oblivi scheme least propos att worldnet backbon level graph fact heurospf provid weight set rout simultan good best effort type averag cost function perform guarante type measur maxutil indic weight obtain univ salli good tune particular cost function recal valu opt rout may gener rout get simultan closer optim cost optim maxutil heurospf anyhow heurospf gener close opt littl scope improv present worstcas exampl show case even best ospf weight set lead bad rout compar best gener rout also shown nphard find even approxim optim ospf weight set neg find contrast posit find experiment work weight set heurist produc ospf rout quit close perform best possibl gener rout indic neg exampl ospf rout contriv domin practic propos att worldnet backbon level graph suggest zegura calvert bhattacharje calvert doar zegura ospf weight set heurist distinguish produc weight set allow increas demand achiev standard weight set heurist use invers capac recommend cisco thu shown context known demand clever weight set algorithm ospf rout power tool increas network abil honor increas demand ospf clever weight set provid larg part potenti gain traffic engin support demand even compar possibl much flexibl mpl scheme futur work studi robust issu link failur appear hotspot internet nphard proof appendix prove nphard result claim section proof done partli collabor david johnson christo papadimitri first prove hard minim maxutil second prove hard respect summationbas cost function like phi proof maxutil much easier help present basic idea need summat base cost function recal section theorem nphard optim maxutil ospf rout within proof theorem prove result reduc sat problem optim ospf weight set respect maxutil precis let instanc sat variabl set x claus set c claus liter cook construct instanc ospf weight set problem ffl exist satisfi assign sat instanc max util ospf instanc equal ffl satisfi assign sat instanc maxutil weight set least fx vx tx sx figur reduct sat ospf maxutil construct graph g correspond sat instanc illustr figur claus c c associ node c n node connect arc capac global node w variabl x x let jxj denot least power bound number neg number posit occurr x s x x associ sourc x destin x demand jxj them furthermor x three node v x f x x arc s x arc v x balanc binari tree jxj leav root f x x posit neg occurr x claus c arc leaf f x t x node c leaf use one occurr x claus leaf connect claus connect global node u turn connect w arc insid binari tree capac jxj arc leav claus u capac arc u w capac xx jxj x arc w x capac jxj canon flow network defin flow correspond assign valu variabl x precis canon flow jxj unit flow go v x x jxj unit go either x f x depend whether x true fals flow come x spread evenli get unit leav leaf go either claus node c u jxj unit flow sent x w assign flow claus c unit flow c w neg liter c thu claus c satisfi neg liter load stay within capac c w otherwis load c w util c w goe load canon flow stay within capac suppos given noncanon flow satisfi ospf rout condit flow destin split split evenli show maxutil noncanon flow least easi see noncanon flow satisfi least one follow condit x i one v use exactli one s use howev least one intern node one binari tree flow split children case i arc use get flow jxj lead maxutil case ii v x x use get flow x w x lead maxutil case iii v use even split impli flow goe s x x goe v x v x f x result must get delta lead maxutil case iv jxj unit flow arriv x or f x consid node binari tree x or f x flow split closest possibl x or f x flow split evenli a receiv exactli one unit flow leaf descend a howev flow sent one child half mani descend leav one leav must receiv unit flow twice capac outgo arc shown evenli split flow lead maxutil equal flow canon correspond satisfi assign evenli split flow lead maxutil greater equal remain show satisfi canon flow achiev suitabl set weight ospf rout done follow path x x go x use log jxj arc go f x use log jxj arc direct path arc canon flow lead true valu x flow split equal x split v x achiev path go x direct path weight path go f x larger weight give weight equal weight equal arc lead weight set canon flow lead fals valu x flow split x split equal v x achiev path go f x direct path weight path go x larger weight give weight equal v x x weight equal weight equal arc lead weight set conclus exist satisfi assign exist ospf weight set lead maxutil convers shown evenli split flow correspond satisfi truth assign maxutil greater equal henc approxim maxutil within factor impli solut sat prove result section state inapproxim ospf weight set problem respect larg class cost function includ cost function phi theorem let ff fi fix constant suppos total rout cost aa psi a psi l ffl l ca psi l ffca then fi ff nphard optim ospf weight set respect aa psi la within factor optim recal section theorem impli inapproxim factor cost function phi proof follow pattern use maxutil complex deal sum rather maximum base follow deep inapproxim result implicit hastad hastad person lemma hastad given satisfi instanc maxsat claus liter variabl number posit neg occurr nphard satisfi fraction claus proof theorem prove result reduc satisfi instanc maxsat claus liter variabl number posit neg occurr ospf weight set problem use lemma reduct similar maxutil illustr figur main differ rel construct maxutil subdivid arc path give higher weight cost function contract binari tree root x f x formal let c satisfi instanc maxsat variabl set x claus set c claus liter variabl number posit neg occurr let jxj denot number occurr claus x c maxutil node c associ claus c c connect node w path p c instead singl arc p c jp c capac variabl x x associ sourc x destin x demand jxj them x outgo arc two node v x x arc v x node f x instead arc v x x path sx fx pc rx fx qx tx vx figur reduct sat ospf cost function q x v x x arc jq x arc capac jxj x path p c c claus c x occur neg similarli f x path p c fx c claus c x occur posit path p c fx jp c jp c arc capac final x x path r x w x arc capac jxj theorem defin canon flow network flow correspond assign valu variabl x canon flow jxj unit flow go q x jxj unit go either x f x depend whether x true fals flow come x spread evenli p c get unit flow go c similarli flow sent f x p c fx get unit flow go c flow arriv claus c sent w via p c final x via r x assign flow everi claus c unit flow p c neg liter c thu claus c satisfi neg liter load stay within capac p c otherwis load p c one unit capac flow outsid claus path p c stay within capac hard result base show hard get flow cost close canon flow correspond satisfi truth assign sinc satisfi flow load within capac make approxim easier reduc cost load capac henc prove hard may assum remaind proof organ follow first show transform polynomi time noncanon even split flow canon flow smaller cost next show canon flow achiev suitabl weight set final appli lemma show canon flow low cost hard find lemma noncanon even split flow transform polynomi time canon flow smaller cost proof suppos noncanon flow show alway find flow lower cost easi see noncanon flow satisfi least one follow condit x i one q ii q x use use iv a flow f x p c fx path use b flow x p c path use case i q x includ one receiv jxj unit flow ie jxj unit capac move extra flow split equal v x f x send one unit p c fx decreas cost q x fijq x jjxj none fx r x get capac use befor unit flow transfer path cost ff per arc p c could get increas jxj unit capac total increas cost due new rout bound jjxj net decreas cost thu fi ff similarli s x x v x f x use move half flow q x which empti lead decreas cost least count gain move flow claus path p c point path may load strictli capac lower bound cost case ii suppos use otherwis come back previou case r x jxj unit flow capac move jxj unit flow go f x empti jq x j lead decreas cost least case iii even split impli get jxj unit flow q x f x get jxj unit flow x move flow f x q x so reduc flow trough r x jxj jxj place flow henc cost increas q x jxj jxj howev flow q x remain within capac total cost path bound ffjq x jjxj lead decreas cost thu assum q x exactli one f x x use iv deal case iva remain show f x includ benefici includ path p c fx suppos q includ includ them afterward path p c fx exactli unit flow correspond capac mean q unit flow move empti path previous capac howev q unit flow sent differ p c cost fijp c j lead cost decreas least case ivb cost decreas becom canon flow achiev suitabl ospf weight set proof path form x x go x f x use arc path x use arc canon flow lead true valu x flow split equal x split v x achiev path go x path x weight path go f x larger weight give weight equal arc q x v x f x weight equal arc lead weight set case fals valu assign x similar argument lead weight equal arc q x s x x weight equal arc readi finish proof theorem lemma know canon flow interest lemma ensur flow obtain use ospf rout canon flow correspond satisfi assign valu variabl x load remain within capac moreov variabl x jxj unit flow sent x f x path use arc jxj unit flow sent q x path use arc lead total cost ff xx jxj hand consid canon flow correspond assign satisfi claus rout q x p c p c fx r x cost ff per unit flow per arc sinc use path exactli load capac moreov unsatisfi claus c p c load capac thu contribut ff total cost total number claus total cost least ignor load may capac p c lemma nphard get assign satisfi fraction claus conclud nphard approxim optim ospf weight set within factor conclud proof theorem acknowledg would like thank david johnson jennif rexford use comment first author sponsor att research prize r local search combinatori optim discret mathemat optim reactiv tabu search design broadband virtual privat network model heurist bwin note hash function tabu search algo rithm univers class hash function complex theorem prove procedur univers hash kwise independ random variabl via integ arithmet without prime netscop traffic engin ip network experiment analysi dynam algorithm singlesourc shortest path problem futur path integ program link artifici intelli genc tabu searchpart tabu searchpart ii optim inapproxim result theori comput stoc polynomi time algorithm linear program art comput program iii sort search minimax open shortest path first rout algorithm network suppor smd servic ospf anatomi internet rout protoc increment algorithm gener shortestpath problem optim rout data network rout multipoint connect hash vector tabu search httpwww model internet work tr futur path integ program link artifici intellig hash vector tabu search increment algorithm gener shortestpath problem art comput program volum experiment analysi dynam algorithm singl even strongli univers hash pretti fast detect combin occurr optim inapproxim result ospf local search combinatori optim tabu search univers hash kwise independ random variabl via integ arithmet without prime complex theoremprov procedur ctr hakan mit column gener approach igp weight set problem proceed acm confer emerg network experi technolog octob toulous franc makarem bamatraf moham othman improv balanc heurist optim shortest path rout comput commun v n p may renata teixeira timothi g griffin mauricio g c resend jennif rexford tie break tunabl interdomain egress select ieeeacm transact network ton v n p august