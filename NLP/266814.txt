t trace processor a trace dynam instruct sequenc construct cach hardwar microarchitectur organ around trace present mean effici execut mani instruct per cycl trace processor exploit control flow data flow hierarchi overcom complex architectur limit convent superscalar processor distribut execut resourc base trace boundari appli control data predict trace level rather individu branch instruct three set experi use specint benchmark present i detail evalu trace processor configur result affirm signific instructionlevel parallel exploit integ program instruct per cycl also isol impact distribut resourc quantifi valu success doubl number distribut element ii trace processor data predict appli intertrac depend potenti perform improv perfect predict around benchmark realist predict gcc achiev actual improv iii evalu aggress control flow benchmark benefit control independ much b introduct improv processor perform come two way advanc semiconductor technolog advanc processor microarchitectur sustain histor rate increas comput power import kind advanc continu almost certain clock frequenc continu increas microarchitectur challeng issu mani instruct per cycl effici argu convent superscalar microarchitectur cannot meet challeng due complex ineffici approach multipl instruct issu due architectur limit ilp inabl extract suffici parallel sequenti program go today modest issu rate way issu superscalar processor face complex phase instruct process instruct fetch bandwidth limit frequent branch instruct di patch regist renam particular requir increasingli complex depend check among instruct dispatch clear wide instruct issu larg pool instruct buffer full result bypass among function unit feasibl fast clock even wide superscalar processor could effici exploit ilp still fundament limit find parallel architectur limit due handl control data memori depend purpos paper advoc next gener microarchitectur address complex architectur limit develop microarchitectur bring togeth concept signific bodi research target issu fill gap give complet cohes pictur primari contribut evalu perform potenti microarchitectur offer trace processor microarchitectur propos microarchitectur figur organ around trace context trace dynam sequenc instruct captur store hard ware primari constraint trace hardwar determin maximum length may number implementationdepend constraint trace built program execut store trace cach use trace lead interest possibl reveal follow trace properti trace contain number type control transfer instruct is number implicit control predict properti suggest unit control predict trace individu control transfer instruct nexttrac predictor make predict trace level effect ignor embed control flow trace trace use produc regist valu either liveonentri entir local liveonexit refer livein local liveout respect properti suggest hierarch regist file implement local regist file per trace hold valu produc consum sole within trace global regist file hold valu live trace distinct local depend within trace global depend trace also suggest implement distribut instruct window base trace boundari result processor compos process element pe organ smallscal superscalar processor pe enough instruct buffer space hold entir trace multipl dedic function unit dedic local regist file hold local valu copi global regist file figur trace processor hierarchi overcom complex organ base trace reduc complex take advantag hierarchi control flow hierarchi processor sequenc program level trace contain within trace finer granular control flow also valu hierarchi global local valu enabl processor effici distribut execut resourc hierarchi overcom complex phase process instruct predict trace multipl branch implicitli predict simpler altern bruteforc extens singlebranch predictor togeth trace cach trace predictor offer solut instruct fetch complex instruct dispatch trace given local regist file affect trace local regist prerenam trace cach prerenam definit elimin need depend check among instruct di patch local repres depend entir contain within trace livein liveout go global renam trace dispatch therebi reduc bandwidth pressur regist map freelist instruct issu distribut instruct window among smaller traces window instruct issu logic longer central furthermor pe fewer intern result buse thu given instruct monitor fewer result tag buse result bypass full bypass local valu among function unit within pe feasibl despit possibl longer latenc bypass global valu pe regist file size bandwidth requir global regist file reduc hold local valu suffici read port bandwidth achiev copi pe write port cannot handl way liveout must broadcast copi global file howev write bandwidth reduc elimin local valu traffic instruct retir retir dual dispatch physic regist return free list freelist updat bandwidth reduc liveout map physic regist specul expos ilp allevi limit impos control data memori depend processor employ aggress specul control flow predict granular trace yield good better overal branch predict accuraci mani aggress singlebranch predictor valu predict use relax data depend constraint among instruct rather predict sourc destin valu instruct limit valu predict livein trace limit predict critic subset valu impos structur valu predict predict livein particularli appeal enabl trace execut independ memori specul perform two way first load store address predict dispatch time second employ memori depend specul load issu prior store disambigu occur fact via distribut mechan handl misspecul select reissu pervas specul handl misspecul must fundament chang misspecul tradit view uncommon event treat accordingli mispredict repres barrier subsequ comput howev data misspecul particular view normal aspect comput data misspecul may caus mispredict sourc regist valu mispredict address memori preprocess trace construct trace instruct branch predict cach global regist livein valu predict trace cach reorder buffer segment per trace next trace predict map renam global regist predict issu buffer regist unit process element process element process element process element specul state data cach depend violat instruct detect mispr diction reissu new valu operand new valu produc propag depend instruct turn reissu on instruct along depend chain reissu mechan select reissu simpl fact exist issu mechan select reissu due control mispredict involv also discuss perform improv evalu trace processor prior work paper draw signific bodi work either effici exploit ilp via distribut hierarchi expos ilp via aggress specul both part bodi research focus hardwar intens approach ilp work area multiscalar processor first recogn complex implement wide instruct issu context central resourc result interest combin compil hard ware compil divid sequenti program task task contain arbitrari control flow task like trace impli hierarchi control flow val ue execut resourc distribut among multipl process element alloc task granular runtim task predict schedul onto pe control data depend enforc hardwar with aid compil case regist depend multiscalar processor sever characterist common trace processor distribut instruct window regist file solv instruct issu regist file complex mechan multipl flow control avoid instruct fetch dispatch com plexiti also exploit control independ task neither schedul compil guarante parallel processor demonstr aggress control specul memori depend specul recent microarchitectur propos address complex superscalar pro cessor trace window organ propos basi microarchitectur present here con ceivabl regist file memori organ could superimpos organ eg origin multiscalar distribut regist file distribut speculativevers cach far discuss microarchitectur distribut instruct window base task trace boundari dependencebas cluster interest altern similar trace processor window execut resourc distribut among multipl smaller cluster howev instruct dispatch cluster base depend base proxim dynam instruct stream case trace instruct steer cluster local depend within cluster minim depend cluster earli work propos fillunit construct reus larger unit execut individu instruct concept relev next gener processor subsequ research emphas atom allow unconstrain instruct preprocess code schedul recent work valu predict instruct collaps address limit true data depend ilp work propos expos ilp predict address regist valu well collaps instruct execut combin function unit paper overview section describ microarchitectur detail includ frontend valu predictor process element mechan handl mi specul section describ perform evalu method primari perform result includ comparison superscalar present section follow result valu predict section studi control flow section microarchitectur trace processor instruct suppli trace uniqu identifi address instruct cours sequenc address encod compact form exampl start address basic block trace start address plu branch direct regardless trace identifi trace id deriv trace id use sequenc program shade region figur show fastpath instruct fetch nexttrac predictor trace cach sequenc logic coordin datapath trace predictor output primari trace id one altern trace id predict case primari one turn incorrect one could use altern diminish return sequenc appli hash function bit predict trace id form index trace cach trace cach suppli trace id equival cach tag trace cach locat compar full predict trace id determin hit best case predict trace cach correct predict trace miss cach trace construct slowpath sequenc nonshad path figur predict trace id encod instruct fetch instruct cach sequenc use trace id directli instead convent branch predictor execut engin return actual branch outcom predict trace partial complet incorrect altern trace id consist known branch outcom use tri differ trace trace cach hit build trace remaind trace cach miss altern id prove insuffici slowpath sequenc form trace use convent branch predictor actual branch outcom figur frontend trace processor trace select interest aspect trace construct algorithm use delin trace trace select obviou trace select decis involv either stop embed variou type control instruct call direct call indirect jump indirect return heurist may stop loop branch ensur trace end basic block boundari emb leaf function emb uniqu call site enhanc control independ trace select decis affect instruct fetch band width pe util load balanc pe trace cach hit rate trace predict accuraci strongli influenc overal perform often target trace select one factor neg impact anoth factor studi issu extens unless otherwis state trace select use is stop maximum instruct stop call indi rect jump indirect return instruct trace preprocess trace preprocess prior store trace cach processor model requir prerenam inform trace cach regist operand mark local global local prerenam local regist file although done here preprocess might also includ instruct schedul store inform along trace set reorder buffer quickli dispatch time collaps depend instruct across basic block boundari trace cach perform section present miss rate differ trace cach configur miss rate measur run dynam instruct stream divid trace base trace select algorithm look success trace id cach includ graph go gcc compress fit entir within k direct map trace cach jpeg xlisp show miss rate k direct map cach two set curv two differ trace select algorithm set show miss rate way way associ total size kilobyt instruct storag onli along xaxi top four curv default trace select section bottom four curv label s key add two stop constraint stop call direct stop loop branch default trace select give averag trace length go gcc constrain trace select give smaller averag trace length go gcc advantag much lower miss rate benchmark go particular miss rate constrain select kb trace cach figur trace cach miss rate trace predictor core trace predictor correl predictor use histori previou trace previou trace id hash fewer bit place shift regist form path histori path histori use form index predict tabl entri tabl entri consist predict trace id hit logic fastpath sequenc trace next sequenc slowpath cach trace id altern primari function hash predict trace id trace pred branch pred control target branch construct trace trace new trace trace id preprocess outcom execut instr block option path miss rate gcc dm way way way dm s way s way s way s miss rate size kbyte go dm way way way dm s way s way s way s altern trace id bit satur counter guid replac accuraci correl predictor aid return histori stack call within trace path histori regist copi push onto hardwar stack trace end return path histori valu pop stack use replac newest trace path histori regist reduc impact coldstart alias correl predictor augment second smaller predictor use previou trace id whole path histori tabl entri correl predictor tag last trace use entri tag match correl predictor use otherwis simpler predictor use counter simpler predictor satur predict automat use regardless tag detail treatment trace predictor found trace characterist import trace characterist shown tabl averag trace length affect instruct suppli bandwidth instruct buffer util larger better want signific fraction valu local reduc global commun note ratio local liveout tend higher longer trace observ valu predictor valu predictor contextbas organ twolevel tabl contextbas predictor learn valu follow particular sequenc previou valu firstlevel tabl index uniqu predict id deriv trace id given trace multipl predict id one per livein address trace entri firstlevel tabl contain pattern hash version previou data valu item predict pattern firstlevel tabl use look bit data predict secondlevel tabl replac guid bit satur counter associ entri secondlevel tabl predictor also assign confid level predict instruct issu predict valu predict high level confid confid mechan bit satur counter store pattern firstlevel tabl tabl size use studi larg order explor potenti entri firstlevel entri secondlevel accuraci contextbas valu predict affect time updat accur model detail treatment valu predictor found distribut instruct window trace dispatch dispatch stage perform decod renam valu predict livein regist trace renam look physic regist global regist renam map independ liveout regist receiv new name freelist physic regist global regist renam map updat reflect new name dispatch stage look valu predict livein regist loadstor address trace dispatch stage also perform function relat precis except similar mechan use convent processor first segment reorder buffer rob reserv trace enough inform place segment allow back renam map state instruct instruct second snapshot regist renam map save trace boundari allow back state point except quickli processor first back snapshot correspond except trace inform trace rob segment use back except instruc tion rob also use free physic regist free alloc pe precis interrupt trace must retir inord requir rob maintain state outstand trace number outstand trace therefor limit number rob segment assum enough physic regist match rob state handl trace retir pe freed soon trace complet execut unfortun know trace complet simpl due misspecul model a mechan need determin instruct issu last time consequ pe freed trace retir retir guarante instruct done lower perform solut effect arrang pe circular queue like segment rob pe therefor alloc freed fifo fashion even though might fact complet outoford tabl trace characterist statist comp gcc go jpeg xlisp trace length inst livein liveout local load store cond branch control inst trace misp rate process element detail datapath process element shown figur enough instruct buffer hold largest trace load store address gener part treat instruct buffer memori access part load store along address pre diction place loadstor buffer includ loadstor buffer valid hardwar valid predict address result address computa tion set regist provid hold livein predic tion along hardwar valid predict valu receiv trace figur process element detail instruct readi issu operand becom avail livein valu may alreadi avail global regist file not livein may predict valu buffer instruct case instruct continu monitor result buse arriv new valu operand memori access oper continu monitor arriv new comput address associ function unit queue hold complet result instruct issu block result held wait result bu result may local valu onli liveout valu onli both case local global result buse arbitr separ global result buse correspond directli write port global regist file character two number total number buse number buse pe arbitr cycl memori buse correspond directli cach port character similarli misspecul section introduc model handl misspecul instruct reissu detect mispredict select reissu depend instruct follow natur receipt new valu section describ mechan detect variou kind mispredict mispredict livein livein predict valid comput valu seen global result buse instruct buffer store buffer monitor compar output correspond livein predict use predict comput valu match instruct use predict livein reissu otherwis reissu case valid latenc appear mispredict penalti absenc specul instruct may issu sooner memori depend address misspecul memori system figur compos data cach structur buffer specul store data distribut loadstor buffer pe memori buse connect them trace dispatch load store assign sequenc number sequenc number indic program order memori oper window store buffer may organ like cach integr part data cach import thing mechan must exist buffer specul memori state maintain multipl version memori locat figur abstract memori system handl store store first issu memori suppli address sequenc number data one memori buse store buffer creat new version memori address buffer data multipl version order via store sequenc number store must reissu receiv new comput address must first undo state old address perform store new address transact initi store send old address new address sequenc number data one memori buse loadstor buf fu fu tag valu tag valu global buffer issu issu file reg file reg local result buse agen result store data fu fu global result buse d port buse addrdata livein valu pred pe global memori buse datan data address multipl version store must reissu receiv new data simpli perform address handl load load send address sequenc number memori system multipl version locat exist memori system know version return compar sequenc number load suppli data sequenc number store creat version thu load maintain two sequenc number data load must reissu receiv new comput address simpli reissu memori system new address load snoop store traffic store address sequenc number load must reissu store address match load address store sequenc number less load store sequenc number greater load data true memori depend violat load must also reissu store sequenc number simpli match sequenc number load data take care store chang address a fals depend exist store load send new data concern control mispredict convent processor branch mispredict caus subsequ instruct squash how ever instruct controldepend mispredict need squash least three thing must done exploit control independ trace processor first instruct fetch wrong path must replac second although instruct necessarili replac remain may still reissu chang regist depend third store wrong path must undo specul state memori system trace repredict sequenc use select control squash detect control mispredict within trace trace subsequ pe automat squash instead frontend repredict re dispatch trace resid trace id check repredict trace id partial ie common prefix total match instruct beyond match need replac replac regist depend may chang global regist name instruct resid trace check new trace instruct differ pick new name reissu follow exist issu mechan approach treat instruct like data valu individu valid store remov window alreadi perform must first issu memori again undo transact perform describ previou section load falsedepend store snoop store thu reissu remov ad loadsstor window caus sequenc number problem sequenc number base pe buffer simul environ detail simul use evalu perform trace processor comparison superscalar processor also simul simul develop use simplescalar simul platform platform use mipslik instruct set no delay branch come gccbase compil creat binari tabl fix paramet benchmark primari simul use hybrid tracedriven executiondriven approach control flow simul tracedriven function simul gener true dynam instruct stream stream feed processor simul processor explicitli fetch instruct wrong path due control mi specul data flow simul complet latenc cycl fetch trace predictor see section valu predictor see section trace cach total trace trace line size instruct branch pred predictor k bit sat counter tag bit hyst instr cach line instruct way interleav miss global phi reg unlimit function unit n symmetr fullypipelin fu for nway issu memori unlimit specul store buffer d line size byte unlimit outstand miss exec latenc address gener memori integ alu oper latenc valid latenc compress modifi make singl pass benchmark input dataset instr count compress e million gcc o genrecogi million go million ijpeg vigoppm million queen million executiondriven essenti accur portray data misspecul model exampl instruct reissu due receiv new valu load may pollut data cach or prefetch wrong address extra bandwidth demand observ result buse etc state abov default control sequenc model control mispredict caus new trace brought processor resolv aggress control flow model investig section accur measur select control squash fulli executiondriven simul develop consider slower hybrid approach appli section simul faith model frontend pe memori system depict figur respec tive model paramet invari simul shown tabl tabl also list five spec integ benchmark use along input dataset dynam instruct count full run primari perform result section perform trace processor convent superscalar processor present without data predict differ superscalar simul trace processor simul superscalar central execut engin hardwar frontend memori system ident thu superscalar benefit trace predictor trace cach reduc renam complex select reissu due memori depend violat experi tabl focu three paramet window size issu width global result bypass latenc trace processor pe simul pe hold trace instruct convent superscalar processor window size rang instruct simul curv label model name trace ss superscalar follow total window size point curv repres vari issu width case trace proce sor aggreg issu width trace processor curv come pair one assum extra latenc bypass valu process element assum one extra cycl superscalar penal result bypass local fetch bandwidth local global result buse cach buse chosen commensur configura tion issu width window size note window size refer inflight instruct includ complet yet retir retir width equal issu width superscalar entir trace retir trace processor graph figur first encourag result benchmark show ilp increas nice window size issu bandwidth processor model except compress go exhibit poor control predict accuraci absolut ipc also encourag exampl larg trace processor averag instruct per cycl gcc extra cycl transfer global valu notic perform impact order also notic crossov point trace processor curv exampl t way per pe perform better t way per pe low issu width better augment issu capabl add pe superscalar versu trace processor one way compar two processor fix total window size total issu width is central instruct window happen divid window equal partit dedic equal slice issu bandwidth partit question focus effect load balanc load balanc ipc trace processor approach superscalar processor exampl consid two point gcc jpeg xlisp graph t way per pe ss way ipc perform differ effect load balanc also trace processor instruct buffer underutil due small trace instruct buffer freed discret chunk comparison rather arbitrari suggest equival base total issu width realiti total issu width lack mean context trace processor realli need comparison method base equival complex ie equal clock cycl one measur complex issu complex goe product window size issu width equival measur compar two previou datapoint invalid superscalar processor much complex x versu x unfortun one measur processor complex instead take approach demonstr philosophi next gener processor take smallscal superscalar processor maxim perform use highlyoptim processor replic it take advantag hierarch organ word goal increas ipc keep clock cycl optim constant last graph figur interpret data gcc philosophi suppos start superscalar processor instruct window way issu basic build block success add copi form trace processor assum penalti one pe extra cycl bypass valu pe might account global result bu figur trace processor superscalar processor ipc note bottomright graph deriv adjac graph indic arrow interpret data differ way tabl experi pe window size or fetchdispatch bw number pe issu bw per pe total issu bw local result buse global result buse global buse use cach buse use ipc total issu width t ipc total issu width t ipc total issu width t ipc total issu width t ipc total issu width t ipc number pe gcc way issu way issu way issu arbitr global bypass latenc extra wakeup logic snoop global result tag buse one might roughli argu complex ie cycl time remain rel constant success pe gcc way issu per pe ipc progress improv pe pe pe ad structur valu predict section present actual potenti perform result trace processor configur use data predict chose configur pe way issu extra cycl bypass valu global result buse experi explor real perfect valu pre diction confid time valu predictor updat bar benchmark figur first four bar real valu predict label r first r denot real predict second qualifi denot confid model r real confid say use predict mark confid predictor oracl confid say use valu correctli predict third qualifi denot slow s immedi i updat predictor last three bar graph perfect valueno address predict pv perfect addressno valu predict pa perfect valu address predict p figur perform data predict rightmost bar perfect predict potenti perform improv data predict signif icant around benchmark three benchmark benefit twice much address predict valu predict shown papv bar despit data predict potenti two benchmark gcc xlisp show notic actual improv howev keep mind data valu predict stage signific engin remain done still much explor predictor design space although gcc xlisp show good improv less quarter potenti improv gcc confid mechan fault oracl confid make differ xlisp hand show oracl confid half potenti improv achiev unfortu nate xlisp perform poorli term let incorrect predict pass confid first graph figur show number instruct squash fraction dynam instruct count first two bar without valu predict last two bar valu predict denot v first two bar show number load squash store depend misspecul total number squash result due cascad reissu instruc tion livein address misspecul add total last two bar xlisp reissu rate explain show less perform improv gcc despit higher accuraci second graph show distribut number time instruct issu window figur statist select reissu aggress control flow section evalu perform trace processor capabl exploit control independ instruct control depend branch mispredict squash instruct whose regist depend chang select reissu describ section accur measur control flow model requir fetch instruct wrong path primarili captur data depend may exist path reason use fulli executiondriven simul section trace processor pe way issu per pe two benchmark show signific improv ipc compress jpeg benchmark frequent travers small loop contain simpl reconverg control flow also import small loop fix number iter allow processor captur trace beyond loop valu predict perform result compress gcc go jpeg xlisp benchmark improv base ipc rr rri ro roi pa number time issu fraction dynam instr jpeg compress go gcc xlisp comp gcc go jpeg xlisp instruct squash rate load squash total load squash v total v conclus trace processor exploit characterist trace effici issu mani instruct per cycl trace data characterist local versu global valu suggest distribut execut resourc trace level way overcom complex limit also suggest interest applic valu predict name predict intertrac depend further treat trace unit control predict result effici high accuraci control predict model initi evalu trace processor without valu predict show encourag absolut ipc valu eg gcc reaffirm ilp exploit larg program complex control flow isol perform impact distribut execut resourc base trace boundari demonstr overal perform valu replic fast smallscal ilp processor hierarchi trace processor structur valu predict show promis although two benchmark show notic perform improv potenti improv substanti benchmark feel good engin valu predict confid mechan increas gain pervas specul next gener processor misspecul handl becom import issu rather treat mispredict afterthought specul discuss data misspecul incorpor exist issu mechan also discuss mechan exploit control independ show sequenti program may benefit acknowledg work support part nsf grant mip us armi intellig center fort huachuca contract dabtc arpa order no d view conclus contain herein author interpret necessarili repres offici polici endors either express impli us armi intellig center fort huachuca us govern work also support graduat fellowship ibm r trace cach low latenc approach high bandwidth instruct fetch critic issu regard trace cach fetch mechan improv superscalar instruct dispatch issu exploit dynam code sequenc es facilit superscalar process via combin staticdynam regist renam scheme valu local specul execut perform potenti data depend specul collaps multiscalar architectur multiscalar pro cessor control flow specul multiscalar processor dynam specul synchron data depend anatomi regist file multiscalar processor data memori altern multiscalar processor superscalar alpha processor out oford execut hardwar support larg atom unit dynam schedul machin exploit instruct level parallel processor cach schedul group increas instruct fetch rate via blockstructur instruct set ar chitectur predict data valu assign confid condit branch predict arba hardwar mechan dynam reorder memori refer limit control flow paral lelism evalu futur mi croprocessor simplescalar toolset tr hardwar support larg atom unit dynam schedul machin limit control flow parallel anatomi regist file multiscalar processor multiscalar architectur facilit superscalar process via combin staticdynam regist renam scheme multiscalar processor trace cach assign confid condit branch predict increas instruct fetch rate via blockstructur instruct set architectur perform potenti data depend specul myampersandamp collaps improv superscalar instruct dispatch issu exploit dynam code sequenc exploit instruct level parallel processor cach schedul group dynam specul synchron data depend complexityeffect superscalar processor pathbas next trace predict predict data valu valu local specul execut control flow specul multiscalar processor ctr lieven eeckhout tom vander aa bart goeman han vandierendonck rudi lauwerein koen de bosscher applic domain fixedlength block structur architectur australian comput scienc commun v n p januari peter g sasson d scott will scale atla chipmultiprocessor ieee transact comput v n p januari bing luo chri jesshop perform microthread pipelin australian comput scienc commun v n p januaryfebruari independ trace processor proceed nd annual acmiee intern symposium microarchitectur p novemb haifa israel yiannaki sazeid jame e smith limit data valu predict intern journal parallel program v n p aug haitham akkari michael a driscol dynam multithread processor proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state avinash sodani gurindar s sohi understand differ valu predict instruct reus proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state venkata krishnan josep torrella need fast commun hardwarebas specul chip multiprocessor intern journal parallel program v n p februari amirali baniasadi balanc clusteringinduc stall improv perform cluster processor proceed nd confer comput frontier may ischia itali sriram vajapeyam p j joseph tulika mitra dynam vector mechan exploit farflung ilp ordinari program acm sigarch comput architectur new v n p may s subramanya sastri subbarao palacharla jame e smith exploit idl floatingpoint resourc integ execut acm sigplan notic v n p may venkata krishnan josep torrella hardwar softwar support specul execut sequenti binari chipmultiprocessor proceed th intern confer supercomput p juli melbourn australia steven k reinhardt shubhendu s mukherje transient fault detect via simultan multithread acm sigarch comput architectur new v n p may quinn jacobson jame e smith trace preconstruct acm sigarch comput architectur new v n p may pedro marcuello jordi tubella antonio gonzlez valu predict specul multithread architectur proceed nd annual acmiee intern symposium microarchitectur p novemb haifa israel yiannaki sazeid jame e smith model program predict acm sigarch comput architectur new v n p june sanjay jeram patel mariu ever yale n patt improv trace cach effect branch promot trace pack acm sigarch comput architectur new v n p june brian field shai rubin rastislav bodk focus processor polici via criticalpath predict acm sigarch comput architectur new v n p may amirali baniasadi andrea moshovo instruct distribut heurist quadclust dynamicallyschedul superscalar processor proceed rd annual acmiee intern symposium microarchitectur p decemb monterey california unit state narayan ranganathan manoj franklin empir studi decentr ilp execut model acm sigplan notic v n p nov ramon canal antonio gonzlez lowcomplex issu logic proceed th intern confer supercomput p may santa fe new mexico unit state t n vijaykumar sridhar gopal jame e smith gurindar sohi specul version cach ieee transact parallel distribut system v n p decemb dana s henri bradley c kuszmaul gabriel h loh rahul sami circuit widewindow superscalar processor acm sigarch comput architectur new v n p may artur klauser abhijit paithankar dirk grunwald select eager execut polypath architectur acm sigarch comput architectur new v n p june ryan rakvic bryan black john paul shen complet time multipl branch predict enhanc trace cach perform acm sigarch comput architectur new v n p may amir roth gurindar s sohi regist integr simpl effici implement squash reus proceed rd annual acmiee intern symposium microarchitectur p decemb monterey california unit state bryan black bohuslav rychlik john paul shen blockbas trace cach acm sigarch comput architectur new v n p may ivn martel daniel ortega eduard ayguad mateo valero increas effect ipc exploit distant parallel proceed th intern confer supercomput p june rhode greec young michael d smith better global schedul use path profil proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state ramon canal joanmanuel parcerisa antonio gonzlez dynam code partit cluster architectur intern journal parallel program v n p februari efe yardimci michael franz dynam parallel map binari execut hierarch platform proceed rd confer comput frontier may ischia itali pedro marcuello antonio gonzlez jordi tubella specul multithread processor proceed th intern confer supercomput p juli melbourn australia joanmanuel parcerisa antonio gonzlez reduc wire delay penalti valu predict proceed rd annual acmiee intern symposium microarchitectur p decemb monterey california unit state craig zill gurindar sohi masterslav specul parallel proceed th annual acmiee intern symposium microarchitectur novemb istanbul turkey ramon canal antonio gonzlez reduc complex issu logic proceed th intern confer supercomput p june sorrento itali aneesh aggarw manoj franklin scalabl aspect instruct distribut algorithm cluster processor ieee transact parallel distribut system v n p octob steven e raasch nathan l binkert steven k reinhardt scalabl instruct queue design use depend chain acm sigarch comput architectur new v n may gabriel loh timestamp algorithm effici perform estim superscalar processor acm sigmetr perform evalu review v n p june yuan chou jason fung john paul shen reduc branch mispredict penalti via dynam control independ detect proceed th intern confer supercomput p june rhode greec freddi gabbay avi mendelson effect instruct fetch bandwidth valu predict acm sigarch comput architectur new v n p june pedro marcuello antonio gonzlez jordi tubella thread partit valu predict exploit specul threadlevel parallel ieee transact comput v n p februari aneesh aggarw manoj franklin instruct replic reduc delay due interp commun latenc ieee transact comput v n p decemb vika agarw m s hrishikesh stephen w keckler doug burger clock rate versu ipc end road convent microarchitectur acm sigarch comput architectur new v n p may ramadass nagarajan karthikeyan sankaralingam doug burger stephen w keckler design space evalu grid processor architectur proceed th annual acmiee intern symposium microarchitectur decemb austin texa antonia zhai christoph b colohan j gregori steffan todd c mowri compil optim memoryresid valu commun specul thread proceed intern symposium code gener optim feedbackdirect runtim optim p march palo alto california jeffrey opling monica s lam enhanc softwar reliabl specul thread acm sigplan notic v n octob sangyeun cho penchung yew gyungho lee access region local highbandwidth processor memori system design proceed nd annual acmiee intern symposium microarchitectur p novemb haifa israel pedro marcuello antonio gonzlez cluster specul multithread processor proceed th intern confer supercomput p june rhode greec sanjay jeram patel daniel holm friendli yale n patt evalu design option trace cach fetch mechan ieee transact comput v n p februari brian fah satarupa bose matthew crum brian slechta francesco spadini toni tung sanjay j patel steven s lumetta perform character hardwar mechan dynam optim proceed th annual acmiee intern symposium microarchitectur decemb austin texa sangyeun cho penchung yew gyungho lee decoupl local variabl access wideissu superscalar processor acm sigarch comput architectur new v n p may alvin r lebeck jinson koppanalil tong li jaidev patwardhan eric rotenberg larg fast instruct window toler cach miss acm sigarch comput architectur new v n may hoseop kim jame e smith instruct set microarchitectur instruct level distribut process acm sigarch comput architectur new v n may mladen berekov tim niggemei distribut simultan multithread smt processor cluster schedul window scalabl dsp perform journal signal process system v n p februari venkata krishnan josep torrella chipmultiprocessor architectur specul multithread ieee transact comput v n p septemb joanmanuel parcerisa antonio gonzalez improv latenc toler multithread decoupl ieee transact comput v n p octob michael gschwind kemal ebciolu erik altman sumedh sathay binari translat architectur converg issu ibm system proceed th intern confer supercomput p may santa fe new mexico unit state balasubramonian sandhya dwarkada david h albonesi dynam alloc processor resourc nearbi distant ilp acm sigarch comput architectur new v n p may rajagopalan desikan simha sethumadhavan doug burger stephen w keckler scalabl select reexecut edg architectur acm sigplan notic v n novemb sangjeong lee penchung yew augment trace cach highbandwidth valu predict ieee transact comput v n p septemb trace cach microarchitectur evalu ieee transact comput v n p februari andrea moshovo gurindar s sohi reduc memori latenc via readafterread memori depend predict ieee transact comput v n p march lucian codrescu steve nugent jame meindl d scott will model technolog impact cluster microprocessor perform ieee transact larg scale integr vlsi system v n p octob jame r laru whole program path acm sigplan notic v n p may smruti r sarangi wei liu josep torrella yuanyuan zhou reslic select reexecut longretir misspecul instruct use forward slice proceed th annual ieeeacm intern symposium microarchitectur p novemb barcelona spain r gonzlez a cristal m perica m valero a veidenbaum asymmetr cluster processor base valu content proceed th annual intern confer supercomput june cambridg massachusett sangyeun cho penchung yew gyungho lee highbandwidth memori pipelin wide issu processor ieee transact comput v n p juli troy a johnson rudolf eigenmann t n vijaykumar specul thread decomposit empir optim proceed th acm sigplan symposium principl practic parallel program march san jose california usa lucian codrescu d scott will jame meindl architectur atla chipmultiprocessor dynam parallel irregular applic ieee transact comput v n p januari joanmanuel parcerisa julio sahuquillo antonio gonzalez jose duato onchip interconnect instruct steer scheme cluster microarchitectur ieee transact parallel distribut system v n p februari michel co dee a b weikl kevin skadron evalu trace cach energi effici acm transact architectur code optim taco v n p decemb jung ho ahn mattan erez william j dalli tradeoff data instruct threadlevel parallel stream processor proceed st annual intern confer supercomput june seattl washington roni rosner micha moffi yiannaki sazeid ronni ronen select long atom trace high coverag proceed th annual intern confer supercomput june san francisco ca usa balasubramonian sandhya dwarkada david h albonesi dynam manag communicationparallel tradeoff futur cluster processor acm sigarch comput architectur new v n may j gregori steffan christoph colohan antonia zhai todd c mowri stamped approach threadlevel specul acm transact comput system toc v n p august a mahjur a h jahangir a h gholamipour perform trace local refer perform evalu v n p may engin ipek meyrem kirman nevin kirman jose f martinez core fusion accommod softwar divers chip multiprocessor acm sigarch comput architectur new v n may jun yan wei zhang hybrid multicor architectur boost singlethread perform acm sigarch comput architectur new v n p march michael d smith overcom challeng feedbackdirect optim keynot talk acm sigplan notic v n p juli mladen berekov sren moch peter pirsch scalabl cluster smt processor digit signal process acm sigarch comput architectur new v n p june kevin skadron pritpal s ahuja margaret martonosi dougla w clark branch predict instructionwindow size cach size perform tradeoff simul techniqu ieee transact comput v n p novemb theo unger borut robi jurij ilc survey processor explicit multithread acm comput survey csur v n p march