t iter abstract sather a sather extend notion iter power new way argu iter abstract belong class interfac equal foot routin sather iter deriv clu iter much flexibl better suit objectori program retain properti iter structur ie strictli bound control structur statement motiv describ construct along sever simpl exampl compar iter base clu iter cursor rider stream seri gener coroutin block closur lambda express final describ experi iter sather compil librari b introduct motiv sather objectori languag develop intern comput scienc institut stoutamir omohundro clean simpl syntax parameter class objectori dispatch late bind multipl inherit strong type garbag collect origin deriv eiffel aim achiev perform c without sacrif eleg safeti first version languag sather releas may feedback user use led design sather incorpor number new languag construct articl describ sather iter form iter abstract origin sather fairli convent loop end state ment suffic basic iter task felt need gener construct c sather librari made heavi use cursor author address s murer credit suiss os zurich switzerland email stephanmur skacom s omohundro nec research institut inc independ way princeton nj email omresearchnjneccom d stoutamir intern comput scienc in stitut center street suit berkeley ca email davidsicsiberkeleyedu c szyperski school comput scienc queensland univers technolog gpo box brisban qld australia email cszyperskiquteduau permiss copi without fee part materi grant provid copi made distribut direct commerci advantag acm copyright notic titl public date appear notic given copi permiss acm copi otherwis republish requir fee andor specif permiss c object iter content contain object omohundro lim work quit well certain circumst number problem describ detail section section also describ approach base rider closur stream seri gener coroutin block like languag design clu liskov guttag felt need encapsul common oper iter data structur typic loop such sather loop initi iter variabl repeatedli execut bodi loop updat variabl way test end loop import exampl pattern aris step element contain object code initi updat test iter variabl often complex error prone error initi termin iter fencepost error common code step complex contain hash tabl typic must util detail intern structur contain sometim caus duplic virtual code mani place observ argu make iter oper part interfac contain class rather part code client contain anoth goal iter design allow iter program activ style without explicitli encod control structur state requir cursor iter construct beyond use sather iteratorbas loop construct fit well structur program languag encapsul iter state decoupl separ iter process allow nest name iter initi design deriv iter construct clu languag clu iter like routin except may yield addit return may call head special for loop construct loop execut time iter yield valu upon termin iter loop exit clu iter deal simplest iter situat step element array contain sever limit sather iter remov one iter per loop simpl way step two structur simultan clu no way modifi element clu iter support retriev element structur straightforward way add modifi element iter argument loop invari clean way pass loopvari valu iter want sather iter retain clean design clu iter remov limit similar clu sather iter look like routin except may yield quit instead return call routin sather equival method goldberg robson member function elli stroustrup objectori languag name routin come sather root eiffel meyer sather parlanc method mean either routin iter c eiffel method argument sather pass valu sather iter extend clu iter two import way iter abstract sather delta multipl iter may invok within singl loop may occur express anywher loop restrict loop head allow step multipl structur simultan loop termin soon first iter termin in contrast clu sather provid hot iter argument reevalu time control pass back iter argument may use pass data iter vari iter contrast clu iter may gener sequenc valu argument allow class defin iter modifi success element structur ie consum sequenc valu sather iter argument hot unless declar keyword self never hot rest articl organ follow section introduc sather iter syntax give simpl exampl motiv section describ iter detail section compar iter construct serv similar purpos section describ experi iter sather compil librari exampl sather loop statement simpl form loop end iter may call within loop statement iter call bodi execut either quit yield yield return valu return loop execut continu routin call execut state iter maintain howev next call iter transfer control statement follow yield local variabl argument retain previou valu iter quit instead yield loop immedi broken execut continu statement follow loop order abl distinguish visual iter routin call languag requir iter name end exclam mark alert reader place control flow may chang help iter may occur express anywher loop trivial iter everi class automat provid three iter whilebool untilbool break may use obtain sever standard form loop function exampl while defin as whilepredbool yield pred true quit loop pred yield els quit may use obtain standard while do behavior loop whileis delta stephan murer et al while iter take singl boolean argument evalu iter loop long argument evalu true iter yield exampl iter yield without return valu mere use control loop argument evalu fals iter quit break loop place while iter end loop do while form possibl loop note arbitrari placement iter also make easi implement loop singl condit exit middl structur way these socal n loop integ iter integ class int defin number use iter includ upto sather iter and routin implicit argument self denot object routin invok upto iter self type int keep mind self alway implicitli argument iter uptoonc limitintint yield success integ self includ limit loop yield upto iter use place explicit initi increment termin test previou loop exampl sum integ one might say use iter comput kind sum sumsummandintint yield sum previou valu summand loop yield r iter abstract sather delta sum use place explicit initi previou loop valu could instead sum execut loop exampl also show iter use part express like function result yield upto directli use argument sum note loop could written verbos loop iintupto xsumi end contain iter contain class sather librari defin iter yield modifi contain element contain array simpl contain complex implement such hash tabl iter throughout sather compil iter construct use client code appear regardless represent array variables object sather asiz return size current array bracket index express valu asiz gamma serv access array element arrayt class array element type includ follow iter indint yield indic self loop yield uptoas end eltt success yield element self loop yield ind end setxt set element success valu x loop indx yield end also exampl nest iter iter ind gener stream indic use elt set index array nest iter allow format new iter abstract exist one set element array aarrayint constant valu simpli write loop aset end doubl element loop asetaelt end b anoth object type arrayftg copi b stop end shorter two loop bsetaelt end comput sum product element two array use loop xsumaeltbelt end delta stephan murer et al exampl provid set elt composit iter includ spars distribut cf psather murer et al array complex underli data structur although routin access write element separ knowledg whole set contigu element written allow much effici implement correspond iter compar singleel accessor routin consid exampl blockwis distribut matrix central directori point block matric themselv row column iter matrix yield element block consult directori next block contain element row column access row column elementwis requir directori access element turn either lead potenti bottleneck parallel implement requir explicit implement suitabl cach heurist mani class similarli defin iter part interfac exam ple hash tabl abl yield element tree graph iter yield node depthfirst breadthfirst order see inord figur note simpl array iter mere conveni iter complex data structur hidden intern represent indispens tool reason effici abstract detail iter construct previou section inform introduc iter construct element describ precis below begin defin term conclud defin construct use term loop statement control structur delimit use keyword loop end caus repeat execut enclos statement loop termin control iter call within loop iter method method whose name end exclam point iter method invok within loop statement addit construct allow within routin except return statement iter may contain yield quit statement may argument describ below iter call textual call iter within loop statement denot name iter which includ exclam point follow list argument iter call alway bound innermost lexic enclos loop statement argument argument iter method mark keyword definit actual argument pass argument intend chang valu first execut correspond iter call correspond loop statement termin valu obtain first call iter use subsequ call ensur defin iter state loop execut argument use method dispatch self implicitli argument argument allow implement avoid redund evalu correspond iter argument call context hot argument argument iter method mark key word express actual argument evalu everi call iter abstract sather delta yield statement yield statement denot keyword yield may use bodi iter method execut caus control return valu pass back call loop statement resum execut iter call quit statement quit statement denot keyword quit may use bodi iter method execut caus correspond loop statement termin immedi exit bodi iter method consid implicit execut quit statement textual iter call maintain state execut iter loop first enter execut state enclos iter call initi first time iter call encount execut loop argument evalu subsequ call howev argument retain earlier valu express hot argument reevalu iter first call begin execut first statement bodi yield statement execut control pass back caller current valu return paramet ani return subsequ call iter resum execut statement follow yield statement iter execut quit reach end bodi control pass immedi end enclos loop caller case valu return interfac class includ iter equal foot routin routin iter may defin condit compil precondit post condit precondit check call iter postcondit check iter yield quit routin iter may defin abstract class defin interfac compil check conform iter may call objectori dispatch delay particular choic iter runtim allow abstract iter collect without know implement data structur compil time sather provid gener nonresum except construct import interact loop statement except sinc loop statement bound lifetim enclos iter call termin may involv cleanup oper exampl loop exit space alloc iter call must dealloc termin action loop statement consid allow nonloc exit except rais reason sather protect statement which similar tri statement languag may contain iter call also contain surround loop similarli yield permit within protect statement prevent creation dynam protect region overlap instead properli nest time comparison approach discuss way sather iter gener clu iter section compar sather iter cursor rider stream seri gener coroutin closur block delta stephan murer et al gener control structur idea gener iter control structur goe back earli work gener iplv newel tong gener possi biliti list conniv mcdermott sussman conniv includ activ record call frame firstclass object notion pattern generatordefin possibl list trynext use get next valu list special token possibl list caus associ gener invok mean lazili comput list valu gener yield new valu option maintain state aurevoir quit adieu similar yield quit statement sather final use firstclass frame allow gener sideeffect caller environ use simul variabl argument streamconsum iter howev experi hairi control structur conniv found lead unintellig program agre hewitt found that without paraphernalia hairi control structur such possibl list nonloc goto assign valu intern variabl procedur conniv altern hewitt propos lazi evalu use explicit delay pseudofunct lazi evalu allow effect handl multipl recurs data structur also pose particularli difficult problem effici implement common lisp loop macro steel gener iter control structur contain everi iter primit author could imagin somewhat follow pl tradit builtin featur loop claus loop facil languag definit explicitli state there current specifi portabl method user add extens loop facil prevent use loop macro support encapsul datastructurespecif iter procedur cursor rider c iter mention abov cursor object way encapsul iter without addit languag construct rider similar idea introduc oberon wirth gutknecht gener etho szyperski idea defin object point contain class may use retriev success element interfac includ routin creat initi increment test complet attribut cursor object maintain current state iter may simpl singl index array complex travers stack hash tabl record node alreadi visit travers tree graph note elli stroustrup call use cursor object c iter found cursor work quit well certain circumst also becom quit cumbersom requir maintain parallel cursor object hierarchi alongsid contain class hierarchi normal requir explicitli creat garbag collect cursor object cursor semant confus sinc maintain locat contain indefinit period time contain may chang sinc storag associ cursor explicit inconveni use describ nest recurs iter abstract sather delta sieveaprimeintbool siev success prime yield true loop ddividesaprim yield fals els yield sieveaprim primesint yield success prime loop siever yield r end fig siev eratosthen structur cursor explicitli describ implement prevent number import optim inner loop iter avoid problem cursor part contain class itself state iter maintain durat singl loop iter may arbitrarili nest support recurs like routin iter implement manag use storag use stack instead heap unless multipl recurs iter final even though sather languag explicit pointer array iter compil effici code base pointer arithmet stream seri iter also share mani characterist stream abelson et al one class iter form itert return valu argument yield potenti infinit stream valu anoth class form itert singl argument return valu accept potenti infinit stream valu way iter suspend transfer control yield correspond well lazi evalu semant stream main differ iter stream invoc iter must consum one input produc one output iter therefor alway onetoon map within given loop siev eratosthen gener success prime number use show power stream concept abelson et al conceptu simpl algorithm control flow rather complex stream solut base stream take stream argument filter later element divis first element iter allow follow implement cf figur note ddividesaprim exampl predic return true divid aprim without remaind fals otherwis iter siev test stream valu pass yield true first valu stream fals later multipl valu recurs call next higher siev valu feed siev stream integ start lead recurs iter yield true prime number effici pedagog way implement siev eratosthen sather hint express power iter is howev import differ stream iter wherea stream may pass around halfconsum state state iter confin call loop statement even so singl call point within loop possibl suspend iter one loop resum intern state anoth loop variant sather develop univers karlsruh germani satherk goo gener iter introduc firstclass stream object retain state across loop termin common lisp incorpor seri gener gather propos defin iter construct steel construct complex includ larg number builtin oper sather oper may implement iter encapsul class coroutin gener differ approach view iter bodi loop commun sequenti process hoar tightli coupl commun channel form argument result iter sinc neither preemption true parallel execut among iter may model iter loop bodi coroutin wirth precis iter may thought structur coroutin mani languag coroutin call coroutin arbitrari fashion structur program replac undisciplin transfer control goto statement structur loop construct iter structur coroutin respect freedom pass control suspend coroutin may transfer control wait coroutin case iter flow control structur loop statement iter pass control back either point call within call loop end loop initi loop enter signal return break loop coroutin ad restrict alway return caller sometim call gener semicoroutin hierarch coroutin marlin iter share properti howev stream gener activ state bound singl call point within singl loop instead gener may left halfconsum state one point pick anoth mention section possibl iter block closur lambda express tradit iter abstract support objectori languag provid anonym block goldberg robson lambda express abelson et al closur sussman steel contain class provid method appli block part element execut blockbas iter control contain class iter control share iter call loop exampl iter abstract sather delta class treeftg attr privat attr leftright treeftg inordert yield element order voidself loop yield leftinord end yield loop yield rightinord end close inordert yield order void loop yield inord end yield void fringeothertreeftgbool return whether self other carri sequenc fring element loop etclos inord etotherclos inord void return void end ee return fals end return true fig fring problem travers two binari tree inord sequenc determin whether contain element either iter loop bodi may abort iter differ control becom appar tri iter synchron multipl data structur consid task compar element two tree accord preorder travers classic same fring problem defin hewitt simpl solut use iter shown figur iter inord yield tree element proper order use gener techniqu close iter iter closedinord use inord yield sequenc yield void quit indic end structur reach samefring routin step element tree simultan stop determin either tree equal fring differ found one tree shorter fring one tree kept track size closedinord iter would necessari kind situat one structur possibl pass bodi routin one tree execut thu case requir travers multipl structur use block closur impract situat easili handl iter construct approach cannot use clu allow singl iter per loop closur use implement gener multipl gener within common loop use travers multipl structur simultan thi tabl i number iter loop sather compil librari number iter number loop percentag also possibl sather use bound routin bound iter howev cursor closur disadvantag unbound lifetim closur state may compens extens compiletim analysi explicit associ iter loop solv problem syntact summari comparison four construct commonli use iter stream cursor builtin loop construct of common lisp variant complex explicitli pass loop bodi as closur block otherwis main point compar construct sather iter cursor harder use less suitabl compilerbas optim but pass around builtin loop construct gener enough pass closur effect support simultan travers multipl data structur stream particular gener come closest sather iter bound specif loop experi real power iter realli seen context larg system class section describ experi iter freeli distribut sather compil librari last year sather librari contain sever hundr class iter use extens convert sather mani case use iter allow us discov power new abstract interact class much iter bookkeep occur iter definit rather loop mani class becam dramat smaller iterationintens class vector matric sometim drop less onethird former size use iter bodi mani routin could reduc concis singl line code sather compil written entir sather tabl show number iter found loop occur version sather compil librari thousand line code builtin iter break until while count could replac tradit construct languag major use least one nontrivi iter valid import iter code percent use two within loop clu iter could use case howev even case sather iter elimin need distinguish loop header allow iter use directli express simplifi code clu iter allow hot argument possibl express iter set loop percent use one iter summari base suggest one anonym refere iter abstract sather delta hot argument could express clu cursor object languag problem semant usual defin contain modifi iter sather iter problem mani iter librari fail underli data structur modifi present way compil detect situat insert extra runtim check also problemat one must defin condit indic misus contain iteratorsfor exampl set flag iter check whenev contain modifi psather the parallel extens sather concurr system gener one ensur readerwrit lock appropri data structur solut tediou error prone fortun experi bug arisen frequent practic although may hold true novic sather programm believ posit observ larg due structur natur iter guarante limit lifetim iter state iter power construct possibl write obscur hardto understand code use them siev eratosthen figur exampl thi novic misunderstand iter call share state simpli name exampl code loop print two ident column element self rather element distribut two shorter column anoth pitfal failur forese follow code foo evalu one time set set actual termin loop loop bsetfoo end although seen misconcept aris number individu learn sather need explain onc final although sather support higherord function henc program applic style found iter often provid cleaner solut iter provid conveni lingua franca transmit data dispar data structur without alloc space intermedi contain object array link list conclus present sather iter new approach encapsul iter shown sever simpl exampl use iter elimin common error combin initi progress termin one abstract need manag client code iter proven use practic use extens standard sather librari well user code found use iter code becom simpler easier read less error prone interfac class becom concis satherk latter could express reus stream object call delta stephan murer et al cursor class abolish excit simplic power iter bring sather feel languag design could benefit well sather document compil librari avail httpwwwicsiberkeleyedusath acknowledg mani peopl involv sather design discuss ari huttunen particular made suggest improv design iter jerri feldman chucheow lim heinz schmidt also made use suggest furthermor would like thank ur holzl robert griesem care read provid valuabl comment structur articl last least anonym review would like thank numer comment led substanti improv revis version articl r structur interpret comput program annot c view control structur pattern pass messag commun sequenti process abstract specif program develop coroutin program methodolog conniv refer manual artifici intellig memo psather layer extens objectori languag effici parallel comput introduct inform process languag v paper p sather languag librari sather insight etho objectorient oper system project oberonth design oper system compil revis octob tr smalltalk languag implement commun sequenti process abstract specif program develop structur interpret comput program annot c refer manual common lisp languag nd ed project oberon objectori softwar construct nd ed coroutin interpret extend lambda calculu ctr stephen m watt techniqu gener iter optim proceed acm sigplan workshop gener program septemb portland oregon usa marcel weiher stphane ducass higher order messag proceed confer dynam languag symposium p octob san diego california jed liu aaron kimbal andrew c myer interrupt iter acm sigplan notic v n p januari m l hine n t carneval neuron simul environ neural comput v n p aug peter h frhlich andrea gal michael franz support softwar composit program languag level scienc comput program v n p april karsten weih softwar engin perspect algorithm acm comput survey csur v n p march dougla gregor sibyl schupp stllint lift static check languag librari softwarepractic experi v n p march