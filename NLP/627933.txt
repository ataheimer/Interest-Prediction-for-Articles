t declust loadbalanc method parallel geograph inform system a abstractdeclust loadbalanc import issu design highperform geograph inform system hpgi central compon mani interact applicationssuch realtim terrain visual current literatur provid effici method declust spatial pointdata howev littl work toward develop effici declust method collect extend object like chain lineseg polygon paper focu datapartit approach parallel gi oper provid framework declust collect extend spatial object identifi follow key issu workload metric spatialext workload distribut workload spatialext declust method identifi experiment evalu altern issu addit also provid framework dynam balanc load differ processor experiment evalu propos declust loadbalanc method distribut memori mimd machin cray td experiment result show spatialext workload metric import issu develop declust method experi also show replic data usual need facilit dynam loadbalanc sinc cost local process often less cost data transfer extend spatial object addit also show effect dynam loadbalanc techniqu improv use declust method determin subset spatial object transfer runtim b introduct high perform geograph inform system hpgi central compon mani interact applic like realtim terrain visual situat assess spatial decis make geograph inform system gi often contain larg amount geometr featur data eg locat elev soil type etc repres larg set point chain lineseg polygon data often access via rang queri mapoverlay queri exist sequenti method support gi oper meet realtim requir impos mani interact applic henc parallel gi essenti meet high perform requir sever realtim applic gi oper parallel either functionpartit data partit functionpartit use special data structur eg distribut data structur algorithm may differ sequenti counterpart datapartit techniqu divid data among differ processor independ execut sequenti algorithm processor datapartit turn achiev declust spatial data static declust method fail equal distribut load among differ processor loadbal may improv redistribut part data idl processor use dynam loadbalanc dlb techniqu paper focu parallel rangequeri oper gi data use datapartit approach applic domain realtim terrain visual realtim terrainvisu system environ let user navig interact threedimension comput gener geograph environ realtim like virtual environ visual system distribut interact simul system type system three major compon interact d graphic gi figur show differ compon terrain visual system typic flight simul hpgi compon system contain secondari storag unit store entir geograph databas main memori store data relat current locat simul graphic engin receiv spatial data hpgi compon transform data d object sent display unit user move terrain part map visibl user chang time graphic engin fed visibl subset spatial object given locat user viewport graphic engin transform user viewport rang queri send hpgi unit exampl figur show polygon map rang queri polygon map shown dot line rang queri repres rectangl result rang queri shown solid line hpgi unit retriev visibl subset spatial data main memori comput geometr intersect current viewport user send result back graphic engin frequenc oper depend speed user move terrain exampl terrain visual flight simul new rang queri may gener twice second leav less half second intersect comput typic map use applic contain ten thousand polygon ie million edg rangequeri size total map requir million intersectionpoint comput less half second order meet responsetim constraint hpgi often cach subset spatial data main memori mainmemori databas may turn queri secondarystorag databas get subset data cach frequenc oper small cach effect secondari storag main memori graphic analysi display sec feed back view rangequeri sec kmxkm set polygon secondari storag rang queri set polygon engin high perform gi compon databas databas figur compon terrainvisu system figur sampl polygon map rangequeri problem formul rangequeri problem gi state follow given rectangular queri box b set sp extend spatial object eg polygon chain line segment result rang queri sp given set whereomega give geometr intersect two extend object call problem gisrangequeri problem gisrangequeri problem three main compon i approxim filter polygon level ii intersect comput iii polygon result see detail discuss sequenti algorithm note problem differ tradit rang queri object given rang retriev secondari memori disk main memori without clip object similar polygonclip problem comput graphic exist sequenti solut rangequeri problem cannot alway directli use solut gisrangequeri problem due high perform requir mani applic exampl limit respons time ie half second shown figur solv gisrangequeri problem allow process map polygon or edg mani latest processor avail today like ibm rs dec alpha hz processor howev map use mani hpgi applic least order magnitud larger simpl map henc need consid parallel process deliv requir perform paper focu parallel gisrangequeri problem set processor meet high perform requir impos typic hpgi applic goal parallel achiev minimum possibl respons time set rang queri use data partit declust dynam loadbalanc parallel sequenti algorithm gisrangequeri problem figur describ step scheme bound box initi broadcast processor processor execut sequenti gisrangequeri algorithm local set polygon process local data processor check load imbal seek work anoth processor yet finish work dlb method use transfer work processor runtim partit apprx filter comput apprx filter comput polygon result polygon result intersect comput intersect comput get next bbox figur differ modul parallel formul relat work contribut declust loadbalanc import issu parallel typic hpgi oper like rangequeri mapoverlay oper sever research use declust loadbalanc toward parallel tradit rangequeri problem kamel faloutso use local loadbalancingbas data declust maxim throughput rang queri dataset consist twodimension rectangl zhou et al describ mappingfunctionbas declust method parallel grid file context tradit rang queri brunetti et al use rowwis divis twodimension regular grid parallel algorithm character terrain data armstrong et al use rowwis partit d grid parallel algorithm determin spatial associ measur point data shown custom declust techniqu base spacedivis map function proximitybas local loadbal similar graphpartit need effect partit spatial data case uniformli distribut point data shown static declust often adequ achiev good loadbal formal method well experiment studi howev effect declust set extend object receiv adequ attent literatur case extend spatial object staticdeclust method alon might enough achiev good loadbal case static partit dlb techniqu use wang use dynam alloc work differ level eg polygon edg mapoverlay comput addit sever dynam loadbalanc method develop loadbalanc differ applic datapartit mapoverlay spatialjoin access method relat work present paper declust dynam loadbalanc extend spatialdata receiv adequ attent literatur paper focu static datadeclust dynam loadbalanc method parallel gisrangequeri problem set extend object like lineseg polygon provid framework declust collect extend spatial object identifi follow issu i workload metric ii spatial extent object workload iii distribut workload spatial extent object iv declust method addit also provid framework dynam loadbalanc gi oper identifi issu i work transfer method ii identifi donor processor iii granular work transfer identifi experiment evalu altern issu rang queri oper use vector data killeen texa experi carri cray td distribut memori mimd machin consist decalpha hz processor interconnect d toru network show tradit declust method multidimension point data need signific extens applic extend spatial data also show neither declust dynam loadbalanc alon suffici achiev good speedup beyond proce sor static declust extend spatial data hard due highli nonuniform data distribut well great variat size extent spatial data experi show spatialext workload metric import measur develop declust method show data replic often need dynam loadbalanc cost local process usual less cost data transfer extend object addit experiment result also show effect dynam loadbalanc techniqu improv use declust method determin subset spatial object transfer runtim scope outlin paper figur show two type queri first queri retriev data secondari storag main memori second queri kmxkm retriev data main memori graphic engin paper focu latter type rangequeri data assum main memori sever techniqu like preprocess spatial data use reduc sequenti cost gisrangequeri problem cost rangequeri process also reduc note consecut rangequeri may spatial overlap previou rangequeri case new rang queri consid increment previou rang queri henc increment rang queri method use solv problem increment rangequeri express combin one smaller rangequeri gisrangequeri problem also solv use precomput result thi fine grid laid top data intersect spatial object grid cell comput store main memori sinc everi rangequeri combin grid cell intersect result gridcel make rangequeri retriev sent graphic engin hand case datapartit approach larg object may decompos smaller object improv loadbal among differ processor thu increas effici solut two approach result increas total work graphic engin process object amount time cost render graphic engin also increas increas number polygon addit decomposit object requir memori store object hand smaller piec merg singl object rangequeri oper merg result increas total work hpgi compon merg smaller object increas total work exampl figur show differ combin partit polygon data smaller set combin group four type type divis data type ii divid set polygon subset polygon howev polygon treat atom unit subdivis polygon level allow contrast type iii divid area individu polygonsboundingbox among differ processor type iv scheme divid area edg individu polygon bound box potenti advantag type iii iv scheme type ii scheme possibl better loadbal less processor idl result reduc parallel comput time howev note type iii iv scheme result either increas total work increas work polygon result option divid bound subset subset divis divid divid edg ivd iiia iiid ive ivc small box polygon small polygon subset edg ii iva iiic iiib ivb ivf option divid polygon data figur altern polygonboundingbox divis among processor let tcomm responsetim overhead due addit commun cost increas cost polygon result polygon type iii iv scheme gain parallel comput time due improv loadbalanc bound differ ideal valu t seq p actual tp valu achiev type ii scheme net gain respons time type iii iv scheme type ii scheme bound t p scheme ii tseq gain posit polygons distribut extrem skew lead high load imbal type ii scheme even though techniqu potenti increas loadbal respons time gisrangequeri consid techniqu paper rest paper focu type ii scheme rest paper organ follow section discuss issu declust extend spatial data section present experiment result differ issu declust spatial data section discuss dynam loadbalanc issu gi section present experiment result dlb issu gi final section present conclus futur work declust spatial data goal declust method partit data partit impos exactli load rang queri intuit polygon close scatter among differ processor rang queri everi processor equal amount work exampl consid raster represent set spatial vector object d plane suppos point raster represent associ workload vector object pass point consid distribut workload associ point exampl distribut might look like surfac shown figur consid anoth distribut dp scale version distribut d factor p suppos set declust p subset subset assign differ processor p subset workload distribut dp workload impos queri equal processor henc datapartit achiev goal optim declust p subset distribut distribut d_p figur exampl workload distribut p optim declust achiev case due nonuniform distribut variabl size polygon or chain lineseg addit load impos polygon or chain queri oper function size locat queri sinc locat queri known priori hard develop strategi optim queri gener exist algorithm achiev ideal declust d rangequeri processor even case possibl achiev ideal declust hard determin partit sinc declust problem nphard shown below definit optim version gisdeclust problem given set extend object p processor set n rangequeri partit set among p processor load processor balanc q q load object x given rangequeri q given function f set nonneg integ definit decis version gisdeclust problem given set extend object p processor set n queri partit set p subset theorem gisdeclust problem nphard proof reduc partit problem gisdeclust problem instanc partit problem defin follow given finit set size sa a subset that sa problem transform polynomi time instanc decis version gisdeclust problem henc conclud gisdeclust problem nphard sinc declust problem nphard heurist method use practic declust extend spatial data section identifi issu declust set extend spatial object develop heurist method declust map extend object issu declust spatialdata three major issu declust set extend spatial object workload metric spatialext workload loaddens spatialext workload metric load impos spatial object function shape extent object case point data load may uniform ie spatial point case chain lineseg load may function number edg case polygon load may function number edg andor area polygon exampl number edg increas work rang queri also increas due increas intersect point comput increas size result similarli increas area polygon with number edg fix result rang queri intersect polygon case extend spatial object a either area number edg actual intersect point queri boundari use estim workload denot loada a note extend spatial data accur method estim amount work actual solv problem number edgespoint spatial object may accur reflect amount work requir object particular rang queri get rough estim work workload metric spatial extent workload spatial extent workload defin region ra space affect object a ie queri q overlap ra work requir process q influenc object a usual ra depend space occupi object a howev often expens use exact geometri spatial object estim extent object thu approxim geometri consid estim spatial extent spatialext ra often approxim approxim point approxim box approxim n box exampl bba smallest rectangular box enclos object repres two corner function may defin as figur show exampl polygon differ approxim extent workload figur also show sampl rang queri dot line polygon approxim point shown middl polygon main drawback point approxim even though object region interest eg q might still consid outsid point lie outsid region shown case polygon a altern bound box approxim use shown figur polygon a b c e drawback approxim even though polygon region interest bound box might still region interest shown polygon e altern multipl bound box may use repres polygon shown polygon d note even though greater number bound box give better represent spatial extent work also expens construct kind represent c queri q_ figur exampl approxim extent workload load densiti spatial extent case extend object distribut or densiti workload spatial extent affect declust decis expens determin actual workload distribut approxim distribut uniform distribut may use instead actual distribut approxim distribut work determin consid multipl bound box divid region small cell count work cell exampl case polygon b shown figur clip load denot clip loadb correspond queri q shown dot line estim differ way assum workload distribut polygon uniform bound box polygon b comput clip load as clip loadb areabbb theta loadb note work estim may inaccur case exampl edgebas workload metric coupl assum uniform workload distribut overestim work requir polygon c rangequeri q areabas workload metric coupl uniform workload distribut overestim work requir polygon e rangequeri q declust method sinc declust problem nphard heurist method use declust spatial data here describ three heurist method base idea spacepartit map local loadbal similaritygraph addit propos new popul distributionbas declust method declust spatial data simplic describ method polygon data appli extend spatial object well spacepartit map function spacepartit mappingfunctionbas method provid map function domain data item set processor id exampl map function base hilbert spacefil curv see survey map function hilbert curv give total order point dimension space polygon declust use hilbert method follow let l set input object let l p order list polygon correspond hilbert order set let n number polygon list polygon list assign processor cyclic manner is polygon list l p indic assign ith processor local loadbal llb method local loadbalanc method consid sampl window space base frequent rang queri tri equal distribut load window processor local loadbal method paramet window w follow step i set polygon assign first p polygon p processor ii next polygon list consid load correspond window w processor select processor minimum load iii assign next polygon processor repeat step ii iii polygon assign step ii method processor minimum load select follow let clip loadp j w p j processor i select processor k weightw i minimum similaritygraph method similaritygraph declust method shown outperform method declust nonuniformli distribut data heurist method base maxcut graphpartit weight similaritygraph wsg wsg model data properti queri case llb method rectangular window w use sampl queri effici wsg construct wrt window w assign clip loadv w tv object v input experiment studi use increment maxcut partit approach declust spatial data see appendix detail similaritygraph declust method appli extend spatialdata popul distributionbas pdb method goal populationdistributionbas declust method achiev ident load distribut partit data discuss exampl populationdistributionbas method declust polygon data basic idea behind method partit data set group similar workload distribut entir space shown figur workload distribut group entir space compar alloc new object group new object alloc group statist differ differ group minim howev track compar two distribut statist differ expens econom less accur method use approxim distribut instead actual workload distribut use pair discret d distribut approxim actual d distribut method use actual intersect point polygon grid consist vertic horizont scanlin impos top polygon data shown figur assum scanlin parallel xaxi scanlin parallel yaxi let fx number intersect point line polygon input similarli let n number intersect point line without loss gener let polygon input distribut polygon among processor alloc first p polygon p processor polygon p assign ith processor next polygon pw determin distribut intersect point assign polygon plu current polygon scale distribut p let distribut basedistribut is base distribut f w similar fx gy figur distributionbas method base distribut contain intersect point polygon differ assign polygon pw p processor estim total popul mismatch due assign total popul mismatch assign estim sum squar differ distribut processor basedistribut select processor correspond minimum popul mismatch processor assign current polygon minim function assign polygon pw given as min current polygon pw temporarili assign lth processor iter minim function f g distribut function correspond f g respect ith processor note f g contain intersect point polygon assign ith processor complex pdb method alloc polygon innermost sum equat take thetanm time sinc sum comput processor take thetap n doubl summat sinc p iter doubl sum ie p iter minim function take total thetap n m time brute forc implement method note two iter minim function four term innermost summat chang processor henc need comput entir sum iter minim function reus rest term previou iter henc first iter minim function iter take constant amount time reduc overal complex pdb method experiment evalu declust issu compar perform differ altern issu declust extend spatial object rang map size differ number processor via experi carri cray td parallel comput use spatial vector data killeen texa experiment studi data divid seven theme repres attribut slope veget surfac materi hydrolog etc use slope attributedata map polygon edg base map experi thi denot x map studi effect increas map size deriv new map base map use follow method scale base map along xaxi two combin two scaleddown map translat one scaleddown map along xaxi result map polygon edg x map similar techniqu use altern scale along yaxi xaxi get map differ size also use chain data fort sill creek edg shown figur tabl show detail map rang queri figur creek data map sampl rang queri tabl map rang queri use experi map object edg rangequeri size number polygon polygon polygon x polygon creek chain experiment methodolog issu declust studi compar perform differ method set rang queri thi sequenc rang queri construct sequenc center point rang queri repres random walk data set postprocess done sequenc ensur rang queri uniqu rangequeri lie complet within map size rang queri approxim total area map measur obtain run time program queri report observ mean valu figur show experiment methodolog number differ option tri paramet shown parenthes number possibl combin modul also shown figur restrict experi due memori limit individu node cray td mbyte main memori limit size map x sequenti runtim measur directli map x adequ work processor beyond p evid absolut runtim sec shown tabl gener workload g spatialext bboxpoint map gener size sampl window loaddens uniform apprx rang queri of rangequeri desir size rangequeri declust workload edg area size map xx xx base declusteringmethod option measur analysi data collect map figur experiment method evalu declust method experi measur analyz cost per rangequeri exclud preprocess cost preprocess cost includ cost load data main memori cost declust data among differ processor note preprocess cost paid data set correspond current window interest queri rang move current window new data fetch disk discard data old window sinc next locat window often predetermin preprocess new data need affect perform rest system moreov new data set load main memori would activ sever minut window move current rang thu would leav sever minut preprocess next data set henc studi interest measur perform algorithm term variabl cost per rang queri preprocess data experiment result conduct experi studi altern follow issu workload metric spatial extent workload load densiti spatial extent addit compar differ declust method local loadbal similaritygraph pdb experi data initi distribut among differ processor processor act leader processor respons broadcast rang queri rest processor receiv rangequeri inform processor work local data local data exhaust local data process processor wait next rang queri process lead processor wait processor finish work broadcast next rang queri note commun requir bound box broadcast paramet rang queri comparison altern workload metric compar area number edg altern workload metric case polygon data spatial extent workload base boundingbox approxim load densiti spatial extent assum uniform thu clip loadpolygonp windoww estim use equat use llb method sampl window declust metric number processor p vari x map use data set result experi shown figur a xaxi give number processor yaxi give averag speedup rang queri main trend observ graph are i number edg workload metric result better speedup henc appear accur workload metric differ two workload metric neglig comparison altern spatialext workload compar point boundingbox approxim altern spatialext workload case polygon data workload metric fix number edg load densiti spatial extent assum uniform use llb method sampl window number processor llb_edge_box llb_area_box number processor llb_edge_box llb_edge_point a b figur speedup llb method x map declust method number processor p rang x map use data set result experi shown figur b xaxi give number processor yaxi give averag speedup rangequeri main trend observ graph are i boundingbox approxim spatial extent result better speedup henc appear accur estim differ two estim neglig comparison differ declust method compar perform differ declust method hilbert llb similaritygraph pdb addit compar effect size sampl window perform similaritygraph llb method simplic workload metric fix number edg spatial extent assum point loaddens spatial extent assum uniform case llb similaritygraph method figur give result show effect sampl window size llb similaritygraph method xaxi give number processor yaxi give averag speedup rangequeri figur llb sim refer llb similaritygraph method sampl window total area map similar notat use window method main trend observ graph are i increas window size give increas speedup ii llb method increas speedup window window neglig figur show comparison differ declust method polygon chain data respect figur xaxi give number processor yaxi give speedup number proceccor sim llb llb sim number proceccor sim lldb lldb sim a b figur speedup llb similaritygraph method differ window size speedup map x x given a b respect valu main trend observ graph are i bigger map lead better speedup scheme probabl due improv loadbal ii similaritygraph pdb method give best speedup among differ method iii speedup better chain data polygon data may due less varianc workload line data compar polygon data iv mappingfunctionbas method like hilbert provid inferior speedup beyond processor v even best declust method provid good speedup processor map use experi comparison static loadbalanc effect declust method achiev loadbal shown tabl data shown tabl repres mean sigma sd rang queri use experi column avg static give averag static execut time processor rang queri column max static give maximum static execut time processor averag rang queri experi observ static declust alon achiev good loadbal static method need augment dynam loadbalanc tabl perform evalu slb method avg static max static speedup sim sigma sigma pdb sigma sigma llb sigma sigma speedup number proceccor hilbert sim llb number proceccor hilbert sim llb pdb a b figur speedup differ staticdeclust method speedup map x x given a b respect dynam loadbalanc dlb techniqu static declust method fail equal distribut load among differ processor loadbal may improv transfer spatial object idl processor use dynam loadbalanc techniqu dlb issu gi typic dynam loadbalanc techniqu address three issu i method good transfer work spatial object two processor ii much work idl processor fetch iii processor idl processor ask work method transfer work extend spatial object larg eg edg averag map killeen texa size requir special data structur solv rangequeri problem henc sometim may expens send complet object data correspond data structur anoth processor solv problem local compar rel cost local process data transfer develop cost model two oper cost comput intersect rang queri q polygon depend whether intersect q not exampl complet insid q detect constant amount time hand intersect q cost intersect comput polygon depend number intersect point size result let p probabl speedup number proceccor hilbert sim llb pdb figur speedup differ staticdeclust method line data polygon intersect least one edg rang queri let x number edg a sequenti cost a given by ff fraction edg actual intersect q c cost one step com putat simplic assum cost intersect comput polygon result linear function ff p x constant c account check boundingbox polygon complet insid complet outsid queri box q sinc test perform use comparison c typic data use experi similarli transfer cost a model linear function number edg x as constant c includ account transfer pack unpack datastructur data associ a typic c assum cost local process cost when gisrangequeri comput valu x small close impli even small object transfer cost local process cost note even relat remain same drawback may overcom select duplic data differ processor exchang object id sinc object id word data result minimum commun overhead data transfer note replic data differ processor result memori overhead partit method granular transfer granular work divis determin much work transfer donor processor idl processor granular may depend size remain work number processor cost work transfer accuraci estim remain work sever strategi like selfschedul factor schedul chunk schedul exist determin amount work transfer also simplest case transfer one piec work time also consid case commun cost neglig small compar averag cost solv rangequeri problem set object chunk singl object may yield best possibl load balanc hand chunk one object suitabl commun cost compar averag cost solv rangequeri problem set object which true distribut memori system case chunk one object desir keep compar amount work chunk loadimbal kept low note problem divid work chunk equal work similar static declust problem even though tradit dlb method use simpl method like random partit round robin etc hypothes loadbal dlb method improv use systemat declust method divid work chunk sinc declust oper expens chunk done static also note that simplic consid dynam variabl size chunk paper processor idl processor ask work method decid processor idl processor ask work discuss analyz method divid two categori poolbas method pbm fix processor avail work idl processor ask fix processor work peerbas method work initi distribut among differ processor idl processor select peer processor work donor use random poll nearest neighbor global round robin grr asynchron local round robin arr poolbas method structur gisrangequeri problem impos limit amount work kept share pool work initi singl processor approxim filter comput rang queri cannot parallel result nonparalleliz work rest processor wait singl processor finish filter comput fetch object intersect comput processor idl avoid initi partit data two part static pool initi static part data declust p set ith processor pool part data assign leader processor processor rang queri processor leader processor start work local data correspond static part leader processor first complet filter pool start work local data correspond static part situat shown figur process s_ dlb process s_p dlb process s_ process s_p dlb apprxfilpool process s_ dlb apprxfilpool process s_ dlb small pool larg pool a b figur small pool may result high static load imbal larg pool may result processor idl processor finish work local data filter step pool part finish processor would wait lead processor finish filter work pool part data shown figur b idl turn result increas run time decreas perform algorithm henc enough work processor filter step pool complet without lead processor idl hand static work processor much static loadimbal high high static loadimbal also result processor idl shown figur a let w total work requir solv rangequeri problem let j fraction total time spent approxim filter ie stage rangequeri comput also let load imbal due static declust data is total work w declust among p processor maximum time taken processor w minimum time taken w further assum p overhead incur due parallel increas total runtim due commun overhead processor idl suppos x fraction total work taken pool data then p ool larg enough overcom static load imbal incur due static part data figur a also filter cost jxw p ool less maximum time correspond static work figur b combin equat get lower upper bound pool size as tabl give sampl upper lower bound x estim use equat parallel overhead assum zero j assum tabl estim lower upper bound pool size lowerbound upperbound peerbas method peerbas method data divid among processor common pool idl processor ask anoth peerprocessor work paper evalu global round robin grr asynchron round robin arr method gisrangequeri problem see complet discuss two algorithm grr singl processor act schedul respons send id next avail processor work request idl processor idl processor request work processor work main drawback scheme schedul processor may becom bottleneck number processor increas experiment studi bottleneck signific number processor rel small ie less arr everi processor maintain local target pointer whenev processor run work use target pointer label donor processor send work request target valu increment modulo p time work request sent processor receiv request work send work request processor otherwis request processor send anoth request next processor given target pointer work receiv donor processor note two method arr method singl processor bottleneck case grr arr method need extra work check termin detect sinc singl sourc inform remain work rang queri henc advantag method grr may offset due terminationdetect overhead gisrangequeri problem perform two method may compar processor framework parallel formul approach use declust static dynam loadbalanc level present gener framework method use declust dlb method discuss far twophas scheme sinc use initi static declust data use addit loadbalanc run time pseudocod gener method given figur follow discuss let p number processor use system initi data declust two set b set use static data object set alloc processor processor alon respons process object is object set never transfer processor dlb phase similarli set b use dynam data object set transfer processor dlb phase call set b share pool data sinc object set share processor dlb phase initi declust data two set done depend desir size share pool polygon number processor in follow section experiment show variat size across differ number processor data static declust p set processor p assign set choic declust method determin number processor type data data distribut data b also static declust x bucket replic processor again note staticdeclust method discuss far use static declust purpos valu x depend size b number processor commun cost henc paramet tune depend data bound box next rang queri receiv design lead processor for exampl processor broadcast boundingbox paramet processor group receiv boundingbox paramet processor p perform approxim polygonlevel filter retriev candid polygon local data set place result set l addit processor perform approxim filter data set b keep result object id dynam set set object id x bucket separ bin processor p independ work data set l object left set processor p finish work data l goe dlb mode mode data dynam set use dynam loadbalanc work transfer transfer bin object id processor algorithm termin dlb method termin var local data array pidset object mapi processor use declust correspond data var global data array pidset object mapi processor use declust correspond data b begin one broadcast pidset bbox phase parallel forpid pidset sequenti algorithmloc datapid goto dlb phase parallel more work object nextobject id next unprocess bucket id sequenti algorithmobject id end figur pseudocod parallel formul experiment evalu dlb method compar differ dlb method appli rangequeri problem set extend spatial object use framework given figur implement parallel rangequeri algorithm experi carri cray td parallel comput use polygon data describ tabl altern dlb issu evalu compar averag perform set rang queri experi similaritygraph method window use static declust method unless mention otherwis simplic number edg use workload metric static declust data similarli spatial extent assum point loaddens assum uniform figur show experiment methodolog evalu dlb issu number differ option tri paramet shown parenthes number possibl combin modul also shown figur messag startup time cray td nano second ie micro second studi effect parallel formul differ commun network simul differ network increas valu sec evalu worktransf strategi worktransf strategi compar basi follow two paramet i averag cost transfer complet object data includ data structur one processor anoth processor ii averag cost solv gisrangequeri after polygonlevel filter singl processor includ cost pack unpack data structur relat polygon filter cost send pack data one processor anoth processor tabl show actual experiment valu randomli chosen rang queri analysi data collect map gener map base size map rang queri size rangequeri measur declust pool size method grrarrpbm option partitioningdeclust method parallel hpgi gener workload rangequeri desir figur experiment method evalu dlb method parallel gisrangequeri polygon data x map tabl also show averag valu rangequeri x map shown equat note consist case gap parallel comput cm ibm sp substanti higher machin result consist analysi shown equat conclud desir transfer complet polygon data processor run time instead polygon id transfer run time facilit select duplic polygon data processor rest experi work transfer alway done transfer object id unless otherwis state tabl cost transfer vs cost solv problem singl processor cost second time sec avg queri declust dlb method experi effect chunk base systemat declust compar random declust dlb method use grr dlb method compar random similar graph llb method declust dynam data declust polygon per chunk figur show experiment result second xaxi give number processor yaxi give averag speedup queri data clear random declust data effect systemat declust achiev good loadbal gisrangequeri problem moreov order method remain static case show systemat declust data improv loadbal also loadbal improv use inform number processor t_ sim llb number processor t_ sim llb rand a b figur speedup differ declust method grr method mapx declust phase evalu granular workalloc dlb compar effect differ chunk size number polygon chunk rang use grr dlb method similaritygraph declust method addit compar effect increas valu decreas size chunk ie increas number chunk experi conduct use x map replic data total data chunk singl polygon usual result best possibl loadbal also result maximum overhead due increas number chunk figur show graph experi valu low chunk singl polygon result best possibl speedup valu increas maximum speedup achiev chunk size singl polygon chunk due increas commun overhead increas number chunk requir exchang messag processor note second typic valu seen mimd messag pass comput like ibm sp effect pool size evalu effect pool size use poolbas method vari number processor vari data file number processor vari data file vari x map x map pool size vari total data note polygon per chunk t_ t_ t_ figur granular worktransf pool refer static declust dlb work transfer done transfer polygon id use one polygon per chunk speedup map_x p p speedup p mapx mapx mapx a b figur speedup differ pool size poolbas method figur show result experi xaxi give size pool percentag total data yaxi give averag speedup rang queri expect speedup increas increas pool size point start decreas initi increas speedup may due increas loadbal decreas speedup achiev maximum valu due nonparalleliz overhead approxim filter shown equat note decreas greater p increas due increas non paralleliz overhead increas p maximum speedup occur differ pool size differ number processor differ data set also note maximum speedup occur rang predict tabl comparison dlb method compar perform three dlb method grr arr pbm number processor vari x map use input data number polygon per chunk work transfer transfer polygon id similaritygraph use declust data number processor pbm arr number processor pbm arr grr figur speedup differ dlb method figur show speedup three method xaxi give number processor yaxi give averag speedup rang queri grr arr compar perform pbm perform better two method shown figur a howev grr inferior speedup rel method shown figur b may attribut central overhead maintain list possibl donor processor grr effectiv dynam loadbalanc effect dlb method achiev good loadbal shown tabl data collect pool pbm replic data grr arr similaritygraph use declust method one polygon per chunk share data work transfer done transfer polygon id data shown tabl repres mean sigma sd rang queri use experi column avg static give static execut time averag processor rang queri column max static give maximum static execut time processor averag rang queri similarli avg otal time averag total time processor queri otal total parallel run time averag rang queri experi observ dlb method achiev good loadbal ie percentag differ avg total even though high loadimbal static part tabl perform evalu dlb method avg static max static avg total max total speedup pbm sigma sigma sigma sigma sigma grr sigma sigma sigma sigma sigma arr sigma sigma sigma sigma sigma conclus futur work datapartit effect approach toward achiev high perform gi parallel gisrangequeri problem use data partit dynam loadbalanc techniqu partit extend spatialdata map difficult due vari size extent polygon difficulti estim work load henc special techniqu need parallel gisrang queri problem identifi main issu declust collect extend spatial object like chain lineseg polygon experiment evalu sever altern issu distribut memori mimd machin rangequeri oper experiment result show number edg better load estim area object bound box approxim spatial extent object give inform point estim go higher order estim like multipl bound box practic estim expens obtain expens use declust extend spatial data result also show that among static declust method similaritygraph distribut base method outperform static declust method also show perform dlb method improv use declust method determin subset polygon transfer runtim propos approach use idea declust hierarch fashion increas load balanc pure static method decreas commun cost pure dynam method futur work plan scale method larger number processor larger map queri also plan extend work mapoverlay problem comput intens hpgi oper anoth major effort would focu high perform techniqu secondari tertiarystorag terrain map effect io eg swap index method final would like evalu techniqu workstat cluster common mani gi applic acknowledg work sponsor armi high perform comput research center auspic depart armi armi research laboratori cooper agreement number daah contract number daahc aro contract number dadaah content necessarili reflect posit polici govern offici endors infer work also support feder highway author minnesota depart transport would like thank ahpcrc univers minnesota pittsburgh super comput center provid us access cray td would also like thank minesh amin christian mccarthi improv readabl technic accuraci paper r page httpdi parallel comput geometri parallel comput geometri experi measur spatial associ use parallel supercomput effici plane sweep parallel algorithm report count geometr intersect parallel process spatial data terrain character disk alloc product file multipl disk system alloc method use error correct code idea declust applic dynam processor selfschedul gener parallel nest loop uniform grid techniqu intersect detect serial parallel machin comput intract guid theori npcomplet dynam index structur spatial search visual larg data set earth scienc data parallel rtree algorithm data parallel spatial join algorithm perform dataparallel spatial oper linear cluster object multipl attribut parallel rtree alloc independ subtask parallel processor introduct parallel comput design analysi algorithm scalabl load balanc techniqu parallel comput analysi algorithm polygon clip similar graphbas approach declust problem applic rang search parallel use distribut data structur gener solut polygon clip parallel intersect algorithm vector polygon overlay alloc method parallel grid file tr ctr shashi shekhar sivakumar ravada vipin kumar dougla chubb greg turner parallel gi share address space architectur comput v n p decemb mehmet koyutrk cevdet aykanat iterativeimprovementbas declust heurist multidisk databas inform system v n p march thu d nguyen john zahorjan schedul polici support distribut multimedia applic acm sigmetr perform evalu review v n p june jignesh m patel david j dewitt clone join shadow join two parallel spatial join algorithm proceed th acm intern symposium advanc geograph inform system p novemb washington dc unit state n r lu l qian a sivasubramaniam t keef store spatial data network workstat cluster comput v n p hakan ferhatosmanoglu aravind ramachandran divyak agraw amr el abbadi data space map effici io larg multidimension databas inform system v n p march hakan ferhatosmanoglu ali aman tosun guadalup canahu aravind ramachandran effici parallel process rang queri replic declust distribut parallel databas v n p septemb