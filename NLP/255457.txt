t exactli learn automata small cover time a present algorithm exactli learn unknown environ describ determinist finit automata learner perform walk target automaton step observ output state at choos label edg travers next state learner mean reset access teacher answer equival queri give learner counterexampl hypothes present two algorithm first case output observ learner alway correct second case output might corrupt random nois run time algorithm polynomi cover time underli graph target automaton b introduct paper studi problem activ learn environ describ determinist finit state automaton dfa learner view robot perform walk target automaton begin start state step observ output state at choos label edg travers next state learner mean reset return start state particular investig exact learn algorithm access teacher answer equival queri give learner counterexampl hypothes also studi case environ noisi sens fix probabl j learner observ incorrect output state at angluin shown gener problem exactli learn finit automata perform walk target automaton without access equival oracl hard inform theoret sens even learner mean reset due exist subclass automata often refer combinationlock automata central properti combin lock automata use angluin hard result hardtoreach state particular singl accept state reachabl learner perform particular walk length n call combin n number state automaton walk result zero sequenc output therefor everi exact learn algorithm combin lock automaton algorithm requir exponenti time if algorithm random requir exponenti expect time thu natur question aris whether exact learn automata remain hard assum underli graph target automaton certain combinatori properti small cover time cover time defin smallest integ everi state q random walk length start q visit everi state probabl least automaton low cover time cannot hardtoreach state sinc random walk whose length order cover time like reach state known graph polynomi cover time exactli probabl assign stationari distribut edg least invers polynomi size graph thi infer result describ sever natur class direct graph known properti one import class class graph indegre node equal outdegre class includ underli graph permut automata automata simul undirect environ replac undirect edg state q q two opposit direct edg q q q q the label direct edg arbitrari necessari learn algorithm given upper bound cover time target automaton which turn bound number state imposs learn algorithm even approxim cover time unknown automaton effici automata n state output label q output label qn start state q q one outgo edg label one label one outgo edg goe q goe q i state qn outgo edg direct q anoth direct itself sequenc input caus automaton travers state sequenc q order call combin singl accept state reachabl learner perform walk correspond combin walk result zero sequenc output refer stationari distribut determin markov chain correspond graph state outgo edg assign equal probabl manner due difficulti distinguish combin lock automaton which exponenti cover time one state automaton selfloop which cover time paper show automata polynomi cover time exactli learn polynomi time noisefre noisi set describ previous present probabilist learn algorithm follow hold high probabl perform singl walk target automaton algorithm construct hypothesi automaton use correctli predict output state path start state hypothesi complet algorithm run time polynomi cover time noisi set allow run time algorithm depend polynomi ff ff lower bound gamma j restrict attent case edg label either output state either result easili extend larger alphabet algorithm appli idea noreset learn algorithm rivest schapir turn use angluin algorithm subroutin angluin algorithm algorithm exactli learn automata teacher answer membership queri equival queri note teacher answer membership queri equival mean reset use subroutin algorithm variant angluin algorithm similar one describ procedur for learn mean reset lie first key overcom need teacher answer equival queri start procedur learner perform singl random walk whose length order cover time target automaton proce perform addit walk start start state determin initi random walk use simpl argument similar argument use show need procedur termin in polynomi time hypothesi automaton equival target automaton state target automaton pass initi walk use home sequenc overcom absenc reset inform home sequenc sequenc whenev execut correspond output sequenc observ uniqu determin final state reach shown home sequenc known learn algorithm use reset easili convert learn algorithm use reset idea home sequenc execut two differ stage algorithm use reset from two possibl differ unknown state output sequenc observ same know stage reach state thu execut home sequenc essenti play role perform reset problem remain construct home sequenc sequenc known abl construct home sequenc without aid teacher rivest schapir learner need teacher answer equival queri order construct home sequenc rough idea perform random walk whose length bound cover time prior execut current candid home sequenc repeat step subroutin learn reset enough time discov current candid true home sequenc improv it thu pay absenc teacher give algorithm whose run time depend cover time henc algorithm effici cover time polynomi number state noisi set learn problem becom harder sinc output observ may erron learner mean reset problem easili solv run noisefre algorithm repeat walk larg enough number time major output observ correct output howev learner mean reset encount sever difficulti one major difficulti clear learner orient sinc execut home sequenc high probabl observ correct output sequenc order overcom difficulti adapt loop idea present dean et al dean et al studi similar set nois rate fix function current state present learn algorithm problem howev assum algorithm either given distinguish sequenc target automaton gener one effici high probabl known and simpl exampl illustr it automata distinguish sequenc remain true restrict attent automata small cover time natur question aris whether result improv requir learner learn target automaton approxim learner mean reset may natur assum allow learner activ explor environ goal perform well respect underli distribut walk each start start state model equival pac learn membership queri sinc angluin algorithm modifi pac learn algorithm membership queri dfa effici learnabl model howev learner mean reset thu perform singl walk know natur notion approxim correct learn recent work freund et al result improv follow freund et al consid problem learn probabilist output automata finit automata whose transit function determinist whose output function probabilist name given string whenev perform walk correspond string certain state reach state howev similarli model studi dean et al output observ time determin probabilist process flip coin bia depend state reach case bias state either j gamma j essenti problem learn determinist automata presenc nois give algorithm paper learn algorithm given run time polynomi cover time target automaton restrict bias state repeat game comput bound oppon anoth motiv work game theoret problem find optim strategi play repeat game comput bound oppon scenario two player refer one player second oppon step player oppon choos action predefin set action accord strategi strategi possibl probabilist map histori play next action player receiv payoff determin pair action play use fix game matrix goal player maxim averag expect payoff particular interest find good strategi play player oppon strategi comput comput bound machin dfa name start start state oppon output action label state at action play player determin oppon next state distinguish sequenc sequenc input symbol follow properti automaton unknown start state given sequenc input output sequenc observ determin unknown start state slight differ learn scenario game play scenario sinc latter player see action chosen oppon choos action howev algorithm easili known exist optim strategi player simpli forc oppon dfa follow cycl along node s underli graph known player hard prove player find optim cycl strategi effici use dynam program howev known player fortnow whang show use combinationlock automata argument angluin hard find optim strategi case gener game clearli class automata learn exactli effici without reset optim cycl strategi found effici howev import learn algorithm use addit sourc inform regard target automaton such counterexampl hypothes otherwis learn algorithm cannot use game play scenario relat work sever research consid problem learn dfa limit set learner present infinit sequenc exampl label accord unknown dfa requir output hypothes converg limit of number exampl target dfa refer reader survey angluin smith briefli survey known effici learn algorithm dfa start problem exactli learn dfa addit work angluin rivest schapir discuss previous follow also known rivest schapir show permut automata exactli learn effici without mean reset without make equival queri sinc permut automata properti indegre outdegre node equal underli automata small cover time thu result view gener angluin prove problem exactli learn dfa equival queri alon hard ibarra jiang show subclass kbound regular languag exactli learn polynomi number equival queri bender slonim studi relat problem exactli learn direct graph which output associ node show task perform effici two cooper robot robot perform singl walk target graph contrast show task cannot perform effici one robot perform singl walk even robot may use constant number pebbl mark state pass also show algorithm modifi made effici graph high conduct conduct measur expans properti graph bergando varricchio show automata multipl exactli learn multipl equival queri particular impli learnabl probabilist automata input string may correspond mani path assign probabl product probabl edg path automata exactli learn given access equival oracl oracl given string return probabl string reach accept state nonexact approxim learn without aid queri kearn valiant show certain number theoret assumpt problem pac learn dfa modifi adapt differ certain game penni match where player get posit payoff match oppon action combinationlock argument cannot appli underli game penni match fortnow whang describ algorithm find optim strategi effici use idea rivest schapir learn algorithm but without actual learn automaton hard given access random exampl learn algorithm sever special class automata studi set li vazirani give sever exampl regular languag learn effici includ letter languag learn algorithm given languag accept width branch program readonc level a special case dfa schapir warmuth shown see also problem learn width readonc level branch program hard learn dnf also observ learn width readonc level branch program hard certain number theoret assumpt shown learn typic automata automata underli graph arbitrari acceptreject label state chosen randomli passiv learn the edg travers robot chosen randomli type mistak bound model addit work dean et al previous mention follow work consid case label exampl assum noisi algorithm given paclearn dfa membership queri presenc persist nois algorithm given learn dfa blurri concept preliminari basic definit let determinist finit state automaton dfa would like learn tupl finit set n state transit function q start state output function transit function extend defin q theta f g usual manner output state q flq output associ string u f g defin output state reach u ie output q u denot mu unless state otherwis string refer alphabet f g cover time denot cm defin follow everi state q q probabl least random walk length cm underli graph start q pass everi state two string let delta denot concaten string integ let denot concaten s two set string let g let empti string denot set string said prefix close everi string s prefix includ itself s suffix close set string defin similarli string length prefix where length prefix defin learn model nois free model problem studi exactli learn determinist finit state automaton learn algorithm mean reset automaton learn algorithm view perform walk automaton start q step algorithm state q observ qs output algorithm choos symbol oe f g upon move state q oe cours walk construct hypothesi dfa algorithm exactli learn target dfa hypothesi use correctli predict sequenc output correspond given walk target dfa start current state at learn algorithm exact learn algorithm everi given ffi probabl least gamma ffi exactli learn target dfa exact learn algorithm effici run time polynomi n logffi assum algorithm given upper bound cover time also assum without loss gener irreduc name everi pair state q q q distinguish string s output state reach execut start q differ output state reach perform walk start q also consid easier set learn algorithm mean reset machin perform new walk start start state requir given perform polynomi in n logffi number walk polynomi length output hypothesi c equival ie everi string s c noisi model assumpt nois follow classif nois model introduc angluin laird assum fix nois rate j step probabl algorithm observ correct output state reach probabl j observ incorrect output observ output state q reach algorithm thu independ random variabl flq probabl assum j known assum lower bound ff gamma j known algorithm nois free model algorithm perform singl walk target dfa requir exactli learn defin abov predict base final hypothesi must agre correct output sinc task learn becom harder j approach ff approach allow run algorithm depend polynomi ff well n logffi exact learn reset section describ simpl variant angluin algorithm learn determinist finit automata algorithm work set learner mean reset analysi similar show target automaton cover time cm high probabl algorithm exactli learn target automaton perform oncm walk length ocm name algorithm exactlearnwithreset use subroutin learn algorithm mean reset describ section algorithm describ follow section assum simplic algorithm actual know cm n upper bound c b m cm n b n known algorithm simpli use bound instead exact valu run time result algorithm bound run time origin algorithm which know cm n occurr cm replac c b m occurr n n b follow angluin algorithm construct observ tabl observ tabl tabl whose row label prefix close set string r whose column label suffix close set string s entri tabl correspond row label string algorithm exactlearnwithresetffi let r random string length let r set prefix initi tabl string r ffi fill consist do ffl exist r row a let k r new entri tabl perform correspond walk ffl els tabl consist exist r r r j r row r close return rerun algorithm though assum high probabl event tabl close occur add last statement complet could cours solv situat angluin algorithm choos solut sake breviti figur algorithm exactlearnwithreset r column label string j mr delta j also refer mr delta j behavior r j observ tabl induc partit string r accord behavior suffix s string reach state equival class partit aim refin partit string reach state equival class case show set r certain properti construct automaton base partit equival target automaton formal observ tabl string r r let row r denot row label r name say two string r belong equival class accord row r given observ tabl say consist follow condit hold everi pair string r r r r j equival class r deltao r j deltao r oe f g r delta oe r j delta oe belong equival class well say close everi string r r oe f g r r exist string r j r r r j belong equival class accord everi oe f g given close consist tabl defin follow automaton equival class correspond state hard verifi see consist sens everi r r everi idea algorithm follow first use random walk construct set r string high probabl reach everi state name r everi state q exist string r take walk correspond start q end state q given r extend set r string travers everi edg show use r construct observ tabl equival class state let r f g random string length cm logffi where ffi confid paramet given algorithm let r prefix rg r learn algorithm initi includ empti string fill singl column tabl perform walk correspond string r let us first observ definit cm probabl random walk length cm logffi pass state q therefor probabl least everi state q q exist string r r q assum fact case directli follow alway close henc learn algorithm must ensur consist done follow exist pair string r r row r string oe delta k ad s k r new entri fill in pseudocod algorithm appear figur clear inconsist resolv process stage algorithm given figur end step true sinc everi string ad refin partit induc hand number equival class cannot exceed n sinc everi pair string r r row r reach two differ state henc ad oncm logffi entri tabl correspond string length ocm logffi n algorithm construct consist tabl make follow claim lemma everi state q q exist string r r q proof order prove j show exist map oe follow properti q q oe f g oe q q q sinc assum without loss gener irreduc oe output preserv clearli exist function suffic prove equival sinc properti everi f g let oe defin follow q q q assumpt statement lemma everi state q q exist string r r q definit determinist finit automata r r j r q necessarili r follow oe well defin next show oe satisfi three properti defin abov oe first properti sinc q oe third properti sinc remain prove second properti let r r q assumpt statement lemma know exist string thu q definit oe oe q thu follow theorem theorem everi target automaton probabl least withreset output hypothesi dfa equival furthermor run time algorithm exact learn without reset section describ effici exact learn algorithm as defin subsect automata whose cover time polynomi size algorithm close follow rivest schapir learn algorithm howev use new techniqu exploit small cover time automaton place reli teacher suppli us counterexampl incorrect hypothes name algorithm exactlearn pseudocod appear figur main problem encount learner mean reset cannot simpli orient whenev need return start state thu need altern way learner orient itself overcom absenc reset use home sequenc home sequenc sequenc whenev execut correspond output sequenc observ uniqu determin final state reach formal definit state q sequenc home sequenc h f g sequenc symbol everi pair state hard verifi cf everi dfa home sequenc length quadrat size moreov given dfa home sequenc found effici learn home sequenc known assum home sequenc h length n target dfa we remov assumpt shortli could run algorithm exactlearngivenhomingsequ whose pseudocod appear figur algorithm creat n copi algorithm exactlearnwithreset correspond differ output sequenc may observ h execut stage algorithm walk accord h observ output sequenc perform next walk elr would perform start q current state reach sinc h home sequenc given output sequenc whenev h execut observ reach state refer state effect start state elr thu copi elr construct observ tabl entri fill perform walk start effect start state elr algorithm termin one copi complet complet copi hypothesi automaton use predict correctli outcom walk if describ pseudocod exactlearngivenhomingsequ see figur run copi exactlearnwithreset confid paramet ffi n theorem fact n copi exactlearnwithreset probabl least hypothesi complet copi correct run time algorithm exactlearn givenhomingsequ bound run time copi multipli number copi execut length home sequenc thu algorithm exactlearngivenhomingsequenceffi ffl copi exactlearnwithreset complet do perform walk correspond h let correspond output sequenc exist copi elr exactlearnwithresetffin creat new copi simul next step elr fill entri perform correspond walk start current state observ tabl elr consist close elr complet consist close discard elr figur algorithm exactlearngivenhomingsequ learn home sequenc unknown home sequenc unknown consid case guess sequenc h home sequenc run algorithm exactlearngivenhomingsequ h instead true home sequenc sinc h home sequenc exist at least two state q q pair state q walk start q reach q upon execut h walk start q reach q upon execut h output sequenc case same let output sequenc henc elr one effect start state simul elr walk perform fill entri might perform start q might perform start q first two possibl consequ event observ tabl becom consist close hypothesi t incorrect name exist walk start current state whose outcom predict incorrectli second possibl consequ grow without becom consist number equival class partit induc becom larger n follow describ modifi exactlearngivenhomingsequ home sequenc detect copi one effect start state thu avoid two consequ furthermor procedur detect help us improv h extend extens becom home sequenc initi set effect start state name q q hold everi state q q exist row label string reach q start q follow true time add column pair state q q q must exist least one entri distinguish two state true sinc otherwis follow lemma q q would equival contradict assumpt irreduc discov one entri evid elr one effect start state therefor h home sequenc moreov concaten string correspond entri h restart algorithm extend h n gamma extens h must becom home sequenc algorithm exactlearnffi n cm h copi exactlearnwithresetr complet do a choos uniformli length perform random walk length b perform walk correspond h let correspond output sequenc c exist copi elrr exactlearnwithresetrnffin creat new copi d simul next step elrr fill entri perform correspond walk w start current state first execut w fill correspond entri final output observ f els output state reach differ output previou state reach perform w do ii discard exist copi exactlearnwithresetr go restart algorithm extend h g observ tabl elrr consist close elrr complet consist close discard elrr figur algorithm exactlearn algorithm exactlearnwithresetr variant exactlearnwithreset given integ n walk fill entri tabl repeat n time singl output observ output enter actual need discard copi restart algorithm may discard copi disagr found construct adapt home sequenc result effici algorithm sake simplic present continu use preset home sequenc detect distinguish entri next show detect entri distinguish two effect start state let exactlearnwithresetr variant exactlearnwithreset walk fill entri tabl repeat n consecut time given n n walk give output entri fill output otherwis found distinguish entri thu algorithm exactlearn instead simul copi elr exactlearnwithreset exactlearngivenhomingsequ simul copi elrr exactlearnwithresetr paramet n set subsequ confid ffi copi find observ tabl includ distinguish entri describ previous extend h string correspond entri restart algorithm new h continu way one copi termin order ensur never fill distinguish entri without identifi one need ensur everi entri r need fill r distinguish entri follow hold pair effect start state distinguish r least one n execut r delta j start least one start q end follow time execut h randomli choos length perform random walk length idea behind random walk everi state nonneglig probabl reach upon perform random walk precis distinguish entri r consid n execut h whose outcom follow perform walk correspond r delta j state set state q reach upon execut h ie given q q probabl reach q one n execut h observ equal probabl follow preced random walk reach state bq probabl bound follow assum instead choos random length perform random walk length first randomli choos string length cm choos random length final perform walk correspond length prefix t clearli distribut state reach end walk equival distribut state reach origin random procedur random string t probabl pass state bq least given pass state bq probabl randomli chosen prefix end state least cm togeth probabl reach given state bq least cm thu given state q q probabl q reach correspond n execut h bound bound error run time algorithm remain set n total error probabl exactlearn ffi bound algorithm run time two type event want avoid ensur algorithm construct correct hypothesi shall bound probabl type event occur ffi first type event copi elrr one effect start state q exist state q q row label string reach q start q cours algorithm h take n valu valu n effect start state exist copi elrr even though singl state may effect start state copi sinc simul copi error paramet ffin probabl least gamma ffi type event occur case follow lemma h final turn home sequenc after n gamma extens tabl becom consist correct hypothesi second type bad event fill entri tabl detect distinguish entri valu h consid first entri fill in tabl distinguish entri sinc h take n valu n first entri entri exist least one pair effect start state di tinguish let equat given distinguish entri probabl reach state pair effect start state distinguish ffin follow probabl least gamma ffi first distinguish entri perform walk correspond entri start two effect start state distinguish therefor probabl detect first distinguish entri everi valu h thu output hypothesi copi elrr correspond one effect start state run time algorithm bound product number phase algorithm one valu h n run time phase run time phase product of ffl number copi exactlearnwithresetr phase which n ffl number entri ad tabl which oncm logn ffi ffl number time walk correspond entri repeat which ffl sum of maximum length walk fill entri which ocm logn ffi maximum length h which on cm logn ffi maximum length random walk perform prior execut h which cm total run time henc thu proven that theorem algorithm exactlearn exact learn algorithm dfa run time mention previous rivest schapir give exact learn algorithm run time polynomi n logffi depend paramet relat note entri uniqu determin current h initi random walk label row correspond tabl random walk execut prior execut h target automaton howev reli teacher give learner counterexampl incorrect hypothes output learner interest note tempt idea simpli run rivest schapir algorithm instead make equival queri tri randomli guess counterexampl whenev learner hypothesi work even case automata small cover time rivest zuckerman construct pair automata small cover time probabl randomli guess sequenc distinguish automata exponenti small automata describ appendix a exact learn presenc nois section describ modifi learn algorithm describ section order overcom noisi environ name new algorithm exactnoisylearn pseudocod appear figur start show comput good estim nois rate show use estim learn target dfa home sequenc known final describ learn algorithm given home sequenc estim nois rate accord learn model algorithm given upper bound gamma ff nois rate j sinc need good approxim j j first show j effici approxim with high probabl within small addit error done run procedur estimatenoiser whose pseudocod appear figur analyz follow lemma similar procedur describ lemma given ffi time polynomi logffi n ff procedur estimatenoiser output approxim j j probabl least proof go detail procedur describ idea base on consid pair state q q string z f g let observ behavior q z output observ learner execut walk correspond z start q let actual behavior q z correct output state reach q everi string z q z thu observ differ behavior q q set string entir due nois process q q differ observ behavior set string z due differ actual behavior z well nois thu order estim nois rate look string seem reach state deduc nois rate differ observ behavior precis done follow let arbitrari string length l l set subsequ suppos execut n time i state reach perform exactli time let l sequenc output correspond th execut t clearli pair indic j q everi k thu ij fraction indic sequenc differ equival fraction string among prefix observ differ behavior q i q j key observ q expect valu ij least larg precis fraction prefix procedur let arbitrari string length l perform walk correspond n let l sequenc output correspond th execut t ie complet output sequenc correspond n dmin goto let j solut return j figur procedur estimatenoiser q i q j actual differ oe expect observ differ behavior state therefor defin min minimum valu ij s let solut quadrat equat sinc less n pair hoeffd inequ probabl least everi pair directli follow see thu assum good approxim j j particular assum j ffcm away j learn home sequenc known nois free case first assum algorithm mean reset assumpt defin slight modif exactlearnwithreset name exactnoisylearn withreset given larg enough integ n procedur simpli repeat walk fill entri tabl n time fill correspond entri major observ label thu high probabl appropri choic n major observ label fact correct label state reach next assum algorithm mean reset instead home sequenc h clearli singl execut h high probabl output sequenc erron thu adapt techniqu use idea construct new robust home sequenc h see mani sampl bit output h thu infer correct output h major vote assum execut h consecut time set subsequ order gain intuit consid first direct graph h whose set vertic q edg q q q reach q upon execut h then execut h correspond walk length h clearli n n step walk start follow simpl cycl h return execut h pass state cycl h henc follow cycl underli graph note jhj cycl may simpl show use exist cycl order estim output sequenc correspond last m th execut h let state start th execut h denot q m idea sinc execut h follow cycl assum larg enough h execut start q m mani time assum abl identifi occurr q m or equival find length simpl cycl h could use execut whose output noisi infer major vote with high probabl correct output sequenc correspond execut h start q m reach current state formal i state reach th execut h let jhj noisi output sequenc correspond execut possibl length exist minim period p p n everi k b p word everi p execut h execut start q m and p simpli length simpl cycl h thu know p comput high probabl correct output sequenc correspond last execut h which start q m consid previou execut start q m everi j jhj follow high probabl appropri choic m sequenc correct output sequenc correspond last execut h case could proceed exactlearngivenhomingsequ simul copi exactnoisylearnwithreset instead copi exactlearnwithreset find period p let q i j state reach execut h follow length j prefix h definit p everi k k everi j q mgammakp the state reach step number differ multipl p same let v jhj dimension vector defin follow b v defin equat hold everi k output gener state sinc nois ad independ appropri choic n high probabl everi j p j either within ffl gamma j within ffl j small addit error ffl particular shall choos ensur ffl ffn assumpt either v p two possibl j everi k k flq mgammakv might differ q mgammak v follow still true defin j v j greater then high probabl jhj correct output sequenc correspond last execut h case v effect behav period otherwis let j index hold let k claim least p least n true sinc v delta p must period well henc everi k k multipl p q mgammakv let e v e v written two equival form e v e v sinc fi n equat e v hand sinc which impli gamma fi n equat e v ff sinc assum thu v j ffn away expect valu everi j sinc shown see equat high probabl p j within ffn either j j abl detect whether v minim period p or least effect behav such consequ comput correct output sequenc correspond home sequenc h pseudocod procedur describ appear figur note actual use fact h home sequenc henc procedur use comput correct output sequenc correspond given sequenc learn home sequenc unknown remain treat case home sequenc known similarli nois free case correct output sequenc correspond candid home sequenc h let q state q q reach state follow execut h procedur executehomingsequenceh nff logncm ffi choos uniformli length perform random walk length perform walk correspond h output sequenc correspond th execut h length let v everi j either j v v return return figur procedur executehomingsequ correspond output is exist state q q q state q q let bq set state q q entri tabl correspond exist argu nois free case entri possibl output sequenc h home sequenc let let q defin analog nois free case walk correspond given entri repeat n time random walk length chosen uniformli rang perform prior execut h let fi fraction time state q q reach let fi defin analog argument use nois free case in discuss preced equat appli chernoff bound f g pr let fw defin exactnoisylearn is fw fraction s observ among n repetit walk execut fill distinguish entri similarli calcul perform equat hand distinguish entri efw equal either j gamma j henc within ffcm either j gamma j choos n ensur with high probabl determin entri distinguish entri extend h string correspond entri algorithm exactnoisylearnffi n ff log ncm ffi h copi exactnoisylearnwithreset complet do a executehomingsequenceh b copi enlr exactnoisylearnwithresetn exist creat new copi c simul next step enlr perform correspond walk w let w output state reach number time w execut do ii discard exist copi exactnoisylearnwithreset go restart algorithm extend h otherwis valu entri set major observ label enlr observ tabl enlr consist close output enlr complet consist close discard enlr figur algorithm exactnoisylearn algorithm exactnoisylearnwithreset variant exactlearnwithreset given integ n walk fill entri tabl repeat n time major valu enter bound error run time algorithm start bound error algorithm follow type event need prevent occur shall bound probabl type occur ffi whenev bound probabl bad event occur assum bad event occur previous estim j j good enough call procedur estimatenoiser confid paramet estim paramet know lemma probabl least gamma ffi copi enlr one effect start state q exist state q q row label string reach q start q noisefre case cours algorithm h take n valu valu n effect start state exist copi enlr sinc simul copi paramet ffin probabl least gamma ffi type event occur candid home sequenc h first distinguish entri fill detect order ensur event occur probabl larger ffi follow first ensur probabl least entri pair effect start state distinguish entri fraction time execut correspond walk start state least cm ensur probabl least fraction s observ differ expect ffcm argu open subsect case distinguish entri alway detect start former requir equat n omega cm lognffi probabl given distinguish entri detect ffin probabl event occur h ffi second requir hoeffd inequ suffic ff lognffi tabl nondistinguish entri tabl major observ output incorrect entri thought distinguish avoid latter type error which also mean avoid former need ensur entri in tabl fraction s observ fill entri differ ffcm expect valu which either j gamma j construct n tabl size oncm logn ffi thu simpli need set n larger previou bound factor ofomegagamma ncmffi order ensur type event occur probabl greater ffi thu requir ff log ncmffi execut candid sequenc h where execut actual denot consecut execut h output comput h incorrect maximum length h on cm logn ffi number valu taken v comput v j n h take n valu valu h execut njt jn time denot maximum size tabl oncm logn ffi hoeffd inequ ff log ncmn lognffi probabl least gamma ffi everi v j ffn away expect valu discuss follow equat suffic correct comput output sequenc correspond h run time algorithm bound sum of run time procedur estimatenoiser number phase algorithm one valu h n multipli run time phase run time procedur estimatenoiser oln l defin figur run time phase product of ffl number copi exactnoisylearnwithreset phase which n ffl number entri ad tabl which ncm logn ffi ffl number time walk correspond entri repeat which ff log ncmffi ffl sum of maximum length walk fill entri which cm logn ffi maximum length h which n cm logn ffi time m maximum length random walk perform prior execut h which cm thu proven follow theorem theorem algorithm exactnoisylearn exact learn algorithm presenc nois dfa run time is acknowledg wish thank michael kearn rob schapir convers stimul line research dana ron would like thank eshkol fellowship support part work done author visit att bell laboratori r charl rack note number queri need identifi regular languag learn regular set queri counterexampl neg result equival queri learn noisi exampl induct infer theori method power team explor two robot learn unlabel direct graph learn behavior automata multipl equiv alnec queri infer finit automata stochast output function applic map learn learn boundedwidth branch program optim domin repeat game bound player learn consist ignor teacher effici algorithm learn play repeat game comput bound adversari effici learn typic finit automata random walk bound versu unbound ration tyranni weak probabl inequ sum bound random variabl learn regular languaag counterexampl cryptograph limit learn boolean formula finit automata switch finit automata theori learnabl finit automata random algorithm infer finit automata use home sequenc privat commun learn fallibl finit state automata learn queri couterexampl presenc nois present colt rump session approxim count tr learn regular set queri counterexampl approxim count uniform gener rapidli mix markov chain neg result equival queri learnabl finit automata learn regular languag counterexampl learn queri counterexampl presenc nois effici learn typic finit automata random walk cryptograph limit learn boolean formula finit automata diversitybas infer finit automata infer finit automata use home sequenc learn consist ignor teacher learn behavior automata multipl equival queri optim domin repeat game bound player learn fallibl determinist finit automata random algorithm infer finit automata stochast output function applic map learn learn boundedwidth branch program induct infer theori method learn noisi exampl effici algorithm learn play repeat game comput bound adversari ctr michael a bender antonio fernndez dana ron amit sahai salil vadhan power pebbl explor map direct graph proceed thirtieth annual acm symposium theori comput p may dalla texa unit state ivan gabrijel andrej dobnikar onlin identif reconstruct finit automata gener recurr neural network neural network v n p januari michael a bender antonio fernndez dana ron amit sahai salil vadhan power pebbl explor map direct graph inform comput v n p juli