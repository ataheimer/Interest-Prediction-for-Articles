t fast algorithm gener discret random variat chang distribut a one fundament oper simul stochast discreteev dynam system gener nonuniform discret random variat simplest form oper state follow gener random variabl x distribut integ n fix nonneg number wellknown alia algorithm avail accomplish task o time difficult problem gener variat x ai chang time present three rejectionbas algorithm task algorithm character perform term accept probabl expect effort gener variat show that fairli unrestrict condit longrun expect effort o applic markovian queu network discuss also compar three algorithm compet scheme appear literatur b introduct problem gener nonuniform discret random variat fundament simul discret event stochast system simplest version problem gener variat random variabl x p given p s chang time wellknown alia algorithm eg see pp take on preprocess time gener variat o time paper interest develop effici algorithm case chang time procedur desir simul multidimension markov process use model queue telephon network definit problem follow suppos given n nonneg number sequenc independ random variabl problem gener variat xs realiz fxsg refer integ ng outcom x call s rate outcom time s static version problem rate chang time dynam version zero ss chang time increment discret event simul number ss chang time increment typic small algorithm develop paper attempt exploit special properti section first show reject algorithm employ gener variat chang distribut perform algorithm character accept probabl develop two addit algorithm which expens addit memori improv significantli accept probabl section suppos rate random determin discret state space markov process typic case applic explicitli character longrun accept probabl longrun expect effort three algorithm term steadi state rate underli markov process section sever class queue network consid class character longrun perform algorithm term defin paramet network section compar algorithm paper eventlist approach assum event list organ heap algorithm transit propos fox section discuss sever method improv perform three algorithm discuss paper three algorithm follow assumpt forc throughout paper a exist finit a exist finit b refer a major nvector three algorithm present paper reject base reject algorithm oper respect major nvector run o averag time provid accept probabl bound away zero n increas tradit correctli howev major theme literatur reject algorithm make implicit constant depend reciproc accept probabl small quantifi constant term s particular quantifi constant product form instanc queue network model term traffic condit clearli though heavier traffic node smaller constant essenti network call three algorithm gener gener gener gener implement discret version standard reject use dynam rate vector respect uniform major nvector a erat implement discret version standard reject use dynam rate vector respect nonuniform major nvector a erat gener base assign singl bucket event gener combin principl gener assign possibl one bucket outcom bucket scheme consid literatur appar link directli reject algorithm algorithm gener present first algorithm gener variat chang distribut algorithm make use n bucket ie array b size n bucket capac bucket initi set bi a complet preprocess clearli process complet on time notic initi content bucket exceed uniti algorithm gener variat x hereaft let u stand uniform random variabl interv algorithm gener step gener u comput dnue step let step r bi accept output quit els go step observ gener pick bucket random uniformli bucket chosen output probabl bi notic r uniform variabl interv independ i algorithm gener reject algorithm eg see pp gener discret random variat fix distribut the reject algorithm typic discuss context continu random variabl follow output algorithm gener distribut x key observ make gener also use gener variat chang distribut inde suppos gener use gener variat xs thu sa time simpli reset a procedur valid sinc assumpt a content bucket never exce uniti order character perform gener let accept time s event r bi first time step invok gener variat xs refer p accept time s accept probabl time s note expect number uniform random variat u need gener variat xs algorithm gener equal reciproc accept probabl theorem accept probabl time gener given p accept time na proof p accept time r bi r bi a establish result theorem know perform gener poor time averag ss significantli less uniform upper bound a particular gener exploit fact may a mani outcom i often case applic algorithm discuss below gener gener take advantag special structur algorithm gener gener one bucket assign outcom i n idea behind gener assign one bucket outcom i number bucket assign proport upper bound ith rate specif let fix posit number let number bucket assign outcom i denot l given also let total number bucket note follow bound total number bucket thu gener number bucket assign held fix even ss chang chosen random one l bucket bucket assign i output certain probabl probabl howev chang ss chang precis make use two array c b size l n respect b set set cj equal outcom assign bucket j for preprocess step outcom comput l step comput prefix sum l sum step initi c follow fill cell cell step set next present procedur gener variat x algorithm gener step gener u comput step let step let cj r bi output quit els go step gener algorithm also use gener variat xs gener variat xs time simpli reset note that sinc never exce uniti also note alway set a case gener reduc gener manner entir analog gener defin event accept time s algorithm gener theorem time s output gener distribut xs moreov gener p accept time proof p accept time l l follow also note accept time l bi combin two express give p ijaccept time complet proof theorem directli give follow result corollari follow bound accept probabl gener p accept time s furthermor divisor accept time sinc significantli less na algorithm gener give much higher accept probabl compar gener algorithm gener last algorithm similar spirit gener advantag alway achiev upper bound corollari accept probabl disadvantag effort requir pass one iter algorithm somewhat greater requir gener gener make use alia algorithm data structur also make use array b size n initi set preprocess includ requir alia algorithm on equival version algorithm independ discov fishman algorithm gener step use alia algorithm gener variat distribut step gener uniform variat u step u bi accept output quit els go step leav reader establish follow analog theorem theorem time s output gener distribut xs moreov gener p accept time give brief comparison three algorithm throughout comparison suppos gener henc corollari know accept probabl gener greater accept probabl gener chart give comparison memori requir oper count three algorithm assum worst case memori count gener oper count assum follow oper count multipl subtract upper floor oper tabl look up comparison uniform variat gener defin oper count maximum number oper perform one pass step algorithm memori oper count n integ gener integ particular accept probabl gener close gener may conclud chart gener prefer gener also mention divisor rate rate chang time gener streamlin streamlin version gener run faster alia algorithm streamlin algorithm similar ident algorithm develop fox see pp fox algorithm flexibl due choic paramet m perform measur random algorithm from theorem know expect number u s need gener variat xs greater b howev theorem exclud possibl number u s need gener xs exce probabl analog statement made theorem theorem order studi question let independ ident distribut geometr random variabl paramet p v thought number time coin flip head appear mth time p probabl head appear singl flip chernoff bound see eg pp use obtain tight bound probabl tail end v particular show follow fix ffl see make use bound analysi like o function use specifi asymptot resourc bound determinist algorithm e o use specifi resourc like time space etc bound random algorithm e o defin follow definit say function f e og exist constant c n input size n n ff say function f g lim n theorem let h lower bound accept probabl three algorithm algorithm call time total number us gener algorithm probabl fix proof follow chernoff bound observ number u s gener three algorithm obtain variat x upper bound geometr random variabl paramet h corollari n number us gener probabl constant ffl fix ff thu number us gener e o random rate discret event simul rate typic evolv random manner context shall write s ith rate time order emphas fact rate random also write s context random rate longer requir variabl xs independ requir howev independ given as easili seen gener gener gener satisfi requir assumpt a a translat directli current context replac s accept probabl theorem analog context random rate replac s ea s applic see section underli discret state space markov process defin rate s case s total jump rate markov process sth jump conveni make follow assumpt a underli markov process irreduc aperiod posit recurr assumpt a forc s converg distribut random variabl total rate process jump steadi state let z total rate process arbitrari time instant steadi state which also well defin due assumpt a random variabl z take discret valu typic differ distribut fact follow theorem a walrand follow theorem enabl us character longrun perform algorithm term steadyst behavior underli markov process of cours simul steadi state three algorithm let v s number random variabl u call order gener variat xs shall refer v s effort requir gener variat xs theorem assumpt aa gener follow longrun accept probabl longrun expect effort lim p accept time lim proof theorem p accept time na take expect appli assumpt a equal give lim p accept time na lim na ey combin give desir result proof follow two theorem entir analog proof theorem theorem assumpt aa gener follow longrun accept probabl longrun expect effort lim p accept time ezd lim theorem assumpt aa gener follow longrun accept probabl longrun expect effort lim p accept time lim applic queue network section give exampl possibl explicitli calcul moment appear theorem section although exampl better studi analyt method simul result give insight run time gener algorithm queue network use extens model analysi comput system network eg see illustr idea variat gener consid open jackson network eg see one fundament queue network n singleserv queue custom arriv outsid accord poisson process rate rout queue probabl r servic time queue exponenti distribut paramet custom complet servic queue i rout queue j probabl r ij leav network probabl r servic time assum independ arriv process assum exist nonneg solut traffic equa ae assumpt assur underli markov process irreduc aperiod posit recurr consid simul markov process associ queue network note rate associ queue i s either depend whether queue occupi empti note rate associ extern arriv s given current rate s elaps time the interev time next arriv servicecomplet event exponenti distribut paramet event servic complet queue probabl sy s arriv probabl sy s determin elaps time event type alia algorithm use determin o time queue custom rout includ possibl rout outsid new iter begin ie increment determin next interev time next eventtyp next queue custom rout note two rate chang iter iter consid central compon simul procedur determin event type accord probabl sy s one three algorithm appli character perform gener it simpl exercis reader gener gener note applic theorem longrun accept probabl gener jackson network given lim p accept time longrun expect effort gener jackson network given lim proof let l denot random variabl number custom present queue steadi state well known sinc follow combin last two express ez varz theorem complet proof see theorem time averag util ae queue least as case applic practic interest longrun accept probabl greater theorem also tell us particularli desir high valu ae queue high servic rate let us attempt character perform queue network first consid jackson network describ abov server queue i suppos ae condit associ markov process irreduc posit recurr aperiod case valu follow proof theorem shown longrun expect effort gener given lim leav reader deriv correspond express longrun accept probabl easili shown lim gener consid sequenc queue network nth network sequenc n station network sequenc satisfi ffl longrun averag expect effort o second consid case multipl class class c exogen arriv rate c rout probabl r c suppos one server queue servic rate given depend class also suppos servic disciplin queue firstcomefirstserv fcf c set traffic equat suppos equat nonneg solut c suppos modifi definit assumpt well known continu hold true multiclass network henc theorem hold unchang third consid multiclass network singl server node discuss abov suppos network close ie custom neither enter leav network popul size fix class finit state markov process associ network irreduc aperiod lim l number custom present node steadi state quantiti express term defin paramet normal constant network discuss productform queue network let us consid nonproductform network particular consid close multiclass singleserv network discuss paragraph abov suppos servic rate class c custom queue c ie servic rate depend class well queue thu s take valu n maximum servic rate queue given cg let classc custom serv queue steadi state lim unfortun current tool queue theori offer mean express fl c term defin paramet nonproductform network numer techniqu avail approxim quantiti eg see compet method compar algorithm sever compet scheme carri comparison two context multiserv queue network system similar multiserv queue network consid network n queue seri queue equip server server oper rate arriv outsid arriv rate custom travers n queue sequenc assum larg say greater shall assum traffic moder heavi ie m must stress complex bound given section deriv specif exampl necessarili extrapol exampl first compet method discuss make use list futur event we assum reader familiar standard approach simul discret event system method data structur contain time next extern arriv time servic complet custom current network thu data structur contain least nm event assum data structur organ heap method requir onm memori olog n log m worstcas effort gener event assum traffic condit effort close worst case second compet method also employ list futur event instead implement across server futur event list implement across queue case data structur contain time next arriv and nonempti queue time next servic complet assum heap employ method requir on memori olog n worstcas effort note complex bound heap hold traffic condit case moder heavi traffic third compet scheme algorithm transit propos fox employ fox notat fi vector take form fi number busi server queue time s memori requir approach on shown longrun expect effort transit on inde employ notat fox choic fi js j typic close n w typic close zero follow averag complex typic situat on howev transit modifi run time olog n shown though high implicit constant paper discuss transit context implement across queue discuss paragraph abov howev analog first compet method transit also implement across server fourth compet scheme therefor transit implement server refer tran sittailor case fi vector take form fi depend whether jth server time busi not we assum nm server number also suppos fi set maximum rate ie fi transit simplifi algorithm transittailor step use alia algorithm gener variat j distribut step fi j accept output j quit els go step algorithm transittailor independ discov fox note transittailor transit respect major vector clearli transittailor implement standard reject respect nonuniform nvector remark case transit mention howev implement across server except network singleserv queue note but independ paper note note case transittailor gener ident analog fashion defin tailor algorithm gener gener easili seen generatetailor equival transittailor wherea generatetailor differ mimick analysi section see transittailor longrun expect effort given lim n v s interpret number time step invok tran sittailor gener event time s follow longrun expect effort transittailor o sequenc model howev memori requir omn therefor arriv follow tabl memori longrun expect effort futur on olog n transit on olog n transit omn o gener on o gener therefor clear that traffic condit larg n futur event list transit competit must stress complex chart implicit constant factor depend reciproc accept probabl constant algorithm chart compar except effort transit whose constant substanti larger let us compar constant transittailor gener first observ accept probabl two algorithm ident how ever transittailor requir one less oper gener pass step algorithm therefor run time two algorithm go close transittailor slightli faster accept probabl gener transittailor greater gener never twice much base observ discuss end section make follow conclus first suppos memori issu transittailor give slightli better perform gener compar gener tran sittailor requir oper per pass step higher accept probabl howev accept probabl gener made arbitrarili close accept probabl transittailor decreas d henc suffici small d gener slightli faster transittailor let us suppos memori issu gener suppos memori requir gener gener roughli same transittailor requir approxim time memori requir gener gener elimin competit mention end section tradeoff oper per pass accept probabl compar gener gener although accept probabl gener greater one half gener recommend user perform pilot run choos two algorithm exampl assum server custom homogen case eg variou server variou phase phdistribut keep track individu server need inhomogen case either heap implement across server ie first compet scheme one tailor algorithm would implement system similar definit similar pleas refer similar gener version transit o complex even implement across queue queue network set andor similar respect nvector major dynam rate vector howev similar transittailor gener gener gener perform badli queue network node light traffic common reliabl model mention later arguabl accept probabl gener gener gener bound away zero n increas unless growth repair rate decreas failur rate unnatur restrict point gener version transit similar impli refer vector global major improv perform although algorithm gener gener use mani applic situat perform less satisfactori particular unsatisfactori perform occur expect rate typic far respect upper bound ie section discuss three modif gener design allevi even overcom prob lem paper discuss modif employ effici simul largescal telephon network throughout section shall simplifi notat suppress refer time variabl s discuss modif benefici introduc yet anoth algorithm gener variat chang distribut algorithm also independ discov fishman yarberri equival version found devroy similar algorithm also given ex page differ context inform descript algorithm follow for sake conveni suppos log n integ discuss algorithm base binari tree level n leaf node bottom level valu associ ith leaf node valu associ node sum valu associ two son node thu valu node root binari tree note on preprocess time need set binari tree gener variat x first gener uniform number call z compar number valu associ left child root less know variat f proceed algorithm left side binari tree more proceed right side tree valu z minu valu store left child note number comparison need gener variat x log n chang gener variat x updat binari tree olog n oper follow first reset valu associ leaf node move path node root reset sum accordingli summari binarytre algorithm requir on preprocess time olog n time per variat gener variat x chang distribut advantag algorithm compar gener perform depend close s upper bound disadvantag take significantli time gener variat x n larg accept probabl gener small method i partit subset s suppos exist partit s ng follow properti i vicin of larger condit follow scheme make sens first draw uniform random variat u u declar variat x belong use gener across determin it u s y s declar variat x belong use binarytre method across find it cours order util method need get handl ea n perhap done analyt analysi pilot run context queue network method may suitabl fraction queue heavi traffic remain queue light traffic mention anoth partit scheme note method ii pseudo upper bound here indic ea replac smaller valu perhap ea longrun standard deviat s thi cours assum one get handl well ea may indic i occur algorithm gener longer correct sinc may bi i order rectifi algorithm keep track set counter ffi maxfa phig if phi empti set step gener replac test r bi test r biffi leav reader verifi correct procedur necessari updat phi ffi much effort requir updat suppos chang necessari perform updat follow circumst i a order minim effort updat phi ffi phi implement prioriti queue data structur one four event occur olog jphij oper suffici updat pseudo upper bound chosen larg enough jphij ffi typic small howev chosen small accept probabl becom undesir low method iii global updat method ii may possibl determin priori good pseudo upper bound may case appropri choic pseudo upper bound chang evolut underli process simul case may want consid occasion global updat pseudo upper bound reiniti array c b reiniti make sure entri b close cours process global updat costli requir on time done rare may advantag compar a n may worthwhil perform global updat detect given time low not small mani entri array b much less make use follow sampl process pick say log n random outcom major fraction outcom entri much less say b array perform global updat use chernoff bound show major fraction sampl low b valu major fraction b valu low high probabl also perform check everi log n sampl thu make sure total addit cost per sampl due check fraction similar reiniti mention conclus paper present three simpl algorithm gener nonuniform discret random variat chang distribut fairli unrestrict assumpt algorithm expect o run time simul result confirm competit algorithm relat futur event schedul algorithm wide use though algorithm use mani applic import open problem follow exist constant time algorithm discret random variat gener make assumpt way rate xs chang algorithm posit step direct acknowledg grate professor georg fishman professor bennet fox professor kurt mehlhorn dr marti reimann valuabl comment r fast probabilist algorithm hamiltonian circuit match journal comput system scienc guid simul a measur asymptot effici test hypothesi base sum observ annal mathemat statist nonuniform random variat gener springer exploit special structur improv futur event set manag simul technic report no shorten futur event list appear orsa j gener markovchain transit quickli i oper research societi america journal comput gener markovchain transit quickli ii oper research societi america journal comput queue system comput perform evalu methodol ogi ieee transact comput introduct algorithm creativ approach effici simul largescal loss network technic report msci deriv random sort select algo rithm technic report introduct queue network tr guid simul nd ed introduct algorithm ctr paul b callahan outputsensit gener random event proceed ninth annual acmsiam symposium discret algorithm p januari san francisco california unit state keith w ross danni h k tsang jie wang mont carlo summat integr appli multiclass queu network journal acm jacm v n p nov