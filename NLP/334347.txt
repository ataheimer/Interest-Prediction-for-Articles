t lower bound commun load optim placement toru network a abstract popul torusconnect network everi node processor attach scale well sinc load edg increas superlinearli network size heavi commun result degrad network throughput partial popul network processor occupi subset avail node rout algorithm specifi among processor place analog multistag network desir total number messag rout particular edg toroid network increas linearli size placement end consid placement processor describ given placement algorithm parameter k d show formal achiev linear commun load ddimension ktoru number processor placement must equal c kd constant c approach also give tighter lower bound exist bound maximum load placement arbitrari number dimens placement suffici symmetri base result give optim placement correspond rout algorithm achiev linear commun load tori arbitrari number dimens b introduct mesh toru base interconnect network util extens design parallel comput recent year mainli due fact famili network topolog reflect commun pattern wide extend abstract present ieee symposium ippsspdp april orlando support part fellowship izmir institut technolog izmir turkey varieti natur problem time scalabl highli suitabl hardwar implement import factor determin effici parallel algorithm network effici commun among processor network abl handl larg number messag without exhibit degrad perform throughput maximum amount traffic handl network import measur network perform throughput interconnect network turn bound bisect width minimum number edg must remov order split network two part equal number processor here follow blaum bruck pifarr sanz consid behavior toru network bidirect link heavi commun load assum commun latenc kept minimum rout messag shortest minim length path particular interest scenario everi processor network send messag everi processor also known complet exchang alltoal person commun type commun pattern central numer parallel algorithm matrix transposit fast fourier tran distribut tablelookup etc central effici implement highlevel comput model pram bulksynchron parallel bsp valiant bspmodel parallel comput exampl rout hrelat everi processor network sourc destin h packet form main commun primit completeexchang scenario investig paper studi shown use effici rout random arbitrari hrelat network ddimension ktoru model direct graph node repres either router processorrout pair depend whether processor attach node edg repres commun link two adjac node henc everi node network capabl messag rout ie directli receiv send neighbor node fullypopul ddimension ktoru node processor attach contain k processor bisect width k give k processor compon bisect completeexchang scenario number messag pass bisect direct k k divid bisect bandwidth find must exist edg bisect load mean unlik multistag network maximum load link linear number processor inject messag network allevi problem blaum et al propos partiallypopul tori model underli network torodi node inject messag network think processor attach rel small subset node call placement node left rout node similar case multistag network multistag network k theta k switch rout node log k n stage serv n inject point util n log k n rout node partiallypopul tori rout algorithm util shortest path specifi togeth placement optim placement placement achiev linear load edg use maximum number processor possibl notion resourc placement gener investig number research bose et al alverson et al f pitt d smitley aim give placement rout algorithm enabl effici commun processor time reduc suscept network link fault reduc number messag reli upon particular edg achiev provid rout algorithm number minim path specifi pair processor placement kept larg without compromis linear load denot maximum load edg placement p blaum et al give lower bound mean constrain form k also give placement size k togeth rout algorithm placement optim sens two lower bound actual achiev placement justifi gener maxim size placement achiev linear load ok dgamma placement size ck dgamma constant c mimick case fullypopul ddimension ktoru ck seem impli linear load least possibl jp ck dgamma faulti argument howev know priori number edg need split p two equal size piec bisect width whole toru may push size optim placement k dgamma paper introduc concept bisect width respect placement p use properti prove ddimension ktoru size optim placement thetak given placement p maxim size also prove exist edg separ size split toru two compon thetak processor p side give lower bound form ck maximum load c constant independ d tighter lower bound load larg lower bound final give optim placement call linear placement achiev lower bound correspond rout algorithm order dimension rout odr unord dimension rout udr tori arbitrari number dimens two rout algorithm odr simpler udr provid fault toler allow rout also show tho extend gener placement tori refer multipl linear placement outlin paper follow section give necessari definit formal statement problem section lower bound maximum load edg given also gener lower bound given bound along notion bisect width respect placement use get upper bound number processor optim placement introduc notion ffgammasepar respect placement section use give new lower bound maximum load independ dimens paramet section final section defin analyz import class placement call linear placement give associ rout algorithm achiev linear load fault toler section includ conclus futur consider preliminari problem definit section start problem definit follow sequenc formal definit terminolog use rest paper problem definit aim find placement associ rout algorithm ddimension ktoru k linear messag load in number processor placement edg complet exchang scenario specif like devis placement p rout algorithm p ddimension ktoru direct graph e vertex set zz k denot integ modulo k edg set j k total k node node two neighbor dimens total neighbor direct edg also refer link placement p processor e subset v use term node gener element vertex set k node processor attach simpli call processor frout algorithmg let p placement k rout algorithm subset c pq set shortest path p q everi pair p q p see figur rout algorithm use deliv packet p q p need commun q shortest path c pq select randomli uniform probabl link l denot set path c pq go l c plq use follow definit load given given placement p k along rout algorithm a load edg l defin jc jc maximum valu el network placement p rout algorithm call maximum load denot e max thu consid express el path rout algorithm provid two processor smaller load edg use rout messag processor addit thi avail larg number choic mean better fault toler shall consid algorithm use minim shortest path minim path associ notion cyclic distanc lee distanc defin next definit fcyclic distanc lee distanceg given three integ i j k cyclic distanc j modulo k given equival class modulo k taken lee distanc two node k sum cyclic distanc coordin q lee distanc k length shortest path p q toru definit fbisect widthg bisect width graph minimum number edg must remov order split node set two part equal within one cardin definit fbisect width respect placementg bisect width respect placement p e minimum number edg must remov e order split v two part contain equal within one number processor p denot b p minim cardin set edg need remov bisect p thu j b p j bisect width respect placement p definit fffsepar width respect placementg ffsepar respect placement p k set edg whose remov split graph two part contain approxim ffjp j gamma ffjp j processor ffsepar width k respect placement p size minim ffsepar respect p denot set edg ffsepar ff p thu j ff p j ffsepar width k respect p note equival use notat ck constant c whenev k k ck infinit mani valu k loos use problem interest construct placement p associ rout algorithm k complet exchang scenario constant c et al investig placement k dgamma processor evid placement provabl maximum possibl number processor desir rais anoth import question shall address maximum number processor placement could k without compromis linear load anoth import issu fault toler specif rout algorithm provid multipl rout path pair processor that link fail network remain function rout messag path includ defect link consequ also address follow problem possibl construct optim placement time fault toler follow section analyz lower bound maximum load studi question figur placement processor among link one specifi shortest path processor highlight gener lower bound maximum load start import lemma prove use tool subsequ section lower bound maximum load origin given blaum et al follow lemma give gener form placement s set edg connect node anoth node s proof total number messag exchang processor processor either direct person commun scenario also messag must go one edg s averag number messag go edg s lemma easi see reduc set taken contain one processor d lower bound valid independ rout algorithm use anoth interest form shall subsequ make use obtain set consist half processor p ie note case s becom b p bisect width k respect placement p next give upper bound size b p use calcul maximum number processor optim placement contain proposit subset p node ddimension ktoru bisect remov k particular subgraph k bisect width ok proof omit see appendix i constant ok dgamma proposit larger consid direct edg particular case proposit view placement p subgraph edg corollari ddimension ktoru k bisect width dk dgamma respect placement p ie j b remark although assert proposit appear intuit geometr natur easi come exampl gener graph bisect width subgraph becom arbitrarili far origin graph exampl two copi complet graph k n n node join singl edg bisect width subgraph n node bisect width rang depend evenli n node distribut among two copi k n maximum placement size upper bound maximum number processor optim placement contain obtain substitut bound j b p j given corollari inequ time insur e ie load remain linear number processor placement ck is size optim placement k ok thu justifi seek placement ck constant c howev eas exposit give analys placement size k dgamma first ie subsequ also consid construct placement c ffsepar width respect placement corollari know bisect width k respect placement p larger dk dgamma lower bound maximum load one obtain use result function dimens d howev section show given placement k jp possibl divid network two part processor remov ok dgamma edg constant involv thetajp j independ d use obtain better lower bound load edg give proof result theorem assum number processor place subtori k given reason function k polynomi theorem hold gener without assumpt see appendix ii theorem rel placement p size thetak k edg separ ff p size ok dgamma split k two part thetak processor specif ffk processor respect ff ff constant independ d proof let us fix dimens k copi lower dimension toru embed along dimens index k gamma let j k number processor p j th subtoru two case consid depend whether first assum k situat especi simpl two indic remov edg subtori separ k two part processor total number edg remov thetak singl index argument use split p remov k dgamma edg thu assum p time cannot separ k use argument howev let k subtoru k bisect rel processor contain remov dk dgamma edg therefor k bisect rel p obtain remov dk dgamma d edg total incid processor subtori exclud k therefor whenev k thu possibl split k two part contain thetak processor remov ok actual ok edg consid case k omegagamma k time outlin proof case k polynomi function k it follow proposit appendix ii assumpt necessari let g note must omegagamma k sinc otherwis jp j could thetak polynomi function whose indic u must thetak dgamma processor furthermor forc ju thu find aek subtori consequ split k two part ae processor remov ok improv lower bound maximum load shown previou section given placement p size c k dgamma possibl split k two part ffjp j gamma ffjp j processor remov c k edg constant c c ff use result establish lower bound load show lower bound e max jp paramet grow larger take ck note constant c independ paramet d henc lower bound come character quantiti e max close paramet grow use lower bound gaug optim placement rout algorithm give next linear placement establish section optim placement thetak processor section introduc notion linear placement placement coordin processor p satisfi particular type linear equat zz k definit placement p satisfi least one c zz k rel prime k call linear placement simplic use placement c even though analys appli linear placement gener form ie provid c c rel prime k note exactli k dgamma processor satisfi express specif c zz k origin linear placement form use three dimension tori blaum et al call shift diagon placement also specifi placement size tk dgamma fix integ less k instanc placement tk dgamma processor shall call placement multipl linear placement remark would like point linear and multipl linear placement guarante linear load edg linear refer fact coordin processor placement satisfi linear equat zz k still need construct rout algorithm enabl commun pair processor way yield load linear jp j remain section specifi differ rout algorithm analyz maximum commun load edg mention earlier rout algorithm use minim shortest path processor deliv messag processor p q valu p dimens correct toward correspond valu q amount direct sigma dictat shortest cyclic distanc valu dimens exact way correct dimens rout packet specifi rout algorithm consid two class rout algorithm analysi load case linear multipl linear placement order dimension rout odr unord dimension rout udr order dimension rout algorithm odr algorithm simpl given placement p k rout packet direct shortest cyclic distanc is rout path includ follow node note k odd jc odr path specifi odr algorithm given p q p howev k even odr algorithm may result multipl path pair processor placement aid analysi use follow restrict version ensur exist one canon rout path given pair processor regardless pariti k begin one way correct p pick path correct p direct mod k direct shortest cyclic distanc thu two choic coordin pair algorithm rout shortcom one path pair processor lack faulttoler network specif edg pair processor commun fail pair longer abl exchang messag section look anoth rout algorithm suffer limit load analysi linear placement odr theorem given linear placement order dimension rout algorithm result linear load edg proof sinc odr algorithm ensur one path pair processor denomin express el thu order comput e max need count maximum number pair processor commun specif edg without loss gener consid edg l e count pair processor commun use l let p q p two processor p send messag q l sinc odr algorithm use must q p p linear coordin therefor note p q use edg l then order ensur messag follow shortest path must also have properti cyclic distanc number processor satisfi equat less equal k sgamma satisfi less equal k dgamma thu total number processor pair cannot k maximum load linear jp note actual overcount sinc taken restrict p sth dimens account count solut condit affect choic p q accur express though order obtain pay closer attent paramet determin number differ way p q may chosen consid dimension ksubtoru ring edg l lie assum first k even without loss gener also assum node ring enumer then odr algorithm use l deliv messag node node k ring similarli use edg l messag node node k node node k node k sent use l node index k k gamma total number choic p q therefor assum k odd also case messag node deliv node k messag node rout node on thu total kgamma kgamma choic p q k odd therefor number solut equat satisfi condit dgammawhen k even therefor regardless pariti k linear placement p odr jp multipl linear placement odr theorem multipl linear placement along odr algorithm k result linear load edg proof analysi conceptu similar previou section consid multipl linear placement e odr fix constant note jp befor consid edg l e form pair processor p q p commun use l sinc odr algorithm use must q p must satisfi equat among number solut equat tk similarli number solut equat tk dgamma therefor total number processor pair commun l bound k dgamma linear jp j constant t unord dimension rout udr mention section odr algorithm suffer lack faulttoler sinc one path pair processor section introduc unord dimension rout udr elimin problem algorithm follow rout packet begin select number j set f dg use befor direct shortest cyclic distanc case odr dimens correct complet anoth select unlik odr howev order dimens correct next pick arbitrari algorithm thu provid multipl path pair processor improv faulttoler system p q two processor differ dimens s differ path p q udr ie jc udr show udr algorithm result linear load edg load analysi linear placement udr linear placement p use udr algorithm load edg l ppqp sinc exist pair processor jc udr ppqp upper bound right hand side inequ specifi number messag sent pair processor could potenti rout messag l processor also use path includ l sinc udr algorithm provid multipl rout path theorem given linear placement unord dimension rout algorithm result linear load edg proof without loss gener l e form l i suppos p q p two processor commun l aim find upper bound number pair processor commun l moment thought reveal p q must either arbitrari q arbitrari j s mean number possibl choic dimens j less k henc total number choic coordin p q exclud less q p satisfi one solut pair one choic as befor coordin sth dimens restrict condit p therefor total number processor pair commun l bound f ppqp linear jp fix d multipl linear placement udr theorem multipl linear placement along udr algorithm k result linear load edg proof befor consid processor pair p q p commun use l number choic processor pair use l strictli less case linear placement udr sinc equat p q solut everi one choic pair therefor number pair processor commun l less linear jp j fix constant k conclus follow work blaum bruck pifarr sanz consid commun partiallypopul toru network term placement processor associ rout algorithm provid lower bound maximum load alltoal commun scenario found bound size optim place ment shown arbitrari placement bisect remov set edg order bisect width toru provid optim placement size thetak dgamma ddimension ktoru use call linear multipl linear placement gave load analys two differ rout algorithm interest combinatori properti placement still resolv among character optim placement term restrict subtori extens analysi properti edg separ tori rel optim placement r tera comput system resourc placement torusbas network optim placement processor tori network optim placement processor faulttoler tori network lee distanc topolog properti kari ncube direct bulksynchron parallel algorithm introduct parallel algorithm architectur array theori errorcorrect code survey wormhol rout techniqu direct network analysi toroid network share memori architectur effici commun use total exchang rout triangl bridg model parallel comput tr