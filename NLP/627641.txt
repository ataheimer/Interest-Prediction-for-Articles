t compil conceptu graph a abstractthi paper address problem conceptu graph implement subsumpt classif taxonomi conceptu graph typic store use direct acycl graph data structur base partial order conceptu graphsw give improv algorithm classifi conceptu graph hierarchi prune search space databas use inform gather searchingw show conceptu graph hierarchi compil instruct repres special case canon format rule compil subsumpt conceptu graph compress knowledg knowledg base conceptu graph compil differ adjac graph hierarchi differ repres rule use deriv graph adjac graph illustr method compress knowledg base experimentscompil effect three way remov redund data use simpl instruct ignor redund check perform match share common process graph b introduct central element mani natur languag process inform retriev knowledg base system larg collect inform inform may view larg set sentenc paper concentr problem answer queri set sentenc queri sentenc question whether sentenc impli set sentenc sentenc impli queri sentenc may extract answer paper discuss method seek answer explicit sentenc collect rather answer deduc one sentenc collect method design intent extend handl latter case futur exampl queri is person eat pie set sentenc may extract answer a girl eat pie fast a girl sue eat pie kitchen exampl illustr type inform embed sentenc search sentenc impli someth peopl sentenc contain inform subtyp girl consid research g elli support univers queensland postgradu scholarship enrol phd programm key centr softwar technolog univers queensland qld australia current dept comput scienc royal melbourn univers technolog victoria australia work also support baskin center univers california santa cruz usa visit there paper concern natur languag frontend system rather concentr work intern level sentenc encod conceptu graph knowledg represent knowledg base set conceptu graph graph repres sentenc queri conceptu graph check subsumpt graph knowledg base method outlin construct direct acycl graph repres partial order conceptu graph node hierarchi conceptu graph queri set graph achiev select path hierarchi use order inform hierarchi mani graph knowledg base elimin consider search hierarchi content address memori content queri determin posit hierarchi solut order subhierarchi immedi special queri levinson develop method chemic graph method paper base recent work levinson adapt method conceptu graph develop hybrid index mechan garner tsui ad idea store graph differ adjac graph hierarchi potenti save store method describ take differ idea further graph reconstruct differ travers hierarchi graph compar queri use gener subsumpt algorithm method differ number way use differ differ rather incid arc label differ label node repres conceptu graph differ graph adjac graph rather singl adjac graph method especi suit topolog search method propos levinson anoth differ interpret differ differ graph repres instruct special case canon format rule conceptu graph theori instruct perform part match databas graph queri graph canon format rule basi partial order defin conceptu graph rather reconstruct graph differ appli queri graph use map adjac graph queri graph mani case adjac graph alreadi compar queri differ need map queri graph implement comparison method achiev compil conceptu graph three way remov redund data use simpl instruct ignor redund check perform match share common process graph section ii introduc basic conceptu graph theori section iii outlin algorithm data structur use store retriev conceptu graph section iv explain mean compil conceptu graph gener hierarchi section v give descript instruct special case canon format rule small exampl databas compil queri compil databas examin section vi detail experi compress knowledg base discuss ramif compil ii conceptu graph conceptu graph system logic base charl sander peirc existenti graph conceptu graph full power firstord logic repres modal higherord logic simpl eleg infer rule conceptu graph also direct translat natur languag follow short introduct basic formal reader advis read thorough understand conceptu graph finit connect bipartit graph two kind node concept conceptu rela tion everi conceptu relat one arc must link concept singl concept may form conceptu graph everi conceptu relat must link concept function type map concept set whose element type label function refer map concept set f individu marker gener marker individu marker surrog individu real world perceiv world hypothet world label concept c labc referentc r concept may display linear form exampl concept person simpli person repres unspecifi person may read person box replac squar bracket graphic form partial order type label known type hierarchi form lattic call type lat tice type hierarchi make analyt statement type must true intens statement person true properti person also associ girl minim common supertyp pair type label written t maxim common subtyp t two primit type label univers type absurd type type label t minim common supertyp cat dog could possibl carnivor depend hierarchi maxim common subtyp pet cat petcat maxim common subtyp cat dog absurd mean logic imposs entiti dog cat denot type t written ffi t set entiti instanc concept type t extens union set cat dog world noth els intension type label cat dog minim common supertyp car nivor also subtyp bear weasel skunk etc type lattic repres categori thought lattic set subset repres collect exist thing two lattic isomorph denot oper map one neither onetoon onto function type also map conceptu relat type label relat r may written t linear form ellips replac parenthesi graphic form two relat type must number arc concept conceptu relat type common conform relat relat type label individu marker true said conform type t conform relat obey follow condit ffl refer concept must conform type label c concept typec referentc exampl concept integ wellform integ not ffl individu marker conform type s must also conform supertyp s i i exampl number conform type prime prime henc also conform supertyp integ integ ffl individu marker conform type t must also conform maxim common subtyp exampl sinc conform type odd prime odd prime also conform maxim common subtyp oddprim oddprim ffl everi individu marker conform univers type individu marker conform absurd type i i i ffl gener marker conform type label type label t oper oe map conceptu graph formula first order predic calculu conceptu graph translat gener concept map variabl individu concept map constant altern conceptu graph could also map modern type logic c girl agent eat manner fast person sue agent eat object pie fig two canon graph a canon graph distinguish meaning graph repres real possibl situat extern world certain graph declar canon one sourc deriv new canon graph canon graph format rule five canon format rule deriv conceptu graph w conceptu graph u v copyu w exact copi u ffl restrictu c l concept c u typec may replac subtyp t c gener refer may chang individu marker chang permit referentc conform typec chang i relat r graph u duplic one may delet u togeth arc ffl joinu c d concept c u ident concept u joinu c d graph obtain delet link c arc conceptu relat link d ffl fuseu v c d let u v two disjoint conceptu graph concept c u ident concept v fuseu v c d graph obtain delet link c arc conceptu relat link d illustr format rule fig show two canon graph concept relat identifi ci rj respect graph also label refer text graph b may read girl eat fast graph c person sue eat pie formal translat graph inform verbal discuss graph here graph fig show result restrict concept c girl graph b fig girl sue graph e result restrict type person concept c graph c type girl restrict conform relat must check ensur girl sue true ident concept c c girl sue e fig fuse togeth form singl graph x fig ident concept c c eat x join togeth produc x fig graph x simplifi remov one duplic relat r r agent result graph f fig two conceptu relat type duplic i ith arc one link girl sue girl sue e agent eat object pie fast manner eat agent fig restrict two graph fig girl sue girl sue agent eat manner fast agent eat object pie agent eat manner fast pie object agent fig join two graph fig concept ith arc other graph f may read girl sue eat pie fast simplif rule correspond rule logic rx y rx y equival rx y format rule kind graph grammar canon graph besid defin syntax also enforc certain semant constraint format rule make guarante truth falsiti howev format rule refut rule assert graph fals no person eat pie use format rule show fals sue eat pie graph deriv fals graph must turn fals format rule falsiti preserv canon contain inform necessari deriv set canon graph four compon type hierarchi broken concept hierarchi c relat hierarchi r set individu marker i conform relat relat label marker i f girl sue agent eat manner fast pie object fig simplif fig place locat act entiti act object event act physicalobject anim entiti give anim pie girl person attribut eat fast place kitchen food girlsu manner agent object locat act act agent manner attribut anim fig sampl canon finit set conceptu graph b call canon basi type label refer either marker i canon graph closur b canon format rule fig show canon use paper b relationship canon format rule subsumpt conceptu graph conceptu graph u canon deriv conceptu graph v possibl join conceptu wn u call special v written u v v call gener u gener defin partial order conceptu graph call gener hierarchi order reflex transit antisymmetr conceptu graph u v follow properti true ffl subgraph v subgraph u u v ffl subtyp u ident v except one type label v restrict subtyp u ffl individu u ident v except one gener concept v restrict individu concept type u v ffl top graph gener conceptu graph graph fig gener graph fig call graph defin far atom conceptu graph acg contain logic connect henc neither quantif default existenti quantif consid definit concept relat subsumpt test acg implement subgraph morphism modulo subtyp individu gener hierarchi partial order conceptu graph state rather partial order equival class conceptu graph consid graph graph v proper subgraph u graph u deriv v join copi v concept eat girl sue agent eat manner fast object pie q q q queri u fig queri graph u thu u v howev v deriv u join two ident concept person simplifi duplic agent relat thu v u henc accord gener hierarchi properti gener hierarchi also note independ u v canon deriv u v correspond revers proof formula oev formula conceptu graph u v u v oeu oe oev result two graph given paragraph equival surpris consid translat sort logic subtl point affect subsequ theori conceptu graph practic graph redund branch alway simplifi deriv smallest one equival class conceptu graph assum minim element class conceptu graph u v u v must exist map subgraph u call project v u project oper follow properti ffl concept c v c concept v referentc ffl conceptu relat r v r conceptu relat v ith arc r link concept c v ith arc r must link c v exampl project graph c fig graph u fig person girl act eat graph v repres set instanc canon format rule use construct graph v graph w wn test graph v subsum graph u rule instanc appli project u w wn rule instanc succeed v subsum u use techniqu compil conceptu graph data structur repres gener hierarchi partial order theori atom conceptu graph consid store larg set conceptu graph retriev conceptu graph store anim act agent act object entiti manner act attribut girl sue eat manner fast agentb manner fast girl eat agent eat object pie girl sue manner fast eat pie object eat object pie girl sue agent c c r c e agent person sue agent f fig gener hierarchi graph fig iii store retriev conceptu graph common data structur use store conceptu graph hierarchi direct acycl graph repres nontransit link partial order gener hierarchi conceptu graph levin son earlier work use similar data structur organ chemic graph taxonomi klone concept descript hierarchi a gener hierarchi data structur store conceptu graph node gener hierarchi conceptu graph arc repres nontransit order graph fig hierarchi given graph previou section canon basi exampl consist set graph g arc b d indic follow girl sue eat fast canon deriv girl eat fast girl sue eat fast impli girl eat fast girl eat fast gener girl sue eat fast girl sue eat fast special girl eat fast follow section examin use hierarchi search set conceptu graph construct hierarchi b search conceptu graph gener hierarchi gener hierarchi index knowledg base appli conceptu graph queri u knowledg base search u hierarchi hierarchi content address memori fig illustr search space queri u hierarchi atom primit graph closest object unifi u coatom bottom object atom primit top object object gener u object specif u object nonunifi u fig search space graph u gener hierarchi concept deriv graph coatom leaf node knowledg base gener space contain gener u hierarchi special space solut space contain special u hierar chi immedi gener parent immedi special children u adjac gener special u respect fig u explicitli store hierarchi how ever mani case u store hierarchi explicitli search u proceed two direct topdown graph u bottomup coatom u method examin search topdown consid depthfirst search gener space path gener space taken lead u hierarchi consid search queri u girl sueagenteatobjectfast girl sue eat fast hierarchi fig queri u match graph hierarchi search start graph find graph search children gener u children v set immedi special v children a b b b b c d e f fb b bg fbg fb cg fcg fdg feg ffg ffg fg respect depthfirst search could select first graph children gener queri u continu path u basi graph b gener first children set select it b b could equal chosen one child b b also gener select it search children b gener graph child gener u fact isomorph u queri graph match search termin success case two solut fd fg english answer question agent eat person eat object pie locat kitchen agent eat person object food object locat kitchen agent eat girl sue pie object agent eat pie girl manner fast f e c fig gener hierarchi girl sue eat fast ye f ye sue eat pie fast search necessarili start graph index techniqu use start gener space ultim goal index techniqu index directli top special space includ u see index techniqu c insert conceptu graph gener hierarchi classif insert graph u hierarchi need comput set immedi gener set immedi special u hierarchi inform give us virtual locat insert u consid insert graph read person eat pie hierarchi fig immedi gener case b person eat c pie eaten immedi special f girl sue eat pie kitchen e girl eat pie fast notic d person eat food kitchen u incompar insert u remov arc b e c e c f add b u c u u f u e get new hierarchi fig d search gener space wood describ standard two phase breadthfirst search use classif klone like term taxonomi first phase calcul set immedi predecessor ip gener queri breadthfirst search gener space second phase breadthfirst search subhierarchi immedi predecessor calcul first phase first special encount hierarchi immedi successor is queri wood summar research classif say more sophist algorithm devel ope agent eat person eat object pie locat kitchen agent eat person object food object locat kitchen agent eat girl sue pie object agent eat pie girl manner fast agent eat person object pie e c fig gener hierarchi fig insert levinson describ algorithm show deeper insight problem subsumpt gener expens oper henc method classif avoid mani subsumpt test possibl de sirabl algorithm given insert object hierarchi improv implement levinson method number graph comparison phase procedur insertu begin ip immedi predecessorsu ip fug begin immedi successorsip u insertu ip is fig insert u partial order consid algorithm insert fig first phase comput immedi predecessor ip done function immedi predecessorsu fig u alreadi store hierarchi u return rather us immedi predecessor second phase avoid otherwis subhierarchi member ip search use immedi successorsip u fig set ip found procedur insertu ip is fig necessari housekeep link u immedi predecessor immedi successor procedur also maintain level graph hierarchi inform use travers hierarchi topolog order levinson prune search space use fact graph gener space gener queri u immedi predecessor also gener space levinson sort hierarchi size graph travers hierarchi order size necessari requir procedur insertu ip is begin v ip w remov v w present v ip add v u w add u w ulevel propag leve fig insert u partial order given neighbourhood is order kind graph levinson work with howev conceptu graph size necessari requir topolog order level order hierarchi reflect node distanc node top exampl fig graph level graph b c level graph e level graph f level see topolog order effici search method depthfirst breadthfirst search term avoid compar object hierarchi consid hierarchi fig rememb immedi predecessor graph must compar graph immedi predecessor graph must gener queri graph also gener assum queri u fig henc gener u a b c breadthfirst travers hierarchi fig read right left a c b e f d would compar f depthfirst travers from right left would fa c e f b dg also compar f topolog travers also read right left a c b e d f would compar f sinc encount beforehand note incompar u topolog search ensur predecessor element v seen v algorithm fig level inform associ graph hierarchi use travers hierarchi topolog order queue use modifi breadthfirst search minimum prioriti queue prioriti given element smallest level num ber use array fifo queue enqueu dequeu prioriti queue constant time enqueu weight element i u involv ad u front ith queue dequeu involv remov first element current minimum weight queue whenev current minimum queue j becom empti weight index increment travers hierarchi level order maintain properti j fifo necessarili nonempti point set ip v isv correspond store set immedi predecessor v immedi successor v respect v alreadi store hierar function immedi predecessorsu begin qenqueuelevel qempti begin predecessor matchv u v begin w ip v ip ip w isv return ip fig find immedi predecessor u chi algorithm call subsumpt u v guard test predecessor matchv topolog travers guarante vs predecessor seen v predic predecessor matchv true vs predecessor predecessor queri u depthfirst search object v compar v immedi predecessor predecessor queri u breadthfirst search object v compar u one but necessarili all vs immedi predecessor predecessor u thu precondit check v predecessor queri u stronger topolog search v predecessor add set ip remov vs immedi predecessor ip search successor v closer predecessor queri e search special solut space second phase wood search one subhierarchi immedi predecessor first phase one hierarchi need travers sinc special queri must also special gener queri special found ad set subhierarchi remov consider howev graph incompar subhierarchi must travers levinson devis method avoid mani comparison inher travers particular subhierarchi second phase notic wood method use inform member ip levinson note second phase databas graph successor queri graph must intersect subhierarchi immedi predecessor first phase subsumpt test rel expens compar pointer travers involv walk subhierarchi particularli use intersect comput travers subhierarchi increment counter graph graph intersect must count equal number element ip intersect travers breadthfirst manner use wood abov algorithm immedi successor fig avoid multipl travers comput intersect increment one constrain topolog search algorithm use insight graph intersect subhierarchi ip graph must path element ip element set ip repres bit immedi successor element ip path element determin ore bit string immedi predecessor propag inform restrict subsumpt test graph bit set in intersect space algorithm also reli level topolog travers implement minimum prioriti queue predic ip reachablev or bit string vs immedi predecessor true bit set function immedi successorsip u begin v ip begin w isv qempti begin seenv begin ip reachablev v u begin see successorsv els w isv return fig find immedi successor u given immedi predecessor notic insert seen inform must reinitialis would mean algorithm would perform linearli size databas everi case avoid use token queri graph seen must token current queri consid queri graph u classif problem queri databas graph hi erarchi solut queri would everyth impli queri special space solut list walk subhierarchi element is support algorithm use insert find immedi predecessor immedi successor also use queri worst case algorithm perform better comparison queri graph databas method suit databas where littl order inform total or der hierarchi chain method suit wide shallow hierarchi data believ mani domain conceptu graph intend use properti wood argu typicalcas complex logarithm size databas levinson give empir evid support argument levinson prove topolog method less comparison graph previou known method levinson also describ index scheme hybrid method method particularli use graph high degre symmetri also see applic conceptu graph shown prune search within databas gener special space follow section show share match inform gain subsumpt test relat graph iv compil conceptu graph gener hierarchi effici queri databas im prove previou section saw method minim number databas graph compar queri graph follow section look minim cost comparison examin repres conceptu graph gener hierarchi improv individu subsumpt test wood state algorithm no deep insight exploit gain effici exampl cla sific advantag taken might learn cours one subsumpt test might redund part anoth subsumpt test garner tsui propos repres graph differ adjac graph gener hier archi fig illustr store graph girl sue eat pie fast differ adjac gener a girl eat food differ mean replac refer concept c u sue differ c mannerfast mean connect new binari relat manner concept c u new concept fast differ mean replac type concept c u type pie differ garner tsui method girl eat object agent fast eat manner object girl sue pie agent girl eat object agent food c pie food transform to fig repres graph differ gener method outlin former method place differ adjac graph incid arc wherea latter place differ graph immedi gener node repres graph graph differ garner tsui method node arc restrict special gener graph differ treat data reconstruct graph travers arc henc ad graph differ reconstruct graph compar queri use gener match algorithm method compil graph match instruct share common comput queri store graph differ fulfil aim remov redund data databas anoth aim method share common comput achiev store map adjac graph conjunct differ see map store explicitli com pose allow us fulfil anoth aim repres differ way may use instruct futur conceptu graph unif machin graph may compar queri use map gener queri instruct perform small part gener match oper rel map follow detail altern garner tsui method consid queri u fig gener hierarchi fig discuss notat vu repres map graph let us assum subgraph morphism bu graph b fig found queri u search solut queri u search method outlin previou section take path gener hierarchi contain special gener queri step graph choic path b travers path must compar u see gener u full subsumpt test avoid notic differ b concept c type girl restrict gener form individu sue comput match map du must com pute assum map bd store databas gener b map queri u bu everi concept relat x d x b x du otherwis find match x u y violat rest match insert map du equal map bu sinc map bd ident map differ could repres refer du sue gener u gener possibl symmetri graph involv is uniqu map graph involv case differ must appli possibl map mani domain conceptu graph use graph contain uniqu morphism thu differ graph use map adjac graph bd previou ex ampl current gener b queri u kept necessari store map adjac graph explicitli map compos travers gener hierarchi canon format rule construct map construct graph copi rule set map whole graph copi restrict rule affect map join rule comput union map two graph join map one ident concept other simplifi rule map duplic relat onto anoth conceptu graph gener hierarchi replac set applic canon format rule instanc rule appli immedi gener graph repres fig illustr method gener hierarchi fig method potenti reduc cost graph comparison share comput alreadi done map adjac conceptu graph also potenti save space store conceptu graph v instruct examin use canon format rule differ adjac graph gener hierarchi concentr first phase topolog search search gener space follow discuss assum graph canon form compar store restrictb c eat act manner attribut restrictb c eat restrictx c fast restrictx c eat fusex x c c restrictrefb c sue anim act object entiti restrictb c girl x c r c agent act copyb c c r restrictx c pie restrictb c person restrictx c eat c e x fuse e c c joinx c c simplifyx r r restrictc c girl fusex x c c fig encod conceptu graph gener hierarchi canon format instruct first phase aim find subgraph morphism databas graph queri second phase aim find subgraph morphism queri databas graph first phase databas graph could thought read queri graph second phase databas graph write queri graph construct special solut mode correspond mode read write prolog compil unif instruct give special interpret canon format rule base mode oper read write examin read mode here graph reconstruct instruct howev show oper construct map databas graph queri q ffl copyu w find subgraph morphism wq w exact copi u recon struct gener matcher use find wq ffl restrictu c t w type uq c wq databas graph w gener queri graph q q must subtyp type correspond concept u ffl restrictrefu c instruct handl restrict individu marker rather complex refer nest graph set q u true queri must individu marker one correspond concept databas graph u join concept c databas graph u v respect read mode mean c must alreadi point concept queri graph q ffl simplifyu simplifi two duplic relat databas graph read mode mean two relat must map relat queri sinc queri graph cannot contain duplic minim graph instruct separ special case exampl input output graph same new map construct rather modif particular entri map made fig conceptu graph replac instruct compar represent gener hierarchi fig fig contain queri graph u gener hierarchi fig contain solut f let us consid happen stage topolog search gener hierarchi queri u examin process middl search subgraph morphism b c u found qg look b cs adjac graph gener u adjac graph e graph repres restrictrefb c sue d instruct translat if refer bu sue gener u du bu graph e repres restrictc c girl e instruct implement as type cu c girl girl e gener u eu cu examin adjac graph e one case f graph f repres three instruct first instruct fuse e c c x mean du calcul qg second instruct joinx c c x sinc third instruct f simplifyx r r f sinc qg thu f gener u u compar result graph u f fig fig respect fig show altern compil base canon deriv appli singl parent join simpl basi relat approach follow new formal conceptu graph theori mugnier chein approach similar garner tsui method represent differ vi experi compil method still design phase examin use method conceptu graph databas wrote program anim f x c r r c e c act manner attribut agent act act object entiti restrictx c girl restrictb c person sue restrictx c eat fusex b c c c c restrictx c pie restrictc c girl fuse b c c c restrictx c pie restrictb c sue fusex b c c c c restrictb c eat restrictx c fast fig linear deriv graph hierarchi fig anim act agent act object entiti manner act attribut manner fast girl eat agent eat object pie c girl sue girl sue eat pie object c c r c agent person sue f e fig gener hierarchi fig compress use differ largest parent anim act agent act object entiti manner act attribut manner fast girl eat agent eat object pie girl sue c girl sue c c r c agent person sue e f fig gener hierarchi fig compress use differ parent origin file compress largest parent parent parent parent compress parent databas basi basi fig result compress chess file piec piec piec piec piec piec piec piec piec piec piec piec fig schema morph chess seed databas compress conceptu graph databas repres graph u differ u i us largest parent ii us parent method i shall call largest parent method best case garner tsui method method ii correspond compil method shown fig call parent method main problem parent method join parent may need store test store join file test fig morph adapt chess play system file b seed databas pattern form shown schema fig piec could whitepawn black arc concept repres support attack depend colour piec file b contain chess pattern learnt morph similar fig file a basi b basi includ basi graph addit graph file b respect column databas fig list name file column origin file list size ascii file contain conceptu graph conceptu graph linear notat column lempel ziv com press column give size file compress use unix compress util column largest whiterookrank file whitepawnrank file fig conceptu graph chess pattern parent show size file compress use largest parent method repres conceptu graph column all parent show size file compress use parent method repres conceptu graph column all parent without parent store differ parent method leav list parent differ refer to column lempel ziv compress parent show size file gener parent method compress use unix compress util main column compar largest parent all parent all parent method result smaller file even though parent refer to cost refer parent differ all par ent all parent without parent column ex ampl databas list parent cost byte case all parent method result smaller file file use largest parent method parent method result compress ratio four knowledg base test potenti similar reduct could also achiev inform retriev time vii summari compil conceptu graph achiev store deriv immedi gener direct acycl graph repres gener hierarchi partial order conceptu graph graph insert gener hierarchi comput immedi neighbourhood hierarchi attach newli insert graph graph neigh bourhood neighbourhood comput two phase topolog search canon format rule distinguish conceptu graph semant network formal enforc semant constraint canon graph algorithm process must develop conceptu graph compil instruct special case format rule instruct oper immedi gener construct map immedi gener graph henc queri graph search common comput involv match databas graph queri graph share map further potenti store save store dif ferenc compress knowledg use differ illustr sampl databas compil effect three way remov redund data use simpl instruct ignor redund check perform match share common process graph futur work examin method handl complex conceptu graph use domain chem istri levinson recent develop new tupl skeletonbas compress techniqu call ud ud base new compact represent conceptu graph make storag retriev effici ud extend process hierarch search share earli work suggest store possibl map matrix form parent children databas combin map parent queri children use matrix multipl get first approxim specif match queri may adequ propag bind inform gather search within conceptu graph databas acknowledg thank supervisor peter robinson robert levin son thank fritz lehmann guy mineau john stapl comment earlier draft paper fritz lehmann inspir revis earlier version paper r compil conceptu graph sort conceptu graph a selforgan dictionari conceptu structur pattern associ retriev semant network ud univers data structur multilevel hierarch re trieval adapt pattern orient chess induct conceptu graph find common gener compat project character algorithm recognit canon conceptu graph existenti graph charl s classif klone knowledg represent system conceptu structur inform process mind machin knowledg graph versu conceptu graph understand subsumpt taxonomi framework progress tr ctr ahmad kay robert m colomb extract ontolog concept tender conceptu structur data knowledg engin v n p januari vila wuwongs ekawit nantajeewarawat declar program implicit implic ieee transact knowledg data engin v n p juli gian piero zarri ontolog reason techniqu legal intellig inform retriev system artifici intellig law v n p septemb ahmad kay robert m colomb use bww model evalu build ontolog cg formal inform system v n p juli