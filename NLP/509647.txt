t perform characterist gang schedul multiprogram environ a gang schedul provid spacesl timesl comput resourc parallel program thread execut parallel job concurr schedul independ processor order achiev optim level program perform timesl parallel job provid better overal system respons util otherwis possibl lawrenc livermor nation laboratori deploy three gener gang schedul varieti comput platform result indic potenti benefit technolog parallel process less signific timeshar s b introduct interest parallel comput propel econom commod price microprocessor growth rate comput requir exceed processor speed increas symmetr multiprocessor smp massiv parallel processor mpp architectur proven quit popular yet suffer signific shortcom appli larg scale problem multiprogram environ problem must first recast form support high level parallel achiev inher parallel perform necessari concurr schedul cpu resourc thread process associ program system throughput frequent use metric success howev eas use good interact fair distribut resourc substanti import custom multiprogram environ effici har power multitud processor satisfi custom requir difficult proposit schedul mpp comput provid concurr schedul spacesl scheme program alloc collect processor retain processor complet program schedul critic yet decis unknown impact upon futur job schedul risk block larger job later processor left idl anticip futur arriv lack timesl mechan preclud good interact high level util gang schedul solv dilemma combin concurr resourc schedul spacesl timesl impact schedul decis limit timeslic rather job entir lifetim empir evid gang schedul cray td instal lawrenc livermor nation laboratori llnl demonstr addit flexibl improv overal system util respons smp comput provid spaceshar timesl schedul process independ good parallel may achiev way lightli load system luxuri rare avail purpos gang schedul environ improv throughput parallel job concurr schedul without degrad either overal system throughput respons moreov scheme extend schedul parallel job across cluster comput order address larger problem gang schedul dec alpha comput llnl explor standalon cluster environ shown fulfil expect overview gang schedul term gang schedul refer program thread execut group gang concurr schedul distinct processor furthermor timesl support concurr preemption later reschedul gang thread execut necessarili posix thread compon program execut simultan thread may span multipl comput andor unix process commun thread may perform share memori messag pass andor mean concurr schedul job thread shown improv effici individu parallel job system job perspect similar dedic machin timeslic execut reduct io bandwidth may experienc due interfer job cpu memori resourc dedic job effici improv result reduct commun latenc promot finegrain parallel system effici improv reduct context switch virtual memori page cach refresh advantag gang schedul similar timeshar uniprocessor system abil preempt job permit schedul effici util system sever way long run job high resourc requir execut without monopol resourc interact high prioriti job provid near realtim respons even job high resourc requir period high system util job high processor requir initi time fashion without wait processor made avail piecem fashion job termin low prioriti job execut provid otherwis unus resourc preempt higher prioriti job becom avail high system util sustain wide rang workload job preemption incur addit overhead cpu resourc sacrif context switch slight explor later paper increas storag requir possibl substanti run preempt job must storag requir satisfi simultan preempt job must also vacat memori job memori content written disk acquisit addit disk order increas util cpu memori resourc like costeffect need must consid approach parallel schedul mpp comput use variabl partit paradigm variabl partit job specifi processor count requir submiss time processor alloc job retain termin inabl preempt job prevent time alloc resourc interact high prioriti job shortag job small processor count result incomplet alloc processor convers execut job high processor requir delay fragment necessit accumul processor piecem fashion multipl job smaller processor count termin variabl partit result poor resourc util due resourc fragment processor left idl anticip high prioriti job arriv processor left idl order accommod job substanti resourc requir anoth option dynam partit oper system determin number processor alloc job dynam partit possess allur high util interact make program develop significantli difficult program requir oper effici without knowledg processor count execut time variabl processor count also caus execut time variabl may unaccept workload contain long run job even moder size job high prioriti mpp schedul variabl partit paradigm preval mpp architectur lack job preemption make respons particularli difficult provid order ensur respons servic mpp comput divid resourc pool reserv interact job batch job avail job type pool also use reserv portion comput specif custom system sinc job normal span multipl pool partit comput fashion reduc maximum problem size address fragment reduc schedul flexibl system util optim configur place resourc singl pool avail job type assum support resourc alloc interact provid mean schedul spaceshar timeshar norm smp comput provid good interact util comput schedul process independ work well workload consist mani independ process howev solut larg problem depend upon use parallel job suffer signific ineffici without benefit concurr schedul parallel job develop effort nation energi research supercomput center nersc illustr difficulti parallel job schedul order encourag parallel job develop nersc provid dedic time parallel job cray c comput sever parallel job run dedic mode abl achiev parallel perform cpu timewal time cpu machin approach gflop per second gflop per second peak speed batch job suspend dedic period interact job initi permit execut concurr parallel job sever instanc observ singl computebound interact program reduc parallel job throughput system util almost percent suspens interact job found necessari order achiev reason parallel job perform benefit smp comput scale larger problem cluster effici execut parallel job environ requir coordin schedul across entir cluster commun thread consist exclus messag pass possibl base schedul upon messag traffic achiev high level parallel llnl workload make extens use share memori commun prevent us pursu strategi llnl workload character llnl custom long reli upon interact supercomput program develop rapid throughput job short moder execut time work perform smaller comput custom use target platform reason problem size hardwar compat softwar compat llnl began transit parallel comput acquisit bbn tc addit parallel comput llnl includ cray c cray td meiko cs ibm sp mani problem substanti size well parallel llnl cray td workload typic parallel comput model llnl processor megabyt dram processor configur singl pool avail job llnl cray td configur permit interact execut job processor hour execut time interact job account percent job execut consum percent cpu resourc deliv interact workload typic rang processor percent comput processor work hour drop neglig level late night hour peak interact workload reach processor percent oversubscript rate time execut interact job depend upon preemption batch job and extrem case timeshar processor among interact job larg job account high percentag resourc util cray td shown tabl memori requir quit variabl job use megabyt per processor due cray td hardwar constraint contigu block processor specif shape must made avail execut job make fragment particularli oner problem gang schedul permit us preempt job need execut larg job time fashion minim overhead job size cpu cpu util tabl cpu util job size cray td llnl program use either pvm parallel virtual machin mpi messag pass interfac librari commun thread although cray td distribut memori architectur support share memori program model permit job read write memori local anoth processor assign job share memori program model consider lower overhead messag pass wide use small number program util combin paradigm share memori within cray td messag pass commun thread serial program compon execut cray ymp frontend multipl paradigm model expect common dec alpha cluster ibm sp contain smp node llnl gang schedul design strategi llnl custom expect rapid respons even heavili util multiprogram comput howev need rapid respons uniform across entir workload order provid interact requir minim overhead context switch divid workload six differ class job class significantli differ schedul characterist describ below express job deem manag mission critic given rapid respons optim throughput interact job requir rapid respons time good throughput extend work hour job respons time throughput reduc hour sake improv system util throughput product job debug job requir rapid respons time extend work hour job respons time reduc hour sake improv system util debug job preempt cray td product job requir rapid respons time receiv good throughput night weekend benchmark job requir rapid respons time preempt standbi job low prioriti suitabl absorb otherwis idl comput resourc default class product batch job debug totalview debugg initi job interact job directli initi user termin job place express class system administr benchmark standbi class specifi user job initi time job class number schedul paramet includ rel prioriti processor limit also sever systemwid schedul paramet aggreg processor limit gang schedul job schedul paramet alter realtim permit period reconfigur llnl emphas interact extend work hour pm throughput time gang schedul daemon also updat time upon receipt appropri signal complet critic task daemon write state file initi new daemon program socket util user commun occur job initi socket also use job state chang request schedul paramet chang rare job processor state inform written period data file global readabl file read gangster applic user window gang schedul statu deleg issu fair resourc distribut system includ central user bank cub distribut product control system dpc system provid resourc alloc account capabl manag entir comput environ singl tool system exercis coars grain control schedul batch job fine grain control adjust nice valu interact batch process gang schedul design recogn chang nice valu schedul accordingli job class preempt automat chang standbi class high nice valu return request class upon reduct nice valu mechan proven function well manag resourc distribut minim interdepend system signific differ exist three llnl gang schedul implement differ larg result architectur differ base upon experi previou implement implement describ result bbn tc order pioneer parallel comput llnl bbn tc processor acquir tc share memori architectur origin support spaceshar onli gang schedul tc reserv resourc system startup control resourc schedul time user program requir code chang commun gang schedul howev program must load modifi version mandatori parallel program initi librari rather secur resourc directli oper system librari secur resourc gang schedul daemon program may also increas decreas processor count execut explicitli notifi gang schedul daemon otherwis job must continu execut specif processor origin assign it timeshar perform use sleep wake signal issu concurr thread job mechan provid rapid context switch order millisecond implement fair share mechan object provid user access compar resourc gang schedul would determin resourc alloc made ten second timeslic object insur interact equit distribut resourc high util gang schedul implement tc abl provid good respons throughput shortcom note despit share memori architectur tc possibl reloc thread order better balanc continu chang workload schedul could react workload chang timeslic boundari limit respons user base fair share mechan abandon later implement due avail independ comprehens resourc alloc system cray td cray td massiv parallel comput incorpor dec alpha microprocessor capabl mflop peak perform processor local memori system configur node consist two processor local memori network interconnect node connect bidirect threedimension toru commun network also four synchron circuit barrier wire connect processor tree shape interconnect get great detail td sever constrain processor barrier wire assign job must alloc processor count power two minimum two processor one node job built run valid processor count processor count chang execut begin processor alloc job must specif shape specif dimens given problem size exampl alloc processor must made contigu block eight processor x direct two processor direct two processor z direct furthermor possibl locat processor assign restrict specif shape locat processor assign result barrier wire structur job must alloc one four barrier wire initi barrier wire assign job chang job reloc and circumst two job share singl barrier wire may locat adjac other prior instal gang schedul cray td forc make sever signific sacrific order satisfi custom need interact execut time batch job restrict insur reason respons job larg processor requir interact job although one may argu delay order hour may reason batch job limit four hour one batch queue permit execut time hour queue enabl brief period weekend holiday sinc job could preempt batch workload dramat reduc am batch job complet releas resourc might remain unus interact job mani hour time heavi interact use initi interact job wait job termin releas resourc processor alloc restrict also made sever fragment problem interact gener good processor util rate percent consid unaccept cray td gang schedul implement sever signific differ bbn tc sinc initi parallel job td conduct singl applic program place wrapper around commun gang schedul daemon chang user applic script requir fix timeslic period replac event driven schedul abil react instantli chang workload alloc specif processor barrier wire dramat effect perform td substanti effort place develop softwar optim select processor select criterion includ bestfit pack placement job similar schedul characterist close proxim minim content barrier wire circuit context switch logic also requir substanti modif bbn tc support memori page cray td lack support page cray td job preemption result entir memori imag preempt job written disk processor reassign requir one second per preempt processor case processor job context switch one minut requir store preempt job context anoth minut load state anoth job similar size td gang schedul calcul valu job includ processor count job type locat disk memori make job preemption initi decis addit inform associ job class use calcul includ maximum wait time processor limit donotdisturb time multipli minimum timeslic job product job processor count class donotdisturb time multipli minimum timeslic mechan reduc respons prevent costli thrash job memori disk critic maintain high util level cray td gang schedul oper sinc march abl dramat modifi batch environ fulli subscrib machin day oversubscrib night much percent normal mode oper daytim interact class job preempt product class job shortli initi interact job usual continu execut complet without preemption night processor oversubscrib temporarili express purpos execut larger job processor strategi result eight percent job ever preempt batch queue long run job substanti reconfigur time limit increas hour maximum processor alloc for run job queue increas processor enabl time system util increas substanti weekli cpu util rate percent sustain figur show monthli cpu util period month three differ schedul util period unico max nativ cray td oper system cray research djm distribut job manag parallel job schedul origin develop minnesota supercomput center substanti modifi cray research llnl develop gang schedul also shown cpu util report cpu actual assign program memori resid cpu util reduc three thing context switch time cpu unavail program imag transfer disk memori set processor job fit pack problem insuffici work particularli weekend figur cray td cpu util benchmark run unico max earli prototyp llnl gang schedul show percent improv interact job throughput reduct aggreg throughput cost move job state memori disk provid respons fulli compens effici pack processor toru current implement addit perform enhanc show aggreg throughput improv percent figur show gangster display typic cray td daytim util note processor six node assign job total ten interact debug class job run use processor half batch workload current page interact job left side display show content node two processor letter indic job period indic unus node right side display describ job w field show barrier wire use mmss field show total execut time accumul st field show job state iswap in nnew job yet assign node barrier wire oswap out oswap out rrun wawait commenc execut assign node barrier wire gang schedul state inform written disk second interv gangster display updat rate gangster pet_test r h f dbug susan aaaa g prod mahdi ge r h prod u eduardo new w prod delarub new prod n toma mdterrep figur typic daytim gangster display cray td util rate quit satisfactori respons also great import respons quantifi slowdown ratio total time spent system run time three week period juli august interact job execut use total million cpusecond batch job execut use total million cpusecond slowdown aggreg interact workload view quit favor investig show great deal variat slowdown longer run interact job enjoy slowdown percent interact job execut daytim typic begin execut within second preempt interact job execut late night earli morn hour experienc slowdown high a one second job delay minut howev comput configur high util batch job execut hour high slowdown unexpect dec alpha digit unix d oper system includ class schedul essenti fine grain fair share schedul class schedul permit process process group session group class class alloc share cpu resourc exampl eight thread job could place singl class alloc percent cpu resourc ten cpu comput class schedul explicitli reserv eight cpu eight thread parallel job net effect close oper system also recogn advantag keep process particular cpu avoid refresh cach found class schedul actual deliv percent cpu resourc desir gang schedul minim thread migrat processor job fail sustain target number runabl thread class schedul alloc cpu resourc job order sustain high overal system util sinc parallel job normal regist digit unix oper system gang schedul reli upon explicit registr use librari highli desir user code modif gang schedul avoid imposs achiev time imbed gang schedul remot procedur call directli mpi pvm librari would free mani user modifi program present gang schedul applic must modifi simpl librari call includ regist job gang schedul global gang schedul job id return regist resourc requir cpu memori disk space requir specifi job comput gang schedul regist process associ specif process process group session gang schedul job id sinc necessari coordin activ across multipl comput dec alpha gang schedul return fix timeslic model use bbn tc order manag timeslic across multipl comput concept ticket introduc ticket repres specif resourc alloc specif time issu job span multipl comput job execut singl comput preissu ticket manag comput gang schedul daemon make schedul decis start timeslic design permit comput oper independ possibl permit gang schedul job across cluster need ticket manag gang schedul daemon comput cluster associ job lifetim job may given addit ticket revok depend upon chang overal system load job also permit alter resourc requir execut chang number cpu requir job may result revok addit ticket gangster display program rewritten tcltk order provid richer environ detail inform system job statu includ histori cpu real memori virtual memori use updat timeslic boundari inform help system administr programm tune system exampl program cpu alloc cpu use substanti differ desir level parallel achiev matter investig dramat chang real memori use program execut may indic substanti page also warrant investig figur show display system program statu c machin statu figur gangster display dec job statu order insur good respons preserv job gang schedul permit processor reserv nongang schedul job prevent gang schedul job reserv processor comput entir timeslic could prevent login interact signific period gang schedul daemon also react chang overal workload insur resourc fairli distribut activ job gangster also permit sever systemwid oper gang schedul job includ suspend resum kill chang job class exampl kill job oper send kill signal process regist gang schedul job comput run job conclus gang schedul shown provid attract multiprogram environ multiprocessor system sever way parallel job provid access requir resourc simultan provid illus dedic environ interact high prioriti job provid rapid respons excel throughput job larg resourc requir initi rapidli without wait multipl job termin releas resourc high level util maintain wide rang workload experi cray td overwhelmingli posit sustain processor util rate percent cours week provid aggreg interact workload slowdown less percent perform give distribut memori mpp rang perform span largescal parallel applic gener purpos interact comput experi dec alpha environ also favor test period rich interact environ avail fast smp true supercomput class problem address har power cluster parallel job plan call bring two cpu dec alpha cluster control gang schedul fall r cray research inc dedic comput ympc effect distribut schedul parallel workload survey schedul multiprogram parallel system improv util respons gang schedul timeshar massiv parallel machin central user bank user administr unico gang schedul timeshar cray td dynam processor alloc polici multiprogram sharedmemori multiprocessor analysi nonworkconserv processor partit polici dynam coschedul workstat cluster compar gang schedul dynam space share symmetr multiprocessor use automat selfalloc thread asat process control schedul issu multiprogram sharedmemori multiprocessor distribut product control system new graph approach minim processor fragment hypercub multiprocessor tr process control schedul issu multiprogram sharedmemori multiprocessor twodimension buddi system dynam resourc alloc partition mesh connect system dynam processor alloc polici multiprogram sharedmemori multiprocessor effect distribut schedul parallel workload new graph approach minim processor fragment hypercub multiprocessor compar gang schedul dynam space share symmetr multiprocessor use automat selfalloc thread asat analysi nonworkconserv processor partit polici demandbas coschedul parallel job multiprogram multiprocessor improv util respons gang schedul ctr adrian t wong leonid olik william t c kramer teresa l kaltz david h bailey esp system util benchmark proceed acmiee confer supercomput cdrom pe novemb dalla texa unit state junglok yu jinsoo kim seungryoul maeng runtim resolut scheme prioriti boost conflict implicit coschedul journal supercomput v n p april atsushi hori hiroshi tezuka yutaka ishikawa highli effici gang schedul implement proceed acmiee confer supercomput cdrom p novemb san jose ca shahaan ayyub david abramson gridrod dynam runtim schedul grid workflow proceed st annual intern confer supercomput june seattl washington gyu sang choi jinha kim deniz ersoz andi b yoo chita r da comprehens perform energi consumpt analysi schedul altern cluster journal supercomput v n p may gyu sang choi jinha kim deniz ersoz andi b yoo chita r da coschedul cluster viabl altern proceed acmiee confer supercomput p novemb bin lin peter a dinda vsched mix batch interact virtual machin use period realtim schedul proceed acmiee confer supercomput p novemb