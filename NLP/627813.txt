t role polymorph reus mechan schema evolut objectori databas a abstracta seamless approach increment design reus objectori method queri specif present argu avoid minim effort requir manual reprogram method queri due schema modif demonstr role polymorph reus mechan exploit enhanc adapt databas program schema evolut objectori databas salient featur approach use propag pattern mechan propag pattern refin propag pattern employ interest specif formal model oper requir encourag reus oper specif structur modif objectori schema propag pattern refin suit specif reusabl oper modul promot reusabl propag pattern toward oper requir chang approach formal basi emphas structur deriv specif main innov rais level abstract behavior schema design make possibl deriv oper semant structur specif result modular reusabl objectori schema increas b introduct schema evolut gener abil databas system respond real world requir chang allow schema evolv seamlessli possibl seamless extens work carri univers frankfurt support partli european committe esprit project fcube work northeastern univers support part ibm corpor mettler toledo ag nation scienc foundat grant ccr ccr cda research instrument current address ling liu depart comput scienc univers alberta edmonton tg h alberta canada objectori schema import increas applic develop product also facilit support extens exampl addit function ad seamlessli exist applic program may either option ignor requir minim modif ad function becom avail therefor effect manag impact schema modif clearli becom import issu achiev seamless argu one way achiev seamless extens employ polymorph reus mechan objectori databas specif thu applic program remain syntact unchang increment modifi presenc schema evolut paper assum schema modif objectori databas system perform databas popul object instanc applic program implement test thu impact schema modif impli propag restructur oper databas instanc also reprogram exist applic program eg relev method queri exampl exist method definit queri specif languag name use method queri must associ precis path express order travers nest structur object whenev schema modif involv one exist class path express relev class chang modifi schema method queri use old path express must updat accordingli enabl valid modifi schema now mani research studi issu relat avoid databas restructur reorgan due schema modif howev issu avoid minim databas reprogram due schema modif receiv surprisingli littl attent databas research commun reprogram due schema modif avoid reprogram object method databas queri usual follow evolutionari chang logic object structur ie databas schema oper reprogram method queri expens especi relev applic program larg complex moreov oper conflict reus softwar compon object seamless extens reprogram avoid concept polymorph mechan reus softwar compon use util avoid minim reprogram effort requir schema modif one major reason manual reprogram method queri schema modif keep path express requir method definit queri specif consist modifi schema precis knowledg path express actual deriv logic object structur correspond schema although objectori system and none exist objectori dbm product know of includ support structur deriv oper semant structur specif believ ad support automat semiautomat deriv semant oper propag hierarch structur complex object open new possibl reus oper specif such method queri program objectori databas system reprogram alway avoid case schema modif incur chang propag path exist method queri eg new class ad two exist class construct ispartof relationship schema modif chang properti object eg new properti ad exist class manual reprogram exist method queri due schema modif avoid structur deriv oper propag semant especi polymorph reus mechan employ specif method databas queri unfortun schema modif substanti updat logic object structur schema in particular schema modif chang minim knowledg requir specifi method queri reprogram cannot avoid complet baselin mind propos seamless approach increment design reus objectori method queri specif show polymorph reus mechan exploit improv adapt softwar program schema modif objectori databas argu that use approach oper specif becom robust adapt toward schema modif effort manual reprogram method queri necessit schema modif avoid minim salient featur approach use propag pattern mechan propag pattern refin propag pattern seen interest specif formal model oper requir objectori databas system encourag reus oper specif structur modif objectori schema use propag pattern provid method design queri writer opportun specifi oper without detail navig inform propag pattern refin suit specif reusabl oper mod ule promot reusabl propag pattern toward oper requir chang provid number exampl illustr concept propag pattern propag pattern refin show concept import polymorph reus mechan employ avoid minim effort requir manual reprogram method queri schema modif section give brief present refer object model discuss propag pattern formal semant section sever characterist propag pattern formal studi too section introduc mechan propag pattern refin present formal concept number exampl illustr compar approach relat work section section conclud summari discuss implement consider well research direct refer object model use kernel demet data model refer object model allow us show polymorph approach directli avail use exist tool demet systemc tm object refer model describ structur object class term class dictionari graph or call schema graph two kind class distinguish altern class construct class altern class regard abstract class construct class instanti class two kind relationship distinguish class inherit relationship call altern edg object refer relationship call construct edg inform method need attach class deliber omit class dictionari graph stage inject class via propag pattern method propag time see section detail dictionari graph class dictionari graph g defin label direct graph v finit set construct altern vertic respect collect call vertic g l order set label describ charact string ec ternari relat v theta l theta v repres construct edg ea binari relat v theta v repres altern edg present breviti sometim denot class dictionari graph simpli a exampl suppos want model document describ titl author date annot document bodi annot consist number page document bodi contain number compon consist collect page compon either text compon figur compon class dictionari graph repres situat shown figur figur annot date string annot content date author titl page page compon document compon docbodi docbodi onetoon construct edg onetomani construct edg altern edg construct class altern class figur class dictionari graph schema document class dictionari graph exampl describ follow figur annot string date documentdated documentdocbodydocbodi documentannotateannot docbodycomponentscompon componentpagespag annotationcontentpag altern reachabl class dictionari graph vertex altern reachabl vertex denot w u iff one follow condit satisfi let us take look figur accord definit ii class text altern reachabl class compon note transit closur ea sinc reflex antisymmetr transit cyclic altern path allow say class dictionari graph legal cyclic altern path sequel assum class dictionari graph legal definit construct reachabl gamma class dictionari graph vertex construct reachabl w one follow condit satisfi consid figur condit ii definit class vertex page construct reachabl class vertex text appli construct reachabl altern reachabl may directli obtain inherit properti class hierarchi altern edg specif class vertex v altern reachabl vertex u vertex w v construct reachabl u w also construct reachabl v prove properti follow proposit proposit let class dictionari graph vertic u altern reachabl u ie u v class vertex w v u gamma w hold v gamma w proof given u v let w v u gamma w proof follow case definit i v proposit trivial satisfi ii u v ea u gamma w follow case definit case a u w ec u v definit ii v gamma w case b u u v definit iii u v definit ii get v gamma w oper void printdocu document page wrapper document prefix date gprint wrapper page prefix gprint figur propag pattern printdocu case c u induct u gamma u ie number construct edg u u definit ii obtain sinc u v v gamma u u gamma w use definit iii obtain v gamma w iii u st u u u v induct u gamma w definit ii obtain u gamma w sinc u u similarli induct u gamma w u v propag pattern inform overview concept propag pattern origin introduc demet system tm order specifi objectori program higher level abstract believ propag pattern also use conceptu program techniqu databas applic enabl system design programm conceptu applic program system behavior minim knowledg data structur propag pattern seen kind behavior abstract applic program defin pattern oper propag reason behavior depend among cooper object prove effect aid build highli adapt databas program method queri support increment schema evolut consid follow exampl exampl consid class dictionari graph shown figur suppos want method printdocu print creation date document entir document bodi none annot may defin method write follow propag pattern see figur propag pattern state method printdocu print creation date document print entir document content besid annot object document exclud print task idea behind propag pattern base fact number class class dictionari figur need cooper accomplish task printdocu littl inform necessari specifi task sinc rest easili deriv structur specif schema instanc figur specifi interfac method propag claus oper void printdocu sourc propag pattern given claus document specifi propag pattern start target propag pattern provid claus page indic class propag pattern termin with claus bypass annot identifi restrict propag constraint propag pattern order exclud annot print task sourc claus target claus propag constraint claus togeth call propag direct pattern printdocu note instead claus document claus page use edg documentannotateannot would particip propag too undesir ef fect claus wrapper document wrapper page follow actual program code eg c code surround specifi method bodi provid detail syntax descript appendix a remark i write propag pattern requir knowledg detail data struc ture one obviou benefit featur allow reus propag pattern hand sever similar data structur thu increas adapt oper specif futur schema chang instanc write propag pattern printdocu minim knowledg need know document page date annot figur critic inform call hook defin function suppos need modifi schema figur chang layout document logic structur see figur schema modif need reprogram method printdocu although path document page chang modifi schema critic inform specifi printdocu unchang includ modifi document schema thu propag pattern printdocu still use valid meaning propag pattern modifi document schema see section explan ii bypass option includ propag pattern propag path impli given propag direct includ path document docbodi page path document annot page mean task print document print entir document content document annot it iii propag pattern automat translat socal method propag time code written objectori program languag eg c code fragment insert class particip propag pattern travers provid illustr point section contrast robust propag pattern convent objectori databas languag reaction schema modif express oper printdocu use exist objectori languag method design queri writer must refer articl document page figur section annot date string chapter annot content date affili author titl chapter content section page figur modifi class dictionari graph schema document object interest precis path express exampl use sqllike languag propag pattern printdocu defin schema document figur express follow print ddate dtitl dauthor ddocbodycomponentspag document schema modifi item path express involv modifica tion sqllike oper becom invalid instanc document schema updat schema figur ad new properti affili document object insert class section docbodi compon express ddocbodycomponentspag becom invalid must manual updat ddocbodysectionscomponentspag singl case might seem like lot work howev mani routin number applic program implement old schema one singl modif schema could possibl requir massiv rewrit routin relev applic program rather tediou task contrast use propag pattern schema modif usual less impact exist databas program propag pattern specif requir neither knowledg detail structur schema navig inform travers schema exampl propag pattern printdocu defin figur remain valid modifi document schema thu need updat propag pattern even modif document schema summari propag pattern propos novel method specif techniqu promot adapt objectori schema design use databas program languag enhanc robust databas program adapt robust propag pattern achiev delay bind concret propag path use method queri specif method or queri write time oper propag time prior compil time formal definit order defin reus mechan propag pattern present formal definit propag direct propag pattern introduc concept propag scope definit propag direct given class dictionari graph propag direct ffi g defin tripl ffl f denot nonempti set sourc vertic f ffl pc denot propag constraint set edg call restrict constraint x set bypass edg call exclus constraint ffl denot nonempti set target vertic v propag direct specifi set propag path describ set sourc vertic set propag constraint set target vertic definit propag pattern class dictionari graph propag pattern ff g defin tripl m pdma ffl mff method interfac defin tripl u mn lpa denot output type either class vertex keyword void indic empti result type mn method name lpa list n n paramet is paramet name ffl pdff denot nonempti set propag direct g is ffl maff set method annot method annot consist set prefix suffix compon denot w fg pre w fg suf w class vertex v fg pre fg suf denot code fragment describ userdefin method implement fg charact string contain code fragmentgnot definit classifi method annot prefix suffix code fragment classif play import role identifi activ sequenc fragment refer activ sequenc wrapper code fragment propag pattern wrapper order propag pattern specif object type encount travers prefix code fragment execut suffix code fragment exact execut sequenc depend jointli propag pattern class dictionari graph object travers gener follow rule wrapper execut order hold class propag scope see def travers prefix fragment execut suffix fragment class one prefix prefix fragment execut order appear textual propag pattern definit suffix wrapper class execut revers textual class vertex v altern reachabl anoth class vertex u prefix wrapper u execut prefix wrapper v suffix wrapper u execut suffix wrapper v class vertex v construct reachabl anoth class vertex u prefix wrapper u execut prefix wrapper v suffix wrapper u execut suffix wrapper v interest note rule describ depend relationship code fragment special class code fragment gener class specif code could depend gener code gener code depend specif code all rule specifi depend compon class contain class exampl consid propag pattern defin figur two wrapper fragment documentfg document pre pagefg page pre wrapper execut order fragment follow document fg document captur relationship propag pattern class dictionari graph object travers introduc notion propag path propag scope well compat propag pattern reader interest formal semant wrapper order implement consider may refer scope compat propag pattern section defin scope compat propag pattern scope propag pattern identifi given class dictionari graph complet set class vertic relationship edg involv execut task specifi propag pattern compat propag pattern defin famili class dictionari graph propag pattern directli applic definit legal path class dictionari graph two vertic u v g predic hold recurs deriv use follow construct rule ii u gamma v note that legal path p u v set edg ep involv given path p repres as e contain pg comput ep easili obtain use definit definit definit put differ may comput ep recurs construct edg involv path pu v follow ffl u v definit w ffl u gamma v definit two case possibl note u v could sever legal path u v exampl consid document page figur exampl definit ii text gamma page figur gamma page compon text compon figur hold compon page page ec thu accord definit get follow three legal path document page document document docbodi compon figur page document docbodi compon page document annot page uniqu legal path document text page have edocu page f documentdocbodydocbodi docbodycomponentscompon componentpagespageg actual due fact class compon gener class figur text travers third path impli first path second one visit definit propag scope given class dictionari graph propag pattern defin m denot propag direct describ say legal path p satisfi propag constraint follow hold let p set possibl legal path vertex u f vertex v v satisfi v g propag scope direct denot psffi ff defin follow ep propag scope pattern ff denot psff describ union scope propag direct ff is ffnote given propag pattern set propag direct decid propag scope is wherea method signatur method annot specifi propag within scope detail discuss may refer exampl consid figur propag pattern given exampl call ff let denot propag scope direct denot document bypass annot page let psff propag scope pattern ff schema class dictionari graph defin figur thu have componentpagespag componenttext componentfigur documentauthorstr documenttitlestr documentdated g propag pattern ff one propag direct import note propag pattern syntact correct accord definit may semant correct exampl consid simpl class dictionari graph lcdg mean object class compos object class b class c object class b class c contain object class subobject assum follow two propag pattern pp oper void pp oper void pp alabb wrapper wrapper wrapper c wrapper c wrapper wrapper obvious syntact correct propag pattern g term definit how ever pp semant incorrect propag pattern g class c includ propag scope pp wrapper refer c pp invalid one possibl mean defin check semant correct propag pattern given class dictionari graph use concept propag scope definit semant correct propag scope given class dictionari graph propag pattern defin g propag scope psff v psff denot set class vertic involv psff defin follow iii noth els v psff propag pattern ff said semant correct g if u fg u maff sequel assum propag pattern deal correct syntax semant major advantag propag pattern appli one class dictionari graph famili class dictionari graph properti make truli adapt reusabl order determin set class dictionari graph compat given propag pattern need defin notion compat say propag pattern compat class dictionari graph class dictionari includ inform contain hook propag pattern inform hook propag pattern consist vertic label refer bypass edg vertic refer method interfac method annot definit compat propag pattern gamma set class dictionari graph and g gamma let v g eag lg set class vertic set altern edg set label g respect let propag pattern defin g hkff denot set key inform pattern ff we call hook pattern ff x defin x hkff iff one follow condit verifi then g gamma say ff compat g iff hkff exampl recal propag pattern printdocu defin exampl denot ff let class dictionari graph figur figur respect fdocumentannotatepagedateg thu propag pattern printdocu compat g g polymorph charact propag pattern state earlier use propag pattern model dynam part objectori databas system may achiev certain degre adapt flexibl databas specif futur chang especi respect sever type structur chang exampl propag pattern given figur defin class dictionari graph figur also use propag pattern class dictionari graph given figur class schema includ document object page object subpart use propag pattern schema design programm may focu interest compon class structur precis knowledg structur detail model particular schema class dictionari graph requir refer particular featur polymorph charact propag pattern interest note that pattern printdocu propag scope class schema figur quit differ one class schema figur although propag pattern specif valid schema bind involv class code gener base differ polymorph charact propag pattern appar gener speak polymorph propag pattern belong famili adhoc polymorph provid anoth exampl exampl suppos defin trip schema class dictionari graph shown figur trip object part call departur arriv print trip object contain list locat object ident object compon describ citi visit trip list locat object model third kind class repetit class repetit class implement onetomani relationship trip class locat class remaind paper replac onetomani construct edg repetit class order show actual method code class time trip locat locat departur arriv locat number valu figur class dictionari graph schema trip consid oper requir print trip itinerari travel agenc given trip object need print departur time list citi visit follow arriv time applic describ use propag pattern see figur follow list key inform hook propag pattern ftripdeparturearrivalidentg oper void printitinerari trip wrapper trip prefix departur gprint suffix arriv gprint prefix gprint figur exampl propag pattern printitinerari wrapper order matrip follow exampl prefix annot use print departur time trip object travers suffix annot print arriv time trip object travers primari annot replac default travers code print current ident object propag pattern inject class structur figur propag time program fragment automat gener accord given method annot see c code attach class figur obtain run demet systemc exampl c method definit attach class figur gener accord propag pattern given figur complet c method fulli depend specif detail propag pattern use propag pattern unnecessari inform class structur need hardwir specif allow specif propag pattern flexibl toward schema modif exampl suppos schema shown figur extend ad class daytrip trip object contain list daytrip object daytrip object contain list locat object printabl ident object see schema present figur although propag pattern figur defin schema figur modif trip schema requir reprogram method hook printitinerari includ modifi schema figur consequ propag pattern also compat schema figur even reus propag pattern defin figur trip schema figur without chang specif propag pattern code gener previous base propag pattern clearli respect two trip schema propag pattern printitinerari also present kind adhoc polymorph interestingli propag pattern actual compat famili trip class structur long trip class departur arriv part path class ident polymorph may provid sound theoret basi investig adapt objectori schema design schema evolut structur dynam aspect time trip locat number locat departur arriv valu locat void locationlist_iter nextloc locat eachloc void tripprint_itinerari departur g_print locat print_itinerari arriv g_print void g_print void citi print_itinerari figur trip schema gener c code attach correspond class remark reus possibl now shown exampl propag pattern promis conceptu program techniqu model program dynam behavior objectori databas system adapt structur chang schema adapt propag pattern result number interest featur first all specif propag pattern requir hardwir particular class structur leav room deriv behavior abstract base structur abstract increment design method eg propag pattern secondli propag pattern defin term few essenti class relationship specif serv hook class structur rest knowledg requir behavior implement actual deriv basi hook correspond class schema last least propag pattern promot wellknown concept late bind instead bind method class programwrit time propag pattern encourag bind method class propag time prior compil time therefor given propag pattern defin class structur say g chang structur g which affect hook propag pattern littl impact specif propag pattern even though scope modifi class schema could chang accordingli word given propag pattern specif reus modifi class schema addit propag constraint method annot requir bind method interfac annot relev class may need readjust implicitli propag time through propag pattern interpret contrast chang requir dynam behavior aspect schema thu exist propag pattern becom indispens redefin affect propag pattern time trip locat number locat departur arriv valu locat void g_print daytrip void locationlist_iter nextloc locat eachloc void daytriplistprint_itinerari daytriplist_iter nextday eachday print_itinerari void citi print_itinerari void daytripprint_itinerari locat print_itinerari void tripprint_itinerari departur g_print daytrip print_itinerari arriv g_print figur second trip schema gener c code extend exist propag pattern see exampl next section definit benefici reus mechan provid adapt exist propag pattern new requir chang start scratch rewritten complet even affect propag pattern simpl one propag pattern reus program code gener term exist bind method class propag time may inher reus well besid reus specif propag pattern inform involv maximumli local chang exist specif carri one place effort manual preserv consist specif due schema modif minim follow introduc reus mechan propag pattern allow new propag pattern defin term exist one behavior refin mechan behavior refin propag pattern refin propag pattern behavior abstract mechan allow us defin special propag pattern term exist propag pattern a restrict propag behavior one special class argument method b impos extra propag constraint c ad addit method annot motiv exampl exampl consid trip schema figur propag pattern print trip itinerari travel agenc defin figur suppos want modifi trip schema figur ad new properti date class daytrip see figur time trip locat number locat departur arriv valu void g_print daytrip void locationlist_iter nextloc locat eachloc void citi print_itinerari date locat date day year month void daytriplistprint_itinerari daytriplist_iter nextday eachday print_itinerari void daytripprint_itinerari date g_print locat print_itinerari void tripprint_itinerari departur g_print daytrip print_itinerari arriv g_print figur extend trip schema gener c code also want extend task print trip itinerari ad new oper requir that trip date everi travel day must also print compar old propag pattern print itinerari defin figur extend task let us call printdetaileditinerari obvious includ function old propag pattern printitinerari see figur also addit propag constraint method annot instanc follow annot need ad print date travel day within trip wrapper daytrip prefix date gprint oper void printdetaileditinerari trip daytriplocationslocationlist indent wrapper trip prefix departur gprint suffix arriv gprint wrapper daytrip prefix date gprint prefix gprint figur modifi propag pattern printitinerari addit schema figur one path trip edg locat edg date also need add follow extra propag constraint propag pattern defin figur daytriplocationslocationlist bypass daytripdated two way accomplish oper requir chang one way redefin rewrit previou propag pattern printitinerari complet redo bind inject method class propag time exampl may rewrit propag pattern print itinerari complet shown figur although previou bind remain redefin propag pattern compar code gener figur figur need rebind method class regener code modifi propag pattern see code attach class figur way employ reus mechan special propag pattern defin term exist one mean propag constraint method annot new need defin rest directli reus or share with exist pattern mean propag refin mechan furthermor propag time refin propag pattern new method annot need inject involv class sinc previou bind code gener term old method annot may reus accordingli exampl compar propag pattern given figur one defin figur one prefix annot new one extra propag constraint ad moreov addit date task print trip itinerari fact affect old bind method printitinerari class vertex daytrip code gener bind rest remain exactli same thu use propag refin mechan see next section may specifi desir requir chang shown figur oper void printdetaileditinerari behavior refin printitinerari add constraint daytriplocationslocationlist add annot wrapper daytrip prefix date gprint figur refin propag pattern printitinerari definit present formal definit propag pattern refin base concept signatur refin propag direct refin e class dictionari graph given two method interfac m say method interfac signatur refin method interfac denot sig iff follow condit verifi note definit also identifi that given two oper interfac signatur refin may addit argument see condit n m import properti behavior refin propag pattern exampl propag pattern refin group often requir ad extra argument call definit propag direct refin e class dictionari graph two given propag direct defin g let pc propag scope direct ffi ffi respect ffi propag direct refin follow condit verifi is altern reachabl x mean whenev hook propag direct ffi includ hook propag direct propag constraint ffi impli propag constraint is vertex u set target vertic ffi vertex v set target vertic ffi u altern reachabl v condit amount say whenev ffi propag direct refin ffi given sourc vertex u f must correspond sourc vertex say v f u altern reachabl v v u condit identifi similar result target set two case involv condit definit illustr exampl exampl respect follow exampl combin condit infer propag direct refin hold exampl let ffi ffi two propag direct from a c f fcg a c lambda c hold mean ffi propag direct refin ffi definit propag pattern refin e class dictionari graph pdfi mafi two given propag pattern defin g let propag pattern fi behavior refin propag pattern ff iff follow condit verifi mfi sig mff is mfi signatur refin mff mean ffi pdff refin propag direct j pdfi maff mafi definit state fi behavior refin propag pattern ff signatur refin condit propag direct refin condit hold also inclus wrapper set ff wrapper set fi verifi one three invalid fi propag pattern refin ff put differ three condit work togeth guarante scope refin propag pattern made smaller limit wrapper gener propag pattern still applic addit condit present follow wrapper refin rule propag pattern fi behavior refin propag pattern ff prefix wrapper fi may extend prefix wrapper propag pattern ff ad extra wrapper provid addit wrapper fragment exist wrapper may introduc keyword add annot add fragment within wrapper claus serv purpos also definit properti propag pattern fi behavior refin propag pattern ff code fragment defin pattern ff execut order execut propag pattern fi consid motiv exampl given previou section schema figur let ff denot propag pattern defin figur page ffi propag direct ff let fi modifi propag pattern defin figur propag direct fi have wrapper order ff trip fg rip wrapper order fi tripfg rip g therefor definit conclud propag pattern fi correctli defin behavior refin propag pattern ff exampl also show wrapper printitinerari activ order refin propag pattern printdetaileditinerari put differ behavior refin mechan guarante wrapper order refin propag pattern preserv or impli wrapper order given predefin propag pattern import properti propag pattern refin state formal follow proposit reader interest formal proof proposit may refer technic report techniqu develop also use construct proof proposit proposit wrapper order properti propag pattern refin let e class dictionari graph two given propag pattern compat g propag pattern fi behavior refin propag pattern ff wrapper pattern ff execut order mafi maff note propag pattern refin mechan increas flexibl adapt propag pattern futur oper requir chang also use promot concept propag pattern inherit class dictionari graph especi need appli exist method function subset current domain codomain instead exampl recal propag pattern printdocu given figur page suppos propag pattern use propag pattern document schema given figur want add new method print document type articl ie subset document object provid support behavior refin propag pattern could easili reus propag pattern printdocu obtain special propag pattern printarticl job see figur oper void printarticl behavior refin printdocu articl page figur refin propag pattern figur let ff denot propag pattern printdocu fi denot printarticl defin class schema figur obvious i mfi signatur refin mff sinc ff fi return void empti argument list ii pdfi propag direct refin pdff sinc document articl document thu definit propag pattern fi printarticl correct behavior refin propag pattern ff printdocu anoth interest featur propag pattern refin present transit prove propag pattern ff fi fl pattern ff behavior refin pattern fi pattern fi behavior refin pattern fl pattern ff also behavior refin pattern fl proposit let predic pprefinementff fi hold propag pattern ff behavior refin propag pattern fi proof let ff denot propag pattern describ tripl mff pdff maff need prove ii j pdfl exist ffi pdff ffi pd j proof may proceed follow pprefinementff fi pprefinementfi fl definit mff sig mfi mfi sig mfl held prove mff sig mfl let mff sig mfi get similarli mfi sig mfl get u thu accord definit iii u hold proof ii goe follow pprefinementfi fl definit get j pdfl quit similarli pprefinementff fi get pdfi ffi pdff st accord definit could easili prove j pdfl ffi pdff st ffi pd j hold proof iii follow directli transit set inclus sinc accord given predic definit maff mafi mafi mafl transit propag pattern refin provid sound basi increment design propag pattern far shown propag pattern refin import behavior abstract mechan reus method definit queri specif encourag inform local offer better flexibl adapt toward schema modif especi toward futur oper requir chang mean behavior refin mechan three level reusabl obtain manag oper schema chang i specif propag pattern easili reus see figur figur ii bind method annot class propag time larg reus compar bind shown figur figur iii gener code eg c possibl reus well compar code gener figur figur believ propag pattern refin mechan increas potenti benefit use propag pattern higher level databas program techniqu relat research schema evolut commonli recogn requir facil persist objectori system gener speak schema describ interfac set applic program persist repositori object schema chang interfac possibl incur incompat element side now two main research direct achiev seamless schema evolut objectori databas system one effect integr schema modif propag schema chang object instanc instanc adapt well applic program program adapt sever research project contribut issu one way other encor gemston orion otgen one recent contribut along direct lazi updat propag problem solut address provid mechan guarante correct updat propag term convers function presenc schema modif larg effort howev remain requir practic order provid adequ propag mechan make instanc adapt program adapt effect direct improv design databas method queri specif languag softwar program written advanc languag higher adapt seamless schema evolut howev surprisingli littl attent paid databas commun toward direct although softwar reus one critic issu softwar engin last decad shown program adapt exceedingli hard type languag such c even simpl schema chang therefor import benefici put research effort avoid minim program chang anticip schema updat rather tri fix thing chang occur work report paper present contribut use polymorph reus mechan achiev higher adapt objectori databas specif present two polymorph reus mechan propag pattern propag pattern refin shown role two reus mechan avoid minim impact schema evolut applic program objectori databas work mostli encourag demet system contract model activ model comparison contract model propag pattern contract encourag separ object behavior specif object structur specif present interest techniqu oper specif also number differ first all propag pattern provid better adapt toward schema evolut chang manag mean propag pattern propag pattern refin mechan reprogram method queri due schema modif avoid minim second propag pattern concentr specif reason oper propag among group relat class wherea contract emphas oblig specif particip class accomplish task defin group cooper class third conform contract class requir explicitli contract model wherea conform propag pattern class deriv implicitli propag time compar reus mechan propag pattern behavior abstract mechan defin activ model interest note although similar concept propag pattern refin concept activ special emphasi function activ model declar specif reason commun behavior object consider specifi reason oper propag among cooper class current activ model effici implement propag pattern describ paper show gener effici objectori program say c given propag pattern compat class dictionari graph proof correct core translat given work present formal framework maintain behavior consist objectori system softwar evolut framework effect coupl chang avoid approach propag pattern chang manag mechan fulli autom evolut class structur transform may render exist object program inconsist paper identifi introduc inconsist provid necessari object program transform reinstat consist maintain behavior system formal definit behavior equival given prove behavior equival propag pattern paper defin formal semant propag pattern describ proof system semant semant formal defin order wrapper execut prefix suffix wrapper feasibl evolut framework demonstr repres set primit class structur transform mainli base extens relat identifi extens relat use mean qualiti control schema transform quit differ work present paper focus reus exist design specif schema modif requir chang exist propag pattern reus extend increment cover new requir especi structur oper chang requir anoth interest project base graph class hierarchi oql propos oql queri specifi subgraph schema graph subgraph contain travers object class branch associ oper compar calculusbas languag oql approach emphas adapt design specif databas facilit program adapt chang propag anticip schema chang conclud remark shown viabil approach increment design reus objectori databas specif argu rais level abstract specif object method databas queri show help avoid minim reprogram method queri due schema modif salient featur approach use propag pattern propag pattern refin main benefit use polymorph reus mechan objectori databas specif follow ffl concept propag pattern present promis techniqu enhanc robust method queri program respect schema modif use propag pattern provid method design queri writer opportun specifi oper without knowledg detail navig inform compar exist objectori languag effort requir manual reprogram method queri due schema modif larg avoid minim ffl concept propag pattern refin import mechan abstract reus propag pattern promot increment design method especi use deal class oper requir chang knowledg none exist objectori specif languag provid similar support increment definit method ffl studi formal semant propag pattern propag pattern refin formal basi provid sound framework implement develop idea present here shown exampl previou section propag pattern current wellsupport case tool call demet system tm c therefor easili adopt c base objectori databas system demet c tool order give road map possibl implement consider propag pattern propag pattern refin would like add brief illustr demet c tool translat propag pattern c code demet tool divid three categori consist checker code gener runtim librari consist checker code gener use compiletim divid structur behavior part appli class dictionari graph propag pattern respect word compil time applic develop consist exclus c code runtim construct need implement propag pattern gain two advantag system speed degrad due propag pattern runtim overhead desir system could decoupl demet system time becom standalon applic structur consist checker first check class dictionari graph valid structur code gener gener c class definit accord class dictionari graph task behavior consist checker take input list propag pattern class dictionari graph examin whether propag pattern syntact correct whether compat given class dictionari graph so behavior code gener gener appropri member function header c implement futur work research develop propag pattern behavior refin propag pattern continu interest investig theoret justif practic applic approach exampl would interest extend polymorph reus mechan discuss paper use candid objectori view defini tion object view import featur persist oodb system becom popular use view approach deal interoper distribut heterogen databas environ believ use polymorph reus mechan would greatli enhanc adapt robust global and virtual view schema thu applic program develop user differ site local schema chang also interest explor issu critic rule achiev good understand effect translat propag pattern behavior refin propag pattern polymorph type theori may enhanc formal develop propag pattern kind behavior abstract propag pattern acknowledg would like thank subject editor stanley su editorinchief benjamin wah review help comment suggest thank also due susan even markku sakkinen ignacio silvalep cun xiao discuss remark earlier version paper extend abstract publish proceed icd r semant implement schema evolut objectori data base maintain behavior consist schema evolut view mechnism objectori databas semant multipl inherit understand type develop objectori dbm specifi behavior composit objectori system autom chang manag objectori system breakdown inform model multidatabas system art grow adapt objectori softwar formul benefit law demet experi graphbas propag pattern program tool adapt objectori program use graphbas custom formal foundat objectori data model activ model declar approach captur commun behavior objectori databas effici implement adapt softwar report demeterc type evolut objectori data base schema modif without databas reorgan framework schema updat objectori databas framework schema updat objectori databas system tr ctr zahir tari xue li ling liu type safeti context method updat journal intellig inform system v n p novdec salvator t march charl a wood gove n allen research frontier object technolog inform system frontier v n p juli