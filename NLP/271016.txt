t multifram model realtim task a abstractth wellknown period task model liu layland assum worstcas execut time bound everi task may pessimist worstcas execut time task much longer averag paper give multifram realtim task model allow execut time task vari one instanc anoth specifi execut time task term sequenc number investig schedul problem model preemptiv fix prioriti schedul polici show signific improv util bound establish model b introduct wellknown period task model liu laylandl assum worstcas execut time bound everi task reason assumpt processcontroltyp realtim applic may overli conserv situat averagecas execut time task significantli smaller worstcas case critic ensur complet task deadlin worstcas execut time use price excess capac approach consid make better use system resourc substanti excess capac exampl mani algorithm develop schedul besteffort task resourc unus hardrealtim period task aperiod task schedul studi extens differ aperiod server algorithm develop schedul togeth period task etc imprecis comput model use system cannot schedul desir comput also investig adapt schedul model time paramet realtim task may parameter howev none work mention address schedul realtim task execut time task may vari greatli follow known pattern paper propos multifram task model take account execut time pattern shall show better schedul bound obtain multifram model execut time task specifi finit list number repeat list period sequenc number gener execut time instanc frame job task bound correspond number period sequenc consid follow exampl suppos comput system use track vehicl regist statu everi vehicl everi time unit get complet pictur comput take time unit perform track execut ie comput util suppos addit comput requir execut routin task take time unit task execut everi time unit obvious comput cannot handl task routin track figur schedul vehicl track system howev track task relax requir time unit execut everi period comput abl perform track routin task see time diagram figur solut cannot obtain ll model sinc worstcas execut time track task period task set ll model given f g the first compon pair execut time second period task set util factor thu unschedul also notic cannot replac track task pair period task f g sinc schedul may defer execut first execut extend past interv fact must finish time paper shall investig schedul task multifram task model preemptiv fix prioriti schedul polici gener allow task sporad instead period sporad task one whose request may occur period minimum separ two success request task period task limit case sporad task whose request arriv maximum allow rate shall establish util bound model shown subsum ll result obtain result howev requir execut time multifram task satisfi fairli liber constraint seen schedul bound improv substanti larg varianc peak nonpeak execut time task use multifram model safe admit realtim task ll model paper organ follow section present multifram realtim task model defin terminolog prove basic result schedul multifram task section investig schedul bound fix prioriti schedul multifram model section conclus multifram task model rest paper shall assum time valu domain set nonneg real number time paramet follow definit nonneg real number remark result still hold domain time nonneg integ realtim task tupl gamma p gamma array n execut time minimum separ time ie readi time two consecut frame request must least p time unit apart execut time ith frame task c igamma mod n i deadlin frame p readi time exampl multifram task minimum separ time execut time altern separ two consecut readi time alway p readi time first frame task time task reduc period task proof follow shall often associ multifram task whose gamma one element ie n period task ll model execut time whose period minimum separ multifram task exampl task one execut time correspond ll task shall call period task ll model ll task whenev confus shall call multifram task simpli task consid task one execut time let shall call c peak execut time task shall call pair correspond ll task multifram task set n task ft call u peak util factor s call u maximum averag util factor s given schedul polici a call u util bound task set s schedul whenev u u note u also util factor ss correspond ll task set exampl consid task set g correspond ll task set isft g peak util factor u maximum averag util factor u pessimist way analyz schedul multifram task set consid schedul correspond ll task set thi howev may result reject mani task set actual schedul exampl task set exampl reject use ll model wherea actual schedul fix prioriti schedul rma rate monoton assign shall show later respect schedul polici a task set said fulli util processor schedul a increas execut time frame task result modifi task set unschedul a note u greatest lower bound fulli util task set respect schedul polici a lemma schedul polici a u proof shall prove contradict suppos u larger arbitrarili form task set c peak execut time sigma n peak frame task start time cannot finish within p schedul violat definit u cannot exceed qed suppos schedul polici use schedul multifram ll task set let util bound u multifram task set let util bound correspond ll task set u c u proof proof contradict consid task set size n suppos u u c set unschedul correspond ll task set util factor u schedul suppos ith frame task j miss deadlin time j everi task locat time point k readi time latest frame k k j transform readi time pattern follow interv k push readi time frame toward k separ time consecut frame equal p k set execut time peak execut time k add peak frame k maximum rate interv k j transform readi time pattern least stringent origin case ith frame j still miss deadlin howev transform case actual readi time pattern schedul henc contradict qed inequ lemma strict intuit u task set larger u c much framebyfram varianc execut time task set task set unlik schedul howev varianc suffici big schedul polici admit task quantifi determin util bound task model shall show establish exact bound execut time task satisfi rather liber restrict maximum array execut time c array said accumul monoton sigma mj said array execut time am intuit task task whose total execut time sequenc l frame largest among sizel frame sequenc first frame sequenc frame peak execut time instanc task exampl am note task multimedia applic usual satisfi restrict follow section assum task satisfi properti seen without loss gener assum first compon array execut time everi task peak execut time ie c c fix prioriti schedul section shall show that preemptiv fixedprior schedul polici multifram task model higher util bound ll model consid execut time varianc explicitli util bound ll model given follow theorem much cite paper theorem theorem ll task set size n util bound preemptiv fix prioriti schudul polici n n gamma definit critic instanc multifram task period peak execut time request simultan peak execut time higher prioriti task higher prioriti task request execut maximum rate theorem preemptiv fix prioriti schedul polici multifram task schedul schedul critic instanc proof suppos task schedul critic instanc shall prove frame schedul regardless readi time first prove first frame k schedul let k readi time first frame finish end trace backward time timet locat point none higher prioriti task execut alway exist sinc time task schedul let us pretend k s first frame becom readi time still finish time end let us shift readi time pattern higher prioriti task frame becom readi becom readi postpon finish time k s first frame point earlier end say end word end end higher prioriti task shift readi time everi frame toward time separ two consecut frame alway minimum separ time postpon finish time k s first frame earlier end word end now shift higher prioriti task frame peak frame start sinc gamma k am shift effect postpon finish time k end construct result request pattern critic instanc k sinc schedul critic instanc first frame schedul next prove frame k also schedul done induct induct base case first frame k schedul induct step suppos first frame k schedul let us consid ith frame appli argument befor suppos frame start time finish end again trace backward along time line hit point higher prioriti task execut alway exist sinc higher prioriti task execut finish time ith frame let i th frame start time still finish time end shift request higher prioriti task frame start start postpon finish time k s i th frame point time earlier end say end higher prioriti task shift readi time everi frame toward time separ time two consecut frame alway minimum separ time task postpon finish time k s i th frame earlier end word end higher prioriti task shift frame peak frame start again sinc gamma am postpon finish time k s i th frame end last case actual critic instanc k sinc k schedul critic instanc th frame also schedul thu prove theorem qed shall say task pass critic instanc test schedul critic instanc corollari task set schedul fix prioriti schedul task pass critic instanc test on assum without loss gener c peak execut time task without affect schedul task set alway replac task whose peek execut time first frame one whose execut time array obtain rotat s array peek execut time c argument proof theorem clear task replac affect result critic instanc test exampl task set f g schedul ratemonoton assign u task pass critic instanc test howev correspond ll task set f g unschedul fix prioriti assign exampl ll task set f g util factor obvious unschedul schedul polici howev requir first task relax everi frame need time unit task set becom schedul rma relax case given multifram task set f g pass critic instanc test remark exampl specifi vehicl track system mention begin paper argument establish schedul exampl also show even total peak util exce task set may still schedul cours averag util must larger schedul complex schedul test base corollari op p biggest period theorem feasibl prioriti assign exist multifram task set ratemonoton prioriti assign feasibl task set proof suppos feasibl prioriti assign exist task set let j two task adjac prioriti assign higher prioriti one suppos us interchang prioriti j difficult see result prioriti assign still feasibl check critic instanc ratemonoton prioriti assign obtain prioriti order finit sequenc pairwis prioriti reorder abov qed comput util bound need follow lemma definit let psin ff denot minimum express sigma subject constraint proof substitut x pn comput minim sigma n subject x strictli convex problem uniqu critic point absolut minimum symmetri minim problem variabl mean x s equal solut x definit task set said extrem util processor schedul increas peak execut time lowest prioriti task amount result task set unschedul shall use u e denot greatest lower bound extrem util task set import note distinct fulli util extrem util task set crucial proof lemma lemma lemma consid task set size n satisfi restrict r proof theorem theorem need consid case task start time request maximum rate thereaft use ratemonoton prioriti assign check schedul interv time p n sinc know c c involv critic instanc test first util bound correspond case everi c c equal r sinc increas c without chang u increas c take cpu time follow proof assum ratio equal r schedul extrem util task set u shall prove four claim second request must finish p n suppos ffi c schedul p n deriv new task set chang follow execut time n arbitrarili reduc execut time maintain properti execut time array easi show schedul also extrem util processor contradict assumpt u e minimum extrem util task set second request complet p n deriv new task set chang follow execut time n arbitrarili reduc execut time maintain properti execut time array easi check schedul also extrem util processor contradict assumpt u e minimum c n finish p instead prove claim prove follow equival claim consid extrem util task set satisfi claim claim last part c finish p p i correspond minim case claim deriv new task set chang follow execut time n arbitrarili reduc execut time n maintain properti execut time array suppos p j smallest valu satisfi accord claim claim second request task n schedul p j p n sinc know first request task n schedul p j extrem util cpu know part c n schedul p j larger schedul p j guarante new task set still schedul extrem util cpu r henc task set cannot minim case establish claim second request complet exactli time p i second request complet ahead p i processor idl complet time p i show extrem util processor cannot true ffi second request deriv new task set chang follow execut time i arbitrarili reduc execut time maintain properti execut time array easi check schedul also extrem util process contradict assumpt u e minimum second request complet exactli time i four claim lemma conclud r set size n u r proof again assum c c equal r task request maximum rate task extrem util task set p p increas c n amount need extrem util processor increas smaller c let old new util factor u u respect therefor conclud minimum util occur among task set longest period larger twice shortest period establish lemma qed theorem let set size n util bound given r r proof definit least upper bound minimum u e task set size rang n min n r r observ liu layland theorem special case theorem frame separ time equal period follow tabl summar rel advantag use multifram model ll model determin whether set task schedul column ull give util bound ll model tabl util bound percentag improv conclus futur research tabl show percentag improv bound liu layland bound specif tabl entri denot u ull gamma differ combin r the ratio peak execut time execut time second frame n the number task task set exampl suppos system capabl process one gigabyt data per second set task need process one megabyt data per second use util bound ln allow task theorem allow least task over improv r r increas bound improv increas actual r simpl calcul show bound say model excel execut time task vari sharpli also interest compar maximum averag util ll bound howev maximum averag util factor may arbitrarili low even maximum util factor high one simpl exampl f g so take instead averag first two frame task tabl calcul r u ll ratio biggest possibl maximum averag util factor liu layland bound tabl show still maintain good overal system util task execut time vari conclus futur research paper give multifram model realtim task amen specifi task whose execut time vari one instanc anoth model execut time success instanc task specifi finit array number rather singl number worstcas execut time classic liu layland model use new model deriv util bound preemptiv fix prioriti schedul assumpt execut time array task satisfi accumul conclus futur research tabl ratio maximum averag ll bound monoton properti properti rather liber consist common encod scheme multimedia applic one execut time array domin other show signific improv util bound liu layland model result use model use dynam applic number task vari figur merit resourc alloc number task system admit without caus time failur work way appli model reallif applic video stream schedul report futur r schedul algorithm multiprogram hard realtim environ fundament design problem distribut system hardrealtim envi ronment load adjust adapt realtim system rate monoton schedul algorithm exact character averag case behavior assign realtim task homogen multiprocessor system deferr server algorithm enhanc aperiod respons hard realtim environ practic method increas processor util aperiod server deadlin schedul environ aperiod task schedul hard realtim system schedul period job allow imprecis result tr ctr teiwei kuo lipin chang yuhua liu kweijay lin effici onlin schedul test realtim system ieee transact softwar engin v n p august marek jersak rafik henia rolf ernst contextawar perform analysi effici embed system design proceed confer design autom test europ p februari jrn migg alain jeanmari nicola navet time analysi compound schedul polici applic posixb journal schedul v n p septemberoctob samarjit chakraborti thoma erlebach simon knzli lothar thiel schedul eventdriven code block realtim embed system proceed th confer design autom june new orlean louisiana usa sanjoy k baruah dynam staticprior schedul recur realtim task realtim system v n p januari changgun lee lui sha avinash peddi enhanc util bound qo manag ieee transact comput v n p februari michael a pali granular metric finegrain realtim schedul ieee transact comput v n p decemb tarek f abdelzah vivek sharma chenyang lu util bound aperiod task prioriti driven schedul ieee transact comput v n p march christoph d gill david l levin dougla c schmidt design perform realtim corba schedulingservic realtim system v n p march chinfu kuo teiwei kuo cheng chang realtim digit signal process phase array radar ieee transact parallel distribut system v n p may lui sha tarek abdelzah karlerik rzn anton cervin theodor baker alan burn giorgio buttazzo marco caccamo john lehoczki aloysiu k mok real time schedul theori histor perspect realtim system v n p novemberdecemb