t limit control flow analysi regress test select a autom analys regress test select rt attempt determin modifi program run test t behavior old version program run t without run new program t rt analys must confront priceperform tradeoff precis analysi might abl elimin test could take much longer runw focu applic control flow analysi control flow coverag rel inexpens analys rt problem consid precis rt algorithm affect type coverag inform collect defin strong optim condit edgeoptim rt algorithm base edg coverag precis captur algorithm report retest need when actual not reformul rothermel harrold rt algorithm present three new algorithm improv it culmin edgeoptim algorithm final consid path coverag use improv precis rt algorithm b introduct goal regress test select rt analysi answer follow question inexpens possibl given test input program old new newt observ behavior oldt appear acmsigsoft intern symposium softwar test analysi cours desir answer question without run program new test t rt analysi use static analysi program old new combin dynam inform such coverag collect execut oldt order make determin rt algorithm either select test retest elimin test static analys rt come mani varieti examin syntact structur program other use control flow control depend inform ambiti analys examin defus chain flow depend program typic analys precis previou greater cost safe conserv rt analysi never elimin test newt differ behavior oldt safe algorithm may select test could elimin focu applic control flow analysi safe regress test from use crt refer control flowbas rt previou work improv precis crt analysi left open question limit analys are crt improv two way increas precis analysi appli control flow graph represent program old new increas precis dynam inform record execut oldt address issu interact them result threefold ffl section build recent work crt rothermel harrold show strong relationship crt determinist finit state automata intersect regular languag defin intersect graph two control flow graph precis captur goal crt form basi famili crt algorithm parameter dynam inform collect oldt ffl section consid power crt dynam inform record oldt edg coverag ie whether edg old control flow graph execut defin strong optim condit edg optim crt algorithm base edg coverag reformul rothermel harrold crt algorithm term intersect graph present three new algorithm improv it culmin edgeoptim algorithm first algorithm elimin test whenev rothermelharrold algorithm doe safe elimin test gener cost next two algorithm even precis greater comput cost ffl section record path coverag inform rather edg coverag improv upon edg optim algorithm howev path profil limit track path bound length which motiv concern effici adversari alway abl choos program new caus crt algorithm base path coverag fail section review relat work section summar paper background assum standard imper languag c c java control flow graph procedur p complet determin compil time ps control flow graph g vertex repres basic block instruct edg repres control transit block translat abstract syntax tree represent procedur control flow graph represent well known sinc g execut represent p talk execut p g test t defin graph terminolog use sequel s x direct control flow graph vertic uniqu entri vertex s vertic reachabl exit vertex x successor reachabl vertic vertex v label bbv code basic block contain two differ vertic may ident label often conveni refer vertex label often so distinguish vertic ident label necessari edg sourc vertex v target vertex w via direct edg label l outgo edg vertex uniqu label label valu typic true fals boolean predic determin control transfer next execut bbv vertex v one outgo edg label e shown figur sinc outgo edg vertex uniqu label edg may also repres pair v l call control transit transit short vertex succv l denot vertex lsuccessor vertex v if path g sequenc edg target vertex e sourc vertex e i path may repres equival altern sequenc vertic edg label sourc vertex edg e for n v n target vertex e n l label edg e given path p n edg and n i th vertex i th edg label n number outgo edg vertex v label edg uniqu defin bbv thu differ vertic ident basic block number outgo edg ident label path begin design vertex for purpos entri vertex s equival repres sequenc basic block label rather sequenc edg vertic label complet path path x figur show two program p p correspond control flow graph g g g g entri vertex exit vertex label vertex v denot basic block bbv graph g one occurr basic block c graph g two occurr c graph g intersect graph g g discuss next crt intersect graph control flow analysi graphic structur program an alyz semant statement program not except say whether two statement textual ident impli crt algorithm must assum everi complet path graph potenti execut even though may unexecut path unexecut path cannot affect safeti crt algorithm may decreas preci sion compil optim crt algorithm must abl determin two basic block semant equival cours undecid gen eral follow rothermel harrold use textual equival code conserv approxim semant equiva lenc captur definit equival vertic two vertic v w from potenti differ graph equival code bbv lexicograph ident bbw let equivvw true iff v equival w equival vertic extend equival path follow path p q ident p q length equivp v i q v i true i p l i is p q ident word over alphabet basic block label follow simpl definit a restat found precis captur power crt graph g run input denot gt travers complet path p graph g contain complet path p ident p g t travers path p observ behavior gt definit translat trivial precis comput expens crt algorithm record complet execut path gt via code instrument trace path compar control flow graph g determin path exist there see later section algorithm record complet execut path gt forc adversari choos appropri graph g select test could elimin observ control flow graph g may view determinist finit automaton dfa start state final state x accept languag lg set complet path g precis control flow graph g straightforward interpret dfa vertex v v correspond two exit vertex x equival exit vertic ie vertic successor uu f f f g aa reject accept u c els z els c w u f f z g u c w u f f f g figur exampl program p p correspond control flow graph g g intersect graph g g g state v v state connect state transit label bbv edg e also interpret state transit edg v l w interpret state transit alphabet dfa union basic block edg label start state x final state recogn precis complet path g rather repres control flow graph verbos fashion choos present tradit form keep dfa interpret mind given insight crt question reduc to complet path p lg also lg path retest need let dgg path retest need crt algorithm optim if given path p igg algorithm report p igg crt algorithm safe if given path p dgg algorithm report p help reason igg dgg defin new graph intersect graph also straightforward interpret dfa graph effici construct g g vertex set v g simpli cross product v v two addit vertic use follow relat help defin essenti optim version product automaton g g edg set e defin term l equiv relat entri vertex g restrict vertex edg set g vertic edg reachabl vertic other s edg reachabl equival pair v v reachabl s path p g v prefix path igg reject repres reject state correspond path dgg repres accept state correspond path igg figur show intersect graph g graph g g figur see two path igg correspond path g correspond path g are a f c f graph g also show path begin transit at dgg two straightforward result intersect graph g inform rest paper path p igg iff repres path s accept g path p dgg iff repres path s reject g cours everi complet path p g either igg dgg theorem let g intersect graph graph g g path g igg iff g theorem let g intersect graph graph g g path g dgg iff exist n g figur show intersect graph graph g g comput via synchron depthfirst search graph procedur df alway call equival vertic v v v v alreadi v pair visit procedur return otherwis v v insert v correspond edg consid turn edg appropri insert e reflect whether vertic w w equival whether w exit vertex g algorithm recurs w w equival w exit vertex g algorithm also comput set vertic v accept accept reachabl g use later worstcas time complex algorithm ojej delta je j note necessari store relat e explicitli sinc deriv demand v e e thu space complex store intersect graph as well v accept worst case crt use edg coverag limit crt given dynam inform collect gt edg coverag consid complet path p repres execut path gt set edg e p g cover may anoth complet path q g distinct p e repres set path includ p whose edg set ident e p determin whether g need retest crt algorithm use edg coverag must consid at least implicitli path p p path member igg crt algorithm elimin test gener path p howev even one path p p dgg algorithm must select test order safe given insight defin mean crt algorithm edgeoptim crt algorithm edgeoptim path p p p igg algorithm report p igg note v v equival w must defin sinc bbv ident bbv note path exist g acycl case complet path differ set edg complet path accept facceptg procedur begin edg els els accept accept fvv g ni od figur construct intersect graph g g via synchron depthfirst search two graph algorithm also determin set vertic v accept accept reachabl accept reject accept reject accept reject rothermelharrold algorithm partialreach algorithm fullreach algorithm accept reject validreach algorithm figur four edgebas crt algorithm summar pictori intersect graph dot outlin repres v accept vertic g accept reachabl algorithm time space precis edgeoptim rothermelharrold ojej delta je partialreach ojej delta je fullreach ojej delta je tabl comparison four edgebas crt algorithm first present rothermelharrold rh algorithm restat term intersect graph present three new algo rithm culmin edgeoptim algorithm figur illustr rh algorithm four algorithm doe use intersect graph pictur show start vertex state reject accept dot outlin repres accept vertic g accept reachabl ffl rh algorithm detect whether e p cover edg incid reject not path p must igg ffl partialreach algorithm detect whether e p cover path intersect graph edg leav accept reject vertex again path exist p igg surpris result partialreach reject determin time space complex equival rh algorithm algorithm precis rh algorithm sinc may case e p contain edg incid reject cover partial path vertex v accept reject ffl fullreach algorithm determin whether e p cover path s reject not p igg algorithm precis partialreach al gorithm greater cost howev still edg optim ffl validreach algorithm make use partial order v edg g rule certain invalid path show p cannot cover valid reach path reject s yield edgeoptim algorithm tabl summar time space complex four al gorithm repres set test g run edgebas crt algorithm incur storag cost ojej delta jt edg coverag inform store test factor discuss space complex algorithm equival igg empti assum four algorithm initi check simpl condit proceed rothermelharrold algorithm present rh algorithm term intersect graph rh algorithm first comput set control transit incid reject use synchron depthfirst search graph g g similar figur given edg set e p rh algorithm oper must igg sinc contain transit d requir p dgg otherwis conserv assum p dgg consid intersect graph figur graph g sinc everi path x graph g contain one transit rh algorithm requir test rerun g howev exampl path p igg rh algorithm edgeoptim consid path transit g cover e p shown bold edg figur complet path p cover exactli transit a f ct we time space complex comput clearli depthfirst search algorithm figur comput test set test whether set edg cover gt contain transit d take ojej delta jt time thu rh algorithm overal run time ojej delta je space complex ojv j delta jv j rothermel harrold show g g multiplyvisit vertex algorithm never report p dgg actual igg mean algorithm optim and thu edgeoptim class graph state term intersect graph g vertex v g multiplyvisit vertex if figur vertex c graph g multiplyvisit vertex rothermel harrold ran algorithm set seven small aa uu f f f f g reject accept u f f g u f f f g u c els c w u c w figur exampl show partialreach algorithm edgeoptim program line code modifi version one larger program line code modifi version found multiplyvisit vertex condit occur program version experiment clearli need larger divers set program see often condit aris partialreach algorithm let us reconsid exampl figur dot outlin graph g show set v accept transit leav set at path lead reject must includ transit thu transit e p p must igg case path e ctweg consid project e p onto edg set g graph g result the edg e shown bold figur straightforward see that gener edg v w g reject must reachabl w g therefor edg v accept w v accept must case reject reachabl w observ lead partialreach algorithm time space complex ident rh algorithm yet precis algorithm requir construct g p abl determin whether reject partial reachabl edg leav v accept similar rh algorithm algorithm first comput set reject transit g use intersect accept g set reject contain transit g transfer control accept algorithm oper follow then p igg sinc p must contain transit reject order dgg otherwis conserv assum p dgg easi see partialreach algorithm subsum rh algorithm sinc whenev reject empti empti state anoth way whenev rh algorithm report p igg partialreach algorithm report same shown figur set v accept determin construct intersect graph ojej delta je space comput reject take ojej simpli requir visit everi edg e e determin e leav accept so transit e g correspond e ad reject reject comput rest algorithm ident rh algorithm test check whether set edg cover test edg reject thu time space complex algorithm ident rh algorithm fullreach algorithm figur show partialreach algorithm edg optim exampl intersect graph g thu path igg p p igg rh algorithm partial reachabl algorithm fail report p igg sinc transit ct cover path p note howev g p reject vertex reachabl s gener either reject accept must reachabl s g fullreach algorithm simpl reject reachabl g p igg otherwis conserv assum p dgg consid graph g figur complet path g contain u g f u u els f f uu f f f g u reject accept figur exampl show fullreach algorithm edgeoptim transit addit contain transit at therefor path p vertex reject reachabl vertex aa g df algorithm figur easili modifi comput reachabl reject g p must run test result overal run time ojej delta je j space complex remain befor validreach algorithm edgeoptim algorithm shown figur fullreach algorithm edg optim consid path graph g igg coverag g everi path g cover exactli transit igg nonetheless project e p onto g yield graph reject reachabl uu via path howev notic path graph g includ transit at a f first occurr transit at path must occur first occurr a f therefor path p p must properti sinc definit cover at a f ue set transit path reject reachabl g includ ue includ at a f so path cannot p p ignor problem fullreach algorithm consid path p p reach reject g refin notion reachabl arriv edgeoptim algorithm defin partial order edg graph g follow contain edg e f first instanc e p preced first instanc f p leav reader prove v inde partial order it antisymmetr transit reflex equival construct definit v follow domin f f reachabl e e reachabl f v relat graph g figur ue v at v a f validreach algorithm base follow observa tion path q contain transit f e p contain transit e e p e v f g path q prefix cannot member p p say path respect v validreach algorithm first check reject reachabl s g not p igg befor s reachabl algorithm comput r set transit g reachabl s reject reachabl also comput project r transit onto g is r subset e p e p contain edg e f e r f r e v f algorithm output p otherwis algorithm conserv assum p dgg straightforward show validreach algorithm safe follow theorem show also edgeoptim theorem given graph g g intersect graph g p p igg complet path p g either ffl reject reachabl s p proof reject reachabl g done instead suppos reject reachabl s g furthermor assum f r e given assumpt show complet path q e contradict initi assumpt path edg coverag equal e p igg two part proof show path q g entri v cover transit r respect v edg e domin edg f graph g everi path f g contain e u g f u f f f g uu f f f u u vreject accept figur exampl crt algorithm base edg coverag cannot distinguish path igg path dgg induc path g s reject show path q v x g cover transit cover transit outsid e p concaten path yield path q dgg e exist path q follow closur properti r respect v if f r e e p e v f e r fact r project r transit reject reachabl s g show exist path q let e last edg path q sinc e p edg coverag complet path p follow edg e f e p either f reachabl e g via transit e p e reachabl f via transit sinc path q respect v also follow edg f cannot relat v former case f reachabl e via transit e p latter case edg e f relat v follow e f must reachabl via transit e p complet proof time complex validreach algorithm ojej delta j algorithm requir test construct g p set r take time ojej delta je j domin step algorithm use extend version lengauertarjan immedi domin algorithm immedi v relat g comput nearlinear time space size g determin whether set edg r close respect e p v requir follow step project creat v p oe oper visit immedi relat e v p f check e r f r two constanttim set membership oper perform immedi v p relat oe step take oe time space complex validreach algorithm remain ojv j delta jv j crt use path coverag figur show crt algorithm base edg coverag forc make incorrect but safe decis present two program graph g g intersect graph igg path p g exactli set edg cover path dgg as thu imposs determin whether path igg produc edg set e p consid path profil techniqu am monsballlaru abl appli graph figur separ path p q abl algorithm decompos control flow graph acycl path base backedg identifi depthfirst search s suppos v w backedg abl decomposit yield four class path path x path v end backedg v w path w v after execut backedg v w end execut backedg v w execut backedg v w path w x graph g backedg a appli abl decomposit graph g figur yield total four path correspond four type list abov abl algorithm insert instrument program p track whether four path cover execut recal path p q got edgebas crt troubl path p compos path p follow p abl record two path cover p execut hand path q compos p follow p follow p thu exampl edg coverag could distinguish two path abl path coverag doe mention introduct adversari creat graph g controlflowbas rt algorithm record less complet path execut g unabl distinguish path igg path dgg true g contain cycl exampl exampl figur defeat abl path coverag ad anoth ifthen condit with basic block outermost condit program p now path igg path at occur one time dgg howev path cover exactli set distinguish unless longer path track cutoff chosen add anoth level nest achiev effect relat work rothermel harrold defin framework compar differ regress test select method base four characterist ffl inclus abil choos modif reveal test path dgg ffl precis abil elimin exclud test reveal behavior differ path igg ffl effici space time requir method ffl gener applic method differ class languag modif etc approach share mani similar rh algorithm three reachabl algorithm base control flow analysi edg coverag partialreach algorithm inclus rh algorithm precis equival effi cienci fullreach validreach algorithm even precis greater cost yet consid gener algorithm handl interprocedur control flow done rothermel show problem determin whether new program modificationtravers respect old program test pspacehard intuit problem involv trace path program execut path size exponenti input program size or wors cours given complet path old program new program lineartim decis procedur determin new program contain path howev defin away real problem size path un bound consid best crt algorithm amount inform record program execut oe edg coverag exponenti number edg abl path coverag summari formal controlflowbas regress test select use finit automata theori intersect graph partial reachabl algorithm time space complex equival best previous known algorithm precis ad dition defin strong optim condit edgebas regress test select algorithm demonstr algorithm validreach edgeoptim final consid path coverag use improv regress test select crucial question practic relev work hing whether multiplyvisit vertex condit defin rothermel harrold occur practic version program condit rh algorithm op timal condit occur shown rh algorithm even edgeoptim plan analyz extens version control repositori system lucent address question acknowledg thank mooli sagiv patric godefroid suggest pertain finit state theori thank also glenn brun mari jean harrold gregg rothermel mike siff mark staskauska peter mataga comment r exploit hardwar perform counter flow context sensit profil version control system could talk optim profil trace pro gram increment program test use program depend graph system select regress test introduct automata the ori fast algorithm find domin flow graph use data flow analysi regress test effici effect regress test use safe test select techniqu analyz regress test select techniqu tr compil principl techniqu tool increment program test use program depend graph optim profil trace program analyz regress test select techniqu safe effici regress test select techniqu testtub exploit hardwar perform counter flow context sensit profil fast algorithm find domin flowgraph introduct automata theori languag comput effici effect regress test use safe test select techniqu ctr amitabh srivastava jay thiagarajan effect priorit test develop environ acm sigsoft softwar engin note v n juli guoq xu regress test select techniqu aspectori program proceed nd workshop test aspectori program p juli portland main mari jean harrold gregg rothermel rui wu liu yi empir investig program spectra acm sigplan notic v n p juli alessandro orso nanjuan shi mari jean harrold scale regress test larg softwar system acm sigsoft softwar engin note v n novemb gregg rothermel roland j untch chengyun chu priorit test case regress test ieee transact softwar engin v n p octob mari jean harrold jame a jone tongyu li donglin liang alessandro orso maikel pen saurabh sinha s alexand spoon ashish gujarathi regress test select java softwar acm sigplan notic v n p gregg rothermel mari jean harrold empir studi safe regress test select techniqu ieee transact softwar engin v n p june john bibl gregg rothermel david s rosenblum compar studi coars finegrain safe regress testselect techniqu acm transact softwar engin methodolog tosem v n p april mari jean harrold david rosenblum gregg rothermel elain weyuk empir studi predict model regress test select ieee transact softwar engin v n p march jianjun zhao tao xie nan li toward regress test select aspectj program proceed nd workshop test aspectori program p juli portland main guoq xu atana rountev regress test select aspectj softwar proceed th intern confer softwar engin p may nanci j wahl overview regress test acm sigsoft softwar engin note v n p jan