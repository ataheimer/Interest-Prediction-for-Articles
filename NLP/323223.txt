t analyt model setassoci cach behavior a abstractcach behavior complex inher unstabl yet critic factor affect program perform method evalu cach perform requir give quantit predict missratio inform guid optim cach use tradit cach simul give accur predict missratio littl direct optim also simul time usual far greater program execut time sever analyt model develop concentr mainli directmap cach often specif type algorithm give qualit predict work novel analyt model cach phenomena present applic numer code consist mostli array oper loop construct setassoci cach consid extens hierarchi cach reus interfer effect includ numer form tempor spatial local model effect given which combin predict overal missratio advantag model also indic sourc cach interfer accuraci model valid exampl program fragment predict missratio compar simul shown typic within percent evalu time model shown independ problem size gener sever order magnitud faster simul b introduct cach perform one critic factor affect perform softwar memori latenc continu increas respect processor clock speed util cach full potenti essenti yet cach behavior extrem difficult analyz reflect unstabl natur small program modif lead disproportion chang cach miss ratio method evalu cach perform requir give quantit predict miss ratio inform guid optim cach use johndcswarwickacuk tradit cach perform evalu mostli use simul emul cach effect everi memori access softwar although result accur time need obtain prohibit typic mani time greater total execut time program simul anoth possibl measur number cach miss in cur use perform monitor featur modern microprocessor also give accur result reason time introduc restrict cach architectur actual hardwar avail evalu tri overcom problem sever analyt model cach behavior develop one techniqu extract paramet address trace combin paramet defin cach deriv model cach behavior method abl accur predict gener trend behavior lack fine detail need model instabl note abov analyt model combin heurist also use guid optim compil choic sourc code transform model develop howev usual unsuit gener perform evalu sinc often aim qualit rather quantit predict anoth area analyt model employ studi cach perform particular type algorithm especi analysi block algorithm attempt made creat gener purpos model accur express success case limit describ directmap cach work present novel analyt techniqu predict cach perform larg class loop nest ing gener case setassoci cach ie directmap case associ one form cach reus interfer consid lead accur yet rapidli evalu model benefit other demonstr examin sever exampl code fragment work wide rang possibl applic aid softwar develop fli perform predict manag also plan integr model exist system analyz perform parallel system paper organ follow next section outlin problem address classif cach phenomena model section describ detail effect array refer cach repres represent effici comput section differ type cach reus consid term represent develop section final section present experiment data show model compar simul follow discuss result conclus section enddo enddo enddo figur gener form consid loop construct overview methodolog concept model present work consid cach behavior array refer access regular loop construct gener form loop nest shown figur loop number n outertoinnermost respect assum normal count upward zero step one number iter perform loop level k label n k variabl use index array loop label j k array refer consid form x name array number dimens array ff k fi k fl k constant with array refer rearrang form linear express give address element access particular combin valu gener form constant base address array fi k valu combin form b valu deriv loop multipli ff k dimens array without loss gener assum array indic fortran style valu term array element concept iter space also import loop bound repres full ndimension iter space array refer examin limit rang certain loop iter space also restrict exampl allow j valu singl iter outermost loop specifi model cach behavior restrict iter natur way consid problem howev work need restrict upper bound loop loop k handl bind temporari valu n k given two array refer r r linear form ident said translat mean access pattern refer ident offset jb b j element address space refer translat one anoth said translat group evalu strategi function cach provid data reus is enabl memori region recent access subsequ access much smaller latenc two basic form reus exist self depend reus array refer repeatedli access element array group depend reus element repeatedli access recent use differ array refer consid array refer r reus depend r defin refer reus aris self depend convers r r group depend sinc possibl two refer access data element identifi depend r defin refer smallest reus distanc r relat number loop iter occur r access element r reus it unlik well known system classifi cach miss three cs model compulsori capac conflict miss method present paper use two part model compulsori miss defin befor capac conflict miss consid singl categoryinterfer missessinc underli caus same reusabl data eject cach predict number cach miss suffer array refer interfer divid sever type depend sourc self interfer occur refer obstruct reus intern cross interfer occur due refer translat group extern cross interfer caus refer differ translat group section describ effect model self group depend respect distinct also made tempor spatial compon refer miss ratio spatial miss ratio defin averag number cach miss need load singl cach line data three type interfer contribut ratio model section spatial miss ratio appli predict number tempor miss give total number cach miss refer repeat procedur refer loop nest give predict entir code fragment model cach footprint common requir model interfer identifi effect cach access refer singl translat group specifi psfrag replac cla a cach represent psfrag replac line data b exampl figur exampl cach layout set overlap iter space effect cach known use predict effect reus refer examin result number cach miss predict cach size c l element line associ consid rectangular grid cla cach line wide line deep shown figur a vertic column repres singl set cach contain line map function determin set memori element store in usual map function paper examin simpli x mod cla x address element question line set actual use depend replac strategi employ paper leastrecentlyus strategi consid replac line set last access earliest given view cach effect translat group cach also visual cla set certain number line contain data access translat group number thought overlap set label figur b show exampl small way setassoci cach data element load cach darkli shade valu set shown underneath identifi interfer cach footprint compar footprint data reus either setbyset statist whole method detect interfer simpl occur wherev combin overlap footprint greater level associ model repres cach footprint sequenc region region constant valu overlap well two paramet defin region first element region ie valu zero ca number element region consid exampl footprint figur b clear defin follow sequenc region start size rest section paper show footprint form calcul effici individu translat group psfrag replac oe k oe k cach set time array footprint region cach data figur exampl map array footprint region cach find cach footprint singl refer accur method map regular data footprint directmap cach previous present detail consid problem briefli extend method given which descend setassoci cach given array refer wish find cach footprint data access particular iter space form defin valu structur array element defin refer itself array dimens iter space major array refer encount array footprint express use four paramet address first element oe number element contigu region distanc start two region oe final number region n identifi four paramet array footprint describ map cach give cach footprint refer question cach footprint defin paramet similar describ array footprint interv region oe number region n posit first region oe two paramet defin structur data element region level overlap defin section s number element region divid overlap consid figur thought averag height width region footprint find paramet defin cach footprint use recurs method divid cach regular area level recurs k area size oe k map singl area size oe k illustr figur part cach recurr relat defin sequenc oe k valu repres array footprint region map cach sequenc truncat level s either n region map cach without overlap overlap occur region detect first region one nearest cach set zero first region sequenc n sequenc may cross cach boundari overlap either end area size oe k valu oe k introduc smallest distanc two region area oe k overlap occur level k where level s cach divid oe oe s area size oe s certain number footprint region size distanc oe previou r area contain n area contain n simplest case ie array footprint wrap around end cach no overlap gener case distanc area total number area c posit first region also found overlap singl area found divid total number element distanc start first region end last averag level overlap found combin overlap type area n oe distanc start first region end last find singl area size gap region subtract distanc start first region end last region find valu type area combin function f x give valu area contain x region oe previou combin individu cach footprint use techniqu present previou section cach footprint refer defin iter space identifi give inform necessari predict refer interact footprint refer thu allow interfer detect gener howev two refer loop nest therefor interfer refer origin one sourc note x well model interfer refer loop nest also import interfer singl element count onc simpli compar cach footprint everi refer loop footprint refer examin meet requir note section possibl classifi array refer loop nest translat group member group exactli access pattern differ pattern offset one anoth address space allow refer translat group combin singl cach footprintit metafootprint use identifi interfer problem state follow given q refer translat necessari find cumul cach footprint refer enc assum array footprint refer defin paramet valu oe q combin cach footprint defin sequenc region defin tripl oe posit region size element level overlap shown find onedimension footprint examin calcul section show paramet cach footprint depend oe oe posit first region defin mod ca follow therefor refer r share cach footprint individu valu oe oe properti easi visual form cylind rectangular represent cach figur a first last set adjac one anoth surfac area cylind repres cach project cach footprint onto cylind start first element cach ie rotat footprint oe posit around circumfer cylind actual cach footprint simplifi problem find combin cach footprint instead comput q footprint merg them necessari comput one footprint consid rotat copi gener posit everi footprint region definit oe given abov start end point region cach footprint refer enumer region start posit refer r defin seri theta posit end region by theta rather oe mod ca sinc circumfer cylind ca one possibl method merg q footprint would enumer start end posit refer sort smallest first order fortun much effici method rotat footprint cross boundari cach posit ca posit zero onc allow start end posit region gener numer order gener point cach boundari follow point cach boundari first start point region footprint refer con sider first region when count zero start posit ca is start oe list start posit split two recombin list posit ascend order is theta theta assum oper concaten two list similar method use gener end point region footprint refer r first end point cach posit ca is oe list end point numer order is theta theta merg q footprint given q list region start posit q list end posit defin previou section straightforward construct new list region two region overlap end product process sequenc tripl form oe two valu oe defin posit size region v bitvector v region subset refer is individu footprint seen consequ v sinc level overlap region directli relat refer access region merg process straightforward sinc list region boundari known ascend numer order work valu v main tain initi set reflect refer whose footprint wrap around end start cach element left q list list smallest first element found element delet footprint region creat previous found point current point current valu v assum list refer refer r k list start point v k set one otherwis set zero find cumul overlap region merg refer footprint previou section structur translat group cach footprint almost complet instead represent requir form oe problem then calcul given vector v averag level overlap refer cach footprint alreadi calcul use logic section refer translat group must valu natur method find simpli multipli number bit v set ie number refer region consid cach work seen method guarante work two refer access array two refer access array possibl could intersect two set array element access intersect occur element store cach onc twice predict take overlap two refer combin featur mean amount share two refer must examin defin ratio rang zero element common one element access refer ratio sharingr x ry two refer r x ry calcul array footprint translat groupth paramet oe n oe defin section calcul sharingr x ry definit sharingr x ry consist two express degre share two array footprint consid two contigu region degre share individu region insid footprint distinct two concept shown figur two refer r x ry first singl region sequenc region consid footprint two singl region figur a seen distanc two region joe j subtract valu total extent region n oe give total number share ele ment henc ratio share element n oe joe level share two region footprint figur b found similar manner distanc two possibl overlap region joe overlap could occur either direct smallest possibl distanc overlap region ffi defin as share otherwis ffi element share two region ratio defin level share two region s ffi multipli two share ratio footprint whole two region give overal ratio share element two psfrag replac r x ry a footprint singl region psfrag replac r x ry b footprint multipl region figur array footprint share footprint ie find region sharingr x ry function defin allow combin level overlap two refer found exampl rxri level overlap occur r x ry access region cach rx ry overlap individu refer rx ry overlap share r x ry then second line equat follow sinc refer translat merg way intersect directli relat mani element two refer share as averag across entir cach find averag level overlap across refer fr necessari extend union oper shown includ arbitrari number refer consid evid similar find combin overlap number element union set is analog gener form express number element union is stand summat ielement combin express analog r deltadeltadeltar n exactli way analog therefor still necessari defin averag overlap intersect arbitrari number refer tworefer intersect shown extend arbitrari number refer symbol stand product twoelement combin r r j possibl find averag overlap cach footprint region contain refer defin vector v comput refer includ region ie set fr note optim calcul method shown previou paragraph obvious highli combinatori natur bit vector v contain n one number multipl requir is grow rapidli make comput slow rel small valu n for exampl one main reason use analyt method increas speed clearli und sirabl fortun two straightforward modif push combinatori barrier back distanc firstli valu complet evalu boundari footprint region consid ident show adapt calcul previou region valu singl refer enter leav union approxim halv number multipl requir secondli sinc one constraint model array may overlap array share data element refer access differ array mean subset vector v need examin comput those v refer r access array access array refer whose state chang region boundari depend upon distribut array refer array modif decreas complex calcul order magnitud model spatial interfer note section tempor spatial cach effect array refer model separ spatial reus occur one element cach line access data eject cach refer r innermost loop spatial reus may occur label l l spatial miss ratio refer label defin multipli predict number tempor miss suffer refer predict actual number cach miss occur ratio encapsul spatial effect refer found combin four specif miss ratio compulsori miss ratio c self interfer miss ratio intern cross interfer miss ratio final extern cross interfer valu c particular refer follow directli array footprint refer defin loop ratio number cach line footprint region number referenc element within region studi level interfer affect spatial reus depend necessari examin happen iter loop l figur illustr self interfer left hand side figur show squar matrix access array refer yj right shown map cach time complet iter loop j assum way associ cach element may interfer y reus data load cach y shade three type spatial interfer consid follow section calcul spatial self interfer shown figur refer model obstruct spatial reus happen number data element access singl iter loop l map particular set cach greater level associ analyz map process recurr shown use slightli differ array footprint paramet distanc footprint region oe defin distanc element access success iter loop l see figur size psfrag replac time ca element reus element may interfer figur exampl spatial reus yj footprint region defin size cach line l ensur interfer line detect section result map process cach divid oe oe s area size oe s certain number footprint region distanc oe previou r area contain area contain n section examin two type area separ calcul valu each combin two valu possibl predict overal level self interfer function f x give probabl element area size oe s contain x element suffer spatial interfer immedi possibl identifi two special case oe element area occupi cach set number element x greater level associ interfer occur thu one element per set overflow neighbor area reus must total gener case solut straightforward main complic possibl distanc first last element area ie xoe greater size area itself therefor element wraparound end area possibl interf start handl hybrid analyticalsimul techniqu use x element area l differ posit cach line might occur posit analyz whether reus occur not lead overal probabl reus element repeat x element combin individu probabl give valu f x element possibl list posit cach element surround it stride oe stride refer distanc element access success iter spatial reus loop l essenc problem follow pointsi deduc number point occur cach lines region z point wrap around zero posit oe s gener form seri defin with gener seri number point within interv z includ wrap around effect given by oe upsilon oe upsilon min z thu find total number element within particular cachelin size interv express evalu beforey afteri total number element particular interv z valu number element particular line greater level associ a self interfer occur averag l possibl posit start line contain interv y probabl reus found repeat process x element area overal probabl henc calcul intern spatial cross interfer well caus refer itself spatial interfer may also aris due refer translat group number data element map particular cach set singl iter loop l greater level associ a interfer occur phenomena often refer pingpong interfer may affect perform massiv sinc possibl spatial reus refer prevent consid refer r pingpong interfer detect calcul cach footprint refer translat group singl iter spatial reus loop ie let n consid region a less l element posit first element access r ie oe r mod ca ping pong interfer occur assum closest footprint region oe r mod ca posit away closest region r ffi posit away miss ratio due intern interfer defin follow extern spatial interfer consid interfer refer translat group interfer translat groupsextern interferencemust model group examin turn overal miss ratio due extern sum group individu extern interfer ratio refer r spatial reus loop l probabl pr access random data element find element set contain data spatial reus r defin by ca nr sr number size region refer rs cach footprint loop l respect see section restrict iter space singl iter loop l ie let n cach footprint translat group of r member examin count number element footprint could caus spatial interfer r multipli pr predict number miss made averag level overlap translat group contain r r footprint translat group repres sequenc oe individu footprint region possibl interfer r r occur number cach miss set greater actual number element set lead definit follow function give miss overlap map function multipli size region cach footprint translat group give total number element access group might caus cach miss multipli valu pr divid total number iter made loop l give extern miss ratio singl translat group g pr miss symbol stand summat across translat group cach footprint region oe group g r g overal valu e found cach behavior self depend note section self depend occur array refer access particular data element onc happen one loop variabl use refer exampl array refer use j therefor iter loop access exactli set element name fa g innermost loop reus occur defin loop l g theori time loop l enter first iter would load referenc element cach subsequ iter reus them first iter loop l must load element give number compulsori miss is spatial miss ratio multipli number time loop l enter multipli number uniqu element referenc cach capac limitedit may possibl hold element referenc loop l cach onc factor depend whether size cach greater number element spatial reus access element may map cach way prevent reus although use cach high associ prevent referenc array significantli smaller number set cach footprint region actual overlap array consid interfer certain case number element access increas problem may return self interfer self interfer refer model map array footprint element access singl iter loop l cach remov element fall set overlap greater level associ subtract number element left origin number element give number cach miss per iter use map process shown section one import modif function f x replac f r x and way calcul chang reflect thi wherea f x gave number set could interfer area contain x region f r x give number reus ie a given f r x number reusabl element footprint follow ns therefor total number cach miss due self interfer the number time loop l enter multipl number cach miss iter exclud handl compulsori miss calcul shown definit function f r x use similar method shown section calcul spatial self interfer structur cach section examin describ section area size oe s contain x region size interv oe previou first region locat begin area region wrap around end area ie posit area region k actual koe mod oe s area structur function f r x must calcul number posit level overlap less equal level associ ie interfer occur singl posit z area level overlap ie number region cross point given number region begin point minu number region end it includ wrap effect express sum possibl wrap around region appear ie oe upsilon min oe z possibl definit f r x would test everi posit area ie count number time overlapz a fortun effici method sinc x footprint region valu overlapz chang maximum x time at start end region use similar method find onedimension footprint translat group see section x posit enumer ascend order atom region defin examin final definit includ posit area reus cannot occur sinc still relev calcul interfer howev look reus footprint necessari averag overlap posit footprint reus occur calcul comput valu f r x intern cross interfer examin level self interfer self depend refer cach footprint data subject self interfer known character paramet s oe n still uncertain whether region cach reus sinc data access array refer loop nest may map cach set possibl prevent reus interfer refer translat group consid first cach footprint refer identifi use techniqu shown section compar region region footprint data subject self interfer interfer occur wherev two footprint overlap combin level overlap greater level associ assum two footprint region overlap size posit number miss occur iter loop l size theta miss summat express section cach two footprint region overlap give total number cach miss iter reus loop multipli l give total number miss increas accuraci next stagepredict level extern interferenceth valu ns the number reusabl posit averag overlap adjust take account intern interfer number reusabl posit consid intern interfer ns combin size region interfer occur adjust overlap averag valu across region extern interfer final sourc tempor interfer self depend consid extern cross interfer interfer aris refer translat group refer examin unlik model intern cross interfer possibl simpli compar two cach footprint the refer possibl reusabl data footprint interf translat group exactli translat footprint move cach differ way henc incom parabl instead statist method use base dimens two footprintsth total size averag overlap similarli model extern interfer spatial depend see section extern translat group consid turn number footprint posit could possibl caus interfer found summat cach footprint group find averag number cach miss quantiti multipli size reusabl footprint divid number possibl posit extern s theta miss ca give number miss iter loop l caus particular translat group sum express extern group multipli total number iter loop l give actual number cach miss due extern interfer model group depend group depend occur array refer reus data recent access anoth refer translat group refer r refer depend upon denot r section describ depend identifi definit spatial miss ratio given section must alter slightli model group depend must also includ spatial group reus occur r cach line r certain number time per everi l element access constant distanc two refer b r br less size cach line number time r must load element per cach line therefor actual spatial miss ratio defin by number compulsori miss defin number element access r r multipli spatial miss ratio sinc defin give ratio element share r x ry compulsori share r r refer r innermost loop group reus occur defin l ff number dimens array access identifi cross interfer group depend necessari examin period r access arbitrari element r reus it defin iter loop l g k innermost dimens array fi k constant two refer differ consid exampl case l is r access element aj two iter loop pass r access element interfer occur element eject cach two iter intern interfer intern cross interfer found examin cach footprint translat group r first ffi g iter loop l g ie iter space region footprint contain data access r probabl interfer calcul maximum probabl across whole footprint actual probabl intern interfer footprint region averag overlap probabl defin as ie interfer definit occur definit occur gradient two certainti number cach miss defin number element could theoret reus multipli maximum valu p spatial miss ratio int s lg share r r extern interfer maximum valu p less therefor intern interfer total extern cross interfer must also consid iter space defin ffi g iter loop l g time cach footprint translat group r member examin group number cach miss caus found count number posit footprint interfer may occur appli probabilist method use predict extern interfer self depend see section assum cach footprint translat group contain r averag overlap region contain data access r thi calcul find intern interfer footprint region overlap may possibl caus interfer a actual number miss per translat group defin ext s a s theta miss a theta ca maxp exampl result demonstr valid benefit techniqu describ section present experiment result obtain use implement model code fragment express simpl languag allow detail array access loop structur array refer specifi three exampl typic nest comput shown chosen contrast characterist ensur part cach model exercis manipul matric doubl precis valu arrang singl contigu block memori are matrixmultipli consist three nest loop contain four array refer total refer allow tempor reus occur within one loop one refer may subject consider spatial interfer fortran code shown figur a stencil oper kernel show group depend reus alway access memori sequenti see figur b two dimension jacobi loop origin part applic comput permeabl porou media use finit differ method kernel exhibit larg amount group depend reus contain significantli array refer other matric ivx ivi contain bit integ see figur c exampl kernel evalu rang cach paramet compar predict miss ratio given standard simul techniqu averag percentag error shown tabl result shown figur three exampl kernel miss ratio absolut error plot width height matric also shown tabl rang time taken evalu problem mhz sun ultra workstat singl cach configur local written cach simul use accept loop descript form analyt model use valid compar result hill dinero iii tracedriven simul enddo enddo enddo a matrix multipli enddo enddo b stencil enddo enddo c jacobi figur exampl kernel experiment data present previou section show predict made model gener accur major averag error within ten percent three fifti four exampl averag error less fifteen percent combin increas speed predict believ analyt approach practic simul examin individu kernel applic one motiv work minim time taken evalu program fragment expect analyt model much quicker comput simul typic sever order magnitud even smallest problem size number memori refer grow gulf widen simul time increas proport number access time need evalu analyt model stay mostli constant jacobi exampl slowest evalu analyt eighteen array refer evalu compar stencil six matrix multipli four even so combinatori effect might fear problem also clear miss ratio plot use setassoci cach c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul matrix multipli c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul stencil c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul c l a n predict missratio differ simul figur predict miss ratio absolut error configur experi l matrix multipli tabl averag percentag error exampl predict compar simul result analyt model simul experi min max mean min max mean matrix mult stencil tabl calcul time experi second avoid problem cach interfer even way associ cach still larg variat miss ratio especi stencil jacobi kernel ie number array refer increas use use well known techniqu pad array dimens control base address guid analyt model present here variat reduc decreas miss ratio benefit use analyt model yet mention extra inform avail use analyt model tri lower number cach miss program import know cach miss occur due structur method present paper requir met simpli examin output compon model exampl matrix multipli kernel examin miss ratio refer figur a miss ratio due type interfer figur b show vast major miss due refer yjk percent interfer self interfer in case spatial self interfer due array access nonsequenti conclus hierarch method classifi cach interfer present self group depend reus data consid tempor a refer miss ratio compulsori intern extern b miss ratio type figur examin matrix multipli spatial form analyt techniqu model categori interfer develop array refer loop nest shown techniqu give accur result compar found simul implement predict made much faster rate simul importantli predict rate shown depend number array refer program rather actual number memori access as simul envisag benefit modelsaccuraci speed predictionwil allow use wide rang situat includ impract tradit techniqu import exampl use runtim optim program use analyt model cach behavior algorithm drive optim process area address futur work includ optim strategi well extens model itself also intend use techniqu part gener purpos perform model system acknowledg work fund part darpa contract n c award perform technolog initi administ nosc r analyt cach model skew associ improv program perform enhanc predict tile size select use cach organis data layout automat cach perform predict parallel compil influenc cross interfer block loop case studi matrixvector multi pli cach miss equa tion analyt represent cach miss predict cach miss ratio loopnest array refer aspect cach memori instruct buffer per formanc cach perform optim block algorithm quantit analysi loop nest local overview chip perform toolset parallel system cach interfer phenomena data local optim algorithm tr ctr arijit ghosh toni givargi cach optim embed processor core analyt approach acm transact design autom electron system toda v n p octob d andrad b b fraguela r doallo analyt model code arbitrari datadepend condit structur journal system architectur euromicro journal v n p juli e papaefstathi design perform technolog infrastructur support construct respons softwar proceed nd intern workshop softwar perform p septemb ottawa ontario canada b b fraguela r doallo j tourio e l zapata compil tool predict memori hierarchi perform scientif code parallel comput v n p februari g r nudd d j kerbyson e papaefstathi s c perri j s harper d v wilcox pacea toolset perform predict parallel distribut system intern journal high perform comput applic v n p august chunghs hsu ulrich kremer quantit analysi tile size select algorithm journal supercomput v n p march lakshminarayanan renganarayana sanjay rajopadhy geometr program framework optim multilevel tile proceed acmiee confer supercomput p novemb jingl xue xavier vera effici accur analyt model wholeprogram data cach behavior ieee transact comput v n p may basilio b fraguela ramn doallo emilio l zapata probabilist miss equat evalu memori hierarchi perform ieee transact comput v n p march siddhartha chatterje erin parker philip j hanlon alvin r lebeck exact analysi cach behavior nest loop acm sigplan notic v n p may han vandierendonck koen de bosscher highli accur effici evalu randomis set index function journal system architectur euromicro journal v n p may