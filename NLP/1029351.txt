t optim duplic elementari recurs a asperti mairson prove cost reduc term use optim reduc a la lvi cannot bound elementari function number sharedbeta step prove paper analog result hold lamp abstract algorithm is elementari function number share beta step bound number duplic step optim reduc theorem vindic oracl lamp algorithm culprit neg result asperti mairson result obtain use technic tool elementari affin logic b introduct last ten year steadi interest optim reduct term or gener function program stori start fact twenti year ago jeanjacqu levi thesi lev problem attack nd execut strategi term minim number reduct alreadi known strategi exist reduc one redex ie singl function call time levi insight discov parallel optim strategi exist one reduc singl step redex belong famili crucial notion introduc howev levi lack program technolog implement strategi show eectiv one knew time kind data structur could use dynam maintain famili way redex given famili could somehow share and there fore reduc singl step solut came independ kathail kat lamp lam gave abstract calculu machin reduc term prescrib levi optim theori lamp graph rewrit approach one receiv interest breakthrough variant optim reduc propos especi gonthier abadi levi gnala asperti asp refer optim share graph approach variant share common core abstract algorithm terminolog am dier way implement bookkeep work need maintain famili algorithm describ eleg graph rewrit system rule rewrit pair face node and easili implement constant time oper abstract algorithm respons perform share rule increment duplic subterm job bookkeep part also call oracl maintain graph enough distribut inform make abstract algorithm correct respect standard reduct see section ag complet account sinc reduct rule implement constant time oper may take number rewrit step reach normal form term cost reduct algorithm levi theori given term prescrib number share reduct need reach normal form optim share graph algorithm perform exactli number rewrit global number reduct greater sinc algorithm also perform duplic in abstract algorithm bookkeep possibl bound total work xed function number share reduct question behind sever contribut asperti lawal mairson asp lm lm culmin am dene kalmar elementari function show term normal n share reduct total work need reach normal form algorithm and henc optim share graph algorithm exce k n xed theorem show optim reduct cannot realiz unit cost oper howev mean optim reduct whole unfeas classic theorem statman sta calculu machin take non elementari time size term reach normal form case optim reduct non elementari bound as function number share reduct consequ fact share techniqu number redex famili surprisingli low essenti linear size term henc part work done case statman theorem devolv duplic bookkeep still case lamp algo rithm remain problem understand cost essenti due duplic pretti com bookkeep techniqu paper prove alreadi mere cost duplic elementari word lamp bookkeep techniqu unfeas alreadi plain work duplic particularli interest sinc now good evid number duplic perform lamp algorithm lower bound complex suboptim reduct techniqu lm al work tool use paper elementari ane partial support ec grant erb pl linear murst cofin theoret could superoptim implement one dynam look common subexpress levi theori optim cover case neglect l b b b figur lamp abstract algorithm node logic asp eal variant elementari linear logic introduc gir particular show simpli type term use am code certain decis problem given type also eal crucial featur term typeabl eal reduct need bookkeep part share graph algo rithm therefor rene rst corollari main theorem am follow manner exist set term en bool normal n parallel step number bookkeep duplic interact requir normal en use lamp graph reduct algorithm grow xed integ reader may confus outward paradox type non elementari term elementari logic paradox inde sinc complex reduc term insid eal elementari depth term xed case depth involv term grow polynomi size input paper organ follow section introduc lamp graph reduct technolog section present elementari ane logic analyz complex cutelimin discuss problem type in ferenc section recal asperti mairson result sketch type term eal obtain main result optim reduct assum reader familiar simpli type calculu recal set type dene induct grammar oj xed base type untyp term gener grammar xjm mjxm assum enumer set variabl rang x type assign term usual way reduct dene rule xm detail lamp approach optim reduct complex technic see book ag concept need understand result paper easi grasp rst step lamp abstract algorithm repres term label graph built node given figur arrow exit node princip port node graph obtain syntax tree term by i repres variabl arc a wire ii ad explicit node the triangular node call fan share variabl occurr iii connect singl wire repres variabl form syntact coincid ax cut figur intuitionist linear logic after share node bind variabl reduct term repres graph rewrit type rule abstract algorithm display figur note two node rewritten they interact princip port face other rst rule share rule other clear shape perform increment and control get opti maliti duplic graph duplic over rst two fanfan rule annihil fan intuit two fan origin node start graph otherwis last rule one fan duplic other observ howev present algorithm non determinist sinc two fanfan rule lefthand side make algorithm determinist one may think label fan origin graph then throughout reduct appli rst fanfan rule two fan label appli otherwis one crucial lamp observ simpl techniqu work simpli type and fortiori type free term much complex bookkeep oracl machineri adopt ad node bracket croissant graph decor node index full al gorithm therefor consist abstract algorithm sketch bookkeep part omit introduc next section formal system type term simpl label fan enough get correct elementari ane logic logic system linear logic gir provid logic interpret lamp algorithm cutelimin process suitabl notat proof proofnet rst hint gnala develop gnalb give intuit introduct subject motiv use eal tool toward result see eg chapter ag full account subject figur present in somewhat non standard way intuitionist fragment linear logic ill modal system modal use mark formula contract weaken may appli standard implic fragment b b b l l b b b b b b b c b b l figur rule abstract algorithm l l figur n translat figur bracket croissant intuitionist logic may embed ill via interpret thi curryhoward isomorph type term may give correspond ill proof proof may express graph proofnet essenti correspond syntax tree term presenc express socal box box given standard ill proofnet global entiti they certain subgraph speci node interfac also describ local way introduc new node and node index besid one correspond connect logic new node correspond rule node need oracl lamp algorithmbracket croissant see figur type term translat optim share graph accord induct rule figur also correspond ill deriv given rightmost case correspond abstract variabl appear bodi node call eras thought fan zero premis observ applic case rule translat box level translat increas n n i rational translat follow sinc contract fan may perfom formula translat variabl put variabl get readi possibl contract translat applic put box around argument n rule then sinc one type free variabl n appli rule the bracket nalli contract common variabl view techniqu allow translat type term and also untyp term provid see type o restrict logic system remov rule cannot longer prepar contract variabl translat figur contract variabl one get type mean rule cannot longer decreas number type variabl sinc rule longer there reward howev bracket croissant translat term move complet lamp algorithm abstract one remain seen applic two fan fan rule may discrimin dicult see that framework level node never chang reduct therefor may appli rst two fan fan rule annihil two fan level appli second one otherwis restrict system level behav like label label sucient ensur correct reduct term type insid restrict system obtain omit rule optim reduct perform without need bookkeep term given type restrict system therefor natur choic want bound duplic work onli call sofar restrict system fragment of elementari linear logic ell sketch girard gir part work direct logic character polynomi elementari function complet describ elementari function one side elementari function code proof ell other normal ell proof elementari time procedur boxnest depth proof xed exibl syntax also polynomi logic lal introduc one author asp allow full weaken result system elementari ane logic eal present figur also term ad rule say term type context deriv system figur remark term intend notat proof eal term purpos easili obtain lal asp use eal type system pure term follow subject reduct fact although may non obviou rst simpli type term eal type deriv exampl given end section like ell also eal character elementari func tion elementari function repres eal normal procedur elementari time final crucial issu need fol low stress get eal type reduc abstract algorithm simpl label fan node complex reduc eal proof lack space cannot enter detail normal procedur paper let us say use techniqu by round introduc girard gir rene bit argument obtain complex reduct bound follow size term n nest level box import fact get tower exponenti whose height depend nest depth term henc normal elementari size input depth given decor term clear rule eal deriv type eal an ealtyp on term consist skeleton given deriv type simpl type disciplin togeth box decor introduc suitabl number rule modal need sinc type variabl contract observ moreov given simpli type skeleton innit number possibl decor instanc singl gener one cut contr figur elementari ane logic z z x x x a z z x x x i i i i figur type infer eal z z x x x i i i i i c z z x x x i i o i d i i o figur type infer eal ii therefor skeleton trivial obtain nding right decor hard part sinc introduct box portion proof forc box introduc somewher els conjectur type infer eal decid complet proof yet type relev term section therefor obtain use heurist describ section may singl three main step process type infer look contract box argu ment open box discuss step go easi exampl let simpli type term type eal start syntax tree term label type simpl disciplin just chang figur a def look contract variabl occur use linearli done case exampl sinc x occur twice contract eal admit formula type need introduc abstract x use usual sequent calculu notat simpl type deriv figur a correspond follow deriv eal contract rule wrong obtain correct eal deriv add rule contract correspond type repres figur b type x insid box ii outsid new type howev need propag left branch tree full term n otherwis topmost applic would wrong type consequ variabl n figur b get type i io io observ leftmost innermost applic wrong need box argument zz must type i io shown figur c final order appli n zz type i type o need open box figur d mention abov type insid box lose one particular allow us perform applic observ singl contract insid term forc us introduc box tree nal decor figur d repres follow deriv eal i i io oo l i i i i i o cut e deriv given subterm alreadi mention decor n possi ble first may give n type n o ad n rule end deriv or gener may give n type abstract deriv possibl may choos introduc s close box figur d abstract y obtain n type nm io final remark type infer eal alway possibl exampl simpli type term eal decor see simpl way write term share graph reduc abstract algorithm match fan label share graph normal form cycl share graph correspond term least say y normal form given term mean oracl need reduct term henc cannot type eal code type theori eal proof asperti mairson result result asperti mairson am obtain three build block rst novel contribut simpli type term precompil certain way order drastic limit number share reduct consid size type structur size size term count abstract applic count size type variabl nalli consid size share graph number node let x variabl type expans x x dene induct follow given simpli type lambdaterm follow procedur am construct equival variant orm optim root replac everi subterm process introduc certain number clearli linearli bound size new preliminari redex m share graph obtain orm reduc new preliminari redex propag share node base type theorem simplytyp term total number share reduct graph normal m limit size m second ingredi obtain mairson proof mai theorem statman meyer sta mey decis problem proposit calculu natur gener higherord type allow variabl quantier rang valu dk k let variabl rang dk dene prime formula true fals true final let formula built prime formula proposit connect _ quantier statman show reduc truth higherord formula reduct given normal form suitabl type term mairson mai show simplifi proof statman dierent encod base basic idea quantier elimin procedur much simpler easi understand use list iter quantier elimin procedur theorem higherord formula true type calculu interpret equival true bool moreov quanti univers order k final last step show elementari timebound ture machin encod higherord logic rene proof mai theorem let xed ture machin accept reject input x k jxj step exist formula x higherord logic accept x x true moreov x quanti univers length ojxj log jxj from theorem main result am obtain easili paper show theorem hold ealtyp term then combin result theorem observ made end section deriv main result theorem exist set term normal n share reduct number non interact requir normal en use lamp abstract algorithm grow xed integ code higherord logic eal show section higherord logic code ealtyp term typefre term use minor variant am main technic contribut typeinfer insid eal dene type boolean b o usual term true fals give church encod boolean valu given eal type n b n usual connect and type respect type write l eal type gener list element modic encod follow i use dierent term encod equal ii variabl x prime formula consequ ii one adopt also slightli dierent encod ture machin proof theorem particular dene x believ that work also mairson origin encod ture machin would get type eal follow am k domain dk encod term dk repres dk list valu dene powerset doubl lemma ealtyp doubl type i l powerset type l proof see figur bold dash line stand box observ pile s alreadi present stage encod type powerset two consecut s sinc eal possibl deriv number consecut s keep in creas intuit n applic powerset produc n consecut s nal type given type schema prove follow nk k dk type k follow mai quantier encod use iter list given n eal type suppos code term set element type suppos moreov term encod gener formula z true term encod prime formula encod follow term observ memberk dene k encod understood calculu translat follow induct denit quanti formula z k k denit k z k dk denit k encod list iter describ abov memberk ealtyp maxfk k g put togeth ingredi encod obtain main technic result establish theorem ealtyp term theorem dene term encod arbitrari formula quantier eal moreov size x k ojjkmax kmax greatest k memberk appear proof main case univers quanti formula describ figur outer bold box stand k box inner bold box stand p box figur complet code exampl follow bound number s type lambda term encod arbitrari formula provid limit also boxnest depth notic dk rememb need open box appli l l l l l l x l c c x e c c le l l c c figur eal type doubl doubl la l l l l c c c a figur eal type powerset c lc c x c e l l c n le c l l c l l l l la a c lc c x c e l l c n le c l l c l l l l la a lc true c fals c lx true c lc c x c e l l c n le c l l c l l l l la a lc true c fals c ly c lc c x c e l l c n le c l l c l l l l la a lc true c fals c true member x fals true member figur true figur type arbitrari formula corollari let term encod arbitrari for mula type eal kmax greatest k memberk appear n number quantier proof previou theorem type theorem let term encod arbitrari for mula depth greatest k memberk appear n number quantier moreov also order obtain desir result complex du plicat remain shown precompil term given etaexpans perform insid eal theorem eal type orm proof sucient prove expans alway typeabl eal describ figur need obtain theorem eal type term and henc theorem conclus paper shown complex result parallel betareduct obtain am obtain respect optim duplic as one could expect complex machineri requir manag redexfamili cast new dierent light asperti mairson work particular help understand convey neg result optim reduct techniqu normal lambdaterm reduct lambda term x figur is potenti non elementari work duplic done even optim reduct tech niqu parsimoni could be cannot magic lot interest issu still investig start theoret comparison perform lamp techniqu versu tradit implemen tation comparison hinder far bookkeep work whose formal investig complex current state art huge set lambda term ie term eal reduc without need bookkeep provid main promis arena theoret investig perform issu r optim implement function program languag dynam share graph parallel beta reduct elementari recurs linear logic complex beta reduct light ane logic linear logic light linear logic optim interpret lambdacalculu base function program languag algorithm optim lambda calculu reduct optim ineci cost model lambda calculu acm sigplan notic global dynam optim graph reduct simpl proof theorem statman inher comput complex theori order set type tr linear logic algorithm optim lambda calculu reduct simpl proof theorem statman geometri optim lambda reduct optim ineffici complex betareduct global dynam optim graph reduct parallel beta reduct elementari recurs light linear logic optim implement function program languag intuitionist light affin logic dynam share graph light affin logic