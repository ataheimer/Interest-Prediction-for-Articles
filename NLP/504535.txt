t minim coverautomata finit languag a coverautomaton finit languag l sgr finit determinist automaton dfa accept word l possibl word longer word l minim determinist finit cover automaton dfca finit languag l usual smaller size minim dfa accept l thu cover automata use reduc size represent finit languag practic paper describ effici algorithm that given dfa accept finit languag construct minim determinist finit coverautomaton languag also give algorithm boolean oper determinist cover automata ie finit languag repres b introduct regular languag finit automata wide use mani area lexic analysi string match circuit test imag compress parallel process howev mani applic regular languag use actual finit languag number state finit automaton accept finit languag least one length longest word languag even order exponenti number restrict automaton accept exact given finit languag allow accept extra word longer longest word languag may obtain automaton number state research support natur scienc engin research council canada grant ogp preprint submit elsevi preprint significantli reduc applic know maximum length word languag system usual keep track length input word anyway so finit languag use automaton plu integ check membership languag basic idea behind cover automata finit languag inform coverautomaton finit languag l sigma finit automaton accept word l possibl word longer word l mani case minim determinist cover automaton finit languag l much smaller size minim dfa accept l thu cover automata use reduc size automata finit languag practic intuit finit automaton accept finit languag exactli view structur follow two function check pattern word languag control length word highlevel program languag environ lengthcontrol function much easier implement count integ use structur automaton furthermor system usual lengthcount anyway therefor dfa accept finit languag may leav structur lengthcontrol function and thu reduc complex concept cover automata total new similar concept studi differ context differ purpos see exam ple previou work studi descript complex measur arbitrari languag call automat shallit et al studi consid cover automata implement method may reduc size automata repres finit languag paper main result give effici algorithm that given finit languag given determinist finit automaton cover automaton construct minim cover automaton languag note given finit languag might sever minim cover automata equival morphism show that howev number state preliminari let set t mean cardin element call string word empti string denot w jwj length x defin l order set k quasilexicograph order denot oe defin by x oe iff jxj jyj y say x prefix y denot x p y determinist finit automaton dfa quintupl sigma q finit nonempti set q transit function extend ffi q theta sigma q theta sigma usual denot ffi ffi languag recogn automaton fg simplic assum follow assum ffi total function ie automaton complet let l length longest word finit languag l dfa call determinist finit coverautomaton dfca l let q sigma ffi f dfca finit languag l say minim dfca l everi dfca l q q a q q said access exist w sigma ffi b q said use coaccess exist w sigma ffiq w f clear everi dfa exist automaton state access one state use the sink state dfa call reduc dfa similar sequenc similar set section describ lsimilar relat sigma gener equival relat jl x jl y xz l iff yz l z sigma notion lsimilar introduc studi etc paper lsimilar use establish algorithm let sigma alphabet l sigma finit languag l length longest l let x sigma defin follow relat x l z sigma jxzj l jyzj l xz l iff yz l x l x l hold relat l call similar relat respect l note relat l reflex symmetr transit exam ple let aabbg clear aab l aabb sinc aab l baa sinc l follow lemma prove finit languag x follow statement hold x l y x l z l z x l y l z x l z x l y y l z x l z x l l z cannot say anyth similar relat x z exampl let x may y l z x l z y l z x l z inde choos finit languag set sigma call lsimilar set x l everi pair x s sequenc word x call dissimilar sequenc pair dissimilar sequenc x call canon dissimilar sequenc l exist partit sigma lsimilar set dissimilar sequenc x l call maxim dissimilar sequenc l dissimilar sequenc y theorem dissimilar sequenc l canon dissimilar sequenc l maxim dissimilar sequenc l proof let l finit languag let x canon dissimilar sequenc l correspond partit sigma lsimilar set let y arbitrari dissimilar sequenc l assum n lsimilar set l j contradict then assumpt n fals conclud x maxim dissimilar sequenc convers let x dissimilar sequenc l without loss gener suppos jx j jx n j note sigma l x least one maxim dissimilar sequenc thu partit sigma remain task proof show x set assum contrari ie i n exist y l z know x l x l z definit follow three case jx or l z lemma would contradict assumpt easi prove x j z x j j i use lemma definit x replac x z obtain longer dissimilar sequenc contradict fact maxim dissimilar sequenc l henc z x similar set corollari finit languag l uniqu number nl number element canon dissimilar sequenc l theorem let two lsimilar set x x shortest word respect x l x set proof suffic prove arbitrari word arbitrari word hold without loss gener assum jx j jx j know jx l lemma similar relat state clear y therefor also defin similar well equival relat state dfa defin state ie levelq length shortest path initi state q q q denot xa qg minimum taken accord quasi lexicograph order la fg automaton understood write x q instead xa q l q instead la q length x q equal levelq therefor levelq defin say equival q a everi w sigma ffi w f iff dfca finit languag l let jg say p a q state p lsimilar q a everi w sigma lgammam ffip w f iff ffiq w f dfca finit languag l let ffi y proof let choos arbitrari w sigma jxwj l jywj l jxj j jyj follow jwj l gamma m sinc p a q ffip w f mean xw la henc x l y lemma dfca finit languag l let ffi proof let x l w sigma lgammam ffip w f ffi xw f x l y follow ffi yw f ffiq w f use symmetri get p a q corollari let q sigma ffi f dfca finit languag l let sigma ffi x x l exampl x minim ie jx conclus corollari true follow dfca l phi phi phi phi phi phi phi phi phi phi a ja b r hy hy fig x l alway ffi x a ffi y b l bab b l ba l aa l corollari let q sigma ffi f dfca finit languag l p a q levelp levelq q f p f lemma dfca finit languag l let s m follow statement true a p a q p a q a p p q s q proof appli lemma corollari lemma dfca finit languag l let lsimilar set therefor ffip w f jwj l gamma m henc p a q ffip w f w l q sigma lgammam lemma dfca finit languag l a q construct dfca l ffi a ffi a q q sigma thu minim dfca l proof suffic prove dfca l let l length longest word l assum consid word w sigma l prove w l iff prefix w w ffi w shortest prefix w remain suffic prove ffi p w prove induct length w first consid case construct thu suppos statement hold jw consid case jw exist u u shortest nonempti prefix w ffip induct hypothesi lemma dfca l l x l y proof let l length longest word l let x jl y so z sigma xz l iff yz l consid word z sigma j xz j l j yz j l sinc xz l iff yz l therefor x l definit l corollari let q sigma ffi f dfca finit languag l l la p ja q impli p a q corollari minim dfca l minim dfa proof let q sigma ffi f minim dfca finit languag l suppos minim dfa la exist p jl q p a q lemma follow minim dfca contradict remark let dfca l minim dfa may minim dfca l exampl take dfa gammapsi automaton gammapsi fig minim dfa alway minim dfca dfa figur minim dfa dfca aag minim dfca l sinc dfa b figur minim dfca l theorem minim dfca l exactli nl state proof let q sigma ffi f dfca finit languag l n suppos n nl exist q x p l x q becaus definit nl p a q lemma thu minim contradict suppos nl n let y canon dissimilar sequenc l exist contradict therefor construct minim dfca first part section describ algorithm determin similar relat state second part construct minim dfca assum similar relat state known order dfa dfa ffii impli j state letter a obvious dfa sink state determin similar relat state aim present algorithm determin similar relat state finit languag l defin fg taken accord quasilexicograph order automaton understood write fl instead a respect fl a lemma finit languag l p proof assum j obvious ffip j so jfl lemma accept l sigma ffip a a ffiq a pa q proof let sigma ffip a r ffiq a s r a jwj also have xa qaw l iff xa sw l w sigma jwj l gamma jx sj henc xa paw l iff xa qaw l w sigma jwj l gamma maxfjxa rj jx sjg jx rj jx sinc sigma chosen arbitrari conclud xa pw l iff xa qw l w sigma jwj l gamma maxfjxa pj jx qjg ie xa p a xa q therefor use lemma get p a q lemma let accept l exist sigma ffip a ffiq a p q proof suppos p a q aw sigma lgammam ffip aw f iff definit ffip a a ffiq a contradict algorithm determin similar relat state dfa dfca finit languag base lemma howev dfa dfca satisfi condit lemma so shall first transform given dfa dfca one doe dfca l construct minim dfa languag sigma l dfa b exact l state use standard cartesian product construct see eg detail dfa take automata order elimin inaccess state obvious satisfi condit lemma lemma dfa c construct abov proof lemma dfa c construct p q c p r proof p gamma a lemma obviou suppos q r r l follow lemma dfa c construct q gamma proof ffi c fc fc follow conclus abl present algorithm determin similar relat state c note qc order p pb attach state c list similar state ff fi qc ff c fi ff fi fi store list similar state ff assum reduc so sink state a comput initi similar relat specifi a n gamma b n gamma c creat list list initi ff follow revers order qc follow assum ff c a fi list ffi c ff a c ffi c fi a sigma ff c fi b put ff list list lemma need determin similar relat state c set step a follow lemma b lemma step lemma remark algorithm complex on theta l n number state initi dfa dfca l maximum accept length finit languag l construct minim dfca input dfa c and ff qc set fig output dfca l defin follow t follow g note construct x use proof follow onli min minimum oper x taken accord lexicograph order accord algorithm total order state qc p q also use construct ie total order qc follow lemma sequenc x construct canon ldissimilar sequenc proof construct set x g obvious follow x lsimilar set let w sigma s imgamma partit q w partit sigma therefor canon ldissimilar sequenc corollari automaton construct minim dfca l proof sinc number state equal number element canon ldissimilar sequenc prove cover automaton l let w sigma l ffi w fd iff ffi c w becaus c dfca l boolean oper shall use similar construct construct dfca languag result boolean oper finit languag modif suggest previou algorithm first construct dfca satisfi hypothesi lemma afterward minim use gener algorithm sinc minim follow natur way shall present construct necessarili dfca let two dfca finit languag l l intersect construct follow dfa lg theorem automaton construct dfa proof follow relat rest proof obviou union construct follow dfa r l r l theorem automaton construct dfa proof follow relat rest proof obviou symmetr differ construct follow dfa fs r l r l theorem automaton construct dfa proof follow relat exclus w exclus w rest proof obviou differ construct follow dfa theorem automaton construct dfa proof follow relat rest proof obviou open problem tri find better algorithm minim prove minim algorithm complex find better algorithm determin similar state dfca l find better algorithm boolean oper dfca r uniform characteris nonuniform complex measur zone regular languag program languag time complex gap twoway probabilist finitest automata two memori bound recognit prime automata introduct automata theori minim nontrivi space space complex probabilist oneway ture machin run time recognis nonregular languag way probabilist automata class measur formal languag properti measur descript complex theori automata state complex basic oper regular languag finit automata behaviour synthesi state complex intersect handbook formal languag tr uniform character nonuniform complex measur minim nontrivi space complex probabilist oneway ture machin time complex gap twoway probabilist finitest automata run time recogn nonregular languag way probabilist automata state complex intersect regular languag state complex basic oper regular languag automat regular languag introduct automata theori languag comput theori automata ctr martin kapp frank niener succinct represent languag dfa differ level reliabl theoret comput scienc v n p februari martin kapp chandra m r kintala tradeoff reliabl concis determinist finit automata journal automata languag combinator v n p septemb