t optim elect faulti loop network applic a abstractloop network or hamiltonian circul graph popular class faulttoler network topolog includ ring complet graph class fundament problem leader elect extens studi assum either faultfre system upperbound number link failur consid loop network arbitrari number link fail processor detect statu incid link show leader elect protocol faulti loop network requir on log n messag worstcas n number processor moreov show optim propos algorithm also detect network partit also show provid optim solut arbitrari nonfaulti network sens direct b introduct loop network common techniqu improv reliabl ring network introduc link redun danci is node connect two addit node network altern path node network sustain sever node link failur sever ring network suggest base prin cipl overal topolog structur redund ring alway highli regular particular set ring edg regular addit edg bypass form loop network sinc least one hamiltonian cycl figur loop network a faulti link b loop network particular case circul graph uncoordin literatur numer term use name topolog depend model circul graph chordal ring distribut loop comput network common detail survey topolog present sake simplic use term loop network remain paper loop network c n d k size n kchord structur d k ring r n n processor p processor also directli connect processor distanc n addit incid chord link connect two node label distanc separ two node ring ie follow order node ring node p connect node p id j mod n link label j as shown figur a particular link two processor p q label distanc processor p link label n incid processor q n number processor note ring complet graph circul graph denot c n respect worth point design redund mesh redund hypercub also circul graph distinct regular bypass link pure function one typic bypass link use strictli reconfigur purpos fault detect absenc fault regular link use special class loop network wide investig analyz faulttoler properti solut propos reconfigur link andor node failur applic eg distribut system link or chord circul graph alway use improv perform comput elect distribut system one fundament control problem leader elect inform elect problem move system initi situat node comput state final situat exactli one node distinguish comput state call leader other state call defeat elect process may independ start subset processor elect problem occur instanc tokenpass token lost owner fail case remain processor elect leader issu new token sever problem encount distribut system solv elect exampl crash recoveri a new server found continu servic previou server crash mutual exclus where valu elect defin last time process enter critic section group server where choic server incom request made elect among avail server manag replic resourc etc follow failur network might partit sever disconnect compon as shown figur b respect elect process compon call activ least one processor compon independ start elect process leader elect protocol must determin uniqu element activ compon distinguish element determin addit inform eg size compon etc need particular applic natur applic irrelev elect process assum everi processor p distinct id chosen infinit total order set id processor awar ident in particular know ident neighbour processor perform distribut algorithm distribut algorithm or protocol program contain three type execut statement local comput messag send messag receiv statement assum messag arc arriv error unbound finit delay fifo order complex measur maximum number messag sent possibl execut elect faulti loop network leader elect problem loop network extens studi assum failur system problem becom rather dicult failur system asynchron system particular elect problem unsolv ie determinist solut protocol exist failur undetect occur time imposs result hold even one processor may fail in failstop mode follow result research thu focus studi problem restrict environ r failur detect fault r r r graph link node detect occurr termin arbitrari loop network complet complet complet r n per node intermitt possibl ring arbitrari loop network unbound unbound ye prior possibl thi paper tabl imposs versu possibl result k constant bound number failstop fault r failur occur prior execut elect protocol r number failur bound constant r failur failstop r everi processor directli connect everi processor exist result elect faulti loop network develop assumpt r r r assum network either complet graph r ring see tabl far without detect algorithm break free bound number failur assumpt r gener expens commun complex on messag on bit paper consid elect problem asynchron arbitrari loop network arbitrari number link fail processor detect statu incid link is make assumpt r r relax version assumpt r thu unlik previou investig restrict complet graph make priori restrict number failur howev assum processor detect failur incid link note assumpt detect assumpt r requir cope unbound number faulti compon see tabl prove that assumpt leader elect protocol faulti loop network requir on log n messag worstcas n number processor moreov show optim case failur partit network algorithm detect distinct element determin activ compon depend applic distinct element thu take appropri action processor link may fail follow assum processor fail incid link fail thu without loss gener consid link failur emphas fact regular bypass link fail as shown figur b processor detect failur incid link knowledg link faulti either o line line o line case hardwar subsystem provid directli knowledg processor thu inform priori respect execut protocol line case knowledg acquir upon attempt transmit link link oper messag transmit otherwis error signal issu system see figur comput point view line case dicult o line one particular transform priori knowledg case eg preprocess phase activ processor test incid link would cost addit messag number nonfaulti link thu on log n so lution case fault detect upon transmiss attempt import sinc faultdetect perform link use comput furthermor solut obvious appli complex case priori knowledg faulti link thu follow concentr dicult case algorithm present combin known techniqu elect nonfaulti network origin rout paradigm base structur inform order avoid faulti compon algorithm use asynchron promot step merg root span tree elect algorithm present elect algorithm loop network arbitrari number link fail failur link detect incid node attempt transmit it full algorithm given appendix see also node independ spontan start elect process we model node receiv wakeup messag network partit algorithm detect elect leader case failur partit network distinct element determin activ compon detect partit occur depend applic distinct element thu take appropri action describ algorithm execut activ compon descript activ compon algorithm build root span tree kingdom repeatedli combin smaller span tree final root span tree distinct element compon follow describ algorithm execut one compon algorithm proce phase round initi node king know link crash end node citizen except one still king intermedi phase algorithm king tri expand kingdom a root direct tree attack anoth kingdom attack carri particular node warrior kingdom tree two distinguish node king warrior king assign level initi zero node p store ident king p level level p king well label outgo chord king war rior node attack store label incom chord attack came algorithm warrior p maintain local view list p other processor indic belong kingdom attack messag request messag defin request statu reqstatu reqk reqlevel reqlist contain local view reqlist inform attack carri warrior warrior select randomli outgo link lead anoth kingdom one connect processor belong kingdom attempt transmit request messag link link faulti failur detect signal notifi warrior situat appropri action see below taken otherwis request messag carri attack kingdom shown figur failur algorithm system attempt request transmiss figur local failur detect attack kingdom follow depth first search strategi state r chord defin specifi chord unus initi branch is part span tree fail determin attempt transmiss branch chord substat sub r introduc specifi chord close is faulti lead anoth kingdom still open the incid node complet explor thu lead node reach yet initi nonfaulti chord open use control backtrack close subtre whose visit complet warrior j cannot reach node outsid kingdom thi local determin state incid link local view list j state warrior togeth list j backtrack parent chord becam close strategi main advantag limit amount backtrack combin compar breadth first search strategi state transit diagram chord shown figur a node save label w w k incid chord lead warrior p warrior attack p king p respect defin statu p node p level p king p list p follow lexicograph total order say statu p statu j i either a level p level j b level king p king j algorithm obey two main rule promot rule warrior p success attack kingdom statu less own let attack warrior p success case a node kingdom lost inform ident new king king p updat level level p note valu level p unchang attack kingdom case b node attack kingdom receiv ident king p new king node kingdom increas level one the level kingdom never decreas success attack warrior p warrior j warrior new kingdom warrior j say processor enter new round level chang ie kingdom defeat kingdom success attack kingdom ident level asynchron rule control number messag phase three dierent case theoret possibl attack warrior p reach node anoth kingdom statu p statu j warrior strong enough attack kingdom and thu attack fail messag kill attack kingdom wait get attack statu p statu j attack p must forward warrior j subsequ attack kingdom kill delay attack resolv j ie j receiv new statu forward attack node path warrior j greater statu ie statu statu p request kill situat occur previous visit node yet inform becom part greater kingdom ie level increas attack reach warrior j still lower statu surrend messag sent back warrior p node path wait new statu statu prove later case ie attack within king dom cannot occur execut algorithm warrior p receiv messag surrend broadcast new statu absorb kingdom kingdom depend promot rule new local view list obtain merg two list initi local view list bit list initi ie bit set except list set concurr number concurr incom attack kingdom must limit order guarante messag complex on round substat substat p node p introduc specifi node waitingforsurrend ha forward attack messag waitingforstatu ha forward surrend messag wait new level regular is readi receiv attack state transit diagram processor shown figur b substat introduc deal two specif situat may occur due inher concurr model first all citizen j forward attack warrior j subsequ attack greater statu delay wait j kill asynchron rule secondli incom attack receiv know kingdom alreadi absorb or absorb by anoth kingdom level may increas case citizen know afterward when receiv new statu forward attack success time statu forward attack smaller new receiv statu attack kill thu citizen go branch open close branch fail a chord unus regular statu waitingfor surrend waitingfor b node figur state transit diagram back regular substat otherwis current attack statu still legal thu inhibit wait substat must kept progress problem occur warrior q receiv surrend messag warrior alreadi engag wait statu process warrior w q attack w attack p consist asynchron rule warrior q wait new statu warrior w send new statu warrior p extrem case occur complic scenario involv node deduc w wait p p attack w deadlock situat prove later theorem total lexicograph order statu forbid creation wait cycl structur inform knowledg size network topolog global consist assign label or label interconnect node commun link use reduc commun cost sinc loop network nodesymmetr graph all node similar one anoth node repres node rel distanc along cycl actual avail edg label use pass knowledg processor repres distanc alreadi reach node p receiv messag node p incid chord label unambigu decod inform node contain messag name messag contain inform node link p chord inform refer node distanc d d mod n p ring order fact use determin whether unus chord ie messag sent outgo that connect dierent kingdom not function combin local view processor provid messag consist represent kingdom pass processor processor decod function correspond circular bit shift length chord denot transpos the exact code function given end algorithm termin partit algorithm termin kingdom includ node connect nonfaulti subgraph determin event may dier depend whether network disconnect not consid first case partit network reachabl node becom part kingdom king becom warrior becaus bactrack inher depth first search strategi incid chord close there outgo link toward node belong kingdom point detect termin local view also determin size kingdom disconnect occur network disconnect termin detect occur earlier soon warrior determin local view kingdom includ node network the list full ie set case warrior which possibl king broadcast along tree termin messag sinc messag contain view warrior upon termin everi node compon determin whether graph disconnect well node compon case disconnect depend applic king take appropri action exampl attack shown figur kingdom k greater statu kingdom k the correspond loop network c shown figur result success attack shown figur messag use requeststatu attack warrior forward adversari messag also consid first attempt chord provid failur detect chord faulti surrenderstatu sent defeat warrior inform winner success newstatusstatu broadcast winner appropri tree de pend promot rule branch sent success warrior chord connect two tree backtrackstatu sent warrior parent chord close node reachabl chord part kingdom faulti movewarriorstatu sent warrior one open chord backtrack termin broadcast sole remain warrior connect compon termin execut algorithm number processor spontan start execut algorithm model recept wakeup messag activ compon least one processor spontan start algorithm ie receiv wakeup messag king request branch l c e f figur kingdom c correct protocol fulli asynchron messag receiv processor order processor receiv messag depend initi input nondeterminist howev algorithm eventdriven messag process first infirstout order order processor process commun reli tree structur asynchron progress rule correct follow establish safeti a warrior never attack node kingdom progress eventu tree span node connect compo nent appropri termin there exactli one elect node connect compon network follow number parenthes refer correspond section algorithm appendix lemma request messag initi warrior unus open chord request messag travers citizen node branch chord lead warrior kingdom travers proof warrior send request if attempt success unus open arc procedur attempt end descript algorithm citizen or king send request upon receipt request forward warrior link label w is use chord citizen g c j k f c g l request branch warrior king g figur two kingdom c corollari statu chord becom use warrior previous sent request it chord detect faulti lemma local view list p warrior p repres exactli list processor belong kingdom warrior p proof induct clearli true initi local view set assum local view list p warrior w correct complet attack warrior modifi view either success attack while receiv surrend messag warrior becom citizen combin two view pass warrior privileg new combin kingdom defeat warrior defeat while receiv newstatu messag receiv view win kingdom combin obtain complet view merg kingdom case new local view contain exact list processor new kingdom prove induct lemma safeti warrior never attack node kingdom proof shown lemma attack done upon receipt new statu creat new list node belong kingdom chord link node close remain unus chord even randomli chosen lead processor dierent kingdom therefor cycl creat kingdom sever fact properti observ clarifi correct fact asynchron rule wait citizen king process request messag c l g f request branch warrior king g figur attack c fact eventu node kingdom receiv statu kingdom inde end phase defeat design warrior broadcast new statu along travers chord wait cycl request may creat proof immedi sinc send request chang regular state warrior therefor request wait non regular node block warrior initi them theorem progress deadlock may introduc wait aris node must wait condit hold proof messag send nonblock case node block wait event warrior wait new statu messag send surrend similarli surrend messag defer success warrior node surrend anoth warrior attack repeat set chain wait on surrend processor occur howev chain cannot becom circular wait surrend messag initi success attack statu attack warrior j strictli lexicograph larger statu defend warrior p total order statu defin promot rule forbid wait cycl processor statu j statu p statu j contradict definit corollari eventu node wait substat theorem kingdom root direct tree proof induct initi kingdom one node tree kingdom defin subgraph compos chord mark k incid node root king also defin subgraph compos chord mark w incid node case tree root warrior follow success attack chord connect two tree the absorb absorb one becom part kingdom upon receipt newstatu messag initi winner warrior broadcast absorb kingdom outgo chord king store k label king nil valu k node citizen andor king warrior chang label k receiv new statu messag announc absorpt anoth kingdom case k set incom arc messag receiv chang orient guarante tree root new king note similar observ repeat tree root warrior lemma appropri termin algorithm termin forest of most one root span tree connect compon proof safeti lemma progress theorem theorem connect compon least one processor initi elect protocol algorithm build root span tree main theorem deduc theorem algorithm correctli elect leader proof theorem theorem lemma theorem hold elect protocol independ start subset processor elect particular node activ connect compon the king group processor par tition not activ compon form consist view contain exact list reachabl processor singl elect node king depend applic distinct element thu take appropri action eg promot leader major basi wait recoveri faulti compon simul nonfaulti topolog embed activ connect group form restrict connect work group analysi measur ecienc analyz commun complex the number size messag sent lemma number round log k kingdom k independ node start algorithm proof promot rule base tournament n node enter phase i fact k k independ node start algorithm maximum number round maximum valu level win kingdom ie log k corollari number surrend messag sent warrior particular execut log k k independ node start algorithm lemma given round given nonfaulti chord l kingdom two request transmit chord l proof given round given nonfaulti chord l kingdom request pass chord face sever possibl outcom request success ident level caus round increas kingdom forthcom request previou level discard incid node request success dierent ie larger level level valu updat absorb kingdom lemma request sent dierent kingdom may occur anoth request level behav describ case limit number occurr two request unsuccess is messag kill path warrior impli level increas anoth attack node incid chord know yet concurr rule enforc delay one request wait incid node discard newstatu arriv similar argument use branch chord two kingdom corollari given round given nonfaulti chord l kingdom two surrend resp new statu messag transmit chord l precis theorem total number messag use algorithm exceed proof number messag kind follow sent given round n nonfaulti chord see lemma henc total number request messag sent whole execut bound n log k sent path kingdom modif level henc total number messag sent whole execut also bound n log k broadcast kingdom increas level henc total number messag sent whole execut also bound sent branch chord kingdom ie n messag sent branch chord kingdom subtre cannot reach node henc total number messag bound size span tree ie n sent openedbranch chord kingdom node cannot reach node henc total number messag also bound size span tree ie n termin n messagesonli seven dierent type messag exist statu compos of ident king valu m level take log n valu list n bit array therefor size messag n bit theorem algorithm optim worstcas messag complex proof given loop network c let f c denot set possibl combin link failur c clearli cardin f c e e set chord c given f f c denot mc f number messag requir solv elect problem c failur describ f occur then worst case complex wcc solv elect problem c arbitrari number link failur n number processor r n ring without bypass last equal follow lower bound ring sensit absenc failur algorithm present use on log n messag worst case regardless amount fault system consid case fault occur system elect requir node priori knowledg absenc failur could execut optim elect protocol nonfaulti network case depend chord structur lower complex in case on achiev howev achiev complex requir absenc failur priori known more specif common knowledg processor show achiev result without requir commonknowledg first observ exist optim algorithm elect nonfaulti loop network use specif subset chord transmit messag basic idea quit sim ple processor assum specif incid arc nonfaulti base assumpt start correspond topologydepend optim elect algorithm a processor x detect failur attempt transmit messag protocol a x start execut algorithm propos section thu failur algorithm termin use messag failur overal cost strategi on log n on log n sinc on log n approach actual lead stronger result obtain topologydepend optim bound nonfaulti case sucient chord use faultfre extens applic consid section elect problem dierent set fact studi arbitrari network sens direct absenc fault show previou result present paper immedi use prove posit impact avail sens direct messag complex distribut problem arbitrari faultfre network sens direct sens direct refer capabl processor distinguish adjac commun line accord global consist scheme exampl ring network properti also usual refer orient express processor abil distinguish left right left mean processor orient tori ie sens direct label up down ad exist intuit label base dimens provid sens direct hypercub edg two node label node dimens bit ident dier similarli natur label loop network discuss previou section sens direct network avail sens direct shown impact messag complex elect problem arbitrari network defin global consist label link extend natur way exist definit particular topolog fix cyclic order processor network distanc sens direct processor incid link label accord distanc cycl node reach link particular link processor p q label distanc processor p link label n processor q n number processor exampl sens direct arbitrari network shown figur note definit intrins requir knowledg size n network includ special case definit sens direct topolog refer abov orient ring left right correspond n respect orient complet network n set number link plu one orient loop network circul graph furthermor hypercub sens direct deriv on messag tradit one elect faultfre arbitrari network consid impact sens direct messag complex elect problem g f a ba f g figur arbitrari network a sens direct b obviou everi graph subset complet graph is arbitrari network incomplet complet graph less obviou fact that everi arbitrari network sens direct incomplet loop network is everi arbitrari network loop network edg remov simpl observ immedi import consequ impli arbitrari graph sens direct faulti loop network compar figur figur miss link correspond faulti one moreov set everi processor alreadi know link faulti ie miss consequ algorithm describ section also solut elect problem faultfre arbitrari graph sens direct theorem follow sens direct solut on log n messag exist elect problem log n lower bound messag complex elect problem bidirect ring sens direct follow log n also lower bound gener case thu bound tight contrast arbitrari network n processor link global consist label no sens log n messag requir elect leader bound achiev import result show posit impact sens direct commun complex elect problem arbitrari network confirm exist result specif topolog interest consequ result follow compar obtain assum processor know ident neighbour name show possibl obtain reduct messag complex requir much less inform port label instead neighbour name conclud remark paper present n log n solut elect problem loop network arbitrari number link fail processor detect statu incid link network partit algorithm detect elect leader case failur partit network distinct element determin activ compon detect partit occur depend applic distinct element thu take appropri action moreov algorithm worstcas optim previou result establish complet graph assum priori bound number failur ecient solut yet develop arbitrari circul graph failur bound undetect result quit gener fact algorithm easili modifi solv elect problem complex faultfre arbitrari network sens direct r elect asynchron complet network intermitt link failur analysi chordal ring distribut loop comput network survey new lower bound techniqu distribut leader find problem ring processor doubli link ring network design faulttoler system use automorph imposs distribut consensu one faulti process optim elect label hypercub sens direct formal definit properti distribut algorithm minimum span tree elect leader ring link failur knowledg common knowledg distribut environ ment optim distribut tresili elect complet network distribut span tree algorithm toward optim distribut elect chordal ring distribut elect protocol unreli network modular techniqu design e tight lower upper bound class distribut algorithm complet network processor fulli distribut minim span tree algorithm elect complet network sens direct optim distribut algorithm unlabel tori chordal ring impact sens direct arbitrari network optim faulttoler leader elect chordal ring toler doubleloop comput network multinod failur optim faulttoler distribut algorithm elect complet network global sens direct distribut system reliabl analysi chordal ring comment toler doubleloop comput network multinod failur reliabl loop topolog larg local comput network messag complex distribut problem sens direct optim asynchron agreement leader elect algorithm complet network byzantin faulti link leader elect presenc link failur multipl faulttoler processor network architectur pipelin comput design distribut faulttoler loop network fault faulttoler distribut system elect problem elect faulti ring incomplet size inform tr ctr paola flocchini bernard man nicola santoro sens direct distribut comput theoret comput scienc v n p januari