t multiplerank modif spars choleski factor a given spars symmetr posit definit matrix mathbfaatr associ spars choleski factor mathbfldltr mathbflltr develop spars techniqu updat factor either ad collect column delet collect column a techniqu base analysi manipul underli graph structur use framework develop earlier paper rank modif t a davi w w hager siam j matrix anal appl pp comput multiplerank updat better memori traffic execut much faster equival seri rank updat sinc multiplerank updat make one pass l comput new entri seri rank updat requir multipl pass l b introduct paper present method evalu multipl rank updat downdat spars choleski factor ldl matrix aa n precis given r matrix w evalu choleski factor aa either correspond updat w arbitrari correspond downdat w consist column a aa aa ww must posit denit follow case updat n r case downdat one approach multipl rank updat express seri rank updat use theori develop updat spars factor rank chang approach howev requir multipl pass l updat rank chang paper develop spars factor algorithm make one pass l dens choleski factor onepass algorithm updat factor obtain method c make chang associ one column l move next column done follow algorithm overwrit l new factor aa perform oatingpoint oper algorithm dens rankr updatedownd r end r work support nation scienc foundat davisciseu edudavi po box depart comput inform scienc engin univers florida gainesvil fl phone fax tr june revis sept z hagermathu eduhag po box depart math matic univers florida gainesvil fl phone fax a davi william w hager end r l end end end develop spars version algorithm access modi entri l chang theori rank paper show column chang correspond node elimin tree path start node k associ rst nonzero element w k w r show column l chang correspond node subtre elimin tree express subtre modic elimin tree aa also show reorder column w arrang inner loop element row p w updat element chang adjac other spars techniqu develop lead sequenti access matrix element ecient comput memori trac techniqu modifi spars factor mani applic includ linear program dual activ set algorithm leastsquar problem statist analysi electr circuit power system structur mechan sensit analysi linear program boundari condit chang partial dierenti equat domain decomposit method boundari element method see section describ notat section present algorithm comput symbol factor aa use multiset determin locat nonzero entri l section describ multipl rank symbol updat downdat algorithm nding nonzero pattern new factor section describ algorithm comput new numer valu l d either updat downdat experiment result present section notat background given locat nonzero element aa perform symbol factor thi terminolog introduc georg liu matrix predict locat nonzero element choleski factor l actual predict nonzero may zero due numer cancel factor process statement mean l ij symbol nonzero main diagon l alway nonzero sinc matric factor posit denit see p nonzero pattern column j l denot l denot collect pattern similarli j denot nonzero pattern column j a collect pattern elimin tree dene term parent map see node j j row index rst nonzero element column j l beneath diagon element min x denot smallest element i convent min empti set zero note j j except case diagon element column j nonzero element children node j set node whose parent j ancestor node j denot pj set success parent j ancestor sequenc nite sequenc node j j j form pj call path j associ tree root nal node path collect path lead root form elimin tree set tree elimin forest typic singl tree whose root m howev column j l one nonzero element diagon element j root separ tree number element or size set x denot jx j jaj jlj denot sum size set contain symbol factor matrix form aa pattern l j column j union pattern column l whose parent j column whose smallest row index nonzero entri j see min akj modifi updat downdat without recomput scratch need keep track entri enter l j exampl c chang may need remov term l c n fcg cannot simpli perform set subtract sinc may remov entri appear term keep track entri enter leav set l j maintain multiset associ column j form timothi a davi william w hager multipl mi j number children j contain row index pattern plu number column whose smallest entri j contain row index i equival j increment equat one ensur diagon entri never disappear downdat set l j obtain l remov multipl dene addit multiset x set follow way similarli subtract set multiset x dene multiset subtract x undo prior addit is multiset x set contrast x y n y equal x x disjoint set use multiset addit instead set union lead follow algorithm comput symbol factor aa algorithm symbol factor aa use multiset c end k min end end multipl rank symbol updat consid pattern l chang aa replac aa ww sinc essenc augment w order evalu new pattern column l accord new pattern l j column j l updat min akj w pattern column w throughout put bar matrix set denot new valu updat downdat follow theorem consid column j matrix l pattern modi set w let l j denot multiset column j rankr updat downdat appli theorem comput new multiset l j perform follow modic case a pattern column case b c c child j old new elimin tree case c c c child j new tree old one case d c c child j old tree new one proof case ad account adjust need make l j order obtain l j adjust deduc comparison case a simpli add w multiset appear case b node c child node j updat case must adjust deviat l c l c prop rank updat l c l c w denot ith column w henc updat aa ww equival r success rank updat aa repeat applic prop l c l c rankr updat aa timothi a davi william w hager follow l c l c deviat set l c n l c consequ case b simpli add l c n l c case c node c child j new elimin tree old tree case need add entir set l c n fcg sinc correspond term appear similarli case d node c child j old elimin tree new tree case entir set l c nfcg delet case c child j either old new elimin tree result adjust sinc correspond l c term absent algorithm updat choleski factor base theorem would visit node j m consid possibl children c j hand node j need consid sinc column l chang aa modi thm show node whose pattern chang contain pk dene rankr updat let p i ancestor map associ elimin tree choleski factor matrix again thm node whose pattern chang rankr updat contain union pattern although could evalu i dicult ecient sinc need perform seri rank updat evalu ancestor map these hand prop prop p i j p i j j follow p i consequ node whose pattern chang rankr updat contain set ir theorem below show node also contain one set p i k follow node precis node entri associ column l chang rankr updat present theorem illustr simpl exampl shown figur left figur show sparsiti pattern origin matrix aa choleski factor l correspond elimin tree nonzero pattern rst column w g perform singl rank updat caus modic column l correspond node origin tree encircl node form path p g node root node second tree middl figur show matrix rank updat factor elimin tree entri second dier origin matrix aa shown small pluse second column w nonzero pattern w g rank updat aect column p l column form singl path nal elimin tree shown right gure rst rank updat set column actual chang p g subset path nal tree use p guid work associ column w visit column second updat first updat elimin tree elimin tree first updat elimin tree origin factor l factor second updat factor first updat origin matrix second updat origin fig exampl rank updat need modi plu column node set node p aect second rank updat howev shown follow theorem theorem path contain convers contain p i proof theorem observ path contain suppos node j lie tree need prove contain p i largest integ pk contain j let c child j c lie path pk i j lie path pk sinc j parent c sinc j lie path pk s follow c lie path pk s appli argument recurs conclud none node subtre root j lie path pk s let j denot subtre root j sinc contain pk i none node j lie path thm pattern node outsid path unchang i let l i c pattern column c choleski factor sinc node c contain j lie timothi a davi william w hager dc be e f c fig exampl rank symbol updat subtre path c i l s sinc k node j path p must includ j figur depict subtre exampl rank updat subtre consist node edg one path pk path form subtre gener graph sinc path initi node root elimin tree matrix l subtre might actual forest l elimin forest rather elimin tree rst nonzero posit w w correspond node k k exampl node k happen lie path p k node path rst intersect shown smaller circl label f node along path shown curv arrow denot singl subpath exampl arrow node b e denot subpath b e pb subpath denot pb e figur follow algorithm comput rankr symbol updat keep track array pathqueu one column l queue contain set pathmark rang r denot path pk next two path merg one path need consid we arbitrarili select highernumb path repres merg path set pathqueu requir om remov insert pathmark pathqueu take o time output algorithm new pattern l elimin tree name l j column aect rankr updat dene l node j case c occur c j prior visit column c sinc thu place c lostchildqueu column c encount case c node c j algorithm visit node c lostchildqueu contain node case hold set lostchildqueu set pathqueu although exactli one lostchildqueu one pathqueu column j l algorithm symbol rankr updat add new matrix w find start node path r place pathmark pathqueu column k end consid column correspond node path pk pathqueu column j nonempti pathmark pathqueu column j let c prior column path if ani case a j rst node path pk prior c els case b c old child j possibl chang els case c c new child j lost child c place c lostchildqueu column c endif end case d consid lost child j c lostchildqueu column j end move one step path let largest pathmark pathqueu column j place pathmark pathqueu column j pathqueu column j nonempti end optim time gener rankr updat a davi william w hager actual time taken algorithm slightli higher name om bookkeep requir pathqueu practic case om term domin term run time algorithm use comput entir symbol factor start factor ident matrix ii ldl iii case j initi elimin tree forest node edg determin symbol factor aa use rankr updat algorithm abov m matrix ident symbol factor aa case appli column a correspond min akj term sinc c c case b appli column j case c appli children elimin tree correspond term sinc duplic path discard merg modifi column j onc child c elimin tree work perform symbol factor algorithm algorithm ojlj henc algorithm equival algorithm appli updat aa run time optim case multipl rank symbol downdat downdat algorithm analog downdat matrix aa ww w subset column a downdat pk pk thu rather follow path pk follow path pk entri drop downdat thu l j l j j j start l j make follow chang case a pattern w remov column j case b c child j old new tree need remov l entri old pattern l c new pattern l c case c node c c child j old elimin tree new tree comput multiplerank modif case d node c c child j new tree old one comput case c occur c j prior visit column c sinc thu place c newchildqueu c encount case c node c j algorithm visit node c newchildqueu contain node case hold algorithm symbol rankr downdat remov matrix w find start node path r place pathmark pathqueu column k end consid column correspond node path pk pathqueu column j nonempti pathmark pathqueu column j let c prior column path if ani case a j rst node path pk prior c els case b c old child j possibl chang els case c c lost child j new child c place c newchildqueu column c endif end case d consid new child j c newchildqueu j end move one step path let largest pathmark pathqueu column j place pathmark pathqueu column j pathqueu column j nonempti end a davi william w hager time taken algorithm slightli higher optim time practic case om term asymptot run time algorithm domin term multipl rank numer updat downdat follow numer rankr updatedownd algorithm algorithm overwrit l updat downdat factor algorithm base algorithm onepass version method c present section algorithm use symbol updat algorithm algorithm found subtre correspond node whose pattern chang symbol downdat algorithm algorithm found sinc column matrix w reorder without aect product ww reorder column w use depthrst search or march tree consecut column w util comput reorder improv numer up datedownd algorithm place column w aect given subpath next other elimin index oper reorder column spars matrix prior choleski factor common improv data local simpli algorithm reorder w multipl rank updatedownd depth rst order tree chang elimin tree chang column w must order updat downdat illustr reorder consid subtre figur rank updat depthrstsearch algorithm visit child subtre left right result reorder shown figur subpath figur label rang column w aect subpath order subpath process algorithm consid path node c e figur column l correspond node subpath updat column w order reorder subtre figur column subpath updat column reorder w algorithm spars numer rankr modic add ww column w reorder r end subpath depthrstsearch order let c c column w aect subpath column j subpath e f c th nd st th rd th th th th th th th th fig exampl rank updat depthrstsearch reorder end l end end end end time taken r rank updat o r l i j pattern column j ith rank updat time asymptot optim singl rankr updat cannot determin path use pk instead thu time taken algorithm rankr updat o r slightli higher timothi a davi william w hager tabl dens matrix perform by matric by vector oper op dgemm matrixmatrix multipli dgemv matrixvector multipli dtrsv solv daxpi the vector comput ddot the dot product ith column w necessarili aect column path pk w aect column j w ji zero inner loop algorithm exampl occur figur column w aect column l could check condit reduc asymptot run time o r practic howev found path dier much includ test improv overal perform algorithm time taken algorithm rankr downdat similar name o r numer algorithm updat downdat essenti ldl dierenc diagon scale either ldl symbol algorithm ident experiment result test method select experi earlier paper singlerank updat downdat mimic behavior linear program dual activ set algorithm rst consist column larger aris airlin schedul problem dfl column correspond optim solut linear program problem start initi ldl factor matrix ad column b correspond updat obtain factor bb remov column rstinrstout order correspond downdat obtain origin factor lp dasa algorithm would perform much work updat down date solv linear program problem experi took place sun ultra enterpris run solari oper system eight mhz ultrasparcii processor onli one processor use gb main memori dens matrix perform million oatingpoint oper per second m op bla shown tabl result present code except colmmd spool bla written c program languag use doubl precis oat point arithmet rst permut row b preserv sparsiti choleski factor bb done ecient colamd base tabl averag updat downdat perform result op r second updat downdat updat downdat approxim minimum degre order algorithm howev keep result consist prior rank updatedownd paper use permut experi from colmmd colamd matlab colmmd comput order without form bb explicitli symbol factor bb nd nonzero count column factor step take amount space proport number nonzero entri b give us size static data structur hold factor updat downdat process numer factor bb requir second symbol factor nd rst nonzero pattern l initi numer factor comput rst factor l d use nonsupernod factor code similar sparspak sinc updatedownd algorithm use supernod supernod factor code spool multifront method get better perform factor method use impact perform updat downdat algorithm ran dierent experi one use dierent rankr updat downdat r vari rankr updat solv spars linear system ldl use dens righthand side b compar perform rank updat rankr updat r divid run time rankr updat r give us normal time singl rank updat averag time op rate normal rank updat downdat entir experi shown tabl time updat downdat solv increas factor becom denser perform term op fairli constant three oper rst rank updat factor l sparsest take second second normal run op compar op tabl averag speed rank updat perform step summar tabl rank updat take time use updat factor solv spars linear system even though rank updat perform time work work term oatingpoint oper vari slightli r chang rank updat total work updat billion a davi william w hager tabl dens matrix perform by matric by vector oper time sec op note colamd order symbol factor of bb symbol factor rst l thousand nonzero numer factor rst l our code numer factor rst l spool numer factor bb our code requir numer factor bb spool requir averag rank updat compar rank averag rank updat compar solv step averag rank updat averag solv ldl point oper million per rank updat rank updat the worst case total work increas billion oatingpoint oper downdat take total billion oatingpoint oper million per rank downdat rank downdat take total billion oper conrm nearoptim oper count multipl rank updatedownd compar optim rank updatedownd solv l spars b dens comput spars ldl factor use nonsupernod method give rather poor comput tomemoryrefer ratio tri loop unrol techniqu use updatedownd code spars solv spars ldl factor code result improv perform spars rankr updat downdat implement onepass algorithm much better memori trac seri r rank modic numer experiment dfl linear program test problem rankr modic twice fast r rank modic r superior perform multipl rank algorithm explain use computationtomemoryrefer ratio c algorithm a subpath aect one column w shown ratio l j larg ratio c aect column w l j larg henc go rank rank updat improv computationtomemoryrefer ratio factor column j l mani nonzero comparison level bla routin dens matrix comput vector comput daxpi ddot computationtomemoryrefer ratio level bla dgemv dtrsv exampl ratio summari improv memori local multiplerank spars updatedownd method twice fast prior rank updatedownd method perform new method op spars rank updat compar favor dens matrix perform op solv dens system spars matrix perform op solv spars system observ peak numer factor op spool comput use experi although strictli optim multiplerank updatedownd method nearli oper count rank updatedownd method optim oper count multiplerank modif r approxim minimum degre order algorithm vector multiprocessor multifront code spool objectori spars matrix librari choleski up downdat algorithm systol simd architectur sparspak waterloo spars matrix packag introduct algorithm column approxim minimum degre order algorithm column approxim minimum degre order algorithm modifi spars choleski factor philadelphia siam public set level basic linear algebra subprogram distribut mathemat softwar via electron mail multifront solut ind comput solut larg spars posit de data structur spars qr lu factor spars matric matlab design implement method modifi matrix factor updat invers matrix approxim minimum degre column order algorithm role elimin tree spars factor supernod choleski factor algorithm sharedmemori multiprocessor new york tr ctr w hager dual activ set algorithm applic linear program comput optim applic v n p march ove edlund softwar packag spars orthogon factor updat acm transact mathemat softwar tom v n p decemb matin bergounioux karl kunisch primaldu strategi stateconstrain optim control problem comput optim applic v n p juli nichola i m gould jennif a scott yifan hu numer evalu spars direct solver solut larg spars symmetr linear system equat acm transact mathemat softwar tom v n pe june