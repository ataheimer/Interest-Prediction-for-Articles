t loadbalanc scatter oper grid comput a present solut static loadbal scatter oper parallel code run grid loadbalanc strategi base modif data distribut use scatter oper studi replac scatter oper parameter scatter allow custom distribut data paper present gener algorithm find optim distribut data across processor quicker guarante heurist reli hypothes commun comput polici order processor experiment result mpi scientif code illustr benefit obtain loadbalanc b introduct tradit user develop scientif applic parallel comput mind assum homogen set processor link homogen fast network howev grid comput resourc usual includ heterogen processor heterogen network link order magnitud slower parallel comput therefor execut grid applic design parallel comput usual lead poor perform distribut workload take heterogen account henc need tool abl analyz transform exist parallel applic improv perform heterogen environ loadbalanc ex ecut furthermor will fulli rewrit origin applic rather seek transform modifi origin sourc code littl possibl research support french ministri research acigrid program among usual oper found parallel code scatter oper one collect oper usual ship messag pass librari instanc mostli use messag pass librari mpi provid mpi_scatt primit allow programm distribut even part data processor mpi commun less intrus modif enabl perform gain heterogen environ consist use commun librari adapt heterogen thu much work devot purpos mpi numer project includ magpi mpistart mpichg aim improv commun perform presenc heterogen network gain obtain rework design collect commun primit instanc mpichg perform often better mpich dissemin inform held processor sever other mpich alway use binomi tree propag data mpichg abl switch flat tree broadcast network latenc high make commun librari awar precis network topolog easi mpichg queri underli globu environ retriev inform network topolog user may specifi environ variabl networkawar librari bring interest result compar standard commun librari howev improv often suffici attain perform consid accept user processor also heterog neou balanc comput task processor also need take benefit grid typic usag scatter oper spawn spmd comput section processor receiv piec data therebi comput load processor depend data receiv use scatter oper mean loadbal com putat provid item data set scatter independ mpi provid primit mpi_scatterv allow distribut unequ share data claim replac mpi_scatt mpi_scatterv call parameter clever distribut may lead great perform improv low cost term sourc code rewrit transform oper requir deep sourc code reorgan easili autom softwar tool problem thu loadbal execut comput data distribut depend processor speed network link bandwidth section present target applic real scientif applic geophys written mpi ran raytrac full set seismic event year section present loadbalanc techniqu section processor order polici deriv case studi section experiment result section relat work conclud section motiv exampl seismic tomographi geophys code consid seismic tomographi field gener object applic build global seismic veloc model earth int rior variou veloc found differ point discret model gener mesh reflect physic rock properti locat seismic wave veloc comput seismogram record cap tor locat around globe analyz wave type earthquak hypocent captor locat well wave travel time determin data tomographi applic reconstruct event use initi veloc model wave propag sourc hypocent given captor defin path applic evalu given properti initi veloc model time wave propag along evalu path compar actual travel time final step new veloc model minim differ comput process accur new model better fit numer path mani locat insid earth therefor comput demand exampl applic outlin applic studi exploit potenti parallel comput task distribut across processor recal input data set seismic wave characterist describ pair coordin the coordin earthquak sourc receiv captor plu wave type characterist seismic wave model set ray path repres wavefront propag seismic wave characterist suffici perform raytrac whole associ ray path therefor ray path trace independ exist parallel applic present assum homogen set processor the implicit target parallel comput follow pseudocod outlin main commun comput phase raydata read n line data file mpi_scatterraydata rbuff root p number processor involv n number data item mpi_scatt instruct execut root comput processor processor identifi root perform send contigu block bnp c element raydata buffer processor group processor make receiv oper respect data rbuff buffer sake simplic remain n mod p item distribut shown here figur show potenti execut commun oper p root process time idl receiv send comput figur scatter commun follow comput phase hardwar model figur outlin behavior scatter oper observ applic run test grid describ section behavior indic network capabl root node send one destin node time singleport model realist grid mani node simpl pc fullduplex network card root processor send data processor turn receiv processor actual begin commun previou mpich implement order destin processor scatter oper follow processor rank processor serv lead stair effect repres figur end time receiv oper black box static loadbalanc overal execut time loadbalanc rather small make assumpt grid characterist chang comput consid static loadbalanc note also comput distribut necessarili base static paramet estim whole execut monitor daemon process like run asid applic could queri scatter oper retriev instantan grid characterist framework consid set p processor character time comp i x take comput x data item time tcomm i x take receiv x data item root process want process data item look distribut n n p data p processor minim overal comput time paper root processor last process p p start process share data item sent data item processor root processor send data processor turn processor p begin commun processor serv take time tcomm j n j root take tcomm i n send p data p take comp i n process them thu p end process time time taken system comput set n data item therefor ip look distribut n n p minim durat exact solut dynam program studi equat remark time process n data processor p equal maximum time taken root send n data p plu time taken p process them time processor p process n n data plu time root send n data p lead dynam program algorithm the distribut express list henc use list constructor con algorithm costd i denot cost process data item processor p p p solutiond i list describ distribut data item processor achiev minim execut time costd i algorithm comput optim distribut n data processor solut p con nil n solutiond p consd nil n e sol e costd i min solutiond return costn solutionn algorithm complex op n may prohibit algorithm assum function tcomm i x comp i x nonneg present effici heurist valid simpl case guarante heurist use linear program ming section make hypothesi function tcomm i n comp i n affin n increa ing nonneg for n equat code follow linear program minim linear program must solv integ find integ solut howev solv ration obtain optim ration solut n n p round obtain integ solut n let execut time solut time ration solut opt time optim integ solut jn n i easili enforc round scheme describ below then ip inde hypothesi tcomm j x comp j x non neg increas affin function therefor tcomm j equival upper bound comp j n use upper bound overapproxim express given equat obtain impli equat know opt round scheme round scheme trivial first round nearest integ n nearest integ obtain n make approxim error with jej e neg underestim resp overesti mate approxim round ceil resp floor one remain n j nearest ceil dn j e resp floor bn j c obtain new approxim error with jej remain approxim one s say n let n e distribut n n thu integ d n differ n less one choic root process make assumpt that origin n data item must process store singl comput denot c processor c may may use root processor root processor c whole execut time equal time need transfer data c root processor plu execut time comput algorithm best root processor processor minim whole execut time pick root result minim p candid case studi solv ration linear commun comput time section studi simpl theoret case make hypothesi function tcomm i n comp i n linear n word constant tcomm i also look ration solut integ one should case studi enabl us defin polici order processor must receiv data inde simpl case processor order lead shortest execut time quit simpl show section prove section alway optim ration solut work processor end time also show condit processor receiv share whole work condit come express execut durat processor process share whole work finish date begin studi case section final section deriv case studi consequ gener case execut durat theorem execut durat look ration solut processor p receiv non empti share n whole set n data item processor end comput date t execut time processor p receiv data process proof want express n function n equat state processor p end process time current hypothes and hypothesi processor end process time find equat express execut durat function n sum equat valu p equival equat rest paper note hypothes theorem simultan end paragraph exhibit condit cost function tcomm i n comp i n set processor necessari suffici optim ration solut processor receiv nonempti share data processor end date tell us theorem use find ration solut system theorem simultan end given p processor p p whose commun comput durat function tcomm i n comp i n linear n exist optim ration solut processor receiv nonempti share whole set data processor end comput date proof proof made induct number processor one processor theorem trivial true shall next prove theorem true p processor also true p processor suppos optim solut comput n data item obtain give n item p n item p p p end date processor p theorem suppos true p proce sor know exist optim ration solut processor p p p work finish work simultan p case theorem time taken p data processor p end date k strictli increas decreas moreov thu whole end date maxt minim uniqu case processor data comput end date contrari k strictli increas thu whole end date minim case processor p noth comput end date processor p p p end date k n thu exist optim ration solut receiv nonempti share whole set data processor end comput date p proof theorem show processor p dp interest problem use increas whole process time therefor forget processor theorem state optim ration solut remain processor work date processor order polici state section root processor send data processor turn receiv processor actual begin commun previou processor receiv share data moreov mpich implement mpi order destin processor scatter oper follow processor rank defin programm therefor set processor rank influenc order processor start receiv process share whole work equat show case overal comput time symmetr processor depend order therefor must care defin order order speedup whole comput appear current case best order quit simpl theorem processor order polici function tcomm i n comp i n linear n p look ration solut smallest execut time achiev processor the root processor except order decreas order bandwidth from p processor connect root process highest bandwidth p p processor connect root processor smallest bandwidth last processor root processor proof consid order p p p pro cessor except p p root processor as explain section consid permut order word consid order p p processor exist denot resp t best ration execut time processor order p p p must show p k connect root processor higher bandwidth p k strictli smaller t word must show implic therefor studi sign t differ replac express state equat as hypothesi p dp bit complic if p i dp opposit exist valu p i dp optim execut time cannot achiev solut processor receiv nonempti share whole set data processor end comput date therefor solut processor receiv nonempti share whole set data processor end comput date lead execut time strictli greater and equat summar by prove follow implic prove equat henc studi sign as express denomin obvious strictli posit sign sign of want simplifi second sum equat thu remark valu order take advantag simplif propos equat decompos second sum equat four term sum k term k k sum k p k report result equat equat suppress term common side sign divid result equat strictli posit term way obtain sign than k k equival to therefor k k equat hold thu equat therefor invers processor p k p k profit bandwidth root processor processor higher bandwidth root processor processor p k consequ gener case so gener case go order processor exact studi feasibl even gener case know comput commun characterist processor inde consid possibl order p processor use algorithm comput theoret execut time chose best result theoret possibl prac tice larg valu p approach unrealist furthermor gener case analyt studi cours imposs we cannot analyt handl function tcomm i n comp i n so build previou result order processor decreas order bandwidth connect root processor with except root processor order last even without previou studi polici surpris inde time spent send share data item processor pay processor p p p first processor one less expens send data to on cours practic thing bit complic work integ howev main idea roughli show suppos comput commun function linear denot by opt best execut time achiev ration distribut n data item whatev order processor opt best execut time achiev integ distribut n data item whatev order processor note rat opt int opt may achiev two differ order processor take ration distribut achiev execut time rat opt round obtain integ solut follow round scheme describ section way obtain integ distribut execut time satisfi equat ip the proof equat howev integ solut execut time obvious least equal int opt also integ solut ration solut int opt least equal rat opt henc bound int ip execut time distribut obtain round up accord scheme section best ration solut processor order decreas order bandwidth connect root processor with except root processor order last comput commun function linear order polici even guarante experiment result hardwar environ experi consist comput ray path the full set seismic event year processor machin run globu use mpichg messag pass librari tabl show resourc use experi locat two geograph distant site processor standard pc intel piii amd athlon xp two mip processor sgi origin premis wherea processor taken sgi origin mip processor name leda end franc input data set locat pc name dinadan first site machin cpu type rate dinadan piii pellinor piii caseb xp sekhmet xp seven rk leda rk tabl processor use comput node experi tabl indic processor speed observ seri benchmark perform applic column indic number second need comput one ray the lower better associ rate simpli intuit indic processor speed the higher better invers normal respect rate arbitrarili chosen pentium iii sever ident processor present comput averag perform report network link throughput root processor dinadan node report tabl assum linear commun cost column indic time second need receiv one data element root processor machin dinadan caseb pellinor sekhmet seven merlin tabl measur network bandwidth sray sort descend order notic merlin processor though geograph close root processor smallest bandwidth connect mbit hub experi wherea other connect fastethernet switch result experiment result section evalu two aspect studi first experi compar unbalanc execut that origin program without sourc code modif predict best balanc execut second experi evalu execut perform respect two processor order polici bandwidth descend ascend order origin applic figur report perform result obtain origin program processor receiv equal amount data choos order pro cessor conclus given section order processor descend bandwidth surprisingli processor end time larg differ exhibit huge imbal earliest processor finish latest s time data caseb pellinor sekhmet seven seven leda leda leda leda leda leda leda leda merlin merlin dinadan total time comm time amount data figur origin program execut uniform data distribut loadbalanc applic second experi evalu loadbalanc strategi made assumpt comput commun cost function affin increas assumpt allow us use guarante heuri tic then simpli replac mpi_scatt call mpi_scatterv parameter distribut comput heurist larg number ray algorithm take minut run celeron ghz wherea heurist execut use pipmp instantan error rel optim solut less time data caseb pellinor sekhmet seven seven leda leda leda leda leda leda leda leda merlin merlin dinadan total time comm time amount data figur loadbalanc execut node sort descend bandwidth result experi present figur execut appear well balanc earliest latest finish time respect repres maximum differ finish time total du ration comparison perform origin applic gain signific total execut durat approxim half durat first experi order polici compar effect order polici result present figur obtain descend bandwidth order execut processor sort ascend bandwidth order present figur time data merlin merlin leda leda leda leda leda leda leda leda seven seven sekhmet pellinor caseb dinadan total time comm time amount data figur loadbalanc execut node sort ascend bandwidth load balanc execut accept maximum differ end time total durat the earliest latest processor finish s predict total durat longer s processor revers order though load slightli less balanc first experi becaus peak load sekhmet ex differ come idl time spent processor wait actual commun begin clearli appear figur surfac bottom area delimit dash line the stair effect bigger figur relat work mani research work address problem loadbalanc heterogen environ consid dynam loadbalanc repres dynam approach work strongli relat problem work librari allow programm produc per process load statist execut inform may use decid redistribut array one iter other howev dynam load evalu data redistribut make execut suffer overhead avoid static approach static approach use variou context rang data partit parallel video process find optim number processor linear algebra algorithm work closer our distribut loop heterogen processor balanc workload studi and particular case independ iter equival scatter oper how ever comput commun cost function affin loadbalanc solut first present heterogen processor network content occur then content taken account homogen processor onli framework appl project discuss loadbal iter solver make stencil comput suggest linear program techniqu comput distribut actual use less precis though simplest solut solv linear equat anoth way loadbal scatter oper implement follow masterslav paradigm gener framework studi static loadbalanc could serv purpos code rewrit case becom far complex conclus paper partial address problem adapt grid exist parallel applic design parallel comput studi static loadbalanc scatter oper assumpt made processor speed network link bandwidth present two solut comput loadbalanc di tribut gener exact algorithm heurist far effici simpl case affin comput commun time also propos polici processor order order decreas order network bandwidth root proce sor target applic experi show replac mpi_scatt mpi_scatterv call use clever distribut lead great perform improv low cost acknowledg part comput resourc use taken origin cine httpwwwcinesfr want thank let us access machin r optim schedul algorithm commun constrain parallel process schedul strategi masterslav task heterogen processor grid linear algebra algorithm heterogen cluster personn comput er parametr integ program globu metacomput infrastructur toolkit grid blueprint new comput infrastructur dynam loadbalanc dataparallel mpi program parallel seismic raytrac global earth mesh deliv network perform numer applic exploit hierarchi parallel comput network optim collect oper perfor manc mpi collect commun oper cluster wide area system mpi messag pass interfac standard pippiplib network weather servic distribut resourc perform forecast servic metacomput tr distribut process divis job commun startup cost grid magpi network weather servic mpistart schedul divis load parallel distribut system schedul strategi masterslav task heterogen processor grid optim schedul algorithm commun constrain parallel process sourc code transform strategi loadbal grid applic bandwidthcentr alloc independ task heterogen platform linear algebra algorithm heterogen cluster person comput exploit hierarchi parallel comput network optim collect oper perform mpi messagepass interfac standard schedul divis workload heterogen platform seismic raytrac earth mesh model variou parallel architectur divis load theori