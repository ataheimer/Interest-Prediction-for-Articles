t execut interprocedur slice a notion program slice origin introduc mark weiser use program debug automat parallel program integr softwar mainten slice program taken respect program point p variabl x slice consist statement program might affect valu x point p interprocedur slice slice entir program slice cross boundari procedur call weiser origin interproceduralsl algorithm produc imprecis slice execut program recent algorithm develop horwitz rep binkley produc precis smaller slice accur identifi statement might affect valu x point p slice howev execut extens algorithm produc precis execut interprocedur slice describ togeth proof correct new algorithm b introduct slice program respect program point p variabl x consist statement predic program might affect valu x point p concept origin discuss mark weiser use isol individu comput thread within program slice help programm understand complic code aid debug softwar mainten use automat parallel horwitz rep binkley identifi two differ relat slice problem import understand distinct the name come work support part summer research grant loyola colleg author address comput scienc depart loyola colleg north charl street baltimor maryland binkleycsloyolaedu version closur slice slice program respect program point p variabl x consist compon eg statement predic program might affect valu x point p version execut slice slice program respect program point p variabl x consist reduc program comput sequenc valu x p is point p behavior reduc program respect variabl x indistinguish origin program intraprocedur slicingsl within singl procedur slice extend across procedur boundariesa solut version provid solut version sinc reduc pro gram requir version obtain restrict origin program compon found solut version interprocedur slicinggener slice entir program slice extend across boundari procedur callsrestrict origin program compon found version may yield program syntact incorrect and thu certainli solut version reason behind phenomenon multipl call procedur possibl program element found algorithm version includ multipl call procedur differ subset procedur paramet weiser origin interprocedur slice algorithm provid solut version howev algorithm potenti includ larg portion program affect valu x p a fail account call context procedur slice includ one callsit procedur slice includ callsit procedur b callsit treat indivis com ponent slice includ one paramet must includ paramet horwitz et al comput interprocedur slice variabl x point p use system depend graph extend previou depend represent incorpor collect procedur with procedur call rather monolith program algorithm hereaft refer hrb algorithm identifi subgraph system depend graph whose compon potenti affect sequenc valu x p hrb algorithm provid solut version correctli account procedur call context treat call statement divis compon thu produc slice precis smaller determin weiser algorithm slice howev execut algorithm discuss paper produc execut slice precis produc weiser term precis mean algorithm correctli handl call context may select choos paramet call statement precis mean produc smallest possibl slice would requir solv unsolv dataflow problem consequ algorithm must make safe approxim although may includ unnecessari statement includ necessari statement hrb algorithm restrict present weiser algorithm slice taken respect program point p variabl x x defin use p execut slice use requir varieti applic exampl softwar mainten techniqu discuss algorithm reduc cost regress test present reli abl execut slice execut slice also use provid coars grain parallel sequenti program run separ slice differ processor final produc execut program permit execut behavior program slice compar provid brief summari system depend graph hrb slice algorithm section section first illustr slice produc hrb algorithm may correspond syntact correct program describ step necessari extend hrb algorithm produc precis execut interprocedur slice section prove new algorithm produc slice satisfi version final section provid brief summari hrb algorithm system depend graph hrb slice algorithm make use system depend graph sdg summar section sdg model languag follow properti the addit input output repres slight extens definit given complet system consist singl main procedur collect auxiliari procedur paramet pass valueresult input output model stream thu exampl statement print x treat assign statement sdg system s denot g contain collect procedur depend graph pdg one procedur system connect interprocedur control flowdepend edg procedur depend graph similar program depend graph pdg procedur p denot g p contain vertic repres compon p edg repres depend them except call statement singl vertex repres assign statement input statement output statement predic condit if whileloop statement addit distinguish vertex call entri vertex initialdefinit vertex variabl may use defin initialdefinit vertic repres assign valu variabl may use defin call statement repres use call vertex four kind paramet vertic repres paramet pass call side paramet pass repres actualin actualout ver tice control depend see below call vertex call procedur paramet pass term program depend graph associ graph repres singl procedur program term system depend graph chosen depend graph repres multiprocedur program similarli term systemrath program use mean program multipl procedur techniqu handl paramet pass refer deal alias discuss repres formalin formalout vertic control depend procedur entri vertex actualin formalin vertic includ everi paramet global variabl may use modifi result call formalout actualout vertic includ everi paramet global variabl may modifi result call interprocedur dataflow analysi use determin paramet global may use andor modifi result procedur call procedur depend graph includ three kind intraprocedur edg control depend edg data depend edg summari edg sourc control depend edg either entri vertex predic vertex call vertex edg label either true fals control depend edg vertex v vertex u mean execut whenev predic repres v evalu valu match label edg u program compon repres u eventu execut provid system termin normal edg entri call vertic alway label true vertic assum alway evalu true data depend edg vertex v vertex u mean system behavior might chang rel order compon repres v u revers two kind data depend edg flow depend edg deford depend edg flow depend edg connect vertex v repres assign variabl x vertex u repres use x reach assign deford edg run two vertic v u repres assign variabl x assign reach common use v lexic preced u ie v left u program abstract syntax tree chief difficulti interprocedur slice correctli account call context call procedur address callingcontext problem system depend graph includ summari edg edg repres transit depend due effect procedur call summari edg connect actualin vertex v actualout vertex u path sdg v u respect call context match call return connect procedur depend graph form sdg straightforward involv addit three kind interprocedur edg call edg connect call vertex correspond procedureentri vertex parameterin edg connect actualin vertex callsit correspond formalin vertex call procedur parameterout edg connect formalout vertex correspond actualout vertex call site procedur insert figur exampl figur show exampl system correspond sdg two way system may fail termin normal system contain nontermin loop fault occur divis zero hrb slice algorithm interprocedur slice defin reachabl problem use sdg intraprocedur slice defin reachabl problem use program depend graph slice obtain use approach similar obtain use weiser interproceduralsl method howev approach produc slice precis possibl consid path graph possibl execut path exampl path graph shown figur vertex procedur main label a sum vertex main label i z howev path correspond procedur add call first call main return second call main possibl valu first call main independ valu sum call vertex label a sum includ slice respect vertex label i z achiev precis interprocedur slice interprocedur slice sdg g respect set vertic v comput use two pass graph summari edg use algorithm permit move across call site without descend call procedur thu need keep track call context explicitli ensur legal execut path travers pass oper sdg travers edg find set vertic reach given set vertic along certain kind edg travers pass start vertic v goe backward from target sourc along flow edg control edg call edg summari edg parameterin edg along deford parameterout edg travers pass start vertic reach pass goe backward along flow edg control edg summari edg parameterout edg along deford call parameterin edg result interprocedur slice consist set vertic encount pass pass hrb algorithm find vertic interprocedur slice state figur insert figur exampl figur show hrb slice remaind paper use oper b b design individu pass hrb slice algorithm terminolog figur defin follow bg v reachingverticesg v deford parameterout bg v reachingverticesg v deford parameterin call execu slice section describ extens hrb algorithm produc precis execut interprocedur slice present extens first consid exampl hrb slice execut abl exampl discuss three step necessari produc execut system hrb slice section conclud discuss new slice algorithm complex nonexecut slice intraprocedur slice slice depend graph use produc execut program restrict origin system element whose vertic slice depend graph true hrb slice sdg exampl system produc restrict system shown figur statement whose vertic slice also shown figur syntact illeg contain paramet mismatch two call statement repres call procedur contain differ subset procedur paramet make system syntact legal simpli ad paramet c second call statement p leav semant unsatisfactori system abort divisionbyzero error second call p although divisionbyzero error could caught except handler import point system repres slice comput valu comput origin system exampl similar one figur replac divisionbyzero error infinit loop would prevent system repres slice comput valu origin system point beyond infinit loop presenc infiniteloop cannot caught except handler algorithm mean order produc execut slice compon take part comput paramet c must also includ slice insert figur appli exampl shown figur weiser interprocedur slice algorithm produc execut slice treat call statement indivis compon howev caus unwant program compon includ exampl caus consequ comput includ slice execut slice closer inspect hrb slice figur reveal two relat mismatch problem two callsit procedur may includ differ actualin vertic two callsit procedur may includ differ actualout vertic exampl slice shown figur contain actualin vertic paramet first callsit p one second callsit these vertic label x a y b a respect slice also mismatch actualout vertic first callsit actualout vertex first paramet second callsit actualout vertex second paramet section describ three step use produc execut slice hrb slice first step add vertic remov actualin vertex mismatch second step add vertic remov actualout vertic third step produc system result set vertic origin system describ first step formal notion mismatch follow definit definit vertex mismatch subset v vertic sdg g contain actualin vertex mismatch contain callsit procedur formalin vertex paramet procedur actualin vertex correspond formalin vertex callsit similar v contain actualout vertex mismatch contain callsit procedur formalout vertex paramet procedur actualout vertex correspond formalout vertex callsit note formal definit actualin vertex mismatch differ intuit definit given abov formal definit impli intuit definit hrb slice contain formalin vertex contain least one correspond actualin vertex consequ actualin vertex also correspond formalin vertex slice two callsit procedur includ differ actualin vertic true actualout vertic follow discuss let v hrb set vertic hrb slice system s first step algorithm remov actualin vertex mismatch v hrb actualin mismatch actualin vertex v v hrb then illustr c figur simpli ad v v hrb insuffici appropri initi paramet valu must comput actual paramet repres v order includ program compon necessari comput safe valu paramet vertic slice bg v ad v hrb b slice includ compon procedur p procedur call p compon procedur call p necessari compon procedur alreadi slice unless actualin mismatch thi process ad b slice repeat actualin vertex mismatch exist choic b slice oper would includ call site p eg b slice full slice avoid includ unwant callsit p b full slice includ callsit pro cedur may includ unwant call site contrast b slice includ none procedur callsit combin definit actualin vertex mismatch avoid includ unwant callsit second step make hrb slice execut remov actualout vertex mismatch miss actualout vertic repres deadcod addit slice necessari actualout mismatch remov simpli ad miss actualout vertic v hrb third step algorithm produc system set vertic v hrb system project statement repres v hrb word statement slice system statement repres vertic v hrb statement appear order nest level s complet algorithm produc execut interprocedur slice state figur exampl figur b slice taken respect actualin vertex x c includ statement c comput necessari actual paramet valu c insert figur complex complex algorithm executableslic present figur given term size input system s complex hrb algorithm use line executableslic analyz two part polynomi complex construct sdg linear complex slice g construct cost tc cs np v tc total number callsit system cs maximum number call site one procedur np number procedur system v maximum number vertic statement predic one procedur assum number paramet associ procedur bound constant complex slice g linear size sdg size sdg conserv bound np v sinc one pdg complex extens also linear complex b slice result line linear size sdg vertex current slice need consid complex ad vertic line complex project final system slice line also linear thi assum pointer vertex sdg origin line sourc text summari overal complex construct sdg polynomi size system complex produc execut interprocedur slice sdg linear size sdg proof correct definit definit verticesofslic system vertex set v verticesofslic s v refer vertic v line figur definit induc graph g system set vertic v inducedgraphg v graph v e e set edg g whose endpoint v for deford edg three point involv must v definit rollout rollout system produc exhaust inlin expans call statement produc program without procedur call expans step replac call statement new scope statement scope statement creat separ name space avoid variabl name conflict contain bodi call procedur parameter two list assign statement transferin statement transferout statement make explicit transfer valu outof name space scope one transferin statement everi paramet global variabl repres actualin vertex one transferout statement everi paramet global variabl repres actualout vertex presenc recurs rollout lead infinit program the mean infinit program defin least upper bound mean finit program approxim it use notat rollout denot program produc repeatedli expand call statement procedur main system s previou result theorem syntact correct theorem intraprocedur slice q slice singleprocedur program p taken respect vertex set v g q isomorph inducedgraph g p verticesofslic p v two system depend graph g g isomorph iff follow condit satisfi to map g vertex set g onto vertex set g everi v g v g v text to map h edg set g onto edg set g everi edg e type eg control edg label everi edg v u g h v g g isomorph tri prove g g isomorph breviti say v g v vertex e h e edg theorem slice theorem singl procedur program singleprocedur program includ induc edg g p program point q q p produc sequenc valu evalu input evalu p termin corollari theorem appli slice infinit program rolloutp proof techniqu discuss chapter demonstr theorem appli seri finit approxim rolloutp mean infinit program defin least upper bound mean finit approxim theorem extend infinit program produc rollout theorem rollout theorem rollout semanticspreserv transform sequenc valu produc occurr rollout sequenc valu produc call context s new result lemma induc graph isomorph lemma let slice executableslic s v g slice isomorph inducedgraph g s verticesofslic s v proof trivial transform procedur call statement procedur sequenc assign statement dataflow effect henc flow depend edg thi transform preserv semant procedur depend edg associ call includ assign statement tmp a actual paramet use call procedur syntact correct theorem intraprocedur slice impli exist isomorph f transform version slice s isomorph untransform version slice s isomorph composit f lemma slice lemma slice executable_slic s v g rolloutslic slice includ induc edg g rollout proof suffici prove g rolloutslic subgraph g rollout everi vertex x vertexsetg rolloutslic everi nondeford edg e edg set graph g rollout edg e exist edg set graph g rolloutslic point ensur slice g rollout never escap vertic g rolloutslic part follow induc graph isomorph lemma impli g slice isomorph subgraph g thu subgraph g relationship extend g rolloutslic g rollout vertex edg occurr g rolloutslic exist vertex edg g slice sequenc callsit expand sinc vertex edg sequenc call site g vertex edg occurr g rollout edg g slice respect g occurr g rolloutslic call statement expans produc copi procedur control data depend exist origin procedur prove assum x e occurr x y e respect vertex x g slice vertex edg e g proof two case a repres transferin statement induc graph isomorph lemma impli x verticesofslic s v repres transferin statement e intraprocedur edg g thu b slice g includ x verticesofslic s v also includ thi slice taken line figur x verticesofslic s v e inducedgraph g verticesofslic s v impli induc graph isomorph lemma e g slice final expand callsit slice whose expans lead creation x produc occurr edg connect e g rolloutslic b repres transferin statement repres transferin vertex x repres statement call procedur repres actual paramet call procedur unlik previou case b slice x includ b slice travers parameterin or call edg howev remov actualin vertex mismatch line figur ensur verticesofslic s v remaind proof ident proof case a theorem slice theorem let slice executable_slic s v program compon v slice produc sequenc valu evalu input termin proof first sinc g rolloutslic slice g rollout corollari slice theorem singl procedur program impli that compon rolloutslic rolloutslic rollout comput sequenc valu rolloutslic termin rollout termin rollout semant preserv transform sequenc comput slice slice termin termin must show compon c v call context c slice call context encount order execut slice s first bs c the first pass hrb slice travers call edg therefor slice includ call context c second sinc statement slice occur rel order s call context common slice encount order execut slice s paper present first algorithm interprocedur slice correctli account call context produc execut program algorithm extens hrb interprocedur slic ing fillsin paramet mismatch left hrb algorithm paper also prove slice captur subcomput origin program acknowledg comment art delcher three review editor led substanti improv exposit paper suggest jame lyle keith gallagh improv exampl r an overview ptran analysi system multiprocess minim commun synchron parallel dataflow pro gram an effici way find side effect procedur call alias vari abl a practic interprocedur data flow analysi algorithm multiprocedur program integr use semant differenc reduc cost regress test use program slice softwar mainten integr noninterf version program interprocedur slice use depend graph on number oper simultan execut fortranlik program result speedup depend graph compil optim experi slicingbas debug tool the semant program slice the semant program slice program integr the semant approach program slice reconstruct sequenti behavior parallel behavior project program slice tr experi slicingbas debug aid integr noninterf version program interprocedur slice use depend graph semant approach program slice use program slice softwar mainten multiprocedur program integr practic interprocedur data flow analysi algorithm depend graph compil optim effici way find side effect procedur call alias variabl semant program slice program integr ctr david binkley comput amorph program slice use depend graph proceed acm symposium appli comput p februari march san antonio texa unit state david binkley semant guid regress test cost reduct ieee transact softwar engin v n p august dave binkley sebastian danic tibor gyimthi mark harman ko kiss bogdan korel theoret foundat dynam program slice theoret comput scienc v n p august susan horwitz thoma rep david binkley interprocedur slice use depend graph acm sigplan notic v n april mark harman david binkley sebastian danic amorph program slice journal system softwar v n p octob anthoni m sloan jason holdsworth beyond tradit program slice acm sigsoft softwar engin note v n p may dave binkley sebastian danic tibor gyimthi mark harman ko kiss bogdan korel formalis relationship form program slice scienc comput program v n p octob baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v n march