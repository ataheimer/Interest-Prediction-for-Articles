t guarante fair servic persist depend task a introduc new schedul problem motiv applic area access flow control highspe wireless network instanc problem consist set persist task schedul repeatedli task demand schedul as often possibl explicit limit number task schedul concurr howev limit impos implicitli task may conflict cannot schedul simultan conflict present form conflict graph defin paramet quantifi fair regular given schedul proceed show lower bound paramet present fair effici schedul algorithm case conflict graph interv graph result present extend case perfect graph circulararc graph well b introduct paper consid new form schedul problem character two featur persist task task simpli go away schedul instead task must schedul innit mani time goal schedul everi task frequent possibl depend among task task con ict henc cannot schedul concur rentli con ict given con ict graph graph impos constraint set task may schedul concurr note constraint base simpli cardin set rather ident task within set extend summari ibm research divis t j watson research center yorktown height ny email famotzsbarmadhugwatsonibmcom z dept comput scienc columbia univers new york ny email mayercscolumbiaedu part work done author ibm t j watson research center partial support ibm graduat fellowship nsf grant ccr cise institut infrastructur grant cda consid problem alloc ie often task schedul regular ie evenli space length interv success schedul specic task present formal descript problem next discuss primari motiv immedi afterward denit present gener con ict graph applic bound algorithm special subclass name perfect graph interv graph circular arcgraph problem statement instanc schedul problem consist con ict graph g n vertic vertic g task schedul edg g dene pair task cannot schedul concurr output schedul algorithm innit sequenc subset vertic list task schedul time t notic t must independ set g form abov hard analyz run time schedul algorithm consid instead nite version problem use analyz run time input con ict graph g time t output independ set denot set task schedul time unit t object schedul algorithm achiev fair alloc regular schedul next give motiv describ context work see none exist measur appropri captur good schedul framework henc proceed introduc measur allow easier present result graph perfect induc subgraph size maximum cliqu equal chromat number cf graph interv graph circulararc graph vertic correspond interv line circl two vertic adjac correspond interv intersect cf a barnoy a mayer b schieber m sudan motiv session schedul highspe localarea net work metar recent highspe localarea ringnetwork allow spatial reus ie concurr access transmiss user session use minim intermedi buer packet basic oper metar approxim follow node send data node session establish sourc destin session typic last activ exclus use link rout henc session whose rout share least one link con ict con ict need regul break data sent session unit quota transmit accord schedul schedul ecient fair ecient mean total number quota transmit throughput maxim wherea fair mean throughput session maxim time success activ session minim larg buer sourc node avoid recogn access control network depend local con ict graph howev rm theoret basi algorithm framework propos now express problem schedul problem creat circulararc graph whose vertic session vertic adjac correspond path associ session intersect link time share wireless network indoor design wireless network base cellular architectur small cell size see eg cellular architectur compris two level stationari level mobil level stationari level consist xed base station interconnect backbon network mobil level consist mobil unit commun base station via wireless link geograph area within mobil unit commun particular base station refer cell neighbor cell overlap other thu ensur continu commun mobil unit commun among themselv well xed inform network base station backbon network continu commun crucial issu network mobil user cross boundari cell abl continu commun via new basest ensur thi basest period need transmit ident use wireless commun implement wireless link use infrar wave therefor two basest whose cell overlap con ict cannot transmit ident simulta neousli con ict regul timeshar scheme time share ecient fair ecient mean scheme accommod maxim number base station wherea fair mean time two consecut transmiss basest less time take user cross correspond cell problem pose graphschedul problem vertic graph basest edg indic base station overlap cell relationship past work schedul problem consid either persist task depend among task but both dealt befor task schedul persist task studi work baruah et al consid problem schedul set n task given arbitrari frequenc machin henc yield instanc problem con ict graph cliqu measur regular schedul problem introduc notion p fair schedul problem p fair proportionatefair time task absolut valu dierenc number time schedul f strictli less f frequenc task i provid algorithm comput p fair solut problem problem fail captur situat due two reason first would like constrain set task schedul concurr accord topolog con ict graph accord cardin moreov problem everi feasibl frequenc requir schedul p fair manner schedul problem show p fair schedul cannot alway achiev deal feasibl frequenc cannot schedul p fair manner dene weaker version regular depend properti captur work done base wellknown dine philoso pher paradigm see exampl set lynch rst explicitli consid respons time task goal success work make respons time node depend local neighborhood con ict graph see eg respons time term node degre adequ oneshot task captur requir task guarante fair servic persist depend task schedul regular fair fashion period time notat denit schedul innit sequenc independ set use notat si t repres schedul si lim inf t ff t g refer f frequenc ith task schedul s definit vector frequenc feasibl exist schedul frequenc ith task schedul least f definit schedul realiz vector f frequenc ith task schedul least f schedul capproxim vector frequenc f frequenc ith task schedul least f c measur fair fair determin via partial order dene set frequenc vector definit given two frequenc vector f less fair exist index j threshold f f j f g j g f definit vector frequenc f maxmin fair feasibl vector g less formal maxmin fair frequenc vector one cannot increas frequenc task expens frequent schedul task mean goal let task resourc long take resourc away task better o ie resourc task i measur regular here provid two measur one evalu schedul reg ular call measur respons time drift given schedul s respons time task i denot r largest interv time ith task wait success schedul precis time t number expect occurr task express f t note r larger f possibl that period time schedul allow task drift away expect number occurr order captur thi introduc second measur regular schedul denot drift task i indic much schedul allow task drift away expect number schedul unit base frequenc note schedul achiev drift pfair dene final schedul achiev strongest form regular task schedul everi f timeunit except rst appear henc say schedul rigid task exist start point task schedul exactli time unit result section motiv denit maxmin fair show sever properti first provid equival altern denit feasibl show decid feasibl frequenc vector comput prove everi graph uniqu maxmin fair frequenc vector then show task even weaklyapproxim maxmin fair frequenc gener graph nphard mention mani practic applic problem aris simpler network buse ring ie interv con ict graph circulararc con ict graph case perfect graph and henc interv graph describ ecient algorithm comput maxmin fair frequenc prove period schedul realiz frequenc satis exist interv graph n rest result deal problem nding regular schedul under mention measur realiz feasibl frequenc vector section show exist interv graph p fair schedul realiz maxmin fair frequenc section introduc algorithm comput schedul realiz given feasibl frequenc interv graph schedul comput algorithm achiev responsetim df e drift o log slight modic algorithm yield schedul approxim given frequenc advantag schedul a barnoy a mayer b schieber m sudan achiev bound drift henc bound df e respons time section present algorithm comput schedul approxim given feasibl frequenc interv graph advantag rigid algorithm run polynomi time section show transform algorithm comput schedul capproxim given feasibl frequenc interv graph algorithm comput schedul capproxim given feasibl frequenc circulararc graph the responsetim drift result schedul doubl well final section list number open problem sketch addit properti requir obtain solut actual net work due space constraint proof either omit sketch extend summari alloc denit maxmin fair alloc base denit use jae bertseka gallag dier one key ingredi name notion feasibl studi elementari properti denit section particular show denit guarante uniqu maxmin fair frequenc vector everi con ict graph also show hard comput frequenc vector gener graph howev special case perfect graph notion turn denit consid tradit way measur throughput fair also base partial order use denit primari dierenc denit denit feasibl bertseka gallag use denit call cliqu feasibl dene follow vector frequenc f feasibl con ict graph g cliqu c graph g notion maxmin fair bertseka gallag exactli notion feasibl replac cliqu feasibl denit use captur notion fraction alloc resourc bandwidth commun network howev applic need captur notion integr alloc resourc henc denit suce purpos easi see everi frequenc vector feasibl sens cliqu feasibl howev convers true consid case con ict graph vecycl graph vector cliqu feasibl schedul achiev frequenc altern denit feasibl given con ict graph g let denot famili independ set g i let i denot characterist vector proposit vector frequenc f feasibl exist weight f g ii ii f main impact assert show space feasibl frequenc well behav ie close connect compact space immedi show determin whether frequenc vector feasibl comput task a fact may easi see earlier denit use denit see follow connect proposit given con ict graph g notion feasibl cliqu feasibl equival g perfect proof sketch proof follow directli wellknown polyhedr properti perfect graph see notat knuth space feasibl vector polytop stabg space cliquefeas vector polytop qstabg result follow theorem page say graph g perfect uniqu comput maxmin fair frequenc full paper prove follow theorem theorem exist uniqu maxmin fair frequenc vector now turn issu comput maxmin fair frequenc know exact complex comput maxmin fair frequenc seem hard task gen eral particular consid problem comput smallest frequenc assign vertex maxmin alloc show follow theorem exist given con ict graph n vertic approxim particular know decid whether frequenc vector feasibl np conp guarante fair servic persist depend task smallest frequenc assign vertex maxmin fair alloc within factor n nphard proof sketch relat comput maxmin fair frequenc gener graph comput fraction chromat number graph fraction chromat number problem cf dene follow independ set graph assign weight w minim quantiti w subject constraint everi vertex v graph quantiti iv w least quantiti w call fraction chromat number graph observ w s forc integr fraction chromat number chromat number graph follow claim show relationship fraction chromat number assign feasibl frequenc let f feasibl assign frequenc vertic graph g upper bound fraction chromat number graph convers k fraction chromat number graph schedul set frequenc everi vertex k feasibl claim combin hard comput fraction chromat number suf ce show nphard decid whether given assign frequenc feasibl given graph show claim also impli hard approxim smallest frequenc maxmin fair frequenc vector inspect lund yannakaki construct bit close construct yield graph everi vertex particip cliqu size k decid fraction chromat number k kn nphard former case maxmin fair frequenc assign k everi vertex latter case least vertex frequenc smaller kn thu impli approxim smallest frequenc maxmin fair frequenc within factor n nphard maxmin fair frequenc perfect graph turn perfect graph show comput polynomi time maxmin fair frequenc class graph give bound period schedul realiz frequenc main focu subsequ section interv graph give algorithm bound rst term figur interv graph n subclass show gener result perfect graph start describ algorithm comput maxmin fair frequenc interv graph know cliquefeas equal feasibl by proposit use adapt algorithm let c collect maxim cliqu interv graph notic c n element comput polynomi time cliqu c c algorithm maintain residu capac initi vertex algorithm associ label assignedunassign vertic initi unassign divid residu capac cliqu number unassign vertic cliqu yield rel residu capac iter consid cliqu smallest current rel residu capac assign cliqu unassign vertic capac frequenc vertex cliqu mark assign subtract frequenc residu capac everi cliqu contain it repeat process till everi vertex assign frequenc hard see algorithm correctli comput maxmin fair frequenc polynomi time use behavior prove tight bound period schedul interv graph follow theorem establish bound see also figur theorem let f frequenc maxmin fair schedul interv graph g rel prime then period schedul furthermor exist interv graph n a barnoy a mayer b schieber m sudan clear algorithm work graph cliqu feasibl determin feasibl ie perfect graph howev algorithm remain comput ecient still theorem directli extend class perfect graph use fact describ polynomialtim algorithm assign maxmin fair frequenc perfect graph algorithm algorithm maintain label procedur assignedunassign algorithm phase algorithm start set assign frequenc tri nd largest f unassign vertic assign frequenc f comput f polynomi time algorithm use fact decid given set frequenc feasibl reduc task comput size largest weight cliqu graph weight vertic latter task well known comput polynomialtim perfect graph use decis procedur algorithm perform binari search nd largest achiev f the binari search rene due theorem found largest f algorithm nd set vertic satur f follow let small number instanc sucient rais one time frequenc unassign vertex f maintain unassign frequenc f obtain set frequenc feasibl mark vertex assign frequenc assign f algorithm repeat phase vertic assign frequenc nonexist pfair alloc show p fair schedul realiz maxmin fair frequenc need exist everi interv graph theorem exist interv graph g pfair schedul realiz maxmin frequenc assign order prove theorem construct graph g follow choos paramet k everi permut element dene interv graph g show necessari condit must satisfi g pfair schedul lastli show exist permut element satisfi condit given permut k element g consist k interv figur graph g maxmin frequenc assign g follow task bi frequenc k task ai frequenc task ci frequenc ik see figur observ properti pfair schedul task g i time period k ii schedul entir speci schedul task bi iii schedul permut k element i time unit bi schedul see kind permut constitut pfair schedul g dene notion permut fair anoth permut definit permut fair permut condit cond ij dene follow permut pfair schedul g fair ident permut permut permut element full paper show permut fair ident realiz frequenc exactli section rst show construct schedul realiz feasibl set frequenc and henc particular maxmin frequenc exactli interv graph prove correct demonstr bound df e respons time interv i proceed introduc potenti function use yield bound on drift everi interv also prove feasibl frequenc form drift schedul bound thu wait time bound use properti give algorithm guarante fair servic persist depend task comput schedul approxim feasibl set frequenc high regular input algorithm unit time con ict graph g interv graph equival set interv unit interv xcoordin everi interv frequenc f follow constraint simplic assum constraint frequenc met equal g output algorithm independ set set task schedul time schedul s given fi g realiz frequenc f algorithm recurs let denot number time task appear time unit ie algorithm log level recurs recal log on maxmin fair frequenc rst level decid occurr task half period is task decid mani occurr appear rst half period mani second half yield problem recurs natur two halv order nd schedul time t suce solv problem recurs half contain t note case odd one halv longer other clearli task even number occurr would appear number time half order minim drift problem task odd number occurr clearli half least bs c occurr addit occurr assign half way result subproblem would still feasibl main diculti assign solv procedur sweep procedur sweep procedur comput assign addit occurr task odd number occurr input procedur set interv with odd s restrict cliqu result interv graph even size later show overcom restrict output partit interv two set cliqu equal divid among set done sweep along xcoordin interv sweep everi interv assign variabl end set ie rst half period second half period suppos sweep point x say interv activ sweep point x x assign rule follow interv start x current number activ interv even new variabl assign i unpair current number activ interv odd pair current unpair interv j assign negat j s variabl thu matter valu later assign variabl j end opposit halv interv end x current number activ interv even noth done current number activ interv odd pair j pair current unpair interv k also j s variabl match negat k s variabl ensur j k put opposit halv equival k put halv unpair assign arbitrarili s variabl oper ensur whenev number activ interv even exactli half interv assign half assign proven later recal assum size cliqu even let us show overcom restrict need follow simpl lemma c x set input interv with odd even s contain x c x refer cliqu lemma period even oddgj even everi cliqu c lemma impli even size cliqu input procedur sweep inde even odd dummi interv n extend interv exactli one occurr ad set call sweep again lemma sure modi set size cliqu even would increas period one addit time unit allot dummi interv thu ignor note produc schedul time follow recurs call includ period sinc log call time take produc schedul polynomi n maxmin fair frequenc a barnoy a mayer b schieber m sudan lemma algorithm produc correct schedul everi feasibl set frequenc lemma set frequenc form drift bound henc respons time bound df e proof sinc algorithm alway divid even equal halv follow invari maintain recurs level whenev even also note thu express f k now follow algorithm easili shown least one occurr task time interv size henc c p fair lemma respons time everi interv bound df e proof proof base lemma lemma clearli impli case frequenc power two moreov case frequenc power two virtual partit task two task frequenc p r respect f power two r p then schedul task frequenc p drift impli respons time dp e df e remark shown bound lemma tight algorithm summar result section follow theorem theorem given arbitrari interv graph con ict graph algorithm exactli realiz feasibl frequencyvector guarante r bound drift sinc algorithm olog level recurs level may increas drift one clearli maximum drift bound olog section prove decreas maximum drift o log xed n number task theorem impli worst case drift maxmin fair frequenc bound on method get better drift base follow observ recurs step algorithm two set task produc set place dierent half timeinterv current consid howev free choos set goe half use degre freedom decreas drift make present clearer assum power two time unit consid subinterv size t j start time end rst j recurs level alreadi xed number occurr task given number drift time xed similarli drift r time r also xed next recurs level split occurr assign interv thu xing drift dm time optim would like drift next recurs level time unit weight averag drift r word let would like drift time r particular would like drift d drift achiev occurr interv split equal howev case odd number occurr split drift d depend decis half interv put extra occurr note weight averag drift point chang accordingli is new dm d weight averag r d x weight averag t r r d x consid two set task assign two subinterv of size level k recurs possibl two assign comput potenti base result drift time given possibl let dtm i k denot result drift ith task k recurs level dene potenti k level xed even constant choos possibl lowest potenti theorem use polici describ maximum drift bound o log n xed realiz frequenc rigidli section show construct schedul approxim feasibl frequencyvector rigid fashion interv graph reduc rigid schedul problem dynam storag alloc problem dynam storag alloc guarante fair servic persist depend task problem dene follow given object store comput memori object two paramet i size term number cell need store it ii time interv store object must store adjac cell problem nd minim size memori accommod given time object need store time dynam storag alloc problem special case multicolor problem interv graph dene multicolor weight graph g weight function v v size f v wv v u e f v f multicolor problem nd multicolor minim number color problem known nphard problem two interest special case multicolor problem color vertex either must adjac must spread well among color call rst case amc problem second case cmc problem formal solut amc f k wherea solut cmc use color f divid ii x hard verifi interv graph amc problem equival dynam storag alloc problem describ abov simpli associ object vertex graph give weight equal number cell requir put edg two vertic time interv inter sect color assign vertex interpret cell object store hand cmc problem correspond rigid schedul problem follow first replac frequenc fv weight wv let now assum output cmc problem use color let color v fx x k g interpret follow v schedul time x dicult verifi inde solut rigid schedul problem although dynam storag alloc problem special case multicolor problem still known nphard problem similar reason rigid schedul problem also nphard therefor look approxim algorithm follow present approxim algorithm produc rigid schedul approxim given frequenc consid instanc amc cmc problem input weight power two definit solut instanc amc align contigu kierstead present algorithm amc approxim factor care inspect algorithm show produc solut align contigu instanc weight power two show translat solut instanc amc problem align contigu solut instanc cmc problem input weight kbit number whose binari represent invers binari represent x lemma g consid instanc cmc problem input weight power two appli solut kierstead solv amc instanc input solut align contigu use color number color need optim color let smallest power greater follow appli transform lemma output solut amc yield solut cmc color turn yield approxim factor rigid schedul problem sinc wvt fv theorem algorithm comput rigid schedul approxim feasibl frequencyvector interv graph circulararc graph section show transform algorithm comput schedul capproxim given feasibl frequencyvector interv graph algorithm comput schedul capproxim given feasibl frequenc circulararc graph a barnoy a mayer b schieber m sudan f feasibl frequencyvector circulararc graph g find maximum cliqu c g interv graph frequencyvector result restrict f vertic g c respect note feasibl g c respect step use a nd schedul c g g c respect step interleav clearli result schedul capproxim f circulararc graph g futur research mani open problem remain exact complex comput maxmin fair frequenc assign gener graph known character assign easi comput schedul algorithm paper use inher linear interv circulararc graph would interest nd schedul algorithm wider class perfect graph algorithm interv graph realiz frequenc exactli exhibit consider gap drift clear direct gap close algorithm assum central schedul make decis theoret practic point view import design schedul algorithm work realist environ highspe localarea network wireless network as mention section distinguish requir environ includ distribut implement via local signal scheme con ict graph may chang time restrict space per node size signal perform measur gener set howev remain same rst step toward algorithm recent carri mayer ofek yung acknowledg would like thank coppersmith moti yung mani use discuss r dine philosoph algorithm polynomi respons time notion fair resourc alloc data network distribut resourc alloc algorithm local fair algorithm gigabit lansman spatial reus drink philosoph problem hierarch order sequenti process comput intract algorithm graph theori perfect graph cellular packet communica tion bottleneck flow control polynomi time approxim algorithm dynam storag alloc sandwich theorem hard approxim minim problem fast alloc nearbi resourc distribut system distribut schedul algorithm fair minimum delay matrix character circulararc graph tr ctr sanjoy k baruah shunshii lin pfair schedul gener pinwheel task system ieee transact comput v n p juli francesco lo presti joint congest control rout media access control optim via dual decomposit ad hoc wireless network proceed th acm intern symposium model analysi simul wireless mobil system octob montral quebec canada sandi irani vitu leung schedul conflict bipartit interv graph journal schedul v n p mayjun ami litman shiri moranschein distribut smooth schedul proceed seventeenth annual acm symposium parallel algorithm architectur juli la vega nevada usa traci kimbrel baruch schieber maxim sviridenko minim migrat fair multiprocessor schedul persist task proceed fifteenth annual acmsiam symposium discret algorithm januari new orlean louisiana traci kimbrel baruch schieber maxim sviridenko minim migrat fair multiprocessor schedul persist task journal schedul v n p august violeta gambiroza edward w knightli congest control csmabas network inconsist channel state proceed nd annual intern workshop wireless internet pe august boston massachusett