t parallel increment graph partit a abstractpartit graph equal larg group node minim number edg differ group extrem import problem parallel comput instanc effici parallel sever scientif engin applic requir partit data task among processor comput load node roughli same commun minim obtain exact solut comput intract sinc graph partit npcompletefor larg class irregular adapt data parallel applic such adapt graph comput structur chang one phase anoth increment fashion increment graphpartit problem partit graph need updat graph chang time small number node edg may ad delet given instantin paper use linear programmingbas method solv increment graphpartit problem step use method inher parallel henc approach easili parallel use initi solut graph partit deriv recurs spectral bisectionbas method method achiev repartit consider lower cost obtain appli recurs spectral bisect further qualiti partit achiev compar achiev appli recurs spectral bisect increment graph scratch b introduct graph partit wellknown problem fast solut extrem import parallel comput research area circuit partit vlsi design instanc parallel mani scientif engin problem requir partit data among processor fashion comput load node balanc commun minim graphpartit problem node graph repres comput task edg describ commun task partit correspond one processor optim partit would allow optim parallel comput load balanc variou processor minim commun time mani applic comput graph deriv runtim requir graph partit also done parallel sinc graph partit npcomplet obtain suboptim solut quickli desir often satisfactori larg class irregular adapt data parallel applic adapt mesh comput structur chang one phase anoth increment fashion increment graphpartit problem partit graph need updat graph chang time small number node edg may ad delet given instant solut previou graphpartit problem util partit updat graph time requir much less time requir reappli partit algorithm entir updat graph graph repartit may lead imbal time requir comput node caus consider deterior overal perform mani problem graph may modifi everi iter albeit increment remap must lower cost rel comput cost execut iter comput structur remain fix unless increment partit perform parallel may becom bottleneck sever suboptim method suggest find good solut graphpartit problem mani applic comput graph vertic correspond two threedimension coordin interact comput limit vertic physic proxim inform exploit achiev partit rel quickli cluster physic proxim point two three dimens import heurist includ recurs coordin bisect inerti bisect scatter decomposit index base partition number method use explicit graph inform achiev partit import heurist includ simul anneal mean field anneal recurs spectral bisect recurs spectral multisect mincutbas method genet algorithm sinc method use explicit graph inform wider applic produc better qualiti partit paper develop method use explicit graph inform perform increment graph partit use recurs spectral bisect regard one bestknown method graph partit method partit new graph consider lower cost qualiti partit achiev close achiev appli recurs spectral bisect scratch further algorithm inher parallel rest paper outlin follow section defin increment graphpartit problem section describ linear programmingbas increment graph partit section describ multilevel approach solv linear programmingbas increment graph partit experiment result method sampl mesh describ section conclus given section problem definit consid graph repres set vertic e repres set undirect edg number vertic given number edg given jej graphpartit problem defin assign scheme map vertic partit denot bq set vertic assign partit q ie qg weight w correspond comput cost or weight vertex v cost edg given amount interact vertic v v weight everi partit defin cost outgo edg partit repres total amount commun cost given would like make assign time spent everi node minim ie repres ratio cost unit computationcost unit commun machin assum comput load nearli balanc w w second term need minim literatur p cq also use repres commun assum solut avail graph gv e use one mani avail method literatur eg map function avail commun cost close optim let g increment graph gv e ie vertic ad vertic delet similarli ie edg ad delet would like find new map new partit load balanc possibl commun cost minim method describ paper assum g suffici similar gv e achiev ie number vertic edg addeddelet small fraction origin number vertic edg increment partit section formul increment graph partit term linear program highlevel overview four phase increment graphpartit algorithm shown figur notat order let p number partit repres set vertic partit i repres averag load partit four step describ detail follow section assign new vertic one partit given step layer partit find closest partit vertex given l step formul linear program problem base map step balanc load ie modifi minim total number chang step refin map step reduc commun cost figur differ step use increment graphpartit algorithm assign initi partit new node first step algorithm assign initi partit node new graph given simpl method initi v given follow let vertic dv x shortest distanc graph g exampl consid paper assum g connect case sever strategi use connect graph use instead g calcul v connect new node connect old node cluster togeth into potenti disjoint cluster assign partit least number vertic rest paper assum v calcul use definit although strategi develop paper are gener independ map further eas present assum edg vertex weight unit valu algorithm easili modifi case figur a describ map vertic graph figur b describ map addit vertic use strategi layer partit map would ordinarili gener partit unequ size would like move vertic one partit anoth achiev load balanc keep commun cost small possibl achiev make sure vertic transfer two partit close boundari two partit assign vertex given partit differ partit close tie broken arbitrarili b figur a initi graph b increment graph new vertic shown x min shortest distanc graph v x simpl algorithm perform layer given figur assum graph connect let number vertic partit move partit j exampl case figur label vertic given figur label vertex partit correspond fact vertex belong set contribut ff load balanc number vertic move partit partit j achiev load balanc sever way achiev load balanc howev sinc one goal minim commun cost would like minim l ij would correspond minim amount vertex movement or deform origin partit thu loadbalanc step formal defin follow linear program problem minim x subject constraint correspond load balanc condit formul base assumpt chang origin graph small initi partit well balanc henc move boundari small amount give balanc partit low commun cost f mapvj repres map vertex j g repres j th element local adjac list partit i g repres start address vertex j local adjac list partit i g repres set vertic partit distanc k node partit j f neighbor repres set partit common boundari partit i g partit vertex count l add vj tag f level repeat vertex vj klevel l gamma xadj vj xadj count add vj tmp level vertex vj tmp add vj taglevel f count klevel figur layer algorithm b figur label node graph closest outsid partit a microscop view layer graph near boundari three partit b layer graph figur b edg shown constraint l constraint gammal gammal solut use simplex method l valu zero figur linear program formul solut base map graph figur b use label inform figur b sever approach solv linear program problem decid use simplex method shown work well practic easili parallel simplex formul exampl figur given figur correspond solut l l new partit given figur initi partit increment partit figur new partit graph figur b load balanc step set constraint may feasibl solut one approach relax constraint l ij constraint clearli would achiev load balanc may lead major modif map anoth approach replac constraint assum would achiev load balanc one step sever step appli so feasibl solut cannot found reason valu delta within upper bound c would better start partit scratch solv problem ad fraction node given time ie solv problem multipl stage typic case aris new node correspond partit amount increment chang greater size one partit refin partit formul previou section achiev load balanc tri explicitli reduc number crossedg minim term constraint indirectli keep crossedg minimum assumpt initi partit good section describ linear programmingbas strategi reduc number crossedg still maintain load balanc achiev find vertic partit boundari partit j cost edg vertic j larger cost edg local vertic figur ie total cost crossedg decreas move vertex partit j affect load use dens version simplex algorithm total time potenti reduc use spars represent local nonloc edg partit nonloc edg partit a figur choos vertic refin a microscop view vertex move partit p p j reduc number cross edg b set vertic properti partit figur balanc follow linear program formul given move vertic keep load balanc map vertex loadbalanc step let outk repres number edg vertex k partit k connect partit jj k let repres number vertic vertex k connect partit k let b ij repres number vertic partit outgo edg partit j local edg would like maxim number vertic move move vertex increas cost crossedg inequ definit chang strict inequ leav equal howev sinc includ vertic number point move larger becaus vertic move satisfi load balanc constraint without affect number crossedg refin problem pose follow linear program problem maxim x refin step appli iter effect gain movement vertic small step inequ l ij need replac strict inequ l ij constraint l load balanc constraint gammal gammal solut use simplex method l figur formul refin step use linear program solut otherwis vertic equal number local nonloc vertic may move boundari without reduc total cost simplex formul exampl figur given figur new partit refin given figur increment partit refin partit figur new partit graph figur refin step time complex let number vertic number edg graph given v e respect time layer ov e let number partit p number edg partit graph node graph repres partit edg super graph present whenev cross edg node one partit node anoth partit r number constraint variabl gener linear program op r or respect thu time requir linear program op rr assum r op reduc number iter requir linear program problem depend use fp denot number iter thu time requir linear program op fp give total time repartit oe parallel time consider difficult analyz analyz complex neglect setup overhead coarsegrain machin parallel time complex layer step depend maximum number edg assign processor could approxim oep level assum chang graph increment graph much larger number processor parallel linear program requir broadcast length proport op assum broadcast size p requir bp amount time parallel machin p processor time complex approxim o e multilevel approach small graph larg fraction total time spent algorithm describ previou section linear program formul solut sinc time requir one iter linear program formul proport squar number partit substanti reduc use multilevel approach consid partit increment graph partit complet two stage partit graph super partit partit super partit partit each clearli two stage use advantag algorithm time requir appli linear program stage would much less time requir linear program use one stage due substanti reduct number variabl well constraint directli depend number partit howev map initi layer need perform scratch level thu decreas cost linear program lead potenti increas time spent layer multilevel algorithm requir combin partit origin graph super partit implement recurs spectral bisect use ab initio partit algorithm due recurs properti creat natur hierarchi partit figur show twolevel hierarchi partit linear programmingbas algorithm appli repartit graph adapt sever time possibl partit correspond lower level subtre small number boundari edg them sinc multilevel approach result repartit small number partit lower level linear program formul may produc infeas solut lower level problem partial address reconfigur partit hierarchi simpl algorithm use achiev reconfigur tri group proxim partit form multilevel hierarchi level tri combin two partit one larger parti tion thu number partit reduc factor two everi level use procedur find uniqu neighborp figur find uniqu neighbor partit number crossedg larg possibl achiev appli simpl heurist figur use list partit random order each processor differ order one processor success gener feasibl solut tie broken base weight processor number result merg broadcast processor case none figur twolevel hierarchi partit partit g repres number edg partit partit j g global success fals trial not global success trial processor list partit random order weight find pairsuccessmarkweight edg global success global orsuccess not global success fix pairsuccessmarkweight edg global success global orsuccess global success winner find winnersuccessweight f return processor number maximum weight g f processor winner broadcast mark processor g returnglob success els trial trial figur reconstruct algorithm find pairsuccess markw eight edg success true find neighbor k j markk k exist weight els success fals fix pairsuccess markw eight edg success true j p success x exist markx x neighbor l neighbor markx l markl x weight els success fals els figur high level descript procedur use find uniqu neighbor processor success anoth heurist figur appli tri modifi partial assign made heurist find neighbor partit none processor abl find feasibl solut processor start anoth random solut step iter constant number l time figur show partit reconfigur simpl exampl reconfigur algorithm fail multilevel algorithm appli lower number level or one level random_list random_list random_list random_list a b a d e f figur work exampl reconstruct algorithm a graph partit b partit c adjac list d random order list e partit rearrang f processor broadcast result processor g hierarchi reconfigur practic found algorithm never requir one iter time complex follow provid analysi assum reconfigur requir complex reconfigur discuss later multilevel approach assum level number partit done equal given k thu number level gener log k p time requir layer increas oelog k p number linear program formul given o p thu total time linear program given o p fk total time requir repartit given oelog k p valu k would minim sum cost layer cost linear program formul choic k also depend qualiti partit achiev increas number layer would gener deterior effect qualiti partit thu valu k chosen base tradeoff howev analysi suggest reason size graph layer time would domin total time sinc layer time bound oelogp time consider lower appli spectral bisectionbas method scratch parallel time consider difficult analyz parallel time complex layer step depend maximum number edg processor level approxim level assum chang graph increment graph much larger number processor discuss earlier parallel linear program requir broadcast length proport ok small valu k linear program formul execut one processor els commun domin total time thu parallel time proport o e analysi take reconfigur account cost reconfigur requir okd time parallel everi iter averag number partit everi partit connect total time okd log p reconfigur time domin total time requir linear program algorithm experiment result section present experiment result linear programmingbas increment partit method present previou section use term increment graph partition igp refer linear program base algorithm experi conduct node cm avail npac syracus univers mesh use two set adapt mesh experi mesh gener use dime environ initi mesh set given figur a increment mesh gener make refin local area initi mesh mesh repres sequenc refin local area number node mesh respect partit initi mesh node determin use recurs spectral bisect partit use algorithm igp determin partit increment mesh node repartit next set refin node respect achiev use partit obtain use igp previou mesh sequenc mesh use test whether igp suitabl repartit mesh sever refin figur test graph set a irregular graph node edg b graph a addit node c graph b addit node d graph c addit node graph d addit node figur test graph set b a mesh node edg b mesh addit node c mesh addit node d mesh addit node e mesh result initi graph figur a total cutset max cutset min cutset figur b partition time timep total cutset max cutset min cutset spectral bisect igp igp refin figur c partition time timep total cutset max cutset min cutset spectral bisect igp igp refin figur d partition time timep total cutset max cutset min cutset spectral bisect igp igp refin partition time timep total cutset max cutset min cutset spectral bisect igp igp refin time unit second p parallel time node cm time node cm figur increment graph partit use linear program comparison spectral bisect scratch mesh figur set a next data set set b correspond highli irregular mesh node edg data set gener studi effect differ amount new data ad origin mesh figur b c d e correspond mesh addit node mesh figur result onelevel igp set mesh present figur result show that even multipl refin qualiti partit achiev compar achiev recurs spectral bisect scratch thu method use repartit sever stage time requir repartit half time requir partit use rsb algorithm provid speedup around node cm time spent algorithm solut linear program formul use simplex method number variabl constraint gener onelevel linear program algorithm loadbalanc step mesh figur partit respect multilevel approach linear program formul subproblem given level initi graph figur a total cutset max cutset min cutset b initi assign igp use partit figur a partition time timep total cutset max cutset min cutset spectral bisect igp refin igp refin c initi assign igp use partit figur a partition time timep total cutset max cutset min cutset spectral bisect igp refin igp refin d initi assign igp use partit figur a partition time timep total cutset max cutset min cutset spectral bisect igp refin igp refin initi assign igp use partit figur a partition time timep total cutset max cutset min cutset spectral bisect igp refin igp refin time unit second p parallel time node cm time node cm figur increment graph partit use linear program comparison spectral bisect scratch mesh figur set b solv assign subset processor tabl give time requir differ algorithm qualiti partit achiev differ number level theta theta base repartit impli repartit perform three stage decomposit partit respect result present figur solut qualiti multilevel algorithm show insignific deterior number cross edg consider reduct total time partit achiev algorithm igp set b mesh figur use partit mesh figur a given figur number stage requir by choos appropri valu delta describ section respect worth note that although load imbal creat addit node sever qualiti partit achiev case close appli recurs spectral bisect scratch further sequenti time least order magnitud better recurs spectral bisect cm implement improv time requir factor time requir repartit figur b figur c close requir mesh figur time mesh figur d e larger use multipl stage time reduc use multilevel approach figur howev time reduct rel small from second second twolevel approach increas number level increas total time cost layer increas time reduct last mesh node larg due reduct number stage use multilevel algorithm section almost case speedup achiev node cm figur figur show detail time differ step mesh figur d mesh figur b sequenti parallel version repartit algorithm respect clearli time spent reconfigur neglig compar total execut time also time spent linear program multilevel algorithm much less singlelevel algorithm result also show time linear program remain approxim mesh time layer proport larger multilevel parallel algorithm time layer compar time spent linear program smaller mesh domin time larger mesh sinc layer term olevel e result support complex analysi previou section time spent reconfigur neglig compar total time conclus paper present novel linear programmingbas formul solv increment graphpartit problem qualiti partit produc method close achiev appli best partit method scratch further time need small fraction latter algorithm inher parallel believ method describ paper critic import parallel adapt increment problem number stage chosen trial error determin load imbal b figur partit use rsb b partit use igp start use igp start d partit use igp start use igp start graph level descript time timep total cutset time unit second cm figur increment multilevel graph partit use linear program comparison singlelevel graph partit sequenc graph figur graph level descript time timep total cutset time unit second cm figur increment multilevel graph partit use linear program comparison singlelevel graph partit sequenc mesh figur figur d level reconfigur layer linear program total figur b level reconfigur layer linear program total time second balanc r refin total figur time requir differ step sequenti repartit algorithm figur d level reconfigur layer linear program data movement total figur b level reconfigur layer linear program data movement total time second balanc r refin total figur time requir differ step parallel repartit algorithm on node cm r solv problem concurr processor softwar support irregular loos synchron problem heurist approach task alloc parallel comput load balanc loos synchron problem neural network solv problem concurr processor graphic approach load balanc spars matrix vector multipl hypercub improv spectral graph partit algorithm map parallel comput multidimension spectral load balanc genet algorithm graph partit increment graph partit physic optim algorithm map data distributedmemori multi processor solv finit element equat current comput fast map remap algorithm irregular adapt problem partit spars matric eigenvector graph partit unstructur mesh problem parallel process dime distribut irregular mesh enviro perform dynam loadbalanc algorithm unstructur mesh calcula tion tr ctr sungho woo sungbong yang improv network cluster method ioeffici queri process proceed th acm intern symposium advanc geograph inform system p novemb washington dc unit state mark j clement glenn m judd bryan s mors j kelli flanagan perform surfac predict wanbas cluster journal supercomput v n p may donlin yang yehch chung chihchang chen chingjung liao dynam diffus optim method irregular finit element graph partit journal supercomput v n p aug chingjung liao yehch chung treebas parallel loadbalanc method solutionadapt finit element graph distribut memori multicomput ieee transact parallel distribut system v n p april john c s lui m f chan effici partit algorithm distribut virtual environ system ieee transact parallel distribut system v n p march yehch chung chingjung liao donlin yang prefix code match parallel loadbalanc method solutionadapt unstructur finit element graph distribut memori multicomput journal supercomput v n p jan umit catalyurek cevdet aykanat hypergraphpartit approach coarsegrain decomposit proceed acmiee confer supercomput cdrom p novemb denver colorado umit catalyurek cevdet aykanat hypergraphpartitioningbas decomposit parallel sparsematrix vector multipl ieee transact parallel distribut system v n p juli cevdet aykanat b barla cambazoglu ferit findik tahsin kurc adapt decomposit remap algorithm objectspaceparallel direct volum render unstructur grid journal parallel distribut comput v n p januari y f hu r j blake load balanc unstructur mesh applic progress comput research nova scienc publish inc commack ny