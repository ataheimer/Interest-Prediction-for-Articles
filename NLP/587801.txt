t algorithm permut larg entri diagon spars matrix a consid bipartit match algorithm comput permut spars matrix diagon permut matrix entri larg absolut valu discuss variou strategi consid implement comput code also consid scale techniqu increas rel valu diagon entri numer experi show effect reorder scale solut spars equat direct method precondit iter techniqu b introduct say n theta n matrix larg diagon absolut valu diagon entri larg rel absolut valu offdiagon entri row column permut larg nonzero entri onto diagon spars matrix use sever way wish solv system nonsingular squar matrix order n x b vector length n preorder kind use whether direct iter method use solut see olschowka neumaier duff koster work report continu work report duff koster present algorithm maxim smallest entri diagon reli repeat applic depth first search algorithm mc duff harwel subroutin librari hsl report concern bipartit match algorithm permut row column matrix diagon permut matrix larg algorithm central report comput match correspond permut spars matrix product or sum diagon entri maxim algorithm alreadi mention use duff koster fulli describ report describ algorithm detail also consid modifi version algorithm comput permut matrix maxim smallest diagon entri compar perform algorithm duff koster also investig influenc scale matrix scale use comput match make diagon entri even larger rel offdiagon particular look spars variant bipartit match scale algorithm olschowka neumaier first maxim product diagon entri scale matrix entri one entri greater one rest report organ follow section describ concept bipartit match need descript algorithm section review basic properti algorithm mc mc rel simpl algorithm comput match correspond permut matrix put mani entri possibl onto diagon without consid numer valu algorithm maxim product diagon entri describ section section consid modifi version algorithm maxim smallest diagon entri permut matrix section consid scale reorder matrix comput experi algorithm appli practic problem effect reorder scale direct iter method solut present section effect precondit also discuss final consid implic current work section match gener n theta n spars matrix matrix a associ bipartit graph e consist two disjoint node set v r v c edg set e u v e impli set v r v c cardin n correspond row column respect edg i ij defin set row c set correspond posit entri row column j spars matrix respect use denot absolut valu signifi number entri set sequenc matrix mean alway clear context subset e call match or assign two edg incid node match contain largest number edg possibl call maximum cardin match or simpli maximum match maximum match perfect match everi node incid match edg obvious everi bipartit graph allow perfect match howev matrix nonsingular exist perfect match ga perfect match cardin n defin n theta n permut matrix pa ap matric match entri zerofre diagon bipartit match problem view special case network flow problem see exampl ford jr fulkerson effici algorithm find maximum match bipartit graph make use augment path let match ga node v match incid edg path p ga defin order set edg success edg incid node path p call maltern path edg p altern maltern path p call augment path connect unmatch row node unmatch column node bipartit graph figur exist maugment path column node row node match of cardin repres thick edg black entri accompani matrix correspond match connect matrix entri maugment path clear context match associ maltern maugment path simpli refer altern augment path let p subset e defin match p maugment path phi p match jm phi maltern cyclic path ie altern path whose first last edg incid node phi p also match jm phi figur augment path rin sequel match often repres pointer array augment path bipartit graph g found construct altern tree altern tree subgraph g root row column node path maltern path altern tree root column node j grown follow way start initi altern tree fj g consid column node j c turn initi node j check row node colj altern path j yet exist node alreadi match add row node i column node match extend row node edg and path node root form augment path key observ construct maximum perfect match match maximum augment path rel altern tree implement use pointer array c that given edg i either root node tree edg consecut edg altern path toward root augment path altern tree provid exist thu easili obtain p m altern tree uniqu gener one construct sever altern tree start root node equal node set differ edg set differ altern tree gener contain differ augment path match algorithm describ next section impos differ criteria order path altern tree grown order obtain augment path maximum match special properti match asymptot fastest current known algorithm find maximum match hopcroft karp worstcas complex o number entri spars matrix effici implement algorithm found duff wiberg algorithm mc implement duff theoret worstcas behaviour on practic behav like on latter algorithm simpler concentr follow although note rel straightforward use algorithm hopcroft karp similar way use mc later section mc depthfirst search algorithm lookahead start empti match henc column node unmatch initi see figur unmatch column node j turn altern tree grown augment path respect current match found provid one exist set b use mark match row node visit far initi first row node colj search lookahead unmatch node one found singleton path maugment path unmatch node unmark match node mark node edg i ad altern tree by set search continu column node node j row node colj first check unmatch node one exist say path form augment path unmatch node remain unmark node pick set j search move node j continu similar depthfirst search fashion either augment path with node j k unmatch k colj k contain unmark node latter case mc backtrack resum search previous visit column node j kgamma remain unmark node backtrack mc resum search column node j colj contain unmark node maugment path start node j exist case mc continu construct new altern tree start next unmatch column node the final maximum match cardin n gamma henc perfect figur outlin mc repeat exist colj unmatch els exist els iap null iap null augment along path node iap node j end weight match section describ algorithm comput match permut spars matrix product diagon entri permut matrix maximum absolut valu is algorithm determin match correspond permut oe maxim n maxim multipl problem translat minim addit problem defin matrix log maximum absolut valu column j matrix a maxim equal minim log log oe log ja ioe log oe log ja ioe minim equival find minimum weight perfect match edg weight bipartit graph known literatur bipartit weight match problem linear sum assign problem linear program combinatori optim numer algorithm propos comput minimum weight perfect match see exampl burkard derig carpaneto toth carraresi sodini derig metz jonker volgen kuhn practic exampl assign problem allot task cost matrix c repres cost benefit assign person task j realvalu n theta n e correspond bipartit graph whose edg i weight match gc denot cm defin sum edg weight ie ijm perfect match said minimum weight perfect match smallest possibl weight ie cm cm possibl maximum match key concept find minimum weight perfect match socal shortest augment path maugment path p start unmatch column node j call shortest cm phi p possibl maugment path p start node j defin length altern path p match call extrem allow altern cyclic path neg length follow two relat hold first perfect match minimum weight extrem second match extrem p shortest maugment path phi p extrem also proof goe roughli follow suppos phi p extrem exist altern cyclic path q cm phi p extrem must exist subset form maugment path shorter p henc p shortest maugment path contradict supposit two relat form basi mani algorithm solv bipartit weight match problem start possibl empti extrem match success augment along shortest augment path maximum or perfect literatur problem find minimum weight perfect match often state follow linear program problem find matrix minim x subject x solut linear program one x ij f g exist permut matrix x g minimum weight perfect match edmond karp kuhn furthermor minimum weight exist dual variabl u v j use reduc weight matrix reduc weight cm match equal reduc length lp maltern path p equal ijp nm phi p match reduc weight phi p equal thu find shortest augment path graph gc equival find augment path graph g c minimum reduc length edg contain altern path p neg length lead subpath p p shortest augment path weight bipartit graph e obtain mean shortest altern path tree shortest altern path tree altern tree whose path shortest path g node defin length shortest path node root node d path exist shortest altern path tree everi edg i node i j outlin algorithm construct shortest altern path tree root column node j given figur reduc weight c ij nonneg graph g c contain altern path neg length use spars variant dijkstra algorithm dijkstra set row node partit three set b q w b set mark node whose shortest altern path distanc node j known q set node altern path root known necessarili shortest possibl w set node altern path exist known yet note sinc w defin implicitli v r n b q actual use figur algorithm start shortest altern tree extend tree augment path found guarante shortest augment path respect current match initi length shortest augment path lsap tree set infin length shortest altern path lsp root node q set zero pass main loop anoth column node j chosen closest root j initi row node colj whose shortest altern path root known yet i b consid p j ji shortest altern path root node node j with length lsp extend edg i j node j node with length longer tent shortest augment path tree with length lsap need modifi tree p j ji length smaller lsap unmatch new shorter augment path found lsap updat match p j ji also shorter current shortest altern path with length shorter altern path node found tree updat updat node visit previous move q next q empti node q determin closest root sinc weight c ij bipartit graph nonneg cannot altern path node shorter current one node mark by ad b search continu column node j continu column node search new augment path found whose length smaller current shortest one line lsap lsp origin dijkstra algorithm intend dens graph on complex spars problem complex reduc o log n implement set q kheap node sort increas distanc root see exampl tarjan gallo pallottino run time algorithm domin oper heap q on delet oper on insert oper o modif oper these necessari time distanc updat insert modif oper run olog k n time delet oper run ok log k n time consequ algorithm find shortest augment path spars bipartit graph run time n total run time spars bipartit weight algorithm n choos algorithm use binari heap obtain time bound on n log n choos obtain bound on log n n implement heap q similar implement propos derig metz q pair q array contain row node distanc root shortest lsp separ node q closest root may reduc number oper heap especi situat cost matrix c differ numer valu mani altern path length delet node q smallest see figur consist choos arbitrari element q q empti first move node q closest root q augment reduc weight c ij updat ensur altern path new g nonneg length done modifi figur construct shortest augment path true dnew dnew lsap unmatch lsap dnew isap els choos lsap lsp exit whileloop lsap augment along path node isap node j dual vector u v shortest altern path tree construct shortest augment path found u v j updat updat dual variabl u v satisfi new reduc weight c ij nonneg run time weight match algorithm decreas consider mean cheap heurist determin larg initi extrem match use strategi propos carpaneto toth calcul inspect set colj column node j turn determin larg initi match edg remain unmatch column node j everi node colj consid match column node j say j unmatch row node found c replac i repeat unmatch column search shortest augment path start respect current match final note weight match algorithm also use maxim sum diagon entri matrix instead maxim product diagon entri thi minim redefin matrix c otherwis maxim sum diagon entri equal minim sinc oe a oe bottleneck match describ modif weight bipartit match algorithm previou section permut row column spars matrix smallest ratio absolut valu diagon entri maximum absolut valu column maxim is modif comput permut oe maxim min in oe j maximum absolut valu column j matrix a similarli previou section transform minim problem defin matrix j maxim equal minim in oe oe in given match bipartit graph e bottleneck valu defin ijm problem find perfect or maximum bottleneck match cm minim ie cm cm possibl maximum match match call extrem allow altern cyclic path p cm phip bottleneck algorithm start extrem match initi bottleneck valu b set cm pass main loop altern tree construct augment path p found either cm phi p cm phi p small possibl initi main loop construct augment path figur figur show innerloop weight match algorithm figur modifi case bottleneck object function main differ sum oper path length figur replac max oper and soon augment path p found whose length lsap less equal current bottleneck valu b main loop exit p use augment b set maxb lsap bottleneck algorithm modifi edg weight c ij similarli implement discuss section set q implement array q contain node whose distanc root less equal tent bottleneck valu b q contain node whose distanc root larger bottleneck valu infin q implement heap figur modifi inner loop figur construct bottleneck augment path dnew dnew lsap unmatch lsap dnew isap lsap b exit whileloop els larg initi extrem match found follow way defin smallest entri row column j respect lower bound b bottleneck valu extrem match obtain edg i j c ij b scan node turn node colj unmatch ad then remain unmatch column node j everi node colj consid c ij b match column node j say j unmatch row node colj found c replac i done unmatch column search shortest augment path start respect current match initi procedur found literatur exampl slightli complic initi strategi use fink smith context solv transport problem everi use number admiss edg incid row node column node j respect idea behind use g h j admiss edg i j ad admiss edg incid node j longer candid ad therefor method tri pick admiss edg number admiss edg becom unus minim first row node minim g determin set row i admiss entri i provid one exist chosen h j minim i j ad delet edg edg k j k colj method repeat anoth row node minim g continu admiss edg delet graph final note instead maxim also could maxim smallest absolut valu diagon is maxim min in defin matrix c note problem rather sensit scale matrix a suppos exampl matrix column contain one nonzero entri whose absolut valu v smallest absolut valu present a then appli bottleneck algorithm bottleneck valu b equal small valu smallest entri diagon permut matrix maxim algorithm influenc valu diagon valu scale matrix prior appli bottleneck algorithm avoid thi duff koster differ approach taken obtain bottleneck match let ffl denot matrix obtain set zero entri ij ja ij denot match obtain remov match entri i j ja ij throughout algorithm fflmax fflmin maximum match size jm j exist fflmax exist fflmin step ffl chosen interv fflmin fflmax maximum match matrix ffl comput use variant mc match size jm j fflmin set ffl otherwis fflmax set ffl henc size interv decreas step ffl converg bottleneck valu termin algorithm comput bottleneck match ffl correspond bottleneck valu scale olschowka neumaier use dual solut produc weight match algorithm scale matrix let u v satisfi relat defin equal hold i word ad matrix whose diagon entri one absolut valu whose offdiagon entri less equal one olschowka neumaier call matrix imatrix use context dens gaussian elimin reduc amount pivot need numer stabil domin diagon matrix higher chanc diagon entri stabl enough serv pivot elimin iter method transform matrix imatrix also interest exampl gershgorin theorem know union disc contain eigenvalu n theta n matrix a disc k center ii radiu equal sum absolut offdiagon valu row i sinc diagon entri imatrix one n disk center estim eigenvalu sharper deviat less diagon matrix is smaller radii disc better know eigenvalu situat abl reduc radii disc imatrix ie reduc offdiagon valu tend cluster eigenvalu around one ideal case disc imatrix radiu smaller one case matrix strictli rowwis diagon domin guarante mani type iter method converg in exact even simpl one like jacobi gaussseidel method howev least one disc remain radiu larger close one zero eigenvalu small eigenvalu possibl straightforward but expens attempt decreas larg offdiagon entri matrix row column equal olschowka neumaier let imatrix defin matrix simplic assum contain zero entri equal consist repeatedli equal largest absolut valu row largest absolut valu column i k n thu defin algorithm minim largest offdiagon absolut valu matrix ad diagon entri chang note scale strategi guarante offdiagon entri imatrix smaller one absolut valu exampl imatrix contain two offdiagon entri kl lk k l whose absolut valu one experiment result section discuss sever case reorder algorithm previou section use includ solut spars equat direct method iter techniqu also consid use gener precondition iter method set matric use experi unsymmetr matric taken harwellbo spars matrix test collect duff grime lewi spars matrix collect univers florida davi matric initi row column scale mean matrix scale maximum entri row column one comput use experi sun ultrasparc mbyte main memori algorithm implement fortran use follow acronym mc match algorithm harwel subroutin librari comput match correspond permut matrix zero freediagon see section bt bottleneck bipartit match algorithm section permut matrix smallest ratio absolut valu diagon entri maximum absolut valu column maxim bt bottleneck bipartit match algorithm duff koster mpd weight match algorithm section comput permut product diagon entri permut matrix maximum absolut valu mp equal mpd algorithm permut matrix scale imatrix see section tabl show larg spars matric order number entri time algorithm comput match time mp list almost ident mpd gener mc need least time comput match except oneton twoton matric matric search heurist use mc a depthfirst search lookahead perform well probabl caus order column variabl entri insid column matrix random permut matrix prior appli mc might lead result clear winner bottleneck algorithm bt bt although note bt requir entri insid column sort valu sort expens rel dens matric mpd gener expens algorithm explain select way algorithm construct augment path experi direct solut method direct method put larg entri diagon suggest pivot diagon might stabl inde stabil still guarante solut scheme like multifront method duff reid symbol phase choos initi pivot sequenc subsequ factor phase modifi sequenc stabil mean modif requir less permut appli multifront approach duff reid later develop amestoy duff analysi perform structur aa obtain order reduc fillin assumpt diagon entri numer suitabl pivot numer factor guid assembl tree node tree step gaussian elimin perform dens submatrix whose schur complement pass parent node tree assembl tabl time in second match algorithm order matrix n number entri matrix goodwin or sum schur complement children origin entri matrix if howev numer consider prevent us choos pivot algorithm proceed schur complement pass parent larger usual work storag need effect factor logic first permut matrix larg entri diagon comput order reduc fillin tri reduc number pivot delay way therebi reduc storag work factor show effect tabl see even use mc benefici although algorithm show signific gain tabl show effect number entri factor clearli mirror result tabl addit abl select pivot chosen analysi phase multifront code better matric whose structur symmetr nearli so here defin structur symmetri matrix number entri ij ji also entri divid total number entri structur symmetri permut shown tabl match order case increas symmetri result reorder matrix particularli appar spars system mani zero diagon case reduct number offdiagon entri reorder matrix influenc symmetri notic that respect sophist match algorithm may actual caus problem sinc could reorder symmetr structur matrix zerofre diagon wherea mc leav unchang tabl number delay pivot factor ma indic need mbyte memori matrix match algorithm use none mc bt mpd mp goodwin tabl number entri factor ma matrix match algorithm use none mc bt mpd mp oneton goodwin tabl structur symmetri permut matrix match algorithm use none mc bt mpdmp gemat final tabl show effect solut time ma sometim observ dramat reduct time solut preced permut tabl solut time requir ma matrix match algorithm use none mc bt mpd mp goodwin implement algorithm describ paper use success li demmel stabil spars gaussian elimin distributedmemori environ without need dynam pivot method decompos matrix n theta n block matrix a use notion unsymmetr supernod demmel eisenstat gilbert li liu block map cyclic in row column dimens onto node processor twodimension rectangular processor grid map step k numer factor column processor factor block column ak n k row process particip triangular solv obtain block row u processor particip correspond multiplerank updat remain numer factor phase method use dynam partial pivot block column allow priori comput nonzero structur factor distribut data structur commun pattern good load balanc scheme make factor scalabl distributedmemori machin factor comput commun task becom appar elimin process ensur solut numer stabl matrix permut scale factor make diagon entri larg compar offdiagon entri tini pivot encount factor perturb step iter refin perform triangular solut phase solut accur enough numer experi demonstr method use implement mp algorithm stabl partial pivot wide rang problem experi iter solut method iter method simpl techniqu like jacobi gaussseidel converg quickli diagon entri larg rel offdiagon row column techniqu like block iter method benefit entri diagon block larg addit precondit techniqu exampl diagon precondit incomplet lu precondit intuit evid larg diagon benefici precondit incomplet factor incomplet factor precondition pivot often taken diagon fillin discard fall outsid prescrib sparsiti pattern see saad overview incomplet factor use result factor econom store comput solv with one reason incomplet factor behav poorli pivot arbitrarili small benzi szyld van duin chow saad pivot may even zero case incomplet factor fail small pivot allow numer valu entri incomplet factor becom larg lead unstabl therefor inaccur factor case norm residu u larg here l u denot comput incomplet way improv stabil incomplet factor preorder matrix put larg entri onto diagon obvious success factor still cannot guarante nonzero diagon entri may becom small or even zero factor reorder may mean zero small pivot less like occur tabl show result reorder appli prior incomplet factor form ilu ilu ilut iter method gmre bicgstab qmr case method converg permut other greatli improv converg howev emphas permut larg entri diagon matrix alway improv accuraci stabil incomplet factor inaccur factor also occur absenc small pivot mani especi larg fillin drop incomplet factor respect may benefici appli symmetr permut match reorder reduc fillin anoth kind instabl incomplet factor occur without small pivot sever illcondit triangular factor in situat jjrjj f need larg jji gamma a be also common situat coeffici matrix far diagon domin tabl number iter requir precondit iter method permut matrix method match algorithm qmr mahinda west also perform set experi first permut column matrix use reorder comput one match algorithm follow symmetr permut gener revers cuthillmcke order cuthil mckee appli motiv behind number entri drop factor reduc appli reorder matrix reduc fillin experiment result notic addit permut sometim posit well neg effect perform iter solver tabl show result three iter method tabl precondit ilut west matric harwellbo collect tabl number iter requir ilutprecondit iter method match reorder without revers cuthillmcke matrix method match algorithm match algorithm without rcm rcm experi block iter solut method jacobi method particularli current power method focuss experi block cimmino implement arioli duff noaill ruiz equival use block jacobi algorithm normal equat implement subproblem correspond block row matrix solv spars direct method hsl show effect tabl problem mahinda tabl match algorithm follow revers cuthillmcke algorithm obtain block tridiagon form matrix partit block row acceler use block cg algorithm block size block row chosen equal or nearli equal size tabl number iter block cimmino algorithm matrix mahinda acceler match algorithm block row none mc bt mpd mp gener notic experi block cimmino method often sensit scale in mp less reorder converg properti block cimmino method independ row scale howev spars direct solver hsl use solv augment system perform numer pivot factor augment matric row scale might well chang choic pivot order affect fillin factor accuraci solut column scale affect converg method sinc consid diagon precondition detail see ruiz conclus futur work consid section techniqu permut spars matrix diagon permut matrix entri larg absolut valu discuss variou criteria consid implement comput code also consid section possibl scale strategi improv weight diagon respect offdiagon valu section indic sever case permut and scale use includ solut spars equat direct method iter techniqu also consid use gener precondition iter method numer experi show multifront solver precondit iter method effect reorder dramat effect block cimmino iter method seem less dramat method discuss scale tend import effect clear reorder matric permut matrix larg diagon signific effect solv spars system wide rang techniqu somewhat less clear univers strategi best case one reason increas size diagon alway suffici improv perform method exampl incomplet precondition use numer experi section size diagon also amount size discard fillin play import role thu start experi combin strategi mention section and particularli gener precondition block cimmino approach combin unsymmetr order symmetr order anoth interest extens discuss reorder block approach increas size diagon block instead diagon entri use exampl block jacobi precondition permut matrix particular interest block cimmino method one could also build criteria weight obtain bipartit match exampl incorpor markowitz cost sparsiti would also preserv choic result diagon pivot combin would make result order suitabl wider class spars direct solver final notic experi one effect match algorithm increas structur symmetri unsymmetr matric explor use order techniqu directli attempt increas structur symmetri acknowledg grate michel benzi lo alamo nation laboratori miroslav tuma czech academi scienc assist precondit iter method daniel ruiz enseeiht help block iter method r order incomplet factor precondit nonsymmetr problem assign match problem solut method fortranprogram experiment studi ilu precondition indefinit matric reduc bandwidth spars symmetr matric univers florida spars matrix collect supernod approach spars partial pivot design use algorithm permut larg entri diagon spars matric user guid harwellbo spars matrix collect releas make spars gaussian elimin scalabl static pivot solut larg spars unsymmetr linear system block iter method multiprocessor environ iter method spars linear system data structur network algorithm tr ctr laura grigori xiaoy s li new schedul algorithm parallel spars lu factor static pivot proceed acmiee confer supercomput p novemb baltimor maryland abdou guermouch jeanyv lexcel gil utard impact reorder memori multifront solver parallel comput v n p septemb abdou guermouch jeanyv lexcel construct memoryminim schedul multifront method acm transact mathemat softwar tom v n p march chi shen jun zhang kai wang distribut block independ set algorithm parallel multilevel ilu precondition journal parallel distribut comput v n p march kai shen parallel spars lu factor secondclass messag pass platform proceed th annual intern confer supercomput june cambridg massachusett patrick r amestoy iain s duff jeanyv lexcel xiaoy s li analysi comparison two gener spars solver distribut memori comput acm transact mathemat softwar tom v n p decemb kai shen parallel spars lu factor differ messag pass platform journal parallel distribut comput v n p novemb xiren wang wenjian yu zeyi wang xianlong hong improv direct boundari element method substrat coupl resist extract proceed th acm great lake symposium vlsi april chicago illinoi usa anshul gupta recent advanc direct method solv unsymmetr spars system linear equat acm transact mathemat softwar tom v n p septemb timothi a davi column preorder strategi unsymmetricpattern multifront method acm transact mathemat softwar tom v n p june michel benzi precondit techniqu larg linear system survey journal comput physic v n p novemb