t slice softwar model construct a appli finitest verif techniqu eg model check softwar requir program sourc code translat finitest transit system safe model program behavior automat check transit system correct properti typic costli thu necessari reduc size transit system much possibl fact often case much program sourc code irrelev verifi given correct propertyin paper appli program slice techniqu remov automat irrelev code thu reduc size correspond transit system model give simpl extens classic slice definit prove safeti respect model check linear tempor logic ltl formula discuss slice strategi fit gener methodolog deriv effect softwar model use abstractionbas program special b introduct modern softwar system highli complex yet must extrem reliabl correct recent year finitest verif techniqu includ model check tech niqu receiv much attent softwar valid method techniqu effect valid crucial properti concurr softwar system varieti domain includ network protocol railway interlock system industri control system despit success high cost automat check given correct properti softwar system which typic enorm state space cast doubt whether broad applic finitest verif softwar system costeffect research agre best way attack stateexplos problem construct finitest transit system safe abstract softwar semant transit system small enough make automat check tractabl yet larg support part nsf darpa grant ccr ccr ccr nasa award nag support part nsf grant ccr nasa award nag enough captur inform relev properti check one primari difficulti determin part program relev properti check paper show slice automat throw away irrelev portion softwar code henc safe reduc size transit system approxim softwar behavior envis slice one collect tool translat program sourc code model suitabl verif previous illustr techniqu abstract interpret partial evalu integr appli help autom construct abstract transit system appli techniqu sever realist softwar system reveal interest interact slice abstract build peopl current perform slicinglik oper manual determin portion code relev verifi given properti thu preprocess softwar use slice appli partialevalu base abstract techniqu can i provid safe approxim relev portion code ii enabl scale current manual techniqu significantli larger complex system iii reduc number compon abstract must select help guid se lection iv reduc size program treat abstractionbas partial evalu tool work part larger project engin highassur softwar system build set tool implement transit system construct methodolog ada java paper use simpl flowchart languag order formal investig fundament issu implement prototyp slice system paper base scale techniqu refer reader project websit httpwwwcisksuedusantosbandera extend version paper which contain exam ple technic extens proof prototyp applic abstract techniqu concurr ada system next section describ flowchart languag use throughout paper present section definit slice languag discuss specif finitest verif techniqu ltl model check approach construct safe abstract transit system sourc code section section describ slice appli prephas transit system construct section sketch sever method deriv slice criteria tempor logic specif base shape commonlyus formula pat tern section discuss relat work slice section summar conclud descript futur work flowchart languag fcl syntax take sourc languag simpl flowchart languag fcl gomard jone figur present fcl program comput power func tion input paramet program n variabl referenc assign throughout program variabl result introduc time initi valu variabl output program execut state memori return construct execut figur present syntax fcl fcl program essenti list basic block initi basic block execut specifi immedi paramet list power program initi block specifi line init basic block consist label follow po sibli empti list assign we write delta empti list elid list nonempti block conclud jump transfer control block anoth one instead includ boolean valu nonzero valu repres true zero repres fals test condit present slice need reason node statementlevel controlflow graph cfg ie graph separ node assign jump given program p assum statement uniqu index within block then node uniqu identifi pair li l block label index valu figur statement indic given annot bracket delta exam ple second assign loop block uniqu identifi or node number loop follow definit introduc notion relat statementlevel controlflow graph ffl flow graph e consist set n statement node set e direct controlflow edg uniqu start node s uniqu end node e ffl invers g gamma flowgraph n e s e flowgraph edg revers startend state swap ffl node n domin node g written domn m everi path start node pass n note make domin relat reflex postdomin node n g written postdomm n everi path node end node e pass n equival domn m g gamma ffl node n controldepend some intuit follow definit exist nontrivi path p n everi node ng postdomin n postdomin n write cdn set node n controldepend control depend play import role rest paper note node n controldepend m must least two exit edg must two path connect e one contain n not exampl power program figur loop loop loop controldepend test end sinc postdomin test ie path test halt go it extract cfg fcl program p straight forward possibl hitch program satisfi uniqu end node properti requir definit for exampl program may multipl return work around problem assum extract cfg program p insert addit node label halt successor predecessor return node p semant semant fcl program p express transit program state ln oe l label block p n index statement block l oe store map variabl valu seri transit give execut trace program statementlevel control flow graph exampl figur give trace power program comput formal trace finit nonempti sequenc state written suffix start ie omit formal definit transit relat fcl program sinc intuit clear a formal found slice program slice program slice consist part program p potenti affect variabl valu flow program point interest slice criterion specifi program point n a node ps cfg set variabl v interest exampl slice power program respect slice criterion yield program figur note assign variabl result declar input paramet slice away sinc affect valu n line loop addit block init trivial remov eg postprocess phase slice program p yield program ps trace ps project correspond trace p exampl follow trace ps project trace here consid finit trace correspond termin execut extend version paper treat infinit execut best express use coinduct reason m n init init result loop result result m goto test n n goto test end els loop end return figur fcl program comput n domain l blocklabelsfcl assignmentsfcl al assignmentlistsfcl grammar al al j delta x figur syntax flowchart languag fcl figur trace power program init init goto test loop n n goto test end els loop end return figur slice power respect criterion figur intuit trace project trace sequenc program state embed sequenc state formal thi let oe j v denot restrict domain oe variabl v then definit project follow program project function m ptrace determin ffl set node ps cfg ffl function map node set variabl v defin induct length trace follow ae classic definit slice criterion one specifi exactli one point node interest cfg along set variabl interest node case exampl slice power program abov applic may interest multipl program point gener notion slice criterion follow definit slice criterion slice criterion c program p nonempti set pair n node ps statement flowgraph v subset possibl empti variabl p node requir pairwis distinct note criterion c view function variablesfcl case write domainc denot nkg thu slice criterion c determin project function domainc c abbrevi c formal notion program slice definit program slice given program p associ cfg let c slice criterion p program ps also call residu program slice p respect c p execut trace s execut trace ps run initi state exampl let s execut trace power program figur slice power program figur respect then comput slice given program p slice criterion c definit admit mani program ps slice p in fact p trivial slice p weiser note problem find statement minim slice p incomput give minor adapt weiser algorithm comput conserv slice ie slice may contain statement necessari initi approxim slice comput slice involv among thing identifi assign affect valu variabl given slice criterion thi one comput inform similar reach definit requir keep track variabl referenc variabl defin node cfg definit definit refer ffl let defn set variabl defin ie assign to node n alway singleton empti set ffl let refn set variabl referenc node n figur show def ref set power program figur next node cfg comput set relev variabl relev variabl variabl whose valu must known comput valu variabl slice criterion definit initi relev variabl slice criterion c n set variabl v either n immedi predecessor node a c m intuit variabl v relev node n line slice criterion slice v immedi preced node a v use defin variabl x relev ie valu x depend v b v relev kill definit line n figur present initi set relev variabl set power program figur slice criterion n relev along path lead node loop end block n dead variabl thu longer relev classic definit slice requir node mention slice criterion occur comput slice forc node occur defin set obligatori node node must occur slice even fail defin variabl eventu deem relev definit obligatori node set oc obligatori node defin follow algorithm give actual base tip correct version weiser algorithm fng fng ftestg fng fng figur result slice algorithm power program slice criteria initi slice set c set node defin variabl relev successor definit initi slice set initi slice set c defin follow figur present initi slice set c power program figur node loop node c sinc node defin variabl relev successor note c includ condit sinc condit make definit tell condit ad intuit condit node n ad c oc controldepend n set condit b c call branch set definit branch set initi branch set b c defin follow figur present controldepend inform initi branch set b c power program figur explain section loop loop loop controldepend test sinc loop oc controldepend dictat test includ b c iter construct keep iter process is add condit influenc node alreadi slice then must add slice node need comput express test condit fix point reach ffl relev variabl branch criterion is relev variabl node n relev previou iter plu need decid condit control definit previou slice set find node branch b equival slice program criterion fb refbg ffl slice set is slice set contain condit control node previou slice set node defin relev variabl ffl branch set is condit requir control node current slice set obligatori node figur present set r c c result second iter algorithm next iter fix point reach sinc n variabl requir comput condit test test alreadi relev test iter size r c n node n c increas sinc r c n bound number variabl program c bound number node cfg iter eventu reach fix point r c n c construct residu program given rc c follow definit inform summar residu program construct intuit assign c must appear residu program assign c oc assign must irrelev variabl sinc node must appear residu program assign replac skip goto return jump must appear residu program howev c relev assign obligatori node control depend upon it therefor matter take true branch fals branch case simpli jump point two branch merg definit residu program construct given program slice criterion c let rc oc set construct process abov residu program ps construct follow ffl paramet x p x paramet ps l label initi block p ffl label initi block ps label initi block p ffl block b p form residu block bs follow assign line with identifi li assign appear residu program identifi li otherwis assign becom skip identifi li residu program otherwis node left residu program jump j b j jump bs otherwis must li c j jump bs otherwis jump bs goto l identifi li l label nearest postdomin block l l final postprocess remov block target jump ps these becom unreach finitest verif note introduct varieti finitest verif techniqu use verifi properti soft ware make present concret consid singl finitest verif techniqu model check specif written linear tempor logic ltl ltl model check use reason properti wide rang real softwar system use it exampl valid properti program framework provid parallel schedul varieti system eg parallel implement finiteel comput fluid dynam program flow analysi problem linear tempor logic linear tempor logic rich formal specifi state action sequenc properti system ltl specif describ intend behavior system possibl execut syntax ltl includ primit proposit p usual proposit connect three tempor oper proposit connect tempor oper specifi properti softwar system one typic use ltl formula reason execut particular program point eg enter exit procedur well valu particular program variabl captur essenc fcl use follow primit proposit ffl intuit li hold execut reach node block label l ffl intuit x rop c hold valu variabl x current node relat c relat oper rop eg x rop formal semant primit proposit defin respect state ae true fals otherwis ae true oex fals otherwis semant formula defin respect trace tempor oper requir argument true current state onward oper requir argument becom true point futur u oper requir first argument true point second argument becom true formal let exist simpl specif use logic eventu block l execut whenev block l execut block l alway subsequ execut whenev block l execut x nonzero x alway less softwar model construct appli finitest verif softwar system one must construct finitest transit system safe abstract softwar semant transit system small enough make automat check tractabl yet larg enough captur inform relev properti check relev inform extract appropri abstract interpret ai approach user declar program variabl abstract domain use interpret oper variabl use process combin abstract interpret partial evalu which call abstractionbas program special abp residu program creat propag abstract valu special program point respect abstract valu residu program concret constant replac abstract constant residu program safe approxim finitest program fix number variabl defin finit abstract domain program submit toolset gener input exist model check tool smv spin approach appli verifi correct properti sever softwar system written ada step describ abov user main task pick appropri ai ie ai extract relev infor mation throw away irrelev inform gener idea behind methodolog chose ai start simpl use ai throw inform dataflow away increment refin ai base inform specif verifi program start point ai initi variabl model point ai ie domain singl valu oper return effect throw away inform variabl valu semant featur specif specif formula check includ form proposit differ semant featur program eg valuat specif program vari abl featur must model precis ai hope check properti exampl formula includ proposit x instead use point ai x one must use eg ai domain fzero po g refer zeropo ai select control variabl addit variabl mention explicitli specif must also use refin ai variabl specif variabl control depend predic control condit suggest semant featur model ai exampl specif variabl x controldepend upon condit use evenodd ai y select variabl broadest impact confront multipl control variabl model select one appear often condit illustr methodolog figur present fcl render ada process control reader writer common resourc ada system server process run concurr client process request startread stopread entri point ren dezvouz point control process fcl code figur request given program paramet req list valu subrang figur present blocklevel controlflow graph fcl program assum interest reason invari properti key featur mention explicitli specif valu variabl writerpres execut startread block point ai provid enough precis determin state writerpres valu zero effect ai writerpres must abl distinguish zero valu posit valu choos zeropo ai point could gener abstract model check properti consid addit refin model choos latter illustr exam ple determin variabl upon node startread node assign writerpres control depend exampl three variabl writerpres activeread req alreadi model writerpres req use model extern choic interact control program via input could choos bind activeread refin ai point given condit express involv variabl activeread activeread might also choos zeropo ai thu errorflag abstract use point ai point would gener abstract model check properti true result obtain sure properti hold program even though finitest system model two variabl precis fals result obtain must examin counterexampl produc model checker may reveal true defect program may reveal infeas path model latter case identifi variabl condit along counterexampl path candid bind precis ai methodolog essenti heurist search find variabl program influenc execut behavior program rel properti proposi tion variabl determin potenti influ abstract refin strengthen result system model absenc determin variabl model point abstract essenti ignor effect may have although futur may determin influenc case abstract refin reduc model use slice illustr abov pick appropri abstract nontrivi could benefit greatli form autom assist key aspect methodolog pick abstract includ pick initi set relev variabl v relev statement ie cfg node n mention ltl specif init activeread raiseerror writerpres errorflag goto checkreq checkreq end null req return end els nextreq nextreq req cdr req goto attemptstartread attemptstartread startread req writerpres activeread activeread startread goto checkreq els attemptstopread attemptstopread stopread req activeread activeread activeread stopread writerpres els attemptstartwrit raiseerror els attemptstopwrit attemptstartwrit startwrit req activeread writerpres writerpres goto checkreq startwrit els attemptstopwrit attemptstopwrit stopwrit req writerpres writerpres stopwrit els checkreq activeread raiseerror els checkreq figur readwrit control exampl fcl identifi appropri ai variabl v use control depend inform pick addit set variabl w indirectli influenc v n identifi appropri ai variabl w intuit variabl v w irrelev abstract point ai clearli item autom simpl pass ltl specif moreov inform item exactli inform would produc slice program p base criterion gener inform thu preprocess program verifi use slice provid autom support methodolog specif slice i identifi relev variabl which requir ai point ai ii elimin irrelev program variabl consider abstract select process they present residu program ps yield slice iii reduc size softwar thu size transit system analyz form support need item abov approach given program p specif desir criterion extract function extract extract appropri slice criterion c slice p respect c yield smaller residu program ps a preserv reflect satisfact b littl irrelev inform possibl follow requir express condit a abov requir ltlpreserv extract given program p specif let ps result slice p respect c p execut trace raiseerror init attemptstopwrit attemptstartwrit attemptstopread attemptstartread next_req checkreq stopwrit startwrit stopread startread figur readwrit control flowchart s execut trace ps run initi state propositionbas slice criterion consid technic point guid us defin appropri extract function state abov want preserv satisfact formula yet remov much irrelev inform origin trace possibl alreadi discuss situat certain variabl valu elimin state trace influenc satifac tion formula import use pure syntact inform the set variabl mention reduc state space let explain reduct gener term consid trace assum state transit influenc statisfact formal s compress trace the transit compress anoth view chang s action ff caus chang igamma action ff caus chang i combin action ff move igamma i intuit formula doesnt need know intermedi state exampl irrelev transit might assign irrelev variabl transit node li li mention technic justif identifi compress transit use pure syntact examin proposit formula answer lie fact that tempor oper treat state transit chang satisf primit proposit formula influenc satisfact itself mean justifi mani trace compress reason singl transit satisfact primit proposit see properti hold one includ tempor oper next state oper ffi formal notion follow definit give notion proposit invari respect particular transit definit pstutter transit let p primit proposit let transit said p stutter p set primit proposit proposit transit said pstutter follow lemma state satisfact formula contain primit proposit p invari respect expans compress pstutter step lemma let formula let p set primit proposit appear trace lemma fail one includ next state oper follow semant exampl consid trace let p proposit l note stutter p fals state compress transit obtain preserv satif formula ie s j intuit next state oper allow one count state thu attempt optim compress transit set problemat reason system like spin guarante semant ffi preserv dure eg partialord reduct optim given formula p set proposit want defin extract function guarante transit pstutter preserv residu program trace ffl variabl proposit observ definit variabl x may caus variabl chang valu ie caus transit non p stutter suggest proposit x rop c given specif assign x includ residu program more over x consid relev ffl proposit enter leav cfg node li caus proposit chang valu ie caus transit nonp stutter one might imagin need slice includ statement li proposit for mula howev possibl compress might remov intermedi node two occur node li thi well similar situat preserv state chang associ enter exit node therefor addit node li must ensur immedi successor immedi predecessor li includ slice base argument defin extract function follow propositionbas extract given program p specif let v set program variabl occur let set node contain assign variabl v union set np node appear node proposit togeth successor predecessor node np extract g extract function extract satisfi requir exampl yield follow criterion here first three line criterion startread node mention formula along predecessor successor last three line node writerpres assign valu figur present result slice slice ident origin program except variabl errorflag block raiseerror disappear program thu slice automat detect abstract methodolog yield previou section given specif errorflag irrelev previou condit jump stopread stopwrit raiseerror replac uncondit jump checkreq case slice algorithm detect node raiseerror block irrelev condit jump replac uncondit jump node true fals path lead condit meet second exampl consid specif checkreq checkreq eventu execut case extract yield criterion c here line criterion checkreq node mention formula along predecessor successor sinc variabl proposit specif variabl specifi relev criterion figur present result slice obviou residu program suffici verifi reachabl checkreq given specif variabl elimin except req appear test checkreq even though strictli necessari verifi properti condit retain slice algorithm sinc controldepend upon itself addit slice criterion dictat node nextreq slice howev sinc assign node assign relev variabl assign replac skip final jump checkreq node nextreq residu program result chain seri trivial goto postprocess futur work previou criteria consid individu proposi tion mani properti specif howev describ state use multipl proposit state relationship state character differ proposit section give inform suggest structur complex specif may exploit produc refin slice criterion init activeread writerpres goto checkreq checkreq end null req return end els nextreq nextreq req cdr req goto attemptstartread attemptstartread startread req writerpres activeread activeread startread goto checkreq els attemptstopread attemptstopread stopread req activeread activeread activeread stopread goto checkreq els attemptstartwrit attemptstartwrit startwrit req activeread writerpres writerpres goto checkreq startwrit els attemptstopwrit attemptstopwrit stopwrit req writerpres writerpres stopwrit els checkreq goto checkreq figur slice readwrit control program respect c init goto checkreq checkreq end null req return end els nextreq nextreq req cdr req goto checkreq figur slice readwrit control program respect c includ slice includ slice figur slice abstract program consid simpl conjunct proposit appear eventu specif rather slice proposit separ use semant refin slice criterion properti interest assign x influenc valu l thu slice criterion would be extract xg approach gener set program point proposit occur posit number variabl proposit conjunct thu far consid slice prelud abp applic abp can howev reveal semant inform variabl valu statement syntax therebi make avail use slice figur illustr sequenc assign x left abstract sequenc assign middl result bind classic sign ai x abp situat determin transit valu proposit relat x eg syntact consid respons properti form proposit slice criterion would base sole conjunct abov observ two fact structur formula exploit within implic thu need reason statement caus valu becom true sinc fals valu guarante entir formula true sinc righthand side need reason first statement sequenc statement caus becom true right column figur illustr effect appli observ elimin assign caus posit transit slice program note proposit involv x appear slice criterion may expand includ addit statement addit program point hold postdomin point hold need consid purpos check respons sinc exist relationship impli respons hold occurr observ exploit use postdomin inform program point hold post domin anoth point hold need includ slice one program point hold requir path formula becom true thu postdomin node may elimin refin slice criteria defin requir use auxiliari inform postdomin infor mation need avail prior slice cost gather inform process comput slice criteria may nontrivi domin high cost perform model check slice system case cost reduc size system present model checker offset reduc model check time discuss two refin criteria base structur properti formula check similar refin defin number class specif includ preced chain properti refin use essenti inform describ respons properti preced properti requir domin rather postdomin inform note refin respons criteria applic properti check specif even slight variat structur formula may render slice program unsaf recent survey properti specif finitest verif show respons preced properti form describ occur quit frequent practic realworld specif fell two categori reason believ effort defin seri special case extract criteria base formula structur justifi despit appar narrow relat work program slice develop techniqu simplifi program debug identifi part program execut parallel sinc develop concept slice appli wide varieti problem includ program understand de bug differenc integr test applic crucial slice preserv exact execut semant origin program respect slice criterion work interest preserv abil success model check properti correct weaken allow refin slice criteria base properti check slice gener softwar artifact includ attribut grammar requir model formal specif cimitil et al use z specif defin slice criteria identifi reusabl code legaci system work use combin symbol execut theorem prove process specif deriv slice criteria con trast identifi necessari condit subformula commonli occur pattern specif use condit guid safe refin basic proposit slice criteria work touch relationship program special slice use slice prelud special suggest abstractionbas special may reveal semant featur residu program syntax could use refin slice criteria rep turnidg studi relationship differ perspect show similar techniqu equival slice transform achiev special vice versa slice view statespac reduct techniqu number import theoret practic differ reduct techniqu appear literatur statespac reduct preserv correct respect specif class correct properti contrast approach slice base criteria extract formula yield compress trace contain state chang relev proposit contain tempor logic formula approach yield program remain sound complet respect properti check sharp contrast mani abstract techniqu develop literatur eg sacrific complet tractabl final even though signific progress made develop algorithm data structur reduc model check time obdd techniqu seen complement slice slice remov variabl system influenc behavior check model checker run faster regardless particular implement techniqu employ conclus present variat program slice simpl imper languag shown slice criteria defin guarante preserv model check semant ltl specif slice program implement prototyp tool perform slice experi number exampl base work scale prototyp handl significantli complex featur program includ structur data treatment procedur multithread program commun share data extens nontrivi build solid base laid work report paper acknowledg thank jame corbett michael huth david schmidt sever illumin discuss thank also hongjun zheng help comment earlier draft r abstract interpret declar languag symbol model check state beyond process control design use spin model check safeti critic softwar spin applic railway interlock system reusabl function use specif driven program slice case studi model check abstract evalu deadlock detect method concurr softwar abstract interpret unifi lattic model static analysi program construct approxim fixpoint abstract interpret reactiv system use partial evalu enabl verif concurr softwar model check gener contain implement translat ada program model check properti specif pattern finitest verif pattern properti specif finitest verif use partial order effici verif deadlock freedom safeti properti compil gener partial evalu introduct partial evalu use simpl flowchart languag stage static analysi use abstractionbas program special special configur system finitest verif reduct slice hierarch state machin model checker spin logic comput scienc model reason system partial evalu automat program gener tempor logic reactiv concurr system specif symbol model check program special via program slice beyond tradit program slice survey program slice techniqu program slice supercompil parallel vector comput tr adequaci program depend graph repres program formal model program depend implic softwar test debug mainten tempor logic reactiv concurr system partial evalu automat program gener increment program test use program depend graph static slice presenc goto statement model check abstract design pattern properti preserv abstract verif concurr system beyond tradit program slice abstract interpret reactiv system model checker spin reduct slice hierarch state machin filterbas model check partial system use partial evalu enabl verif concurr softwar pattern properti specif finitest verif logic comput scienc bandera abstract interpret symbol model check evalu deadlock detect method concurr softwar stage static analys use abstractionbas program special semant program slice program integr program slice hardwar descript languag slice program arbitrari controlflow formal studi slice multithread program jvm concurr primit program special via program slice program analysi model check abstract interpret use partial order effici verif deadlock freedom safeti properti reusabl function use specif driven program slice ctr heik wehrheim slice techniqu verif reus theoret comput scienc v n p octob matthew b dwyer john hatcliff robi joehan shawn laubach corina s psreanu hongjun zheng willem visser toolsupport program abstract finitest verif proceed rd intern confer softwar engin p may toronto ontario canada jame c corbett matthew b dwyer john hatcliff shawn laubach corina s psreanu robbi hongjun zheng bandera extract finitest model java sourc code proceed nd intern confer softwar engin p june limerick ireland yunja choi nusmv spin experi model check flight guidanc system formal method system design v n p june mariek huisman kerri trentelman factoris tempor specif proceed australasian symposium theori comput p januari newcastl australia xianghua deng matthew b dwyer john hatcliff masaaki mizuno invariantbas specif synthesi verif synchron concurr program proceed th intern confer softwar engin may orlando florida g j holzmann m h smith autom verif method distribut system softwar base model extract ieee transact softwar engin v n p april oksana tkachuk sreeranga p rajan applic autom environ gener commerci softwar proceed intern symposium softwar test analysi juli portland main usa antonella santon gigliola vaglini local approach tempor model check java bytecod journal comput system scienc v n p march yunja choi sanjai rayadurgam mat pe heimdahl automat abstract model check softwar system interrel numer constraint acm sigsoft softwar engin note v n sept matthew b dwyer john hatcliff robbi venkatesh prasad ranganath exploit object escap lock inform partialord reduct concurr objectori program formal method system design v n p septembernovemb ingo brckner bjrn metzler heik wehrheim optim slice formal specif deduct verif nordic journal comput v n p june tool support verifi uml activ diagram ieee transact softwar engin v n p juli radu iosif matthew b dwyer john hatcliff translat java multipl model checker bandera backend formal method system design v n p march baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v n march