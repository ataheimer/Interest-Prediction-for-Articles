t strong interact fair via random a abstractw present multi symmetr distribut random algorithm that probabl one schedul multiparti interact strongli fair manner knowledg multi first algorithm strong interact fair appear literatur moreov expect time taken multi establish interact constant depend total number process system sens multi guarante realtim respons multi make assumpt other bounded time take process commun it thu offer appeal tonic imposs result tsay bagrodia joung concern strong interact fair environ sharedmemori messagepass process determinist commun time nonneglig strong interact fair strong fair condit one might actual want impos practic result indic random may also prove fruit notion fair lack determinist realiz requir realtim respons b introduct multiparti interact set io action execut jointli number process must readi execut action action set occur attempt particip interact delay process particip avail action execut particip process continu local comput although rel new concept multiparti interact found way variou distribut program languag algebra model concurr see taxonomi program languag offer linguist support multiparti interact although multiparti interact execut synchron underli model commun usual asynchron biparti multiparti interact schedul problem concern synchron asynchron process satisfi follow requir interact establish enabl ie particip readi process particip one interact time moreov notion fair typic associ implement prevent unfair comput favor particular process interact sever import fair notion propos literatur includ weak interact fair interact continu enabl particip eventu engag interact strong interact fair interact infinit often enabl establish infinit often distinguish characterist interact fair much weaker known fair notion strong interact fair much stronger gener stronger fair notion induc live properti also difficult implement therefor surpris see weak interact fair wide implement eg also surpris see algorithm asymmetr determinist weak interact fair and thu strong interact fair proven imposs symmetr determinist distribut algorithm given process decid autonom attempt interact time cannot predict advanc strong interact fair still possibl even symmetri requir drop note imposs result depend type commun primit eg messagepass sharedmemori provid underli execut model hold long one processs readi multiparti interact known anoth commun time take two process commun nonneglig but finit bound case csp commun guard schedul special case multiparti interact schedul problem interact involv exactli two process random proven effect techniqu cope aforement imposs phenomena ex ampl random algorithm reif spiraki symmetr weak interact fair probabl guarante real time respons two process continu will interact within time interv delta establish interact within delta time high likelihood expect time establish interact constant random algorithm francez rodeh simpler process p express willing establish interact process p j set boolean variabl share two may need wait certain amount time ffi reaccess variabl determin p j likewis interest interact author show that proviso time access share variabl neglig compar ffi algorithm weak interact fair probabl note howev assumpt combin fact lower bound ffi provid may significantli limit algorithm practic furthermor strong interact fair claim either algorithm paper present multi extens francez rodeh random algorithm multiparti case prove multi weak interact fair probabl also show transit process state readi interact independ random draw process then probabl multi strong interact fair knowledg multi first algorithm strong interact fair appear literatur also present detail time analysi multi establish lower bound long process must wait reaccess share variabl consequ algorithm finetun optim perform moreov show expect time establish interact constant depend total number process system thu multi also guarante realtim respons strong interact fair strong fair condit one might actual want impos practic result indic random may also prove fruit notion fair lack determinist realiz requir realtim respons rest paper organ follow section describ multiparti interact schedul problem anthropomorph set known committe coordin random algorithm present section analyz section section conclud committe coordin problem problem schedul multiparti interact asynchron system elegantli character chandi misra one committe coordin professor cf process certain univers organ committe cf interact committe fix membership roster one professor time time professor may decid attend committe meet start wait continu wait meet committe member establish state committe coordin problem formal need follow two assumpt professor attend committe meet leav meet member committe attend meet given member attend committe meet committe member leav meet finit time problem devis algorithm satisfi follow three requir synchron professor attend committe meet member committe eventu attend meet well exclus two committe meet simultan common member weak interact fair professor committe wait eventu professor attend committe meet shall also consid strong interact fair ie committe infinit often enabl establish infinit often committe enabl everi member committe wait disabl otherwis overal behavior professor describ state transit diagram figur state correspond think w correspond wait committe meet e mean professor activ engag meet note algorithm problem control transit professor state w state e two transit is transit w autonom professor moreov assum upper bound time i i i meet start meet readi finish meet figur state transit diagram professor professor spend think otherwis algorithm problem could simpli wait long enough professor becom wait schedul committe meet choos three requir problem strong interact fair would easili satisfi algorithm section present multi random algorithm committe coordin algorithm associ committe counter cm whose valu rang delta delta jprofmj gamma prof m set professor involv cm access professor prof m testop instruct follow result testopcm zeroop nonzeroop effect instruct appli cm oper zeroop valu zero oper nonzeroop otherwis assign variabl result old valu ie valu oper cm oper use noop inc dec exampl return testopcm noop dec leav cm unchang return simplifi present algorithm assum execut testop instruct atom assumpt remov section concurr implement testop consid algorithm multi inform describ follow initi share counter set zero professor p decid attend committe meet randomli choos committe member attempt start meet increas valu cm all increment decrement interpret modulo jprofmj new valu cm ie increment professor p conclud member increas cm one wait p conven goe state e start meet new valu cm zero least one professor profm yet readi wait period time hope partner becom readi reaccess cm cm set professor readi readi p attend meet cm still zero professor still readi p withdraw attempt start decreas valu cm tri anoth committe algorithm execut professor p present figur wait line boolean flag indic whether p wait committe meet constant ffi line amount time professor wait reaccess counter later requir see section ffi greater maximum amount time professor spend execut line note algorithm symmetr sens professor execut code make use process id analysi algorithm section prove multi satisfi synchron exclus requir committe coordin problem and probabl weak strong interact fair also analyz expect time multi take schedul committe meet definit assum discret global time axi where extern observ event system total order intern howev processor may execut instruct simultan time instanc simultan access share counter arbitr implement precis jmax also includ time take execut line simplifi analysi assum boolean flag wait serv indic state execut professor explicit test flag need moreov assum action execut instantan time instanc time take execut action differ time action execut time previou action of professor execut wait f randomli choos committe fm j testopcm inc committe meet establish attend meet els f wait testopcm noop committe meet establish attend meet els tri anoth committe g g figur algorithm multi professor p testop instruct assum execut atom sinc time axi discret meaningless say there infinit mani time instanc finit time interv therefor throughout paper phrase there infinit mani time instanc refer interv analysi purpos present figur refin state transit diagram figur state w refin three substat action taken professor substat are randomli choos new committe execut instruct testopcm inc inc execut instruct testopcm noop dec say professor access counter cm execut testop instruct state w reaccess cm execut testop instruct state w monitor committe state w wait reaccess cm accord algorithm time professor p access counter cm testopcm inc inc state w state w e right t depend valu cm further action transit professor p state state occur time t say p state t state right t ps state defin everi time instanc stipul ps i i i i i readi meet reaccess cm access cm draw finish meet access cm reaccess cm random figur state transit diagram professor execut algorithm ffistart waitingrandom drawrandom drawrandom draw figur time constraint action execut professor more p enter state w time monitor committe time reaccess cm testopcm noop dec depend valu cm time professor either return state w choos anoth committe enter state e attend meet execut algorithm multi professor start wait committe meet state w repeatedli cycl state w w enter committe meet via transit state w w action perform along cycl subject time constraint depict figur particular interv consecut access reaccess action must length ffi interv consecut reaccess access action must length greater j max shall sometim refer former ffiinterv made explicit section durat ffiinterv may vari iter iter algorithm requir ffi greater lower bound determin j max number professor committe current consider figur illustr possibl scenario four professor execut algo state time p execut action time t exampl p access cm time reaccess cm time state w time instanc t ffi note interv open ffi say p state w time t p must access cm time prof prof echoos choos choos echoos choos choos echoos choos choos echoos choos choos figur partial comput four professor rithm p p involv committe involv p involv professor explicitli depict state on yaxi global time instanc on xaxi exampl time professor p start wait committe meet enter state w state time randomli choos access cm time sinc cm access p enter state w monitor unit reaccess cm time sinc p access cm return state w tri anoth committe later time p choos committe access cm time p reaccess cm time find p p will start meet p enter state e attend meet meet end time committe member return state time choos shade area time repres synchron interv three professor properti algorithm hold certainti analyz correct algorithm begin invari valu share counter cm use prove multi satisfi synchron condit committe coordin problem lemma time k professor state w monitor committe professor sinc last enter state w enter state e attend meet valu cm time k k jprof m j if howev time professor enter state e attend meet professor prof m enter state e attend meet proof prove lemma induct time th system event occur lemma hold time initi everi professor prof m state induct hypothesi assum follow time prof m set professor state w monitor committe professor sinc last enter state w enter state e attend meet consid nearest time j j i professor p access reaccess cm sinc professor access reaccess cm t induct hypothesi hold well interv suppos first p access cm instruct testopcm inc inc access cm jprof access which less jprof p enter state w is time j jqj professor state w monitor committe convers access access enter state e sinc j professor q monitor time reaccess cm testopcm noop dec moreov reaccess cm find cm enter state e start see last statement true recal first two assumpt put forth defin committe coordin problem section professor attend leav s member enter state e attend consequ professor attend leav attempt anoth instanc by access cm desir result follow suppos p reaccess cm instruct testopcm noop dec p q sinc cm right ps reaccess return state w right j professor state w monitor theorem synchron professor prof m enter state e time attend meet within ffi time professor prof m enter state e attend meet proof theorem follow immedi lemma theorem simultan common member proof result follow fact professor monitor one committe time properti algorithm hold probabl move prove multi weak strong interact fair analyz time complex need follow two assumpt a ffiinterv professor choos wait committe satisfi condit maximum amount time professor spend execut line multi a professor transit think wait see figur depend random draw perform professor note requir strong interact fair also requir definit random draw professor perform state w decid meet attempt recal say professor access counter cm execut instruct testopcm inc inc line algorithm reaccess cm execut testopcm noop dec line suppos professor p access counter time interv one access choos recent one choic counter must result random draw perform access line let tp denot random draw tp defin p access counter furthermor let tprof prof m tp defin g exampl p state w time t p must access counter interv must defin shall see lemma definit tp guarante tp defin p prof m random draw yield outcom establish henceforth shall use pm denot fix nonzero probabl professor p prof m choos committe random draw thu pprof m probabl set mutual independ random draw one professor prof m yield outcom follow three lemma use fair proof first one say tprof m must refer mutual disjoint set random draw least ffi apart proof directli definit tp lemma assum committe continu enabl interv is enabl time instanc t exist time instanc t sinc continu enabl t everi professor is definit state throughout interv clearli either one follow hold p state w throughout p state w w throughout case i let g tp defin everi p prof m everi given j max thu exist t j lemma proven case ii suppos professor p prof m stay w w t access counter m assum lower bound m p defin p prof m done otherwis must exist anoth professor lower bound still enabl time m p wstate m cannot state w otherwis m p would defin p state w must access counter within j max time assum p access counter argu m m p also defin see thi recal lower bound fact jprof m j still w state time instanc counter m p must enter state w access stay w throughout must defin t fact note defin everi professor prof m done otherwis similar reason must exist third professor prof m m m p defin use argument show exist defin continu fashion show exist k professor prof m m m m k p l defin l k given finit number professor prof m eventu establish exist t tp defin p prof m lemma proven proof lemma illustr figur committe size smallest ffi allow a consequ lemma differ professor choos differ valu ffi valu need satisfi lower bound establish a therefor clock use professor implement timeout need adjust accuraci lemma say that assumpt a committe continu enabl suffici long exist interv length within everi professor prof m perform random draw follow lemma ensur random draw yield outcom must establish lemma jd tprof m random draw tprof m yield outcom such ffi refer definit tprof m statement lemma understood minimum maximum relev ffi valu respect continu enabl gammareadyaccessreaccess gammareaccessaccess gammareaccessaccess access figur illustr proof lemma maximum possibl interv throughout enabl jd tprofm j jprofm j jprofm must defin note ffi min would equal would defin time professor must alreadi enter state e start time professor prof m enter state e start proof assum hypothes describ lemma let p prof m first professor which perform random draw tprof m access cm testopcm inc inc prof m last professor so let j time p p j respect access cm then t cm time reaccess cm professor access cm t remain state w p j access cm lemma access p j access cm j set cm zero enter state e start moreov time ffi everi professor learn start reaccess cm testopcm noop dec also enter state e start sinc ffi lemma thu establish note lemma reli fact access involv definit tp occur interv open close t relax definit close interv correct lemma would depend accessreaccess conflict counter resolv implement see thi suppos p access counter counter t new definit tp tp defin suppos random draw yield outcom involv access counter cm t respect assum algorithm p wait ffi time reaccess cm t caus conflict p s access time clearli establish conflict resolv favor access ie p get go first theorem weak interact fair assum member committe wait committe meet probabl eventu meet involv member start proof assum a suppos enabl t let jprof m j consid probabl continu enabl t continu enabl t exist time instanc jd prof m j random draw prof m yield outcom then lemma must disabl even random draw yield outcom professor may still establish anoth committe meet random draw outcom time professor also interest probabl random draw prof m caus committe involv member start greater probabl continu enabl t similarli still enabl lemma must exist anoth time instanc prof m contain complet new set random draw size jprof m j again probabl remain enabl random draw greater given random draw prof m caus member attend meet probabl continu enabl time greater still enabl anoth new set random draw prof m size jprof m j gener probabl remain continu enabl mutual disjoint set random draw prof tend infin tend zero probabl zero remain enabl forev intuit requir ffi paramet use algorithm larg enough professor reaccess counter professor get chanc access counter reaccess access reaccess access reaccess reaccess access reaccess access reaccess figur two professor wait forev without establish meet due bad choic ffi assumpt remov theorem set professor could access reaccess counter forev without ever establish committe meet illustr consid figur professor reaccess counter professor could access counter matter committe choos random draw time professor see result counter set professor strong interact fair properti algorithm addit requir assumpt lemma probabilist behavior larg number random draw lemma assum a infinit mani ts jd tprof m probabl random draw tprof m produc outcom infinit mani ts infinit sequenc increas time instanc jd prof m jprof m j wlog assum i set prof m pairwis disjoint consid random draw set prof m let em denot event random draw produc outcom a probabl em s occurr independ time random draw made given m defin random variabl em occur otherwis law larg number see exampl ffl lim is n tend infin probabl n tend m therefor probabl set fi j henc probabl infinit mani is random draw prof m produc outcom theorem strong interact fair assum a committe enabl infinit often probabl committe conven infinit often proof sinc algorithm satisfi weak interact fair assum infinit mani is becom enabl time instanc let either infinit mani is continu enabl interv t start point onward whenev becom enabl professor prof m attend committe meet interv consid case lemma a infinit mani is interv contain time instanc jd tprof m j lemma a probabl infinit mani ts random draw tprof m produc outcom lemma probabl conven infinit often consid case wlog assum interv t contain time instanc previou argument also show conven infinit often probabl let q prof m set professor access counter time wait time attend committe meet q q let qs first access let denot qs random draw perform right a ps latest random draw perform time note sinc p w state defin outcom must caus p attend committe meet time let g a random draw mutual independ nonzero probabl m yield outcom therefor law larg number see proof lemma probabl infinit mani is random draw yield outcom random draw yield outcom either meet establish professor prof m still wait perform anoth random draw access new counter techniqu similar lemma seen later case would abl find time instanc t j assumpt case conclud probabl conven infinit often note assumpt drop theorem conspiraci strong interact fair devis illustr consid system two professor p p three committe involv involv p involv p p suppos p becom wait toss coin choos either malici could remain think p select p becom wait random draw perform p s latest random draw yield outcom select start p remain meet p wait howev enabl soon p becom wait similarli could also remain think p select scenario repeat ad infinitum result comput would strong interact fair time complex algorithm analyz follow theorem assum worst case scenario professor spend j max time execut line multi theorem time complex assum professor spend j max time execut line multi assum a ie amount time ffi professor spend monitor interact greater expect time take member committe start meet time becom enabl greater proof suppos becom enabl time t consid first exist time instanc assum first enabl conflict committe enabl simultan two committe conflict share common member enabl professor prof m attend meet lemma random draw jd prof m j yield outcom an event occur probabl m professor prof m start meet time otherwis professor prof m must perform anoth random draw access select counter within j from time reaccess previou select counter must exist anoth time instanc contain complet new set random draw one professor prof m again new random draw yield outcom professor start committe meet probabl disabl time gener let prof m th set random draw perform professor ffi probabl disabl time ffi expect time start member enter state e start meet greater assum committe conflict enabl enabl impli set random draw prof m random draw must yield outcom member start meet conflict committe enabl simultan random draw prof m may still lead committe meet even yield outcom henc expect time start member enter state e start meet actual less j conflict committe enabl simultan assum next exist time instanc must disabl s disabled must result professor random draw lead establish committe meet involv professor disabl time must also probabilist event therefor case expect time start member enter state e start meet greater j given expect time greater therefor either case expect time start member enter state e start meet greater j intuit theorem state expect time member prof m start committe meet wait greater amount time execut one round whileloop multi ie divid probabl professor random draw choos committe ie m note j max constant determin size number member largest committe call valu max let j probabl m constant determin size maximum number committe professor member call valu c pprof m final ffi constant determin therefor time complex algorithm bound follow constant worst case max could equal total number professor c max could equal total number committe system which turn could depend total number professor practic gener known paramet must kept small independ total number professor system contrast determinist algorithm committe coordin time complex c constant n total number professor system time complex algorithm depend explicitli n use prioriti beak symmetri among professor such lower prioriti professor may wait higher prioriti professor attempt establish conflict committe higher prioriti professor turn may wait anoth higher prioriti professor on recal section symmetr determinist distribut solut committe coordin c max max kept small independ n multi addit guarante strong interact fair outperform determinist algorithm provid realtim respons nonatom implement testop promis section present nonatom henc concurr implement testop instruct recal execut statement testopcm zeroop nonzeroop actual involv two action read cm appli cm oper zeroop oper nonzeroop otherwis precis action read follow inc professor execut testopcm inc inc access counter read follow decnoop execut testopcm noop dec reaccess counter clearli appli mutual exclus algorithm see survey ensur access reaccess counter proce atom thi howev overkil exampl scheme synchroni loosen therefor propos reduc size interact practic applic algorithm multi allow professor distributedli establish committe meet own determinist algorithm employ manag coordin committe meet time complex algorithm depend number manag use three count boolean test access counter execut concurr see thi consid three possibl interleav execut two testopcm inc inc read read inc inc read read inc inc read inc read inc observ first two execut effect caus execut professor enter state w monitor valu cm return read less valu two access less jprof third execut two access proceed atom also effect cm s valu two access jprof m gamma j third execut professor execut first access enter w monitor professor enter state e start meet first professor ffiinterv expir learn meet establish reaccess cm also enter state e start meet situat similar first two execut professor enter state e start meet reaccess counter three interleav execut preserv synchron properti algorithm break atom testop clearli effect algorithm exclus fair properti note system perform may increas revers order execut read inc action implement testopcm inc inc see thi consid case two professor attempt access cm simultan follow two possibl interleav execut inc inc read read inc inc read read suppos cm s valu access jprof two increment professor upon read valu cm learn professor interest enter state e start meet moreov new implement assum basic machinelevel instruct inc dec load store execut atom thu two instruct execut concurr result equival sequenti execut unknown order concurr access counter allow one professor may access cm simultan enter state w monitor cm jprof access likewis lemma assum access counter atom need slightli chang reflect possibl professor prof m state w time inc still ensur multi synchron properti regardless action overlap testopcm inc inc instruct interleav similarli interleav read decnoop differ professor reaccess counter cannot invalid algorithm synchron properti simultan access reaccess counter may conflict illustr suppos p wish access cm p wish reaccess suppos valu cm attempt jprof access proce atom p s reaccess professor enter state e start meet howev four constitu action interleav follow read inc read dec decrement cm one go state w select new committe hand sinc p s decrement discov thu enter state e start henc synchron requir violat ensur access reaccess counter mutual exclus time allow concurr access concurr reaccess implement testopcm inc inc testopcm noop dec use algorithm shown figur algorithm base dekker algorithm biprocess critic section problem and discuss abov return new valu cm cm access count counter record number professor attempt access cm cm reaccess count record number professor attempt reaccess cm counter initi zero furthermor variabl cm turn initi access use resolv conflict access reaccess seen professor enter critic section access cm cm access count professor attempt access cm may modifi cm access count test cm reaccess count cm access count follow professor p enter critic section access cm professor simultan enter critic section reaccess cm moreov professor enter critic section new implement adopt line figur need chang if testopcm inc inc testopcm inc inc return valu cm access note howev testopcm no op dec must still return valu cm access return valu cm access return valu zero execut professor p would abl tell p interest so p decreas cm one return state w retri anoth committe member prof m interest so p leav cm unchang enter state e start meet inc cm access count cm reaccess count cm turn reaccess f dec cm access count cm turn reaccess noop inc cm access count g begin critic section incc return readc end critic section dec cm access count cm access count cm turn reaccess figur implement testopcm inc inc inc cm reaccess count cm access count cm turn access f dec cm reaccess count cm turn access noop inc cm reaccess count g begin critic section readc els f return readc end critic section dec cm reaccess count cm reaccess count figur implement testopcm noop dec reaccess cm p alreadi critic section yet left critic section similarli professor critic section reaccess cm professor enter critic section access cm mutual exclus properti therefor hold note possibl professor critic section say access cm professor alreadi flip cm turn reaccess line figur howev prematur flip cm turn cannot invalid algorithm mutual exclus properti enter critic section reaccess cm depend valu cm turn rather valu cm access count long professor critic section access cm cm access count remain greater professor exit whileloop figur line reaccess cm algorithm also deadlockfre see thi consid arbitrari time instanc prof m set professor wish access cm r prof m set professor wish reaccess cm definit consid plight p similar reason appli case reaccess obvious p succeed otherwis happen next depend valu cm turn cm turn access professor r must undo increment cm reaccess count wait line figur cm turn flip reaccess cm reaccess count reset zero p enter critic section convers cm turn reaccess p professor must undo increment cm access count collect reset valu variabl zero wait line figur professor r enter critic section flip cm turn access moreov algorithm permit concurr access and concurr reaccess too mean professor p attempt access cm professor p access counter may succeed even alreadi third professor wait reaccess cm critic section cm turn access professor wait reaccess cm block line figur cm reaccess count p immedi enter critic section note allow subsequ professor concurr access counter cannot indefinit delay professor wait reaccess counter number professor committe finit professor ps access cm must follow reaccess counter unless ps access lead committe meet case professor must enter state e wait member finish reaccess start meet assumpt time access reaccess ie ffiinterv must long enough professor finish access note permit concurr access highli desir increas likelihood establish committe meet exampl suppos two set professor wait access reaccess cm respect professor alreadi access counter defer reaccess access proceed help member reach consensu schedul access reaccess fair manner eg altern add help establish s meet conclus present multi new random algorithm schedul multiparti interact shown properli set valu ffi the amount time process will wait interact establish algorithm weak strong interact fair probabl result hold even time take access share variabl the commun delay nonneglig knowledg make multi first algorithm strong interact fair appear literatur strong interact fair proven imposs determinist algorithm result therefor indic random feasibl effici countermeasur imposs phenomena furthermor sinc known fair notion weaker strong interact fair implement via random exampl strong process fair process infinit often readi enabl interact shall particip interact infinit often also realiz random algorithm spite fact cannot implement determinist multiparti interact schedul multi extens francez rodeh random algorithm csplike biparti inter action francez rodeh abl claim weak interact fair algorithm limit assumpt commun time neglig compar ffi case strong interact fair would possibl even determinist set also analyz time complex algorithm like reif spirakiss realtim algorithm expect time taken multi establish interact constant depend total number process system although multi present sharedmemori model easili convert messagepass algorithm let process maintain share variabl process commun messag pass obtain valu variabl time readwrit share variabl account time take deliv messag ffi paramet assumpt properli adjust reflect new commun delay weak strong interact fair notion still guarante probabl multi origin describ section use oper testop process access share counter atom oper rather complex gener avail moreov unnecessarili elimin potenti concurr so section propos implement testop use basic atom instruct inc dec load store implement multi machin support atom execut instruct could well case inc dec interest open problem discuss section implement testop would much simpler generalpurpos mutual exclus algorithm use instead howev know mutual exclus algorithm allow concurr access critic section access conflict one anoth therefor design solut final unlik determinist algorithm random algorithm multi guarante averagecas behavior worstcas bound would therefor interest conduct simul studi multi measur respons time practic set experi size max c max see section vari small constant larg valu approach number professor system would especi insight acknowledg would like thank anonym refere care read manuscript valuabl comment r apprais fair languag distribut program ming fair abstract design distribut system fair hyperfair multiparti interact process synchron design perform evalu distribut algo rithm foundat parallel program design cours probabl theori interact process multiparti approach coordin distribut program distribut abstract data type implement probabilist commun scheme character fair implement multiparti interact coordin firstord multiparti interact comprehens studi complex multiparti interact implement nparti synchron use token advantag free choic symmetr fulli distribut solut dine philosoph problem extend abstract distribut synchron scheme fair multiprocess handshak new effici implement multiprocess synchron algorithm mutual exclus real time synchron interprocess commun distribut algorithm ensur fair interprocess commun imposs result interprocess synchron tr ctr catuscia palamidessi oltea mihaela herescu random encod calculu mix choic theoret comput scienc v n p may rafael corchuelo jo a prez antonio ruizcort aspectori interact multiorganis webbas system comput network intern journal comput telecommun network v n p march