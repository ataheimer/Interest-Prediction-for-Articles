t parallel algorithm discoveri associ rule a discoveri associ rule import data mine task sever parallel sequenti algorithm propos literatur solv problem almost algorithm make repeat pass databas determin set frequent itemset a subset databas item thu incur high io overhead parallel case algorithm perform sumreduct end pass construct global count also incur high synchron costin paper describ new parallel associ mine algorithm algorithm use novel itemset cluster techniqu approxim set potenti maxim frequent itemset set identifi algorithm make use effici travers techniqu gener frequent itemset contain cluster propos two cluster scheme base equival class maxim hypergraph cliqu studi two lattic travers techniqu base bottomup hybrid search use vertic databas layout cluster relat transact togeth databas also select replic portion databas need comput associ local processor initi setup phase algorithm need commun synchron algorithm minim io overhead scan local databas portion twice setup phase process itemset cluster unlik previou parallel approach algorithm use simpl intersect oper comput frequent itemset maintain search complex hash structuresour experiment testb processor dec alpha cluster interconnect memori channel network present result perform algorithm variou databas compar well known parallel algorithm best new algorithm outperform order magnitud b introduct recent progress autom data gather avail cheap storag lot busi routin start collect massiv amount data variou facet organ eventu goal data gather abl use inform gain competit edg discov previous unknown pattern data guid decis make highlevel infer process may provid host use inform custom group buy pattern stock trend etc process automat inform inferenc commonli known knowledg discoveri data mine kdd look one central kdd task mine associ discoveri associ rule import problem databas mine prototyp applic analysi sale basket data agraw et al basket data consist item bought custom along transact identifi besid retail sale exampl associ rule shown use domain decis support telecommun alarm diagnosi predic tion univers enrol etc problem statement problem mine associ basket data introduc agraw imielinski swami formal state as let set distinct attribut also call item transact databas transact uniqu identifi contain set item call itemset i ie transact itemset k item call kitemset subset length k call ksubset itemset said support s transact contain itemset associ rule express b itemset a b ae i confid associ rule given bsupporta simpli condit probabl transact contain b given contain a data mine task associ rule broken two step first step consist find frequent itemset ie itemset occur databas certain userspecifi frequenc call minimum support second step consist form condit implic rule among frequent itemset agraw srikant second step rel straightforward support frequent itemset known rule form gener frequent itemset provid rule meet desir confid hand problem identifi frequent itemset hard given item potenti frequent itemset form lattic subset i howev small fraction whole lattic space frequent discov frequent itemset requir lot comput power memori disk io provid parallel comput effici parallel method need discov relev itemset focu paper relat work sequenti algorithm sever algorithm mine associ propos literatur apriori algorithm mannila toivonen verkamo agraw srikant agraw et al shown superior perform earlier approach agraw imielinski swami park chen et al houtsma swami form core almost current algorithm apriori use downward closur properti itemset support prune itemset lattic properti subset parallel associ rule frequent itemset must frequent thu frequent kitemset use construct candid itemset pass databas made level find frequent itemset among candid larg disk resid databas algorithm incur high io overhead scan iter partit algorithm savaser omiecinski navath minim io scan databas twice partit databas small chunk handl memori first pass gener set potenti frequent itemset ani itemset local frequent partit second pass global support obtain anoth way minim io overhead work small random sampl databas toivonen zaki et al a recent propos new algorithm zaki et al b scan databas onc gener frequent itemset new algorithm shown outperform previou apriori base approach order magnitud zaki et al b perform gain obtain use effect itemset cluster lattic travers techniqu paper present effici parallel implement new algorithm parallel algorithm rel less work parallel mine associ three differ parallel apriori distributedmemori machin ibm sp present agraw shafer count distribut algorithm straightforward parallel apriori processor gener partial support candid itemset local databas parti tion end iter global support gener exchang partial support among processor data distribut algorithm partit candid disjoint set assign differ proce sor howev gener global support processor must scan entir databas it local partit remot partit iter thu suffer huge commun overhead candid distribut algorithm also partit candid select replic databas processor proce independ local databas portion still scan everi iter count distribut shown superior perform among three algorithm agraw shafer parallel algorithm improv upon idea term commun effici aggreg memori util also propos cheung et al b a han karypi kumar pdm algorithm park chen yu b present parallel dhp algorithm park chen yu a how ever pdm perform wors count distribut agraw shafer recent work present ccpd parallel algorithm sharedmemori machin zaki et al similar spirit count distribut candid itemset gener parallel store hash structur share among processor processor scan logic partit databas atom updat count candid share hash tree ccpd use addit optim candid balanc hashtre balanc shortcircuit subset count speed perform zaki et al also present new parallel algorithm eclat zaki parthasarathi li dec alpha cluster eclat use equival class itemset cluster scheme along bottomup lattic travers shown outperform count distribut order magnitud paper present parallel result new cluster travers techniqu contribut main limit current parallel algorithm park chen yu b zaki et al agraw shafer cheung et al b a make repeat pass diskresid databas partit incur high io overhead furthermor scheme involv exchang either count candid remot databas partit iter result high commun synchron overhead previou algorithm also use complic hash structur entail addit overhead maintain search them typic suffer poor cach local parthasarathi work contrast approach sever way present new parallel algorithm fast discoveri associ rule base idea zaki parthasarathi li zaki et al b new parallel algorithm character term cluster inform use group relat itemset term lattic travers scheme use search frequent itemset propos two cluster scheme base equival class maxim uniform hypergraph cliqu util two lattic travers scheme base bottomup hybrid topdownbottomup search algorithm also use differ databas layout cluster relat transact togeth work distribut among processor way processor comput frequent itemset independ use simpl intersect oper interest benefit use simpl intersect algorithm propos implement directli gener purpos databas system holsheim et al houtsma swami techniqu elimin need synchron initi setup phase enabl us scan databas two time drastic cut io overhead experiment testb processor dec alpha smp cluster host processorshost interconnect memori channel gillett network new parallel algorithm also novel util machin configur inform ie assum distributedmemori model across cluster host assum sharedmemori model processor host experiment show new algorithm outperform well known count distribut algorithm also present extens perform result speedup sizeup commun cost memori usag rest paper organ follow begin provid detail sequenti apriori algorithm section describ previou apriori base parallel algorithm present main idea behind new algorithm itemset transact cluster lattic travers techniqu section section describ design implement parallel associ rule new parallel algorithm experiment studi present section conclus section sequenti apriori algorithm section briefli describ apriori algorithm agraw et al sinc form core parallel algorithm agraw shafer cheung et al b a han karypi kumar park chen yu b zaki et al apriori use downward closur properti itemset support subset frequent itemset must also frequent thu iter algorithm itemset found frequent previou iter use gener new candid set prune step elimin candid least one whose subset frequent complet algorithm shown tabl three main step candid kth pass gener join l kgamma itself express as c denot ith item x i j denot item index j itemset x exampl let l bc bd be deg c bdeg tabl apriori algorithm ffrequent itemset transact ksubset set frequent itemset insert itemset c k apriori test whether frequent prune step elimin lot unnecessari candid candid c k store hash tree facilit fast support count intern node hash tree depth contain hash tabl whose cell point node depth itemset store leav insert procedur start root hash success item insert candid leaf count c k transact databas ksubset transact gener lexicograph order subset search hash tree count candid increment match subset comput intens step algorithm last step form l k select itemset meet minimum support criterion detail zaki parthasarathi ogihara li perform characterist apriori refer reader agraw srikant aprioribas parallel algorithm section look previou parallel algorithm algorithm assum databas partit among processor equals block resid local disk processor count distribut algorithm agraw shafer simpl parallel apriori processor gener entir candid hash tree processor thu independ get partial support candid local databas partit follow sumreduct obtain global count note partial count need commun rather merg differ hash tree sinc processor copi entir tree global l k determin processor build c k par allel repeat process frequent itemset found simpl algorithm minim commun sinc count exchang among processor howev sinc entir hash tree replic processor util aggreg memori effici implement count distribut use comparison experi differ slightli descript optim testb configur one copi hash tree resid host cluster processor host share hash tree processor still local databas portion use local array gather local candid support sumreduct accomplish two step first step perform reduct among local processor host second step perform reduct among host also util optim techniqu hashtre balanc shortcircuit subset count zaki et al improv perform count distribut data distribut algorithm agraw shafer design util total system memori gener disjoint candid set processor howev gener global support processor must scan entir databas it local partit remot partit iter thu suffer high commun overhead perform poorli compar count distribut agraw shafer candid distribut algorithm agraw shafer use properti frequent itemset agraw shafer zaki et al partit candid iter l processor gener disjoint candid independ processor time databas select replic processor gener global count independ choic redistribut pass involv tradeoff decoupl processor depend soon possibl wait suffici load balanc achiev experi repartit done fourth pass depend processor processor prune candid processor asynchron broadcast local frequent set processor parallel associ rule iter prune inform use arriv time otherwis use next iter note processor must still scan local data per iter even though use problemspecif inform perform wors count distribut agraw shafer candid distribut pay cost redistribut databas scan local databas partit repeatedli usual larger jjdjjp effici cluster travers techniqu section present techniqu cluster relat frequent itemset togeth use equival class maxim uniform hypergraph cliqu describ bottomup hybrid itemset lattic travers techniqu also present techniqu cluster relat transact togeth use vertic databas layout layout abl better exploit propos cluster travers scheme also facilit fast itemset support count use simpl intersect rather maintain search complex data structur itemset cluster lattic subset border frequent itemset lattic subset lattic subset sublattic induc maxim itemset figur lattic subset maxim itemset induc sublattic motiv need itemset cluster mean exampl consid lattic subset set f g shown figur the empti set omit figur frequent itemset shown dash circl two maxim frequent itemset a frequent itemset maxim proper subset frequent itemset shown bold circl due downward closur properti itemset support fact subset frequent itemset must frequent frequent itemset form border frequent itemset lie border infrequ itemset lie it border frequent itemset shown bold line figur optim associ mine algorithm enumer test frequent itemset ie algorithm must effici determin structur border structur precis determin maxim frequent itemset border correspond sublattic induc maxim frequent itemset sublattic shown figur given knowledg maxim frequent itemset design effici algorithm simpli gather support support subset singl databas pass gener cannot precis determin maxim itemset intermedi step algorithm howev approxim set itemset cluster techniqu design group item togeth obtain superset maxim frequent itemset potenti maxim frequent itemset present two scheme gener set potenti maxim itemset base equival class maxim uniform hypergraph cliqu two techniqu repres tradeoff precis potenti maxim itemset gener comput cost hypergraph cliqu approach give precis inform higher comput cost equival class approach sacrific qualiti lower comput cost equival class cluster let reconsid candid gener step apriori let l f abc abd abe acd ace ade bcd bce bdeg assum l kgamma lexicograph sort partit itemset l kgamma equival class base common prefix ie equival class l kgamma given as candid kitemset simpli gener itemset within class join pair class identifi prefix exampl obtain equival class feg observ itemset produc equival class a name set fabc abd abe acd ace adeg independ produc class b the set fbcd bce bdeg class member elimin sinc candid gener it thu discard class d idea partit l equival class independ propos agraw shafer zaki et al equival partit use zaki et al parallel candid gener step ccpd also use candid distribut agraw shafer partit candid disjoint set parallel associ rule intermedi step algorithm set frequent itemset l k determin gener set potenti maxim frequent itemset l k note entir item univers maxim itemset howev k extract precis knowledg associ among item larger valu k precis cluster exampl figur show equival class obtain instanc equival class potenti maxim frequent itemset exampl class gener maxim itemset maxim uniform hypergraph cliqu cluster let set item denot vertex set hypergraph berg famili edg subset i e n simpl hypergraph hypergraph simpl graph simpl hypergraph whose edg cardin maximum edg cardin call rank j edg cardin h call uniform hypergraph simpl uniform hypergraph rank r call runiform hypergraph subset x ae i subhypergraph induc x given as ng runiform complet hypergraph vertic denot k r consist rsubset i runiform complet subhypergraph call runiform hypergraph cliqu hypergraph cliqu maxim contain cliqu hypergraph rank correspond familiar concept maxim cliqu graph given set frequent itemset l k possibl refin cluster process produc smaller set potenti maxim frequent itemset observ use given frequent mitemset k ksubset must frequent graphtheoret term item vertex hypergraph ksubset edg frequent mitemset must form kuniform hypergraph cliqu furthermor set maxim hypergraph cliqu repres approxim upperbound set maxim potenti frequent itemset true maxim frequent itemset contain vertex set maxim cliqu state formal lemma below hlk kuniform hypergraph vertex set i edg set l k let c set maxim hypergraph cliqu h ie let set vertex set cliqu c maxim frequent itemset f f t exampl uniform hypergraph cliqu cluster given figur exampl case l thu correspond instanc gener cluster techniqu reduc case find maxim cliqu regular graph figur show equival class maxim cliqu within them also show graph class maxim cliqu it seen immedi cliqu cluster accur equival class cluster exampl equival class cluster produc potenti maxim frequent itemset hypergraph cliqu frequent itemset equival class graph maxim cliqu equival class maxim cliqu per class equival class figur equival class uniform hypergraph cliqu cluster cluster produc refin set f g equival class maxim cliqu discov use dynam program algorithm class x x said cover subset x given class c first identifi cover set given fy cjcovi covi covz z c z yg recurs gener maxim cliqu element cover set class maxim cliqu cover set prefix class identifi eliminat ing duplic obtain maxim cliqu current class see zaki et al c detail gener graph maxim cliqu decis problem npcomplet garey johnson howev equival class graph usual spars maxim cliqu enumer effici edg densiti increas cliqu base approach may suffer factor affect edg densiti includ decreas support increas transact size effect paramet present zaki et al b parallel associ rule lattic travers equival class uniform hypergraph cliqu cluster scheme gener set potenti maxim frequent itemset potenti maxim itemset induc sublattic lattic subset databas item i travers sublattic determin true frequent item set goal devis effici scheme precis determin structur border frequent itemset differ way expand frequent itemset border lattic space possibl present two scheme travers sublattic one pure bottomup approach hybrid topdownbottomup scheme support potenti maxim frequent itemset sort itemset support topdown phase true maxim frequent itemset hybrid travers figur bottomup hybrid lattic travers bottomup lattic travers consid exampl shown figur show particular instanc cluster scheme use l gener set potenti maxim itemset let assum equival class one potenti maxim itemset true maxim frequent itemset support itemset class also shown like figur dash circl repres frequent set bold circl maxim itemset box denot equival class potenti maxim itemset form lattic element equival class g need travers lattic determin true frequent itemset pure bottomup lattic travers proce breadthfirst manner gener frequent itemset length k gener itemset level k ie intermedi step determin border frequent kitemset exampl pair element join produc new equival class frequent itemset name produc maxim itemset g next step yield frequent class produc maxim itemset current algorithm use approach exampl process gener c k l kgamma use apriori agraw et al relat algorithm savaser omiecinski navath park a pure bottomup explor lattic space sinc bottomup approach frequent subset maxim frequent itemset gener intermedi step travers hybrid topdownbottomup search bottomup approach make full use cluster inform use cluster restrict search space may gener spuriou candid intermedi step sinc fact subset itemset frequent guarante itemset frequent exampl itemset figur infr quent even though frequent envis travers techniqu quickli identifi set true maxim frequent itemset set known either choos stop point interest maxim itemset gather support subset well all subset known frequent definit paper restrict attent identifi maxim frequent subset one possibl approach perform pure topdown travers cluster sublattic scheme may thought tri determin border infrequ itemset start top element lattic work way down exampl consid potenti maxim frequent itemset figur turn frequent done case frequent check whether subset frequent step ksubset turn frequent need check subset approach work well practic sinc cluster approxim maxim frequent itemset lot infrequ superset true maxim frequent itemset may gener exampl would gener infrequ itemset use pure topdown scheme instead two infrequ itemset gener pure bottomup approach therefor propos hybrid topdown bottomup approach work well practic parallel associ rule basic idea behind hybrid approach quickli determin true maxim itemset start singl element cluster frequent k itemset extend one itemset till gener infrequ itemset compris topdown phase bottomup phase remain element combin element first set gener addit frequent itemset import consider topdown phase determin element cluster combin approach first sort itemset cluster descend order support start element maximum support extend next element sort order approach base intuit larger support like itemset part larger itemset figur show exampl hybrid scheme cluster itemset sort itemset decreas order support intersect produc extend join final find infrequ remain element simpli join element produc frequent itemset class gener maxim itemset bottomup hybrid approach contrast figur pseudocod scheme shown tabl transact cluster databas layout kdd process consist variou step fayyad piatetskyshapiro smyth initi step consist creat target dataset focus certain attribut via data sampl databas creation may requir remov unnecessari inform suppli miss data transform techniqu data reduct project user must determin data mine task choos suitabl algorithm exampl discoveri associ rule next step involv interpret discov associ possibl loop back previou step discov understand pattern import consider data preprocess step final represent data layout dataset anoth issu whether preliminari invari inform glean process two possibl layout target dataset associ mine horizont vertic layout horizont data layout format standardli use literatur see eg agraw srikant mannila toivonen verkamo agraw et al dataset consist list transact transact transact identifi tid follow list item transact format impos comput overhead support count step particular transact averag length l iter k gener test whether gamma l ksubset transact contain c k perform fast subset check candid store complex hashtre data structur search relev candid thu add addit comput overhead furthermor horizont layout forc us zaki parthasarathi ogihara li item tid item tid horizont layout vertic layout figur horizont vertic databas layout scan entir databas local partit iter count candid distribut must pay extra overhead entail use horizont layout furthermor horizont layout seem suitabl bottomup explor frequent border appear extrem complic implement hybrid approach use horizont format altern approach store potenti maxim itemset subset data structur fast lookup eg hashtre agraw et al gather support singl databas scan plan explor later paper vertic data layout vertic or invert layout also call decompos storag structur holsheim et al dataset consist list item item follow tidlist list transact identifi contain item exampl success use layout found holsheim et al savaser omiecinski navath zaki parthasarathi li zaki et al b vertic layout suffer overhead describ horizont layout due follow three reason first tidlist sort increas order support candid kitemset comput simpli intersect tidlist two data structur need maintain gener ksubset transact perform search oper hash tree second tidlist contain relev inform itemset enabl us avoid scan whole databas comput support count itemset layout therefor take advantag principl local frequent itemset cluster itemset gener parallel associ rule move next cluster third larger itemset shorter tid list practic alway true result faster intersect exampl consid figur contrast horizont vertic layout for simplic shown null element realiti spars storag use tidlist a given g tidlist ab simpli g immedi determin support count number element tidlist meet minimum support criterion insert ab l intersect among tidlist perform faster util minimum support valu exampl let assum minimum support intersect two itemset ab support ac support stop intersect moment mismatch ab sinc support abc bound use optim call shortcircuit intersect fast join invert layout howev drawback examin small itemset tend costlier horizont layout employ tidlist small itemset provid littl inform associ among item particular inform present tidlist itemset exampl databas m transact frequent item averag item per transact tidlist averag size find frequent itemset intersect pair item requir oper hand horizont format simpli need form pair item appear transact increment count requir gamma number possibl solut problem use preprocess step gather occurr count itemset sinc inform invari perform lifetim databas cost amort number time data mine inform also increment updat databas chang time store count itemset support greater user specifi lower bound thu requir less storag first approach use small sampl would fit memori determin superset frequent itemset l lower minimum support use simpl intersect sampl tidlist sampl experi toivonen zaki et al a indic feasibl approach superset determin easili verifi true frequent itemset among them current implement use preprocess approach due simplic plan implement sampl approach later paper solut repres differ tradeoff sampl approach gener l onthefli extra databas pass preprocess approach requir extra storag item count storag requir om disk space quit larg larg valu m howev use experi add memori channel address receiv transmit transmit receiv receiv figur memori channel space line region map transmit receiv node receiv node gray region map receiv node transmit node small extra storag overhead use second approach reduc storag requir may requir extra scan lower bound support chang note also databas requir amount memori horizont vertic format thi obviou figur new parallel algorithm design implement dec memori channel digit memori channel mc network gillett provid applic global address space use memori map region region map process address space transmit receiv both virtual address region map physic address locat io space mc pci adapt virtual address receiv region map physic ram write transmit region collect sourc mc adapt forward destin mc adapt hub transfer via dma receiv region global identifi see figur region within node share across differ processor node write origin given node sent receiv region node loopback enabl region use loopback featur use writedoubl instead processor write receiv region transmit region process host see modif made process host though pay cost doubl write reduc amount messag hub system unicast multicast processtoprocess write latenc s perlink transfer bandwidth mb mc peak aggreg bandwidth also mb memori channel guarante write order local cach parallel associ rule coher two write issu transmit region even differ node appear order everi receiv region write appear receiv region invalid local cach copi line initi databas partit assum databas vertic format support count itemset avail local host assum databas tidlist initi partit among host partit done offlin similar assumpt made count distribut agraw shafer tidlist partit total length tidlist local portion host roughli equal achiev use greedi algorithm item sort support next item assign least load host note entir tidlist item resid host figur show origin databas result initi partit two processor new parallel algorithm present four new parallel algorithm depend cluster lattic travers scheme use ffl pareclat use equival class cluster bottomup lattic travers ffl parmaxeclat use equival class cluster hybrid travers ffl parcliqu use maxim uniform hypergraph cliqu cluster bottomup lattic travers ffl parmaxcliqu use maxim uniform hypergraph cliqu cluster hybrid travers algorithm use bottomup lattic travers name pareclat par cliqu gener frequent itemset use hybrid travers name parmaxeclat parmaxcliqu gener maxim frequent itemset note earlier trivial modifi hybrid travers algorithm gener frequent itemset interest examin benefit quickli identifi maxim element hybrid scheme present parallel design implement issu applic four algorithm parallel design implement new algorithm overcom shortcom count candid distribut algorithm util aggreg memori system partit itemset cluster disjoint set assign differ processor depend among processor decoupl right begin equival class equival class weight equival class assign p partit databas origin databas tidlist tidlist commun sublattic p sublattic p sublattic induc l figur databas partit cluster schedul parallel associ rule tabl pseudocod new parallel algorithm begin parassoci initi phase form l itemset support count gener cluster l use equival class uniform hypergraph cliqu partit cluster among processor p scan local databas partit transmit relev tidlist processor receiv tidlist processor asynchron phase assign cluster c comput frequent itemset bottomupc hybridc final reduct phase aggreg result output associ end parassoci redistribut cost amort later iter sinc processor proceed independ costli synchron end iter furthermor new algorithm use vertic databas layout cluster relev inform itemset tidlist processor comput frequent itemset one cluster proceed next local databas partit scan onc contrast candid distribut must scan iter algorithm pay extra comput overhead build search complex data structur gener subset transact intersect perform itemset immedi insert l k notic tidlist also automat prune irrelev transact itemset size increas size tidlist decreas result fast intersect two distinct phase algorithm initi phase respons commun tid list among processor asynchron phase gener frequent itemset pseudocod new algorithm shown tabl initi phase initi step consist three substep first support count itemset preprocess step read frequent one insert l second appli one two cluster scheme l equival class maxim hypergraph cliqu cluster set potenti maxim frequent itemset gener potenti maxim cluster partit among processor suitabl level loadbalanc achiev third databas repartit processor local disk tidlist itemset cluster assign it schedul first partit l equival class use common prefix describ abov use equival class cluster alreadi potenti maxim itemset howev use cliqu cluster gener maxim cliqu within class see section next gener schedul equival class differ processor manner minim load imbal minim interprocess commu nicat note may necessari sacrific amount load balanc better commun effici reason whole equival class includ maxim cliqu within them assign processor load balanc achiev assign weight factor equival class base number element class sinc consid pair next iter assign weight class element weight assign gener schedul use greedi heurist sort class weight assign class turn least load processor ie one least total weight point tie broken select processor smaller identifi step done concurr processor sinc access global l figur show exampl along equival class weight assign class two processor notic entir sublattic induc given class assign singl processor lead better load balanc even though partit may introduc extra comput exampl frequent cannot frequent either sinc belong differ equival class assign differ processor inform use although size class give good indic amount work better heurist gener weight possibl exampl could better estim number frequent itemset could deriv equival class could use estim weight believ decoupl processor perform right begin hold promis even though may caus load imbal sinc repartit cost amort later iter deriv better heurist schedul cluster minim load imbal well commun part ongo research tidlist commun cluster partit among processor processor exchang inform everi processor read nonloc tidlist memori channel network minim commun awar fact configur one local disk per host recal cluster host processor per host host take part tidlist exchang addit process host spawn asynchron phase accomplish interprocess tidlist commun processor scan item tidlist local databas partit write transmit region map receiv processor processor extract tidlist parallel associ rule receiv region belong cluster assign them exampl figur show initi local databas two host final local databas tidlist commun tabl pseudocod bottomup hybrid travers input c equival class maxim cliqu cluster kitemset output frequent itemset c k c k c nsup minsup c end c k bottomupc k end topdown phase nsup minsup els break end bottomup phase do c end asynchron phase end initi step relev tidlist avail local host thu processor independ gener frequent itemset assign maxim cluster elimin need synchron processor cluster process move next cluster step involv scan local databas partit onc thu benefit huge io save sinc cluster induc sublattic depend algorithm either use bottomup travers gener frequent itemset use hybrid travers gener maxim frequent itemset pseudocod two lattic travers scheme shown tabl note initi tidlist itemset store local disk use these tidlist itemset cluster gener sinc cluster gener small result tidlist kept memori bottomup approach tidlist itemset cluster intersect gener itemset cardin result tidlist exce minimum support new itemset insert l split result frequent itemset equival class base common prefix length pair itemset within equival class intersect determin l zaki parthasarathi ogihara li till frequent itemset found l k determin delet thu need main memori space itemset l kgamma within one maxim cluster topdown phase hybrid travers maxim element seen far need memoryresid along itemset yet seen new algorithm therefor main memori space effici experiment result memori usag algorithm present next section prune candid recal count candid distribut use prune step elimin unnecessari candid step essenti algorithm reduc size hash tree smaller tree lead faster support count sinc subset transact test tree howev vertic databas layout found prune step littl help attribut sever factor first addit space comput overhead construct search hash tabl also like degrad local second extra overhead gener subset candid third extra commun overhead commun frequent itemset iter even though may happen asynchron fourth averag size tidlist decreas itemset size increas intersect perform quickli shortcircuit mechan end asynchron phase accumul result processor print out salient featur new algorithm section recapitul salient featur propos algorithm contrast count candid distribut algorithm differ follow respect ffl unlik count distribut util aggreg memori parallel system partit candid itemset among processor use itemset cluster scheme ffl decoupl processor right begin repartit databas processor comput frequent itemset independ elimin need commun frequent itemset end iter ffl use vertic databas layout cluster transact contain itemset tidlist use layout enabl algorithm scan local databas partit two time processor first scan commun tidlist second obtain frequent itemset contrast count candid distribut scan databas multipl time iter ffl comput frequent itemset perform simpl intersect two tid list extra overhead associ build search complex hash tree data structur complic hash structur also suffer poor cach local parthasarathi zaki li algorithm parallel associ rule avail memori util keep tidlist memori result good local larger itemset gener size tidlist decreas result fast intersect shortcircuit join base minimum support also use speed step ffl algorithm avoid overhead gener subset transact check candid hash tree support count experiment evalu tabl databas properti databas size size experi perform processor host processorshost digit alpha cluster interconnect via memori channel network gillett system unicast multicast processtoprocess write latenc s perlink transfer bandwidth mb alpha processor run mhz there total mb main memori per host share among processor host host also gb local disk attach it less mb avail us partit databas resid local disk processor use differ synthet databas gener use procedur describ agraw srikant use benchmark databas mani associ rule algorithm agraw srikant holsheim et al park chen yu a savaser omiecinski navath agraw et al tabl show databas use properti number transact denot r r replic factor databas roughli mb size except sizeup experi result shown databas replic factor could go beyond replic factor use sizeup experi sinc repartit databas would becom larg fit disk averag transact size denot jt j averag maxim potenti frequent itemset size ji j number maxim potenti frequent itemset number item refer reader agraw srikant detail databas gener experi perform minimum support valu fair comparison algorithm discov frequent kitemset k use support itemset preprocess step execut time sec count distribut pareclat execut time sec pareclat parcliqu parmaxeclat parmaxcliqu figur parallel perform tidk perform comparison section compar perform new algorithm count distribut henceforth refer cd shown superior data candid distribut agraw shafer figur differ parallel configur repres hxpyt z denot number host number processor per host z total number processor use experi figur show total execut time differ databas differ parallel configur configur arrang increas order configur arrang increas order h first column compar pareclat cd second column compar new algorithm differ among appar clearli seen pareclat outperform cd almost configur databas improv high factor look best new algorithm second column see improv order magnitud even dramat improv possibl lower minimum support zaki parthasarathi li interest trend figur perform gap seem decreas larger configur cd actual perform better hpt tidk tidk see consid figur a show total number frequent itemset differ size differ databas also figur show initi databas repartit tidlist commun cost percentag parallel associ rule total execut time pareclat becom clear enough work two databas suffici offset commun cost consequ time spent initi phase tidk work pareclat still twice fast cd basic argument fall classic comput versu commun tradeoff parallel comput whenev ratio high expect pareclat outperform cd also expect rel improv pareclat cd better larger databas unfortun due disk space constraint abl test algorithm larger databas except configur local databas partit less avail memori cd entir databas would cach first scan perform cd thu best case scenario sinc result includ real hit cd would taken multipl disk scan mention section pareclat design scan databas frequent itemset comput execut time sec count distribut pareclat total execut time sec pareclat parcliqu parmaxeclat parmaxcliqu figur parallel perform tidk second column figur show differ among new algorithm differ databas parallel configur sever paramet affect perform seen gener parcliqu parmaxcliqu perform better pareclat parmaxeclat respect use maxim hypergraph cliqu approach gener precis cluster axi gener parmaxcliqu par maxeclat outperform parcliqu pareclat respect hybrid lattic travers scheme gener maxim frequent itemset save number intersect result also depend number zaki parthasarathi ogihara li execut time sec count distribut pareclat execut time sec pareclat parcliqu parmaxeclat parmaxcliqu figur parallel perform tidk frequent itemset larger number frequent itemset opportun hybrid approach save join exampl consid show total number tidlist intersect perform four algorithm three databas tidk largest number frequent itemset see figur a parmaxcliqu cut number intersect pareclat reduct parmaxeclat parcliqu factor respons trend indic abov winner term total execut time clearli parmaxcliqu improv pareclat high memori usag figur show total memori usag pareclat algorithm comput frequent itemset progress mean memori usag tidlist less mb databas even though databas mb figur show case memori usag twice mean peak graph usual due initi construct itemset tidlist within cluster sinc equival class cluster larg observ maximum usag mb pareclat still less databas algorithm expect peak lower sinc maxim cliqu cluster precis result smaller cluster hybrid travers need entir cluster itemset initi parallel associ rule number frequent itemset frequent itemset size k frequent itemset number intersect pareclat parmaxeclat parcliqu parmaxcliqu figur a number frequent kitemset b number intersect commun commun commun figur commun cost pareclat sensit analysi figur first column show speedup differ databas parallel configur due disk constraint use replic zaki parthasarathi ogihara limemori usag mean time tidk memori usag meanmb pareclatmemori usag mean time tidk memori usag meanmb pareclatmemori usag mean time tidk memori usag meanmb pareclat figur memori usag pareclat hpthpt hpt hpt hpt hpt hpt hpt hpt hpt hpt hpt hpt rel tidk speedup pareclat parmaxeclat parcliqu total execut time sec replic factor tidk sizeup pareclat parmaxeclat parcliqu parmaxcliqu figur tidk speedup sizeuphpt factor databas size approxim mb speedup number parallel associ rule rel tidk speedup pareclat parmaxeclat parcliqu parmaxcliqu total execut time sec replic factor tidk sizeup pareclat parmaxeclat parcliqu parmaxcliqu figur tidk speedup sizeuphpt impress first glanc howev surpris exampl largest configur hpt there mb data per processor combin fact amount comput quit small see figur a time spent tidlist commun see figur see maximum speedup anoth reason commun involv host addit process host spawn initi phase thu repres partiallyparallel phase limit speedup take commun cost see maximum speedup interest trend stepeffect seen speedup graph configur number total processor one host perform better also configur total processor configur immedi preced it processor per host perform better case reason increas number processor given host caus increas memori content bu traffic increas disk content processor tri access databas local disk time sizeup sizeup experi fix parallel configur hpt vari databas replic factor total databas size rang mb mb figur second column show sizeup four algorithm differ databas figur indic almost linear sizeup slightli upward bend due rel comput versu commun cost larger databas time spent commun intersect cost increas rel pareclat parmaxeclat parcliqu total execut time sec replic factor pareclat parmaxeclat parcliqu parmaxcliqu figur tidk speedup sizeuphpt pace moreov number frequent itemset remain constant sinc use percentag minimum support oppos absolut count replic factor conclus paper propos new parallel algorithm discoveri associ rule algorithm use novel itemset cluster techniqu approxim set potenti maxim frequent itemset set identifi algorithm make use effici travers techniqu gener frequent itemset contain cluster propos two cluster scheme base equival class maxim hypergraph cliqu studi two lattic travers techniqu base bottomup hybrid search also use vertic databas layout cluster relat transact togeth databas also select replic portion databas need comput associ local processor initi setup phase algorithm need commun synchron algorithm minim io overhead scan local databas portion two time setup phase process itemset cluster algorithm use simpl intersect oper comput frequent itemset maintain search complex hash structur ad benefit use simpl intersect algorithm propos im parallel associ rule plement directli gener purpos databas system holsheim et al use techniqu present four new algorithm pareclat equival class bottomup search parcliqu maxim cliqu bottomup algorithm discov frequent itemset parmaxeclat equiv alenc class hybrid search parmaxcliqu maxim cliqu hybrid search discov maxim frequent itemset implement algorithm processor dec cluster interconnect dec memori channel network compar well known parallel algorithm count distribut agraw experiment result indic substanti perform improv obtain use techniqu acknowledg work support part nsf research initi award ccr arpa contract fc r parallel mine associ rule fast algorithm mine associ rule fast discoveri associ rule mine associ rule set item larg databas hypergraph combinator finit set fast distribut algorithm mine associ rule effici mine associ rule distribut databas kdd process extract use knowledg volum data comput intract guid theori npcomplet memori channel optim cluster interconnect scalabl parallel data mine associ rule acm sigmod conf perspect databas data mine th intl effici algorithm discov associ rule effect hash base algorithm mine associ rule effici parallel data mine associ rule acm intl effici algorithm mine associ rule larg databas sampl larg databas associ rule parallel data mine associ rule sharedmemori multiprocessor evalu sampl data mine associ rule new algorithm fast discoveri associ rule new algorithm fast discoveri associ rule local algorithm parallel associ mine srinivasan parthasarathi current doctor student univers rochest wei li receiv ph tr ctr jennif seitzer jame p buckley yi pan ind distribut knowledgebas learn system ieee intellig system v n p septemb sukom pal aditya bagchi associ dissoci pragmat consider frequent itemset gener fix variabl threshold acm sigkdd explor newslett v n p decemb fast algorithm mine sequenti pattern larg databas journal comput scienc technolog v n p euihong sam han georg karypi vipin kumar scalabl parallel data mine associ rule ieee transact knowledg data engin v n p may moham j zaki parallel distribut associ mine survey ieee concurr v n p octob congnan luo anil l pereira soon m chung distribut mine maxim frequent itemset data grid system journal supercomput v n p juli jiawei han lak v s lakshmanan jian pei scalabl frequentpattern mine method overview tutori note seventh acm sigkdd intern confer knowledg discoveri data mine august san francisco california chenyong hu benyu zhang yongji wang shuicheng yan zheng chen qing wang qiang yang learn quantifi associ via princip spars nonneg matrix factor intellig data analysi v n p novemb yang srinivasan parthasarathi sameep mehta gener framework mine spatiotempor pattern scientif data proceed eleventh acm sigkdd intern confer knowledg discoveri data mine august chicago illinoi usa gregori buehrer srinivasan parthasarathi shirish tatikonda tahsin kurc joel saltz toward terabyt pattern mine architectureconsci solut proceed th acm sigplan symposium principl practic parallel program march san jose california usa assaf schuster ran wolff dan trock highperform distribut algorithm mine associ rule knowledg inform system v n p may shengnan cong jiawei han jay hoefling david padua samplingbas framework parallel data mine proceed tenth acm sigplan symposium principl practic parallel program june chicago il usa moham j zaki scalabl algorithm associ mine ieee transact knowledg data engin v n p may aleksandar lazarev zoran obradov boost algorithm parallel distribut learn distribut parallel databas v n p march moham j zaki neal lesh mitsunori ogihara planmin predict plan failur use sequenc mine artifici intellig review v n p decemb john d holt soon m chung parallel mine associ rule text databas journal supercomput v n p march vipin kumar moham zaki high perform data mine tutori pm tutori note sixth acm sigkdd intern confer knowledg discoveri data mine p august boston massachusett unit state petr hjek martin holena formal logic discoveri hypothesi format machin theoret comput scienc v n p januari andrzej skowron jan komorowski zdzislaw pawlak lech polkowski rough set perspect data knowledg handbook data mine knowledg discoveri oxford univers press inc new york ny andrzej skowron rough set boolean reason granular comput emerg paradigm physicaverlag gmbh heidelberg germani a maniatti moham j zaki system support scalabl data mine acm sigkdd explor newslett v n p dec