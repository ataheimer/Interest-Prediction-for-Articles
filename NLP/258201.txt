t onlin rout virtual circuit applic load balanc machin schedul a paper studi problem onlin alloc rout virtual circuit both pointtopoint multicast goal rout request minim requir bandwidth concentr case perman virtual circuit ie circuit establish exist forev describ algorithm achiev log n competit ratio respect maximum congestin ni number node network inform result show instead know futur request suffici increas bandwidth commun link log n factor also show result tight is onlin algorithm exist scenario log n increas bandwidth necessari direct network view virtual circuit rout gener onlin load balanc problem defin follow job arriv line job must assign one machin immedi upon arriv assign job machin increas machin load amount depend job machin goal minim maximum load relat machin case describ first algorithm achiev constant competit ratio unrel case with nmachin describ new method yield ologncompetit algorithm stand contrast natur greed approach whose competit ratio exactli n show result tight is onlin algorithm exist scenario log n increas bandwidth necessari direct network b introduct virtual circuit rout highspe integr commun network go becom realiti near futur implement network rais numer new issu either exist could easili address context exist slowspe network particular increas network speed sever order magnitud lead situat bandwidthdelay product far exce avail buffer space make necessari use bandwidthreserv techniqu main abstract custom use network virtual circuit order use network custom request reserv requir bandwidth two commun point network guarante reserv bandwidth inde avail long need creat illus real circuit dedic custom one basic servic appear propos futur highspe network eg atm perman virtual circuit pvc servic far user concern virtual circuit suppos behav like physic line connect correspond point henc desir circuit creat rerout network except result failur henc name perman paper develop framework techniqu allow us address problem onlin virtual circuit rout consid follow ideal set given network edg associ capac bandwidth request virtual circuit arriv line request specifi sourc destin point requir bandwidth rout algorithm choos path sourc destin reserv requir bandwidth along path goal minim maximum over edg rel load defin reserv use edg bandwidth measur percentag total edg capac paper assum rerout allow virtual circuit never disappear applic effic use multicast circuit instead singl destin multipl destin exampl includ teleconferenc video demand databas updat etc case rout algorithm choos tree span node particip multicast framework techniqu appli sever altern model discuss model defer end introduct sever recent paper show appli techniqu develop paper gener case includ rout switch virtual circuit svc ie circuit limit durat time simul implement result describ indic onlin rout algorithm base techniqu outperform tradit algorithm rout perman virtual circuit circuit atm network customari evalu perform onlin algorithm term competit ratio supremum possibl input sequenc ratio maximum load achiev onlin algorithm maximum load achiev optim offlin algorithm use framework deriv onlin virtual circuit rout algorithm pointtopoint multicast olog n competit respect load n number node network also show omegagamma n lower bound competit ratio virtual circuit rout algorithm case underli network direct the upper bound work direct undirect case load balanc view virtual circuit rout gener onlin machin schedulingload balanc end concentr nonpreempt loadbalanc defin follow parallel machin number independ job job arriv one one job associ load vector assign exactli one machin therebi increas load machin amount specifi correspond coordin load vector job assign cannot reassign object minim maximum load load balanc problem categor three class accord properti load vector done nonpreempt schedul problem ident machin case coordin load vector same case first consid graham show competit algorithm n number machin bound improv the valu ffl improv relat machin case ith coordin load vector equal wjvi weight wj depend job j speed vi depend machin i case refer unrel machin special case coordin load vector either equal given valu depend job consid describ olog ncompetit algorithm case view hybrid ident unrel machin case incompar relat machin case similar special case studi paper show olog ncompetit algorithm unrel machin case competit algorithm relat machin case although competit analysi notion appli algorithm without restrict run time onlin algorithm present paper run determinist polynomi time wherea match lower bound base informationtheoret argument appli even allow onlin algorithm use random relat machin case gener ident machin problem graham shown greedi algorithm achiev constant competit ratio thu natur ask whether adapt algorithm give constant competit ratio relat machin case well prove that surprisingli natur greedi approach that is assign everi new job machin complet lowest result load thetalog n competit nongreedi competit algorithm problem view adapt schedul algorithm shmoy wein williamson context load balanc show unrel machin case natur greedi algorithm ncompetit bound contrast olog ncompetit greedi strategi special case coordin load vector either equal given valu depend job larg gap bound indic unrel machin case strictli harder requir develop new techniqu introduc new approach lead olog ncompetit algorithm gener unrel machin case shown best bound competit ratio one hope case relat work techniqu use onlin framework base idea develop context approxim algorithm multicommod flow relat problem see eg particular assign link weight exponenti link load choos rout comput shortest path respect weight main differ algorithm present previous known offlin approxim algorithm novel way prove approxim factor allow us execut algorithm onlin fashion result paper concentr case job virtual circuit perman ie job never leav virtual circuit never termin azar broder karlin introduc natur gener model request durat time show n lower bound competit ratio load balanc algorithm deal unknown durat case ie case durat request becom known upon termin lower bound suggest consid case durat request becom known upon arriv the known durat case method develop paper gener give olog nt competit algorithm problem schedul unrel machin known durat case ratio maximum minimum durat similar result achiev virtual circuit rout problem anoth way overcom lower bound unknowndur case allow reassign exist job case coordin load vector restrict phillip westbrook propos algorithm achiev olog n competit ratio make o amort rassign per job gener case consid show extend techniqu present design olog ncompetit algorithm respect load rerout circuit olog n time altern measur network perform amort throughput defin averag time number bit transmit accept connect set network bandwidth assum insuffici satisfi request request may need reject upon arriv onlin algorithm set combin decis mechan determin request satisfi togeth strategi specifi rout request goal maxim amort throughput competit algorithm maxim throughput singlelink case provid garay gopal case network consist singl line node consid garay gopal kutten mansour yung techniqu present extend awerbuch azar plotkin provid competit solut network unrestrict topolog rout schedul algorithm assum central schedul make decis awerbuch azar extend techniqu paper case concurr request satisfi decentr fashion virtual circuit rout section consid problem onlin rout virtual circuit capacit network formal given graph e jv m capac function request arriv tupl s request satisfi choos rout p reserv capac pi along rout sinc alway normal request bandwidth total avail bandwidth procedur assignroutep s t g e pue let p shortest path g wrt cost c e perform guarante algorithm b fail els begin success end figur algorithm assignrout conveni defin rout assign request k onlin algorithm let k g rout assign offlin algorithm given set rout p defin rel load first j request satisfi let j similarli defin e j j correspond quantiti rout produc offlin algorithm simplic abbrevi k k goal onlin algorithm produc set rout p minim problem view instanc termin net rout pathpack minim correspond ask much larger make capac edg order onlin algorithm abl satisfi request offlin algorithm could satisfi network origin capac easi see algorithm present section extend case increas load uniform along rout ie p e i arbitrari necessarili equal piue rout algorithm assignrout algorithm assum knowledg shown figur given request alloc rout capac p t assignrout assign weight edg function chang rel load use new rout comput shortest path respect weight appropri chosen constant conveni defin notion perform guarante fi follow algorithm accept paramet never creat load exce fi algorithm allow return fail refus rout circuit l otherwis rout request lemma exist n algorithm assignrout never fail thu perform guarante olog n simplifi formula use tild denot normal exampl e j defin potenti function e e j constant onlin algorithm satisfi j st request rout p j offlin algorithm satisfi rout p j get follow chang potenti function e ja e j fla e jpe j gamma e j e j fla e jpe j gamma e j e j fla pe last inequ follow fact p j shortest path endpoint st request respect cost e jpe j gamma e sinc j st request satisfi optim algorithm assign rout p j mean e p therefor order show potenti function increas suffici show x true initi number edg graph sinc phi increas satisfi k request have e e impli log o log n use simpl doubl techniqu guess start begin first phase set request bandwidth first request begin new phase h set singl phase job assign independ job assign previou phase ie load creat job assign previou phase ignor phase h end assignrout return fail easi see approach increas competit factor factor a factor due load rest phase except last anoth factor due imprecis approxim sinc perform guarante assignrout olog n get follow theorem observ hold direct undirect graph theorem algorithm assignrout use achiev olog n competit ratio respect load rout multicast circuit mani applic teleconferenc video demand etc base multicast instead pointto point circuit request multicast circuit consist tupl t commun point pi requir bandwidth one commun point serv sourc satisfi request algorithm need assign requir bandwidth pi along edg tree span node pointtopoint case consid previou section goal minim load observ assign pi instead pi bandwidth emb network cycl capac pi pass commun point also note case k directli correspond pointtopoint case algorithm rout multicast circuit direct extens pointtopoint rout strategi present abov instead rout minweight path multicast circuit rout minweight steiner tree sinc find tree nphard import note approxim suffici fact show below suffici rout tree whose weight within constant factor minimum tree easili found appli minimumcost span tree algorithm appropri construct graph proof competit ratio nearli ident proof lemma differ summat rang equat instead sum edg path chosen algorithm edg optimum path sum edg tree chosen algorithm edg tree chosen optimum offlin algorithm equat base fact cost edg chosen algorithm rout current circuit larger cost edg chosen optimum algorithm rout circuit fact edg form path use word equat remain correct summat rang chang algorithm rout minweight steiner tree thu multicast algorithm rout minweight steiner tree olog ncompetit use instead fl seen approxim minweight steiner tree suffici increas competit ratio factor discuss impli follow claim theorem exist olog ncompetit algorithm multicast virtual circuit rout decis implement polynomi time lower bound rout section show lower bound ofomegagamma n competit ratio onlin rout algorithm direct network ie network capac v w necessarili equal capac w v impli olog ncompetit algorithm present previou section optim case lower bound also hold random algorithm work oblivi adversari ie adversari gener new request independ outcom coin flip onlin algorithm basic idea modifi lower bound azar naor rom onlin load balanc lower bound adversari introduc new job iter set machin execut job chosen adversari depend onlin algorithm gener exponenti number possibl set wherea rout context graph fix henc adversari choic next request limit start end exist node graph thu liter translat lower bound loadbalanc problem and particular lower bound lead exponenti blowup size result graph indic need somewhat sophist construct without loss gener assum n power consid direct graph singl sourc s connect one n vertic one sink denot connect two sink denot connect respect etc gener log n divid vertic set jth which contain vertic v j gamman vertic set connect sink associ set sink denot ij observ vertic associ ij union two disjoint set associ construct sequenc request path sourc sink offlin load onlin algorithm assign least load log nto edg s v j thi combin fact size graph on yield theomegagamma n lower bound refer load edg s v j load v j request gener log n phase bandwidth everi request equal maintain follow condit hold phase phase i n request path sourc sink ij j end phase i set averag expect load vertic associ sink ij i clearli first phase begin load vertex assum condit hold phase i vertic associ ij union two disjoint set vertic associ sink associ ij henc one set must averag expect load i end ith phase denot subset s gener n request unit capac sourc sink associ s sinc size n averag expect load must increas least i impli condit satisfi phase thu last phase averag expect load two vertic last set least log nhenc expect load one least log nto complet proof show offlin algorithm maintain unit maximum load enough show phase offlin satisfi request use edgedisjoint path without use vertic associ sink request latter phase inde phase n request path sourc sink ij set vertic associ sink contain two disjoint set size n construct one set associ sink latter request thu offlin algorithm rout request phase edgedisjoint path use vertic set onlin machin loadbalanc section present sever algorithm onlin machin loadbalanc job arriv onlin immedi assign one machin goal minim maximum load formal job j repres load vector assign job j machin increas load machin p j let j denot load machin alreadi assign job j consid sequenc job defin oe j load machin achiev offlin algorithm assign job j oe goal offlin onlin algorithm minim l respect precis measur perform onlin algorithm supremum possibl sequenc lkl k of arbitrari length k mention introduct loadbalanc problem usual categor three class base properti load vector ident machin relat machin denot speed machin i case refer unrel machin note instead load one talk execut time restat problem term goal decreas maximum execut time requir arriv job schedul immedi procedur assignup let index minim perform guarante algorithm b fail els begin success return b end figur algorithm assignu unrel machin section consid onlin loadbalanc unrel machin show section natur greedi approach far optim case achiev competit ratio thetan olog ncompetit algorithm unrel machin loadbalanc construct reduct rout problem consid previou section unfortun reduct result confus nonintuit algorithm instead present simpler algorithm specif design machin loadbalanc problem simplic first consid case given paramet l befor appropri valu guess use simpl doubl approach increas competit ratio factor use tild denot normal ie algorithm assignu assum knowledg shown figur basic step assign job j make j small possibl descript algorithm omit job index j sinc singl invoc algorithm deal singl job use notion perform guarante similarli use onlin rout case algorithm accept paramet never creat load exce fi algorithm allow return fail refus schedul job l otherwis schedul arriv job lemma l exist n algorithm assignu never fail thu perform guarante olog n consid state system schedul constant later show good choic fl recal assumpt l j l defin potenti function assum job j assign machin onlin algorithm machin offlin algorithm have note sinc offlin algorithm assign job j machin i therefor order show potenti function increas suffici show x true sinc initi fln point assign process henc log o log n notic constant big small exampl log n chang valu fl one trade multipl factor addit one note log n lower bound even restrict case consid interest note case coordin load vector pj either equal constant p j depend job j algorithm behav exactli like greedi algorithm consid relat machin relat machin case gener ident machin case section show natur gener relat machin case graham greedi algorithm ident machin case lead thetalog n competit ratio present nongreedi algorithm achiev constant competit ratio befor first consid case given paramet l k k index last job simpl doubl techniqu use elimin assumpt roughli speak algorithm assign job slowest machin possibl make sure maximum procedur assignrp b fail els begin success return b end figur algorithm assignr load exceed appropri chosen bound idea assign job least capabl machin first appear paper shmoy wein williamson consid onlin schedul problem algorithm assignr assum knowledg shown figur basic step assign job j slowest machin load machin assign descript algorithm omit job index j sinc singl invoc algorithm deal singl job assum machin index accord increas speed follow discuss omit index k understood context particular use l l instead lk l k respect use notion perform guarante sens previou section lemma l assignr never fail therefor perform guarante equal proof assum assignr fail task j let r fastest machin whose load exceed l ie g machin set obvious r n could assign fastest machin n sinc rg set overload machin sinc r denot set job assign machin onlin offlin algorithm respect sinc deal relat machin have impli exist job ie exist job assign onlin algorithm machin gamma assign offlin algorithm slower machin assumpt r least fast machin thu p r assign job j r mean onlin algorithm place job r slower machin instead i contradict mention abov definit assignr algorithm facilit doubl approach approxim precis start begin first phase set equal load gener first job fastest machin job begin new phase singl phase job assign independ job assign previou phase phase h end assignr return fail easi see approach increas competit factor factor a factor due load rest phase except last anoth factor due imprecis approxim sinc perform guarante assignr get theorem algorithm assignr modifi achiev competit ratio greedi algorithm simpl greedi machin load balanc algorithm due graham give competit ratio ident machin case competit ratio olog n special case consid natur consid whether extens algorithm lead small competit ratio respect gener case relat unrel machin section show that unfortun case precis show greedi algorithm thetan competit ratio unrel machin case thetalog n competit ratio relat machin case contrast olog n competit ratio respect produc algorithm present previou section consid follow greedi algorithm job j assign upon arriv machin k minim result load ie machin k minim k j broken arbitrari rule lemma greedi algorithm competit ratio better n unrel machin proof consid sequenc job job j cost j machin j cost cost machin ie to avoid distinguish first job job refer machin n also machin ffl arbitrarili small posit constant use avoid tie clearli optim offlin algorithm schedul job maximum load assign job j machin j gamma hand greedi algorithm assign job machin result load as oppos machin n anywher els similarli job arriv greedi algorithm assign note assign job machin minimum load result algorithm competit ratio least equal ratio fastest slowest machin speed machin result load instead assign job machin would produc load ffl likewis job assign machin forth simpl induct argument show job j alway assign machin j result load j give maximum load n machin n result perform ratio n ffl made arbitrarili close n lemma competit ratio greedi algorithm n unrel machin proof everi job j minimum load min p j avoid optim offlin algorithm set job assign machin offlin algorithm hand claim maximum load result greedi algorithm never exceed sum minimum load inde suppos assign job arriv machin minim p j load machin lj gamma j assign result load assign machin result load machin larger either case thu induct lemma greedi algorithm competit ratio omegagammatio n relat machin proof simplic first assum whenev ad job two differ machin result maximum load job assign faster machin end proof show assumpt avoid consid collect machin speed rang gammak the relat k n becom clear below let n number machin speed gammai suppos n gener valu chosen sum speed machin speed gammai equal sum speed faster machin thu collect job would add load machin speed gammai could instead assign add load faster machin total number machin consid follow sequenc job first gener n k job size gammak follow n job size gammakgamma forth last gener singl job size everi machin speed gammaj correspond job size gammaj simpli assign job correspond machin offlin algorithm schedul job result maximum load howev claim greedi algorithm assign group job machin too fast assum induct job size gammai assign load machin speed gammaj equal mink gamma j in base case condit simpli correspond machin zero load equat greedi algorithm assign job size gammai machin speed result load one machin instead assign one job machin speed gammaj j i result load least nonneg x greedi algorithm therefor assign job size gammai machin speed gammai slower induct step follow consequ job assign machin speed gammaj load k gamma j singl machin speed load k n thu simplifi assumpt greedi algorithm alway break tie favor faster machin greedi algorithm ncompetit next show avoid simplifi assumpt send larg job send ffljob size ffl gammai machin speed gammai give load ffl avoid chang greedi algorithm choic assign larg job ffl must less gammak smallest possibl differ load result larg job forc tie broken favor faster machin requir final ensur ffljob intend machin place faster machin gener job faster machin first requir condit satisfi choos ffl lemma greedi algorithm competit ratio olog n relat machin proof let l maximum load gener greedi algorithm l maximum load gener optim offlin algorithm structur proof follow first note load fastest machin least l gamma l second show load machin speed v least load machin speed v least gamma l repeat applic claim impli load machin n time slower fastest machin least l final use argument similar one use proof lemma show condit hold first consid last job j assign greedi algorithm machin i caus load machin reach sinc job add l load fastest machin fact new load impli load fastest machin least gamma l suppos load machin speed v least l consid set job respons last l load increment one machin observ least one job call job j assign offlin algorithm machin speed less v henc increas load l sinc speed v job j increas load machin speed v l fact job j assign load machin speed v least gamma l impli load machin speed v least gamma l let v speed fastest machin shown machin speed v load least l gamma l iter appli claim paragraph show machin speed v gammai load least l gamma l gamma il thu everi machin speed least vn load least assum contradict recal sinc relat machin case job j two machin w w j regard weight job let set machin speed less v max n total weight job assign offlin algorithm bound ii ii assumpt onlin algorithm caus load l machin impli total weight job assign onlin algorithm greater l contradict thu acknowledg indebt david shmoy mani help discuss r special issu asynchron transfer mode competit distribut algorithm concurr establish virtual circuit throughput competit onlin rout competit rout virtual circuit unknown durat competit onlin assign new algorithm ancient schedul problem effici onlin call control algorithm call preemption commun network bound certain multiprocess anomali rinnooy kan better algorithm ancient schedul problem optim algorithm onlin bipartit match onlin load balanc network flow maximum concurr flow problem schedul parallel machin onlin amort effici list updat page rule approxim solut steiner problem graph tr amort effici list updat page rule competit algorithm onlin problem maximum concurr flow problem optim algorithm onlin bipartit match schedul parallel machin onlin new algorithm ancient schedul problem call preemption commun network competit onlin assign optim onlin algorithm metric task system onlin load balanc network flow faster approxim algorithm unit capac concurr flow problem applic rout find spars cut fast approxim algorithm multicommod flow problem competit multicast rout fast approxim algorithm fraction pack cover problem ad multipl cost constraint combinatori optim problem applic multicommod flow rout admiss control gener topolog network poisson arriv competit rout virtual circuit unknown durat competit nonpreempt call control onlin load balanc temporari task load balanc lsub p norm disjoint path dens embed graph onlin rout perman virtual circuit improv lower bound load balanc task unknown durat rout admiss control gener topolog network ctr nikhil bansal avrim blum shuchi chawla adam meyerson onlin oblivi rout proceed fifteenth annual acm symposium parallel algorithm architectur june san diego california usa csand imreh schedul problem two set ident machin comput v n p august baruch awerbuch mohammad t hajiaghayi robert d kleinberg tom leighton onlin clientserv load balanc without global inform proceed sixteenth annual acmsiam symposium discret algorithm januari vancouv british columbia jan cosyn karl sigman stochast network admiss rout use penalti function queue system theori applic v n p novemberdecemb ashish goel monika r henzing serg plotkin eva tardo schedul data transfer network set schedul problem journal algorithm v n p septemb kontogianni lower bound competit algorithm onlin schedul units task relat machin proceed thiryfourth annual acm symposium theori comput may montreal quebec canada weifa liang yuzhen liu onlin disjoint path rout network capac maxim energyconstrain ad hoc network ad hoc network v n p march yossi azar edith cohen amo fiat haim kaplan harald rcke optim oblivi rout polynomi time journal comput system scienc v n p novemb ran adler yossi azar beat logarithm lower bound random preemptiv disjoint path call control algorithm journal schedul v n p marchapril yossi azar edith cohen amo fiat haim kaplan harald rack optim oblivi rout polynomi time proceed thirtyfifth annual acm symposium theori comput june san diego ca usa chri harrelson kirsten hildrum satish rao polynomialtim tree decomposit minim congest proceed fifteenth annual acm symposium parallel algorithm architectur june san diego california usa ran adler yossi azar beat logarithm lower bound random preemptiv disjoint path call control algorithm proceed tenth annual acmsiam symposium discret algorithm p januari baltimor maryland unit state susann alber stefano leonardi onlin algorithm acm comput survey csur v ne sept allan borodin morten n nielsen charl rackoff increment prioriti algorithm proceed thirteenth annual acmsiam symposium discret algorithm p januari san francisco california chandra chekuri sanjeev khanna f bruce shepherd allornoth multicommod flow problem proceed thirtysixth annual acm symposium theori comput june chicago il usa mohammad t hajiaghayi robert d kleinberg tom leighton harald rcke oblivi rout nodecapacit direct graph proceed sixteenth annual acmsiam symposium discret algorithm januari vancouv british columbia amitai armon yossi azar leah epstein ode regev onlin restrict assign temporari task unknown durat inform process letter v n p januari takwah lam hingfung ting karkeung waiha wong onlin load balanc temporari task revisit theoret comput scienc v n p januari marek chrobak clair kenyonmathieu sigact news onlin algorithm column competit via doubl acm sigact new v n decemb ashish goel adam meyerson serg plotkin approxim major fair onlin load balanc acm transact algorithm talg v n p octob sandi irani vitu leung schedul conflict bipartit interv graph journal schedul v n p mayjun niv buchbind joseph naor fair onlin load balanc proceed eighteenth annual acm symposium parallel algorithm architectur juli august cambridg massachusett usa yair amir baruch awerbuch amnon barak r sean borgstrom ari keren opportun cost approach job assign scalabl comput cluster ieee transact parallel distribut system v n p juli ari keren amnon barak opportun cost algorithm reduct io interprocess commun overhead comput cluster ieee transact parallel distribut system v n p januari marek chrobak offlin persepct acm sigact new v n march yi cui klara nahrstedt highbandwidth rout dynam peertop stream proceed acm workshop advanc peertop multimedia stream novemb hilton singapor yi cui baochun li klara nahrstedt achiev optim capac util applic overlay network multipl compet session proceed sixteenth annual acm symposium parallel algorithm architectur june barcelona spain