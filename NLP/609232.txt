t depend type program termin verif a program termin verif challeng research subject signific practic import alreadi rich bodi literatur subject still undeni difficult task design termin checker realist program languag support gener recurs paper present approach program termin verif make use form depend type develop depend ml dml demonstr novel applic depend type establish live properti design type system enabl programm suppli metric verifi program termin prove everi welltyp program type system termin also provid realist exampl verifi prototyp implement support effect approach program termin verif well unobtrus program main contribut paper lie design approach program termin verif smoothli combin type metric yield type system capabl guarante program termin support gener form recurs includ mutual recurs higherord function algebra datatyp polymorph b introduct program notori errorpron cons quenc great number approach develop facilit program error detect practic programm often know certain program properti must hold correct implement therefor indic program error actual implement violat properti instanc variou type system design detect program error caus violat support type disciplin common practic programm often know reason particular program termin implement correctli immedi impli termin checker great valu detect program error caus nontermin program ex partial support nsf grant no ccr ecut howev termin check realist program languag support gener recurs often prohibit expens given a program termin languag gener undecid b termin check often requir interact theorem prove involv programm c minor chang program readili demand renew effort termin check d larg number chang like made program develop cycl order design termin checker practic use issu must properli address alreadi rich literatur termin verifica tion approach autom termin proof either program term rewrit system trss use variou heurist highli involv synthes wellfound order eg variou path order polynomi interpret etc approach mainli develop firstord languag work higherord set also found eg program termin implement correctli cannot proven termin often difficult programm determin whether caus program error limit heurist involv therefor autom approach like offer littl help detect program error caus nontermin program execut addit autom approach often difficulti handl realist not necessarili larg program programm also prove program termin variou interact theorem prove system nuprl coq isabel pv viabl practic variou success report howev main problem practic programm may often need spend much time prove termin program compar time spent simpli implement program addit renew effort may requir time chang like program develop cycl made program therefor programm often feel hesit adopt interact theorem prove detect program error gener program primarili interest find middl ground particular interest form mechan program languag allow programm provid inform need establish program termin els withtyp inatjnat ij inti intj knat intk figur implement ackerman function automat verifi provid inform inde suffic analog would like allow user provid induct hypothes induct theorem prove prove theorem provid induct hypothes clearli challeng question inform establish program termin formal express main contribut paper lie attempt address question present design allow programm provid depend type key inform rel simpl clean way common practic prove termin recurs function metric roughli speak attach metric wellfound order recurs function verifi metric alway decreas recurs function call made paper present approach use depend type develop dml carri metric prove program termin form type system metric encod type prove everi welltyp program termin emphas advoc design program languag termin program written instead interest design mechan program languag which programm choos use it facilit program termin verif manifest type system form smoothli embed type system dml illustr basic idea concret exampl go detail figur implement ackerman function given withtyp claus type annot state natur number j function take argument type inti anoth argument type return natur number result note refin usual integ type int infinit mani singleton type inta inta precis type integ express valu equal a write finatjnatg univers quantifi index variabl j nat is sort index express valu natur number also write knat intk repres sum type novelti pair hi ji type annot indic metric use termin check inform explain termin check perform case assum j two natur number n type inti intj respect attach metric hi ji ack n note three recurs function call ack bodi ack attach metric hi first ack sinc type inti int respect similarli attach metric hi ki second ack k assum natur number metric hi j third ack obviou hi hi j hi ji hold usual lexicograph order pair natur number thu claim function ack termin by theorem proven paper note although simpl exampl termin cannot proven lexicograph structur order as semant mean addit subtract need realist exampl present section involv depend datatyp mutual recurs higherord function polymorph reader may read exampl studi section technic develop get feel actual handl approach combin metric depend type dml pose number theoret pragmat question briefli outlin result design choic first question aris decid metric support clearli varieti metric establish program termin endless practic pa per consid metric tupl index express sort nat use usual lexicograph order compar metric main reason decis a metric commonli use practic establish termin proof larg varieti program b constraint gener compar metric readili handl constraint solver alreadi built typecheck dml program note usual structur order firstord term obtain attach term number constructor term readili accomplish use depend datatyp mechan dml howev current unabl captur structur order higherord term second question establish sound approach is prove everi welltyp program type system design termin though idea mention exampl ackerman function seem intu itiv task far trivial presenc higherord function reader may take look higherord exampl section understand thi seek method readili adapt handl variou common program featur ad implement ackerman function involv primit recurs thu easili proven termin point drive particular implement proven termin approach includ mutual recurs datatyp polymorph etc natur lead us reduc method form notion reduc depend type extend metric novelti lie treatment gener recurs format novel knowledg constitut main technic contribut paper third question integr termin check mechan dml practic common encount case termin function f depend termin anoth function g which unfor tunat proven variou reason eg beyond reach adopt mechan termin check programm simpli unwil spend effort prove it approach design way allow programm provid metric case verifi termin f condit termin g still use detect program error present work build upon previou work use depend type practic program work root dml larg unclear priori depend type dml use establish program termin thu believ signific effort actual design type system combin type metric prove type system guarante program termin effort strengthen prototyp implement varieti verifi exampl rest paper organ follow form languag ml section essenti extend simpli type callbyvalu calculu form depend type develop dml recurs extend ml to ml section combin metric type prove everi program ml termi nate section enrich ml signific program featur datatyp mutual recurs polymorph present exampl section illustr approach program termin verif appli practic mention relat work conclud full paper avail onlin reader find detail omit here start languag ml essenti extend simpli type callbyvalu calculu form depend type gener recurs syntax ml is given figur syntax fix integ domain restrict type index expr sion name express use index type domain sort domain subset sort form instanc use nat subset sort g use base type index sequenc index express may empti instanc bool bool type boolean valu fals true respect integ i inti singleton type integ express valu equal i use satisfact relat mean p hold is formula p defin below satisfi domain integ instanc satisfact relat hold sinc follow formula true integ domain note decid satisfact relat depend constraint domain integ constraint domain use here satisfact relat decid as accept nonlinear integ constraint use usual depend function sum type respect type form essenti equival use a n also introduc variabl variabl ml and use x f them respect lambdaabstract form variabl recurs via fix point op erat must form variabl variabl valu variabl not use abstract index variabl lam abstract variabl fun form recurs func tion note bodi either fun must valu use hi j ei pack index express e form express depend sum type open unpack express depend sum type static semant write mean legal form type omit standard rule judgment index substitut j a i substitut j x e j f e substitut finit map repres empti map use substitut map index variabl index express dom domain similar notat use substitut variabl write result appli type express etc standard practic also type form a omit simplifi present index constant c index express j c j index proposit p index sort index variabl context index constraint type context constant c true express e c j x valu figur syntax ml figur type rule ml definit omit follow rule judgment form roughli mean type write dom domain is set variabl declar given substitut say write congruent extens index express type determin follow rule applic rule gener constraint typecheck present type rule ml in figur rule obviou side condit omit ted instanc rule typeilam a cannot free occurr follow lemma play pivot role prove subject reduct theorem ml whose standard proof avail lemma assum deriv hold deriv dynam semant present dynam semant ml through use evalu context defin below certainli possibl purpos explor here evalu context e write ee express result replac hole e e note replac never result captur free variabl definit redex defin below redex fals reduc e e respect lam x ev redex reduc ex v let e fun f a e redex reduc a vf e v redex reduc va open hi j vi ha j xi e redex reduc ea ix v use r redex write r e r reduc e e write e e say reduc e one step let reflex transit closur say reduc e in mani step e e omit standard proof follow subject reduct theorem use lemma theorem subject reduct assum deriv ml deriv ml erasur simpli transform ml into languag ml eras syntax relat type index express ml basic extend simpli type calculu recurs let jej erasur express e e reduc e ml reduc je j ml therefor e termin ml then jej termin ml crucial point sinc evalu program ml most like done evalu erasur ml pleas find detail issu instanc suggest one present dynam semant style natur semant later form notion reduc evalu rule combin metric depend type ml form languag ml prove everi welltyp program ml termin main technic contribut paper use usual lexicograph order tupl natur number strict part given two tupl natur number hi hold evi dentli wellfound stress in theori difficulti support variou wellfound order natur number usual multiset order fix order sole eas present definit metric let tupl index express index variabl context say metric deriv mean metric decor type ml form a follow rule form type syntax ml ml except context ml map everi variabl f domain decor type recurs function ml form fun f a v process translat sourc program express ml call elabor thoroughli explain approach program termin verif appli elabor program dynam static semant dynam semant ml form precis manner ml thu omit detail differ ml ml lie static semant two kind type judgment ml form call latter metric type judgment give explan suppos roughli speak free occurr f e f follow sequenc index express a call label occurr f less suppos welltyp close recurs function and sort f f hold rule typefun know label f v less a label f f sinc label cannot decreas forev yield basic intuit recurs function ml termin howev intuit argument difficult formal directli presenc highord function type rule ml judgment form essenti ml except follow one present rule deriv metric type judgment figur given mean k satisfi j k also satisfi lemma follow assum hold deriv assum deriv dom deriv proof proven simultan structur induct deriv theorem subject reduct assum deriv ml e e e deriv ml obvious follow proposit assum deriv f deriv height d reduc defin notion reduc welltyp close express definit reduc suppos e close express type e v hold valu v reduc e defin induct complex minor technic reason count neither rule typevar var calcul height deriv base type e reduc reduc reduc valu v type reduc e reduc v v reduc valu type note reduc defin close express reduc valu proposit assum e close express type e e hold e reduc e reduc proof induct complex follow key notion handl recurs which though natur requir technic insight definit reduc let e welltyp close recurs function fun f a close metric e reduc e reduc satisfi a definit let substitut map variabl express everi x dom xreduc x reduc everi f dom f f reduc f f reduc sens follow lemma verifi whether notion reduc form correctli difficulti probabl lie formul rather proof lemma main lemma assum e deriv also assum xreduc everi x dom everi f deriv f f reduc e reduc proof let deriv e proceed induct height d present interest case below case found assum follow rule typefun last appli d suppos e reduc definit exist e reduc e reduc satisfi word e f reduc deriv figur metric type rule ml proposit deriv height less d induct hypothesi v note e v thu e reduc contradict definit of therefor e reduc follow main result paper corollari e deriv ml ml reduc thu reduc valu proof corollari follow lemma extens extend ml signific program featur mutual recurs datatyp poli morphism defin notion reduc extens thu make clear lemma still hold extens present section treatment mutual recurs curri leav detail mutual recurs treatment mutual recurs slightli differ standard one syntax type rule handl mutual recurs given figur use type express repres n mutual recurs function type respect confus product type also n en must posit constant integ let v follow express fun everi k n vk redex reduc form metric type judgment e f verifi label f e less rule deriv judgment essenti figur except lab given below f f rule fun handl mutual recurs straightforward thu omit definit reduc let e close express reduc v e reduc ek reduc curri decor type must far form a restrict rather unpleas consequ type j express e j en j fun f valu v j fun f f f typefun figur syntax type rule mutual recurs instanc may want assign follow type implement ackerman function figur finatg inti fjnatg intj int formal written decor metric involv index variabl make imposs verifi implement termin gener form decor type follow address problem also introduc follow form express e repres recurs function requir e valu follow deal case n treatment similar e e follow type rule follow metric type rule definit reduc let e close recurs function close metric e reduc e v reduc reduc valu practic implement typecheck ml prototyp implement dml experi variou exampl present below also address practic issu end section exampl demonstr variou program featur handl practic approach program termin verif primit recurs follow implement primit recurs oper r godel clearli typabl ml note z assign type nat respect datatyp nat z nnat sn natn u r s n u r n u v withtyp nnat nat nnat natn type corollari clear everi term termin or weakli normal exampl paper proven termin structur order point make though seem evid use r cannot caus nontermin trivial prove everi term termin notic proof cannot obtain peano arithmet notion reduc precis invent overcom difficulti actual everi term strongli normal obvious untru nest recurs function call program figur involv nest recurs function call implement mc carthi function withtyp claus indic everi integ x fx return integ x inform explain metric type annot suffic establish termin f inner call f need prove obviou outer call f need verifi max assum clearli exampl handl structur order mutual recurs program figur implement quicksort list function qs par defin mutual recurs inform explain program typabl ml thu qs termin function corollari call par bodi qs label length xs need verifi satisfi obviou two call qs bodi par need verifi hold sinc also indic need r r metric par two call par bodi par need verifi hold sinc exampl handl structur order higherord function program figur implement function accept take pattern p string check whether match p mean pattern given comment auxiliari function acc implement continu pass style take pattern p list charact cs continu k match prefix cs p call k rest charact note k given type allow k appli charact list longer cs metric use prove termin acc hn ii n size p number constructor p exclud empti length cs notic call acc p cs k last pattern match claus label attach call length cs sinc continu type must fals call hap pen therefor straightforward see label attach call acc less hn ii corollari acc termi nate impli accept termin assum explod termin everi aspect nontrivi exampl even interact theorem prove system notic test lengthc bodi acc timeconsum resolv use continu accept argument charact list length eleg implement accept process pattern match elimin test runtim check also realist case termin depend program invari cannot or difficult to captur type system dml instanc follow exampl adopt implement bit revers part implement fast fourier transform fft fun loop j kj loop jk k els jk withtyp anatbnat inta intb int obvious loop termin howev may know reason second argument loop never execut lead follow im plement need check k hold call loopj k k guarante k posit integ fun loop j els rais imposs withtyp anatbpo max ab inta intb int readili verifi loop termin func tion exampl indic insert runtim check verifi program termin sometim approxim live properti safeti properti practic two separ issu concern practic approach program termin verif a practic termin verif process b applic approach realist program note lengthc lengthc type inti inti respect thu lengthc type depend whether equal i thu infer type system withtyp figur implement mccarthi function case xs x xs par cmp x xs withtyp a a bool nnat n a listn a listn anda par cmp x l r case xs x xs cmpx x par cmp x x l r xs els par cmp x l x r xs withtyp a a bool pnatqnatrnat pqrr a a listp a listq a listr a listpqr figur implement quicksort list easi observ complex typecheck ml basic ml sinc ad work verifi metric provid pro decreas requir solv extra constraint number extra constraint gener typecheck function proport number recurs call bodi function therefor like small base experi dml thu feel typecheck ml suitabl practic use applic approach realist pro gram use type system program languag c exampl illustr design decis obvious type system c unsound unsaf type cast often need c type program would otherwis possibl spite practic type system c still great help captur program error clearli similar design allow programm assert termin function dml cannot verifi may call termin cast combin termin verif runtim check termin cast feel approach promis put practic relat work amount research work relat program termin simpli vast section mainli mention relat work work share similar either design techniqu approach autom termin proof either program term rewrit system trss use variou heurist synthes wellfound order ap proach howev often difficulti report comprehens inform program cannot proven ter minat follow also larg amount work prove termin logic program report mercuri compil perform autom termin check realist logic program howev address differ question here interest check whether given metric suffic establish termin program synthes metric design essenti one adopt check whether given structur order possibl highord term decreas induct proof logic program clearli approach base check complement base synthesi approach also relat semant label approach design prove termin term rewrit system trss essenti idea differenti function call label show label alway decreas function call unfold semant label approach requir construct model tr verifi whether label done correctli approach typecheck notion size type introduc prove correct reactiv system there type system capabl guarante termin welltyp program languag present design embed function program contain signific restrict support a minor variant primit recurs caus inconveni program instanc seem difficult implement quicksort use primit recurs experi gener recurs realli major program featur greatli complic program termin verif also notion existenti depend type deem indispens practic program exist compar variou interact theorem prove datatyp pattern string match empti char char c match char c inatjnat plusij patterni patternj cs match plusp p cs match either p p inatjnat timesij patterni patternj cs match timesp p prefix cs match p rest match p inat stari patterni cs match starp cs match some possibl copi p length comput length list length len withtyp len xs withtyp inat a listi inti empti tupl use sinc length recurs case p empti k cs charc case cs c cs plusp p case k use backtrack acc p cs k true els acc p cs k timesp p acc p cs fn cs acc p cs k cs true els acc p cs fn cs els acc p cs withtyp nnat patternn inat n i char listi inat i i char listi bool bool explod turn string list charact withtyp pattern string bool figur implement pattern match string system nuprl coq isabel pv approach program termin weaker in sens mani fewer program verifi termin automat less obtrus program essenti design mechan program termin verif languag interfac use program develop cycl consid main contribut paper appli design mechan intend facilit program error detect lead construct robust program conclus futur work present approach base depend type dml allow programm suppli metric verifi program termin proven correct also appli approach variou exampl involv signific program featur gener form recurs includ mutual recurs higherord function algebra datatyp polymorph support use practic program properti often classifi either safeti properti live properti program never perform outofbound array subscript runtim safeti properti demonstr depend type dml guarante everi welltyp program dml possess safeti properti effect facilit runtim array bound check elimin is howev unclear a priori whether depend type dml also use establish live properti paper formal address question demonstr depend type dml combin metric establish program termin one signific live properti termin check also use compil opti mizat instanc one decid chang execut order two program may requir prove first program alway termin also seem feasibl use metric estim time complex program lazi function program inform may allow compil decid whether thunk form futur expect explor along line research although present mani interest exampl cannot proven termin structur order emphas structur order often effect practic establish program termin therefor seem fruit studi combin approach structur order handl simpl case either automat synthes manual provid structur order verifi difficult case metric suppli programm r termin rewrit system polynomi interpret implement implement mathemat nuprl proof develop system order term rewrit system prove correct reactiv system use size type higherord recurs path order gener theorem prover pv combin specif termin reduct check logic framework termin analysi mercuri intension interpret function finit type i effici test topdown termin logic rule depend type practic program depend type data structur depend type program termin verifica tion elimin array bound check depend type depend type practic program ming termin term rewrit semant la bell tr ctr kevin donnelli hongwei xi formal strong normal simplytyp lambdacalculu system f electron note theoret comput scienc entc v n p june chiyan chen hongwei xi combin program theorem prove acm sigplan notic v n septemb kevin donnelli hongwei xi combin higherord abstract syntax firstord abstract syntax at proceed rd acm sigplan workshop mechan reason languag variabl bind p septemb tallinn estonia amir m benamram chin soon lee program termin analysi polynomi time acm transact program languag system topla v n pe januari arn john glenstrup neil d jone termin analysi specializationpoint insert offlin partial evalu acm transact program languag system topla v n p novemb