t random hard a studi set incompress string variou resourc bound version kolmogorov complex resourc bound version kolmogorov complex studi polynomi time cd complex defin sipser nondeterminist variant cnd due buhrman fortnow polynomi space bound kolmogorov complex cs introduc hartmani measur defin set random string mathrmrmathitcd_t mathrmrmathitcnd_t mathrmrmathitcs_t set string x mathitcdtx mathitcndtx mathitcssx greater equal length x s t polynomi show follow mathrmma subseteq mathrmnpmathrmrmathitcd_t mathrmma class merlinarthur game defin babai mathrmam subseteq mathrmnpmathrmrmathitcnd_t mathrmam class arthurmerlin game mathrmpspac subseteq mathrmnpmathrmcrmathitcs_ last item mathrmcrmathitcs_ set pair langl xy rangl x random given y result show set random string variou resourc bound hard complex class nondeterminist reductionsthi paper contrast earlier work buhrman mayordomo show polynomi time determinist reduct set exponenti time kolmogorov random string complet exp b introduct holi grail complex theori separ complex class like p np pspace well known class possess complet set thu sucient separ show complet set one class contain other therefor lot eort put studi complet set see bt kolmogorov lev howev suggest focu attent set complet intuit complet set possess lot structur hinder possibl lower bound proof suggest look set time bound kolmogorov random string paper continu line research studi variant set kolmogorov complex measur amount regular string inform kolmogorov complex string x denot cx size smallest program print x stop string x cx less equal length x up addit constant string hold cx greater equal length x call incompress random simpl count argument show random string exist sixti theori kolmogorov complex develop martin mar show core set kolmogorov random string complet respect resourc unbound ture reduct kummer kum shown strengthen show set also truthtabl complet resourc bound version random string rst studi ko ko polynomi time bound kolmogorov complex c p x p polynomi smallest program print x pjxj step har ko show exist oracl set random string respect time bound kolmogorov complex complet conp strong nondeterminist polynomi time reduc tion also construct oracl set complet conp determinist polynomi time ture reduct buhrman mayordomo bm consid exponenti time kolmogorov random string exponenti time kolmogorov complex smallest program print x tjxj step function show set tn random string determinist polynomi time ture hard exp show class set reduc set p measur henc set even weakli hard exp result paper contrast buhrman mayordomo show set random string hard variou complex class nondeterminist polynomi time reduct consid three well studi measur kolmogorov complex lie c p x c x p polynomi consid distinguish complex introduc sipser sip distinguish complex cd x size smallest program run time tn accept x noth els show set random string r cd xed polynomi hard nondeterminist reduct class merlin arthur game introduc babai bab immedi consequ obtain bpp np bpp np r cd next shift attent nondeterminist distinguish complex dene size smallest nondeterminist algorithm run time tn accept x dene r cnd xed polynomi show np r cnd class arthurmerlin game bab follow complement graph isomorph problem gi np r cnd polynomi t r cnd sn space bound kolmogorov complex cs xji dene size smallest program print x given use sjxj tape cell har likewis dene cr cs sn polynomi show pspace np cr cs rst two result use oblivi sampler construct zuckerman zuc lemma bf measur size set term cd complex prove lemma show rst bit random string sens random whole string last result make use interact protocol lfkn sha qbf show optim result relativ techniqu construct oracl world rst result improv determinist reduct show oracl bpp p r cd polynomi t construct oracl extens techniqu develop beigel buhrman fortnow bbf denit notat assum reader familiar standard notion complex theori found eg bdg string element string integ n jsj use notat snm string consist nth mth bit s use empti string also need notion oblivi sampler zuc denit univers r d m oblivi sampler determinist algorithm input uniformli random rbit string output sequenc point z collect function case pr where applic denit alway use singl function f fix univers ture machin u nondeterminist univers machin u n result independ particular choic univers machin denit kolmogorov complex need fact univers machin can input p halt output string x denit distinguish complex need fact univers machin input p x either accept reject also need resourc bound version properti dene kolmogorov complex function cxji see lv xg dene uncondit kolmogorov complex hartmani dene time bound version kolmogorov complex har resourc bound version kolmogorov complex date back far bar see also lv sipser sip dene distinguish complex cd need follow version resourc bound kolmogorov complex distinguish complex use see har up x y accept reject run see sip u n p x y accept reject run see bf dene follow set string maxim cd p cnd p complex note set set mention introduct case omit use r cd r cnd also dene set string maxim space bound complex cr cs c notat emphas random condit also cr cs technic set pair rather set string uncondit space bound random string would r cs g theorem concern set ccomplex string alway upperbound length plu constant depend choic univers machin cd cndcomplex string alway upperbound c complex string plu constant depend particular choic univers machin quantier use paper polynomi bound often particular polynomi import sequel clear context omit sometim need explicit bound particular bound given superscript quantier eg use denot there exist jyj m n x denot for x length n class dene follow denit l exist jxj c time bound machin x l yprmx r chosen uniformli random f g jxj c exist jxj c time bound machin x l prymx r chosen uniformli random f g jxj c known np bpp pspace bab let mx repres number accept comput nondeterminist ture machin input x languag l p exist polynomi time bound nondeterminist ture machin x let g function say advic function f gbound n hold jfnj gn paper interest function g polynomi notat sn use strong nondeterminist ture reduct dene sn distinguish complex derandom section prove hard r cd r cnd arthurmerlin merlinarthur game respect npreduct theorem tn n log n np r cd theorem tn n np r cnd proof theorem roughli follow first guess string high cd poli complex respect cnd poli complex next use nondeterminist reduct play role merlin use random string derandom arthur note straightforward might look random use arthur interact protocol use hide gener substitut comput random idea use string high cdcomplex zuckerman sampler derandom stem bf section full version bf though explicitli dene set r cd use approach derandom bpp comput there proof need string high cd p respect cnd p complex polynomi rst show nondeterminist extract string longer string high cd complex respect cnd complex xed tn n log n lemma let f fn n let t sucient larg cd hold cd proof suppos contradict constant innit mani cd hold cd log jfjsjj exist program p run recogn sfjsj jp j fjsj log jfjsjj follow program recogn string input check rst fjsj bit equal use p assum jfjsjj store program cost log jfjsjj bit check last jsj fjsj bit equal bit also store program program run time therefor take tjsj step u sucient larg hs lose log n factor algorithm must run xed machin simul determinist program length jp log jfjsjj less jsj almost s henc cd s jsj contradict assumpt corollari everi polynomi n c n log n sucient larg string cd c proof take c appli lemma lemma corollari follow nondeterminist analogon lemma everi polynomi n c n sucient larg string cnd c proof proof appli lemma similar lemma how ever nondeterminist case simul cost linear time bgwbefor proceed proof theorem also need earlier result rst need follow theorem zuckerman theorem zuc constant c m exist univers r d m oblivi sampler run polynomi time use bit output also need follow lemma buhrman fortnow lemma bf let set p string x n hold cd p x logjja n jj olog n polynomi p note bf analog lemma hold cnd p np lemma bf let set np string x n hold cnd p x logjja n jj olog n polynomi p result prove theorem we theorem want prove np machin oracl oracl r cd recogn set posit side proof easi x exist machin string fraction string r length jxj c make mx accept np machin certainli guess one pair x proof x a neg side harder show substitut r string high enough cd complex cnd complex theorem make mx accept grasp intuit behind proof let us look much simpli exampl bpp machin error probabl input x string r maxim unbound kolmogorov complex jxj k possibl comput input x jxj k runtim suppos must accept x fraction ie jxj c comput reject x reject comput consist determinist part describ x set jxj c coin ip set coin ip binari string reject comput uniqu identi string length jxj c call set b would like show contradict random string cannot member set henc random string use sequenc coin ip lead correct result string b describ x index b length log jjbjj jxj c log far ground contradict sinc descript consist element length greater jxj c howev amplifi comput input x repetit take major then repeat comput x time blow number incorrect comput use x c random bit howev larg enough x descript jxj plu minu addit constant depend denit kolmogorov complex use smaller jxj c thu lead contradict unfortun case situat bit complic factor lemma render standard amplifact random comput useless fortun theorem allow dierent type amplic use much less random bit type argument use proceed show amplic given theorem situat lemma let l languag ma constant k constant exist determinist polynomi time bound machin that r chosen uniformli random string f g km let l languag am constant k constant exist determinist polynomi time bound machin that a x l prymx r chosen uniformli random string f g km proof furer et al show fraction see denit replac fgm let ml determinist polynomi time machin correspond l denit adapt accept probabl x l assum ml run mean ml denit assum n c n c respect also random string may assum drawn uniformli random f g n c obtain valu km second item use theorem given x let f xy fp function input z comput ml x use oblivi sampler get good estim ef xy is feed random string length km oblivi sampler return sampl point z comput machin comput sum input x r accept valu greater x l prml x matter sampl point return oblivi sampler y probabl sampl point return oblivi sampler probabl km proof analog proof part explain dierenc rst item claim refer fgm theorem ii paper part ml determinist polynomi time machin correspond amlanguag l dene function f x f g function input z comput n c fp np comput function sampl point z z return case follow properti x l matter string return z everi possibl sampl point z ml x set sampl point z sampler may return exist ml x half sampl point probabl pr d less km let mx r determinist polynomi time machin use r gener sampl point interpret y count number accept ml x accept number greater get exactli desir result next lemma show string high enough cd poli cnd poli use derandom am protocol lemma let l languag exist determinist polynomi time bound machin polynomi q integ k c almost n everi r let l languag exist determinist polynomi time bound machin polynomi q integ k c almost n everi r proof choos k let determinist polynomi time bound machin correspond l k lemma item polynomi n c time bound machin wit l lemma determin q later assum r string length cd q r jrj eas notat set suppos x l follow exist length particular hold mx suppos x l show case suppos true let xy follow xy p essenti program simul x hardwir although xy nite therefor trivial p crucial size polynomi program roughli amplic protocol that sinc r xy follow lemma polynomi p hand chose r that cd q r jrj give contradict q p choos k let determinist polynomi time bound machin correspond l k lemma item again n c time bound machin wit determin later assum r string length c cnd q r jrj suppos x l follow exist particular r mx r suppos l show ymx true dene g x np program x hardwir guess simul amplic protocol jja x jj km km sinc r x follow lemma exist polynomi p that hand chose r that cnd q r jrj give contradict whenev q pthe follow corollari show string high enough cd poli complex use derandom bpp machin see also theorem bf corollari let set bpp exist polynomi time ture machin polynomi q cd q r jrj x length n hold x proof theorem let languag ma let q lemma item nondeterminist reduct behav follow input x length n first guess size check r cd set accept exist mx corollari follow cd q r jrj correct reduct follow directli lemma item proof theorem follow directli lemma item npalgorithm analog one abov corollari n log n bpp np bpp includ np r cd gi np r cnd follow r cnd graph isomorph problem gi np conp limit previou section show set r cd hard reduct one might wonder whether r cd also hard stronger reduct like determinist polynomi time ture reduct section show thi true need nonrelativ proof deriv follow theorem theorem relativ world everi polynomi t proof theorem given lemma say statement theorem true world p np poli theorem precis show exist world lemma oracl hold exp np np poli p t proof suppos contradict lemma true exp np nppoli exp nppoli exp ph yap furthermor exp np nppoli certainli exp np exppoli follow bh exp see bft denit p vv np bpp impli ph bpp zac final fact uniquesat p equival to x y c poli xji cd poli xji o shown fk use proof fk show uniquesat p also impli r cd particular univers machin note need contradict assumpt one particular type univers machin turn impli assumpt bpp henc exp np p np howev contradict hierarchi theorem relativ ture machin hs part proof relativ get result oracl there one caveat here though r cd t clearli meaning in terpret talk p r cd t one must cours allow p access oracl clear p ask question machin ask question random string therefor one might argu p r cd t aa actual statement lemma aect proof univers machin say u follow input p x y u use cooklevin reduct produc formula f jxj variabl properti x satis f p accept x u use selfreduc f assum polynomi time algorithm uniquesat make accept x uniqu rst number variabl equal jyj reject then use wellknown substitut reduc algorithm sat veri assign success obtain algorithm algorithm precis accept reject algorithm accept use univers machin everi program accept one string therefor r cd via obviou predic argu abov give us contradict proceed construct oracl theorem exist oracl exp np proof proof parallel construct beigel buhrman fortnow bbf construct oracl p np use similar setup let nondeterminist linear time ture machin languag l dene p complet everi a everi oracl a let k linear time comput complet set np let n k determinist machin run time n everi accept languag h complet exp np construct exist n bound advic function f w condit condit condit guarante exp np nppoli use term string string form w jwj string string form z w v string immedi put a first give intuit proof linear time ture machin therefor set string forc set string condit automat fulll describ set string forc string dene condit fulll condit requir bit care sinc n k queri exponenti long doubl exponenti mani string consid string z w v valu variabl zwv whose valu determin whether z w v a construct wil forc correspond comput n k x low degre polynomi variabl valu gf encod comput properli use fact function high degre assign polynomi p z gf string string z ensur z p z a p z a first string z z w v let p z singl variabl polynomi zwv assign polynomi string recurs note x queri string jwj jxj consid accept comput path mx assum oracl queri guess correctli let m queri path b m queri answer b queri guess b note let p set accept comput path mx dene polynomi p z follow p rememb work gf addit pariti set variabl zwv and thu string forc valu z string set thing properli follow lemma straightforward lemma string condit satis polynomi p z degre proof simpl proof induct jxj construct done stage stage n code string length n h set string automat string thu fulll condit stage need know degre multivari multilinear polynomi repres function lemma represent function oru um um multivari multilinear polynomi gf requir degre exactli m proof everi function gf uniqu represent multivari multilinear polynomi note product use de morgan law write construct oracl treat string length n lexicograph order first forc phase oracl set comput n k remain xed futur extens oracl next code phase rst advic string pick comput forc code oracl way retriev np machin advic string great care cours taken two phase disturb disturb earlier stage construct rst describ forc phase without loss gener assum machin n queri string form q k note sinc n run time n may queri exponenti long string k let x rst string length n examin comput nx encount rst queri q k tri extend oracl q k extens exist may assum q never k matter extend futur must howev take care disturb previou queri forc k end build set contain previous encount queri forc k extend q hold q k call extens sconsist extens a return comput nx q ask whether sconsist extens q k extens exist choos sconsist extens add minim number string put q s next continu comput answer ye otherwis continu q answer no next lemma show minim extens never add n string a lemma let q queri k suppos stage n exist sconsist extens q k exist one add n string a proof let mk machin accept k given oracl consid comput machin l smallest set string ad sconsist extens k q accept consid leftmost accept path k q let q queri both queri path moreov let b dene q follow polynomi p ad string l p lemma degre p q n henc degre p q n consid happen take number string l result sinc minim extens follow k q reject p comput l string sinc lemma degre uniqu multivari multilinear polynomi comput l variabl gf l follow l n dealt queri encount n k continu process string length n lexicograph order note sinc extend sconsist never disturb comput n k lexicograph smaller string follow sinc queri forc ye remain ye queri could forc sconsist extens never forc consist extens a nish process code comput n string length n easi see jjsjj n point lemma n string ad stage close forc phase pick advic string proceed code phase standard count argument show string z length n string form z w v ad a string z advic string length n show code everi string x length n correctli fulll condit lexicograph order suppos code string x j for j i correctli want code x two case case put string z x thu set variabl sinc chang oracl sconsist extens properli extend sconsist ad string form z x a follow lemma show alway done proper extens one add one string a lemma let jjsjj n abov suppos n k exist proper sconsist extens ad string form proof suppos proper sconsist extens exist consid follow polynomi qs p q dene lemma equat initi q degre q x n sinc everi extens string w consist follow q x comput variabl zx w sinc n mani variabl lemma contradict degre q x henc exist proper sconsist extens ad string form properli code a stage n end code string length n complet proof theorem theorem togeth proof lemma also give follow corollari corollari exist relativ world exp np bpp oracl also extend oracl ko ko cd poli complex follow corollari exist oracl r cd t n logn complet np strong nondeterminist reduct oracl theorem world conp bpp poli poli xjyo henc follow r cd corollari relativ item bpp np r cd t byproduct oracl show follow corollari uniquesat p p np corollari indic current proof show uniqu pcan improv yield collaps p np use relativ techniqu pspace cr cs section studi connect cr cs interact proof far establish string sucient high cnd poli complex use derandom ip protocol two round way role prover verier play np oracl machin see also true ip provid random string high enough space bound kolmogorov complex class quanti boolean formula qbf dene closur set boolean variabl x negat x oper _ x x qbf variabl quanti call close qbf call open need follow denit theorem sha denit sha qbf b call simpl given syntact represent everi occurr variabl separ point quantic one univers quantier and arbitrarili mani symbol technic reason also assum simpl qbf contain negat variabl negat loss gener sinc negat push way variabl denit sha arithmet express obtain b replac everi posit occurr x variabl z everi negat occurr x z everi everi _ everi x z fg everi x z fg follow arithmet simpl qbf close form integ valu wherea arithmet open qbf equival possibl multivari function denit sha function form simpl close qbf univari function obtain remov arithmet b either z fg z fg least index variabl possibl simpl qbf quantier boolean formula obtain b remov quantier denot b arithmet b wellknown languag true qbf complet pspace restrict true qbf simpl qbf remain complet theorem sha languag close simpl true qbf complet pspace under polynomi time manyon reduct straightforward arithmet qbf take posit valu qbf true fact also hold rel larg prime theorem sha simpl close quanti boolean formula b true exist prime number p size polynomi jbj valu arithmet b posit modulo p moreov b fals valu arithmet b modulo prime theorem sha function form everi simpl qbf repres univari polynomi degre theorem sha everi simpl qbf exist interact protocol prover p polynomi time bound verier v that b true p honest v alway accept proof b fals v accept proof neglig probabl proof theorem essenti use theorem translat simpl qbf polynomi follow way first arithmet simpl qbf b close form integ valu v posit b true then bs function form f recal arithmet qbf obtain b delet rst quantier univari polynomi p degre properti p substitut valu r p give new integ valu v cours valu get substitut r f howev f r convert low degre polynomi delet rst p q sign game repeat thu obtain sequenc polynomi rst polynomi sequenc v comput last polynomi p n properti p n r thing need first sequenc polynomi q properti q q r intersect point p q second calcul done modulo prime number polynomi size theorem summar follow observ actual skeleton proof theorem observ shalfkn let b close simpl qbf wherein quantier q read left right syntact represent let arithmet let v valu a exist prime number p size polynomi jbj sequenc r number taken p sequenc polynomi degre size polynomi jbj that sequenc univari polynomi q a b q c q n r n minim p intersect point p q inequ hold modulo p hold modulo prime polynomi size b fals moreov p comput space jbj b p r reformul theorem obtain sequenc univari polynomi q sequenc valu r item observ hold either q true valu arithmet b polynomi q sequenc r intersect point p q where p observ p comput quadrat space b latter case r cannot high space bound kolmogorov complex rel b p henc r high space bound kolmogorov complex r intersect point rst case must hold ie valu comput q true valu arithmet b follow lemma make precis lemma assum follow b p n b simpl fals close qbf n variabl p prime number jbj size polynomi jbj sequenc polynomi degre coecient r number p proof take calcul modulo p suppos q follow observ exist sequenc item lemma furthermor sinc b fals prime follow must minim p q r intersect point p q howev p comput space jbj b p r p q degre follow cs n r bound constant contradict suce main theorem section let polynomi theorem pspace np cr cs proof prove lemma proof pad extend polynomi exist np oracl machin accept languag simpl close true quanti boolean formula follow input b rst check b simpl guess prime number p size polynomi b sequenc polynomi degre coecient p final guess sequenc number size jp j check that nalli least jp j n b true lemma guarante item guess test pass b fals test fail lemma guarante p rst check must fail fact pspace close complement fact cr cs also pspace theorem give cr cs complet pspace strong nondeterminist reduct lon corollari cr cs complet pspace strong nondeterminist reduct buhrman mayordomo bm show set r c jxjg hard exp determinist ture reduct theorem made use relativ kolmogorov complex ie cs xji use exactli proof bm one prove set cr c jxjg hard exp ture reduct hand proof theorem also work set pspace np cr c suspect possibl extend show exp np cr c far unabl prove thi acknowledg thank paul vitanyi interest discuss provid titl paper also thank two anonym refere help number technic issu clear much proof point us correct refer one refere also point corollari r trade group theori random complex program determin whether natur number greater n belong recurs enumer set np might easi detect uniqu solut resourc bound kolmogorov complex revisit resourc bound kolmogorov complex revisit six hypothes search theorem superpolynomi circuit excurs kolmogorov random string complet set structur subrecurs class complet sound interact proof system gener kolmogorov complex structur feasibl comput comput complex algorithm two tape simul multitap ture machin complex learn minimum timebound ture machin complex random string extend abstract person commun strong nondeterminist polynomialtim reduc complet recurs theorem e complex theoret approach random np easi detect uniqu solut consequ nonuniform condit uniform class probabilist quanti tr