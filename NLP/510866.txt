t write barrier remov static analysi a present set static analys remov write barrier program use gener garbag collect knowledg first analys purpos intraprocedur analysi use flowsensit pointer analysi locat variabl must point recent alloc object elimin write barrier store object access via one variabl calle type extens incorpor inform type object alloc invok method caller context extens incorpor inform recent alloc object call site invok current analyz method result implement system show full interprocedur analysi incorpor extens elimin major write barrier program benchmark set produc modest perform improv overal execut time moreov dynam instrument execut abl show two nine benchmark program analysi close optim sens elimin write barrier almost store instruct observ creat refer older object younger object b introduct gener garbag collector becom memori manag altern choic mani safe languag basic idea behind gener collect segreg object dierent gener base age gen research support part nsf fellowship darpa contract fc nsf grant ccr nsf grant ccr erat contain recent alloc object typic collect frequent older gener young object age surviv collect collector promot older gener gener collector therefor work well program alloc mani shortliv object longliv object promot longliv object older gener enabl garbag collector quickli scan object younger gener scan gener collector must locat refer gener older gener write barrier standard way locat refer everi instruct store heap refer object compil insert code updat intergener refer data structur data structur enabl garbag collector nd refer object older gener object younger gener use refer root collect younger gen erat write barrier overhead tradit accept part cost use gener collector paper present set new program analys enabl compil static elimin write barrier instruct never creat refer object older gener object younger gener basic idea use pointer analysi locat store instruct alway write recent alloc ob ject object youngest object store instruct never creat refer older object younger object write barrier instruct therefor super uou transform elimin it implement sever analys use basic approach write barrier elimin intraprocedur analysi analysi analyz method separ method use owsensit intraprocedur pointer analysi nd variabl must refer recent alloc object method entri analysi conserv assum variabl point recent alloc object method invoca analysi assum recent alloc object alway alloc youngest gener case may desir alloc larg object older gener ation straightforward extens analysi would static identifi object might alloc older gener suppress write barrier elimin store write object tion site analysi also conserv assum variabl refer recent alloc object calle type extens extens augment intraprocedur analysi inform invok method nd variabl refer object recent alloc within current analyz method the methodyoungest object also track type object alloc invok method program point extract pair set variabl refer methodyoungest object set type object potenti alloc method invok sinc methodyoungest object alloc store instruct write refer object methodyoungest object c supertyp type t transform elimin write barrier methodyoungest object younger object o caller context extens extens augment intraprocedur analysi inform pointsto inform call site may invok current analyz method receiv object current analyz method recent alloc object possibl call site algorithm assum variabl refer recent alloc object entri point current analyz method full interprocedur analysi combin calle type extens caller context extens obtain analysi use type inform calle pointsto inform caller experiment result show that set benchmark program full interprocedur analysi often abl elimin substanti number write barrier produc modest overal perform improv reduct total execut time moreov instrument benchmark dynam observ age sourc target object store instruct abl show two nine bench mark analysi abl elimin write barrier virtual store instruct creat refer older object younger object execut default input benchmark suit word analysi basic optim benchmark final optim requir inform call context call method neither calle type extens caller context extens abl elimin signic number write barrier paper provid follow contribut write barrier remov identi write barrier remov eectiv mean improv perform program use gener garbag collect analysi algorithm present sever new static analysi algorithm enabl compil automat remov unnecessari write barrier class treenod treenod left treenod right integ depth static public void mainstr arg void linkdepthint d new void linktreetreenod l treenod r int d linkdepthd right static treenod buildtreeint d d new treenod return t figur binari tree exampl best knowledg rst algorithm use program analysi elimin write barrier experiment result present complet set experiment result character eectiv analys set benchmark program result show full interprocedur analysi abl remov major write barrier program benchmark suit produc modest perform benet reduct total execut time remaind paper structur follow section present exampl illustr algorithm work use remov unnecessari write barrier section present analysi algorithm discuss experiment result section relat work section conclud section exampl figur present binari tree construct exampl addit left right eld implement tree structur tree node also depth eld refer integ object contain depth subtre root node exampl main method invok buildtre method call recurs creat left right subtre creat root treenod linktre method link left right subtre current node invok linkdepth method alloc integ object hold depth link new object tree focu two store instruct gener line figur store instruct link left right subtre receiv linktre method absenc inform rel age three object involv the left tree node right tree node receiv implement must conserv gener write barrier store oper particular program write barrier super uou receiv object alway younger left right tree node program exampl common pattern mani objectori program program alloc new object immedi invok method initi object write barrier often unnecessari assign object initi often recent alloc object exampl analysi allow compil omit unnecessari write barrier follow analysi rst determin that call site invok linktre method receiv object linktre recent alloc object analyz linktre method inform sinc alloc occur entri point linktre method store instruct line receiv object remain recent alloc object write barrier store instruct safe remov line linktre method invok linkdepth method alloc new integ object hold depth call linkdepth receiv object longer recent alloc object analysi linktre method algorithm track type object invok method may creat line analysi record fact receiv refer recent alloc object linktre method invok linktre method alloc new object far linkdepth method call linktre method alloc integ object store instruct line creat refer receiv object treenod object treenod superclass integ refer treenod object must exist linktre method start execut receiv recent alloc object point store instruct line creat refer object least old receiv write barrier line therefor super uou safe remov analysi analysi follow structur consist pure intraprocedur framework two interprocedur extens rst extens call calle type extens incorpor inform call meth od second extens call caller context extens incorpor inform call context two extens appli separ combin set four analys given tabl note even common case constructor initi recent alloc object receiv constructor may recent alloc object object alloc initi separ oper java bytecod object alloc may occur object alloc initi calle caller type extens context extens calle ye caller full interprocedur ye ye figur four analys remaind section structur follow present analysi featur section program represent section section present intraprocedur analysi present calle analysi section caller analysi section section present full interprocedur analysi final section describ analysi result use remov unnecessari write barrier analysi featur analys owsensit forward data ow analys comput must pointsto inform progam point precis natur comput data ow fact depend analysi gener analys work set variabl v must point object recent alloc current method option set type object alloc invok method program represent rest paper use v v v denot local variabl m denot method c c denot type statement relev analys follow object alloc statement move statement call statement given form rst paramet call v point receiv object method instanc method assum preced stage compil construct control ow graph method call graph entir program use entri denot entri point method m statement st program predst set predecessor st control ow graph use st denot program point immedi st st denot program point immedi st program point p of form st st denot ap inform comput analysi program point use callersm denot set call site may invok method m intraprocedur analysi simplest set analys intraprocedur analysi owsensit forward data ow analysi gener program point set variabl must point recent alloc object known mobject call variabl point mobject mvariabl properti lattic pvar the powerset set java instanc method nonstat method assign v v n fvg statement v figur transfer function intraprocedur analysi variabl var normal set inclus order re lation var set program variabl oper use combin data ow fact control ow merg point usual set intersect oper u figur present transfer function analysi case alloc statement c new object clearli becom recent alloc object sinc v variabl point newlyalloc object transfer function return singleton fvg call statement transfer function return sinc absenc interprocedur inform analysi must conserv assum call method may alloc number type object move sourc move v mvariabl destin move v becom mvariabl transfer function therefor return union current set mvariabl singleton fvg move statement sourc move mvariabl type assign ie load eld static eld destin move may mvariabl move transfer function therefor return current set mvariabl less destin variabl statement leav set mvariabl unchang analysi result satis follow equat st entri ufast st rst equat state analysi result program point immedi st st entri point method otherwis result meet analysi result program point immedi predecessor st want comput set variabl denit point recent alloc object use meet oper set intersect second equat state analysi result program point immedi st obtain appli transfer function st analysi result program point immedi st analysi start set mvariabl initi empti set entri point method full set variabl var the top element properti lattic program point use iter algorithm comput greatest xed point aforement equat subset inclus calle analysi calle type extens build upon framework intraprocedur analysi extend use inform type object alloc invok method extens stem follow observ intraprocedur analysi lose inform call site must conserv assum invok method may alloc number type object calle type extens allow us retain inform across call comput summari inform type object invok method may alloc so calle type extens relax notion mobject intraprocedur analysi mobject simpli recent alloc object calle type extens mobject object recent alloc statement current analyz method analysi comput program point tupl contain variabl set v type set t variabl set v contain variabl point mobject the mvariabl type set contain type object may alloc method invok sinc alloc mobject properti lattic var set program variabl type set type use program order relat lattic correspond meet oper top element lattic fact cartesian product lattic two lattic dierent order relat element differ mean must inform may inform figur present transfer function calle analysi except call statement transfer function treat variabl set compon tupl way intraprocedur analysi call statement unanalyz method for exampl nativ method transfer function produc veri conserv approxim h i call statement transfer function return variabl set unchang add type set type object may alloc call due dynam dispatch method invok st may one set method obtain call graph use auxiliari function calleesst determin type object alloc particular method use anoth auxiliari function alloc type set type may alloc call st simpli union result alloc type function appli compon set calleesst transfer function modi type set st alloc typesm assign v hv n fvg statement hv figur transfer function calle analysi alloc statement return second compon tupl calle function obtain directli program call graph alloc type function ecient comput use simpl owinsensit analysi determin least xed point equat given figur analysi solv data ow equat figur use standard work list algorithm start entri point method initi h i program point initi top element hvar i comput greatest xed point equat solut caller analysi caller context extens stem observ intraprocedur analysi inform mobject entri point method caller context extens augment analysi determin mobject alway receiv current analyz method so analyz method variabl element set variabl v must point mobject entri point method caller context extens properti lattic associ order relat meet oper intraprocedur analysi figur present addit data ow equat dene data ow result entri point method equat basic state receiv object method m object call site may invok method variabl refer mobject start method note class static method receiv v alway start method straightforward extend treatment handl call site mobject pass paramet receiv within stronglyconnect compon call graph analysi use xed point algorithm comput greatest xed point combin interprocedur intraprocedur equat initi analysi fthisg method entri point var program point within stronglyconnect compon iter xed point stronglyconnect compon algorithm simpli propag caller context inform topdown fashion stronglyconnect compon analyz compon contain method may invok full interprocedur analysi full interprocedur analysi combin calle type extens caller context extens transfer function calle analysi given tabl likewis properti lattic associ order relat meet oper calle analysi analysi result entri point method howev subject equat given figur extens analysi recogn use hfthisg i analysi result entri point entri method if call site may invok m receiv object method mobject type set note expand denit safe method addit propag type set inform call context call method like algorithm caller analysi algorithm full interprocedur analysi use xed point algorithm within stronglyconnect compon propag caller context inform topdown fashion compon initi analysi algorithm comput greatest xed point data ow equat use analysi result easi see result intraprocedur analysi use remov unnecessari write barrier sinc mvariabl must point recent alloc ob ject write barrier remov store object point mvariabl sinc refer creat must point younger object older one result caller analysi use way less obviou analysi result use calle type extens appli sinc result includ type set addit variabl set consid store form v analysi result comput program point immedi store v v v must point mobject object alloc recent mobject must type c c t actual ie dynam type object point v includ t object v point must older object v point to write barrier associ alloc st st call alloc typesm j ac c c c c figur equat alloc type function aentri instanc method st callersm v v st form figur equat entri point method caller analysi store therefor remov v v type v ancestor type t note v sucient condit sinc static type v may dierent dynam type analysi result use way whenev calle type extens appli ie calle full interprocedur analys experiment result next present experiment result character eectiv optim gener full interprocedur analysi abl remov major write barrier applic applic execut mani write barrier per second optim deliv modest perform benet overal execut time synergist interact calle type extens caller context extens gener analysi must use extens remov signic number write barrier methodolog implement four write barrier elimin analys mit flex compil system aheadoftim compil java program written java system includ implement analys avail gnu gpl wwwflexclcsmitedu flex runtim use copi gener collector two gener nurseri tenur gener use rememb set track pointer tenur gener nurseri rememb set implement use static alloc array store address creat refer write barrier therefor execut store next free element array increment pointer element manual tune size array characterist applic abl elimin array ow check would otherwis necessari implement present result analysi run java ver write barrier therefor somewhat ecient would gener system design execut arbitrari program apriori inform behavior program sion olden benchmark benchmark set contain follow applic implement barneshut nbodi solver bisort implement biton sort emd model propag electromagnet wave object three dimens simul healthcar system colombia mst comput minimum span tree graph use bentley algorithm perimet comput total perimet region binari imag repres quadtre power maxim econom ecienc commun power consum treeadd sum valu node binari tree use recurs depthrst travers tsp solv travel salesman problem voronoi comput voronoi diagram random set point includ result tsp use nond terminist probabilist algorithm caus number barrier execut vastli dierent run execut addit three benchmark bh power treeadd modi benchmark construct mathvector leaf treenod data structur respect bottomup instead topdown manner present result follow compil option baselin optim write heap associ write barrier aentri instanc method st callersm v v hv st form figur equat entri point method full interprocedur analysi intraprocedur intraprocedur analysi describ section calle onli analysi describ section use inform type object alloc invok method caller onli analysi describ section use inform context method invok specic analysi determin receiv analyz method alway recent alloc object and so exploit fact analysi method full interprocedur analysi describ section use inform type object alloc invok method context analyz method invok caller full interprocedur analys view dynam dispatch call analyz transfer function call site conserv set analysi inform h i explain section includ alloc inform call site sig nicantli increas analysi time provid correspond increas number elimin write barrier applic analys use mit flex compil gener two execut instrument execut count number execut write barrier uninstru execut without count version except baselin version compil use analysi result elimin unnecessari write barrier ran execut mhz intel pentiumiii cpu mb memori run redhat linux use default input paramet java version olden benchmark set applic given tabl elimin write barrier figur present percentag write barrier dierent analys elimin bar version applic bar plot wwb w number write barrier dynam execut correspond version program wb number write barrier execut baselin version program bh health perimet treeadd full interprocedur analysi elimin write barrier elimin less bisort emd note synergist interact occur exploit inform call method call context applic except health caller calle version analysi abl elimin write barrier combin full interprocedur analysi mani case analysi abl elimin vast major write barrier bh bisort emd health mst perimet power treeadd voronoi full interprocedur caller calle intraprocedur percentag decreas write barrier execut figur percentag decreas write barrier execut evalu optim analysi use mit flex compil system produc version applic write instruct instrument determin if current execut program write instruct ever creat refer older object younger object instruct ever creat refer write barrier denit necessari cannot remov agebas algorithm whose goal elimin write barrier associ instruct alway creat refer younger object older object two possibl store instruct never creat refer older object younger object regardless input store instruct never creat refer older object younger object case write barrier static re move even though store instruct creat refer older object younger object current execut may execut input case write barrier cannot static remov figur present result experi present one bar applic divid bar three categori unremov write barrier percentag execut write barrier instruct creat refer older object younger object remov write barrier percentag execut write barrier full interprocedur analbh bisort emd health mst perimet power treeadd voronoi proport dynamicwrit barrier unremov remov potenti remov figur write barrier character ysi elimin potenti remov rest write barri er ie percentag execut write barrier full interprocedur analysi fail elimin instruct never creat refer older object younger object run input set result show two applic analysi almost optim sens manag elimin almost write barrier elimin agebas write barrier elimin scheme execut time ran version applic without instrumen tation four time measur execut time run time reproduc see figur raw execut time data standard deviat figur present mean execut time version applic execut time normal mean execut time baselin version gener benet rather modest optim produc overal perform improv six applic obtain signic benet optimiza tion even though analysi manag remov vast major write barrier applic figur present write barrier densiti dier ent version dierent applic write barrier densiti simpli number write barrier execut per second ie number execut write barrier divid execut time program number clearli show obtain signic benet write barrier elimin two thing must occur baselin version applic must high write barrier densiti analysi must elimin write barrier analysi time figur present analysi time dierent applic analys includ full dynam interprocedur analysi tabl version analysi includ calle alloc type inform callbh bisort emd health mst perimet power treeadd voronoi normal execut time intraprocedur calle caller full interprocedur figur normal execut time benchmark program benchmark write barrier densiti write barrierss bisort emd health mst perimet power treeadd figur write barrier densiti baselin version benchmark program site becaus dynam dispatch multipl potenti invok method time indic includ dynam dispatch call site signicantli increas analysi time includ site signi cantli improv abil compil elimin write barrier howev sinc full interprocedur analysi alreadi nearli optim seven nine benchmark program discuss experiment result show that mani benchmark program analysi abl remov substanti number write barrier perform improv remov write barrier depend inher barrier densiti applic larger barrier densiti larger perform improv ment perform impact optim clearli vari base perform characterist particular execut platform optim produc modest perform increas platform instrument applic nd store instruct analysi time full full dynam benchmark intraprocedur calle caller interprocedur interprocedur bh bisort emd health mst perimet power treeadd voronoi figur analysi time dierent analysi version creat refer older object younger object abl obtain conserv upper bound number write barrier agebas write barrier elimin algorithm would abl elimin result show two case algorithm achiev upper bound anticip futur analys transform focu chang object alloc order expos addit opportun elimin write barrier gener may nontrivi task autom sinc may involv hoist alloc sever level call graph even restructur applic chang alloc strategi entir data structur relat work vast bodi literatur dierent approach write barrier gener garbag collect comparison techniqu found sever research investig implement techniqu ecient write barrier goal reduc write barrier overhead view techniqu orthogon complementari goal analys reduc time requir execut write barrier nd super uou write barrier simpli remov program best knowledg algorithm rst use program analysi remov unnecessari write barrier conclus write barrier overhead tradit unavoid price one pay use gener garbag collec tion result paper show possibl develop rel simpl interprocedur algorithm can mani case elimin write barrier program key idea use intraprocedur must pointsto analysi nd variabl point recent alloc object extend analysi inform type object alloc invok method inform must pointsto relationship call context incorpor two kind inform produc algorithm often eectiv elimin virtual unnecessari write barrier benchmark input paramet use bh bisort number emd node outdegre health level time step mst vertic perimet power custom treeadd level voronoi point figur input paramet use java version olden benchmark acknowledg c scott ananian implement flex compil infrastructur analysi implement mani thank alexandru salcianu help formal analys r simpl gener collect fast alloc hierarch on log n forc calcul algorithm parallel algorithm construct minimum span tree adapt biton sort optim parallel algorithm sharedmemori machin data ow analysi softwar prefetch link data structur java softwar cach comput migrat olden design implement self compil parallel program splitc rememb set also play card garbag collect algorithm automat dynam memori manag probabilist analysi partit algorithm travelingsalesman problem plane perform studi time warp decentr optim power price develop parallel program comput perimet region imag repres quadtre gener scaveng nondisrupt high perform storag reclam algorithm barrier method garbag collect tr adapt biton sort optim parallel algorithm sharedmemori machin simpl gener garbag collect fast alloc compar perform evalu write barrier implement design implement self compil optim compil objectori program languag decentr optim power price parallel program splitc softwar cach comput migrat olden garbag collect data flow analysi softwar prefetch link data structur java gener scaveng