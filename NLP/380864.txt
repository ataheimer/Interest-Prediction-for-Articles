t optim slice parallel program a optim program slice determin statement program pgr whether affect specifi set statement given condit pgr interpret nondeterminist choicesonli recent shown reachabl program point henc also optim slice undecid multithread program parameterless procedur synchron here sharpen result prove slice remain undecid synchron abandonedalthough reachabl becom polynomi moreov show multithread program without synchron slice stay pspacehard procedur call forbidden becom nphard loopfre program sinc latter two problem solv pspace np respect even presenc synchron new lower bound tightfin show decid lower bound properti equal appli simpl program analysi problem like copi constant propag true live variabl contrast problem strong copi constant propag ordinari live variabl polynomi algorithm design b introduct static program slice establish program reduct techniqu applic program under stand debug test recent also propos techniqu amelior stateexplos problem formal verifi softwar hardwar goal program slice identifi remov part program cannot potenti influenc certain valu certain program point in terest latter call slice criterion vast amount literatur slice sequenti languag see refer tip survey crucial idea found mani variat perform slice mean backward reachabl analysi graph model basic depend instruct approach pioneer ottenstein ottenstein propos use structur call pdg program depend graph apdg captur two kind depend data depend control depend intuit statement data depend anoth statement updat variabl referenc s exampl x e f data depend appear e path program statement updat y control depend captur guard of branch statement loop may determin whether statement execut not formal definit found eg first consid static slice concurr languag j cheng recent year interest problem increas due prolifer concurr languag work connect slice javalik languag vhdl promela input languag spin model checker articl common slice approach backward reachabl problem extend form pdg call process depend net multithread depend graph etc structur model depend besid data control depend may aris concurr program consid kind one depend interfer depend statement interfer depend statement anoth thread two thread may run parallel variabl updat referenc s captur situat parallel execut two thread may execut way share variabl overwritten between interfer depend may interpret kind data depend aris interleav execut kind depend repres data flow induc messag pass control flow induc synchron oper program slice algorithm must sound must slice away part program aect given slice criterion ideal slicer remov much program possibl without sacrif sound weiser show alreadi problem determin whether slice statementminim undecid p problem undecid whether condit found program may true or fals execut path dataflow analysi gener suer problem common remedi ignor condit altogeth defin feasibl path word condit branch interpret nondeterminist branch ing point view adopt paper call slicer optim determin statementminim slice abstract sequenti intraprocedur case ie singl proce dure pdgbase slice ecient optim optim also achiev sequenti interprocedur case solv contextfre reachabl problem system depend graph sdg program question analysi done polynomi time concurr languag procedur synchron primit even reachabl undecid recent result ramalingam impli also optim slice cannot decid paper consid optim slice concurr languag drop facil synchron consequ reachabl well revers reachabl becom decidableeven polynomi new result optim slice remain und cidabl refin new undecid result prove optim slice pspacehard case procedur call still nphard also loop aban done latter two lower complex bound optim match correspond upper bound conclud ecient slice algorithm concurr languag doom suboptim unless ppspace result shown weak assumpt concurr languag intuit exploit weak interfer depend onli synchron properti exploit result point fundament limit slice concurr languag ramalingam henc applic much wider rang concurr scenario final consid relat program analysi problem copi constant propag true live variabl exhibit similar undecid complex result slice therebi strengthen recent result certain sens come surpris slightli simpler analysi question name strong copi constant propag ordinari live variabl optim solv polynomi time motiv exampl turn technic result let us discuss small exampl illustr backward reachabl depend graph give suboptim result join b join b a cfglike represent b data interfer depend figur illustr exampl slice parallel program consid program fig a control flow graphlik represent program shown b data interfer de pendenc interest slice wrt variabl c write instruct we alway use write instruct paper mark slice criterion clearli conv nientli purpos write instruct here clearli instruct backward reachabl depend graph execut program realiz depend path therefor optim slicer must remov order see consid execut b must execut either c b parallel thread execut c b kill propag b c b execut c b subsequ statement c kill propag c b writec undecid hard result exploit propag prohibit way mean reiniti krink also mention inter ferenc depend transit give exampl is howev less subtl natur exampl he too consid synchron oper present optim algorithm intraprocedur parallel case algorithm worstcas exponenti give hard proof pspacehard result explain believ pspacehardnesswhi could find polynomi algorithm parallel program consid prototyp languag share memori atom assign forkjoin parallel assign simpl form need x k k either constant variabl procedur parallel program compris finit set proc procedur name contain distinguish name main procedur name p associ statement p correspond procedur bodi construct accord follow grammar q rang procmain x given finit set variabl use syntax procedur p p end indic associ procedur bodi procedur name note procedur paramet specif natur constant domain interpret immateri need two constant repres dierent valu whichbi abus notationar denot too word need boolean variabl atom statement languag assign statement x e assign current valu e variabl x donoth statement skip write statement write statement signifi slice criterion statement form q denot call procedur q oper denot sequenti composit parallel composit oper repres nondeterminist branch loop end stand loop iter indefinit number time construct chosen accord common abstract condit mention introduct appli nondeterminist choic oper also finit set statement n denot n ambigu inher notat harmless commut associ idempot semant note synchron oper languag synchron start termin inher fork joinparallel also essenti result see section parallel understood interleav fashion assign write statement assum atom run program maxim sequenc atom statement may execut order execut program program x exampl three run x x y x x x x y y x x x y denot set run program run interprocedur slice remaind paper adopt follow definit optim slice problem decis problem instanc compris nondeterminist parallel program slice criterion c given writeinstruct program statement problem decid whether belong optim slice respect c slice problem parameter class program consid theorem parallel interprocedur slice undecid wellknown termin problem two counter machin undecid remaind section reduc problem interprocedur slice problem therebi prove theorem twocount machin twocount machin two counter variabl c c increment decrement test zero common use combin decrement test instruct order avoid complic decrement zero counter basic idea reduct repres valu counter stack height two thread procedur run parallel increment counter repres call anoth procedur correspond thread decrement return current procedur test zero use dier ent procedur first stack level repres possibl move zero nonzero counter respect simplifi argument comput step involv two counter altern alway enforc ad skipinstruct noth except transfer control formal use follow model twocount machin compris finit set control state s partit two set q qm move involv counter c start p move involv counter c q execut commenc distinguish start state which wlog p also distinguish final state wlog pn execut termin state except final state pn associ instruct is taken follow select c c goto skip q note condit captur move altern execut twocount machin repres transit relat m configur s x x consist current state current valu x x counter configur pn call final configur s x xm one follow condit valid xi thu nonfin configur uniqu successor configur denot reflex transit closur m omit subscript clear context execut twocount machin commenc start state counter initi zero ie configur p twocount machin termin ever reach final state ie p pn x x x x far halt behavior concern assum without loss gener counter zero upon termin ensur ad two loop final state iter procedur loop els procedur loop els goto q l procedur killallp figur definit p p decrement counter becom zero obvious modif preserv termin behavior twocount machin note modifi machin condit p pn x x x x p pn equival assum follow loop ad given machin construct program twocount machin construct parallel program m state pk p program use variabl xk state q l q variabl l intu itiv xk hold valu execut program execut correspond run twocount machin reach state pk similarli l main procedur m read follow procedur main procedur init consid slice respect variabl xn writeinstruct slice criterion construct done initi x belong optim slice termin show theorem goal construct also reformul follow initi x occurr constant program assign statement copi valu initi variabl termin xn may hold writestat initi variabl except x reflect p initi state two counter program use two procedur p p counter c procedur loop l els procedur loop els goto p l procedur figur definit q q q q counter c definit found fig describ p p detail follow q q complet analog intuit p p mirror transit induc counter c respect henc name procedur nondeterminist guess next tran sition transit involv two thing first state chang and secondli eect counter valu state chang pk q l repres copi xk l via auxiliari variabl p reiniti xk zero part killallp eect counter valu repres proceed transit chang counter jump back begin procedur transit counter valu simul subsequ appli skiptransit testdecr transit zero counter ie testdecr transit simul p increment transit call anoth instanc p simul transit induc increment counter return new instanc p mean counter decrement ie old valu therefor jump back begin procedur return p testdecr transit simul p leav current procedur behavior describ structur way mean loop sequenti nondeterminist composit consist represent counter valu number instanc p stack problem achiev procedur may tri cheat may execut code repres transit p q j although x hold valu decrement increment transit coincid counter valu stack height may destroy valu may subsequ propag erron cheat may thu invalid if direct problem solv follow ensur appropri reiniti variabl set procedur tri cheat thu execut cannot contribut propag valu reiniti set variabl safe trivial concurr environ atom assign singl variabl avail abl variabl set may well set anoth valu instruct execut instanc procedur q q run parallel initi variabl assumpt move involv counter altern come play due assumpt copi assign q q form q x j q q analog auxiliari variabl p thu safe assign p p target copi instruct q q done so safe assign q copi instruct q execut parallel thread cannot destroy valu contain alreadi safe assign x similar argument explain definit killal p correct reduct intuit underli definit m onli if direct rather obviou termin ie transit lead p pn simul transit propag run m explain definit killallp justifi if direct well formal proof given along line classic owickigri method prove partial correct parallel program although method usual present program without procedur sound also procedur program ow ickigri method program annot assert repres properti valid execut reach program point assert written down annot subject certain rule guarante sound method specif prove writeinstruc tion m follow assert valid valid assert impli if direct detail proof defer appendix a proof compar undecid reachabl presenc synchron prove ramalingam undecid ltl modelcheck parallel languag even without synchron prove bouajjani habermehl proof employ two sequenti thread run parallel ramalingam use two recurs stack thread simul contextfre grammar deriv two word whose equal enforc synchron facil program languag bouajjani habermehl use two recurs stack simul two counter as do whose joint oper synchron ltl formula thu proof reli kind extern synchron two thread avail scenario instead undecid proof work intern syn chroniz provid implicitli kill circul valu soon one thread deviat intend synchron behavior intraprocedur slice undecid result present mean cannot expect program slicer parallel program optim therefor must lower expect dataflow analysi one often investig also intraprocedur problem view problem program without procedur call here find theorem parallel intraprocedur slice pspacecomplet forkjoin parallel program without procedur number thread potenti run parallel bound size program therefor everi run program simul ture machin use polynomi amount space conclud intraprocedur optim parallel slice problem pspace remain show pspace also lower bound complex optim intraprocedur parallel slicer ie pspacehard done reduct regular express intersect problem problem chosen favor better known intersect problem finit automata head structur program flow graph instanc regular express intersect given sequenc r rn regular express finit alphabet a problem decid whether nonempti lemma regular express intersect problem pspacecomplet fact pspacehard regular express intersect problem follow reduct accept problem linear space bound ture machin along line correspond proof finit automata problem remain pspacecomplet consid express without suppos a ak given n regular express r rn reduct construct parallel program start n thread n initi variabl use program procedur main thread refer variabl x ia i n a thread defin follow statement killal defin ensur variabl except reiniti irrespect behavior thread shown below induc regular express r given defin induct r follow statement killal reiniti variabl except statement well statement killx j killxi j definit base defin follow obviou thread safe reiniti variabl thread may arbitrarili in terleav exploit copi instruct form j x ja x ja j j present thread done perform reiniti order specifi abov two crucial properti exploit thi first whenev b copi assign parallel thread variabl b reiniti a therefor execut b reiniti b copi initi valu b cannot destroy initi a sec ondli constant assign k parallel thread valu gener altogeth thread construct way follow valid belong optim slice follow describ intuit underli construct time prove thread consid form ring process process process i left neighbor i right neighbor thread word lr thread guess word special form thread ensur propag initi valu xna agre guess word interleav correspond run disciplin fashion obvious latter possibl l word lr lrn first letter alphabet a run induc w success propag valu thread circul valu around ring process variabl x ic letter c w call propag game follow begin jth round process propos letter c j copi valu variabl xnc j xc j left previou round initi izat respect technic reason copi done via local variabl afterward process success copi valu x ic j follow addit subtract subscript variabl process understood modulo n local strict sens thread use target sourc copi assign reiniti it via local variabl xnc j copi next round xc j on last round j l final copi valu xnc l xa process termin writingbi littl abus a singl run a a b singl run xna killal x b summar discuss say run n wit initi xna belong optim slice impli onli if direct next show construct thread ensur run follow propag game cannot propag valu writeinstruct particular propag run exist impli if direct note first run compos piec a run piec form a b easili shown induct run deviat propag game two way first follow rule termin middl round run propag valu write instruct killal cm reiniti xa secondli run might ceas follow rule propag game initi possibl empti part consid first code piec a a b start neglig propag game rule hard see first statement code piec respect set local variabl zero reason propag game ensur variabl x ia xna hold unless next statement execut accord rule propag game come a a b re spectiv subsequ statement killal killal irrevoc reiniti variabl irrespect behavior thread shown abov thu run also cannot propag valu writeinstruct owickigri style proof confirm fact contain full paper slice loopfre program may lower expect even more ban addit procedur also loop program expect slice optim even then problem remain intract unless pnp theorem parallel intraprocedur slice loopfre program npcomplet problem np easi see statement optim slice guess run wit statement aect slice criterion run involv statement program program loopfre henc length consequ time necessari guess run linear size given program nphard prove special construct section starfre regular express intersect problem express npcomplet altern reduct wellknown sat problem given contrast construct current paper reduct reli propag along copi assign quasisynchro nizat welldirect reiniti variabl howev techniqu seem gener gener intraprocedur interprocedur case extens beyond forkjoin parallel weak form synchron inher forkjoin parallel use paper start termin thread synchron hard result paper howev restrict set also shown without assum synchron start termin therefor also appli languag like java pspacehard proof section instanc modifi follow let c two new distinct letter defin initi final writeinstruct move thread specif redefin follow loop of cours statement killx reiniti also new variabl x ic x id essenti modif amount requir propag game play first round letter cthi ensur quasisynchron start threadsand final round letter dthi ensur quasisynchron termin thu belong optim slice n similar modif work reduct section dataflow analysi problem techniqu use obtain similar result also optim program analysi problem par ticular detect truli life variabl copi constant therebi strengthen recent complex result problem variabl x live program point p run p end program x use overwritten refer horwitz et al defin variabl x truli live program point p run p end program x use truli life context defin truli live context mean predic call librari routin express whose valu assign truli life variabl thu true live seen refin ordinari live properti program consid paper variabl initi crucial initi statement truli live program point statement belong optim slice therefor lower bound provid theorem immedi translat correspond bound also truli live variabl problem sinc upper bound pspace np intraprocedur loopfre intraprocedur program also easili verifi obtain complex character theorem inde result sharp contrast detect ordinari live variabl program point shown solvabl even polynomi time constant propag standard analysi compil er aim detect express guarante evalu valu run program inform exploit eg express simplif branch elimin copi constant detect pp particularli simpl variant problem sequenti program problem assign statement simpl form x c constant assign x copi assign c constant x variabl consid restrict obey program paper here obtain theorem interprocedur copi constant detect problem undecid parallel program intraprocedur copi constant detect problem pspacecomplet parallel program intraprocedur copi constant detect problem conpcomplet loopfre parallel program small modif necessari appli reduct paper copi constant detect parallel program statement z skip must ad writestat z written variabl obvious statement prohibit z copi constant valu write statement modif z copi constant write statement necessarili valu i writestat cannot output valu latter case i crucial initi statement question belong optim slice prove lower bound theorem upper bound easili achiev nondeterminist algorithm guess path wit nonconst theorem essenti state optim detect copi constant parallel program intract result contrast detect problem strong copi constant strong copi constant dier full copi constant constant assign taken account analysi particular variabl strong copi constant program point p also copi constant detect strong copi constant turn much simpler problem solv polynomi time conclus paper studi complex synchro nizationindepend program slice relat dataflow problem parallel languag mean reduct halt problem twocount machin shown interprocedur problem undecid consid program without procedur call intraproc dural problem slice problem becom decid still intract specif shown pspacehard mean reduct intersect problem regular express final even restrict attent parallel straightlin program problem remain nphard lower bound tight match upper bound easi establish previou complex undecid result dataflow problem concurr languag exploit essenti way synchron primit consid languag contrast result hold independ synchron exploit interleav atom statement thu applic much wider class concurr languag r verif sequenti concurr program constrain properti slice concurr programsa graphtheoret approach program slice vhdl automatatheoret approach interprocedur dataflow analysi craft compil program verif invari approxim semant respect program transform interprocedur slice use depend graph demand interprocedur dataflow analysi program slice vhdl descript applic parallel constant propag lower bound natur proof system static slice thread program issu slice promela applic model check comput finit infinit machin program depend graph softwar develop environ axiomat proof techniqu parallel program complex analyz synchron structur concurr program survey program slice techniqu program slice slice concurr java program tr craft compil interprocedur slice use depend graph verif sequenti concurr program nd ed static slice thread program effici algorithm pre post interprocedur parallel flow graph contextsensit synchronizationsensit analysi undecid program verif constraintbas interprocedur analysi parallel program complex copi constant detect parallel program parallel constant propag constrain properti semilinear system petri net automatatheoret approach interprocedur dataflow analysi slice concurr program graphtheoret approach formal studi slice multithread program jvm concurr primit invari approxim semant respect program transform program depend graph softwar develop environ slice concurr java program ctr jen krink contextsensit slice concurr program acm sigsoft softwar engin note v n septemb marku mllerolm precis interprocedur depend analysi parallel program theoret comput scienc v n p januari javier esparza grammar process formal natur comput springerverlag new york inc new york ny mangala gowri nanda s ramesh interprocedur slice multithread program applic java acm transact program languag system topla v n p novemb ingo brckner bjrn metzler heik wehrheim optim slice formal specif deduct verif nordic journal comput v n p june hon f li juergen rill dhrubajyoti goswami granularitydriven dynam predic slice algorithm messag pass system autom softwar engin v n p januari baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v n march