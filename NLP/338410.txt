t strategi combin learn via logic program a discuss adopt threevalu set induct concept learn distinguish true fals unknown use situat decis taken basi scarc ambigu downright contradictori inform threevalu set learn definit target concept opposit consid posit neg exampl instanc two disjoint class purpos adopt extend logic program elp wellfound semant explicit negat wfsx represent formal learn show elp use specifi combin strategi declar way also cope contradict exceptionsexplicit negat use repres opposit concept default negat use ensur consist handl except gener rule except repres exampl cover definit concept belong train set opposit conceptstandard induct logic program techniqu employ learn concept opposit depend adopt techniqu learn gener least gener definit thu four epistemolog varieti occur result combin gener least gener solut posit neg concept discuss factor taken account choos strateg combin gener level posit neg conceptsin paper also handl issu strateg combin possibl contradictori learnt definit predic explicit negational all show extend logic program wellfound semant explicit negat add express learn task allow tackl number represent strateg issu principl wayour techniqu implement exampl run stateoftheart logic program system tabl implement wfsx b introduct work induct concept learn consid twovalu set set entail learn theori consid fals basi close world assumpt cwa howev practic often case confid truth falsiti limit number fact abl draw conclus remain one avail inform scarc like point typic case autonom agent that increment way gather inform surround world agent need distinguish true fals unknown therefor need learn within richer threevalu set purpos adopt class extend logic program elp short sequel represent languag learn threevalu set elp contain two kind negat default negat plu second form nega tion call explicit whose combin recogn elsewher express mean knowledg represent adopt elp allow one deal directli languag incomplet contradictori knowledg except default negat well truli neg inform mean explicit negat instanc shown elp applic divers domain knowledg represent concept hierarchi reason action belief revis counterfactu diagnosi updat debug work show first time journal variou approach strategi adopt induct logic program ilp henceforth learn elp extens wellfound semant answerset semant use learn process start set posit neg exampl plu background knowledg form extend logic program posit neg inform train set treat equal learn definit posit concept p explicitli negat concept p coverag exampl test adopt slx interpret elp wellfound semant explicit negat defin valid paraconsist version negat use learn process handl except gener rule except posit concept identifi neg exampl wherea except neg concept identifi posit exampl work adopt standard ilp techniqu learn concept opposit depend techniqu adopt one learn gener least gener definit concept accordingli four epistemolog varieti occur result mutual combin gener least gener solut posit neg concept possibl express via elp discuss factor taken account choos level gener each combin defin specif learn strategi cope contradict in paper concentr singl predic learn sake simplic inde separ learn posit neg concept may conflict and order handl possibl contradict contradictori learn rule made defeas make learn definit posit concept p depend default negat neg concept p viceversa ie definit introduc except other way cope contradict even gener learn n disjoint class modifi order take account prefer among multipl learn agent inform sourc see paper organ follow first motiv use elp target background languag section introduc new ilp framework section examin section factor taken account choos level gener learn theori section propos combin learn definit within elp order avoid inconsist unseen atom opposit use mutual defeat nondeterminist rule incorpor except negat default descript algorithm learn elp follow next section overal system implement section section evalu obtain classif accuraci final examin relat work section conclud logic program epistem preliminari section first discuss motiv threevalued two type negat knowledg represent provid basic notion extend logic program w fsx threevalued default explicit negat artifici intellig ai need deal knowledg flux less perfect condit mean dynam form logic classic logic much focu research logic program lp field ai use logic directli program languag provid specif implement method effici work system horn claus notat use express conclus must support caus premis implic unidirect ie contraposit caus run backward variou extens lp introduc cope knowledg represent issu instanc default negat atom p not p introduc ai deal lack inform common situat real world introduc nonmonoton knowledg represent inde conclus might solid rule lead may defeas in stanc normal explicit inform lover whom though kind inform may arriv unexpectedli thu loverh l ie evid conclud loverh l l given h assum fals l given h mark grant posit neg inform equal stand is equal abl write model instead world peopl unfaith default custom requir explicitli prove someon take lover conclud person unfaith sinc inform normal express posit dint mental linguist econom close world assumpt cwa absent non explicitli obtain inform usual negat posit inform mean inform avail lover loverh l true cwa wherea loverh l not inde wherea cwa indispens context viz airport flight list assum nonexist other so though one resid might list phone book may rule exist phone epistemolog requisit reconcil read classic negat compli exclud middl provis yet new form negat dub logic program explicit negat which ignor provis adopt elp requir need revis assumpt introduc third truth valu name undefin framework fact combin instanc viewpoint two world faith becom confus assum marriedh k h k appear faithfulh k faithfulh k contradictorili true inde sinc evid loverh l loverh l simpli inform them make two simultan assumpt falsiti assumpt lead contradict one retract it threevalu set mean make undefin imposit undefined loverh l loverh l achiev simpli ad knowledg claus loverh l loverh l loverh l loverh l therebi make faithfulh k faithfulh k undefin too given inform prove neither loverh l loverh l true fals attempt run selfreferenti circl involv default negat safest skeptic third option take side marit disput abstain believ either even presenc selfreferenti loop involv default negat wellfound semant logic program wf assign liter two claus truth valu undefin knowledg skeptic wellfound model allow also two incompat non truthminim credul model extend logic program extend logic program finit set rule form n l object liter l liter rule stand set ground instanc object liter form a atom liter either object liter l default negat l a said opposit liter and vice versa complementari liter and vice versa fa mean fnot g liter mean fa g set object liter program p call extend herbrand base repres h e p interpret extend program p denot f f disjoint subset h e p object liter said true object liter f said fals h said undefin introduc languag proposit u undefin everi interpret wfsx extend well found semant wf normal logic program case extend logic program wfsx obtain wf ad coher principl relat two form negat if l object liter l belong model program also l belong model ie l l notic that thank principl interpret f extend logic program p consid wfsx semant noncontradictori ie pair object liter a program p belong a belong definit wfsx report appendix object liter true wfsx elp p write a let us show exampl wfsx case simpl program exampl consid follow extend logic program b wfsx model program b ag a true fals b fals there rule b b undefin notic model sinc impli a via coher principl one import characterist wfsx provid semant import class extend logic program set nonstratifi pro gram ie set program contain recurs default negat extend logic program stratifi depend graph contain cycl arc label gamma depend graph program p label graph node predic p arc predic p predic q q appear bodi claus p head arc label appear object liter bodi gamma appear default liter nonstratifi program use knowledg represent wfsx semant assign truth valu undefin liter involv recurs cycl negat shown section loverh l loverh l section employ non stratifi program order resolv possibl contradict wfsx chosen among semant extend logic program answerset threevalu strong negat none other enjoy properti relev nonstratifi program ie cannot topdown queri procedur nonstratifi program instead wfsx exist topdown proof procedur slx correct respect semant cumul also enjoy wfsx ie add lemma semant chang see properti import speedingup implemen tation memor intermedi lemma tabl implement slx greatli improv answerset semant howev cumul nonstratifi program thu cannot use tabl slx topdown procedur wfsx reli two independ kind deriv tderiv prove truth tuderiv prove nonfals ie truth undefined shift one requir prove default liter l tderiv l succe tuderiv l fail tuderiv l succe tderiv l fail moreov tderiv l also succe tderiv l succe tuderiv l fail tderiv l succe thu take account coher principl given goal g conjunct liter g deriv slx elp p write p slx g slx procedur amen simpl preprocess implement map wfsx program wf program ttu transform transform linear essenti doubl number program claus then transform program execut xsb effici logic program system implement with polynomi complex wf tabl subsum prolog tabl xsb consist memoiz intermedi lemma properli deal nonstratif accord wf tabl import learn comput often repeat test coverag otherwis exampl allow comput wf simpl polynomi complex program size learn threevalu set realworld problem complet inform world imposs achiev necessari reason act basi avail partial inform situat incomplet knowledg import distinguish true fals unknown undefin situat occur exampl agent increment gather inform surround world select action basi acquir knowledg agent learn twovalu set encount problem highlight learn specif gener way learn cautiou definit target concept abl distinguish fals yet known see figur a suppos target predic repres allow action agent distinguish forbidden action action outcom restrict agent act power agent learn gener specif way instead know differ true unknown figur b and therefor tri action unknown outcom rather learn threevalu set abl distinguish allow action forbidden action action unknown outcom figur c way agent know part domain need explor tri action unknown outcom unless tri expand knowledg figur taken ab twovalu set c threevalu set therefor consid new learn problem want learn elp background knowledg elp set posit set neg exampl form ground fact target predic learn problem elp first introduc notion coverag defin mean truth answerset semant problem definit modifi consid coverag truth prefer wfsx semant definit learn extend logic program given ffl set p possibl extend logic program ffl set e posit exampl ground fact ffl set e gamma neg exampl ground fact ffl noncontradictori extend logic program b background knowledg find ffl extend logic program p p eg suppos train set e disjoint howev system also abl work overlap train set learn theori contain rule form everi target predic p stand tupl argument order satisfi complet requir rule p entail posit exampl rule p entail explicitli negat neg exampl consist requir satisfi ensur set rule entail instanc opposit element either train set note that case extend logic program consist respect train set equival requir program noncontradictori exampl requir enlarg requir program noncontradictori also unseen atom ie bp j ll everi atom l target predic say exampl e cover program p p e sinc slx procedur correct respect wfsx even contradictori program coverag exampl test verifi whether p slx e approach learn extend logic program consist initi appli convent ilp techniqu learn posit definit e neg definit techniqu slx procedur substitut standard logic program proof procedur test coverag exampl ilp techniqu use depend level gener want two definit look least gener solut lg gener solut mg problem learn concept complement practic lg mg uniqu real system usual learn theori least gener close approxim one two follow concept use signifi approxim theoret concept lgss found adopt one bottomup method rel least gener gener rlgg golem system invers resolut invers entail convers mgss found adopt topdown refin method cf system foil progol strategi combin differ gener gener concept learn import issu learn threevalu set twovalu set gener definit chosen extens ie gener set fals atom undesir automat decid complement true atom set threevalu set rather extens set fals atom depend gener definit learn neg concept therefor correspond level gener may chosen independ two definit thu afford four epistemolog case adopt elp allow express case combin declar smooth way furthermor gener solut learn posit neg concept clearli influenc interact definit learn mg concept opposit probabl intersect nonempti higher learn lg both accordingli decis type solut learn take account possibl interact well want reduc possibl learn two lg care interact learn two mg gener may learn differ gener combin distinct way differ strateg purpos within applic problem choic level gener made basi avail knowledg domain two criteria taken account damag risk may aris erron classif unseen object confid train set correct repres classifi yet unseen object belong concept may later discov object belong opposit concept gener concept higher number unseen atom cover definit higher risk erron classif depend damag may deriv mistak may decid take cautiou confid approach possibl damag extens concept high one learn lg concept possibl damag low one gener learn mg overal risk depend use learn concept within rule problem select solut induct problem accord cost misclassifi exampl studi number work predictor abl select cautious learn oper mean meta heurist metaheurist make select base userinput penalti predict error provid method select classifi given cost misclassif prior distribut posit neg instanc method base receiv oper characterist roc graph signal theori depict classifi point graph number fals posit x axi number true posit axi discuss differ cost misclassifi exampl taken account number algorithm decis tree learner bayesian classifi decis list learner reduc cost algorithm present select order rule learn order minim misclassif cost more over algorithm prune decis list present attempt minim cost avoid overfit discuss penalti incur learner output wrong classif consid order decid whether acquir addit inform activ learner regard confid train set prefer learn mg concept confid exampl opposit concept correct repres concept fact topdown method neg exampl use order delimit gener solut otherwis think exampl opposit concept reliabl learn lg follow present realist exampl kind reason use choos specifi prefer level gener discuss strateg combin differ level employ elp tool learn exampl consid person live bad neighbourhood lo angel honest man surviv need two concept one like attack him basi appear gang membership age past deal etc want take cautiou approach maxim attack minim attack attack concept allow avoid danger situat anoth concept need type beggar give money he good man actual seem deserv it basi appear health age etc sinc rich like trick learn beggar concept minim beggar maxim beggar beggar concept allow give money strictli appear need without fake howev reject beggar especi malici one may turn attack bad neighbourhood consequ think beggar might attack better permiss beggar placat money word maxim beggar minim beggar beggar concept concept use order minim risk take carri standard lot money meet someon like attack follow kind reason lot moneyx lot moneyx give moneyx give give lot money him may prefer run risk beaten up case relax attack concept attack relax much would use attackermg variou notion attack beggar learnt basi previou experi man see strategi elimin learn contradict learnt definit posit neg concept may overlap case contradictori classif object liter intersec tion order resolv conflict must distinguish two type liter intersect belong train set not also dub unseen atom see figur follow discuss resolv conflict case unseen liter liter train set first consid case train set disjoint later extend scope case nonempti intersect train set less perfect onward stand tupl argument unseen liter conflict resolv classifi undefin sinc argument support two classif equal strong instead liter train set conflict resolv give prioriti classif stipul train set word liter train set cover opposit definit made except definit figur interact posit neg definit except contradict unseen liter unseen liter intersect undefin classif obtain make opposit rule mutual defeas nondeterminist see target theori consequ express follow way p p x are respect definit learn posit neg concept obtain renam posit predic p explicit negat p gamma onward indic superscript definit learn separ posit neg concept want p x p x act except other case contradict introduc mutual circular henc undefined accord wfsx liter intersect p two stabl model one contain liter contain opposit liter accord wfsx third partial stabl model liter undefin ie liter p x p x p x p wellfound or least partial stabl model result program contain recurs negat ie nonstratifi topdown slx procedur go loop compris mechan loop detect treatment implement xsb tabl exampl let us consid exampl section order avoid contradict unseen atom learn definit must be mg x attackerx lg x attackerx lg x beggarx mg x beggarx mg x beggarx lg x beggarx lg x attackerx lg x attackerx note p x x display well undefin truth valu either origin background nonstratifi reli definit learn anoth target predic form therefor nonstratifi case threevalu semant produc liter valu undefin one p x x may undefin one undefin true rule make p p undefin sinc negat default undefin liter still undefin howev counterintuit defin valu prevail undefin one order handl case suppos system predic undefinedx avail succe liter x undefin add follow two rule definit p p accord claus p x true x true x undefin convers contradict exampl theori test consist liter train set conflict them howev case use relax consist requir learn claus cover small amount counter exampl advantag would otherwis imposs learn definit concept claus contain languag bia consist overspecif definit would learn compos mani specif claus instead gener one case definit posit neg concept may cover exampl opposit train set must consid except due abnorm opposit concept let us start case liter cover definit belong opposit train set want cours classifi accord classif given train set make liter except handl except classif rule add neg default liter form abnorm p x x rule p x express possibl abnorm aris except then everi except p t individu fact form abnorm p t resp abnormp t assert rule p x cover except opposit definit still cover it way except figur model theori correct truth valu learn theori thu take form abnorm p p abnormp p abnorm liter ad rule undefin case liter except also exampl must cover respect definit therefor cannot undefin notic e exampl p t p t classifi fals learn theori differ behaviour would obtain slightli chang form learn rule order adopt atom train set one classif default thu give prefer fals neg train set true posit train set individu fact form abnorm p use exampl learn definit abnorm p abnormp turn except definit abnorm p abnormp might found on thu lead hierarchi except for hierarch learn except see exampl consid domain contain entiti a b c d e f suppos target concept f lie let background knowledg be birda wingsa jetb wingsb angelc wingsc limbsc penguind wingsd limbsd doge limbs catf limbsf let train set be possibl learn theori is f liesx f lie x abnorm fli x f liesx f liesx f lie lie abnorm fli d f lie x wingsx f liesx gamma limbsx figur coverag definit opposit concept exampl figur show variou case liter learn threevalu set e exampl consist cover definit b f unseen liter contradict c liter contradict c classifi undefin wherea consid except posit definit classifi neg identifi contradict unseen liter use interact theori revis system ask oracl classifi liter lead contradict accordingli revis least gener solut p p use theori revis system revis clint detect uncov liter point theori extens extend logic program use well repres one learn n disjoint class train set contain number fact number predic definit learn use posit exampl liter train set classifi belong p and neg exampl liter class follow rule ensur consist unseen liter except abnorm p abnorm p abnorm pn regardless algorithm use learn algorithm learn extend logic program algorithm live learn valu environ learn elp contain nondeterminist rule concept opposit main procedur algorithm given below algorithm live input train set b background theori output learn theori obtain h by transform h p hp nondeterminist rule ad claus undefin case output h algorithm call procedur learndefinit that given set posit set neg exampl background knowledg return definit posit concept consist default rule togeth definit abnorm liter ani procedur learndefinit call twice posit concept neg concept call neg use posit train set e neg one learndefinit first call procedur learn learn definit h p target concept p learn consist ordinari ilp algorithm either bottomup topdown modifi adopt slx interpret test coverag exampl relax consist requir solut procedur thu return theori may cover opposit exampl opposit exampl treat except ad default liter inconsist rule ad proper fact abnorm predic partic ular rule cover neg exampl new nonabnorm liter abnorm r x ad r fact abnorm r ad theori exampl abnorm r obtain exampl p observ that order cover exampl p t p atom abnorm r t must fals therefor fact abnorm r obtain r opposit exampl cover rule procedur learndefinit input posit exampl neg exampl b background theori output learn theori h h p rule r h p find set r posit neg exampl cover r r empti add liter abnorm r x r tg fact r transform p r abnorm r t endif enfor output h let us discuss detail algorithm implement learn pro cedur depend gener solut want learn differ algorithm must employ topdown algorithm learn mg bottomup algorithm lg case algorithm must that consist solut cannot found return theori cover least number neg exampl learn topdown algorithm consist necess stop criterion must relax allow claus inconsist small number neg exampl eg adopt one heurist necess stop criteria propos ilp handl nois encod length restrict foil signific test mfoil way abl learn definit concept except claus must special much order make consist prefer transform default rule consid cover neg exampl except simplest criterion adopt stop special claus liter languag bia ad reduc coverag neg exampl learn bottomup algorithm learn use posit exampl use rlgg oper sinc claus test neg exampl may cover them approach realiz use system golem implement order learn gener solut topdown ilp algorithm cf integr procedur slx test coverag special loop topdown system consist beam search space possibl claus step loop system remov best claus beam gener refin evalu accord accuraci heurist function refin cover least one posit exampl ad beam best claus found far also separ store claus compar refin replac refin better special loop stop either best claus beam consist beam becom empti system return best claus found far beam may becom empti consist claus found case system return inconsist claus order find least gener solut golem system employ finit wellfound model comput slx transform replac liter form a new predic symbol form neg a golem call comput model background knowledg output golem pars order extract claus gener rlgg postprocess drop liter thu claus extract belong least gener solut fact obtain randomli pick coupl exampl comput rlgg choos consist one cover biggest number posit exampl claus gener choos randomli new posit exampl comput rlgg previous gener claus exampl consist gener cover exampl chosen gener claus start cover neg exampl invers model transform appli rule thu obtain substitut liter form neg liter a live implement xsb prolog code system found httpwwwliadeisuniboitsoftwarel classif accuraci section compar accuraci obtain mean twovalu definit target concept one obtain mean threevalu definit accuraci twovalu definit set test exampl defin number exampl correctli classifi theori total number test exampl number exampl correctli classifi given number posit exampl cover learn theori plu number neg exampl cover theori np number posit exampl cover learn definit nn number neg exampl cover definit nptot total number posit exampl nntot total number neg exampl accuraci given by nptot nntot learn three valu set definit target concept opposit consid differ notion accuraci case atom posit neg test set classifi undefin undefin atom cover definit learn posit concept learn opposit one whichev right classif atom test set erron classifi learn threevalu theori erron cover opposit definit onli explain weight assign undefin atom ie new gener notion accuraci number exampl correctli classifi theori total number test exampl theta number exampl classifi unknown total number test exampl order get formula calcul accuraci first defin number figur illustr figur ffl npp number posit exampl cover posit definit onli ffl npn number posit exampl cover neg definit onli ffl npu number posit exampl cover definit classifi undefin ffl nnn number neg exampl cover neg definit onli ffl nnp number neg exampl cover posit definit onli ffl nnu number neg exampl cover definit classifi undefin accuraci threevalu case thu defin follow nptot nntot interest compar notion accuraci obtain test theori twovalu way case accuraci would given by nptot nntot interest situat accuraci threevalu case higher one twovalu case ie accuraci accuraci rewrit inequ term figur abov get inequ rewritten as figur set exampl evalu accuraci threevalu hypothesi express nntot repres number neg exampl cover definit call nn cover therefor accuraci result test theori threevalu way improv twovalu one neg exampl cover two definit number neg exampl contradict particularli high number posit exampl contradict low overlap two definit undefined accuraci same relat work adopt negat learn investig mani author mani proposit learn system learn definit concept op posit exampl system learn decis tree c decis rule aq famili system abl solv problem learn definit n class gener problem learn concept opposit howev case definit learn assum cover whole univers discours undefin classif produc instanc alway classifi belong one class instead classifi undefin instanc learn definit give unanim respons learn multipl concept may case descript learn overlap consid case nondesir reason learn concept opposit may case learn two concept see point case use produc one classif instanc exampl patient two diseas symptom satisfi descript diseas subject futur work consid class paraconsist logic program overlap definit p p and gener multipl concept allow problem rais negat uncertainti conceptlearn induct logic program particular point previou work eg concept learn use cwa target predic longer accept allow distinguish fals undefin de raedt bruynoogh propos use threevalu logic later formal defin explicit definit negat concept concept learn techniqu integr within clint system interact conceptlearn result system posit neg definit learn concept predic p state respect condit p true fals definit learn produc inconsist exampl furthermor clint produc inconsist also unseen exampl constraint handl mechan sinc would assert constraint fals take care never violat distinctli system make sure two definit produc inconsist unseen atom make learn rule nondeterminist way abl learn definit except concept inform contradict still avail anoth contradistinct cope employ simultan two kind negat explicit one state fals default defeas one state assum fals system lelp learn extend logic program learn elp answerset semant lelp abl learn nondeterminist default rule hierarchi except hierarch learn except easili introduc system see viewpoint learn problem two algorithm solv equival background stratifi extend logic program semant coincid exampl shown stratifi therefor learn algorithm and viceversa exampl section learn lelp howev background nonstratifi extend logic program adopt wellfound semant give number advantag respect answerset semant nonstratifi background theori answerset semant enjoy structur properti relev like wfsx doe cannot employ topdown proof procedur furthermor answerset semant cumul ie add lemma semant chang thu improv effici given tabl cannot obtain moreov mean wfsx introduc method choos one concept undefin cannot replic answerset semant one comput eventu answerset find liter undefin structur two algorithm similar lelp first gener candid rule concept use ordinari ilp framework except identifi as cover exampl opposit set rule special negat default abnorm liter assum prevent coverag except assumpt be turn gener gener hierarch default rule one differ us level gener definit learn lelp learn definit concept posit exampl concept therefor employ bottomup ilp techniqu learn lg instead choos whether adopt bottomup topdown algorithm learn theori differ gener differ target concept integr declar way learn definit singl elp anoth differ consist lelp learn definit concept highest number exampl train set learn posit neg concept number posit exampl close neg one in alway learn concept final mani work consid multistrategi learner multisourc learn er multistrategi learner combin learn strategi produc effect hypothes see multisourc learner implement algorithm integr knowledg produc separ learner multistrategi learn adopt instanc improv classif accuraci equip autonom agent capabl surviv hostil environ approach consid two separ conceptbas learner order learn definit concept opposit multipl opposit target concept constitut part learn knowledg base learn element abl adopt bottomup topdown strategi learn rule easili gener learn definit n disjoint class concept multipl agent learn see often hypothesi gener requir second step approach devot applic strategi elimin learn contradict seen multisourc learner metalevel one learn definit combin obtain noncontradictori extend logic program elp use specifi combin strategi declar way recov process consist learn theori conclud highlight twovalu set adopt work ilp induct concept learn gener suffici mani case need repres real world data exampl case agent learn effect action perform domain perform experi agent need learn definit allow action forbidden action action unknown outcom therefor need learn richer threevalu set order achiev ilp class extend logic program wellfound semant explicit negat wfsx adopt us represent languag languag allow two kind negat default negat plu second form negat call explicit muster order explicitli repres neg inform adopt extend logic program ilp prosecut gener trend machin learn extend represent languag order overcom recogn limit exist system program learn contain definit concept opposit opposit concept express mean explicit negat standard ilp techniqu adopt separ learn definit concept opposit depend adopt techniqu one learn gener least gener definit two definit learn may overlap inconsist resolv differ way atom train set unseen atom atom train set consid except unseen atom consid unknown differ behaviour obtain employ negat default definit default abnorm liter use order consid except rule nondeterminist rule use order obtain unknown valu unseen atom shown adopt extend logic program ilp allow tackl learn threevalu set specifi combin strategi declar way also cope contradict except process system live learn threevalu environ develop implement mention techniqu particular system learn definit concept opposit abl identifi except treat default negat system parametr procedur use learn definit adopt either topdown algorithm use beamsearch heurist necess stop criterion bottomup algorithm exploit golem system note definit foundat lp refer recent stateofth art lp extens nonmonoton reason refer advanc incorpor recent theoret develop see xsb system at htppwwwcssunysbedusbprologxsbpagehtml notic formula loverh l variabl h univers quantifi wherea l existenti quantifi noncontradictori program mean program admit least one wfsx model undefin predic implement negat cwa not p mean p fals wherea mean p fals undefin ie undefinedp r reason logic program classic logic program knowledg represent revis extend logic program system revis knowledg base abduct survey paraconsist semant extend logic program interact theori revis induct logic program approach learn surviv toward friendli conceptlearn negat threevalu logic interact concept learn interact concept learn construct induct analog classificationtheori semant normal logic program prolegomena logic program nonmonoton reason multistrategi learn analyt approach cooper abduct induct logic program stabl model semant logic program logic program classic negat explicitli bias gener learn activ classifi learn abduct nonmonoton logic program learn extend logic program framework multistrategi learn learn threevalu set agent learn threevalu set strategi combin learn via logic program tool effici induct recurs program gener updat model program discoveri classif rule use variablevalu logic system vl theori methodolog induct learn invers entail progol machin invent firstord predic invert resolut effici induct logic program reduc misclassif cost well found semant logic program explicit negat note induct gener analysi visual classifi perform comparison imprecis class cost distribut learn logic definit relat closedword data base xsb programm manual version wellfound semant gener logic program tr explicitli bias gener logic program classic negat wellfound semant gener logic program subunif interact conceptlearn construct induct analog well found semant logic program explicit negat c program machin learn slxmyampersandmdasha topdown deriv procedur program explicit negat interact theori revis strategi combin learn via logic program survey paraconsist semant logic program reason logic program induct logic program myampersandlsquoclassicalmyampersandrsquo negat nonmonoton reason logic program learn logic definit relat gener updat abduct valu extend logic program prolegomena logic program nonmonoton reason ctr chongb liu enrico pontelli nonmonoton induct logic program instanc pattern proceed th acm sigplan intern symposium principl practic declar program juli wroclaw poland chiaki sakama induct answer set nonmonoton logic program acm transact comput logic tocl v n p april evelina lamma fabrizio riguzzi lu moniz pereira strategi combin learn via logic program machin learn v n p janslashfeb thoma eiter michael fink giuliana sabbatini han tompit use method declar logic program intellig inform agent theori practic logic program v n p novemb