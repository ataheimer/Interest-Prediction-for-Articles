t integr comput algebra proof plan a mechan reason system comput algebra system differ object integr highli desir sinc formal proof often involv two differ task prove calcul even import proof comput often interwoven easili separablein articl advoc integr comput algebra mechan reason system proof plan level approach allow us view comput algebra algorithm method is declar represent problemsolv knowledg specif certain mathemat domain autom achiev mani case search hierarch proof plan method level use suitabl domainspecif control knowledg mathemat algorithm word uniform framework proof plan allow us solv larg class problem automat solvabl separ systemsour approach also give answer correct problem inher integr advoc approach comput algebra system produc highlevel protocol inform process interfac deriv proof plan proof plan turn expand proof differ level abstract approach well suit produc highlevel verbal explic well lowlevel machinecheck calculuslevel proofw present implement idea exemplifi use automat solv examplechang criterion rigor proof engend major revolut mathemat h poincar b introduct comput develop highlevel program languag made possibl mechanis logic well realisa m kerber m kohlhas v sorg tion mechan symbol calcul could wit last forti year lead two rather disjoint academ field mechanis reason comput algebra meth od interest tradit even though share common root none two field imagin without underli foundat mathemat logic mathemat studi symbol calcul lead algorithm method determin gcd gauian elimin last decad seen move toward integr field driven insight realworld formal problem often involv mixtur comput reason henc integr mechanis reason system comput algebra system highli desir cf buc case particular sinc deduct system weak come comput mathemat object comput algebra system manipul highli optimis represent object yield formal checkabl proof inform if give explan all remaind introduct briefli summaris key point mechanis reason system well comput algebra system give short preview integr approach advoc paper natur short descript abstract mani detail simplifi consider mechanis reason system mechanis reason system for short mr follow built variou purpos mind one goal construct autonom theorem prover whose strength achiev even surpass abil human mathematician anoth build system user deriv proof system guarante cor rect third purpos consist model human problemsolv behaviour machin is cognit aspect focu advanc theorem prove system often tri combin differ goal sinc complement ideal way let us roughli divid exist theoremprov system three categori machineori theorem prover proof checker humanori planbas theorem prover normal system exist pure form anymor system like ownomega mega system bcf explicitli tri combin reason power autom theorem prover logic engin specialis problem solv knowledg proof plan mechan interact support tacticbas proof develop environ think combin kekosotex v integr comput algebra proof plan complementari approach inherit advantag drawback task domainspecif well domainindepend problemsolv knowhow requir difficult task often explicit userinteract provid approach seem gener enough cope kind logiclevel proof neglect fact mani mathemat field everyday work mathematician partial consist prove verifi theorem calcul play equal import role case task prove theorem calcul simplif certain term separ other often task interwoven insepar case interact theorem prove environ provid rather poor support user although theoret comput reduc theorem prove practic nontrivi case sinc search space intract mani task howev search necessari all sinc numer algebra algorithm use think kowalski equat purpos procedur and cannot provid control concret comput comput algebra system earli comput algebra system ca short develop collect algorithm data structur manipul algebra express like multipl polynomi deriv integr function hea abstractli spoken main object ca view simplif algebra express determin normal form today broad rang system rang gener applic system multitud system design specif applic unlik mr ca use mani mathematician tool everyday work even wide appli scienc engin econom high academ practic standard reflect fact studi symbol calcul long establish fruit subfield mathemat develop mathemat theori tool modern system wol cgg common algebra algorithm integr comfort graphic user interfac includ formula edit visualis mathemat object even interfac program languag case mr represent languag ca differ system system complic integr system well cooper them defici attack m kerber m kohlhas v sorg openmath initi avl strive standard ca commun protocol current main emphasi laid standardis syntax comput behaviour mathemat object properti semant consid mean explicit represent format theorem lemmata proof specif system allow specifi mathemat domain theori instanc system like mupad fuc axiom js comput behaviour specifi attach type axiomatis mathemat object also fall short comprehens represent relev mathemat ic furthermor almost ca fail give explan proof solut problem hand even though mathemat theori like grobner base success appli theorem prove elementari geometri cho kap cgz wu contribut paper fact mutual simul task mr ca quit ineffici daili work mathematician prove calcul point integr system sinc mathematician want support main activ inde two independ system hardli cover need sinc mani case task prove calcul hardli separ point buchberg buca integr problem still unsolv expect success combin system lead a drastic improv intellig level support system paper address two immedi question occur integr autom reason comput system algorithm integr underli mathemat knowledg mutual respect synergi effect achiev correct problem inher combin address particular result ca integr proof without complet trust advoc integr comput algebra mechanis reason system use proof plan paradigm approach allow encapsul comput algebra algorithm meth od is declar represent problem solv knowledg specif certain mathemat domain proof plan paradigm enabl user guid proof fulli hand con integr comput algebra proof plan trol planner turn use comput algebra system specif correspond algorithm met use hierarch proof plan methodlevel give suitabl granular integr sinc allow directli use exist human control knowledg interplay comput reason proper integr proof plan approach answer question correct automat sinc correspond question solv proof plan area proof plan either reject the tactic execut henc plan cannot use build proof execut later result either plan phase fill possibl gap accept machinecheck proof henc proper integr requir comput algebra system produc highlevel protocol inform process interfac deriv proof plan seamlessli integr overal proof plan gener problem solv attempt sinc expand explicit checkabl proof order obtain correct guarante combin solut also given principl answer correct problem feasibl approach advoc sequel verifi integr simpl ca theomega mega proof plan system therefor organis paper around experi describ relev featur system perspect approach requir mode ca gener inform possibl gener proof plan reason integr standard ca make major adapt unavoid in particular necessari chang sourc code system approach commit particular system involv particular work report understood rather proof principl develop stateoftheart integr system moreov make detail approach concret explain mean exampl cannot easili solv either mechanis reason system comput algebra system alon need combin effort system kind relat work give short descript experi combin mr ca roughli categoris three class respect treatment proof adopt is respect correct issu describ detail approach integr ca mr is essenti mr master kekosotex v m kerber m kohlhas v sorg ca slave sinc approach also kind right one cours follow convers direct name approach integr point ca inde approach also success undertaken see eg cz buc question granular integr treat uniformli experi applic ca treat anoth deriv rule infer level tactic calcu lu granular integr depend granular calculu tactic involv first categori attempt see eg htb bhc one essenti trust ca properli work henc result directli incorpor proof experi least partli motiv achiev broader applic rang formal method object definit achiev sinc rang mathemat theorem formal prove system combin much greater provabl mr alon howev ca complex program therefor trustworthi limit extent correct proof hybrid system question minor technic problem remain unsolv forese futur sinc complex not code complex also mathemat complex ca permit verif program current avail program verif method conceptu main contribut integr solut softwareengin problem pass control program translat result forth back import subproblem seem cover full complex interact reason comput found mathemat theorem prove altern approach formal respect correct essenti trust ca addit assumpt stand ca introduc essenti formula deriv prove modulo correct comput algebra system hand see eg htb second categori for hta paradigmat consciou role proof use ca oracl receiv result whose correct check deduct certainli solv correct problem approach limit coverag sinc even check correct calcul may scope mr addit inform inde point applic result ca help case verif result simpler discoveri prime factoris solv equat symbol integr calcul symbol addit multipl polynomi differenti verif complex calcul itself employ ca kekosotex v integr comput algebra proof plan speed proof construct process typic longer calcul type subcalcul contain third approach integr comput algebra system particular kind mechanis reason system consist metatheoret extens reason system propos instanc bm how realis nuprl con approach construct mechanis reason system basic use metasystem construct featur exploit synthesis correct comput algebra system due bridg rule ground metasystem possibl integr sobuilt ca directli use compon theoret properti metatheoret extens guarante origin system correct extend system correct too method appeal one viewpoint correct although assumpt origin also rather complex system must correct hardli expect selfevid nontrivi system disadvantag compar two approach possibl employ exist ca necessari reimplement one strictli formal system given basic mr cours subject limit pose mathemat softwar engin complex mention abov main problem integr ca mr without violat correct requir ca gener highli optimis toward maxim speed comput toward gener explan comput involv case dealt metatheoret consider algorithm adequ lack explan make imposs averag user understand convinc correct com putat leav mr essenti without inform two term equal problemat sinc comput error report even welltest wellestablish ca report categori approach last one serious address problem omega mega open system integr comput omega mega proof develop system base proof plan paradigm section describ architectur compon show support integr comput algebra sy tem sinc goal paper present system descript ofomega mega document integr comput algebra it tri concis possibl introduc relev part kekosotex v m kerber m kohlhas v sorg onli gener architectur proof planner integr possibl extern reason proof develop environmentomegagammamen entir process theorem prove inomega mega view interleav process proof plan execut verif centr around hierarch proof plan data structur sever integr tool support user interact system also avail proof planner theori databas sinc method control knowledg use proof plan most ly domainspecificomega mega organis mathemat knowledg hierarchi theori theori repres signatur extens axiom definit method make typic establish mathemat domain theorem home theori therefor access theori signatur extens axiom definit lemmata without explicitli introduc them simpl inherit mechan allow increment build larger theori smaller part give overview part ofomega mega theori databas necessari solv extend exampl figur proof explan proof present one import featur mathemat assist neglect tradit deduct systemsomega mega employ extens proverb system hf develop group allow present proof proof plan natur lan guag order produc coher text resembl found mathemat textbook proverb employ stateoftheart techniqu natur languag process due possibl hierarch natur ofomega mega proof verbalis one level abstract select user summaris view proof everi theorem explicit proof construct one hand check proof checker hand system provid support repres proof highlevel form easili readabl human hf neither process gener proof check fulli replac machin support human mathematician want see proof hesh appropri level abstract integr comput algebra proof plan proof plan central data structur overal process proof plan data structur pd hierarch data structur repres partial proof differ level abstract call proof plan repres direct acycl graph node justifi lcfstyle tactic applic conceptu justif repres proof plan the expans justif lower level abstract comput tactic execut omega mega explicitli keep origin proof plan expans hier archi thu pd make hierarch structur proof plan explicit retain applic proof explan analog transfer plan proof plan complet justif success expand verifi wellformed correspond pd verif phase necessari sinc correct differ compon in particular extern one like autom theorem prover comput algebra system cannot guarante expans process carri underli ndcalculu natur deduct sound overal system reli sole correct verifi nd also provid basi control integr extern reason compon reason result on demand transform subpd level proof expand depend sophist proof checker point barendregt bar complex proofcheck accept proof express formal may drastic reduc length commun proof highlevel justif expand accept are approach reduc one comput algebra system fulli trust short hierarch natur pd support full spectrum user prefer total trust ca partial trust certain level full expans proof detail calculu level descript machin checkabl pd construct autom mixedin plan ning pure user interact make use integr tool particular new piec pd ad directli call tac tic insert fact databas call extern reason cf section autom theorem prover comput algebra system autom proof plan adequ proof plan recurs expand reach proof plan fact fulli explicit proof sinc node justifi infer rule higherord variant gentzen calculu natur deduct nd m kerber m kohlhas v sorg problem class method control knowledg alreadi establish goal proof plan fill gap given pd forward backward reason hkkr proof plan first introduc bundi see bun bsvh thu abstract point view plan process process explor search space plan state gener plan oper order find complet plan given initi state termin state omega mega proof planner extens wellknown strip algorithm evok construct proof plan node the goal node set support node the initi state use set op proof plan oper call method method partial specif tactic metalevel languag inomega mega plan combin hierarch expans method precondit abstract plan found procedur directli incorpor pd separ level abstract model actual reason compet planner user build upon avail appropri method togeth metalevel control knowledg guid plan momentomega mega provid userdefin method rate mean control use analog control strategi planner two exampl method display section extend exam ple section integr comput algebra system extern reason accord differ mode ofomega mega differ level extern reason system rsi integr interact call rsi repres command callrsi invok reason particular subproblem return result proof plan rsi repres method whose specif contain knowledg problem solv behaviour option set rsi justif rsi serv justif declar given subgoal left prove rsi case proof found rsi must eventu transform pd sinc prooftheoret basi ofomega mega autom theorem prover like otter mcc describ integr hkk necessari proof transform pd hf pursu matter here integr kekosotex v integr comput algebra proof plan ca follow paradigm main topic paper develop paradigm case extern comput inomega mega see exampl three differ level integr ca intoomega mega exampl next section go here leav us question transform ca result pd take idea gener explicit pd serious also comput neither take exist system follow approach metatheoret extens sinceomega mega classic proof system use construct logic hand cannot use even case verif calcul much easier calcul eg integr function comput need verifi alon mani case still much complic automat check without guidanc instanc even proof binomi formula problem comput algebra system need singl step natur deduct calculu thu use theorem prover rewrit system find proof produc unnecessarili larg search space thu absorb valuabl resourc hand proof show remark resembl algebra calcul suggest use ca instantli comput result given problem also guid proof way exploit implicit knowledg algorithm propos extract inform tri reconstruct comput mr result gener seen even case trivial exampl ca may turn hard task mr rather extend ca algorithm produc logic usabl output alongsid actual comput sure case user would like see proof level binomi formula explain although novic might want to mean hierarch approach proof gener appropri abstract level proof present chosen user approach use mathemat knowledg implicit ca extract proof plan correspond mathemat comput ca essenti output ca transfer sequenc tactic present highlevel descript proof correct comput ca perform note prove gener correct algorithm involv instead give proof particular instanc comput highlevel descript use proof length among hardest ever found total automat theorem prover without domainspecif knowledg m kerber m kohlhas v sorg produc readabl explan expand level automat check proof checker level abstract check take place depend level sophist proof checker naiv proof checker proof must expand explicit calculu level decis extract proof plan rather concret proof ca essenti goal verbos without transmit much detail purpos need differ mode use ca normal proof search interest result comput sinc assumpt comput correct normal justifi establish ca want understand comput particular success proof need mode ca give enough inform gener highlevel descript comput term mathemat involv describ next section detail describ integr system automat solv extend exampl econom examin extend exampl concret task hand minimis cost run machin produc certain product problem output machin rang certain interv interv cost product prod determin cost water electr produc prod given function prod ffl r prod price water electr kwh determin output machin total cost minim exampl serv purpos sever reason firstli allow us show interact proof plan symbol comput extract proof plan calcul secondli mathemat involv simpl enough fulli explain onli simpl polynomi manipul necessari thirdli exampl creat problem slightli vari version kekosotex v integr comput algebra proof plan minimis problem master examin econom universitt de saarland saarbrucken wiw order solv problem like thi integr simpl ca intoomega mega call ca cassystem simpl moment perform basic polynomi manipul differenti suffic automat solv exampl hand clearli practic system mathemat reason much develop system like mapl cgg reduc hea axiom js mathematica wol integr technic integr describ section formalis exampl use theori mecha nism ofomega mega creat theori economi see figur contain domainspecif knowledg both factual method knowledg need problem solut obvious need background theori cost econom that handl numer part denomin cost function one minimis real function therefor theori inherit materi theori cost calculu calculu theori provid byomega mega contain relev part knowledg elementari calculu textbook instanc real number introduc complet dens archimedian field base elementari algebra notion group ring defin respect theori set real number show exist complet dens archimedian field construct quotient field ring sequenc ration number ideal nullsequ ration number turn construct sign fraction natur number defin peano axiom theori natur mathemat theori base theori function set relat specifi naiv simpli type set theori properti function relat set final whole hierarchi build theori base declar underli logic provid logic connect quantifi basic nd infer rule theori economi provid type ae unit cover differ unit denomin exampl for work prod for product dm for price formalis price tripl consist one real number two unit cost function real function togeth two unit read inputoutput unit note real world addit phi ca system part standard distribut ofomega mega obtain httpwwwagsunisbdesoftwarededuktionomega exampl access wiwiexam theori economi m kerber m kohlhas v sorg base set relat struct order topolog orderedr orderedfield metricspac natur ration sequenc integ semigroup group ring field monoid real calculu economi cost figur theori hierarchi inomega mega knowledg base multipl omega comparison cost cost function defin real part respect denomin calcul axiom cf cf two denomin differ relat price purpos use axiom pr integr comput algebra proof plan optimis economi formalis predic opt cost function cff dm prod interv true whenev f total minimum i optcff dm prod i x totminx f i thu state problem follow formula h set hypothes need complet proof instanc price axiom planner solv problem gener highlevel proof plan consist method domain specif method base econom exam question go outlin process describ major step particular demonstr proof planner ofomega mega cassystem interact make explicit entri mathemat databas interact depend planner find follow simpl proof plan predic totmin problem solv knowledg relat inherit theori calculu actual formalis problem fulli correct sinc examin interest proof exist x hesh want know valu x well proof valu fit requir obvious answer cannot obtain formula here proof construct variabl x extract wit term problem ca mr base construct logic tradit mr base classic logic proof construct process refin guarante construct x note argument wit x meet requir still classic nonconstruct mean proof planner may use method proof plan construct get want answer present nonconstruct abstract argument final note phenomenon anoth argument favour manipul explicit proof without thi one may find oneself posit one convinc by metatheoret argument exist construct proof fact without one extract term wit answer exam question question certain standard exam good exampl restrict mathemat domain sinc proof calcul involv highli stan dardis therefor find proof plan exampl big problem omega mega m kerber m kohlhas v sorg multbypric addbydenom totminrol first three method comput actual cost function adjust denomin ad method use axiom optimis exampl contain polynomi degre two planner select method totminrol cf figur find total minima make implicit use roll theorem calculu theori let f polynomi degre two f total minimum minimum x fa fx fb formal get follow equival totmin totminx f a b x a note roll theorem access current theori and ensur correct databas contain formal proof let us take closer look method order get feel initi proof plan expand figur given slightli simplifi present multbypric totminrol method declar slot method simpli defin metavari use bodi method premis conclus constraint describ applic method exampl multbypric instanc line l present open subgoal l l line use order given alreadi wherea l gener applic method indic phi sinc method intend prove l applic method line delet current plan state we indic psi constraint slot applic criteria describ cannot formul term proof line schemata declar premis constraint conclus form specif part method order abl mechan adapt method tactic part subdivid declar content procedur content howev particular featur import purpos paper exampl procedur content especi adjust syntax constraint way comprehens reader integr comput algebra proof plan declar f premis constraint conclus psil declar content subst l procedur content schema gamma interpret figur multbypric method theori cost consist schemainterpret essenti insert declar content use bind made plan phase correct place current partial proof tree concret exampl line l l insert note adopt linearis version nd proof introduc and order understand piec actual proof method evalu examin declar content bind perform particular constraint constraint multbypricemethod state rather simpl comput cost function given open line denomin dm multipli appropri price multipl real part carri ca correspond cost function construct point crucial understand work scheme method view bind constraint step step appli current plan method match open goal plan state first pass planner yield l match theorem thm thu formula optcfd d bound metavari oe examin find occurr cost function subterm exist argument bound g v w match line l receiv numer part price f if appropri price provid applic method would fail here afterward new cost function com m kerber m kohlhas v sorg pute accord axiom pr final oe contain result replac old cost function oe henc first plan step optimis formula store oe contain cost function cfd prod subterm metavari instanti subproof contribut multbypricemethod consist line l l declar content observ l result appli priceaxiom pr which fetch databas line l furthermor note l call ca justifi method line mean point proof plan procedur ca call order comput product price origin cost function line result calcul use new open subgoal plan state summaris effect method multbypric observ two step first goal line thm justifi method yield follow subproof method justif line thm which abbrevi due lack space could expand therebi insert intermedi step describ instanti macro step method note follow expand subproof detail level abstract pd particular justif thm differ level cfd proof thm method multbypric appli twice order normalis summand preserv space present next two method proof plan extens multbypricemethod addbydenom similar multbypric appli axiom cf insid optimis function opt comput final cost function cours ca call perform polynomi addit optimisemethod simpli introduc definit opt function axiom o integr comput algebra proof plan declar premis constraint degreeo comput casminimum oe conclus psil declar content a procedur content schema gamma interpret figur totminrol method theori calculu far interest two method totminrol method contain differ exampl use ca omega mega present method figur simplifi totminrol method appli stage proof actual minimum cost function introduc task fulfil within constraint method comput ca statement actual call ca quiet mode comput minimum function oe store metavari y stage ca use oracl here hta exampl minimum cost function ndline form transform elimin existenti quantifi variabl m kerber m kohlhas v sorg rest proof plan devot prove result actual total minimum done use definit totmin databas furthermor use definit minimum interv correspond line l l method totminrol definit introduc line l l appli correct assert given line l l express justif correspond line instanc justif line l state infer ff fi line l l definit interv line l closer look justif line l l reveal contain method themselv line l l depend calcul ca comput first second deriv cost function justif simplifi correspond method perform basic arithmet simplif comparison consist method proof plan give impress small proof abstract level inde experienc mathematician might want see more expand plan partial ground nd proof give length line contain line justifi ca proof level may roughli correspond proof novic would like see would form reason solut exam problem present natur languag proverb system rerun ca proof plan gener mode casjustif extract proof plan proof expand detail proof plan contain account mathemat behind calcul proof plan alreadi contain plan step user feel comfort level detail yet expand calculuslevel nd proof length note even proof standalon proof minimis theorem depend proof number lemmata databas furthermor proof simplif ground arithmet express expand instanc represent involv zero successor function either would necessari obtain detail logiclevel proof integr comput explicit proof section describ sapper system algorithm proof plan extract reason gener proof plan ca output mention section intend integr kekosotex v integr comput algebra proof plan necessari augment ca mathemat inform proof plan gener mode order achiev propos integr level proof ca system develop demonstr feasibl approach rather simpl demonstr below enrich state art ca mode produc necessari addit protocol inform would cours requir consider amount work architectur sapper system seen gener interfac connect omega mega or anoth proof planbas mechanis reason system one sever comput algebra system see figur incorpor ca treat slave toomega mega mean latter call first one vice versa softwar engin point viewomega mega ca two independ process interfac process provid bridg com munic role autom broadcast messag transform output one system data process unlik approach see hc gpt exampl want chang logic insid mr line want chang comput behaviour comput algebra algorithm order achiev goal trace output algorithm kept short possibl fact comput construct proof plan left interfac proof plan directli import intoomega mega make integr independ particular system inde result independ ca employ make gener assumpt mr such proof planbas moreov interfac approach help us keep ca free logic comput system intend anyway final interfac minimis requir chang exist ca maintain possibl use ca standalon requir make integr particular ca produc enough protocol inform proof plan gener inform proof plan turn expand mr proof verifi concret comput interfac roughli divid two part translat part plan gener first perform syntax translat betweenomega mega ca direct latter adapt gener approach combin system cmp m kerber m kohlhas v sorg hypothes theorem method tactic tactic method theorem hypothes interfac structur databas theori theori theori theori result access access plan tactic knowledg call result plan gener translat function map call arg abstract ca figur interfac betweenomega mega comput algebra system transform verbos output ca toomega mega proof plan clearli translat part depend particular ca invok translat collect data structur call abstract ca provid one refer particular connect ca or part one main purpos structur specifi function map relat particular function ofomega mega correspond casfunct type argument furthermor provid function convert given argument map omega mega function ca input fashion transform result algebra comput back data process byomega mega function part interfac offer us possibl connect ca black box system first approach describ section instanc may want use effici system without mode gener proof plan reimplement sapper would probabl use openmath protocol avl lingua franca ca side integr comput algebra proof plan proof search black box system anoth less effici system mode actual proof construct clear proof look like correspond recent techniqu use knowledg base system explan compon trace rule appli search explan reconstruct independ compon plan gener sole provid machineri main goal proof plan extract equip supplementari inform proof byomega mega record output produc particular algebra algorithm convert proof plan requir keep ca side free logic consider hand keep interfac gener seem conflict first glanc howev conflict solv give side interfac access databas mathemat fact formalis mathemat behind particular ca algorithm conceptu databas togeth map govern access provid semant integr ofomega mega particular ca thu expand plan gener simpli done expand theori databas ad new tactic whileomega mega access complet databas sapper plan gener interfac abl use tactic lookup hypothes theori cf figur ca interact databas all know refer logic object method tactic theorem definit proof plan gener mode thu knowledg databas compil priori algebra algorithm order document calcul proof plan extract let us take closer look implement proof plan gener ca expans process output demonstr proof extract comput algebra calcul provid intuit requir approach pose ca side exampl consid polynomi addit exampl abov normal experienc mathematician would like see proof that highschool student would like to seen exampl main purpos addbydemonmethod comput final cost function prod done ca ad two polynomi d remaind subsect expand addit sever step therebi obtain calculu level proof comput m kerber m kohlhas v sorg examin exampl detail let us consid gener scheme proof plan gener insid polynomi addit algorithm ca first take look differ represent polynomi p variabl x r logic languag ofomega mega variant simpli type calculu inde use stronger type system want keep thing simpl possibl polynomi repres polynomi function is express formal paramet abstract mathemat p function r argu notat use prefix notat symbol denot binari function addit multipl exponenti real represent use fireduct evalu polynomi ca use variabl dens expand represent intern data structur polynomi as describ zip instanc thu everi monomi repres list contain coeffici togeth expon variabl henc get follow represent p let us turn actual ca algorithm polynomi addit simpl algorithm add polynomi p q case analysi expon recurs call itself let r r present algorithm jth compon p kth compon q lisplik pseudocod figur intuit algorithm proce order monomi advanc lead monomi either first second argument case equal expon coeffici monomi ad obvious expans origin algorithm need proof plan gener addit tactic statement assum lexicograph monomi order employ order expon thu make use oper intuit sens furthermor defin rank monomi vector given expon rank polynomi maximum rank monomi respect lexicograph monomi order observ case call tactic need addit argu ment sinc plan gener interfac keep track posit kekosotex v integr comput algebra proof plan polyadd p q tactic monoadd conspoli er j r polyadd r r tactic popfirst conspoli ff j x er j r polyadd r r tactic popsecond conspoli r polyadd r r figur polynomi addit ca produc addit output return keyword tactic name plan gener side effect particular comput behaviour algorithm chang all appli algorithm two polynomi obtain follow proof plan monoadd popsecond monoadd first two quadrat monomi p q ad linear term q the second argument rais sinc appear one argument final remain monomi ad up case polynomi addit method proof plan oper directli correspond tactic name is list three method directli repres concret proof plan polynomi addit concret polynomi p proof thu know monomi algorithm work return tactic way need concern form monomi actual cours algorithm m kerber m kohlhas v sorg q in follow represent omit context polynomi embed actual proof four line correspond stepbystep version basic high school algorithm far expans callcasmethod exclus done ca proof plan gener mode stage ca cannot provid us detail comput subsequ expans next hierarch level achiev without use ca let us instanc take look popsecond tactic understand logic content tactic describ reorder sum look gener case follow current exampl view c arbitrari polynomi b monomi rank greater polynomi a obviou behaviour popsecond determin pattern sum appli to equat polynomi c exist popsecond equival singl applic law commut otherwis like exampl tactic perform seri commut associ step popsecond step thu expand plan reflect singl step applic law commut associ assum expand two monoadd tactic well construct represent proof level need axiom polynomi ring final expand fulli explicit calculu level proof expand three justif line lead sequenc elimin univers quantifi variabl correspond hypothesi axiom commut associ exampl commut axiom would transform follow fashion integr comput algebra proof plan here justif thm first proof line indic commut import theori real inomega mega mathemat databas establish theorem remain line natur deduct infer univers elimin instanti number b term gammax altogeth singl applic popsecondtact equival calculuslevel proof infer step length subproof trivial polynomi addit singl step exampl show possibl mechan construct proof verifi correct particular ca comput without verifi ca algorithm or implement gener case howev calculu level proof comput long rather bore therefor hardli human user might actual want see much less read them therefor proverb proof explan system inomega mega provid realist altern sinc give user access represent part proof variou level abstract make use hierarch structur underli pd instanc possibl present comput intermedi step customari textbook exampl could includ three step high school algorithm mention abov illustr polynomi addi tion the decis step includ omit depend cours expertis reader particular proof present intend despit abstract develop present proof still use proof checker ndcalculu verifi step includ comput furthermor assum sophist proof checker exampl one work modulo axiom polynomi ring also possibl check proof abstract level alreadi mention sophist proof checker is concis commun proof be test proof plan extract simpl recurs iter ca algorithm work quit well sinc algorithm close correspond mathemat definit correspond concept howev complic scheme like divideandconqu algorithm for instanc polynomi multipl karatsuba ofman ko cannot adapt approach easili without extend mathemat knowledg base correspond lemmata m kerber m kohlhas v sorg exampl polynomi addit sure trivial one chosen sole present reason particular like correct realworld implement sinc well test depend sophist mathemat theorem fuzzi boundari case must consid sake argument let us assum error implement instanc second case polynomi addit algorithm figur conspoli statement forgotten algorithm follow incorrect form tactic popfirst polyadd r comput x discuss abov second case never use comput would correct although program not chang order addit polynomi p q get follow incorrect result chang algorithm insert proof plan gener faulti algorithm yield check proof checker would see popfirst step justifi sinc expans correspond applic law associ would yield thu would applic expans thu proof plan consequ calcul would reject byomega mega note larg system liter million possibl case correct calcul like depend tini subset whole program strength approach calcul necessari given proof would check advantag error differ level detect in particular level algorithm compil processor cours long comput check pretti expens moreov highli elabor effici algorithm state art ca might hard augment proof plan kekosotex v integr comput algebra proof plan gener mode seen exampl abov mathemat knowledg databas reflect mathemat knowledg algorithm order easili decor algorithm proof plan gener mode howev extend prove correspond lemmata trivial task sophist algorithm particular approach would go much direct program verif even prove practic imposs extract inform valuabl conceptu mathemat level alway possibl reserv elabor techniqu quiet mode use proof discoveri use basic algorithm mathemat easier easili decor proof plan gener mode proof extract phase system like axiom js mupad fuc seem come closest among standard ca need proof plan gener sinc one alreadi attach axiomatis algorithm conclus work report experi integr comput algebra system interact proof develop environ mentomega mega system level also level proof motiv integr need support human user hisher proof contain nontrivi comput shown proof plan paradigm gener omega mega system particular provid open environ extend integr support differ integr level approach possibl use standard ca integr is sinc system provid answer directli usabl justif proof plan extract thi howev turn essenti environ built construct communic checkabl proof order achiev solut compat strong requir adopt gener approach requir ca proof plan gener mode gener communic checkabl proof sinc want achiev two goal simultan name highlevel descript calcul ca commun human user well lowlevel one mechan check repres protocol inform form highlevel hierarch proof plan expand desir detail fulli expand proof plan correspond natur deduct proof mechani m kerber m kohlhas v sorg calli check simpl proof checker case ca made mistak proof checker detect it gener idea fundament integr ca mr independ concret proof develop environmentomega mega concret comput algebra system ca realis planbas theorem prover proof extract even realis tacticbas system ca protocol calcul form tactic axiom js mupad fuc seem best suit correspond extens sinc one alreadi attach axiomatis algorithm addit algorithm could enrich way produc protocol inform everi comput step is state attach axiom use particular instanti are system would probabl fit approach pretti well use extens approach would consist usag variou algorithm comput instanc one fast effici algorithm suitabl knowledg extract search proof afterward actual document whole proof less effici algorithm optimis find short proof provid complet proof plan although correct issu achiev tacticbas approach well need specif use proof plan full strength integr consider autom support provid cannot achiev level sinc possibl perform mechan reason tactic autom can howev achiev proof plan approach proof planner automat call ca pro cedur condit correspond method met use integr level alreadi seen case simpl ca integr abl prove optimis problem reach without support hand system abl give explan involv comput variou level abstract featur miss today ca experi expect success integr power comput algebra system would consider enhanc reason power mechanis reason system acknowledg work present paper support deutsch forschungsgemeinschaft sfb project omega benefit lot discuss calculemu interest group integr comput algebra proof plan author would like thank lassaad cheikhrouh help withomega mega proof planner code method exampl furthermor would like thank deepak kapur anonym refere care read earlier version paper detail comment help us improv present consider r transform mate natur deduct proof object openmath technic report comput formal proof type theori theorem algorithm interfac isabel mapl rippl heurist guid induct proof symbol comput an editori use mathematica simpl mathemat proof intelligenzniveau use explicit plan guid induct proof machin proof geom tri autom product readabl proof geometri theorem mechan geometri theorem prove integr softwar compo nent paradigm control integr implement mathemat nuprl proof develop system reason theori toward architectur open mechan reason system open environ math matic reduc user manual version comput metatheori nuprl adapt method novel task proof plan present machinefound proof extend hol theorem prover comput algebra system reason real reason real marriag hol mapl axiom scientif comput system refut approach theorem prove geometri otter refer manual guid mathematica book version mechan theorem prove geometri basic principl text monograph symbol comput effect polynomi comput address correspond manfr kerber school comput scienc univers birmingham birmingham b tt tr ctr andrea meier martin pollet volker sorg compar approach explor domain residu class journal symbol comput v n p octob paul cairn jeremi gow integr search author mizar journal autom reason v n p august micheal kohlhas andrea frank mbase repres knowledg context intergr mathemat softwar system journal symbol comput v n p octob