t perform analysi three textjoin algorithm a abstractwhen multidatabas system contain textual databas system ie inform retriev system queri global schema multidatabas system may contain new type joinsjoin attribut textual type three algorithm process type join present io cost analyz paper sinc type join often involv document collect larg size import find effici algorithm process them three algorithm differ whether document invert file document use process join analysi simul result indic rel perform algorithm depend input document collect system characterist input queri algorithm type input document collect algorithm like perform well identifi integr algorithm automat select best algorithm use also propos b introduct research multidatabas system intensifi recent year paper consid multidatabas system contain local system manag structur data eg relat dbss local system manag unstructur data eg inform retriev ir system handl text global schema multidatabas system integr local databas schema provid overal pictur sharabl data local system global queri languag use specifi queri global schema refer global queri thereaft retriev data repres global schema exampl global schema relat data model sql use global queri languag sinc multidatabas system consid paper contain depart comput scienc state univers new york binghamton binghamton ny email mengcsbinghamtonedu depart electr engin comput scienc univers illinoi chicago chicago il email yueecsuicedu comput scienc depart ucla lo angel ca email weiwangcsuclaedu school comput scienc florida intern univers miami fl email rishenfiuedu compon relat compon global queri languag must capabl accommod structur data unstructur data sqlbase queri languag serv purpos propos paper extend featur languag specifi queri databas frontend global user may submit queri contain join attribut textual type motiv exampl present section like join compar textual attribut similar match object similar textual content base similar function sinc textual object essenti document join pair similar document among two document collect correspond two textual attribut although type compar textual attribut may exist similar oper key oper textual data therefor concentr oper paper process join nontextu attribut studi extens much research report process join textual attribut literatur author report case studi autom assign submit paper review report studi requir match abstract submit paper number profil potenti review problem essenti process join two textual attribut sinc document collect involv small effici process strategi join concern instead emphasi work accuraci autom match somewhat relat problem consecut retriev problem determin given set queri q set record r whether exist organ record queri q relev record loos similar record store consecut storag locat interpret q r two document collect consecut retriev problem deal storag aspect effici retriev relev document one collect document anoth collect howev major differ consecut retriev problem join process problem former assum knowledg document r relev document q latter need find document one collect similar document anoth collect anoth relat problem process set queri document collect batch sever differ batch queri problem join problem former mani statist queri import queri process optim frequenc term queri avail unless collect explicitli unlik sinc batch may need process unlik cost effect collect statist special data structur commonli associ document collect invert file unlik avail batch reason given abov see paper avail invert file mean applic certain algorithm cluster problem ir system requir find document d document similar document collect consid special case join problem describ two document collect involv join ident straightforward way exist process join textual attribut multidatabas environ ment method describ follow treat document one collect queri process queri collect independ find similar document howev method extrem expens sinc either document one two collect search invert file collect util process document collect exampl consid smart system develop cornel univers smart system use invert file process user queri collect whose document use queri larg number document use invert file collect process queri independ easili incur cost sever order magnitud higher better join algorithm see section therefor import develop effici algorithm process join textual attribut paper follow contribut present analyz three algorithm process join attribut textual type cost function base io cost algorithm provid simul done compar perform propos algorithm investig indic one algorithm definit better algorithm circumst word algorithm uniqu valu differ situat provid insight type input document collect algorithm like perform well give algorithm determin one three algorithm use process textjoin awar similar studi report befor rest paper organ follow motiv exampl present section section includ assumpt notat need paper three join algorithm introduc section cost analys comparison three algorithm present section section simul carri compar propos algorithm suggest algorithm use particular situat integr algorithm automat select best algorithm use also includ section conclud discuss section motiv exampl assum follow two global relat obtain schema integr applicantsssn name resum positionsp titl job descr relat applic contain inform applic job posit relat posit resum job descr type text consid queri find posit applic whose resum similar posit descript queri express extend sql follow select pp ptitl assn anam posit p applic aresum similar to pjob descr whereclaus queri contain join attribut textual type type join appear tradit databas system note aresum similar to pjob descr pjob descr similar to aresum differ semant former find resum job descript latter find job descript resum job descript list output former howev job descript may list output latter among similar job descript resum later see asymmetri oper similar impact evalu strategi import differ join relat databas system join two textual attribut consid relat join ra ra compar given tupl r tupl r ta ta true immedi know satisfi join howev given resum r given job descript j way us know immedi whether r similar to j true sinc sure r among resum similar j resum consid process join compar job descript resum job descript compar resum resum similar identifi partial result produc howev process join compar resum job descript resum compar job descript partial result gener case mani intermedi result ie similar valu resum job descript need maintain main memori observ indic compar job descript resum natur way process textual join due select condit attribut relat contain textual attribut possibl subset set document collect need particip join exampl consid queri find posit whose titl contain engin applic whose resum similar posit descript select pp ptitl assn anam posit p applic ptitl like engin aresum similar to pjob descr select ptitl like engin evalu first job descript whose posit titl contain engin need particip join paper interest studi algorithm use process follow queri select rx ry r rc similar to rc c c attribut repres two document collect collect collect respec tive clearli join evalu form c similar to c impact select also address assumpt notat use vector represent document repres list term togeth number occurr document term associ weight indic import term document usual term identifi number save space assum document consist list cell form t w call documentcel dcell t term number w number occurr term document dcell document order ascend term number size dcell jtj number byte contain x practic suffici multidatabas environ differ number may use repres term differ local ir system due local autonomi sever method may use overcom problem one method use actual term rather term number disadvantag size document collect becom much larger anoth method establish map correspond number identifi term map structur usual tabl two column store main memori substanti degrad perform assum approxim page size kb need map structur accommod distinct term sinc total size map structur less mb like map structur held memori attract method standard map term term number local ir system use map standard benefici improv perform multidatabas system save commun cost no actual term need transfer process cost it effici compar number compar actual term need search map tabl simplifi present assum number alway use repres term local ir system note assumpt simul alway keep map structur memori differ number use repres term differ local system remain discuss term term number use interchang common term document d let u un number occurr term d respect similar defin realist similar function divid similar norm document incorpor use invers document frequenc weight assign higher weight term occur fewer document normal carri precomput norm document store perform divis process document invers document frequenc weight precomput term store part list head invert file sake simplic present use number occurr instead weight given term given document collect c invert file entri consist list icel short invertedfilecel form d w d document number w number occurr document number d assum icel invert file entri order ascend document number size icel jdj jwj icel dcell approxim size use follow notat discuss number document collect i size avail memori buffer page number term collect size btree collect page assum tightli pack ie space left unus page except possibl last page probabl term collect c also appear collect c q probabl term collect c also appear collect c ff cost ratio random io sequenti io byte kb averag number term document collect averag size invert file entri collect page k n t p size invert file collect page j assum tightli pack averag size document collect page k size collect page s n assum tightli pack invert file entri term collect oper similar to use fraction similar nonzero assum document collect store consecut storag locat therefor document collect scan storag order total number page read also total io cost hand document collect read one time random order document kept memori process total number page read approxim n ds e total cost approxim n ds e ff dxe denot ceil x ff cost ratio random io sequenti io due addit seek rotat delay random read similarli assum invert file entri collect store consecut storag locat ascend term number typic dj e page read invert file entri brought memori random order note given document collect document number term number size total size total size correspond invert file paper io cost use analyz compar differ algorithm central environ io cost domin cpu cost cost analysi comparison distribut environ conduct futur algorithm section present three algorithm process join textual attribut algorithm analyz compar next two section assum exist invert file document collect depend document andor invert file use evalu join three basic algorithm construct first algorithm use document process join second algorithm use document one collect invert file anoth collect evalu join third algorithm use invert file collect job collect document repres documentterm matrix row document column term invert file entri term therefor name first algorithm horizontalhorizont nest loop hhnl second algorithm horizontalvert nest loop hvnl third algorithm verticalvert merg vvm algorithm hhnl straightforward way evalu join compar document one collect everi document collect although simpl method sever attract properti first one two collect reduc select condit remain document need consid second document gener read sequenti result sequenti io discuss section know natur process join compar document c document c is natur use c outer collect c inner collect join evalu call order forward order revers order backward order backward order effici c much smaller c consid forward order first adopt polici let outer collect use much memori space possibl case let inner collect use much memori space possibl equival backward order discuss later memori alloc polici algorithm hhnl describ follow read next x document c main memori integ x determin scan document c document c memori comput similar document everi document c current memori document c keep track document c process largest similar d rigor c outer collect need reserv space accommod least one document c is ds e page memori need reserv c also need reserv space save similar document c current memori assum similar valu occupi byte number document c held memori buffer size b estim as size page byte present algorithm hhnl there document c read in fif unprocess document c left input next x unprocess document c main memori els input remain unprocess document c main memori unprocess c memori document c fcomput similar d greater smallest largest similar comput far freplac smallest largest similar new similar updat list document c keep track document largest similar d larg heap structur use find smallest largest similar algorithm consid backward order c use outer collect evalu join c scan set document c current memori let first document c read memori c scan n similar everi document c comput sinc document c need find document c similar it need keep track document c largest similar document c mean need keep track n similar backward order evalu word need memori space size n p keep similar compar forward order requir xp page keep track need similar memori space need save similar backward order advers impact perform backward order result forward order like perform better backward order two document collect size howev c much smaller c backward order still outperform forward order exampl c entir held memori one scan collect need process join backward order matter larg c is algorithm hvnl algorithm use document one collect invert file collect comput similar inform retriev system process user queri consid document find document system similar user queri one way process queri compar document system method requir almost nonzero entri documentterm matrix access effici way use invert file document collect process queri method use smart system advantag method need access nonzero entri column documentterm matrix correspond term queri sinc number term queri usual small fraction total number term document system invert file base method access small portion documentterm matrix algorithm hvnl straightforward extens method situat need find similar document one collect everi document anoth collect process use invert file comput similar document c document c describ follow let t w next dcell consid d let invert file entri correspond c fd w d n wn g s document number process similar document accumul far u accumul similar consid w w contribut due share term in term process similar document c comput document c similar identifi note last dcell process intermedi similar document c need save amount memori need purpos proport n analysi reveal use invert file c process join need memori space store intermedi similar the amount proport n practic nonzero similar need save use ffi denot fraction similar nonzero straightforward way process join go process document c independ is read document c turn memori read invert file entri c correspond term process note term necessarili appear c problem straightforward method lack coordin process differ document c result term appear k document c invert file entri term assum also appear c c read k time algorithm hvnl design reus invert file entri read memori process earlier document process later document save io cost due space limit usual invert file entri read earlier kept memori therefor algorithm also need polici replac invert file entri memori new invert file entri let frequenc term collect number document contain term known document frequenc document frequenc store similar comput ir system extra effort need get them replac polici choos invert file entri whose correspond term lowest frequenc c replac reduc possibl replac invert file entri reus futur make best use invert file entri current memori new document c process term whose correspond invert file entri alreadi memori consid first mean newli read document scan twice memori first scan find term whose correspond invert file entri alreadi memori second scan process term list contain term whose correspond invert file entri memori maintain note invert file entri read earlier kept memori still possibl read invert file entri one time note also worst case scenario algorithm hvnl document c consider none correspond invert file entri current memori case algorithm hvnl deterior straightforward method present algorithm hvnl document c ffor term also appear c invert file entri c i memori accumul similar term also appear c fif invert file entri c i memori avail memori space accommod tread els find invert file entri memori lowest document frequenc replac accumul similar find document c largest similar d invert file btree use find whether term collect present correspond invert file entri locat one possibl way improv algorithm improv select next document process intuit alway choos unprocess document c whose term correspond invert file entri c largest intersect invert file entri alreadi memori next document process likelihood invert file entri alreadi memori reus increas exampl consid three document three term tg suppos term smaller subscript lower document frequenc suppos memori buffer larg enough hold three invert file entri d process given order invert file entri need read exactli onc howev process order d d invert file entri correspond read twice invert file entri read exactli onc clearli exampl order fd d dg better order fd d dg order optim incur minimum io cost question optim order found effici unfortun shown proposit below problem find optim order nphard proposit problem find optim order document c best perform achiev nphard proof shown follow problem known optim batch integr assert verif obiav find optim order verifi set integr constraint verifi constraint requir set page brought secondari storag memori nphard problem seen optim order problem case essenti optim order problem obiav follow correspond two problem easili establish process document c correspond verifi integr constraint need read set invert file entri process document c correspond need bring set page verifi integr constraint invert file entri read process one document may use process anoth document correspond page brought verifi one integr constraint may use verifi anoth integr constraint therefor optim order problem case also nphard decid pursu issu find optim order addit nphard natur anoth problem associ optim order is read document order rather storag order expens random io incur algorithm vvm algorithm vvm use invert file collect comput similar strength algorithm need scan invert file comput similar everi pair document two collect regardless size two collect provid memori space larg enough accommod intermedi similar valu case algorithm vvm least good algorithm hhnl algorithm hhnl need scan document collect least size invert file collect size collect itself algorithm vvm tri comput similar everi pair document two collect simultan result need save intermedi similar thu memori requir save similar proport n n independ number term document larg algorithm vvm run all summari algorithm vvm like perform well document collect larg size such none entir held small number document possibl document larg size anoth situat algorithm vvm may well vocabulari two document collect differ exampl one collect medicin comput scienc case number nonzero similar document two collect like small algorithm vvm describ follow scan invert file two collect parallel scan two invert file entri correspond term invok similar accumul process recal assum invert file entri store ascend term number therefor one scan invert file suffici veri much like merg phase merg sort similar accumul process describ follow let um g two invert file entri term two collect respect two invert file entri process similar document r p q accumul far u pq u p v q u pq accumul similar r p q consid extend algorithm vvm follow tackl problem insuffici memori space intermedi similar suppos sm total number page need store intermedi similar pair document two collect consid time suppos avail memori space store intermedi similar sm m divid collect c dsmme subcollect comput similar document subcollect document c one subcollect time sinc subcollect one scan origin invert file collect need extens incur cost dsmme time higher memori larg enough hold intermedi similar detail cost analysi see section io cost analysi section provid analysi io cost algorithm present section algorithm hhnl let x number document c held memori buffer size b defin section sinc x document c c need scan onc total io cost hhnl estim below first term cost scan c second term cost scan c dn xe number time c need scan cost formula assum io sequenti io ie c c sequenti scan in reason document collect read dedic drive littl interfer io request case io may becom costli random io first consid case n x follow interleav io cpu pattern observ x document c read in document c read in cpu take time comput similar x document d cpu comput io resourc may alloc job case next document c use random io readin next x document c word worst case document c read use random io everi x document c random io number actual random io scan document c also depend document size estim minfd use otherwis n use therefor n x worst scenario total io cost estim follow entir collect c scan sequenti held memori remain memori space use hold document c therefor c read dd block block read sequenti case algorithm hvnl recal btree maintain document collect quickli locat invert file entri given term size btree estim follow typic cell btree occupi byte term number address document frequenc document collect n term size btree approxim np onli leaf node consid size terribl larg exampl document collect distinct term btree take page size kb assum entir btree read memori invert file need access incur onetim cost read btree let x number invert file entri c held memori memori buffer fulli use addit x invert file entri memori size b also need contain document c size ds e btree size bt nonzero similar valu document c current process document c list contain term whose correspond invert file entri main memori size xjtjp therefor x estim follow c assum readin document c incur sequenti io io cost hvnl estim follow first case correspond case x greater equal total number invert file entri c ie case either read entir invert file c sequenti order thi correspond first express minfg read invert file entri need process queri the number q random order thi correspond second express minfg memori larg enough sinc x second case correspond case memori larg enough hold invert file entri c larg enough hold necessari invert file entri last express case memori larg enough hold need invert file entri c case second term cost find read invert file entri c correspond term document c memori fulli occupi suppos memori larg enough hold invert file entri c correspond term first document c fraction x invert file entri correspond term sth document c ie invert file entri c correspond term first document c held memori let number new invert file entri need read new document c process memori fulli occupi third term total cost read new invert file entri process remain document c discuss s x estim first number distinct term document c estim therefor smallest satisfi q fm x note x gamma q fs gamma number invert file entri still held memori invert file entri c correspond term first document c read q number new invert file entri need read sth document c process x estim final estim q fs discuss section possibl io read document c random io due oblig io devic invert file entri accommod still memori space left remain memori space use sequenti scan multipl document c time base observ random io consid total io cost hvnl estim as would easier understand formula compar formula comput hv first express minfg remain memori space invert file entri accommod slight modif similar accumul c use outer collect process queri case memori space need store intermedi similar ffin p cost backward order estim way case forward order algorithm vvm avoid much higher cost random io simpli scan invert file two collect parallel scan two invert file entri correspond term invok similar accumul process recal assum invert file entri store ascend term number therefor one scan invert file suffici comput similar memori larg enough accommod intermedi similar therefor io sequenti io total io cost algorithm vvm is again io could actual random io due oblig io devic worst case scenario ie io random io total io cost algorithm vvm estim as algorithm vvm usual requir larg memori space save intermedi similar valu nonzero similar store memori space store intermedi similar valu algorithm vvm ffi n n p memori space larg enough accommod intermedi similar valu simpl extens algorithm vvm made see section case total cost estim multipli vv or vvr dsmme total number page need store intermedi similar pair document two collect consid time e avail memori space store intermedi similar therefor gener formula estim total io cost io sequenti io given below gener formula estim total io cost io random io is comparison algorithm hhnl use two document collect input two document collect need scan least onc constitut lower bound io cost algorithm algorithm hhnl use special data structur invert file btree thu easili applic easier implement sinc algorithm hhnl use document directli similar comput benefit quit natur possibl reduct number document either one collect result evalu select condit nontextu attribut relev relat memori space requir algorithm store intermedi similar valu gener small compar algorithm algorithm hvnl use one document collect one invert file btree correspond inner collect input document collect alway scan onc access invert file entri complex one hand invert file entri need read in fact invert file entri whose correspond term also appear document collect need access hand invert file entri may read mani time due appear multipl document c although effort made algorithm reus invert file entri current memori expect algorithm competit one follow two situat one document collect say c much smaller collect case like small fraction invert file entri invert file need access mean small portion documentterm matrix correspond c access case contrast algorithm hhnl use entir matrix need access least even c held entir memori c contain one document situat becom extrem case process singl queri document collect mention befor use invert file process singl queri shown ir superior use document directli note origin larg document collect may becom small condit attribut relev relat evalu collect document use close document storag order share mani term nonclos document share term increas possibl reus invert file entri memori reduc possibl reread invert file entri could happen document collect cluster algorithm hvnl access invert file entri random order such two neg effect io cost one random io expens sequenti io even invert file entri occupi small fraction page whole page contain entri read in word e size invert file entri need read dee even e small say therefor size invert file entri close integ competit algorithm hvnl increas algorithm hvnl use primarili two data structur one invert file btree term one disadvantag use invert file size file remain even number document correspond document collect reduc select unless construct anoth invert file reduc set highli unlik due cost involv memori space requir algorithm hvnl store intermedi similar higher algorithm hhnl lower algorithm vvm algorithm vvm use two invert file input discuss befor algorithm nice onescan properti name need scan invert file comput similar regardless size two collect provid memori space larg enough accommod intermedi similar valu memori space larg enough accommod intermedi similar valu algorithm vvm least effici algorithm hhnl far io cost concern major drawback algorithm vvm need larg memori space save intermedi similar two situat algorithm vvm like perform well first document collect larg size small number document second vocabulari two document collect differ two situat number nonzero similar document two collect like small anoth disadvantag algorithm vvm size invert file remain even number document correspond document collect reduc simul result due larg number paramet cost formula algorithm present difficult compar perform algorithm base formula directli section algorithm compar base simul result comput cost formula deriv section object identifi impact variat paramet algorithm word would like find situat algorithm perform best statist three document collect collect arpanist name wsj wall street journal fr feder regist doe depart energi use simul statist collect shown tabl the last three row estim us base among three document collect fr fewer larger document doe smaller document number document wsj lie fr doe averag size document wsj simul page size p fix kb fraction similar nonzero ffi fix fix note algorithm hhnl backward order algorithm involv none realli sensit larg say hundr probabl q comput follow wsj fr doe document term per doc total distinct term collect size page avg size document avg size inv fi en tabl statist inform sever document collect formula say that given number distinct term c ie smaller number distinct term c is smaller probabl term c also appear c be much larger q becom closer otherwis q probabl p comput similar manner paramet b memori size ff assign base valu impact paramet studi vari valu paramet let paramet use base valu present follow five group simul result group group real collect use collect c collect c sinc three real collect wsj fr doe two paramet b ff six simul result collect group group differ real collect use c c b vari ff use base valu three real collect six simul design group group c c continu use real collect small number document c use particip join experi use investig impact local select simul group use base valu two paramet sinc three real collect three simul result collect group group group c continu use real collect c collect small number document differ group group former use small number document in c origin larg collect c latter use origin small collect c differ follow impact cost document c need read randomli former still read sequenti latter size invert file size btree collect c former comput base origin collect document use impact cost algorithm vvm experi real collect chosen c c deriv c again simul group use base valu two paramet sinc three real collect three simul result collect group group group collect c collect c use new collect remain ident new collect deriv real collect reduc number document real collect increas number term document real collect factor collect size remain same simul group especi aim observ behavior algorithm vvm again base valu two paramet use three simul result collect group sinc three real collect space consider simul result backward order approach present notic backward order approach make differ hhnl hvnl use see discuss section section compar forward order backward order requir memori space store intermedi similar result backward order outer collect inner collect incur somewhat higher cost forward order outer collect b inner collect b b collect b collect figur section valu k yaxi equival k sequenti page io figur unit xaxi equival page simul result group follow simul conduct group simul chang increment simul chang increment simul chang increment simul chang increment simul chang increment simul chang increment follow observ made result simul see figur algorithm hhnl outperform two algorithm especi b small sever reason algorithm hvnl perform poorli first outer document collect mani document n caus repeat readin mani invert file entri c second algorithm hvnl requir random io third j close integ result document invert file entri read in algorithm hvnl incur twice much cost algorithm hhnl versu document versu invert file entri main reason algorithm vvm perform poorli memori requir store intermedi similar page much greater avail memori result mani scan two invert file need process join algorithm perform better larger avail memori larger one document collect invert file held memori entireti happen algorithm hhnl algorithm hvnl similar perform sinc case algorithm hhnl scan two document collect algorithm hvnl scan one document collect one invert file size document collect similar observ made result simul also made result simul simul not shown rel speak perform algorithm vvm simul largest improv due larger size document fewer number document howev memori requir store intermedi similar case page still larg avail memori handl least two scan two invert file use process join surprisingli rel perform algorithm vvm simul becom much wors due smaller size document larger number document io cost hh hvr theta theta theta theta theta theta theta theta theta theta vv figur result simul ff io cost hh hvr theta theta theta theta theta theta theta theta theta vv figur result simul follow observ made result simul algorithm hhnl best perform among three algorithm hh vv independ ff involv random io other becom wors ff increas algorithm hvnl sensit larger ff similar observ made result simul simul result group group differ real collect use c c base valu use b ff three real collect follow six simul design simul chang increment simul chang increment simul chang increment simul chang increment simul chang increment simul chang increment compar result simul result simul see figur follow observ made algorithm hhnl best perform simul algorithm hvnl sometim beat hhnl simul reason algorithm hhnl let outer collect use much memori space possibl algorithm hvnl let inner collect use much memori space possibl exampl consid figur figur case entir invert file fr held memori result algorithm hvnl use one scan wsj invert file fr need process join howev algorithm hhnl use memori larg enough hold entir outer collect wsj result one scan wsj two scan invert file fr need process join algorithm hhnl use chang cost algorithm vvm complet symmetr two document collect none two collect entir held memori get mix result algorithm hhnl is sometim better result simul simul sometim opposit true smaller collect held memori better perform achiev use smaller collect outer collect reason algorithm hhnl better result simul simul b becom larger observ also support earlier argument section backward order outperform forward order backward order impli much smaller outer collect situat algorithm hhnl revers algorithm hvnl reason algorithm hhnl let outer collect use much memori space possibl algorithm hvnl let inner collect use much memori space possibl similar observ made result simul result simul also made result simul result simul well result simul result simul the result simul shown simul result group group c c continu real collect small number document c use particip join let number document c sinc n read document individu random order result cost read document ds e ff base thi follow new formula hh io cost hh hvr theta theta theta theta theta theta theta theta theta theta vv figur result simul io cost hh hvr theta theta theta theta theta theta theta theta theta theta vv figur result simul sinc small like document c held memori addit remain memori space use read mani document c possibl result follow formula hhr comput hv hvr need estim number distinct term document number estim fm cost formula hv section except replac ds e ff replac fm let new formula denot hv sinc io hv becom random io cost formula vv vvr remain same howev memori requir store intermedi similar reduc n deltap quantiti size invert file entri size btree collect c remain befor follow three simul carri out simul chang increment simul chang increment simul chang increment follow observ obtain result simul see figur small algorithm hvnl outperform other expect algorithm hhnl becom best perform becom larger sinc small document easili fit memori result algorithm hhnl requir one scan inner document collect addit read document outer collect case memori abl accommod intermedi similar algorithm vvm reason algorithm vvm incur much higher cost algorithm hhnl size invert file collect c chang although small number document c io cost hh hv theta theta theta theta theta theta theta theta theta theta vv figur result simul io cost hh hv theta theta theta theta theta theta theta theta theta theta vv figur simul compar result simul not shown result simul notic differ rel perform algorithm hvnl deterior algorithm hvnl becom wors algorithm hhnl reach document fr contain much term document wsj therefor invert file entri need read algorithm hvnl process document fr compar result simul not shown result simul notic differ rel perform algorithm hvnl improv algorithm hvnl outperform algorithm hhnl even reach document doe contain much fewer term document wsj therefor fewer invert file entri need read algorithm hvnl process document doe space consider present simul result situat number document collect reduc select howev difficult see compar situat one collect reduc algorithm hhnl benefit collect reduc simul result group group c continu use real collect c collect small number document sinc real collect contain small number document deriv collect real collect turn quit easi given document collect first keep document size decid number document want new collect number say m number distinct term new collect comput fm key statist new collect becom avail statist cost formula section use find cost algorithm follow three simul conduct group simul chang increment simul chang increment simul chang increment compar result simul see figur simul see figur follow observ made littl chang algorithm hhnl sinc small read document sequenti randomli make littl differ algorithm hvnl degrad somewhat effect q probabl term collect c also appear collect c simul q comput base origin simul q comput base origin new fm sinc fm much smaller q comput use formula higher q valu impli invert file entri collect c need read result perform algorithm hvnl down cost algorithm vvm reduc substanti main reason behind reduct reduct size invert file c simul size comput base origin c simul size comput base reduc collect similar observ made simul simul simul result group group c c use new collect remain ident new collect deriv real collect reduc number document increas number term document real collect factor f ensur collect size remain same follow three simul carri out simul deriv wsj decreas increas factor chang increment simul deriv fr decreas increas factor chang increment simul deriv doe decreas increas factor chang increment follow observ made result simul see figur factor f small algorithm hhnl outperform algorithm howev f larger sequenti version algorithm vvm ie vv becom best perform vv decreas rapidli f increas expect f reach intermedi similar held memori result vv reach lower bound invert file scan onc number document collect reduc number term document becom hv hvr insensit chang hhr decreas f increas f increas number document c decreas sinc number random io bound number document c hhr decreas result similar observ simul made simul differ vv reach minimum faster latter reason number document fr origin much smaller wsj again similar observ simul made simul differ vv reach minimum slower latter reason number document doe origin much larger wsj summari simul result follow main point summar extens simul f io cost hh hvr theta theta theta theta theta theta theta theta vv figur result simul cost one algorithm one situat differ drastic anoth algorithm situat exampl simul algorithm hvnl incur cost time higher algorithm hhnl memori buffer small simul cost incur algorithm hhnl time higher algorithm hvnl result import choos appropri algorithm given situat number document one two document collect say m origin small becom small select algorithm hvnl good chanc outperform algorithm although small small enough mainli depend number term document outer collect like limit it simul number document two collect larg roughli n document collect larg none entir held memori algorithm vvm the sequenti version outperform algorithm case simpl algorithm hhnl perform well cost random version algorithm depict worst case scenario io devic busi satisfi differ oblig time except algorithm vvm cost impact rank algorithm overal simul result match well analysi section integr algorithm sinc one algorithm definit better algorithm circumst desir construct integr algorithm automat determin algorithm use given statist two collect queri paramet select predic nontextu attribut integr algorithm sketch follow none two collect invert file case hhnl use fcomput hh use formula hh comput bhh counterpart hh backward order use formula shown hh bhh use forward order hhnl els use backward order hhnl one collect invert file hhnl hvnl use case fif select fcomput hh use formula hh comput bhh comput hv use formula hv comput bhv counterpart hv backward order use formula shown els festim number document particip join use select comput hh use formula hh comput bhh comput hv use formula hv comput bhv use algorithm lowest estim cost collect invert file fif select fcomput hh use formula hh comput bhh comput hv use formula hv comput bhv counterpart hv backward order use formula shown comput vv use formula vv els festim number document particip join use select comput hh use formula hh comput bhh comput hv use formula hv comput bhv comput vv use formula vv use algorithm lowest estim cost conclud remark paper present analyz three algorithm process join attribut textual type analysi simul identifi algorithm type input document collect algorithm like perform well specif found algorithm hvnl competit number document one two document collect isbecom small algorithm vvm perform well number document two collect larg document collect larg none entir held memori case algorithm hhnl like top perform sinc one algorithm definit better algorithm propos idea construct integr algorithm consist basic algorithm particular basic algorithm invok lowest estim cost also indic standard term number use multidatabas environ studi area includ investig impact avail cluster perform algorithm develop cost formula includ cpu cost commun cost develop algorithm process textual join parallel conduct detail simul experi acknowledg would like thank anonym review valuabl suggest improv paper research support part follow grant nsf grant iri iri air forc afosr nasa nagw aro bmdo grant daah r an adt approach full text queri process system distribut databas sdd automat retriev local inform use smart view definit gener databas integr multidatabas system queri optim heterogen databas autom assign submit manuscript review file organ consecut retriev properti overview first text retriev confer interoper multipl autonom databas introduct combinatori mathemat a scheme batch verif integr assert databas system queri process multidatabas system a theori translat relat queri hierarch queri introduct modern inform retriev design integr inform retrievaldatabas manag system feder databas system manag distribut heterogen autonom databas on consecutiveretriev problem increment updat invert list text document retriev translat objectori queri relat queri tr ctr niko mamouli effici process join setvalu attribut proceed acm sigmod intern confer manag data june san diego california gltekin zsoyolu ismail sengr altingvd abdullah alhamdani selma aye zel zgr ulusoy zehra meral zsoyolu queri web metadata nativ score manag text support databas acm transact databas system tod v n p decemb