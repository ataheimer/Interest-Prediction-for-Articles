t approach communicationeffici data redistribut a address develop effici method perform data redistribut array distributedmemori machin data redistribut import distributedmemori implement data parallel languag high perform fortran algebra represent regular data distribut use develop analyt model evalu commun cost data redistribut use algebra represent analyt model approach communicationeffici data redistribut develop implement result intel ipsc report b introduct distributedmemori machin demonstr potenti high perform howev use restrict due difficulti program comput er program model base singl address space provis explicit specif data distribut share array recent gain popular high perform fortran hpf fortran ex tension provid programm direct specifi align array one anoth distribut align array userdefin virtual processor mesh direct dynam chang distribut array program execut provid redistribut data array use follow circumst work support part arpa order number monitor nist grant number nanbd darpa order number monitor nist grant number appear th acm intern confer juli manchest england ffl differ phase program vari access pattern share array differ data distribut array often best suit phase instanc altern direct implicit method consist two phase first phase access twodimension array along row second phase along column distribut array row local processor column di tribut elimin commun first phase similarli distribut array column local row distribut elimin commun second phase need explicitli redistribut array two phase aris ffl scientif librari tune provid peak perform fix set distribut input array distribut may conform distribut actual paramet lead perform degrad develop librari routin possibl input distribut practic henc actual array paramet must explicitli redistribut ffl data redistribut implicitli requir execut array statement array section statement entir array differ distribut thu effici method perform data redistribut great import distributedmemori implement hpf data redistribut strategi present literatur issu reshap perfect poweroftwo size data array hypercub address close form express processor set processor need commun with data set need commun data redistribut construct algorithm runtim array redistribut provid closedform express character data commun requir doall loop involv array ident block cyclic distribut simpl index express develop interprocessor data commun loop involv array invert index express express composit index distribut function scheme effici execut hpf array statement blockcycl distribut array present scheme commun gener compiletim estim commun cost present scheme base identifi commun primit compar index express array refer detail techniqu along line estim commun cost develop howev scheme accur identifi commun cost correspond array ident distribut scheme gener align array use cost metric variou interconnect network develop issu effici redistribut arbitrari blockcycl data distribut address scheme present therein perform data redistribut commun one step data requir sourc target data distribut refer singlephas data redistribut strategi certain circumst character interprocessor commun possibl facilit develop effici redistribut scheme redistribut perform sequenc singlephas data redistribut refer multiphas data redistribut strategi intermedi data distribut chosen total cost sequenc lower cost singlephas redistribut exampl consid array element distribut blockwis eight processor let target distribut blockcycl block size three singlephas data redistribut processor commun seven processor suppos redistribut perform two phase redistribut block blockcycl block size follow second redistribut target distribut first data redistribut requir processor send two messag second requir four messag messag setup time domin compon commun cost use twophas strategi reduc total commun cost commun cost model data redistribut take account total startup cost messag transmiss cost overhead aris due network con tention paper first present analyt model base number messag volum data commun estim commun cost singlephas data redistribut model network content express commun sequenc permut execut fix number contentionfre step use analyt model tensor product represent data distribut develop cost estim singlephas data redistribut given sourc target distribut show use multiphas strategi reduc commun cost present method determin intermedi distribut total commun cost multiphas strategi minim paper organ follow section briefli describ tensor product represent regular data distribut support hpf section commun cost model describ use develop cost estim singlephas data redistribut section present effici algorithm data redistribut preliminari perform result intel ipsc report section conclus present section regular data distribut section briefli describ tensor product represent regular data distribut detail tensor product theori present hpf support twolevel map data object abstract processor array languag introduc cartesian grid refer templat array align templat templat distribut onto virtual processor array use regular data distribut consid array a align templat ai align dai b templat distribut onto p processor use cyclick distribut templat element di map processor i div array divid p array refer loc resid local memori processor paper focu ident align ie ai align di tensor product notat let theta n matrix b p theta q matrix tensor product b block matrix obtain replac element ij ij b aomega b mp theta nq matrix defin focu tensor product vector base vector basi element e column vector length one posit zero elsewher tensor product e two vector base e e n j call tensor basi e size tensor j mn express vector basi e tensor product vector base e call factor vector basi exampl vector basi e factor tensor base e e express tensor basi vector basi e call linear tensor basi exampl tensor basi e linear give vector basi defin compat two tensor base definit compat tensor base two tensor base b b compat factor factor tensor base size vector base correspond posit equal ex ampl compat tensor base factor get note compat defin semant regular data distribut use tensor basi algebra semant regular data distribut consid array a processor use regular data distribut assum n multipl p locat element ai specifi tupl p l p processor l local index ai cyclicb distribut element ai processor index i div b mod p local index b block cyclic distribut equival cyclic n respect indic a repres vector basi e n suppos a distribut onto four processor use block distribut element a map processor local processor gener element locat processor local index consid factor vector basi e tensor basi tensor basi e index vector basi e correspond processor element ai locat index e correspond local address ai processor say vector basi e cor respond processor element ai locat e correspond local address ai pro cessor denot vector basi correspond processor ae tensor basi ae repres array a distribut block fashion four processor tensor basi vector basi correspond processor index identifi call distribut basi vector basi e refer data basi ae processor basi thu distribut basi linear array a factor e n everi vector basi result tensor basi identifi either processor basi data basi block distribut p proce cyclic distribut p processor distribut p processor block size b regular distribut base linear array defin as definit distribut function onedimension array correspond index ai let distribut function dist is dist basi dist distribut basi defin follow index function distribut basi index function select vector base distribut identifi processor index local index global index element distribut array divid n array assum pad dnpep definit index function let array a distribut basi e c processor index function proc local index function local global index function global index function indic global c local c proce c distribut basi multidimension array defin tensor product distribut base dimens distribut index function multidimension array defin term correspond function onedimension array definit distribut function let a n distribut use distribut d t distribut basi dist e n iomega deltaomega theta dist e n distribut basi theta array distribut block cyclic theta virtual processor mesh ae l omega l squar parenthesi separ distribut base correspond dimens definit index function index function proc local global multidimension array defin follow remaind paper assum sourc target distribut base compat also assum dimension virtual processor array number virtual processor greater underli physic network defin semant redistribut command redistribut regular data distribut correspond remap processor basi distribut basi fi initi distribut basi fi distribut basi redistribut procfid may differ impli redistribut involv commun also localfi localfid may differ exampl l repres block distribut processor remap processor basi give new distribut basi fi l correspond cyclic distribut processor clearli globalfi lambdalp l impli commun requir also localfi l localfid impli local index element chang redistribut consid distribut base sourc target distribut array a describ intro duction sourc distribut basi ae psomega e l target distribut basi e l l intermedi data distribut use twophas redistribut strategi given distribut basi e l l singlephas redistribut correspond remap ae psomega e l l l twophas redistribut correspond sequenc remap ae psomega e l l l l l estim benefit multiphas redistribut necessari develop cost metric commun cost data redistribut commun cost estim data redistribu tion section model commun cost singlephas data redistribut circuitswitch wormhol rout mesh network use fix rout rule survey rout techniqu present commun time express term follow ffl startup time ts compos time pack nonconsecut data element buffer copi data to user space from system space unpack data ffl transfer time te time data transmiss depend commun bandwidth path length sourc destin node circuitswitch wormhol rout net work larg messag absenc network content time nearli independ path length sinc transfer time messag size n nte absenc content commun cost messag n element ts ffl network content sourc node commun destin node sever pair processor commun across network path conflict occur caus commun overhead shown impact node conflict neglig link conflict signific gener data redistribut requir alltomani person commun decompos commun set permut perform fix number contentionfre step for fix underli network configur total time perform sequenc permut provid estim commun cost take account network content evalu redistribut cost linear data array distribut linear processor array first consid case data array size processor array size perfect power integ r z gener nonperfectpow data processor array l psomega e bs l fi l l compat sourc target distribut base let d cost data redistribut defin term use determin maximum number messag sent processor volum data commun definit distribut base differ let tomega deltaomega oe n deltaomega oe aeg differ fi fi given qfi l l l exampl l l l factor l l l l differ qfi fi size vector basi e l thu similarli qfi number processor sourc target distribut equal distribut base differ symmetr definit distribut base union let fi fi compat distribut base st deltaomega oe n deltaomega oe aeg union l l l union ufi fi distribut base shown abov size tensor basi ae l thu number processor sourc target distribut p ufi fi d p theta estim commun cost data redistribut use differ union sourc target distribut base perfect power data processor array size loss gener let bs bd result hold otherwis l l fi l l two base compat l l l l l l consid processor sourc distribut element global in dice g st g div r bs locat processor q element global indic form ir pb bs repres e r c note indic processor base set valu q q consid particular element locat processor q global index element correspond basi element e r c l l omega ae r pgammab bs l global index data redistribut unchang locat processor q commun processor l r pgammab bs data redistribut sinc q fix element processor q largest number processor q need commun with determin total number differ valu l element locat q sinc l index vector basi e r b gammab l take r b gammab valu need commun r b gammab processor data redistribut estim directli obtain compar sourc target distribut base number processor q commun depend size data basi e r b gammab l si correspond differ fi fi sinc similar argument hold sourc processor use def follow maximum number messag processor need send data redistribut differ qfi fi maximum size data sent messag determin follow consid processor previou discuss follow processor q commun processor ir pgammab bs data redistribut consid messag processor q send processor element locat processor q sent processor i div r b element indic r c bs element repres e r c thu total number data item commun r c theta r bs total size vector base e r c union ufi fi d correspond size tensor basi l r c bs thu number data element commun given n use present cost model largest commun cost messag absenc content given ts te model requir commun sequenc permut first consid exampl let sourc target distribut cyclic block di tribut respect element array proce sor redistribut shown fig necessari commun repres term commun matrix c ci send data processor p j els ci q permut matric underli topolog theta mesh permuta tion q q q schedul three contentionfre step use schedul techniqu present thu maximum commun time data redistribut correspond time perform three permut sequenc permut q q said exactli cover commun c requir data redistribut redund messag sent messag requir redistribut commun gener commun data redistribut requir processor commun qfi fi d distinct processor show commun express term exactli qfi fi d permut processor express radix r permut s permut fa express term a fa exampl correspond q sourc distribut cyclic target distribut block figur data redistribut a cyclic block input compat distribut base fi l l fi l l output permut exactli cover redistribut commun els figur algorithm construct permut cover commun data redistribut fig present algorithm construct sequenc permut exactli cover commun requir data redistribut algorithm xtupl whose element valu repres x ir s correspond base r represent use digit also x delta y correspond concaten x y exampl note differ qfi fi d perfect power r theorem commun data redistribut l l fi l l exactli cover qfi fi d permut proof prove sequenc permut construct algorithm exactli cover requir commu nicat consid case bs bd bs p bd v consid processor accord argument section processor q commun processor ir pgammab bs algorithm r pgammab bs thu also algorithm ir v thu therefor permut cover commun q processor r b gammab permut fa commun distinct processor theorem follow note q need commun r b gammab processor permut cover requir commun distinct processor thu perform data redistribut requir total d permut permut perform fix number contentionfre step determin underli mesh architectur say k step requir time equal time send messag size total cost data redistribut ts te uniformli scale redistribut cost consid remain cost estim use distribut base also facilit index code gener data redistribut perform redistribut processor u need evalu follow ffl send processor set processor u psendu set processor u send data ffl send data index set processor u processor v dsendu v local indic array element resid u need v receiv processor set processor u processor u receiv data ffl receiv data index set processor u processor local indic array element need u resid v array block cyclic distribut data index set processor set character use regular section close form gener cyclicb cyclicbd redistribut close form character set use simpl regular section possibl howev sourc destin distribut base compat close form eval uat discuss section follow processor commun processor ir pgammab bs similar evalu case use recurs regular section notat repres data send set twolevel recurs regular section array given l directli follow loop nest thu case consid section dsendu v local r c l omega l l r b v r b l r b perform similar evalu case let vr b gammap receiv processor data set evalu similarli given data receiv set follow drecvu vr bs gammap gener data processor array size l psomega e bs l fi l l let result hold case sinc two distribut base compat bs jbd bd jpb l bs l pb bs l l bs pb bs l domega e bs l use argument similar section shown processor bs need commun processor pb bs thu largest number processor sourc processor need commun b bs qfi fi similarli largest messag size commun np requir commun express sequenc permuta tion theorem commun data redistribut l psomega e bs l fi l l exactli cover qfi fi d permut proof similar theorem permut construct shown fig sinc qfi fi d permut requir permut perform fix number contentionfre step total commun cost given ts te exampl consid data distribut shown fig distribut base given fi l fi e l basi differ qfi fi d basi union ufi fi d largest number messag sent processor six largest size messag one cost singlephas data redistribut close form processor index data index set determin manner similar use perfect power data array size section distribut basi multidimension array tensor product distribut basi dimen sion sinc shapepreserv data redistribut consid ere distribut along array dimens chang without chang shape data processor ar ray analysi perform independ array dimens result combin multidimension array communicationeffici data redistribut section describ multiphas redistribut strategi first consid specif exampl de messag sent processor also account input compat distribut base fi l psomega e bs l fi l l output permut exactli cover redistribut commun ii mod bs pb els bd bs pbd bs bs figur algorithm construct permut cover commun data redistribut sourc distribut block target distribut cyclic figur data redistribut a block cyclic scribe gener procedur let fi l l l l redistribut correspond remap appropri data basi processor basi redistribut fi fi correspond remap data base e r e r processor base ae r data base remap involv commun subset processor remap perform directli map data base processor base one step sequenc step consid perform redistribut use intermedi distribut data basi e r first map processor basi first redistribut fi l l l l processor commun r processor cost redistribut given cfi p te redistribut fi fi involv map data base e r processor ba si cost redistribut total cost twophas redistribut cfi fi d p te singlephas redistribut would cost r ts gener data base total size qfi fi d need remap processor base multiphas strategi correspond perform map one factor s time choic intermedi distribut depend factor qfi fi exampl r factor use gener differ qfi fi d factor k factor distribut use redistribut perform kphase phase correspond redistribut distribut basi fi distribut basi fi i qfi use cost model develop section cost phase r ts p te total cost kphase redistribut given ts redistribut method multidimension array develop method linear array number intermedi distribut determin number factor differ two distribut base let l l l omega l l differ factor izat consid two factor qfi fi d first factor correspond follow sequenc distribut ae l omega ae l l l l l l l second factor correspond sequenc distribut ae somega e l l l l l l l l first method cost ts te second cost ts te second method lowest commun cost among possibl factor gener redistribut strategi smallest cost depend actual valu messag setup transfer time formul problem determin intermedi distribut total commun cost minim follow optim problem given machin paramet ts te p data array paramet problem find multipl partit qfi fi d r theta delta delta delta theta r tgamma total commun cost cfi fi d minim ts special case qfi find multipl partit p equival find addit partit p op algorithm find optim partit present case frequent occur case number physic processor usual perfect power two differ distribut base perfect power two heurist gener case qfi fi d perfect power provid perform result section compar perform multiphas singlephas strategi specif sourc target data distribut node intel ipsc hyper cube due lack access meshconnect comput strategi could compar mesh network commun two approach perform accord permut gener algorithm total time requir redistribut use singlephas multiphas strategi blockcycl sourc destin distribut measur increas data size time includ index time pack unpack data actual commun time time taken use millisecond wallclock timer mclock tabl a show total time millisecond redistribut cyclic cyclic proce sor differ correspond distribut base twophas strategi use cyclic intermedi distribut accord commun cost model two phase strategi correspond factor lowest commun cost among possibl multiphas strategi seen tabl a two phase strategi perform better singlephas strategi data size k larger data size increas transmiss cost overrid decreas messag startup time tabl b show total time millisecond redistribut cyclic cyclic processor differ correspond distribut base two twophas strategi correspond factor respect use two strategi use cyclic refer twophas cyclic refer twophas intermedi data distri bution respect accord cost model two strategi ident commun time differ time twophas strategi shown tabl b neglig also twophas strategi perform better singlephas strategi data size k larger data size increas transmiss cost overrid decreas messag startup time conclus paper present approach commun effici data redistribut use tensor product represent regular data distribut develop cost estim data redistribut use estim demonstr use multiphas redistribut strategi reduc total cost present method determin appropri intermedi distribut perform result intel ipsc show multiphas redistribut strategi improv perform singlephas redistribut acknowledg would like thank advanc concept comput laboratori nasa lewi research center access intel ipsc hypercub r commun overhead intel ipsc hypercub vienna fortran fortran languag extens distribut memori multiprocessor gener local address commun set data parallel program optim evalu array express massiv parallel machin high perform fortran forum solv problem concurr processor compil optim fortrand mimd distributedmemori machin compil support machineindepend parallel program fortrand topic matrix anali si complex reshap array boolean cube compil communicationeffici program massiv parallel machin survey wormhol rout techniqu direct network optim phase barrier synchron kari ncube wormholerout system use mul tirendezv primit effici compil array statement privat memori multicomput runtim array redistribut hpf program tr solv problem concurr processor vol gener techniqu regular problem compil optim fortran mimd distributedmemori machin compiletim gener regular commun pattern vienna fortranmyampersandmdasha fortran languag extens distribut memori multiprocessor comput support machineindepend parallel program fortran gener local address commun set dataparallel program implement parallel c runtim system scalabl parallel system survey wormhol rout techniqu direct network compil communicationeffici program massiv parallel machin compiletim estim commun cost multicomput onlin commun circuitswitch fix rout mesh effici compil array statement privat memori multicomput ctr stavro souravla mano roumelioti pipelin techniqu dynam data transfer multiprocessor grid intern journal parallel program v n p octob thakur alok choudhari j ramanujam effici algorithm array redistribut ieee transact parallel distribut system v n p june neungsoo park viktor k prasanna cauligi s raghavendra effici algorithm blockcycl array redistribut processor set ieee transact parallel distribut system v n p decemb minyi guo yi pan improv commun schedul array redistribut journal parallel distribut comput v n p may narasimhan ramasubramanian ram subramanian santosh pand automat compil loop exploit oper parallel configur arithmet logic unit ieee transact parallel distribut system v n p januari ram subramanian santosh pand framework performancebas program partit progress comput research nova scienc publish inc commack ny minyi guo ikuo nakata framework effici data redistribut distribut memori multicomput journal supercomput v n p novemb ram subramanian santosh pand framework performancebas program partit progress comput research nova scienc publish inc commack ny chinghsien hsu shengwen bai yehch chung chuse yang gener basiccycl calcul method effici array redistribut ieee transact parallel distribut system v n p decemb yehch chung chinghsien hsu shengwen bai basiccycl calcul techniqu effici dynam data redistribut ieee transact parallel distribut system v n p april chinghsien hsu yehch chung effici method kr r r kr array redistribut journal supercomput v n p may chinghsien hsu yehch chung donlin yang chyiren dow gener processor map techniqu array redistribut ieee transact parallel distribut system v n p juli chinghsien hsu yehch chung chyiren dow effici method multidimension array redistribut journal supercomput v n p aug peizong lee wenyao chen gener commun set array assign statement blockcycl distribut distribut memori parallel comput parallel comput v n p septemb edgar t kaln lionel m ni processor map techniqu toward effici data redistribut ieee transact parallel distribut system v n p decemb neungsoo park viktor k prasanna cauligi raghavendra effici algorithm blockcycl array redistribut processor set proceed acmiee confer supercomput cdrom p novemb san jose ca jihwoei huang chihp chu effici commun schedul method processor map techniqu appli data redistribut journal supercomput v n p septemb manojkumar krishnan jarek nieplocha memori effici parallel matrix multipl oper irregular problem proceed rd confer comput frontier may ischia itali