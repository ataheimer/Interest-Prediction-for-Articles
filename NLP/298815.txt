t indexbas checkpoint algorithm autonom distribut system a abstractthi paper present indexbas checkpoint algorithm distribut system aim reduc total number checkpoint ensur checkpoint belong least one consist global checkpoint or recoveri line algorithm base equival relat defin pair success checkpoint process allow us case advanc recoveri line comput without forc checkpoint process algorithm wellsuit autonom heterogen environ process know privat inform process privat inform type distinct process relat eg clock granular local checkpoint strategi etc also present simul studi compar checkpointingrecoveri overhead algorithm one previou solut b introduct checkpoint one techniqu provid faulttoler distribut system global checkpoint consist set local checkpoint one pro cess distribut comput restart failur local checkpoint state process save stabl storag global checkpoint consist local checkpoint set happen anoth one three class algorithm propos literatur determin consist global checkpoint un coordin coordin commun induc first class process take local checkpoint independ upon occurr failur procedur rollbackrecoveri tri build consist global checkpoint note that consist global checkpoint might exist produc domino effect which worst case rollback comput initi state second class initi process forc pro cess failurefre comput take local work partial support scientif cooper network european commun olo contract no erbpl checkpoint use control messag coordin either block nonblock howev case last local checkpoint process belong consist global checkpoint third class coordin done lazi fashion piggyback control inform applic messag communicationinduc checkpoint algorithm classifi two distinct categori modelbas indexbas algorithm first cate gori exampl target mimic piecewis determinist behavior process well provid dominofre properti indexbas algorithm associ local checkpoint sequenc number tri enforc consist among local checkpoint sequenc number indexbas algorithm ensur dominofre rollback with gener alli less overhead term number checkpoint control inform modelbas one paper present indexbas checkpoint protocol reduc checkpoint overhead term number checkpoint compar previou indexbas algorithm protocol well suit autonom environ process privat inform process design algorithm extract rule use indexbas algorithm updat sequenc number point checkpoint due process increas sequenc number henc deriv algorithm that use equival relat pair success checkpoint process allow recoveri line advanc without increas sequenc number worst case algorithm take number checkpoint advantag algorithm quantifi simul studi show checkpoint overhead reduc compar best previou solut price pay applic messag piggyback control inform one vector integ compar previou propos paper organ follow section present system model section show class indexbas checkpoint algorithm context autonom en viron section describ equival relat propos algorithm section simul studi present model distribut comput consid distribut comput consist n interact messag ex chang pair process connect two way reliabl channel whose transmiss delay unpredict finit autonom sens that share memori share common clock valu access privat inform process clock drift clock granular clock precis speed recoveri action due process failur consid paper process produc sequenc event event move process one state anoth assum event produc execut intern send receiv statement moreov simplic consid checkpoint c particular type intern event process dump current process state onto stabl storag send receiv event messag denot respect sendm receivem distribut execut model partial order event set event happenedbefor relat checkpoint process p denot c isn sn call index sequenc number checkpoint process take checkpoint either pace ba sic checkpoint induc commun pattern forc checkpoint assum process p take initi basic checkpoint c i that sake sim pliciti basic checkpoint taken period algorithm use notat nextc isn indic success checkpoint taken p c isn checkpoint interv isn set event c isn nextc isn messag sent p p j call orphan respect pair c isn receiv event occur c jsn j send event occur checkpoint c set local checkpoint one process global checkpoint c consist orphan messag exist pair local checkpoint belong c fol low denot c sn global checkpoint form checkpoint sequenc number sn indexbas algorithm present assum exampl standard clock synchron algorithm provid common clock valu process use term consist global checkpoint csn recoveri line lsn interchang indexbas checkpoint algorithm simplest way form consist global checkpoint is time basic checkpoint c isn taken process start explicit coordin coordin result consist global checkpoint c sn associ local checkpoint strategi induc checkpoint one process per basic checkpoint briatico al argu previou central strategi decentr lazi fashion piggyback applic messag index sn last checkpoint taken denot msn let us assum process p endow variabl sn repres sequenc number last check point then briaticociuffolettisimoncini bc algorithm sketch use follow rule associ action take local checkpoint basic checkpoint schedul sn increas one checkpoint c isn taken upon receipt messag m sn checkpoint cimsn taken sn set msn messag process use rule prove c sn consist note that due rule takeforcedbc could gap index assign checkpoint process henc process assign index sn first local checkpoint process sequenc number greater sn includ consist global checkpoint c sn worst case bc algorithm number forc checkpoint induc basic one n gamma best case process take basic checkpoint physic time number forc checkpoint per basic one zero howev autonom environ local indic process may diverg due mani caus process speed differ period basic checkpoint etc push indic process higher time one process send messag anoth one extrem like number forc checkpoint close induc reduc number checkpoint interest observ come manivannansingh algorithm design nonautonom distribut system reason take basic checkpoint least one forc checkpoint taken current checkpoint interv so let us assum process indic least one forc checkpoint taken current checkpoint period thi flag set fals time basic checkpoint schedul set true time forc checkpoint taken version manivannansingh ms algorithm well suit autonom environ sketch follow rule basic checkpoint schedul skip increas one checkpoint upon receipt messag m sn msn checkpoint cimsn taken sn set msn skip messag process even though ms algorithm produc reduct total number checkpoint number forc checkpoint caus basic one equal bc takeforcedm actual similar takeforcedbc section propos algorithm includ takebasicm rule howev basic checkpoint taken local sequenc number updat occurr particular checkpoint commun pattern rational behind solut time basic checkpoint taken without increas sequenc number forc checkpoint reduc total number checkpoint end let us first introduc relat equival defin pair success checkpoint process equival relat checkpoint definit two local checkpoint c isn nextc isn process p equival respect recoveri line l sn denot lsn lsn sn sn sn figur exampl pair equival checkpoint exampl let consid recoveri line l sn depict figur sn process p execut either send event receiv event messag sent checkpoint includ recoveri line lsn recoveri line l sn creat replac c sn nextc sn l sn figur also show construct recoveri line sn start l sn use equival c sn nextc sn respect l sn shown exampl equival relat simpl properti see lemma section lsn set l fc isn gfnextc isn g recoveri line henc presenc pair equival checkpoint allow process local advanc recoveri line without updat sequenc sequenc equival number recoveri line suppos process p own two local variabl sn sequenc number en equival number variabl sn store number current recoveri line variabl en repres number equival local checkpoint respect current recoveri line both sn en initi zero henc denot c isnen checkpoint p sequenc number sn equival number en en also call index check point thu initi checkpoint process p denot c i index checkpoint updat accord follow rule c isnen lsn nextc isnen c isn process p also endow vector eq n integ jth entri vector repres knowledg p equival number p j current sequenc number sn thu ith entri correspond en eq updat accord follow rule applic messag sent process p piggyback current sequenc number sn msn current eq vector meq upon receipt messag m updat meq take componentwis maximum msn sn valu meq msn copi eq sn let us remark set l recoveri line a sketch proof properti given lemma so knowledg p vector eq actual repres recent recoveri line sequenc number sn track equival relat upon arriv messag m sent p j p checkpoint interv isnen one follow three case true m sent left side recoveri line sent right side recoveri line j c jsneq j sent right side recoveri line p awar accord previou case time checkpoint nextc isnen one follow three altern i messag receiv isnen fall case c isnen lsn nextc isnen equival track process use local context time checkpoint nextc isnen thu nextc isnen equival shown figur exampl behavior ii exist messag fall case c isnen equival nextc isnen thu nextc isnen iii messag fall case exist least messag receiv isnen fall case checkpoint nextc isnen causal relat one checkpoint belong recoveri line form commun pattern shown figur where due m c sn nextc sn consequ process p cannot determin time take checkpoint nextc isnen lsn optimist and provision c isnen lsn provision indic cannot propag system time first send event nextc isnen equival still undetermin nextc isnen otherwis provision index becom perman figur show case messag bring inform encod eq p befor send lsn recoveri line advanc p l sn l sn case p determin c sn equival nextc sn respect l sn and then advanc recoveri line l sn algorithm checkpoint algorithm propos bqf take basic checkpoint use takebasicm rule howev updat sequenc number optimist assum basic checkpoint equival previou one have lsn sn sn figur upon receipt p detect sn basic checkpoint schedul skip skip els en checkpoint cisnen taken index provision set sn due presenc provision indic caus equival relat algorithm need rule send messag order dissemin perman indic checkpoint send messag isn en send event isn en index provision lsn index sn perman els sn index last checkpoint replac perman sn messag sent last rule algorithm takeforcedbqf refin bcss one use simpl observ upon receipt messag msn sn reason take forc checkpoint send event current checkpoint interv isnen in deed causal relat establish last checkpoint c isn en checkpoint belong recoveri line l msn and thu index c isn en replac perman index msn takeforcedbqf upon receipt messag isn en a sn msn least send event isn en begin forc checkpoint cimsn taken index perman b sn msn send event isn en begin index last checkpoint c isn en replac perman messag process exampl figur a local checkpoint c snen belong recoveri line l sn so index replac forc checkpoint b csnen csn nextcsnen csnen a figur upon receipt m c snen part l sn a c snen cannot belong l sn b contrari due send event snen depict figur b forc checkpoint index taken process messag m point b takeforcedbqf decreas number forc checkpoint compar bc els altern sendmessagebqf part a takeforcedbqf repres case action take basic checkpoint lead updat sequenc number consequ induct checkpoint process data structur process behavior assum process p follow data structur first send skip provision past boolean variabl first send set true least one send event occur current checkpoint interv set fals time checkpoint taken boolean variabl provision set true whenev provision index assign occur set fals whenev index becom perman present j repres maximum equival number en j piggyback messag receiv current checkpoint interv p fall case section upon take checkpoint updat sequenc number present initi checkpoint basic present copi past initi time messag receiv past past j set so predic past indic messag receiv past checkpoint interv sent right side recoveri line case section current seen p process behavior shown the procedur messag handler execut atom fashion implement assum exist one provision index process time two success provision indic detect first index perman replac sn init en first send fals past h gamma h present h gamma m arriv p begin first send begin take checkpoint c forc checkpoint first send fals assign index sn last checkpoint c provision fals index perman past h gamma h present h gamma present j meqj els begin present j meqj present j meqj h past h meqh past h gamma process messag m send data provision past begin assign index sn last checkpoint c provision fals index perman past h gamma h present h gamma h eq h packet messag send m p first send true basic checkpoint schedul skip skip fals skip basic checkpoint els begin provision two success provision indic past begin past h gamma assign index sn last checkpoint c index perman els h past h present h take checkpoint c take basic checkpoint en assign index sn last checkpoint c provision true index provision present h gamma first send fals correct proof let us first introduc follow simpl observ deriv directli algorithm observ checkpoint c isn exist messag msn sn observ deriv rule takeforcedbqf consid c isn first checkpoint sequenc number sn observ checkpoint c isnen exist messag msn sn receiv isnen thi observ deriv rule takeforcedbqf observ messag sent deriv rule sendmessagebqf lemma set sn recoveri line process p checkpoint index sn first checkpoint must includ set s proof sn recoveri line definit otherwis suppos way contradict recoveri line then exist messag m sent process p j process p k orphan respect pair c jsn c ksn henc have c contradict observ suppos process p k checkpoint sequenc number sn case lemma assumpt replac c ksn c ksn sn sn orphan wrt pair c receiv checkpoint interv ksn en msn sn contradict observ suppos process p j checkpoint sequenc number sn case lemma assumpt replac c jsn c jsn sn sn orphan wrt pair c jsn contradict observ henc case assumpt contradict claim follow lemma let c isnen nextc isnen two local checkpoint c isnen lsn set en recoveri line l sn set recoveri line proof c isnen lsn definit messag sent p j thu orphan messag ever exist respect pair checkpoint lemma trivial follow lemma set l j eq recoveri line lemma lemma checkpoint belong least one recoveri line particular belong recoveri line sequenc number sn lemma set recoveri line proof sketch let us assum way contradict recoveri line j eq assumpt contradict otherwis exist messag m sent process p j process p k orphan respect pair c jsneq exist causal messag chain bring inform p encod eq henc have upon arriv messag m fall case section case index associ c ksneqk j provision see third point section p k send first messag form causal messag chain index perman henc accord algorithm index replac sn reset piggyback soon last messag causal messag chain arriv consist lemma initi assumpt contradict claim follow perform studi simul model simul compar bc ms propos algorithm bqf uniform point topoint environ process send messag destin messag uniformli distribut random variabl assum system process process execut intern send receiv oper probabl respect time execut oper process messag propag time exponenti distribut mean valu equal time unit respect also consid burst pointtopoint environ process probabl enter burst state execut intern send event with probabl interv when uniform pointto point environ describ abov basic checkpoint taken period let bcf basic checkpoint frequenc percentag ratio tt time elaps two success period checkpoint total execut time exampl bcf mean initi local checkpoint basic one bcf mean process take basic checkpoint also consid degre heterogen among process h exampl mean process checkpoint period mean resp process checkpoint period remain resp checkpoint period first seri simul experi conduct vari bcf measur ratio tot total number checkpoint taken algorithm total number checkpoint taken bc second seri experi vari degre heterogen h process measur ratio e total number checkpoint taken bqf ms interest count mani local state record checkpoint overhead due take checkpoint consid simul run contain messag deliveri valu bcf h sever simul run differ seed result within other thu varianc report plot result experi figur show ratio tot ms bqf uniform pointtopoint environ small valu bcf below send receiv event checkpoint interv lead high probabl equival checkpoint thu bqf save checkpoint compar ms valu bcf higher ms bqf take number checkpoint probabl two checkpoint equival tend zero reduct total number checkpoint amplifi burst environ figur equival checkpoint process run burst mode dissemin process caus equival case valu bcf bqf save checkpoint compar ms perform bqf particularli good heterogen environ process shorter checkpoint period process would push higher sequenc number lead high checkpoint overhead use either ms bc figur ratio e function degre heterogen h system shown case uniform burst pointtopoint environ best perform about less checkpoint ms obtain one process checkpoint frequenc ten time greater other figur show ratio tot function bcf case environ bqf got maximum gain see figur due heterogen bcf rang slowest process would like remark whole rang checkpoint overhead bqf constantli around less ms bcf checkpoint period total execut time tot total ckpt total ckpt ms figur tot versu bcf uniform pointto point environ bcf checkpoint period total execut time tot total ckpt total ckpt ms figur tot versu bcf burst pointto point environ conclus paper present indexbas checkpoint algorithm well suit autonom distribut system reduc checkpoint overhead compar previou algorithm lie equival relat allow advanc recoveri line without increas sequenc number algorithm optimist and provision assum basic checkpoint c process equival previou one process assign provision index henc time first send total ckpt total ckpt ms figur uniform pointtopoint environ burst pointtopoint environ bcf checkpoint period total execut timetot total ckpt total ckpt ms figur tot versu bcf slowest process burst pointtopoint environ event c equival verifi provision index becom perman otherwis index increas direct forc checkpoint process present simul studi quantifi save checkpoint differ environ compar previou propos price pay applic messag piggyback inform compar one integ use previou algorithm acknowledg author would like thank bruno ciciani michel raynal jeanmichel helari achour mostefaoui anonym refere help comment suggest r model consist checkpoint domino effect distribut system communicationinduc checkpoint protocol ensur rollbackdepend trackabl distribut dominoeffect free recoveri algorithm determin global state distribut system timestampbas checkpoint protocol longliv distribut comput survey rollbackrecoveri protocol messagepass system manetho transpar rollback recoveri low overhead checkpoint rollbackrecoveri distribut system find consist global checkpoint distribut computa tion system structur softwar fault toler volatil log nfaulttoler distribut system consist global checkpoint contain set local checkpoint tr ctr d manivannan m singhal asynchron recoveri without use vector timestamp journal parallel distribut comput v n p decemb b gupta s k banerje rollforward recoveri scheme solv problem coast forward distribut system acm sigop oper system review v n p juli