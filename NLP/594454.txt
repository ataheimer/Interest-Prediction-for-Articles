t function pointlik measur objectori softwar a present method estim size consequ effort durat object orient softwar develop project differ estim may made differ phase develop process accord avail inform defin adapt tradit function point call object orient function point enabl measur object orient analysi design specif tool construct autom count method novel aspect method flexibl organ experi differ count polici find accur predictor size effort etc environ method preliminari result applic industri environ present discuss b introduct cost effort estim import aspect manag softwar develop project experi show accur estim difficult averag error may consid good averag error outstand vicinanza mukhopadhyay prietula method estim effort requir estim size softwar size estim avail model use relat size effort cost estim onetim activ project initi estim refin continu throughout project demarco thu necessari estim size repeatedli throughout develop giuliano antoniol et al accur estim size vital unfortun prove difficult especi earli develop estim use research estim size dealt tradit applic tradit softwar develop practic method propos object orient softwar develop paper present method estim size object orient softwar develop project base adapt classic function point method object orient softwar follow section present approach measur explain map concept function point object orient softwar describ process count object orient function point oofp give exampl result pilot studi present discuss measur perspect figur show main phase object orient oo develop process measur obtain differ point develop purpos measur give project manag someth estim size effort durat project estim revis new artifact becom avail develop oo analysi oo design system requir definit implement user design custom figur perspect measur softwar develop process move phase process measur perspect chang user design end requir specif phase classic function point count method appli requir doc ument function point method take perspect end user actual measur function system maintex v p function pointlik measur objectori softwar visibl end user measur gener consid independ particular implement aspect system eg graphic user interfac includ classic function point count nevertheless contribut final size system object measur function estim size implement sy tem effort durat softwar project aspect taken account chang perspect user custom ie organ acquir system accept pay develop cost system design produc implement given specif object orient model begin ie oo analysi phase on measur obtain object model oofp use place fp develop proce give natur shift perspect oo analysi phase element object model still relat applic domain perspect still user oo design later phase object model reflect implement choic includ aspect system specifi requir document count oofp model thu includ function measur perspect design differ size estim model develop differ stage develop detail inform avail system evolv abstract specif concret implement possibl refin size estim repeatedli long estim process difficult sinc develop tool autom count oofp recalcul easi time object orient function point practition found function point albrecht gaffney ifpug use within data process domain invent aim exploit experi obtain function point tradit softwar develop oo paradigm adapt function point oo need map function point concept object orient concept must decid handl oospecif concept inherit polymorph giuliano antoniol et al present use notat omt method rumbaugh blaha premerlani eddi lorensen would much differ booch notat booch unifi model languag ration softwar corpor b use instead sinc main model view differ methodolog carri similar inform omt method use three differ orthogon view describ softwar system object model static represent class object system relationship function model data flow diagram provid function decomposit activ system dynam model state machin repres dynam control aspect system although three model provid import inform objectori system object model import purpos usual first develop measur earliest one repres actual built sens model help complet object model function model help identifi design method control model help identifi attribut need maintain state inform event must implement class method is howev ongo discuss practition commun content role model function model seem fallen disus requir methodolog ration softwar corpor b dynam model often replac list use case scenario object model one present methodolog describ system use specif objectori concept reason decid restrict attent object model tradit develop central concept use count function point logic file transact oper file oo system core concept longer relat file data base instead central concept object central analog use map function point oo softwar relat logic file transact class method logic file function point approach collect relat user identifi data class object model encapsul collect data item class natur candid map logic file maintex v p function pointlik measur objectori softwar oo paradigm object instanc class oo world correspond record logic file data process applic fp method logic file lf divid intern logic file ilf extern interfac file eif intern file logic file maintain applic extern file referenc applic maintain applica tion divis clearli identifi applic boundari oo counterpart applic boundari imaginari line object model divid class belong applic class outsid applic extern class encapsul nonsystem compon applic extern servic reus librari class both directli instanti subclass parameter class class within applic boundari correspond ilf class outsid applic boundari correspond eif transact fp method classifi input output inquiri categor easili applic outsid data process domain oo paradigm locu oper class method usual finegrain level transact sinc object model rare contain inform need tell whether method perform input output deal enquiri attempt distinguish three categori simpli treat gener servic request sr issu object object deleg oper short map logic file class transact method issu inherit polymorph affect structur object model model count address section relat work author propos method adapt function point object orient softwar gener map class file servic messag transact whitmir consid class intern file messag sent across system boundari treat transact schoon eveldt hast mocek fountain treat class file consid servic deliv object client transact method give similar count tradit function point one system draft propos intern function point user group ifpug treat class file method transact giuliano antoniol et al fetck abran nguyen defin rule map use case model jacobson christerson jonsson overgaard concept ifpug count practic manual ifpug three case studi confirm rule appli consi tentli attempt made relat result metric tradit function point line code effort sneed propos object point measur size oo soft ware object point deriv class structur messag process use case weight complex adjust factor closest analogu method predict object point pop propos minkiewicz pop base count class weight method per class adjust averag depth inherit tree averag number children per class method weight consid type con structor destructor modifi selector iter complex low averag high give number pop way analog tradit fp pop incorpor commerci tool project estim work differ minkiewicz sever way two respect consid inform count data class well method consid aggreg inherit detail instead averag consid less inform count method sinc distinguish method type inform method type seldom avail design stage automat tool would need gather inform design might tediou task larg system reason attempt base method complex weight method type instead tri exploit inform method signatur like present design least detail design stage key thing new method flexibl much scope experiment exampl fetck et al defin aggreg inherit handl particular way discuss section defin sever option one fetck approach leav user choos written program count oofp automat sever paramet govern count decis organ experi determin paramet set produc accur predictor size environ thu method tailor differ organ environ moreov measur affect subject rate complex factor like introduc classic function point analysi function pointlik measur objectori softwar measur process oofp assum function object given object model d might produc design stage extract sourc code oofp calcul as where welf det denot set object belong applic gener object d det ret ftr elementari measur calcul lf sr use determin complex complex matric w detail given section figur show phase oofp comput process object model analyz identifi unit count logic file four way might done use paramet count process step describ section complex logic file servic request deter mine w tabl use map count structur item det ret ftr complex level low averag high tabl vari repres anoth paramet count process step describ section complex valu translat number use anoth tabl number oofp valu individu logic file tabl use also vari yet anoth paramet count process giuliano antoniol et al logic file class annot reus ie develop reus anoth class oofp valu multipli scale factor less scale factor anoth paramet count process step discuss section oofp valu sum produc total oofp valu det ret det ftr det ret oofp oofp oofp ilf lah lah lah gb modul oo design figur oofp comput process identifi logic file conceptu class map logic file may alway appropri count class simpli singl logic file howev relationship class aggreg gener special particular sometim make appropri count group class togeth logic file aggreg inherit relationship pertain mostli implement aspect intern organ reus tend analysi object model may mani design implement model wholepart assembl inherit hierarchi identifi relationship affect boundari around logic file depend perspect chosen artifact oof ps comput analysi phase user perspect import one earli take design point view stage class object model repres entiti applic user domain aggreg inherit relationship complic thing count singl class logic file usual appropri stage origin class matter scale factor use step count process shouild set class count full inher valu function pointlik measur objectori softwar design phase object model contain much inform relat implement design perspect consid singl class logic file correct choic design implement point view reus make class easier develop oofp count intend help predict effort durat need build system scale factor less use step count process count design object model user perspect complic count actual perceiv user system origin abstract present requir analysi model recov implement detail affect count might longer strict map singl class logic file collect class may sometim need count togeth singl logic file may mani differ way identifi logic file consid four defin differ choic deal aggreg gener special relationship singl class count separ class logic file regardless aggreg inherit relationship aggreg count entir aggreg structur singl logic file recurs join lower level aggreg generalizationspeci given inherit hierarchi consid differ logic file collect class compris entir path root superclass leaf subclass ie inherit hierarchi merg leav hierarchi mix combin option insert initi delet topofpil bottomofpil locat visibl collect card rank display discard card deck shuffl deal hand initi state draw pile draw discard pile draw figur singl class ilf insert initi delet topofpil bottomofpil locat visibl collect card rank display discard card deck shuffl deal hand initi state draw pile draw discard pile draw figur aggreg ilf insert initi delet topofpil bottomofpil locat visibl collect card rank display discard card deck shuffl deal hand initi state draw pile draw discard pile draw figur generalizationspeci ilf exampl figur show differ count boundari result four strategi sampl object model aggreg merg decreas number class object model collectionofcard merg card result logic file contain data member method two class generalizationspeci merg project superclass collectionofcard onto subclass reduc number logic file final combin aggreg gener alizationspeci merg first aggreg collectionofcard card project result onto subclass collectionofcard result logic file conceptu make sens merg superclass subclass oofp count seem right count leaf class full inherit structur sinc instanti the nonleaf class hierarchi usual instanti creat subsequ reus deriv subclass exploit polymorph also two class link gener special relationship intuit less complex two separ class subclass repres refin superclass model drawn rumbaugh et al function pointlik measur objectori softwar insert initi delet topofpil bottomofpil locat visibl collect card rank display discard card hand initi state draw pile draw discard pile draw deck shuffl deal figur mix ilf associ may present problem nonleaf class inherit hierarchi particip associ replic superclass associ subclass would increas artifici number associ fact origin superclass associ contribut complex superclass code implement onc merg aggreg singl entiti oofp count seem less intuit object form aggreg separ object exist independ method data member runtim differ object instanti class aggreg howev argu divid useridentifi class aggreg subclass implement choic point view end user function point measur philosophi oofp valu affect perspec tive aggreg structur merg singl class count singl logic file whether right merg aggreg seem depend whether user design perspect chosen hybrid solut adopt treatment aggreg consid paramet oofp count process three option identifi choic left measur merg aggreg merg aggreg flag design aggreg consid uniqu entiti must merg logic file consid ilfeif vari accord particular ilfeif identif strategi use merg aggreg gener giuliano antoniol et al izat gener ilf eif correspond set class design call composit ilf eif distinguish consist singl class call simpl ilfeif necessari comput number det data element type ret record element type rule detret comput slightli differ simpl composit ilf eif case one ret associ ilfeif repres user recogniz group logic relat data ifpug det ret ilf eif count tabl use classifi ilfeif low averag high complex base tabl given ifpug count practic manual releas ifpug simpl ilfseif simpl attribut integ string consid det sinc uniqu user recogniz nonrecurs field ilf eif ifpug complex attribut oo paradigm attribut whose type class thi model analog complex attribut ret ie a user recogniz subgroup data element within ilf eif ifpug refer anoth class associ need count well sinc contribut functionalitycomplex object associ usual implement data member referenc associ object refer use method invok associ object servic associ count det ret accord car dinal singlevalu associ consid det ifpug suggest count det piec data exist user requir relationship anoth ilf eif maintain multiplevalu associ consid ret entir group refer object maintain one attribut aggreg special case associ simpl ilf eif treat normal associ composit ilfseif det ret count class within composit sum give overal total composit ilfeif det ret count use rule simpl ilf eif except aggreg aggreg dealt special way composit ilfeif repres subgroup function pointlik measur objectori softwar one ret count aggreg whatev cardin ret assign contain class practic valu det ret ilfeif comput count det ret compon class thi trivial simpl ilfeif ad servic request servic request method class system examin abstract method count concret method count in class declar even inherit sever subclass code onc method count data type referenc classifi simpl item analog det tradit function point simpl data item referenc argument method simpl global variabl referenc method item analog file type referenc ftr tradit function point complex argument object complex global variabl referenc method sever approach possibl distinguish complex item simpl one exampl compil builtin type might consid simpl type complex choic might appropri sinc userdefin type would count com plex even scalar type alias builtin type anoth approach regard complex item one whose type class refer anoth class approach use here det ftr method count tabl use classifi method low averag high com plexiti base tabl given ifpug count practic manual releas ifpug extern input queri time signatur method provid inform det ftr sometim especi earli on even known case method assum averag complex count rule defin make detret addit except aggreg relat handl differ simpl composit ilf howev practic contribut aggreg composit ilf correspond consid one ret class involv aggreg structur becom equival sum ret compon class separ giuliano antoniol et al allow reus earli count main aim captur userori func tional scale factor use step count process set user care class come from class count full inher valu design implement point view reus make class easier develop later count oofp count may intend help predict effort durat need build system scale factor less would appropri exampl figur show four differ way class object model might merg accord four differ lf identif strategi use show oofp comput variant servic request servic request method count immedi sinc count anyway matter class aggreg logic file signatur unknown method exampl method assum averag complex receiv four oofp score averag servic request concret method model servic request contribut theta oofp logic file count procedur individu class give det ret shown figur class card three det two due two data item one due manytoon associ collectionofcard one ret sinc class collect relat data item collectionofcard two det due two data item one ret due onetomani aggreg card one ret structur class one ret mani det data item depend ilf identif strategi use four differ ilf variant variant merg class togeth differ way result differ total det ret count tabl show result appli ifpug complex tabl variant valu low rate oofp accord ifpug tabl function pointlik measur objectori softwar insert initi delet topofpil bottomofpil locat visibl collect card rank display discard card deck shuffl deal hand initi state draw pile draw discard pile draw figur detret comput lf exampl system tabl i ilf sr complex contribut s collect card low low card low low deck low low low low hand low low low low discard pile low low low low draw pile low low low low sr oofp total oofp highest oofp count come class count singl ilf variant effect reduc oofp valu reduc number ilf although increas det ret merg ilf enough rais ilf complex higher valu tool count oofp process comput oofp autom shown figur object model produc case tool translat intermedi represent intermedi represent pars giuliano antoniol et al oofp translat toolaol tool tool output ast aol parser aol specif oofp count rule oofp counter omtstp ration rose stp output petal output omtstpaol translat translat petalaol figur oofp comput process produc abstract syntax tree ast oofp count process appli order independ specif case tool use intermedi languag call abstract object languag aol devis languag generalpurpos design descript languag capabl express concept avail design stage object orient softwar develop languag base unifi model languag ration softwar corpor b superset omt notat becom standard object orient design sinc uml visual descript languag limit textual specif design scratch mani part languag remain adher uml textual specif avail figur show excerpt aol descript object model depict figur output specif case tool use translat automat equival aol specif one translat impl ment convert output omtstp interact develop environ aol specif translat maintex v p function pointlik measur objectori softwar class deck oper class hand attribut oper aggreg contain class collectionofcard mult one part class card mult mani gener collectionofcard subclass deck hand discardpil drawpil figur excerpt aol specif exampl object model could implement case tool ration rose ration softwar corpor a fulli support uml repres output use languag call petal aol specif pars aol parser produc ast repres object model parser also resolv refer identifi perform simpl consist check eg name referenc associ defin oofp counter implement oofp count rule describ section oofp counter differ measur count tool instead assum specif count strategi allow one sever strategi chosen make suitabl experiment tool flexibl parameteriz respect rule use count process aol parser oofp counter implement refin reason system lexyacc pilot studi describ methodolog appli industri environ produc softwar telecommun first studi relationship oofp measur system final maintex v p giuliano antoniol et al size line code loc measur number nonblank line includ comment eight subsystem complet applic measur eight system chosen studi develop poepl environ use languag c design document final sourc code avail abl measur design characterist taken design document revers engin sourc code tabl ii show number variou design element system tabl iii show size system spread line code tabl iii also show oofp count system use four differ strategi identifi logic file tabl ii design characterist atr attribut aggreg es system atr ope ass agg inh cl four oofp seri strongli correl other lowest pearson correl singl class s mix m strategi correl rang shown tabl iii differ method becom appreci project larg loc valu high correl four oofp seri suggest essenti linear transform other case chang strategi identifi logic file might make much differ accuraci size estim model model evalu leaveoneout crossvalid procedur stone use measur model perform model train function pointlik measur objectori softwar tabl iii system size oofp system loc g f g data set l sampl size current test withheld datum step repeat point l accuraci measur averag n method give unbias estim futur perform new data enabl quit differ model compar directli model error estim crossvalid version normal mean squar error nmse mean squar error normal varianc sampl regress base least squar minim assum distribut error gaussian statist test skew kurtosi caus hypothesi normal reject five distribut loc four oofp valu given small size data set clear distribut realli normal least squar approach sensit outlier data point far remov data point data minim squar deviat outlier almost much influenc regress result point combin standard boxand whisker plot identifi system outlier although system h right edg consid outlier impact influenti point lessen reduc weight given larg residu exampl minim sum absolut residu rather sum squar residu thu anoth measur error base absolut valu also giuliano antoniol et al consid check inconsist due possibl influenti outlier point measur normalis mean absolut error nmae jy k gammam j mean median observ valu sampl l avail crossvalid estim standard error oe residu rsquar r fit also comput even crossvalid care need interpret result small sampl mean observ must regard indic rather conclus model consid sever regress techniqu consid model relationship loc oofp predictor loc base direct indic oo size number class method design consid comparison first linear model lm tabl iv base minim sum squar residu develop lf select method least absolut deviat base l error also appli ls tabl iv method minim sum absolut valu residu reduc effect larg error valu robust regress techniqu also investig handl nonobvi outlier famili mestim see appendix consid rreg rlm tabl iv basic idea msmoother control influenc outlier use nonquadrat local loss function give less weight extrem observ exampl smoother andrew bisquar fair hampel huber logist venabl ripley correspond differ weight function final multivari linear model develop predict loc directli number oo design element shown tabl ii result tabl iv show model parameter lf select method type regressor model coeffici b b indic comput full data set estim model error nmse nmae shown model estim rsquar measur also includ linear model point concern whether intercept term b includ model reason suppos exist support code maintex v p function pointlik measur objectori softwar tabl iv model perform linear regressor lm ls robust method rreg rlm method lma rrega directli relat function count predict improv term howev intercept term signific nonpredict fit data importantli fact intercept term alway larger smallest system might indic poor fit small oofp valu would interest appli bayesian procedur select intercept given prior result summar tabl iv encourag exampl lmg model nmse mean squar error varianc less half sampl varianc anoth point view model base oofp count use gener strategi achiev cross valid averag error good best model tabl iv rregg investig rregg done result shown tabl v best predict accuraci nmse achiev rreglogisticg model tune paramet correspond maintex v p giuliano antoniol et al tabl v model perform differ weight function mestim rreg gener select method method nmse comment rregfairg converg step linear predictor thi model close basic linear model lmg whose equat tabl iv suggest data set gener strategi consist best proven statist though nonparametr bootstrap approach efron tibshirani use assess model null hypothesi differ error lm lmg model cannot reject similar result obtain model thu clear count strategi prefer other comparison multivari linear model develop predict loc directli number oo design element shown tabl ii poorer result obtain model exampl model base class method model base oofp perform much better pilot studi conduct specif project environ ment specif organ result encourag size estim context issu extern valid must address extens studi target multipl organ differ project taken first step empir investig need done function pointlik measur objectori softwar discuss result seen tabl i complex lf alway determin low even sever class merg togeth true servic request tabl use determin complex base ifpug count practic manual ifpug quit larg number ret det need reach averag high complex for exampl obtain averag complex weight lf need det valu ret valu due data process origin function point method seem appli well kind system therefor complex tabl recalibr provid discrimin implicit assumpt use tabl complex class henc size implement effort requir implement it increas number complex attribut increas similarli complex method and henc size develop effort assum implicitli increas number complex paramet increas whether assumpt true need determin experiment assumpt seem reason class whole perhap method work transact tradit function point may work method object model transact tend much coars grain method analysi design stage often inform method signatur turn unrel complex size noth go count oofp one possibl would permit design annot method complex rate would introduc subject element process howev want avoid anoth approach would simpli count method make attempt classifi complex promis approach would take advantag inform avail use case scenario deriv complex rate method data avail us far seem recalibr oofp tabl logic file might improv accuraci oofp predictor size recalibr tabl method might not experiment need topic data system order support experiment tool use assumpt fairli common underli philosophi classic function point method also featur design metric work card glass giuliano antoniol et al count oofp design consid tabl entri paramet modifi time pilot studi suggest organ reason prefer four strategi indentifi lf other organ may find differ although organ best size predict appear obtain gener strategi superior proven statist may accid data modifi complex tabl might make differ determin best strategi select lf count scheme chosen import appli consist consist count straightforward us sinc tool use autom process conclus present method estim size object orient softwar method base adapt function point appli object model propos method take full advantag inform contain object model elimin ambigu tradit function point method parameter order take account close characterist specif design environ particular problem defin map fp concept oo concept describ count process tool develop autom process preliminari result pilot studi industri environ report result pilot studi show promis size estim import sinc estim size need mani effort estim model summari shown appli concept function point object orient softwar result accur use industri environ futur work take sever direct one investig effect recalibr complex tabl relationship beyond oofp code size studi oofp tradit fp oofp versu effort particular interest anoth avenu consid impact use design pattern gamma helm johnson vlissid structur within object model may lead strategi identifi logic ilf function pointlik measur objectori softwar acknowledg thank refere construct comment research fund sodalia spa trento itali contract n sodalia istituto trentino di cultura trento itali work undertaken g caldiera c lokan experiment softwar engin group univers maryland g antoniol itcirst istituto per la ricerca scientifica e tecnologica i povo trento itali r softwar function measur softwar design qualiti control softwar project introduct bootstrap map oojacobson approach function point analysi design pattern element reusabl object orient softwar appli nonparametr regress softwar pictur manual estim size objectori softwar measur objectori softwar predict object point unifi model languag reason system measur size objectori system estim cost objectori softwar modern appli statist splu appli function point object orient softwar tr ctr maurizio morisio daniel romano ioanni stamelo qualiti product learn frameworkbas develop exploratori case studi ieee transact softwar engin v n p septemb marjan heriko ivan rozman ale ivkovi formal represent function size measur method journal system softwar v n p septemb gennaro costagliola filomena ferrucci genoveffa tortora giuliana vitiello class point approach size estim objectori system ieee transact softwar engin v n p januari g antoniol r fiutem c lokan objectori function point empir valid empir softwar engin v n p septemb