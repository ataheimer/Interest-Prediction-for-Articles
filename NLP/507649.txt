t gener valid structur content parametr modul a demonstr natur map xml element type ml modul express map induct definit common xml oper deriv modul express compos show deriv gener way valid function check xml document conform dtd document type definit one view valid assign ml type xml element valid procedur prerequisit type xml program ml map use parametr modul facil ml contriv way exampl valid wml wap markup languag document need use ari type constructor well higherord modul take mani modul input one systemat model xml dtd modul level suggest mllike languag suitabl typesaf prototyp dtdawar xml applic b introduct motiv xml extens markup languag languag tag document structur content xml document tag tree nest element xml extens xml document includ dtd doc ument type list tag element specifi tag constraint central concept document process valid xml document valid content tag constraint specifi submit intern confer function pro gram avail technic report trii institut inform scienc academia sinica taipei taiwan httpwwwiissinicaedutw comment suggest welcom dtd xml document wellform element enclos match starttag endtag wellform xml document necessarili valid follow xml document contain dtd defin two element type folder record document contain root folder element empti record element child valid xml document xml version folderfolderrecord element record empti dtd xml document model structur record must contain element folder empti contain anoth folder one may think model tidi bookmark file follow three element f valid item f f not note record shorthand recordrecord tag sequenc recordfolderrecordfold exampl notwellformed simplifi discuss may say element type dtd specifi element content model ie tag constraint unambigu regular express element type name symbol content model element type specifi element sequenc allow children element natur code xml program one need map element type dtd correspond data type sourc program languag requir map content valid translat type correct program languag welltyp program alway produc valid xml element note goe beyond requir socal valid xml processor need report violat element content model input xml document need impos restrict output sever direct program languag support write xml applic classifi follow three categori adt wellform element abstract data type accompani librari routin design travers transform wellform xml element xml data assum valid separ phase valid separ issu may even requir exampl categori includ standard xml api c java languag eg document object model dom combin approach write xml process function program type translat dtd strongli type languag use xml program type system languag use emb dtd embed complet everi element type correspond data type embed languag sound an express embed languag evalu valid xml element express welltyp languag exampl categori includ haxml xmlambda strongli type languag static type sound proof done type checker compil time henc typecorrect program produc invalid xml element one also use constraintbas languag logic program languag encod content model similar way type translat approach complet satisfactori two reason one type translat may systemat tediou done manual inconveni code gener xml process oper need rewritten everi dtd translat differ type xml content valid check wellform xml document conform dtd gener oper nativ languag support dtd new languag design builtin xml support help build xmlrelat applic xduce function languag regular express type allow direct represent dtd process valid element express languag evalu valid xml element variabl must annot element type concept valid built languag type correct ness program typecheck compiletim xduce also provid regular express pattern help write concis xml program xduce howev current firstord monomorph languag lack languag featur eg modul system paper show use parametr modul mllike languag write xmlsupport program modul express gener express xml dtd construct provid parametr modul gener common oper includ valid function automat gener such approach advantag type translat approach nativ dtd support approach without disadvantag need recod gener oper need design new languag illustr exampl tidi bookmark exampl describ section follow actual code write object caml specifi dtd produc valid function two element type dtd modul struct type x record x let map f modul struct modul modul modul tag bookmarktag modul abov modul tidysi contain two modul f f translat word word object caml modul languag xml element type declar folder record higherord modul alt seq star plu ideal would like defin two xml element type two mutual recurs ml modul follow modul object caml mllike languag support recurs modul instead use two place holder modul p p two paramet higherord modul alt seq etc use anoth higherord modul mu pronounc deriv two simultan fix point modul tidydtd contain ffl modul u defin type wellform element ffl modul v contain modul defin type valid folder record element ffl function valid forget provid map wellform element valid element also defin except invalid may rais function valid note follow equat alway hold forget valid sampl element f shown section defin valid follow object caml code f u wellform f v addit valid element return valid function pars type sens substructur given specif type extract use ml patternmatch paper use exampl explain idea describ construct howev idea construct systemat appli dtd element type one need defin nari fix point modul mun take system n nari higherord modul f f produc simultan fix point definit mun symmetr similar mu later use wml a markup languag wireless applic whose dtd defin element type benchmark exampl show effect approach genericprogrammingwithpara xml element type folder exampl translat object caml use seri type definit shown below type a b alt l a r b type a b list type a plu one a a a plu folder record folder record alt star seq folder folder record alt plu seq alt one abstract righthandsid type equat folder record two binari type constructor f f view folder record least fix point f f function folder record syntact sugar defin let folder ulist bookmarktagfold tidydtduup ulist let record ulist bookmarktagrecord tidydtduup ulist type a b a a b alt plu seq alt type a b folder folder record f record record folder record f one rewrit f f use two project function p p empti type constructor type a b type a b type abp abp abp alt star seq type point clear one program modul level defin f f two modul express use predefin set constant modul for p p empti unari parametr modul for star plu binari parametr modul for alt seq shown figur also defin map function induct xml element type defin use fix set parametr modul may say modul f f object functor categori object type constructor map type type function map map type function type function parametr modul like plu arrow functor categori ie natur transform view definit map function gener one map instanc induct index govern type express later show definit gener valu use definit valid function which gener well parametriccontentmodelsand simultan fix point figur modul f f defin binari type constructor t two type constructor use togeth mutual defin type folder record code reproduc below modul f modul f folder folder record ft record record folder record ft type constructor ft ft parametr content model sens map tupl type instanc content model exampl given type instanc folder record type express folder record ft expand record folder record alt star seq modul type sig type a b val map a x b y modul type modul type modul empti struct type a b let map f g modul p struct type a b let map f g modul plu struct type a b one a b ft a b ft a b let rec map f g match one one fmap f g s v w modul struct type a b let map f g u fmap f g v modul p modul star modul alt modul f modul f folder folder record ft record record folder record ft figur induct definit xml element type use parametr modul note modul type annot be often are omit ted w take ff part modul plu time expos implement modul plu annot ad clariti typecheck purpos folder folder record alt plu seq alt exactli xml content model element type folder main idea use type constructor parametr content model view xml element type simultan fix point set parametr content model viewpoint help us develop primit function abstract applic differ content model that is primit polymorph one primit simultan induct oper fold function later show valid procedur defin use fold function model two recurs defin xml element type two interdepend ml modul t signatur follow modul t sig type x x cm val up tt tt cm tt val tt tt tt cm modul t sig type x x cm val up tt tt cm tt val tt tt tt cm abov type constructor x x cm parametr content model type element type function map element content model togeth defin equival note mutual defin signatur allow object caml as mllike languag howev one use auxiliari type name addit type share constraint overcom problem defin higherord modul muvalid deriv modul t given modul specifi correspond parametr content model tag set see figur figur modul f f input modul specifi parametr content model modul tag specifi tag set note that modul return muvalid type valid element simpli defin disjoint sum type tt type tt also note simultan fold function type val fold a b tcm a tt a tt b function fold return two reduct function whose type tt a tt b given two properli type induct function base whose type a b tcm a a b tcm b similarli higherord modul muwf defin deriv modul wellform element see figur modul muwf type constructor x x cm parametr content model wellform element defin list tag valu list type u type wellform element defin fix point parametr content model cm type note well type wellform element type t defin disjoint sum u u repres element two distinct tag definit simultan fold function modul muvalid figur sever function modul uv vu given type left undefin use specifi function valid forget function valid map wellform element valid ele ment forget invers function let us look function cm cm modul uv first type follow val cm vtt vtt ucm vtt vtt vtcm val cm vtt vtt ucm vtt vtt vtcm function cm map wellform content whose constitut part valid element alreadi valid content function cm compos function vtup one get function return valid element type vtt result we use function composit oper given two function induct base simultan fold function one deriv valid function element type vtt vtt modul type sig type x x val map x y x y modul type sig modul f fun modul f fun modul tag tag modul struct modul tag stag modul struct let let v modul struct let let v let fold f let rec tdown tdown figur modul muvalid deriv element type simultan fix point set parametr content model modul struct modul list let map type let u let fold f let rec down down modul struct modul modul modul except invalid modul struct let cm vtt vtt ucm vtt let cm vtt vtt ucm vtt let t t uu vtt uu ufold vtup let t ut modul struct let cm uu uu vtcm let cm uu uu vtcm let t t vtt uu vtt vfold uup let t vt figur modul muwf deriv type wellform element modul mu use simultan fold defin valid function note type annot function ad clariti purpos ufold vtup recal type wellform element valid element defin follow valid function defin ufold vtup shown figur one defin function forget similar way remain shown function like cm cm defin content model shown next gener valid content model recal that figur map function defin gener way modul signatur fun long modul gener predefin set parametr modul empti p p star etc vaildat forget function defin gener way well first defin valid function induct base valid function content model deriv automat modul express content built two remain detail first time build content model one access tag modul tag modul signatur tag defin variant data type tag element eg modul bookmarktag section therefor valid forget function must resid higherord modul take tag modul input one need also maintain nullabl condit first set element tag content model nullabl accept empti element sequenc first set contain tag appear first posit valid sequenc use check content model ambigu eg first set two input modul alt overlap combin lookahead tag use implement nonbacktrack valid procedur well more section nullabl first gener valu modul signatur fun parametr content model consist follow compon modul type sig type x x val map x y x y val nullabl bool val first natsett modul content functor t tag sig val valid x x tt list val forget x x x x tt list function valid take list tag valu turn valu content model follow remain list note type input x x tt list content model wellform element two share tag set figur illustr construct show implement modul p star valid forget function wrap modul content definit content induct depend content modul input modul f see eg modul express modul star view constitut gener definit valid function instanc systemat gener modul express evid modul star adapt longest prefix match rule valid input element sequenc content model longest prefix match rule inde requir xml valid function modul ie empti p p plu seq alt similarli defin omit here return figur complet defint function cm cm modul uv vu defin follow modul struct modul let cm ulist match cmvalid ulist v v rais invalid modul struct modul function cm modul uv need valid input sequenc tag valu content model element type vtt use current tag set accomplish use valid function modul sysfcontentsystag differ that remain nonempti sequenc valid longest prefix entir sequenc valid respect content model vtt modul p struct type x natsetoflist modul content functor t tag struct let valid ulist match ulist tfold fun x x t fun x success return untag valu along rema list otherwis return none let forget tx a tag first variant type tt modul star struct type x ffirst modul content functor t tag struct modul let rec valid ulist match ulist ulist h first match cmvalid ulist u t match valid us s uu s els ulist let rec forget match figur gener definit content valid function typefulxmlprogramminginml one purpos valid assign type xml element program valid xml element program type valu use static type langaug program allow one detect type error henc express invalid element compil time gener valid procedur give type valid ele ment allow one construct xml processor type way follow illustr diagram let u ml type wellform element v v ml type correspond specif xml element type u valid f forgetw may say function u u untyp may produc invalid element howev function type alway output valid element whenev one program function expect output also valid one program figur show ml code fragment illustr approach code map wellform tidi bookmark wellform flat bookmark function tidyflat u map compos type convers routin function tidyflat v alway output valid element input element valid note type function infer ml function annot type figur clariti purpos onli comb gener poli morphism gener model xml dtd combin type polymorph better result inde use gener polymorph model xml element type declar accompani attributelist declar extend previou folder exampl requir option subject attribut folder element pair titl url attribut record element follow valid xml document newli extend dtd xml version folderfolderrecord element record empti subject attlist record titl modul modul struct modul modul modul tag tag modul modul modul modul modul modul let tffolder fun fd match fd case flat record r follow sequenc flat record folder case flat folder f follow nonempti sequenc flat record folder let tfrecord let flattenv tidyfoldert tidyrecordt tagt tagmap tidydtdvfold flatrecordup let flattenu tidydtdut flatdtdforget figur exampl type xml program note type annot function ad clariti purpos url folder subjectresearch institut record titleacademia sinica urlhttpwwwsinicaedutw origin definit folder record figur last two line folder folder record ft record record folder record ft replac follow type u v folder u v record record v u vfolder u vrecord ft string option string abov attribut declar model type level lift model level need further more gener definit valid function modifi accordingli accommod valid check attribut format valu xml content valid xml requir content model element type declar determinist bruggemannklein wood clarifi requir mean unambigu regular express unambigu sequenc symbol recogn determinist onesymbol lookahead correspond nondeterminist finitest machin exampl content model b cb d unambigu given initi b one cannot know b model match without look ahead see follow b howev equival content model bcd unambigu use nullabl predic first set check whether content model specifi modul express unambigu check perform modul elabor time ambigu content model detect except rais soon possibl content model may also contain epsilon ambigu allow xml demand addit work valid exampl epsilon ambigu ab empti sequenc deriv a b besid element content model ie regular express element type name xml element type may use content specif exampl element type may empti specif mix content specifi cation specif impos addit difficulti definit gener valid function specif mean sequenc child element may contain element declar element type includ text order mix content specif allow text data interspers element prescrib type one may think special case mix content one view text data denot pars charact data mix content specif element enclos within pair implicit text starttag text endtag pcdata modul similar empti modul alreadi have defin help induct definit mix content specif ex ampl dtd element type one defin modul follow use ari altern modul alt modul ani experi larger dtd wml markup languag wap applic dtd consist element type definit appli gener approach valid wml document order so need produc ml modul includ oper upon ari type constructor element type plu pcdata also need construct higherord modul take mani modul input one element type definit need ari alt mod ule experi quit satisfactori code compil without problem object caml compil time neglig about min desktop workstat valid time neglig how ever least smallish exampl tri around element work larger dtd document collect perform data size ml sourc code quit larg howev take follow ml modul express exampl modul one need ari modul seq construct requir content model specifi sequenc element differ element type code modul seq look like follow modul struct type x x x x x x ft x x x ft clear that dtd n element type sourc modul seq code size omn worst case dtd length n code need on uniqu type variabl contain type share constraint length on overal code size on sourc code necessari ml modul element wml dtd size mb compil produc binari size kb cmo file object caml interfac size mb cmi file object caml ml code wap exampl access follow url httpwwwiissinicaedutwtrcxdotmlhtml one connect compon analysi dtd set element type partit disjoint subset typedepend sub set subset k element type need use kari type constructor overal code size modul use subset reduc relat work conclus section introduc previou work use exist new function languag model program xml dtd wealth research system work relat xml content model necessarili perspect function program languag list here bruggemannklein wood address problem ambigu xml and sgml content model base theori regular languag finit automata particu lar show linear time suffic decid whether content model ambigu show regular express star normal form epsilon normal alway unambigu glushkov automaton correspond regular express use check ambigu and unambigu valid well murata propos data model xml document transform base forestregular languag theori model lightweight altern xml schema provid framework schema tran format also work type model document transform structur edit system use data type howev none work use specif program languag model languag xml schema matur specif languag xml content develop world wide web consortium xml schema express dtd specif languag use xml syntax differ xml schema dtd seem xml schema abil deriv new type extend restrict content model exist type xml schema also provid substitut group mechan allow element substitut element investig whether mllike modul languag express enough model mechan backhous jansson jeur meerten written detail introduct gener program see also introduct foldunfold meijer fokkinga paterson well work use foldunfold structur reason program semant hutton extens simpl fold simultan fold seem new work gener program function program research commun seem reli mechan type class deriv typespecif instanc gener function languag choic often haskel shown paper parametr modul mechan mllike languag suitabl gener program well fact think parametr modul allow one take finer control induct deriv gener valu power modul system develop allow mutual recurs modul well modul depend valu type see eg russo howev show lack recurs modul need problem long mutual depend modul interdepend type definit view context work thought use ml modul facil gener determinist automata special valid element specif dtd valid automata also give type element and part addit construct valid automata entir gener au tomat work also serv usag case ml parametr modul use stress test current ml implement delight see contriv code ari type constructor ari higherord modul compil execut problem object caml r xml schema part primer type model document transform structur edit system gener program introduct ann brugemannklein derick wood ann bruggemannklein xduce type xml process languag regular express type xml fold unfold program semant function program banana transform document schema pattern contextu condit data model document transform assembl haskel xml gener combin typebas translat proceedingsin proceed intern confer function programmingproceed logic program approach support entri xml document object databas tr function program banana lens envelop barb wire regular express finit automata oneunambigu regular languag underappreci unfold fold unfold program semant haskel xml regular express type xml recurs structur standard ml logic program approach support entri xml document object databas outofcor function program typebas primit transform document schema pattern contextu condit xduce algebra xml queri data model document transform assembl ctr tyngruey chuang janli lin modular transform structur content proceed acm symposium document engin octob milwauke wisconsin usa