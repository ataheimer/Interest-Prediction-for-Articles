t analysi bound time warp comparison yawn a articl studi analyt model parallel discreteev simul compar yawn conserv synchron protocol bound time warp assum simul problem heavili load queu network probabl idl server close zero model workload job rout standard way develop valid method comput approxim perform measur function degre optim allow overhead cost statesav rollback barrier synchron workload aggreg find bound time warp superior number server per physic processor low ie spars load aggreg workload improv yawn rel perform b introduct discreteev simul model physic system literatur parallel discreteev simul pde usual view physic system set commun physic process repres simul logic process lp lp commun timestamp messag reflect chang system state timestamp reflect instant state chang occur physic process model parallel discret event simul pose difficult synchron problem due underli sens logic time lp maintain logic clock repres time correspond physic process simul fundament problem determin lp may execut known futur event advanc logic clock lp advanc logic clock far ahead lp system may receiv messag timestamp logic past call straggler threat straggler dealt save simul state period roll back appropri straggler arriv messag sent time ahead straggler timestamp must undon fundament problem pde review misra fujimoto righter walrand nicol fujimoto nicol fujimoto give current stateoftheart review pde synchron protocol fall two basic categori although detail taxonomi given reynold conserv protocol eg chandi misra bryant peacock et al lubachevski chandi sherman nicol a allow lp process event timestamp one unabl assert receiv anoth event timestamp less point futur optimist protocol eg time warp jefferson allow lp process event known certain lp later need process event earlier timestamp causal error correct rollback mechan earliest synchron protocol asynchronousan lp synchron sole basi interact lp directli commun recent synchron protocol attract interest detail vari d nicol p reynold jm duva basic idea incorpor barrier synchron global reduct function futur simul time exampl includ move time window sokol et al conserv time window ayani raja condit event chandi sherman bound lag lubachevski synchron relax eick et al bound time warp turner xu breath time bucket steinman yawn nicol a advantag conserv protocol synchron inform move quickli system lower overhead cost effici usual come price pessimist synchron eg lp may block threat receiv messag time t wherea threaten messag actual lp b lp c global mechan allow effici comput simul time like t advantag optimist protocol elimin separ gvt global virtual time calcul reduct risk cascad rollback conserv method price paid reduct asynchroni limit opportun parallel interest conserv yawn protocol perform rel optimist techniqu comparison bound time warp btw protocol suit purpos well it like yawn iter algorithm requir global synchron end iter worthwhil note differ two approach protocol consist three phase first phase lp cooper defin global window simul time second phase lp concurr process event timestamp fall within window third phase lp engag barrier synchron primari differ size global window simul time yawn creat window small enough guarante process within window correct btw defin larger window allow lp optimist process event within larger window compar yawn btw sidebysid better understand cost benefit employ optim windowbas framework construct small window yawn avoid overhead optim cost reduc parallel larger frequenc barrier synchron construct larger window btw enjoy larger degre potenti parallel lower frequenc barrier synchron pay statesav rollback overhead yawn analyz elsewher nicol a present analysi btw develop approxim form probabl distribut number event lp execut within window quantifi distribut use numer techniqu style approach standard mani area model rel novel among analys parallel simul allow one model complex phenomena would otherwis possibl one crucial point approxim valid via simul btw comput anoth crucial point model incorpor delay instant antimessag sent instant receiv point profound impact conclus analysi model predict btw optim window size much larger yawnss surprisingli one two event process on averag lp within optim size window facilit comparison deriv formula analysi bound time warp comparison yawn delta yawn btw perform function synchron statesav eventreprocess cost use determin problem sparseon finegrain lp per processorthen asymptot as number lp increas btw prevail howev fix size architectur aggreg lp onto processor yawn prevail contribut paper present valid approach analyt approxim behavior complex synchron protocol unlik previou analys parallel simul protocol approach gener enough incorpor numer overhead cost includ effect workload aggreg use approach compar yawn btw identifi as function overhead cost situat advantag use optim situat advantag remain conserv reader uninterest mathemat detail may well still interest qualit conclus detail produc remaind paper organ follow section describ analyt model relationship other literatur section develop method approxim probabl distribut lp workload includ reprocess messag due roll back section appli approxim compar yawn btw section present conclus model analysi parallel queue network simul simul server heavi load lp repres server event occur job either enter servic receiv queue server use nonpreempt schedul job postservic destin presum known time enter servic destin chosen uniformli random set lp allow data content next destin servic job depend upon content time job receiv lp prior time job enter servic thi messag report job arriv new destin sent recipi time job enter servic call presend job import aspect yawn time warp messag sendtim receivetim correspond serviceentri servic departur time servic time reflect advanc simul time also random exponenti distribut rate cost process serviceentri event job arriv event uniti express physic execut time unit simpl model like basi sever analyt studi model similar one studi gupta akyldiz fujimoto gupta et al which well refer gaf studi asynchron time warp main differ use unit cost execut event gaf model use exponenti distribut execut cost model basic queue system singl server nonpreempt queu disciplin wherea gaf model queu system infinit server model indirectli reflect effect commun delay gaf model assum instantan commun differ signific enough prevent us quantit compar model result gaf note gaf assumpt exponenti distribut event execut cost tend delta p dicken d nicol p reynold jm duva worsen perform model instantan commun infinit server tend improv our furthermor one increas avail parallel gaf model increas number messag model one must increas number lp model also loos relat selfiniti model studi nicol nicol subsum nicol messageiniti model studi yawn nicol a former model concentr effect fanout greater one ignor effect rollback latter model provid analysi yawn use paper bond model eick et al eick et al close relat our essenti describ behavior parallel queu simul ident except messag describ job departur sent simul instant job depart assumpt keep normal practic serial simul howev parallel simul alway presend messag can increas parallel anoth differ model reexecut event choos new destin messag uniformli random wherea bond model assum direct lp befor neither model particularli realist regard critic facet model final randomli uniform rout assumpt share model studi felderman kleinrock felderman kleinrock model timestamp advanc event execut time differ analysi uniqu sever way first nearli aforement model regard commun statesav synchron neglig believ cost larg defin synchron approach best suit problem explicitli incorpor model sec ondli analysi optimist windowbas scheme perform depend level optim regard eick et al model simi lar analyt approach differ also extend eick et al model final analysi nicol nicol a consid benefici effect aggreg lp shall see consider make advantag forego optim suffici aggreg case wherea optim better nonaggreg case analyt approach comput base simplifi approxima tion develop intuit approxim probabl distribut number event process lp execut window workload distribut includ reprocess event induc rollback distribut basi add overhead cost comput averag execut cost in real time per unit simul time proceed analysi use review yawn mechan presum lp execut event simul time t assumpt permit presend messag lp examin state predict departur time t next job receiv servic exclud one receiv servic t assum messag arriv prior job enter servic sort lookahead call condit knowledg chandi sherman chandi sherman valid t condit use standard minimum reduct techniqu lp quickli comput conserv yawn window t wt construct job enter servic t wt window also depart analysi bound time warp comparison yawn delta servic coupl featur messag presend messag gener event t wt receiv time t wt btw similar sens requir lp synchron upper edg optimist window time window understood pro cessor wherea origin btw algorithm propos window synchron mechan whose cost linear number lp model use algorithm logarithm cost describ nicol b steinman everi time event process whether initi due rollback choos destin messag random regardless previou behavior event window allow messag content destin sensit function complet messag histori lp time job enter servic featur place btw disadvantag lazi cancel ineffect thu two messag gener upon reprocess event antimessag cancel previou rout new rout messag sent anoth probabl differ lp like analys time warp neglect cost process antimessag sender receiv howev model antimessag recogn instantan recipi recipi process known event window featur make sens cost probe new messag high enough govern activ which case current distribut memori architectur analysi principl challeng model optimist protocol captur effect rollback for occurr one straggler messag may trigger one rollback specif case addit challeng captur effect btw global synchron rollback propag difficult analyt problem make headway use intuit approx imat straggler arriv time first postrollback event lp time stamp t addit rollback trigger receiv time messag sent time must lie insid btw synchron window probabl occur depend rel posit time within windowth closer end window less like trigger anoth rollback fact condit know straggler messag arriv time s model assumpt comput exactli probabilist effect straggler antimessag gener actual arriv time distribut messag intract complex approxim form numer comput paramet estim form therebi allow comput effect straggler form base intuit arriv time straggler messag view sum servic time given messag arriv time trace back chain servic durat given differ job differ lp approxim novel among analys parallel simul part calcul use standard approxim replac condit binomi distribut meanmatch poisson distribut assumpt independ random variabl whose correl structur low due random effect stochast rout delta p dicken d nicol p reynold jm duva approxim distribut form messag arriv time permit us comput probabl distribut random number w event execut includ reexecut within window width a w clearli depend a depend express notat initi goal determin probabl distribut w note distribut lp uniform assumpt made given distribut add overhead execut cost determin mean time a requir complet window processor requir longest time so a a serv metric measur averag execut time requir per unit simul time focu gener messag notion aris follow imagin lp synchron t execut known event window receiv affect messag present synchron set messag sent first sweep timestamp defin gener note earlier messag sent first sweep timestamp greater t a explicitli exclud consider effect process present window gener messag caus lp rollback reprocess event window lie ahead receiv timestamp reprocess turn gener anoth set messageson gener continu vein messag gener direct result rollback caus gener messag denot random number gener messag receiv lp g denot r random number event process result receiv gener messag analysi simul nonpreempt queue network load high everi server alway busi small job arriv one window wait servic one window discount possibl job go servic window arriv time lp know number entri time servic time job place servic window t a job associ time remain unalt throughout process window howev content destin messag lp send t a permit chang function messag arriv t number servic entri event lp t a random variabl poisson distribut mean a sinc rout job taken uniformli random lp also know j job arriv event j also poisson mean a j independ event reprocess cost depend quickli parallel simul receiv react straggler messag exampl analysi gupta et al gupta et al assum zero messag transmiss delay rollback occur immedi follow complet process whatev event serv instant straggler messag arriv two straggler arriv process time reprocess effect though straggler least time stamp receiv other exact addit cost consid effect commun delay may algorithm small enough lp event window time take messag travel processor recipi lp alreadi readi synchron time analysi bound time warp comparison yawn delta a even commun faster frequent case and observ actual applic cost probe new messag event prohibit high distribut memori architectur probe involv system call model straggler messag receiv effect straggler reexecut event lp a send antimessag messag gener previous event lp receiv k gener straggler process serial incur k separ recomput cost aspect model concern time messag arriv subsequ process btw need behav way may long lp event window commun lag noteworthi defin gener messag correspond servic entri event job arriv event write r express total number event process window observ event reexecut count r overhead distribut reprocess cost r depend number gener messag given total number n gener messag system number arriv lp binomi bn p random variabl p number lp principl could carri analysi forward retain binomi form practic comput advantag model binomi poisson random variabl match mean approxim standard n larg p small case earli gener whose contribut domin w note earlier distribut messag arriv time complex handl exactli owe inescap probabilist depend approxim arriv time distribut messag note messag correspond serviceentri event lp arriv time serviceentri time plu exponenti servic entri event rank reflect whether first second servic entri event t a lp arriv time distribut messag sent th servic entri event follow time plu convolut exponenti ie arriv messag rank occas condit serviceentri event lie t a case messag arriv time distribut alter condit order messag sent in gener th servic entri event must reprocess impli arriv earlier stragglerinform alter ms arriv time distribut model attempt captur distribut depend simplifi assumpt then everi gener arriv messag t a timestamp whose distribut t plu erlang condit less a chose repres random generationi arriv t a rank probabl rank k expect fraction ik gener messag rank k let densiti function erlangk condit less a approxim arriv time densiti function delta p dicken d nicol p reynold jm duva total event process window servic entri event window j job arriv event s servic rate queue server gener arriv messag receiv reprocess gener arriv reprocess singl gener arriv ij fraction gener arriv rank j densiti function erlangj condit cumul distribut function erlangj bnp binomi random variabl paramet n p cumul distribut function erlangj condit sum first j gamma stage less tabl summari notat arbitrari gener messag mixtur k ik f k s show approxim coeffici fa ik g tabl summar notat random quantiti lporient rather systemori remain determin weight factor fa ik g distribut w g r approach condit determin distribut suitabl condit call g k r k w k model assumpt correl messag arriv time lp slight take independ comput w individu random variabl convolut independ straightforward uncondit j sinc j independ poisson valu eg fa ik g built increas i shown first consid eg gener messag aris whenev serviceentri event t send arriv messag timestamp less arriv event sent servic entri event previou window condit serviceentri event t a joint distribut time t a ident k independ t variabl ross pg choos one k uniformli random probabl arriv messag lie outsid t a given prfarriv messag time servic entri event z ta lead observ mean number arriv messag gener t ta fall outsid t ta gamma e gamma sinc mean total number arriv messag gener t a a obtain valu fa k g also easili deriv arriv messag rank j necessari erlang associ arriv time less analysi bound time warp comparison yawn delta a bay theorem obtain f k cumul distribut erlangk rate paramet turn analysi higher gener suppos eg valu fa ij g known gener i condit consid distribut r k formul arriv time caus reprocess everi known arriv event serviceentri event a given may view placement time event t k uniform t consequ number event reprocess rollbackinduc arriv distribut binomi bk repres sum k bernoulli success probabl va coupl fact approxim distribut form gener messag comput prfn event reprocess gener messag j z ij equat approxim distribut random variabl r k random number event reprocess singl gener messag condit ignor fact arriv messag arriv event set known arriv event continu flux success gener accept approxim distribut r random convolut independ instanc r k poisson rate eg m s true distribut bg n n fold convolut valu fa ij g comput similar fashion condit gener arriv time condit serviceentri event number fall v a binomi probabl gener messag rank j gener arriv zero enough serviceentri event ie m otherwis probabl j gamma st serviceentri event occur v messag gener fall within t a give creat rank j gener z ij recal h j cumul distribut function erlangj condit sum first stage less a us probabl reprocess rankj gamma serviceentri event produc messag next gener d nicol p reynold jm duva fig reprocess rank serviceentri event gener rank messag next gener figur help explain idea situat shown arriv messag time ahead first three servic entri event servic entri event ahead arriv rank respect arc illustr sendrec time differ messag sent reprocess event rank event messag fall within window rank event messag not order rank messag gener th rank servic event must lie right v must receiv time messag distribut receiv time exponenti ad distribut th servic event latter condit erlang rank j let b ij result uncondit equat s then recal reprocess serviceentri event gener two messag with timestamp mean number gener rank j theta eg theta b ij coeffici fa ij g given final mean number arriv messag next gener simpli use recurs one may everi comput distribut r k gener condit random variabl r may taken independ becaus process drive highli random arriv elsewher whenc may comput distribut convolut w final know distribut comput distribut w uncondit known poisson distribut w describ workload singl lp term number event process larg number lp random messag rout may treat lp workload independ random variabl straightforward express expect maximum workload among n lp let mn a maximum workload know everi nonneg integ w analysi bound time warp comparison yawn delta emn a x numer problem may aris comput x small x larg good approxim emn a socal characterist maximum use instanc eick et al eick et al given n characterist maximum w smallest valu w c prfw w c g n sinc w discret refin estim linear interpol w cumul distribut function w c w c gamma essenc creat continu version w solv w c prf estim emn a cours comput program calcul distribut must truncat infinit sum take found sum first twelv gener yield converg number precis complex analysi comput involv enumer number discret point use model distribut function messi proposit consid code adapt choos number point need practic speak comput complex larg data point curv illustr requir small number second comput person comput cours research experi sever differ form approxim messag arriv time distribut form develop valid larg number empir observ observ drawn mani valu n a figur provid repres sampl valida tion compar model predict em a em a simulationbas measur vari valu a simul heavili load queue network simul synchron btw measur point estim one hundr window replic purpos ensur model captur gener trend omit confid interv see model predict behavior well rang predict span factor ten smallest largest although breakdown larger end like due model overli pessimist calcul everi straggler caus reexecut everi event ahead within window larger window size btw increasingli deviat behavior recogn two straggler concurr one smaller arriv time caus recomput also instruct consid fraction commit event those event later reprocess behav function a illustr figur plot ratio expect maximum commit workload processor expect maximum total workload lp curv shown fraction use work decreas linearli certain point suggest within model framework make sens d nicol p reynold jm duva size window mean servic timemaximum number event process observ predict observ predict fig comparison observ predict mean maximum event process window lp increas indefinit explain section follow comparison yawn instruct consid emn a behav function a emn a basic product three term i number messag gener requir lp finish window ii averag number rollback per gener iii averag number messag reprocess per rollback simul suggest number gener grow linearli a observ agre analysi eick et al eick et al number messag reprocess rollback also increas linearli a simpl reason increas window size introduc new event top window roll back along one roll back smaller window averag number rollback per gener also linear a arriv messag assum caus reevalu later messag emn a least cubic function a cost per simul time unit emn aa whose unit execut time per simul time unit least quadrat a suggest may minim cost figur confirm intuit fact interest note appear slightli less agreement model eick et al even though model cost differ conclud excel choic and show remain presenc reason overhead remaind presum equal incorpor effect statesav well assum perev cost analysi bound time warp comparison yawn delta size window mean servic timefract commit event lp fig fraction commit event function a lp size window mean servic time expect cost per simul time unit fig emn aa function a lp delta p dicken d nicol p reynold jm duva log base number lp expect cost per simul time unit fig ema s s function log statesav factor ff cost execut n event attend statesav ffn ff note model presum state save event presum aggreg statesav overhead amort event ff equival say effect statesav caus execut run ff speed equival comput statesav emn a and henc figur incorpor cost synchron statesav effect statesav cost ff simpli shift curv illustr figur vertic factor ff optim window size chang includ synchron cost z window true cost per simul time unit ffemn aa za depend valu z optim window size may grow howev analysi figur show z must larg significantli alter optim window size near seen emn aa least quadrat function a simpl calculu show minim emn aa sa oz concret may ask valu z forc optim window size almost twice occur roughli adjust function equal rightmost two point curv figur ie emn algebra yield number reflect synchron cost three time larger window entir comput cost point ten time larger cost execut commit event overhead larg practic remaind consid case z moder eg window comput cost may continu use closetooptim window size order compar synchron cost yawn btw must consid synchron perform optimist comput softwar solut describ nicol nicol everi lp engag synchron activ find appar synchron point could analysi bound time warp comparison yawn delta assum synchron cost everi straggler messag howev seem excess instead well assum number synchron one would incur synchron end gener fact reason way program btw follow synchron processor determin whether straggler decid whether move next window experi optimist barrier studi nicol b cost close twice convent syn chroniz simul studi show window width gener averag figur rel insensit number lp turn behavior emn n almost perfectli linear function log n rang consid emn log n take b execut cost convent barrier synchron overal execut cost per unit simul time given n lp context earlier remark concern synchron cost z function reason b order comput cost say b consid yawn nicol nicol a establish averag width conserv window least n window small averag maximum number event process lp larger larg n much closer includ barrier synchron yawn cost per unit simul time greater c yawn n may use equat compar approach given valu overhead cost higher level observ btw olog n cost yawn o n cost suffici larg n btw alway achiev lower cost larg must n be depict graphic figur plot solut to ff equat c function log n variou valu b solut plot sinc statesav never acceler cost execut event given valu ff known valu b one determin n ff determin btw better yawn n n imagin statesav doubl cost execut event plot line look intersect variou synchron cost curv n s associ intersect defin n instanc btw better n howev btw need n need impact strongli increas synchron cost synchron order time often btw assumpt weve analyz yawn show simul time advanc exponenti distribut amount one lp assign processor yawn rel high cost howev yawn perform sensit assumpt lp servic time bound fl size yawn window least fl d nicol p reynold jm duva log base nalpha fig function specifi lp threshold n yow better yawn seemingli minor chang assumpt defeat assur asymptot superior btw chang yawn o cost ofl rel perform yawn btw depend primarili ff b fl next show consid effect aggreg lp onto processor yawn circumv btw assur superior even servic time exponenti distribut reason straightforward let n denot number lp p denot number processor presum processor simul np lp prior analysi yawn model assumpt show averag size yawn window yn number event lp execut window poisson rate yn sinc lp independ number event processor execut window poisson rate n np mp mean expect maximum p poisson rate yawn cost per unit simul time per coresid lp yawn n theta eick et aleick et al studi asymptot mp r show mp r log p log log p small r mp r r r unboundedli n impli suffici larg n yawn n analysi bound time warp comparison yawn delta log base lp per processorex cost per unit sim time per coresid yawn fig yawn btw normal cost per unit simul time aggreg function lognp second term vanish n grow show yawn normal execut cost per lp asymptot constant result impli yawn normal cost asymptot constant asymptot analysi miss expr sion howev figur plot predict cost not asymptot function lognp also plot predict perform btw assum valu n p statesav overhead factor shown figur obtain comput appropri convolut w find expect maximum convolv processor load sinc aggreg may chang rel optim btw comput cost assum window size differ present data small synchron cost contribut littl overhead cost high load clear yawn better btw high degre aggreg statesav overhead signific also note model work btw aggreg case lp tend commun lp processor one may expect advantag due significantli reduc commun cost especi true model recomput cost due delay straggler consequenti howev assumpt messag rout uniformli random mean local present model cost assumpt remain valid aggreg case long event process cost order commun window size small d nicol p reynold jm duva extens believ gener analyt approach extend valuabl way first extens permit analysi simul rout probabl uniform sinc core analysi singl lp analysi driven assum messag arriv rate one easili envis construct differ workload probabl distribut lp differ arriv rate one comput expect maximum lp workload numer note howev assumpt independ lp workload may special case becom less viabl anticip effect chang perform yawn btw perform method degrad load imbal arriv event howev btw perform suffer more addit rollback induc workload lp higherthanaverag arriv rate one also imagin chang lp messag arriv rate remain same rout probabl chang induc localityconsid ring lp commun neighbor long server remain heavili load approach remain same question chang affect actual simul valid experi random butuniformli balanc rout context differ exist small anoth consider relax assumpt server heavili load believ chang approach much number servic event window size becom poisson rate aea ae server util also need account possibl job enter servic upon arriv detail appear manag lastli importantli believ possibl extend analysi explicitli model commun delay messag sent receiv accomplish envis model arriv process lp nonhomogen poisson process whose rate function depend commun lag comput model base physic time given probabilist descript time comput descript time howev approach offer possibl account phenomena earliest known straggler initi rollback hope extens type sharpen predict power larger window conclus analyz simpl model parallel simul compar perform conserv yawn synchron protocol optimist bound time warp protocol approach novel problem area rel simpl show comput approxim probabl distribut processor workload distribut add overhead due statesav synchron addit consid effect perform due aggreg mani lp onto processor analysi predict btw optimallys window predict born experi window rel larg compar yawn still small averag logic processor execut two event within it use window size construct equat predict btw analysi bound time warp comparison yawn delta yawn execut cost per unit simul time observ assumpt one lp per processor btw asymptot better yawn number lp grow howev analyz perform allow mani lp per processor find yawn better btw moder level aggreg statesav cost nonneglig farreach quantit conclus question model type yawn btw small chang model assumpt significantli affect quantit result qualit though may infer actual reprocess cost resembl model global synchron cost high like limit optim good thing windowbas framework also conclud probabl distribut drive simul time advanc lower support yawn well problem spars rel architectur howev problem disappear larg problem lp highli aggreg onto processor perhap strongest conclus offer perform parallel simul strongli function statesav synchronizationcommun cost problem size degre aggreg specif synchron protocol synchron method ought chosen problem known take advantag problem characterist open import question remain whether windowbas framework offer better perform complet asynchron one address problem believ extens analyt approach gupta et al model assumpt may lead desir comparison also believ precis treatment effect commun delay possibl lead better understand effect underli architectur synchron behavior acknowledg good friend colleagu j mark duva pass away fall paper publish sore miss r parallel simul use conserv time window simul packet commun architectur comput system technic report mitlcstr case studi design verif distribut program condit event approach distribut simul synchron relax parallel simul applic circuitswitch network bound approxim selfiniti distribut simul without lookahead parallel discret event simul virtual time bound lag distribut discret event simul distribut discreteev simul perform bound parallel selfiniti discret event simul acm transact model comput simul cost conserv synchron parallel discret event simu lation global synchron optimist parallel discret event simul parallel simul today distribut simul use network processor spectrum option parallel simul distribut simul discret event system mtw strategi schedul discret simul event concurr execut speed synchron parallel environ emul discret event simul speed unifi approach parallel simul performanceevalu bound time warp algorithm tr virtual time distribut discreteev simul parallel discret event simul perform bound parallel selfiniti discreteev simul bound approxim selfiniti distribut simul without lookahead cost conserv synchron parallel discret event simul global synchron optimist parallel discret event simul synchron relax parallel simul applic circuitswitch network parallel simul use conserv time window spectrum option parallel simul perform analysi time warp multipl homogen processor simul packet commun architectur comput system ctr seng chuan tay yong meng teo rassul ayani perform analysi time warp simul cascad rollback acm sigsim simul digest v n p juli marco pedicini francesco quaglia parallel implement optim lambdacalculu reduct proceed nd acm sigplan intern confer principl practic declar program p septemb montreal quebec canada francesco quaglia vittorio cortellessa bruno ciciani tradeoff sequenti time warpbas parallel simul ieee transact parallel distribut system v n p august jinsheng xu moon jung chung predict perform synchron discret event simul system proceed ieeeacm intern confer computeraid design novemb san jose california marco pedicini francesco quaglia pelcr parallel environ optim lambdacalculu reduct acm transact comput logic tocl v n pe juli jinsheng xu moon jung chung predict perform synchron discret event simul ieee transact parallel distribut system v n p decemb