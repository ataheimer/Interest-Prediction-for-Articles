t achil turtl undecid bounded problem small datalog program a datalog languag logic program without function symbol consid paradigmat databas queri languag possibl elimin recurs datalog program bound sinc bound program execut parallel constant time possibl automat bounded detect believ import issu studi mani paper bounded prove undecid differ kind semant assumpt syntact restrict mani differ proof techniqu use paper propos uniform proof method base discoveri of call it achillesturtl machin make strong improv known undecid result particular solv famou open problem kanellaki show uniform bounded undecid singl rule program call also sirupsthi paper full version j marcinkowski proc th stac lectur note comput scienc pp j marcinkowski th ieee symposium logic comput scienc pp b introduct introduct queri relat r answer given direct graph databas possibl given two node reach one odd number step first order one lack recurs first order logic observ led studi datalog databas logic program combin existenti posit first order logic recurs exampl relat r defin odddist datalog program i rxi exi e edg relat graph e call extension predic treat input abl prove new fact it r output intension predic idb program prove fact it first rule initi rule extension predic bodi second rule contain intension predic among premis use recurs deep proof construct clear graph path element b odd length n prove ra b support kbn grant tc jmatcsuniwrocpl institut comput scienc wroclaw univers ul przesmyckiego j marcinkowski element proof depth log n may need huge databas arbitrarili deep proof necessari evalu program hand consid program comput ha tail queri iii tailz ez x v tailz taili ez taila provabl exist proof fact deeper regardless number element databas tail tail tail idb predic second third rule recurs fact recurs elimin last program possibl write equival one proof deep necessari recurs elimin given program program equival first order queri priori upper bound depth proof need evalu queri everi fact deriv program deriv constant time in parallel polynomi mani processor independ size databas thi equival prove if direct nontrivi program call bound previou work contribut problem distinct whether given datalog program bound not import datalog queri optim is gener undecid suffici condit bounded given decidabilityundecid border case differ syntact restrict semant assumpt studi syntact restrict consid were number rule recurs rule program maxim ariti idb symbol linear rule semant assumpt concern statu idb relat execut program empti deal weak program bounded arbitrari relat must consid possibl idb input strong uniform bounded studi undecid uniform bounded impli undecid program bounded fix syntact restrict with possibl addit initi rule see section discuss survey previous known result iv below illustr differ level difficulti undecid proof uniform program bounded decid prove monad program program bounded so also uniform type singl rule program also known program and uniform bounded decid program singl linear recurs rule idb predic binari moreov program bounded decid binari program idb predic defin one recurs rule undecid prove i program bounded linear binari program achil turtl small datalog program ii program bounded program one recurs rule two initi iii program bounded program consist two linear recurs rule one initi iv uniform bounded ternari program v uniform bounded ariti linear program decid uniform bounded program consist one rule state open problem nphard problem prove undecid result uniform bounded program small number rule prove sinc then paper give strong improv result iiv show that vi uniform bounded undecid ternari linear program section improv result iv v vii uniform bounded undecid singl recurs rule ternari program section improv iv addit improv is program syntact simpler recurs rule quasilinear mean that gener speak form j intension predic sinc recurs rule proof program tree one possibl long branch notic vi vii still allow number initi result hold also program bounded viii uniform program bounded undecid program consist one linear recurs rule one initi section sinc program bounded clearli decid program consist one rule result viii close numberlinear rule classif program bounded strong improv ii iii final section solv problem kanellaki show that ix uniform bounded singl rule program undecid method differ techniqu use proof result iv reduct halt mortal problem ture machin reduct halt problem two counter machin syntact reduct arbitrari datalog program singl recurs rule program develop result univers method base encod conway function learn conway function paper philipp devienn patrick lebegu jeanchristoph routier use prove undecid the call cycl unif feel paper would written without previou work encod nevertheless quit differ one first differ languag function use there construct call it achillesturtl machin variant ture machin next use version conway theorem prove construct realli univers machin encod achillesturtl machin datalog program due particular simplic achillesturtl machin one realli tempt claim simplest known univers machin possibl encod syntact small datalog program believ last time achillesturtl machin use undecid proof j marcinkowski combin conway function method techniqu use binari edb relat order chain long enough relat think repres tape machin chain proof long method goe back open problem classif finish program bounded follow syntact restrict still give interest open problem concern decid uniform bounded i binari program ii linear binari program iii program consist singl linear rule know exampl syntact restrict uniform bounded would decid program bounded not seem like candid exampl class linear binari program program bounded known undecid class preliminari datalog program finit set horn claus call rule languag first order logic without equal without function predic use program bodi rule call extension predic edb predic occur head rule call intension idb rule call recurs idb predic occur bodi rule recurs initi rule recurs rule linear one occurr idb bodi program linear recurs claus linear ariti datalog program highest ariti idb predic use so exampl two program section predic e extension predic intension rule i iii initi rule ii iv v recurs rule iv v linear ha tail program linear also monad odddist program binari databas finit set ground atom formula deriv or proof ground atom formula a program p databas d finit tree that i node label ground atom formula ii leaf label atom d iii nonleaf node exist rule r program p substitut oe oe head r label node substitut bodi r label children iv label root tree depth proof depth deriv tree instead write proof program p databas use express simpli proof context clear notic p linear program pproof sequenc ground atom formula case use word length depth proof gener program p bound everi databas d atom prove p proof deeper fix constant c differ convent concern input output datalog program correspond differ definit bounded predic program uniform bounded studi program predic bound respect fix predic pre constant c everi databas d fact idb predic d everi ground atom atom proof p proof deeper c definit reflect situat edb predic input one achil turtl small datalog program predic output program program p program bound predic bound idb predic program uniformli bound constant c everi databas d here suppos idb predic occur d everi ground atom atom proof p proof deeper c predic view input output program exampl program bounded vs uniform bounded make differ program bounded uniform bounded clear reader give exampl program bound uniformli bound signatur program consist one extension predic e one intension predic predic binari rule are conveni think e graph kind pebbl game initi rule i start game place pebbl node tail length least rule iii need distinguish pebbl rule iv v alway move one pebbl neighbour node final two pebbl meet node end tail length least two rule ii move pebbl two node prove program program bound uniformli bound lemma databas input predic empti either proof pair de element fact id e prove deriv step proof consid two case case element ea b ebc hold then first step use rule i prove ia a then use twice rule v get ic a use rule iii get ia c twice rule v get ic c final rule ii use deriv id e case element databas d then sinc given empti proof possibl structur proof lemma abov well structur program itself good illustr one idea proof section program contain initi rule rule allow start kind game comput exist substructur requir form databas then enough fact databas proceed comput and termin use analogon rule ii flood j marcinkowski databas otherwis enough fact short proof possibl or proof all exampl lemma constant c exist databas nonempti input predic i element ia b pprovabl shortest proof fact requir c step proof databas contain element c follow fact ec show fact ic c c provabl shortest proof exactli step first show proof exist kth step use alreadi prove fact deriv ic rule use kth deriv step v k odd iv k even show shorter proof possibl notic bodi rule iiiv satisfi d rule use defin distanc node follow distanc distanc b less equal k exist node c either ebc ec b distanc b distanc pair node a b pair node c defin sum distanc c b d now notic fact form ia b deriv k step fact ic d rule iiiv use proof distanc a b c greater k final observ distanc c program bounded vs uniform bounded discuss notion uniform program bounded formal technic level inform notion bounded uniform bounded need program consider subprogram bigger one then happen predic suppos output program also part input program bounded hand correspond view entir datalog program definit of possibl mani output predic similar distinct program uniform equival datalog program see first notion appli entir program second one subprogram equival known program equival undecid uniform equival decid observ also case bounded uniform version given syntact restrict priori more decid suppos program bounded decid syntact restrict restrict allow arbitrari number initi uniform bounded also decid restrict see consid program p signatur idb symbol let q program p signatur enrich new edb symbol ariti e equal ariti k new rule easi see q program bound p uniformli bound reduc decis problem uniform bounded p problem program bounded program q survey result give evid difficult prove undecid uniform bounded undecid program bounded argument show reason that hand know exampl syntact restrict uniform bounded achil turtl small datalog program would decid program bounded not like candid exampl class linear binari program program bounded undecid class decid uniform bounded open achillesturtl machin tool conway function definit conway function function g natur argument defin system equat q natur number q ji that mean iq natur number q jp a i conway function g given natur number n let cg n statement assert exist natur number g see section find nice exampl give idea conway function is proof follow theorem found theorem conway problem given conway function g natur number n cg n hold undecid main tool follow refin version theorem theorem exist comput sequenc fgn g conway function g recurs is re complet ii g n q coeffici definit function iii g n exist univers conway function g i set fn cg n g recurs is re complet ii q coeffici definit function g a iii n proof known problem given finit automaton counter comput start fix begin state empti counter reach fix final state undecid even requir final state reach counter empti read remark end section see precis mean finit automaton counter given automaton kind construct conway function g satisfi condit ii iii theorem cga hold comput reach final state first j marcinkowski need modifi littl bit construct automaton b termin termin satisfi follow condit iv second counter b increas first counter decreas comput step v state b number counter increas comput step state chang j detail construct b left easi exercis hint must done ad coupl new state exampl instruct increas second counter keep first unchang must substitut two instruct first increas first counter chang state new one second increas second counter decreas first now suppos state automaton b begin state let increas sequenc prime such sequenc found k sinc densiti prime around n c log n encod configur b state first counter contain number n second counter contain natur number easi notic that x code two subsequ configur b yx depend remaind x mod p yx defin requir conway function defin first step properli put code begin configur put also p f reach iter function next one code final configur reach use well known fact exist particular finit automaton counter problem comput start fix begin state b given first counter empti second counter reach configur fix final state f empti counter undecid proof similar i start comput properli put even p j ji hold n hold g n last code begin configur remark automata counter notion finit automaton two counter similar one kozen book differ assum automaton input tape sinc two counter automata with readonli input tape power ture machin problem whether given automaton kind termin given input undecid but input separ hide input finit control automaton in fact input tape finit object input also problem whether given automaton without input tape termin start fix begin state empti counter undecid show need proof second claim theorem exist particular finit automaton counter problem comput start fix begin state b given first counter empti second counter reach configur fix final state f empti counter undecid first observ exist automaton requir counter univers achil turtl small datalog program ture machin content part tape left head rememb one counter right head second counter auxiliari third counter need oper first two use standard techniqu encod three counter two see detail convent sinc consid conway function g n exist prove theorem i particular assum claim ii iii theorem i hold achillesturtl machin given conway function g given input n construct achillesturtl machin comput subsequ iter gn variant multihead ture machin readonli tape cell tape colour one colour k k where p definit function g cell x colour colour k we denot fact k x cell sx s successor function tape colour k j p colour k call white call red head first symbol achil second turtl third call guid transit rule design way head never go left achil guid move right step comput achil tri catch turtl configur machin describ posit head begin comput achil arbitrari white cell x tape turtl guid cell n x begin configur is conx n x n x successor function tape idea is comput reach configur form achil exactli k cell behind turtl g comput step head machin move accord one follow transit rule r sinc q rule r run rule rule j jump rule configur form call special see section nice exampl achillesturtl machin follow easi lemma give intuit comput machin proce lemma i if configur machin turtl cell x guid ii if configur machin turtl cell x achil k x none jump rule use later j marcinkowski comput iii suppos configur machin achil cell x turtl x guid r x one jump rule use later iv special configur result transit done accord one jump rule v achil alway white cell vi configur machin guid cell x next configur r x proof i claim true begin configur everi configur result use jump rule run rule move guid right keep turtl cell ii achil right turtl jump rule use run rule move achil right iii follow i ii iv i guid never left turtl run rule move right execut run rule right turtl v start white cell move p cell right step vi sinc hold everi see convent formul prove lemma equival behaviour conway function result comput achil turtl machin goal is lemma follow condit equival i cg n hold ii achillesturtl machin reach configur form iii achillesturtl machin reach configur form conasasa iv achillesturtl machin reach configur form lemma suppos special configur machin achil cell a turtl guid i k step configur con gammai t ii exactli two configur reach k proof i k step done accord rule r so k step achil cell kp kpa q turtl ii i con gammai t reach k step rule r may use again lead con pgammai t rule j may use lead lemma suppos special configur machin achil cell a turtl guid p follow two condit equival achil turtl small datalog program i possibl reach special configur conx l x l x next special configur proof lemma ii configur k step either first case achil alreadi right turtl and lemma iiiv special configur reach more prove equival show configur reach second case form conx gm x gm x fact conx gm x gm x lemma follow two condit equival i achillesturtl machin reach configur form conx l x l x ii exist natur number j g j proof iii implic prove induct number special configur reach comput iii implic prove induct j case lemma use induct step proof lemma i ii iii equival lemma convent claim iii theorem i clearli ii impli iv also iv impli ii configur reach number step k t hold consid configur last step comput done accord jump rule the last step turtl move configur achillesturtl machin exampl order give reader idea machin work go provid nice exampl conway function or rather conwaylik function achillesturtl machin built function function g start wellknown collatz j marcinkowski function take natur number even divid two odd multipli three add one problem iter procedur give final result regardless natur number start from open formal spirit definit defin function g as ae open problem whether multipli number also add realli conway function sens definit anyway find exampl inter est can will construct achillesturtl machin function rule exampl achillesturtl machin initi configur conx n x n transit rule run rule jump rule final configur conxsxsx coeffici run rule white jump rule calcul accord definit r j begin section left hand side red jump rule con a g g would follow definit place add form n suppos concret exampl n subsequ iter g are begin configur machin cona a a white cell comput sequenc machin is con x x x rr con x con x x x rj con x con x x x wr con con x x x wr con x x x wj con x x x wr con x x x wr achil turtl small datalog program con con con x x x wr con x x x wr con x x rr mean red run rule use obtain configur wr white run rule rj red jump rule wj white jump rule configur mark depict fig ternari program ternari linear program p theorem conway function g n theorem i exist effici construct ariti linear datalog program p one idb predic uniformli bound cgn hold signatur program contain one binari edb symbol s go serv kind order us p monad edb symbol play colour ternari idb symbol con program p consist transit rule for flood rule conxyzconst r k t km understood k j mod p sinc longer true successor must explain mean l symbol rule notat convent for exampl rule understood as conxi x conxxi let us explain mean rule transit rule achillesturtl machin except check cell node achil run paint properli flood rule prove everyth one step turtl red node initi allow start comput white node properli colour piec tape near node lemma cgn hold c exist databas tupl a element conat g prove p proof conat g requir c step j marcinkowski g g g g fig subsequ configur exampl achillesturtl machin proof long enough schain see definit below empti idb relat first prove flood rule use databas provid cgn hold suppos use mean prove red follow proof conat g notic give legal comput achillesturtl machin first fact proof begin configur machin achil turtl small datalog program contradict lemma now take first element z order initi conz z z use c time run rule get shortest proof fact con pc go prove lemma cgn hold exist c that databas d everi tupl a b c element conabc prove program p exist proof conabc shorter c step proof suppos hold mean that start comput achillesturtl machin configur conx x x possibl reach final configur conasasa notic comput none head move left x right sa let k distanc x sa let k number step comput necessari reach final configur clearli pk k go prove ck proper constant need definit definit schain element databas d set x sxm xm km xm decreas schain element databas d set x km xm where km understood k mod p case say chain begin x definit let k natur number say node w databas kfound exist decreas schain begin w consist k element w kfound chain exist definit let k natur number say databas kfound exist schain consist k element obvious kfound chain exist consid case lemma kfound tupl a b c element fact conabc prove proof requir k step proof take x exist schain length k begin x thank initi rule conx x x provabl proof length pretend chain x k x tape start comput achillesturtl machin sinc transit rule machin rule program p step comput encod one step proof exist element chain st red prove k step one step use flood need prove con everi tupl that lemma let kfound databas i pproof d flood rule use proof k i pproof d suppos shortest possibl proof conam bm cm flood rule use onc last step proof iii conabc pprove tupl a b c proof requir k proof i set m subsequ schain length pm j marcinkowski ii suppos step done accord flood rule shorter proof conam iii follow i ii end proof lemma theorem theorem uniform bounded ternari linear datalog program undecid proof follow theorem ariti singl recurs rule program r theorem conway function g n theorem i exist effici construct ariti datalog program r consist one quasilinear recurs rule initi uniformli bound iff hold previou subsect signatur program contain one binari edb symbol s go serv kind order us p monad edb symbol play colour ternari idb symbol con also addit idb symbol steer ariti program r consist of recurs rule g initi transit rule for g g g gk s a initi flood rule steerxt y r sk t initi cona a ak a k let us explain go here tripl achil turtl guid node graph defin mean order colour proof either program p r path graph graph given edb relat defin datalog program without recurs want defin vertic begin node a g onlin comput reach node as p must use one rule rule linear read noth inform edb situat around defin graph advanc by initi one recurs rule enough graph access program case rule quasilinear make use addit idb but recurs predic steer reader would ask question here steer predic ariti want hide rule achil initi simpler recurs claus fact addit problem aris here sinc flood rule achil forc design recurs rule way uniform achil turtl small datalog program reason crucial achil goe chain thank say long chain long proof lemma case could write initi hypothet ari steer way achil would move chain run accord steer fact prove initi would control given steer begin lemma cgn hold c exist databas tupl a b c element conabc prove program r proof ca b c requir c step proof lemma lemma cgn hold exist c that everi databas d everi tupl a b c element conabc prove r exist proof conabc shorter c step definit a b c tupl element databas say conabc fact a proof lemma suppos cgn hold comput achillesturtl machin start configur conx x x reach conysi sy comput requir space kp that distanc x kp natur k consid case case pfound everi proof fact longer achil part recurs rule analog lemma i case c take v kp v chain length k p v a initi rule conv v provabl proof length pretend chain v kp v tape let achil turtl play game there among rule possibl given predic steer also standard achillesturtl machin rule so k move configur con kp v reach allow use flood everi fact form conabc prove one step new fact prove later cours noth new idb predic steer prove first step end proof lemma theorem ternari singl recurs rule program q theorem conway function g n theorem i exist effici construct ariti datalog program q consist one quasilinear recurs rule initi uniformli bound iff hold similarli previou subsect signatur program contain one binari edb symbol s go serv kind order us p monad edb symbol play colour ternari idb symbol con graph defin ariti relat previou section defin intersect four graph defin ternari constraint so four addit ternari idb symbol languag program rule program q are recurs rule j marcinkowski g g initi constraint rule g rule g rule rule g g rule g pa g g k t initi prove correct construct shall argu ternari relat realli defin graph relat steer last section easi notic steerat g prove one initi g g also prove opposit inclus suppos red first consid relat e gtt sinc guid doe see far achil guid are constraint allow turtl stay place jump accord proper jump rule relat e att decid turtl allow jump achil far away turtl wait achil catch turtl turtl allow jump see anywher but relat e gtt anywher g proper i way alreadi first two relat forc turtl behav should relat forc guid move ahead allow guid execut jump rule turtl jump togeth thi prevent achil turtl small datalog program danger guid jump turtl run whatev turtl do guid allow use proper run rule danger turtl jump guid run allow achillesturtl machin rule prevent relat e tt remain place guid allow go anywher move guid must join him red constraint allow guid turtl go anywher theorem uniform bounded singl recurs rule ternari datalog program undecid proof follow theorem i remark could use theorem ii instead i get univers datalog program exampl theorem would form exist ariti linear datalog program p one idb predic comput sequenc fpng initi rule program p pn uniformli bound cg n hold g univers conway function theorem ii fact form howev done section decid present result gener version preserv notat uniform instead singl rule program constant notat proviso section go encod comput achillesturtl machin small number rule one two afford separ predic colour more instead go one binari predic col understand colca the colour c so instead predic need constant name colour constant datalog fact want use say constant simpli increas ariti idb symbol k write sequenc c variabl k last argument occurr idb predic program one reason program follow section high ariti exampl program constant a b written as mean p x constant understood a b thank suppos constant languag use follow constant jump run joker constant colour colour also call white colour red colour pink j marcinkowski achillesturtl game section modifi descript achillesturtl machin defin equival version one transit rule make notat compat databas notat go forget tape use kind infinit graph instead distinguish version machin call achillesturtl game transit rule achil turtl machin index three pa ramet first either jump run remain two colour turtl cell guid cell transit idea go bellow treat paramet argument occur goal bodi singl rule solv first four goal bodi substitut proper paramet variabl cond tcolor gcolor paramet use comput posit achil turtl guid execut rule follow definit introduc predic use construct singl rule hope reader understand definit read proof lemma definit given conway function g theorem i achillesturtl graph relat structur g exactli node relat list below node g are colour joker infinit sequenc node c hold node c colr joker hold iv hold i hold j mod p v hold i hold i hold vi hold achil turtl small datalog program hold vii hold hold k hold k viii hold hold ix hold colour hold i hold colour trulerun red joker joker hold hold i hold i hold set node c graph natur way understood tape achillesturtl machin notic fact definit local sens element c c j directli connect fact white node c c j go use relat achillesturtl graph encod rule machin one transit rule conf bodi conjunct follow fact j marcinkowski coltcolort g lemma suppos red comput singl comput step achillesturtl machin conf reach conf a g singl step achillesturtl graph game proof clear move achil perform way machin game he simpli move p cell ahead check also case turtl guid onli if direct easier transit machin done accord run rule substitut run variabl cond els substitut jump variabl tcolor substitut colour turtl cell variabl gcolor substitut colour guid cell now white node g g substitut exactli one white node substitut node x two node substitut first x second x notic condit ii theorem i two white node g g grule goal line vvii bodi satisfi way cond run substitut x notic case cond jump substitut joker x two trule goal bodi satisfi way satisfi last two goal substitut joker x cond run cond jump substitut g x if direct first notic conjunct satisfi realli distanc achil turtl transit smaller p jump allow accord achil turtl machin rule rule guid defin claim vi vii viii definit assur cond tcolor gcolor chosen fair way guid game move way one machin turtl now cond run move fact conjunct satisfi cond jump turtl go node guid doe conjunct satisfi everi choic joker substitut x conjunct achil turtl small datalog program satisfi x follow lemma much easier prove lemma left exercis reader lemma c red configur form conf reach conf singl step graph game hint put cond equal run tcolor equal red singl linear rule program initi section use achillesturtl game construct datalog program one linear recurs rule one initi uniformli bound cg hold edb predic program use definit one ternari idb predic config variabl a g fact form be usual understood achil turtl guid consid databas d suppos colour run joker occur d motorway sequenc element databas use play achil turtl game definit suppos element d say sequenc motorway subgraph order set element consid g databas definit so exampl requir sx hold d motorway readi write linear recurs rule program conf conjunct fact need sequenc motorway notic last line rule exactli liter bodi g occur run substitut cond red substitut tcolor j marcinkowski initi program conf thank last line recurs rule sure fact conf prove one step conf iga g also prove one step fact form conf red see proof lemma case next goal show long proof use recurs rule possibl databas long motorway d lemma consid sequenc element databas if k x gamma subsequ motorway also whole sequenc motorway proof condit ix definit local element c j occur condit white node c c j lemma suppos conf conf conf conf sequenc fact conf deriv from conf singl use recurs rule exist sequenc element databas motorway proof follow lemma construct recurs rule definit a g tupl node databas say fact a readi prove cg hold program uniformli bound lemma cg hold exist constant c everi databas program prove fact fact prove c deriv step achil turtl small datalog program proof cg hold achillesturtl game reach configur conf x sx sx white x sx red then suppos k move need reach configur node machin graph left right sx visit comput go prove k good candid c consid element d possibl case motorway length k p databas last node suppos motorway initi rule conf prove one deriv step next k deriv step one simul k step achillesturtl game k step deriv conf sinc gammap red one argu like proof lemma see next deriv step prove g and last line recurs rule fact prove a case motorway then lemma everi proof less k step still need show cg hold program unbound lemma cg hold constant c exist databas d empti input idb relat fact prove databas proof requir c step j marcinkowski proof enough show arbitrarili long proof need achil turtl game graph we suppos idb input fact start that done initi use c time run rule turtl pinkcolour cell notic posit turtl remain unchang comput final configur shortest proof fact realli requir c step includ initi summar theorem uniform bounded program bounded undecid program consist one linear rule one initi proof problem given conway function g cg hold undecid abl even function satisfi condit ii iii theorem i function construct datalog program one linear rule one initi program bound cg hold lemma uniformli bound cg hold lemma singl rule program one construct it would like modifi construct previou section get singl rule program problem initi predic conf ig simplest solut would initi all check way use motorway goal bodi rule check need edb fact hold rule look like thi conf conf way one could think secur possibl start comput achillesturtl machin place deriv step made enough go footstep proof lemma requir there initi configur provabl realli secur wouldb rule abov provabl bound number step in fact one step previou section think new trick assur that singl rule program construct it singl recurs rule is achil turtl small datalog program conf igrun z conf igw run a g main premis conf igjump run a initi premis jumprun premis constant joker occur p time predic motorway ad two addit argument recurs predic here rule assert someth deriv first argument run so constant run jump interpret way databas fact prove program provabl provabl step is given part input also fact requir deep proof proof possibl fact given input jumprun premis normal useless main initi premis deriv step jump second argument run jump equal databas use show anyth prove everyth prove one step must hold joker red use method section prove construct singl rule program uniformli bound cg hold lemma cg hold exist constant c everi databas fact prove rule s proof deeper c proof let k like proof lemma need consid two case case jump run differ element databas j marcinkowski suppos fact proof length least k then follow proof lemma use fact need initi given input short step proof show everyth prove k deriv step case jump run interpret element databas suppos anyth prove p conf igjump jump joker joker joker hold databas sinc hold sinc joker red everi fact form conf igrun z prove one deriv step lemma cg hold constant c exist databas d fact conf igrun run prove rule s databas d proof requir c step proof proceed similar way proof lemma follow differ i longer assum idb input empti instead requir follow conf ig fact input and x c conf ii requir x c hold end proof theorem uniform bounded singl rule datalog program undecid achil turtl small datalog program r bounded undecid datalog program singl recurs rule datalog versu first order logic parallel evalu recurs rule queri decid optim problem databas logic program halt problem one binari recurs horn claus undecid undecid optim problem databas logic program undecid bounded problem datalog program time bound materi recurs defin view logic program parallel complex element relat databas theori handbook theoret comput scienc frenchmen method prove undecid uniform bounded singl recurs rule ternari datalog program undecid uniform bounded singl rule datalog program recurs axiom relat databas data independ recurs deduct databas decid class bound recurs comput restrict project repres instanc posit result bounded multipl recurs rule decid undecid result bounded linear recurs queri tr ctr foto afrati stavro cosmadaki eugni foustouco datalog program persist number acm transact comput logic tocl v n p juli evgeni dantsin thoma eiter georg gottlob andrei voronkov complex express power logic program acm comput survey csur v n p septemb