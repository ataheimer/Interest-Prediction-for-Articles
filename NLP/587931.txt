t schedul unrel machin random round a present new class random approxim algorithm unrel parallel machin schedul problem averag weight complet time object key idea assign job randomli machin probabl deriv optim solut linear program lp relax timeindex variabl main result varepsilonapproxim algorithm model individu job releas date varepsilonapproxim algorithm job releas simultan obtain correspond bound qualiti lp relax interest implic ident parallel machin schedul job randomli assign machin machin equal like addit case algorithm run time on log n perform guarante moreov approxim result ident parallel machin schedul appli onlin set job arriv time well differ perform guarante b introduct wellknown random help design algorithm cf e g one way guid random use linear program lp paper give lpbase approxim algorithm problem particularli wellknown difficulti obtain good lower bound machin or processor schedul problem random choic involv algorithm rather random approxim algorithm random rapproxim algorithm polynomialtim algorithm produc feasibl solut whose expect valu within factor r optimum r also call expect perform guarante algorithm actual often compar output algorithm lower bound given optimum solut certain lp relax henc time obtain analysi qualiti respect lp offlin algorithm derandom differ perform guarante cost increas but still polynomi run time consid follow model given set j n job or task unrel parallel machin job j posit integr process requir depend machin job j process on job j must process respect amount time one machin may assign them everi machin process one job time preemptiv schedul job may repeatedli interrupt continu later anoth or same machin nonpreempt schedul job must process uninterrupt fashion job j integr releas date r j part paper appear preliminari form mit sloan school manag oper research center e fachbereich mathematik technisch universitat berlin strae de juni d berlin germani skutellamathtu berlind cannot process denot complet time job j schedul c c j confus possibl seek minim total weight complet time weight w associ job j goal find schedul minim jj w j c j schedul quit conveni refer respect problem use standard classif scheme graham lawler lenstra rinnooy kan nonpreempt problem r j r describ strongli nphard schedul minim total weight complet time or equival averag weight complet time recent achiev great deal attent partli import fundament problem schedul also new applic instanc compil optim parallel comput signific progress design approxim algorithm kind problem led develop first constant worstcas bound number set progress essenti follow one hand use preemptiv schedul construct nonpreempt one hand one solv lp relax schedul construct list schedul natur order dictat lp solut paper util differ idea random assign job machin precis exploit lp relax timeindex variabl problem r j r show certain variant random round lead eapproxim algorithm e absenc nontrivi releas date perform guarante improv e moment correspond lp respect i e true optimum alway within factor optim valu lp relax algorithm improv upon approxim algorithm hall shmoy wein also base timeindex variabl differ mean how ever contrast approach algorithm reli shmoy tardo round techniqu gener assign problem rather exploit lp interpret lp valu probabl job assign machin introduct applic random round combinatori optim problem reader refer use differ approach second author subsequ develop slightli improv approxim result problem consider problem r give approxim algorithm base convex quadrat program relax assign variabl inspir timeindex lp relax present paper recent approach gener problem releas date yield perform guarante special case ident parallel machin i e job j machin chakrabarti et al obtain eapproxim refin onlin greedi framework hall et al former best known lpbase algorithm howev reli lp relax sole complet time variabl weaker one propos perform guarante gamma m see detail lp use here optimum solut greedili obtain certain preemptiv schedul virtual singl machin time fast origin machin idea use preemptiv relax virtual machin employ chekuri motwani natarajan stein show preemptiv schedul machin convert nonpreempt schedul ident parallel machin that job j complet time nonpreempt schedul gamma m time preemptiv complet time problem minim averag complet time refin approxim algorithm algorithm propos deliv time onlogn solut expect within factor optimum sinc lp relax use even relax correspond preemptiv problem algorithm also approxim improv upon approxim algorithm due hall schulz shmoy wein particular result impli valu optim nonpreempt schedul factor valu optim preemptiv schedul problem without releas date algorithm achiev perform guarante sinc optimum solut lp relax obtain greedili algorithm also work correspond onlin set job continu arriv process and time t must construct schedul time without knowledg job arriv afterward algorithm achiev competit ratio nonpreempt preemptiv variant set recent skutella woeging develop polynomialtim approxim scheme problem improv upon previous best known approxim algorithm due kawaguchi kyan subsequ chekuri karger khanna skutella stein gave polynomialtim approxim scheme problem preemptiv variant also correspond problem constant number unrel machin rm j r hand shown hoogeveen schuurman woeging problem r j r maxsnphard therefor polynomi time approxim scheme unless pnp rest paper organ follow section start discuss main result algorithm perform guarante gener context unrel parallel machin schedul next section give combinatori approxim algorithm ident parallel machin schedul also show use algorithm onlin set then section discuss derandom previous given random algorithm final section give technic detail turn pseudopolynomi algorithm section polynomialtim algorithm perform guarante conclud point open problem section unrel parallel machin schedul releas date section consid problem r j r actual discuss slightli gener problem releas date everi job j may also depend machin releas date job j machin thu denot r j machinedepend releas date relev model network schedul parallel machin connect network job locat given machin time cannot start anoth machin suffici time elaps allow job transmit new machin model introduc problem r j r wellknown strongli nphard fact alreadi p strongli nphard see first nontrivi approxim algorithm problem given phillip stein wein perform guarante olog n subsequ hall et al gave approxim algorithm reli timeindex lp relax whose optimum valu serv surrog true optimum estim use somewhat similar lp relax wherea hall et al invok determinist round techniqu shmoy tardo construct feasibl schedul randomli round lp solut feasibl schedul time horizon introduc everi job j j everi machin m everi point repres time job j process machin within time interv t equival one say jt p j fraction job j process machin within time interv t lp extens singl machin lp relax dyer wolsey follow minim subject equat ensur whole process requir everi job satisfi machin capac constraint simpli express machin process one job time now consid arbitrari feasibl schedul job j continu process time c machin h then express c lp correspond real complet time c j j assign valu lp variabl jt defin abov i e wise righthand side equal process time p h j job j schedul s therefor lower bound complet time c final constraint ensur job process releas date henc lp r relax schedul problem r j r fact note even correspond mixedinteg program yvariabl forc binari relax follow algorithm take optimum lp solut construct feasibl schedul use kind random round algorithm lp round comput optimum solut lp r assign job j machinetim pair i t independ random probabl jt draw j chosen time interv t independ random uniform distribut schedul machin job assign nonpreempt earli possibl order nondecreas j last step tie broken arbitrarili occur probabl zero analysi algorithm suffici assum random decis differ job pairwis independ remark reader might wonder whether seemingli artifici random choic j s algorithm lp round realli necessari inde not also impli could work discret probabl space follow result still true simpli set assign machinetim pair i t tie broken randomli even arbitrarili mainli chose present sake give differ interpret term socal apoint section follow lemma illumin intuit algorithm lp round relat implic second step solut lp r analysi algorithm howev make use second part lemma first part gener result due goeman singl machin case lemma let optimum solut lp r first step algorithm lp round then j follow hold a expect valu j equal jt b expect process time job j schedul construct algorithm lp round equal proof first fix machinetim pair i t job j assign to then expect process time j condit p j moreov condit expect j equal ad condit expect machin time interv weight correspond probabl jt get claim result note lemma remain true start arbitrari necessarili optim solut lp r first step algorithm lp round also true follow result optim lp solut need get lower bound valu optim schedul lemma expect complet time job j schedul construct algorithm lp round bound bound even true j set second step algorithm tie broken arbitrarili see remark absenc nontrivi releas date follow stronger bound hold bound also hold j set second step algorithm tie broken uniformli random proof consid arbitrari fix job j j analyz expect complet time job j first also consid fix assign j machinetim pair i t then expect start time job j condit precis condit expect idl time plu condit expect amount process job come j machin i observ idl time machin maximum releas date job machin start later j start time job j follow order job constraint maximum releas date therefor idl time machin start time j bound t absenc nontrivi releas date need idl time all hand get follow bound condit expect process time machin start j ik ik last inequ follow machin capac constraint howev j set second step algorithm tie broken arbitrarili replac et righthand side get weaker bound put observ togeth get upper bound condit expect start time j absenc nontrivi releas date bound uncondit expect formula total expect togeth lemma b yield result theorem instanc r j r expect valu schedul construct algorithm lp round bound twice valu optim solut proof lemma constraint expect complet time job bound twice lp complet time c lp sinc optim lp valu lower bound valu optim schedul weight nonneg result follow linear expect note theorem still hold use weaker lp relax constraint miss how ever true follow result theorem instanc r expect valu schedul construct algorithm lp round bound time valu optim solut proof result follow lemma lp constraint independ result theorem also obtain fabian a chudak commun us david b shmoy march read preliminari version paper hand contain bound r j r theorem absenc nontrivi releas date algorithm lp round improv simplifi corollari instanc r approxim result theorem also hold follow improv simplifi variant algorithm lp round second step assign job j independ random probabl machin i last step appli smith ratio rule machin i e schedul job assign machin order nonincreas ratio w proof notic random assign job machin remain unchang describ variant algorithm lp round howev fix assign job machin sequenc job accord smith ratio rule machin optim particular improv upon random sequenc use final step algorithm lp round analysi algorithm lp round alway compar valu comput solut optim lp valu lower bound valu optim solut therefor state follow result qualiti lp relax corollari linear program lp r relax r j r even without constraint relax r show follow section lp r without constraint better relax even instanc p hand relax strengthen ad constraint constraint ensur time period job use capac one machin unfor tunat know use constraint get provabl stronger result qualiti lp relax better perform guarante algorithm lp round notic result theorem theorem directli lead approxim algorithm consid schedul problem reason cannot solv lp r polynomi time due exponenti mani variabl howev overcom drawback introduc new variabl associ exponenti mani time interv length rather polynomi number interv geometr increas size order get polynomialtim approxim algorithm way pay slightli wors perform guarante constant e get approxim algorithm perform guarante e e schedul problem consider elabor section shown idea techniqu present section section modifi construct approxim algorithm correspond preemptiv schedul problem notic that although lp relax lp r allow preemption job relax r j r shown exampl righthand side fact overestim actual complet time job preemptiv schedul correspond solut lp r howev one construct lp relax preemptiv schedul problem replac slightli weaker constraint lead approxim algorithm r j r eapproxim algorithm r j pmtn j w j c j result slightli improv use convex quadrat program relax see schedul releas date consid special case ident parallel machin process requir releas date job j longer depend machin job j process thu denot p j r j respect mention abov alreadi problem p set algorithm lp round turn pure combinatori algorithm take idea use earlier e g chekuri et al reduc ident parallel machin instanc singl machin instanc howev singl machin assum time fast origin machin i e virtual process time job j virtual singl machin p without loss gener p j multipl m weight releas date remain same crucial idea algorithm assign job uniformli random machin then machin sequenc assign job order random apoint respect preemptiv schedul fast singl machin apoint c j a job j respect given preemptiv schedul fast singl machin first point time afract job j complet i e j process time unit particular c j j start time job j slightli vari notion apoint consid full potenti reveal chekuri et al well goeman chose paramet random follow algorithm may seen extens singl machin techniqu ident parallel machin algorithm random assign construct preemptiv schedul virtual singl machin schedul point time among avail job one largest w j p ratio job j j draw j independ random uniformli distribut assign j uniformli random one machin schedul machin job assign nonpreempt earli possibl nondecreas order c notic first step whenev job releas job process if ani preempt releas job larger ratio illustr algorithm random assign found appendix run time algorithm domin effort comput preemptiv schedul first step goeman observ done onlogn time use prioriti queue follow show algorithm random assign interpret reformul algorithm lp round special case ident parallel machin one crucial insight analysi preemptiv schedul virtual singl machin correspond optimum solut lp relax equival lp r introduc variabl jt everi job j everi time period t set m job j process one machin period otherwis notic contrast unrel parallel machin case need machin depend variabl sinc necess distinguish ident parallel machin express new variabl jt old variabl jt set lead follow simplifi lp ignor constraint lp r minim subject jt special case introduc dyer wolsey also indic follow work posner program solv onlogn time goeman show also case m preemptiv schedul construct first step algorithm random assign defin optimum solut lp p result well proof easili gener arbitrari number ident parallel machin lemma instanc problem relax lp p solv onlogn time preemptiv schedul fast singl machin first step algorithm random assign correspond optimum solut theorem algorithm random assign random approxim algorithm proof show algorithm random assign interpret special case algorithm lp round result follow polynomi run time theorem lemma impli first step algorithm random assign simpli comput optimum solut lp relax lp p equival lp r without constraint particular correspond solut lp r symmetr regard machin therefor algorithm lp round job assign uniformli random one machin symmetri also yield job j choic j correl choic algorithm lp round easili seen probabl distribut random variabl j algorithm lp round exactli equal probabl distribut c algorithm random assign thi observ probabl c equal fraction jt p j job j process time interv moreov sinc j uniformli distribut point t equal like obtain c therefor random choic c algorithm random assign altern way choos j done algorithm lp round consequ two algorithm coincid ident parallel machin case particular expect complet time job bound twice lp complet time result follow linear expect point let us briefli compar approxim result section singl machin case relat result work one job instead individu independ j s draw uniformli random assign precis becom goeman random approxim algorithm random jr j j w j c j goeman queyrann schulz skutella wang improv result perform guarante use jobdepend j s algorithm random assign togeth nonuniform choic j s idea also appli parallel machin set get perform guarante better algorithm random assign improv howev depend m refer reader singl machin case detail comprehens treatment detail overview concept apoint machin schedul problem found chapter alreadi argu last section lp r thu lp p relax schedul problem consider corollari relax lp p relax schedul problem bound tight even proof posit result follow corollari tight consid instanc machin one job length unit weight optimum lp complet time m wherea optimum complet time m goe infin ratio two valu converg approxim result ident parallel machin schedul directli gener correspond preemptiv schedul problem preemptiv schedul job may repeatedli interrupt continu later anoth or same machin follow work mcnaughton alreadi nphard sinc alway exist optim nonpreempt schedul correspond nonpreempt problem nphard make use follow observ lemma linear program lp p also relax preemptiv problem proof sinc releas date process time integr exist optim preemptiv schedul preemption occur integr point time take optim schedul construct correspond feasibl solut lp p set process one machin within time interv t easi observ c lp j equal hold job j continu process time interv c thu valu construct solut lp p lower bound valu optim schedul observ lead follow result gener theorem corollari corollari valu nonpreempt schedul construct algorithm random assign wors twice valu optimum preemptiv schedul moreov relax lp p relax schedul problem bound tight approxim algorithm corollari improv upon perform guarante due hall schulz shmoy wein anoth consequ consider follow result power preemption corollari ident parallel machin schedul releas date minim weight sum complet time valu optim nonpreempt schedul twice larg valu optim preemptiv one moreov techniqu algorithm lp round use convert arbitrari preemptiv schedul nonpreempt one valu increas factor given preemptiv schedul construct correspond solut lp p lp r respect valu feasibl solut lp relax lower bound valu given preemptiv schedul use algorithm lp round solut lp r turn nonpreempt schedul whose expect valu bound twice valu lp solut thu twice valu preemptiv schedul start with improv upon bound due phillip et al algorithm random assign easili turn onlin algorithm sever differ onlin paradigm studi area schedul see survey consid set job continu arriv time and time t must construct schedul time without knowledg job arriv afterward particular characterist job i e process time weight becom known releas date order appli algorithm random assign onlin set note job j random variabl j drawn immedi job releas sinc interdepend decis random algorithm hold random machin assign moreov preemptiv schedul first step construct time without need knowledg job releas afterward furthermor follow analysi proof lemma get perform guarante job j start time j respect c thu onlin variant algorithm random assign schedul job earli possibl order nondecreas c addit constraint job j may start time c follow result improv upon competit ratio corollari onlin variant algorithm random assign achiev competit ratio perhap appeal aspect algorithm random assign assign job machin depend job characterist job put probabl m machin techniqu also prove use problem without nontrivi releas date theorem assign job independ uniformli random machin appli smith ratio rule machin approxim algorithm p exist instanc bound asymptot tight proof first notic describ algorithm exactli coincid algorithm random assign lp round respect neg result corollari cannot deriv bound compar expect valu comput solut optim valu lp p rememb use stronger relax includ constraint order deriv bound unrel parallel machin set howev result lemma get sinc second term righthand side equal p j case ident parallel machin sinc lower bound valu optim solut result follow order show perform guarante tight consid instanc ident parallel machin job unit length weight get optim schedul valu assign one job machin hand show expect complet time job schedul construct random machin assign gamma m converg increas m sinc job without loss gener schedul machin job assign random order consid fix job j machin assign to probabl job k j assign machin m case k process j machin probabl therefor get ec j quit interestingli derandom variant algorithm precis coincid wsptrule kawaguchi kyan prove perform guarante list job accord nonincreas ratio w j p j schedul next job whenev machin becom avail detail derandom given section proof given kawaguchi kyan somewhat complic simpler random analysi yield perform guarante algorithm howev weaker result also follow work eastman even isaac gave combinatori lower bound coincid lower bound given lp p latter observ due uma wein williamson derandom present random algorithm comput feasibl schedul expect valu bound term optimum solut schedul problem consider mean algorithm perform well averag howev cannot give firm guarante perform singl execut theoret point view perhap desir determinist algorithm obtain certain perform case one import techniqu derandom method condit probabl method implicitli contain paper erdo selfridg develop gener context spencer idea consid random decis random algorithm one anoth alway choos promis altern done assum remain decis made randomli thu altern said promis correspond condit expect valu solut small possibl random algorithm paper derandom method condit probabl demonstr techniqu gener problem r j r algorithm lp round make use remark lemma consid variant algorithm set assign machinetim pair i t tie broken prefer job smaller indic thu construct determinist assign job machinetim pair analysi algorithm lp round proof lemma give precis express expect valu comput solut upper bound henc sake access derandom modifi algorithm lp round replac last step follow variant schedul machin job assign nonpreempt nondecreas order j tie broken prefer job smaller indic start time job j amount idl time machin exactli j job j assign machin j k job k schedul job j step defin feasibl schedul proof lemma bound idl time start job j machin j thu analysi still work modifi algorithm lp round main advantag modif step give precis express expect condit expect complet time let optimum solut start first step algorithm lp round use argument proof lemma get follow expect complet time job j schedul construct modifi algorithm lp round ikt moreov also interest condit expect js complet time job alreadi assign machinetim pair let k j subset job job k k variabl x ikt r ik indic whether k assign machinetim pair i t enabl us give follow express condit expect js complet time j k get ikt and j k get i t machinetim pair job j assign to i e x follow lemma import part derandom algorithm lp round lemma let optimum solut start first step algorithm lp round k j x fix assign job k machinetim pair furthermor let j j nk then exist assign j machinetim pair i t i e x ekx proof use formula total expect condit expect righthand side written convex combin condit expect e kf jgx theta possibl assign job j machinetim pair i t coeffici jt therefor get derandom version algorithm lp round replac second step x j j i possibl assign job j machinetim pair i t i e x theta ii determin machinetim pair i t minim condit expect i set k kf jg x notic replac step algorithm lp round give access analysi derandom sinc valu schedul construct step alway least good one construct step follow theorem formul algorithm lp round origin step theorem replac step algorithm lp round get determinist algorithm whose perform guarante least good expect perform guarante random algorithm moreov run time algorithm polynomi bound number variabl lp relax proof result follow induct use lemma comput polynomi bound number variabl therefor run time n iter step polynomi bound number derandom also work polynomi time algorithm base intervalindex lp relax describ section sinc lp relax contain polynomi number variabl run time derandom algorithm also bound polynomi input size schedul problem notic that contrast situat random algorithm longer give jobbyjob bound derandom algorithm interest applic method condit probabl derandom algorithm random assign absenc releas date alreadi discuss matter end section essenti follow consider derandom version algorithm alway assign job machin smallest load far consid job order nonincreas thu result algorithm coincid wsptrule analyz kawaguchi kyan intervalindex lp relax mention earlier lpbase algorithm unrel parallel machin schedul suffer exponenti number variabl correspond lp relax lp r howev overcom drawback use new variabl associ exponenti mani time interv length rather polynomi number interv geometr increas size idea earlier introduc hall et al show algorithm lp round turn polynomi time algorithm r j r cost increas perform guarante e techniqu use deriv eapproxim algorithm r given h l chosen smallest integ consequ l polynomi bound input size consid schedul problem let theta l let denot ji j length th interv i e ji simplifi notat defin h gamma follow interpret time job j process machin within time interv or equival y j delta ji jp j fraction job j process machin within consid follow linear program intervalindex variabl minim subject consid feasibl schedul assign valu variabl j defin abov solut clearli feasibl constraint satisfi sinc job j consum unit process machin constraint satisfi sinc total amount process machin job process within interv cannot exceed size final job j continu process c machin h righthand side equat lower bound real complet time thu lp h r relax schedul problem r j r sinc lp r polynomi size optimum solut comput polynomi time rewrit algorithm lp round new lp algorithm lp round comput optimum solut lp h assign job j machineinterv pair i independ random probabl chosen time interv independ random uniform distribut machin schedul job assign order nondecreas j follow lemma reformul lemma b new situat prove analog lemma expect process time job j j schedul construct algorithm lp round equal theorem expect complet time job j schedul construct algorithm lp round delta h delta c lp proof argu almost exactli proof lemma use lemma instead lemma b consid arbitrari fix job j j also consid fix assign j machin time interv again condit expect js start time equal expect idl time plu expect process time machin j start similar argument proof lemma bound sum idl time plu process time thi togeth lemma yield theorem given e choos eapproxim algorithm problem r j r r conclud remark open problem paper develop lpbase approxim algorithm differ schedul problem also gain insight qualiti employ timeindex lp number open problem aris relat research follow wrap distinguish offlin onlin set central offlin result eapproxim r j r exist instanc show underli lp relax lp r without inequ inde better relax howev open whether qualiti lp r with andor better therefor also whether use deriv approxim algorithm perform guarante strictli less neg side word best known approxim algorithm r j r perform guarante we prove e get rid e use convex quadrat relax known limit approxim nonexist polynomialtim approxim scheme unless np situat r j j w j c j similar lp r relax qualiti lp r togeth unknown approxim given improv upon eapproxim section best known cannot pta unless far ident parallel machin concern one import properti approxim algorithm run time onlogn run time recent pta import featur onlogn algorithm capabl work onlin context well bring us second set open problem job arriv time perform algorithm measur term competit optim offlin algorithm theoret utmost import distinguish determinist random algorithm ident parallel machin schedul minim total weight complet time signific gap bestknown determinist lower bound competit ratio bestknown determinist algorithm lower bound follow fact onlin singl machin schedul minim total complet time determinist algorithm competit ratio less ecompetit algorithm emerg gener framework random algorithm understand seem slightli better bestknown random lower bound ee gamma inherit singl machin case random competit algorithm given paper hand acknowledg author grate chandra s chekuri michel x goeman david b shmoy help comment earlier version paper r competit distribut job schedul resourc schedul parallel databas scientif applic improv schedul algorithm minsum criteria approxim scheme minim averag weight complet time releas date approxim techniqu averag complet time schedul approxim algorithm precedenceconstrain schedul problem parallel machin run differ speed determinist load balanc comput network formul singl machin sequenc problem releas date mix integ program bound optim schedul n job processor supermodular relax schedul releas date singl machin schedul releas date rinnooy kan schedul minim averag complet time offlin onlin approxim algorithm schedul minim averag complet time offlin onlin algorithm optim onlin algorithm singlemachin schedul ing worst case bound lrf schedul mean weight flowtim problem rinnooy kan manag scienc random approxim algorithm combinatori opti mizat random algorithm approxim bound gener class preced constrain parallel machin schedul problem improv bound relax parallel machin schedul problem task schedul network sequenc problem releas date cluster job techniqu provabl good algorithm algorithm proof schedul minim total weight complet time perform guarante lpbase heurist lower bound new approxim lp lower bound approxim algorithm gener assign problem approxim random schedul pta minim weight sum job complet time parallel machin variou optim singlestag product ten lectur probabilist method cite person commun low cant go relationship combinatori lpbase approach nphard schedul problem phd thesi cite person commun tr ctr feng lu dan c marinescu r cmax quantum schedul algorithm quantum inform process v n p june nicol megow marc uetz tjark vredeveld model algorithm stochast onlin schedul mathemat oper research v n p august martin skutella convex quadrat semidefinit program relax schedul journal acm jacm v n p march