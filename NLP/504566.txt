t reduct nonclaus theorem prove a paper present ta methodolog new framework gener nonclaus autom theorem prover present complet descript atp classic proposit logic name tasd idea make use implic implic extend natur manner firstord logic nonclass logic method base applic number reduct strategi subformula rewritesystem style order reduc complex formula much possibl branch specif introduc concept complet reduct extens pure liter rule ofth collaps theorem strategi allow limit size ofth search space addit tasd syntact countermodel construct exampl power tasd studi class formula linear proof in number branch either resolut dissolut factor appli appli method formula get proof without branch addit experiment result report copyright elsevi scienc bv b introduct much research autom theorem prove focus develop satisfi tester set claus howev experi point number disadvantag natur specifi realworld problem claus form translat claus form easi handl and although number ecient translat method model usual preserv translat addit clausal method easi extend nonclass logic partial standard claus form defin wider set nonclaus theorem prove research mainli focus either tableaux method matrixbas method also idea base data structur bdd partial support cicyt project number ticc stand transformacion de arbol sintactico spanish translat syntact tree transform use context recent path dissolut introduc generalis analyt tableaux allow tableaux deduct substanti speed up central point ecienc satisfi tester control branch approach focuss previou reduct formula branch much possibl actual branch specif introduc concept complet reduct extens pure liter rule collaps theorem hand anoth interest point design atp capabl build model provid input formula satisfi nonclaus algorithm satisfi test classic proposit calculu name tasd describ input algorithm need conjunct normal form normal form output either unsatisfi satisfi latter case also model formula given determin satisfi given formula firstli reduc size formula appli satisfiabilitypreserv transform choos variabl branch recurs repeat process gener task featur allow obtain use inform origin structur formula make clearer proof extend method nonclass logic wide accept normal form although intent paper introduc requir metatheori tasd current test obtain promis result opinion result test allow consid ta framework reliabl approach autom theorem prove ta idea wide applic appli dierent type logic flexibl provid uniform way prove sound complet and addit easili adapt switch dierent logic possibl without redesign whole prover fact alreadi extend classic first order logic tempor logic multiplevalu logic structur paper follow firstli necessari definit theorem support reduct strategi introduc section later algorithm tasd describ section final compar exampl includ section show class formula linear proof in number branch either resolut dissolut factor appli appli tasd formula get proof without branch overview tasd tasd satisfi tester classic proposit logic therefor use refut atp method and like tableaux method syntact model construct reduct strategi main novelti method respect nonclaus atp like method tasd base disjunct normal form power base intrins parallel design involv transform also fact transform appli one other guid syntaxdirect criteria describ section whose complex polynomi criteria allow us detect subformula either valid unsatisfi equival liter detect liter possibl obtain equisatisfi formula appear onc therefor decreas size problem much possibl branch check criteria give opportun reduc size problem creat one subproblem addit reduct contribut exponenti growth howev import featur reduct enabl exponenti growth rate limit atp tasd sound complet and furthermor model build method gener countermodel natur manner preliminari concept definit throughout rest paper work classic proposit languag connect standard semant v denot set proposit denot set liter liter opposit liter also use usual notion claus cube implic implic negat normal form nnf denot subformula a denot proper subformula a assign applic set proposit variabl v domain assign uniqu extend preserv standard semant whole languag formula said satisfi exist assign case said model a formula b said equisatisfi satisfi i b satisfi formula b said equival denot b assign denot logic consequ final symbol mean truth falsiti transform formula nnf linear by repeat applic de morgan rule doubl negat rule equival b ab follow consid formula nnf addit use associ law consid connect flexibl ariti express like n a n well form formula use standard notion tree address node tree address syntact tree formula mean confus aris subformula correspond node address denot address root node similarli say subformula b mean occurr b a b a denot address node correspond b set liter n set liter express a denot formula obtain substitut a everi occurr c formula b a abc denot result substitut occurr b c n set liter c formula express a c n c n denot formula obtain substitut a i everi occurr c address c nnf express ac formula obtain substitut subtre root c ad inform tree list set idea underli reduct strategi use inform given partial assign extens use quin method unitari assign but show power manner associ nnf two list liter denot the associ list a two set denot c c whose element obtain associ list subformula a list set key tool method reduc size formula analys satisfi list nutshel are respect list implic implic a purpos list twofold firstli transform formula equival smallers one section secondli mean c b set section get equisatisfi smallers one formal definit follow given nnf a recurs defin follow addit element list consid conjunct connect element list consid disjunct connect simplif appli name a a simplifi a simplifi use list lexicograph order facilit present exampl reader interpret set intuit behind definit easi explain sinc intend calcul implic for sinc union implic conjunct set implic conjunct use on exampl ps st inform list section studi inform contain list given formula first theorem state element a implic a element a implic a follow easili structur induct definit b list theorem let nnf liter then a and equival a a and equival a immedi corollari previou theorem follow result structur list corollari everi nnf one one follow possibl b b follow corollari state condit list directli impli satisfi formula satisfi a assign model a hand follow result state condit list assur valid unsatisfi formula corollari let nnf conjunct claus w n disjunct cube proof let use result theorem therefor _ _ similar previou one definit nnf label mean associ node order let us name formula whose list allow determin either valid unsatisfi definit nnf said finaliz one follow condit hold definit applic current formula detect unsatisfi follow three definit refer subformula current formula detect either valid unsatisfi equival liter conclus one follow condit hold disjunct cube conclus one follow condit hold conjunct claus simpl liter rs nil nil qst qr nil figur tree previou result state amount inform list enough detect unsatisfi result appli given formula result one said restrict formal definit follow definit let nnf said restrict satisfi follow condit finaliz subtre either conclus conclus simpl neither leav previou result state nnf repeatedli appli follow sequenc step get restrict formula label substitut subformula b either if b conclus if b conclus liter if b simpl simplifi logic constant soon introduc use law check unsatisfi name chech whether finaliz exampl given formula linear transform allow get nnf equival negat a depict fig for readabl reason leav label figur label a method find node the rightmost branch ssimpl ssimpl subtre substitut formula b fig obtain new applic list get inform up equival formula given follow theorem corollari although input formula suppos contain occurr logic constant introduc reduct see rs nil nil qst r figur tree tb theorem let nnf liter a then a a a a proof let assign prove theorem item sinc a a therefor result obviou second item prove similarli immedi consequ previou theorem follow satisfiabilitypreserv result state use later corollari let nnf a a equisatisfi furthermor model a extens model a follow theorem allow substitut whole subformula c not liter theorem logic constant theorem let nnf c then a c ac a c ac proof theorem c c let interpret rest item prove similarli set previou section inform list use local is inform b use reduc node use theorem section purpos defin new structur set allow globalis inform inform b refin inform ancestor given restrict nnf a defin set c whose element pair filter b list associ subformula b a address b a section see transform formula equisatisfi smaller size one use set definit set base filter oper filter inform list accord theorem specif liter list allow substitut subformula either consequ theorem hand theorem applic still possibl delet rest domin applic theorem fact domin liter delet frame use extens mix collaps theorem given restrict nnf b have filter b is liter a consequ theorem item result frame liter a consequ theorem item resp filter b liter a consequ theorem item result frame liter a consequ theorem item resp definit let restrict formula b set c recurs defin follow liter c c otherwis c subformula b b nil follow exampl present stepbystep calcul c set exampl consid formula whose label tree appear below nil rs r nil ps r nil q q nil qr tree c liter p node frame occurr liter node frame occurr hand c follow c qs qr qr q pq s node substitut occurr q q node substitut occurr p final occurr frame occurr p occurr q frame occurr q b set meaningpreserv result section studi inform extract set state theorem proof use follow fact set given restrict nnf a element c sinc restrict nnf cannot finaliz c b a address leaf sinc c c liter a c list frame liter just note liter frame inform list ancestor follow theorem state that label label also allow substitut subformula either theorem let restrict nnf c c proof suppos c let c subformula address definit c exist formula b c b liter satisfi corollari use c address cannot correspond leaf restrict nnf specif simpl subformula get note that clearli enough prove b bc firstli prove that hypothes a b bc b b bc proof a induct depth b denot db i db commut associ cannot case d would c contradict fact therefor must consequ bc d now use d and therefor ii assum result dx us prove db result obviou induct hypothesi b c bc induct hypothesi case c b similar proof b obtain dualiti final prove b bc consid two possibl abov c b bc theorem bc a theorem c b bc theorem bc b theorem proof similar note theorem introduc meaningpreserv transform allow substitut subformula constant inform given list substitut subformula equival either conclus conclus howev hypothes theorem need true equival either nnf said restrict restrict satisfi follow element c element c nnf label mean label associ root order pair c c note given restrict nnf a calcul c c unsatisfi equival restrict nnf mean substitut determin theorem lawsb set satisfiabilitypreserv result follow result allow use inform set substitut nnf equisatisfi smaller size occurr liter occur a complet reduct theorem begin with corollari state term set follow theorem complet reduct let nnf c satisfi a satisfi furthermor model a extens model a note result allow elimin occurr liter appear name complet reduct use shown exampl generalis pure liter rule introduct set allow generalis wellknown pure liter rule set claus firstli recal standard definit result formula nnf definit let liter occur nnf a liter said pure occur a nnf pure liter satisfi i a satisfi furthermor model a extens model a set allow generalis definit pure liter and consequ get extens lemma abov definit let nnf liter said pure satisfi follow condit occur c occurr c frame next theorem proper extens lemma for appli even occur a theorem generalis pure liter rule let nnf let pure liter let b formula obtain follow substitut i c node substitut ii c node substitut satisfi b satisfi furthermor model b extens model a proof theorem definit set a c addit a b c if addit a therefor consid formula obtain appli equival item a b get liter pure now applic lemma get formula b complet proof rest section introduc necessari definit extend collaps result introduc collaps theorem definit let nnf liter a liter bound follow condit satisfi occurr either c i occurr either c definit set that remark bound a everi leaf liter ancestor maxim sens associ list satisfi one follow condit ancestor none liter occur list associ ascend none liter occur list associ use follow notat proof collaps result liter b theorem collaps let nnf let liter a bound satisfi a satisfi furthermor model a extens model a proof part immedi part let us suppos satisfi let satisfi assign a noth prove so let us consid prove also satisfi assign remark consid formula languag follow set atom is everi leaf either formula liter note is let assign obtain chang valu follow section say occurr mean unfram occurr assign satisfi s coincid rest leav therefor satisfi assign result generalis van gelder collaps lemma treat case occurr bound repres singl liter see detail result drop requir occurr defin subset children node occurr defin subset children node obvious previou result straightforwardli extend case n liter collaps one definit let nnf let n liter a liter n bound follow condit satisfi c occurr n c n i j c occurr n c n i j corollari generalis collaps let nnf let n liter bound satisfi i a n n satisfi furthermor model a n n extens j model a exampl van gelder reduct lemma cannot appli formula exampl collaps sens theorem follow set c c qs qr qr q pq s specif p q bound order state generalis mix collaps need follow definit definit let nnf b let liter a liter bbound follow condit satisfi c a occurr neither frame unfram either c a definit bbound formula a everi leaf belong ascend a theorem mix collaps let nnf liter a bound formula obtain appli follow substitut c substitut c substitut satisfi satisfi addit satisfi assign extens i assign a bound formula obtain appli follow substitut c substitut satisfi satisfi addit satisfi assign extens i assign a proof note consid formula languag set atom is everi leaf either formula a liter let satisfi assign a have theorem everi leaf a have theorem a have theorem consid assign obtain chang valu obvious is s monoton boolean conjunct disjunct convers let satisfi assign let extens theorem everi leaf a everi leaf a proof similar exampl follow formula exampl formula b figur c c therefor first subtre prune obtain tree fig rs nil nil qst r figur tree tc variabl r delet theorem complet reduct for rs c store inform abl gener model if exist input formula addit p bound t therefor theorem mix collaps substitut inform p t store result formula q t finaliz for q specif satisfi model deduc input formula exampl nonvalid for negat collect store inform get follow countermodel two possibl inform split formula finish section introduc satisfiabilitypreserv result prevent branch suitabl hypothes hold split call it result consequ follow wellknown theorem theorem quin satisfi ap ap satisfi further more model ap extens assign model a similarli model ap extens assign model satisfiablepreserv reduct appli restrict conjunct nnf would branch follow definit state situat formula branch split restrict nnf said psplittabl j p j corollari let restrict psplittabl nnf satisfi v ijp p v ij p p satisfi furthermor model p extens assign model a similarli model extens assign model a result seen generalis davisputnam rule follow advantag applic nnf cnf shift nonclass logic interact reduct strategi turn extrem ecient advantag use transform problem branch split two subproblem occurr p substitut logic constant now describ algorithm prover follow step appli previou exampl tasd algorithm section describ algorithm tasd sound complet prove flowchart algorithm appear figur keep mind that tasd determin unsatisfi input formula therefor view refut atp data flow algorithm pair b m b nnf set express liter occur b element defin partial interpret input formula use collectinfo necessari interpret defin follow gener due second condit might defin one interpret depend choos i oper involv algorithm describ below sound one follow result previou section initialis stage nnf user input translat nnf oper nnf specif b nnf equival a b m reduc finaliz root parallel updat spreduc subreduc qbranch unsat model satisfi restrict restrict figur flowchart tasd algorithm updat modul dierent stage algorithm transform subtre input tree tran format label ascend node of transform node delet updat process tree recalcul miss label give output either restrict nnf finaliz formula anoth point view stage updat formula sens prune subtre directli deduc equival either liter restrict oper input restrict pair b m b partial label formula possibl logic constant given nnf b restrictb m c m c restrict formula obtain b indic definit restrict oper input restrict pair b m b restrict formula c restrict formula obtain b indic definit parallel input parallel pair b m b restrict formula parallel _ sinc disjunct satisfi i disjunct satisfi pair independ pass reduc follow modul algorithm reduc modul input reduc label syntact tree restrict nnf stage decreas possibl size b branch use inform provid label label specif label root node allow use spreduc oper substitut b equisatisfi formula proposit variabl elimin label proper subtre x allow use subreduc oper substitut subformula x equival formula symbol list occur exactli onc spreduc oper restrict nnf b said spreduc either complet reduc ie element c pure liter pair bound liter liter bbound liter formula obtain appli follow item c theorem pure b c obtain formula appli b substitut theorem bound c obtain formula appli b substitut theorem bbound c obtain formula appli b substitut theorem subreduc oper input subreduc restrict spreduc nnf a eect describ applic theorem associ commut formal definit need extra terminolog includ below definit let spreduc consid w integ denot m j defin below associ a denot cardin finit set said reduc m associ let reduc consid defin follow applic theorem subreduc subformula b one follow condit hold b reduc liter theorem subreduct preserv mean therefor c obtain travers tree depthfirst order find first subtre b indic abov appli theorem either substitut b b otherwis interest use subreduct make possibl reduct use reduct branch one main novelti method respect other specif unit claus rule davisputnam procedur special case sp reduct also use weak version subreduct domin lemma appli substitut first level depth subformula split oper input split pair b m restrict psplittabl nnf neither spreduc subreduc two task treat independ updat process branch qbranch oper input qbranch pair b m b restrict nnf neither sp reduc splittabl subreduc nnf have two task treat independ updat process experiment test show best result obtain choos p proposit variabl occurr formula analys thi inform easili obtain set collect partial result collectinfo collectinfo oper collect output updat subproblem gener either parallel split qbranch finish execut algorithm output subproblem collectinfo end algorithm output unsatisfi subproblem output m collectinfo end algorithm output satisfi model built m subproblem output a m satisfi end algorithm output satisfi model built first element a sound complet tasd termin algorithm describ obviou appli process reduc size andor number proposit variabl formula specif worst case reduct appli applic process qbranch decreas one number proposit variabl formula now prove sound complet tasd theorem tasdasatisfi satisfi proof suce show process algorithm preserv satisfi process nnf clearli preserv mean translat nnf process modul updat reduc preserv either mean satisfi result section finish proof one keep mind subproblem gener process parallel split qbranch base follow fact disjunct satisfi disjunct satisfi so process collectinfo preserv satisfi well complet exampl exampl consid formula result updatennfa b pr pq r pq now c reduct appli wrt p consequ get updatespreduceb output a unsatisfi therefor valid exampl consid formula ps nil q nil rs r c c reduct modul appli tree is b input qbranch appli qbranch wrt variabl p obtain subproblem c studi below restrict get follow tree nil rs r second subproblem c qs nil rs r c c restrict output fed spreduc formula complet reduc qs c therefor appli substitut q s simplifi logic constant get conclus therefor updatec subproblem gener qbranch output collectinfo produc output a unsatisfi therefor valid exampl let us studi satisfi formula exampl nil rs r nil ps q ps nil c set previou formula follow c c applic restrict substitut result equival formula b nil rs r r q nil qr ps nil c c again c allow substitut obtain equival formula c nil rs r c c therefor updatea spreduc appli liter p q bound substitut occurr p ie restrictspreducec d nil rs r nil rs r c c substitut get rs qr qs nil rs r nil qr formula q bound and spreduc substitut branch address r finaliz nil stage collectinfo end algorithm output a satisfi model determin interpret model a note defin also model a compar exampl put method connect exist approach literatur studi collect t n clausal form taken also use notat proposit variabl consid instanc below claus contain atom form p string s s superscript claus alway form sequenc n subscript liter exactli sequenc sign preced liter claus n built n ad posit neg easi see n n proposit variabl n claus contain n liter cook reckhow describ famili t n n show studi satisfi intract analyt tableaux handl linear time resolut murray rosenth show dissolut factor provid proof class linear number input claus t n appli tasd test satisfi n get subreduc instanc formula reducet express equival formula thu restrict reduc previou tree four conclus subtre name conjunct p simplifi four leav get therefor use tasd detect unsatisfi formula n branch all conclus present nonclaus satisfi tester name tasd classic proposit logic main novelti method dierenc approach reduct appli formula dynam select appli subformula like rewrit system follow syntaxdirect criteria specif introduc extens pure liter rule collaps theorem fact increas ecienc decreas branch exampl power tasd studi class formula linear proof in number branch either resolut dissolut factor appli hand appli method formula get proof without branch acknowledg author would like thank jose mesegu daniel mundici valuabl comment earlier draft work r reductionbas theorem prover valu logic reduc sign proposit logic rel e reduct techniqu translat claus form use prime implic implic reduct techniqu tempor logic dissolut make path vanish rel meri path dissolut method analyt tableaux method logic satisfi tester nonclaus proposit calculu tr satisfi tester nonclaus proposit calculu dissolut rel merit path dissolut method analyt tableaux implic reduct techniqu tempor logic ctr jun wenjiang li da ruan yang xu filterbas resolut principl latticevalu proposit logic lpx inform scienc intern journal v n p februari p cordero g gutirrez j martnez i p de guzmn new algebra tool automat theorem prover annal mathemat artifici intellig v n p decemb p cordero g gutirrez j martnez i p de guzmn new algebra tool automat theorem prover annal mathemat artifici intellig v n p decemb