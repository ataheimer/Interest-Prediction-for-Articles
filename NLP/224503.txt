t synthesi pipelin dsp acceler dynam schedul a abstract construct complet system silicon applic specif dsp acceler need speed execut high throughput dsp algorithm paper methodolog present synthes high throughput dsp function acceler processor contain datapath highli pipelin bitparallel hardwar unit emphasi put definit control architectur allow effici runtim schedul dsp algorithm highli pipelin data path methodolog illustr mean fft butterfli acceler block b introduct c omplex digit system videophon termin figur typic consist heterogen mix hardwar block processor core gener purpos macro block dedic acceler proce sor acceler block requir execut high perform dsp function motion estim dctidct function paper concentr gener applic specif acceler processor highlight design issu architectur char acterist requir acceler processor are ffl high throughput requir impos usag pipelin data path ffl area save hardwar share differ microinstruct ffl acceler processor embed overal system architectur p schaumont b vanthournout i bolsen in teruniversitari microelectron center imec kapeldreef b leuven belgium h de man interuniversitari microelectron center professor katholiek universiteit leuven belgium control data variabl length coder variabl length decod motion estim reconstructor compressor acceler compon micro control video ram io fig architectur video phone ffl acceler function execut manifest rate nonmanifest rate data introduct interv dii exampl former process data stream ad convert exampl latter process data processor core insid system support nonmanifest dii allow split develop system control compon schedul acceler processor schedul softwar execut system control compon thu revis even acceler processor develop essenti featur presenc today complex algorithm seen system control softwar acceler compon function call execut call spawn system control thread acceler execut acceler oper resynchron system control thread scheme use commerci numer coprocessor compon present synthesi system allow gener compon much higher complex process power ii overview work autom synthesi system pipelin datapath report previous pisyn soda sehwa assum fix dii therefor fix runtim schedul compil time acceler function fix rate assumpt hold flexibl need purpos work concentr follow issu acceler algorithm defin mean signal flow graph sfg acceler datapath defin set applic specif unit asu asu bitparallel hardwar oper abl execut one microinstruct microinstruct defin subset cluster sfg cluster correspond one microinstruct set cluster cover complet sfg way acceler algorithm correspond sequenc microinstruct effici interconnect network consist pipelin regist take care move data one asu without creat commun bottleneck simpl fast control structur defin organ runtim sequenc microinstruct asu final complet design flow algorithm specif implement defin synthesi includ pipelin retim asu compon reli exist data path synthesi tool retim tool instruct bu acceler control acceler datapath doack done pipelin regist fig architectur acceler processor design flow integr softwar system call dolphin next section detail design step realis data path architectur compos asu overview synthesi process examin design step lead acceler datapath iiia iiic follow thi architectur runtim control elabor iiid oper control explain iiie final describ architectur method demonstr iv synthes quadratur mirror filter bank use imag encod iii acceler architectur figur show overal structur pipelin pro cessor two part distinguish acceler data path acceler control acceler datapath consist asu interconnect buse pipelin regist connect run pointtopoint use latch regist requir readwrit signal avoid way interconnect strategi avoid either multiplex bu interconnect storag regist becom pipelin bottleneck acceler control steer system level control processor interfac also gener control signal acceler datapath well strobe signal input output buse dat apath acceler control provid loop branch support sequenc microinstruct datapath a acceler data path differ step taken design acceler data path illustr figur along small exampl use sfg specif acceler func tion acceler data path defin cluster sfg cluster contain function oper addit shift els signal flowgraph input output sdf semant assum cluster graph must direct acycl graph dag impli loop sfg algorithm feedback loop must enclos within one cluster cluster assign hardwar cluster contain function oper assign asu op erat cluster contain inputoutput oper assign inputoutput strobe sfg data preced cross border cluster defin interconnect buse acceler data path set cluster assign one asu defin asu microinstruct set composit consist local control lc bitparallel data path local control handl microinstruct decod local decis make consequ global decis make thu condit evalu circuitri acceler control asu bitparallel data path obtain use cathedr data path synthesi tool capabl map sfg oper insid cluster bitparallel data path use share possibl avail bitparallel oper correspond sfg oper list tabl i oper librari parametr descript instanti standard cell synthesi asid asu definit tool retim softwar use insert pipelin regist asu data path also netlist optim tool use tune instanti bitparallel oper applic specif one io time behavior data control port asu known time view express number clock cycl repres latenc asu input consumpt output product find number interconnect pipelin regist proceed follow cluster latenc express number clock cycl need evalu cluster use cluster latenc oper length operatormicroinstruct tupl conflict cluster graph schedul cluster latenc equal asu latenc increment one increment one ensur least one pipelin regist present interconnect bu two asu cluster maximum combinatori delay critic path length acceler datapath therefor compli time spec use individu asu list schedul algorithm use perform or dere cluster schedul also use model microinstruct sequenc overal data path tabl one row per asu one column per clock cycl structur call reserv cluster cluster sfg cluster assign asu definit cluster per asu asu structur time view per asu cluster schedul schedul reserv tabl construct interconnect extract reserv tabl interconnect control gener acceler control ip ip op op io io m m in_ ina io io assign cluster asu structur reserv tabl fig design flow acceler processor tabl basic data structur design acceler control b cluster schedul cluster schedul algorithm appli influenc control specif the reserv tabl interconnect specif the number pipelin regist interconnect bu wish distinguish schedul appli obtain data path interconnect schedul need decid upon dii runtim schedul author fix dii compil time appli sophist techniqu arriv minimum cost solut interconnect dii unfortun cannot appli problem hand acceler requir dii select runtim control present abl so within perform capabl pipelin therefor consid schedul use obtain data path interconnect current list schedul algorithm use approach take microinstruct resourc conflict account order ob avail bitparallel asu oper sfg oper asu oper descript multfbb booth multipli delay regfbb regist delay regfilefbb regist file fix hardwir shift oper variabl shiftfbb barrel shifter compfbb comparison addsubfbb flag gener detect z muxfbb signal select increment tain optim solut one two approach ffl optim desir dii shown arbitrari dii dii cycl pipelin obtain provid perform pipelin exceed adequ number data path interconnect delay introduc ffl optim interconnect cost minim number pipelin regist resid interconnect buse done polynomi time time dii rate longer arbitrarili chosen two method conflict goal depend applic one might prefer one other c cluster sfg cluster assign process lead definit data path oper detail section current state art cluster strategi indic singl unifi approach obtain cluster automat rather ideal approach believ toolbox function aid design cluster sfg therefor current approach sfg cluster assign acceler processor manual pro cess section identifi cost involv process deriv guidelin steer it shown that applic area dsp small cluster introduc excess multiplex cost therefor larg cluster prefer first hardwar cost insid asu processor identifi hardwar cost primarili defin activ silicon area three sourc activ area ffl data path cost determin oper area need implement sfg oper ii cell area equival nand gate cell function locat gatesbit fadd full adder data path mux multiplex share dff msflipflop interconnect la latch interconnect ffl multiplex cost multiplex area need implement hardwar share oper ffl interconnect cost consist area pipelin regist carri signal one cluster next sfg cluster cluster assign operationoper bind fix multiplex cost data path cost determin set cluster assign asu interconnect cost express number sfg signal cross boundari cluster lifetim signal latter determin cluster schedul hardwar share effect save data path cost exce extra cost introduc share oper shown tabl except delay oper shareabl delay oper need implement algorithm state common dsp algorithm show need larg shareabl cluster size within target acceler processor architectur tabl ii hardwar cost differ oper express term equival input nandgat target technolog figur obtain averag properti two standard cell cmo li b c b b c b c fig share cost exampl brari bitparallel oper introduc data path synthesi tool describ term cell exampl rippl carri adder chain fadd cell multipli matrix fadd cell tabl also list multiplex oper interconnect opera tor flipflop latch propos acceler use edgesensit flipflop interconnect consid sfg snippet figur assign two differ way leftmost one intend share area cost gatesbit rightmost one share addit area cost gatesbit implement per formanc rightmost implement half critic path leftmost one need two clock cycl perform oper conclud share use sfg multiplex cost exce share gain oper area cost get higher exampl use multipli share might provid area gain data path synthesi tool tri maxim cluster subgraph share among differ micro instruct share area gain exceed multiplex cost given natur dsp algorithm howev easi task ffl complex oper often expand simpl one constant multipl implement expans addshift oper irregular structur structur difficult share ffl mani oper like shift bitselect bitrevers implement hardwir virtual nil oper size ffl dsp algorithm algorithm delay key element delay cannot share cut maxim cluster subgraph share conclud cluster process doack done exampl interfac behavior mfig processor interfac behavior done care design know applic hand best posit it tabl ii show one might inflect use latch la instead flipflop dff order gain interconnect area done follow reason use latch separ pipelin stage doubl phase clock scheme half pipelin stage fill maxi mumthroughput get perform edg trigger flipflop need dual latch pipelin stage figur tabl indic duallatch solut better flipflop solut d acceler control discuss data path synthesi process focu acceler control acceler control must perform asu microinstruct sequenc accord cluster schedul repres reserv tabl figur oper control illustr exampl reserv tabl deriv previou exampl top below process three sfg frame shown term processor interfac pin time run left right one clock cycl time processor interfac make use three signal do doack done pin use initi process one sfg frame repres acceler control one reserv tabl instanc command accept mean hardwar avail execut schedul reserv tabl next cycl exampl pin held high consecut clock cycl accept command acknowledg doack output second clock cycl new reserv tabl instanc interleav first one third fourth cycl howev interleav fail acknowledg failur origin hardwar share asu ieee transact larg scale integr vlsi system call pipelin conflict thu acceler control take care two key function ffl runtim schedul asu microinstruct detect conflict ffl interleav acceleratorlevel instruct lead acceler control hardwar present figur three part discern ffl microinstruct shifter ffl conflict control ffl processor interfac microinstruct shifter use store reserv tabl initi asu microinstruct bu in putoutput strobe proper shift regist correspond one row reserv tabl start signal load one instanc reserv tabl shift regist order obtain interleav shown earlier start signal also fed conflict control hardwar conflict model signal occur pipelin conflict readi output whenev output high new reserv tabl interleav microinstruct shifter output low interleav possibl start signal depend two condit ffl user request acceler execut pin processor interfac ffl conflict control indic shift regist control readi accept new initi therefor start deriv readi signal mean gate two remain processor interfac signal easili deriv start signal done output model latenc acceler obtain start simpl delay processor interfac make standalon slave oper possibl standalon oper dopin tie logic high case process rate fix conflict control process frame initi whenev pipelin conflict occur e control work conflict control contain core dynam schedul properti acceler simpl control strategi architectur use conflict control due davidson approach base dynam model data path resourc conflict instanc conflict occur initi reserv tabl call forbidden latenc exampl reserv tabl figur initi introduc pipelin conflict due asu two cycl initi initi latenc defin delay clock cycl two succes initi order satisfi resourc constraint initi latenc cannot equal forbidden latenc achiev dynam model pipelin conflict mark indic bit vector shift right time proce bit vector call collis done doack start micro instruct shifter conflict control processor interfac readi reserv tabl shift reg instruct bu acceler control fig acceler control vector number right left start bit posit vector indic wether pipelin conflict occur within clock cycl henc bit posit one indic wether conflict occur next cycl thu wether new initi possibl next cycl initi mark forbidden latenc found reserv tabl result initi collis vec tor upon new initi initi collis vector mark current collis vector take initi collis vector state diagram construct state indic initi instanc edg carri initi latenc state diagram discuss literatur state mark collis vector initi state carri initi collis vector repres moment initi empti pipelin posit within collis vector zero bit initi latenc deriv initi state exampl state new initi possibl alreadi next cycl moment initi collis vector shift one posit correspond one cycl delay time pipelin conflict introduc new initi annot collis vector ore initi collis vector current one result new collis vector state state initi latenc least cycl requir bit posit nonzero collis vector next initi return us initi state morest transit diagram forbidden latenc collis vector shift reg conflict control no conflict initi collis vector clock cycl start readi fig construct conflict control state diagram model everi valid pipelin state therefor cycl within state diagram valid schedul use initi collis vector simpl hardwar structur gener state diagram con struct collis vector model mean shift regist upon initi new version initi collis vector ore current collis vector structur use conflict control advantag use control architectur ffl static dynam schedul avail within control architectur correspond standalon slavemod oper use runtim conflict model possibl schedul support ffl control regular structur small fast shown care design reduc critic path one gate delay ffl allow parallel pipelin execut sever sfg frame iv design exampl next present synthesi environ call dolphin support synthesi acceler processor cours synthesi exampl acceler exampl concern acceler typic use imag encod algorithm twochannel quadratur mirror filter qmf bank filter decompos fullrat signal two halfrat subsign ensembl subsign use reconstruct origin signal basic theori qmf bank expos present recent work figur sketch system architectur channel qmf bank signal inz decim two stream consist even odd inz sampl fed two digit filter h z h z two decim signal z z produc inz z k z k z k fig twochannel qmf bank filter impuls respons h z h z mirror symmetr relat reconstruct properti hold output signal z z wish gener acceler processor filter one input port alloc feed input signal inz one output port extract z z way data rate input output port balanc also want acceler processor minim latenc maxim data throughput behavior descript qmf filterbank silag behavior languag shown list design exampl use filter coeffici tap fir case describ quantiz bit acceler synthes accord design flow shown figur cluster sfg definit asu datapath evalu cluster sched ule control synthesi target implement cmo standard cell technolog purpos cluster silag descript convert graph format upon user interact indic desir cluster cluster perform indic figur ffl input oper inz assign io tupl io m ffl split inz odd even stream requir one delay oper assign asu ieee transact larg scale integr vlsi system defin w fix defin w fix begin fig qmf silag descript inz z io io io z k fig cluster qmf bank ffl filter decim stream group singl cluster assign asu microinstruct tupl asu share introduc maxim throughput requir irregular structur constant tap multipl ffl two output oper assign io tupl io m io m assign express share output signal z z output port follow cluster asu definit done follow step perform ffl oper select oper netlist gener includ expans oper expans constant filter tap multipl canon sign digit csd addshift oper ffl map oper netlist abstract standard cell librari ffl standard cell netlist optim includ redund remov retim buffer retim tool allow specifi desir target clock exampl target clock mhz chosen next evalu cluster schedul use time view obtain asu definit conflict model shown left figur presenc decim oper input descript visibl multiplex switch tool cope expans step enumer path cluster graph sinc graph acycl trivial oper result conflict model shown right figur use schedul obtain list schedul reserv tabl shown figur construct data structur fix collis vector defin state transit diagram shift regist control well conflict control synthes it final control datapath interconnect result cicruit properti summar tabl iii complet design flow support softwar script allow short editcompiletest cycl behavior descript optimz netlist exampl cycl take less minut hp v conclus paper strategi tool present integr data path synthesi retim tool system compon design environ ffl propos strategi allow gener small effici control pipelin system ffl addit implement system level data model offer processor interfac expand fig qmf multir expand conflict model collis state transit diagram reserv tabl fig qmf reserv tabl differ schedul avail within one control architectur allow nonmanifest data rate integr environ design acceler call dolphin develop current use design acceler part system videotelephoni compress advanc catv modem part acknowledg author wish thank karl van rompaey serg vernald imec construct remark write paper work also found netlist optim tool develop luc rijnder zohair sahraoui imec librari work veerl derudd imec test work marys wouter imec iii circuit properti qmf bank acceler compon cell activ area critic mm data path control interconnect technolog cmo standard cell r vlsi architectur video compress schedul hardwar share pipelin data path design pipelin datapath synthesi system digit signal process issu cpu coprocessor commun synchron sehwa softwar packag synthesi pipelin behavior specif cathedraliii architecturedriven highlevel synthesi high throughput dsp applic combin hardwar select pipelin highperform datapath design synthesi high throughput dsp asic use applic specif data path static schedul synchron data flow program digit signal process area optim bitparallel custom data path time optim bitlevel arithmet transform pl schedul pipelin synthesi forc direct schedul automat data path synthesi function requir extend schedul tool a formal approach schedul problem high level synthesi maximum perform pipelin switchabl reserv tabl minim number delay buffer synchron pipelin system synthesi acceler datapath high throughputsign process applic the counterflow pipelin processor architectur effect control pipelin comput the architectur pipelin comput pipelin architectur quadratur mirror filter bank mband extens perfectreconstruct techniqu a close form express effici class quadratur mirror filter fir impl ieee transact larg scale integr vlsi system mentat fast low roundoff implement quadratur mirror filter subband cod ing dsp specif use silag languag tr cathedraliii pipelin architectur ctr miodrag potkonjak kyosun kim ramesh karri methodolog behavior synthesisbas algorithmlevel design space explor dct case studi proceed th annual confer design autom p june anaheim california unit state andrea koch effici integr pipelin ip block automat compil datapath eurasip journal embed system v n p januari