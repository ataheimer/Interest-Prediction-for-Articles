t discret lotsiz schedul batch sequenc a discret lotsiz schedul problem one machin sequencedepend setup time setup cost solv singl machin schedul problem term batch sequenc problem relationship lotsiz problem batch sequenc problem analyz batch sequenc problem solv branch bound algorithm acceler bound domin rule algorithm compar recent publish procedur solv variant dlsp found effici number item larg b introduct certain manufactur system signific amount setup requir chang product one type product anoth schedul product line chemic engin product increas batch order avoid setup howev demand differ product aris differ point time within plan horizon satisfi dynam demand either larg inventori must kept product run larg batch frequent setup requir inventori level kept low signific setup time consum scarc product capac tend complic schedul problem discret lotsiz schedul problem dlsp wellknown model situat dlsp demand item dynam backlog allow prior product run setup requir setup cost setup time depend either next item sequenc independ sequenc item sequenc depend product meet present futur demand latter case also incur hold cost plan horizon divid finit number short period period one item produc setup made all noth product optim product schedul dlsp minim sum setup hold cost relationship dlsp schedul model gener motiv us solv dlsp batch sequenc problem bsp deriv bsp instanc dlsp instanc solv dlsp bsp demand item interpret job deadlin process time job correspond demand item group one famili item dlsp famili bsp job must process singl machin time zero respect deadlin switch job one famili job anoth famili incur sequenc depend setup time setup cost earli complet job penal earli cost correspond hold cost dlsp optim schedul bsp minim sum setup cost earli cost dlsp first introduc lasdon terjung applic product schedul tire compani complex result dlsp extens examin salomon et al close relationship dlsp job class schedul problem emphas broader view lotsiz schedul problem given pott van wassenhov approach base lagrangean relax propos fleischmann dlsp without setup time fleischmann util idea solut procedur vehicl rout problem solv dlsp sequenc depend setup cost dlsp sequenc independ setup time setup cost examin cattryss et al recent work salomon et al propos dynam program base approach solv dlsp sequenc depend setup time setup cost optim result serv benchmark approach solv bsp complex schedul problem batch setup time investig bruno downey monma pott bruno downey show feasibl problem nphard setup time nonzero solut procedur schedul problem batch setup time studi unal kiran ahn hyun mason anderson feasibl problem bsp address effect heurist propos algorithm minim mean flow time propos webster baker survey recent result deriv properti optim schedul variou batch problem contribut paper twofold first solv dlsp bsp state equival model solv either dlsp bsp second present algorithm solv bsp faster known procedur solv dlsp paper organ follow present dlsp bsp section provid numer exampl section relationship model analyz section section present timet procedur convert sequenc minimum cost schedul section describ branch bound algorithm solv bsp comparison algorithm solut procedur solv variant dlsp found section summari conclus follow section model formul dlsp present sequenc depend setup time setup cost refer problem sdstsc sdstsc includ dlsp sequenc independ setup sistsc sequenc depend setup cost zero setup time sdsc gener dlsp sequenc independ setup cost zero setup time cf fleischmann special case tabl paramet dlsp index item famili denot idl machin index period q it demand item period hold cost per unit period item st gi setup time item g item i gi setup cost per setup period item g item i sc gi setup cost item g item i st gi g tabl decis variabl dlsp it item produc period t otherwis time period machin setup item period t previou item item g otherwis it inventori item end period dlsp paramet given tabl item famili dlsp bsp index i hold cost per unit item period product fulfil demand q it item period t setup cost sc gi distribut maxf st gi g setup period defin perperiod setup cost sc p gi decis variabl given tabl set product take place item period t v setup item g item period t it denot inventori item end period t mix binari formul tabl object minim sum setup cost sc p per setup period st gi inventori hold cost constraint express inventori balanc all noth product enforc constraint period machin either produc full unit capac undergo setup item idl ie idl period st instanti v git appropri constraint coupl setup product whenev st gi item produc period item g period tgamma gamma decis variabl v st gi constraint enforc correct length string setup variabl v gitgamma st gi howev st gi exclud case set v done constraint constraint prevent backlog final variabl i v gi i initi constraint due all noth product write dlsp schedul term perioditem assign string specifi action period ie st gi bsp famili schedul problem cf eg webster baker paramet cf tabl relat n famili index i number job n famili total number job j tabl model dlsp min subject st st st gi st gi st gi st gi tabl paramet bsp number job famili i number job denot jth job famili process time jth job famili ij deadlin jth job famili w ij earli weight per unit time jth job famili number tabl decis variabl bsp sequenc job denot job posit k c ij complet time job i idl time job i otherwis tabl model bsp min zbsp subject st kgamma i k st i k st kgamma i k st kgamma i k one unit famili inventori one period time setup time st gi setup cost sc gi given pair famili g i set job partit famili i jth job famili index tupl i j associ job i process time p ij deadlin ij weight w ij job weight w ij proport quantiti process time job proport weight deriv h p ij put tupl bracket index job attribut tupl denot job one entiti decis variabl given tabl sequenc denot process order job denot job posit k togeth complet time c ij job obtain schedul oe conceptu model formul bsp present tabl zbsp oe denot sum earli setup cost schedul oe minim object earli weight w ij setup cost sc kgamma i k incur job differ famili job schedul time zero deadlin respect sequenc machin well setup time done constraint constraint one idl time two consecut job setup time st i k idl machin rather sequenc depend setup time st kgamma i k initi begin end schedul given respect remark bsp dlsp paramet assum that setup time setup cost satisfi triangl inequ ie st gi st gl st li sc gi setup within famili ie st teardown time cost ie st binari demand dlsp ie q it f g job one famili label order increas deadlin deadlin interfer ie remark state benefici perform two setup order accomplish one mason anderson show problem nonzero teardown easili convert problem sequenc depend setup zero teardown motiv st i st gi analog setup cost thu third term object alway nonneg assumpt anticip all noth product item cf also salomon et al basic assumpt job one famili consid schedul c main observ motiv us consid dlsp special case bsp q it matrix spars especi setup time signific basic idea interpret item dlsp famili bsp regard nonzero demand dlsp job deadlin process time bsp order solv dlsp special case bsp deriv bsp instanc dlsp instanc follow way setup time setup cost bsp comparison equival bsp solut procedur dlsp instanc dlsp solut procedur bspdlsp bsputdlsp solut transform figur comparison dlsp bsp dlsp ident job attribut bsp instanc deriv q it matrix definit defin bsp instanc unit time job deriv dlsp instanc famili n job entri q denot job i defin bsp instanc deriv dlsp instanc sequenc consecut one q it matrix ie q number time sequenc consecut one appear item defin n figur provid framework bspdlsp comparison transform dlsp instanc bsp instanc compar perform solut procedur qualiti solut differ approach follow dlsp decis made anew individu period t repres decis variabl it v git cf tabl bsp decid schedul job ie decid complet time job bsp dlsp address underli plan problem use differ decis variabl bruggemann jahnk make anoth observ concern transform instanc dlsp instanc may polynomi bound size size bspdlsp instanc polynomi bound account argu q it matrix reason encod dlsp instanc sens garey johnson bspdlsp describ problem instanc concis way numer exampl section provid exampl illustr gener bsputdlsp bspdlsp also refer exampl demonstr certain properti bsp figur illustr equival model correspond paramet setup time setup cost hold cost given tabl figur show demand matrix q it dlsp job respect deadlin bsputdlsp bspdlsp tabl numer exampl setup hold cost st bsputdlsp oe ut bsputdlsp oe ut bspdlsp oe figur dlsp bsputdlsp bspdlsp tabl bsputdlsp instanc solut bsputdlsp interpret entri one job i j deadlin ij process time p ij equal one job summar bsputdlsp paramet tabl optim dlsp schedul h string figur with entri f a g idl time product differ item respect schedul repres oe ut bsputdlsp display tabl schedul optim object function valu zbsp oe ut bspdlsp consecut one demand matrix q it link one job number job thu smaller bspdlsp bsputdlsp instanc job bsputdlsp link one job bspdlsp compar oe ut b oe b howev bspdlsp schedul cannot figur sinc need unit time job bspdlsp let cost paramet cost famili sc optim dlsp schedul oe b optim bspdlsp schedul again optim object function valu zbsp oe b exampl show schedul obtain differ model next section formal analyz equival dlsp bsp relationship bsputdlsp bspdlsp dlsp bsp distinguish sequenc schedul bsp schedul may insert idl time process order fulli describ schedul follow say consecut sequenc job i sequenc next posit consecut schedul job i idl time job ie term bracket constraint equal zero sequenc bsp consist group group order set consecut sequenc job belong famili hand schedul consist one sever block job one block consecut schedul differ block separ idl time to distinguish setup time job one block may belong differ famili block group may consist singl job exampl refer figur oe c oe consist five group oe c form two block oe one block given sequenc bsp schedul oe call semiact c ij constrain either ij start next job job schedul later rightshift semiact schedul oe deriv oe sequenc constraint equal p k set zero cost zbsp oe lower bound cost zbsp oe bsp schedul oe oe optim schedul relax bsp constraint omit howev semiact schedul may idl time may benefici schedul job earlier ie leftshift job save setup which concern timet procedur section model save setup batch job dlsp batch noninterrupt sequenc period product take place item ie bsp job one group consecut schedul without setup batch batch must preempt idl time figur group famili form two batch schedul oe c wherea group one batch oe b call sequenc schedul oe eddwf sequenc schedul job one famili sequenc schedul nondecreas order deadlin where eddwf abbrevi earliest deadlin within famili order job eddwf call order batch schedul problem monma pott consid eddwf sequenc reduc search space branch bound algorithm describ section first consid bsputdlsp instanc follow theorem state bsputdlsp restrict eddwf sequenc theorem bsputdlsp schedul oe convert eddwf schedul oe cost proof recal job one famili weight process time schedul oe let a b c repres part oe consist sever job process time part consid schedul job order eddwf ie schedul object function valu w ij complet time part a b c chang interchang job repeat oe eddwf schedul complet proof dlsp schedul bsputdlsp schedul oe call correspond solut defin decis schedul schedul oe correspond solut point time follow hold i oe job process belong famili setup perform oe iii machin idl oe figur give exampl correspond solut correspond oe ut b correspond oe ut b alway deriv entri oe complet time oe alway deriv oe eddwf schedul theorem schedul oe feasibl bsputdlsp correspond solut feasibl dlsp oe object function valu proof first prove constraint dlsp bsputdlsp defin solut space dlsp constraint stipul q it enforc t sequenc machin sequenc depend setup time taken account describ constraint bsp achiev constraint schedul job time zero deadlin job process singl machin take account sequenc depend setup time second prove object function assign object function valu correspond solut oe cumul inventori item over plan horizon equal cumul earli famili i job weight equal hold cost ie h bsputdlsp thu term it equal correspond solut oe explan necessari show correspond solut oe setup cost consid setup famili g g without idl time oe sc st gi g st gi consecut one v git enforc hand case insert idl time setup idl machin enforc decis variabl p k bsp st i consecut one v it thu term equal correspond solut oe therefor correspond solut oe incur hold setup cost prove theorem consequ theorem schedul oe optim bsputdlsp correspond solut optim dlsp constitut equival dlsp bsp bsp utdlsp instanc thu solv dlsp solv bsputdlsp gener howev attract option solv bspdlsp number job smaller definit schedul oe let product start famili start time first job batch let inventori famili build c ij ij schedul oe call regen product start famili long still inventori famili i term regen stem regener properti found wagner whitin for similar idea cf eg vickson et al regen schedul also eddwf schedul revers true schedul oe regen job i batch hold furthermor regen bsputdlsp schedul oe job consecut one q it schedul consecut recal instanc oe ut b oe b figur henc regen bsputdlsp schedul repres bspdlsp schedul well figur schedul oe regen batch famili start still inventori first show lose feasibl restrict regen schedul onli theorem oe feasibl bsputdlsp bspdlsp schedul also feasibl regen schedul oe oe oe figur regen schedul proof schedul oe let b i famili first last job part b a belong consid nonregen schedul oe ie one batch though c consid schedul i interchang i one batch oe feasibl leftshift b violat feasibl furthermor due triangl inequ st i b st i st ii b thu b leftshift p ij time unit without affect ca interchang job repeat oe regen prove theorem illustr construct regen schedul depict figur interchang i b obtain oe regen schedul oe unit process time need proof theorem fact two result first find feasibl schedul may consid bspdlsp instead bsputdlsp second bspdlsp need search regen schedul find feasibl schedul theorem stronger result one found salomon et al unal kiran state first result moreov hold cost equal next theorem extend result optim schedul theorem oe optim bsputdlsp bspdlsp schedul h constant i also optim regen schedul oe proof analog proof theorem must consid chang object function valu i interchang without loss gener let h zbsp oe zbsp oe denot object function valu oe oe part b leftshift wb pb process time part b pb b may contain setup well interchang b i j object chang follow due triangl inequ setup cost setup time oe larger oe ie gammasc i gamma explain i leftshift b p ij rightshift i j pb wb pb explain ii thu zbsp oe zbsp oe prove theorem consid regen schedul achiev consider reduct search space summar far obtain follow result dlsp bsp equival bsputdlsp feasibl bspdlsp impli feasibl dlsp equal hold cost optim bspdlsp schedul optim dlsp instanc unequ hold cost solv theoret differ bspdlsp dlsp small effect comput result section show almost alway optim regen bsputdlsp schedul found solv bspdlsp timet procedur given sequenc given sequenc follow timet procedur decid partit block equival consecut sequenc job consecut schedul bsp model formul tabl job posit k start new block p block preced job start new block posit k save earli cost expens addit setup cost figur earli cost oe b higher oe c save one setup oe b timet procedur start semiact schedul leftshift job find minimum cost schedul consid exampl figur sequenc semiact schedul oe given figur first consid two special case omit constraint bsp so group batch idl time may preempt batch timet trivial semiact schedul optim given sequenc job rightshift decreas earli cost and setup cost determin oe timet also trivial earli weight zero ie h case leftshift job without increas earli cost result schedul one block eg schedul oe figur one block job leftshift sc gi sc i sc setup cost minim job schedul block optim schedul consist one block gener case need definit block cost bc kk cost contribut block posit k k ie bc k block size bs k number job consecut schedul job i includ instanc figur bs let denot f k b cost schedul posit k j bs k cost minimum cost schedul bs k correspond block size posit k recurr equat determin f k bs f bb oe posit k figur semiact schedul tabl comput equat exampl figur f equat take minimum cost bs maximum block size posit k and new block start kb given block size b f k b sum block cost posit k posit k next block minimum cost f kb basic equat must comput everi sequenc howev simplif possibl two job consecut schedul semiact schedul optim increment bs bs equat need evalu consequ semiact schedul one block timet trivial group oe equal one batch whole schedul form block setup sequenc independ minimum cost schedul deriv less effort follow let group size gs k posit k denot number consecut sequenc job posit r k belong famili job i k j k then sequenc independ setup equat must evalu gs k reason follow job differ group leftshift block save setup cost then consecut group famili g would need sc hold sequenc independ setup therefor need decid leftshift within group exampl comput equat given tabl semiact schedul figur see cost paramet tabl schedul oe contain idl time determin f bs k posit k k j consid job posit figur posit semiact schedul one block increment bs k denot entri tabl job oe insert idl time posit d differ block size must consid find minimum cost schedul tabl find f ie start new block posit split group two batch done oe c figur object function valu add sc f obtain cost zbsp oe c sequenc algorithm section present branch bound algorithm solv bsp optim denot sabsp job sequenc backward ie stage job assign posit j stage posit stage posit assign job last posit sequenc addit spartial schedul oe also assign complet time job partial schedul call complet oe extend oe schedul oe schedul job write examin eddwf sequenc preced constraint job preced graph exampl figur shown figur use eddwf order figur eddwf preced graph backward sequenc tabl attribut partial schedul consider stage ub upper bound object function valu current best schedul coe cost oe without setup i us set job alreadi schedul unschedul spartial schedul oe ui set famili job us belong job form first block oe earli weight job g oe ie decid fact stage famili schedul job elig stage preced relat predecessor schedul spartial schedul correspond node search tree extend schedul elig job stage appli depthfirst search enumer use bound branch domin rule describ section prune search tree spartial sequenc uniqu defin minimum cost spartial schedul oe timet procedur enumer done sequenc stop sequenc implicitli examin best solut found optim implement sabsp take advantag fact equat need recalcul everi oe and case backtrack comput equat alreadi accomplish partial schedul backtrack tabl list attribut spartial schedul schedul stage identifi job i consider start time toe cost coe spartial schedul set current schedul unschedul job denot us ui denot famili job us belong ub current upper bound bound branch rule feasibl bound state given oe current unschedul job us must schedul time zero toe and furthermor need setup time famili ui formal defin min fst iju then oe feasibl complet toe cost bound state cost coe spartial schedul lower bound extens oe complet least one setup famili ui must perform defin min fsc gi g then oe cannot extend schedul improv ub c bound check spartial schedul oe clearli c easili updat search also test sophist lower bound unschedul job schedul edd order without setup way abl deriv lower bound earli cost well check feasibl care comput time decreas regen schedul need consid find optim schedul cf theorem employ branch rule follow schedul i elig eddwf preced graph toe batch i consid job extens oe need enumer partial schedul oe extend job g result schedul nonregen domin rule remark reduct comput time come result domin rule domin rule sabsp compar two spartial schedul oe oe schedul set job notat schedul oe denot spartial schedul current consider oe denot previous enumer schedul may domin oe partial schedul oe domin oe effici term time cost oe start later schedul jobset ie toe incur less cost ie coe coe famili job schedul stage differ oe oe make partial schedul compar setup compar time cost subtract setup time setup cost appropri schedul oe domin store job set famili pair toe coe most like domin spartial schedul note number partial schedul exponenti number item n storag requir domin rule grow rapidli n increas formal descript domin rule need sever definit cf tabl job form block i belong set g oe sum earli weight g oe denot w oe domin rule take account block cost extens oe oe consid oe maximum oe minimum cost incur block oe domin oe coe plu upper bound block cost less equal coe plu lower bound block cost upper bound block cost oe given sc i recal sc i sc gi then oe start new block tighter upper bound found start time close toe order save cost leftshift job g oe but these g oe perform new setup idl machin g oe largest block may leftshift let pbtoe denot time cost increas due leftshift g oe exce sc i w oe toe defin pullbacktim pbtoe spartial schedul oe follow consequ time t pbtoe upper bound block cost given leftshift g oe bound sc i lower bound block cost oe given way oe consid smallest block leftshift simpli job i state domin rule differenti theorem orem theorem consid two spartial schedul oe oe proof complet oe also feasibl complet oe i oe feasibl too due ii schedul oe lower cost oe follow consid cost contribut oe oe due leftshift extend oe oe consid figur illustr situat timecost diagram due eddwf also i line repres upper bound block cost oe pbtoe expens leftshift g oe pbtoe setup idl machin perform broken line repres lower bound block cost oe smallest block leftshift job i order prove oe never less cost oe due block check cost point ii iii ii compar cost toe iii compar pbtoe ii iii cost increas linearli pbtoe know monoton cost increas oe cost oe longer increas thu ii iii fulfil cost contribut oe less oe ie complet zbsp oe complet proof exampl figur figur illustr theorem partial schedul oe oe figur g oe cost oe oe figur illustr theorem oe figur theorem oe domin oe check ii iii oe domin figur illustr effect block cost modifi data follow check theorem ii fulfil thu oe domin oe though coe figur show coe leftshift second domin rule case must consid sc i instead sc gi take block cost account theorem given two spartial schedul oe oe st denot famili last job complet oe st st st analog setup cost due triangl inequ thu complet oe also feasibl complet oe i oe feasibl oe feasibl too due ii schedul oe lower cost oe figur theorem oe domin oe differ also block cost taken account ii leftshift g oe extens oe coe upper bound cost contribut trivial lower bound cost contribut oe coe thu oe domin oe complet oe lower cost complet proof final altern way solv bsp dynam program approach defin jobset state appli domin rule way implement approach less effici describ jordan comparison procedur solv variant dlsp analysi section know address plan problem bsp dlsp find correspond solut consequ section compar perform algorithm solv bsp procedur solv variant dlsp comparison made dlsp instanc use test dlsp procedur take instanc provid cite author solv bspdlsp bsputdlsp instanc cf figur except made refer use randomli gener instanc differ dlsp variant summar tabl dlsp first column refer second dlsp variant display fourth column denot propos algorithm third column show whether comput result propos algorithm report equal unequ hold cost depend hold cost differ dlsp variant solv bspdlsp bsputdlsp instanc except refer dlsp procedur test equal hold cost regen schedul optim sequenc independ setup time setup cost sistsc cattryss et al mathemat program base procedur solv sistsc propos cattryss et al refer procedur dual ascent column gener procedur dacgp dlsp first formul set partit problem spp column repres product schedul one item i cost column calcul separ setup sequenc independ dacgp comput lower bound spp column gener new tabl solv differ dlsp variant bsp author variant hold cost algorithm instanc properti schedul cattryss et al regen fleisch mann regen salomon et al one block column gener solv singl item subproblem polynomi dp recurs dacgp feasibl schedul ie upper bound may found column gener step calcul enum algorithm column gener far neither case feasibl schedul found attempt made simplex base procedur heurist dacgp gener upper lower bound sabsp solv bspdlsp optim dacgp code fortran sabsp code c dacgp run ibmp model pc processor mathemat coprocessor implement sabsp machin make comput time compar comput result dacgp report ident hold cost item consequ solv dlsp bspdlsp need consid regen schedul theorem furthermor timet procedur requir fewer comput equat setup sequenc independ dlsp instanc nonzero setup time provid author gener instanc itemperiod combin fn g refer instanc smaller instanc solv much faster sabsp dacgp dlsp instanc setup time st gi either period averag setuptim per item over instanc approxim make setup time signific item period combin instanc differ approxim capac util ae gener low l capacit ae medium m ae high h capacit instanc ae approxim capac util defin ae t gener combin amount instanc total tabl use j denot averag number job bspdlsp instanc size n dlsp dacgp use avg denot averag gap in percent upper lower bound inf number instanc found infeas differ procedur r avg denot averag time in second need instanc class dacgp valu tabl taken tabl comparison dlsp bsp algorithm sistsc dacgp sabsp pc coprocessor comparison dacgp sabsp bb algorithm solv problem much faster number sequenc examin rel small comput time sabsp order magnitud dacgp m simplex base procedur dacgp find feasibl integ solut one instanc claim infeas dacgp thu m instanc remain unsolv dacgp wherea sabsp find infeas instanc dacgp also fail find exist feasibl schedul n t ae h m recal sabsp take advantag small solut space keep enumer tree small thu detect infeas feasibl schedul quit quickli dacgp tri improv lower upper bound difficult without initi feasibl schedul therefor heurist solut procedur dacgp may fail detect feasibl schedul solut space small problem size n dlsp number job j bspdlsp may differ therefor solut time differ consider sabsp tabl present frequenc distribut solut time everi problem class major instanc solv less averag time dacgp sequenc depend setup cost sdsc algorithm solv sdsc propos fleischmann fleischmann transform dlsp travel salesman problem time window tsptw tour correspond product schedul sdsc fleischmann calcul lower bound lagrangean relax condit node visit exactli onc relax upper bound calcul heurist first construct tour tsptw tri improv schedul use oropt oper oropt piec initi tour exchang obtain improv schedul oropt repeat improv found refer fleischmann algorithm tsporopt tsporopt tabl frequenc distribut solut time sabsp number instanc solv faster pc coprocessor code fortran experi perform dx pc origin code provid fleischmann fleischmann divid time axi micro macro period hold cost aris macro period demand occur end macro period thu direct comparison tsporopt sabsp use fleischmann instanc viabl instead use randomli gener bsp instanc transform dlsp instanc gener instanc low l ae high hae capac util note zero setup time ae depend schedul feasibl problem polynomi solvabl bsp averag number job process time interv dlsp averag high h low l capacit instanc hold cost ident solv bspdlsp select setup cost matric satisfi triangl inequ cost equal g g i two kind setup item f g f g form two setupgroup minor setup cost within setupgroup major setup cost one setupgroup other tabl result aggreg instanc class use avg denot averag gap lower upper bound tsporopt r avg r avg denot averag time tsporopt sabsp second denot z best averag deviat object function valu heurist tsporopt optim one found sabsp tabl show avg quit larg tsporopt solut time sabsp short high capacit instanc long low one s tsporopt gener good lower bound best deviat optim object due poor heurist upper bound hand lower upper bound close optimum well note sabsp solv larg instanc sdsc item wherea fleischmann report comput experi instanc size well feasibl bound much weaker zero setup time or equival solut space much larger make sabsp less effect tabl comparison dlsp bsp algorithm sdsc setup cost tsporopt sabsp best r avg r avg instanc tabl howev sabsp yield better perform sequenc depend setup time setup cost sdstsc salomon et al fleischmann transform dlsp tsp time window tsptw extend nonzero setup time order solv sdstsc node tsp network repres posit demand node must visit within certain time window transform dlsp solv dynam program approach design tsptw problem cf duma et al refer procedur tsptwa path tsp network correspond partial schedul similar domin rule sabsp tsptwa path may domin path via cost domin may elimin cannot extend correspond feasibl bound tsptwa code c run hp workstat mip flop sabsp run dx pc order test tsptwa salomon et al use randomli gener instanc which similar setup time st gi f g unfortun setup time satisfi triangl inequ triangular eg floydwarshal algorithm often result setup time equal zero adjust setup time upward which possibl case st gi f g result setup time rare zero ad unit plan horizon order obtain medium capac util way instanc suppos degre difficulti tsptwa sabsp smaller solut space due correct st gi upward compens longer plan horizon instanc gener take largest instanc itemperiod combin fn g instanc medium m capac util ae setup time nonzero n combin without hold cost gener hold cost differ among item consequ solv bsputdlsp furthermor need appli timet procedur latter case optim schedul one block tabl f number problem solv tsptwa sabsp within time limit sec sec memori limit mb mb j denot averag number job bsp r avg tabl comparison dlsp bsp algorithm sdstsc f r avg denot averag time sabsp requir solv instanc consid regen schedul averag time calcul instanc solv within time limit r avg put bracket instanc solv last column show result consid regen schedul enumer provid maxim deviat optim schedul which may nonregen tabl demonstr sabsp succe solv problem remain unsolv tsptwa solut time sabsp rel short compar tsptwa solut time increas instanc solv number job rel small instanc becom difficult nonzero especi unequ hold cost enumer regen schedul solut time sabsp decreas moreov one instanc solv optim n thu even unequ hold cost optim schedul regen case furthermor n instanc would solv within time limit sec regen schedul would consid summari conclus paper examin discret lotsiz schedul problem dlsp batch sequenc problem bsp present model formul dlsp bsp dlsp decis regard done made individu period bsp decid schedul job dlsp solv bsp dlsp instanc transform schedul one model correspond solut model prove equival model mean optim schedul bsp correspond solut dlsp also optim schedul vice versa order solv bsp effect tri restrict search subset possibl schedul found job one famili preorder accord deadlin furthermor equal hold cost optim start product famili inventori famili solv bsp branch bound algorithm optim face difficulti alreadi feasibl problem difficult must maintain feasibl minim cost time compar schedul model object function rather difficult bsp tight lower bound could thu develop therefor use domin rule prune search tree again difficult object function complic domin rule forc us distinguish differ case order evalu approach test special procedur solv variant dlsp despit fact effect lower bound approach prove effici i number item small ii instanc hard solv ie capac util high setup time signific more appropri schedul job decid individu period dlsp time horizon divid small period paramet base period length bsp paramet also real number setup time particular restrict multipl period length differ model also result differ problem size dlsp bsp problem size dlsp essenti number item n period problem size bsp depend number famili job conjectur approach advantag instanc item small solut space ie long setup time high capac util job sequenc main characterist solut case manag solv instanc famili job pc dlsp solut procedur thought better suit lower capacit instanc mani item setup time signific paramet differ among period appropri decid anew individu period futur extend bsp multilevel structur multipl machin acknowledg indebt dirk cattryss marc solomon made avail instanc bernhard fleischmann made avail code furthermor would like thank three anonym refere valuabl comment earlier version paper r singl facil multiclass job schedul complex task sequenc deadlin some extens discret lotsiz schedul problem dual ascent column gener heurist discret lotsiz schedul problem setuptim technic note optim algorithm travel salesman problem time window discret lotsiz schedul problem discret lotsiz schedul problem sequencedepend setupcost batch schedul model method sever problem class comput intract guid theori npcomplet minim flow time singl machin job class setup time complex schedul batch setuptim integr schedul batch lot size review algorithm complex extens discret lotsiz schedul problem discret lotsiz schedul sequenc depend setup time cost batch singl oper manufactur system batch sequenc batch sequenc compon singl facil dynam version econom lot size model schedul group job singl machin tr ctr c k y lin c l wong y c yeung heurist approach schedul problem plastic mold depart audio compani journal heurist v n p septemb satyaki ghosh dastidar rakesh nagi schedul inject mold oper multipl resourc constraint sequenc depend setup time cost comput oper research v n p novemb