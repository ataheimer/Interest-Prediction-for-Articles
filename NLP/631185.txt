t tla pictur a predicateact diagram similar standard statetransit diagram precis defin formula tla the tempor logic action explain diagram use describ aspect specificationand descript prove correcteven complet specif cannot written diagram also use diagram illustr proof b introduct pictur aid understand simpl flowchart easier understand equival programminglanguag text howev complex pictur confus larg spaghettilik flowchart harder understand properli structur program text pictur inadequ specifi complex system help us understand particular aspect system pictur provid inform comment must formal connect complet specif pictur assert pictur correct descript some aspect of system must precis mathemat statement use tla the tempor logic action specifi system tla specif logic formula describ possibl correct behavior system aid understand tla formula introduc type pictur call predicateact diagram diagram similar variou kind statetransit diagram use year describ sy tem start meali moor machin relat pictur tla specif interpret predicateact diagram tla formula diagram denot formula correct descript system specif iff if if impli d therefor provid precis statement mean diagram describ specif use predicateact diagram three way believ new precis defin formal notat ffl describ aspect specif even feasibl write complet specif diagram ffl draw differ diagram provid complementari view system ffl illustr formal correct proof section ii brief review tla leisur introduct tla appear section iii describ predicateact diagram use ninput muller celement exampl show diagram use describ aspect complet specif provid complementari view system section iv give anoth exampl predicateact diagram use describ system show use illustr proof ii tla describ syntax semant tla descript illustr formula defin figur the symbol delta mean equal definit assum infinit set variabl such x y class semant valu variabl flexibl variabl tempor logic analog variabl program languag tla also includ rigid variabl predic logic analog constant paramet program ignor here class valu includ number string set function state assign valu variabl behavior infinit sequenc state semant tla formula true fals behavior syntact tla formula built state function use boolean oper implic j equival oper describ below tla also hide oper use here state function nonboolean express built variabl constant constant oper semant assign valu statefor exampl assign state one plu valu assign variabl x state predic often call predic boolean express built variabl constant constant oper semant true fals statefor exampl predic init phi true state iff assign valu zero x y action boolean express contain prime unprim variabl semant action true fals pair state prime variabl refer second statefor exampl action true hs ti iff valu state assign x equal one plu valu state assign x valu assign state equal pair state satisfi action call step thu step one increment x one leav unchang f state function state predic write f express obtain prime variabl f exampl phi equal action state function v init phi fig tla formula phi describ simpl program repeatedli increment x y defin a v equal a v a v step either step step leav valu v unchang thu m step one increment x one leav unchang els leav order pair hx yi unchang sinc tupl unchang iff compon unchang m step one increment x one leav unchang els leav x unchang defin hai v equal v v step step chang x y sinc unchang hm hxyi step step increment x chang valu x leav unchang say action enabl state iff exist state hs ti step exampl enabl iff possibl take step increment x one chang x leav unchang sinc natur number x action hm hxyi enabl state x natur number enabl state x equal tla formula true fals behavior predic true behavior iff true first state action true behavior iff true first pair state usual tempor logic f formula f formula mean f alway true thu init oe true behavior iff x equal zero everi state behavior formula m hxyi true behavior iff step pair success state behavior step use enabl predic defin fair oper wf sf assert behavior infinit mani hai v step infinit mani state hai v enabl word wf v a assert hai v becom enabl forev infinit mani hai v step occur strong fair formula sf v a assert either infinit mani hai v step finit mani state hai v enabl word assert hai v enabl infinit of ten infinit mani hai v step occur standard form tla specif init init predic n action v state function l conjunct fair con dition formula assert behavior i init true initi state ii everi step behavior n step leav v unchang iii l hold formula phi figur form assert i initi x equal zero ii everi step either increment x one leav unchang increment one leav x unchang leav x unchang iii fair condit wf hx yi hold formula wf hx yi m assert infinit mani step hm hxyi infinit often enabl sinc i ii impli x alway natur number hm hxyi alway enabl henc wf hx yi m impli infinit mani step x increment infinit often simi larli wf hx yi m impli increment infinit r e l e e fig muller celement often put togeth see phi true behavior iff i x initi zero ii everi step increment either x one leav unchang els leav x unchang iii x increment infinit mani time formula init n v safeti properti describ step allow requir anyth happen the formula satisfi behavior satisfi initi condit variabl ever chang fair condit use specifi someth must happen iii predicateact diagram a exampl take exampl muller celement circuit n binari input one binari output shown figur figur indic consid close system consist celement togeth environ initi input output equal output becom input becom input input chang must remain stabl output chang behavior input celement environ describ predicateact diagram figur a c defin short arrow origin node identifi node label c c initi node indic celement start state satisfi arrow connect node indic possibl state transit exampl state satisfi c possibl system go state satisfi either c c precis arrow indic step tripl hin in outi changesthat is transit least one in in chang step chang variablesfor exampl variabl repres circuit element insid environmentbut leav hin in outi unchang also possibl predicateact diagram figur a look like standard statetransit diagram howev interpret formal convent state machin a predicateact diagram delta au au delta delta au au delta r r b correspond tla formula fig predicateact diagram hin in outi input celement correspond tla formula tla formula figur b formula form init state predic one conjunct f node o predic init f describ possibl state chang start state describ node o exampl formula f node label c predicateact diagram repres safeti properti includ fair condit figur a reason way describ input celement howev correspond diagram input celement would quit complic way draw diagram ninput circuit gener specif written directli tla formula figur array input repres formal variabl whose valu function domain bracket denot function applica tion formal n rigid variableon whose valu constant throughout behavior introduc two piec notat repres function denot function f domain f i equal ei everi s ffl f except denot function g f except gi equal e formula defin figur follow interpret init c state predic assert either function domain ng ini equal domain inputi action enabl iff i equal complement ini leav j unchang j i leav unchang the symbol param eter output action enabl iff ini differ complement leav unchang list formula bullet denot conjunct disjunct also use ordinari infix oper init c ng ng i next ng inputi wf hin outi output fig tla specif ninput celement next action disjunct output input i action ng thu next step either output step inputi step input line i pi c tempor formula specif celement togeth environ assert i init c hold initi ii everi step either next step els leav hin outi unchang iii output cannot enabl forev without output step occur fair condit iii requir output chang input have input requir chang sinc predicateact diagram describ safeti properti fair condit irrelev explan dia gram specif pi c short precis howev readerfriendli predicateact diagram therefor use diagram help explain specif begin predicateact diagram figur diagram state function hin i outi mean describ transit chang hini outi diagram formula pi c mean repres formula impli pi c diagram show synchron celement ith input output draw mani differ predicateact diagram oe ae oe ae oe ae oe ae omega omega omega oe j omega omega omega ae fig predicateact diagram hini outi specif pi c ninput celement fig anoth predicateactiondiagram hini outi pi c specif figur show anoth diagram hin i outi pi c simpler one figur contain less inform indic valu ini alway show variabl chang transit latter inform ad diagram figur a transit label action label input i lefttoright arrow indic transit state satisfi state satisfi ini inputi step diagram repres tla formula figur b even inform convey predicateact diagram hin outi also show transit leav ini unchang chang inj j i diagram drawn figur a figur b give correspond tla formula innumer predicateact diagram drawn specif figur show yet anoth diagram celement specif pi c sinc reli diagram specif simpli help explain specif show much littl inform wish a predicateact diagram hini outi output b correspond tla formula fig inform predicateact diagram hini outi pi c correspond tla formula a predicateact diagram hin outi i output u u b correspond tla formula fig predicateact diagram hin outi pi c correspond tla formula i u u fig yet anoth predicateact diagram hin outi pi c draw multipl diagram illustr differ aspect system actual specif written tla formula much express pictur b formal treatment b definit first defin precis tla formula repres diagram formal predicateact diagram consist direct graph subset node identifi initi node node label state predic edg label action assum given diagram state function v introduc follow notat n set node set initi node en set edg origin node n de destin node edg e pn predic label node n e action label edg e formula delta repres diagram defin follow init delta explicit label attach edg e take e true set initi node explicitli indic take n usual convent quantif empti set defin equal fals edg origin node n b anoth interpret anoth possibl interpret predicateact diagram formula b delta defin perhap obviou interpretationespeci diagram view descript nextstat relat show delta alway impli b delta convers implic hold predic label node disjoint delta simpl invari proof use rule inv figur page show delta impli n have conjunct equival predic logic sinc b c impli bv hold m n n n impli delta proposit logic hypothesi impli result follow simpl tempor reason essenti revers string equival implic use prove a usual label node predicateact diagram disjoint predic case a b impli interpret delta b equival diagram nondisjoint node label may occasion use delta conveni interpret diagram c prove predicateact diagram say diagram predicateact diagram specif pi assert pi impli formula delta repres diagram formula pi usual form init pi m u l l fair condit prove pi delta prove init pi init pi m u node n first condit assert predic gener easi prove prove second condit one usual find invari inv init pi m u impli inv pi impli m inv u second condit prove show m inv u impli node n usual u v tupl everi compon v compon u v case one need show minv impli p n n definit mean prove node n formula assert step start pn inv true chang v em step end state satisfi p dm edg origin node n iv illustr proof tla distinct specif properti formula verif mean prove one formula impli anoth practic rel complet set rule prove implic describ show predicateact diagram use illustr proof take exampl one treat specif psi defin section iva impli specif phi defin section ii abov a anoth specif defin tla formula psi describ program two process repeatedli loop sequenc oper p sem increment v sem one process increment x one increment one here p sem v sem denot usual oper semaphor sem describ program formal introduc variabl pc indic control state process three control point call a b g quot indic string valu motiv definit psi three predic action diagram psi figur diagram predic pc p q assert control p process q process figur a show control state chang p sem v sem increment action perform variabl pc mention edg label left unchang indic stepsfor exampl step describ edg label leav sem unchangedbut assert diagram nextstat action n written disjunct n n nextstat action process n written disjunct figur b illustr decomposit final predicateact diagram figur c describ semaphor variabl sem chang write specif psi let pc function domain f g pci indic control resid process i formula pc p q defin a phi phi phi phi phi upsilon r b phi phi phi phi phi upsilon r c u fig three predicateact diagram hx semaphor action p v defin sem sem sem miss figur specif initi valu x y take zero fair con dition one could augment predicateact diagram notat indic fair condit howev condit easi repres diagram express enough describ varieti fair requir aris practic wf sf formu la express enough easi repres graphic so attempt repres fair diagram take fair condit specif psi strong fair nextstat action n process complet definit psi appear figur b illustr proof proof psi phi broken proof three condit init psi init phi init psi n psi wf hxyi illustr proof condit predicateact diagram hx psi figur q defin nat set natur number first must show diagram figur predicateact diagram psi easi use definit section iiib invari need exampl condit prove node label n step start true step one increment x leav unchang make q g a true follow easili definit q n sinc n step start pc b a true must fi step prove condit suffic prove everi step allow diagram figur m hxyi step step shown explicitli diagram one leav w unchang step leav hx yi unchang m hxyi step action label edg diagram impli m hxyi step shown ex init psi sem sem fig specif psi phi phi phi phi phi upsilon r fig anoth predicateact diagram hx plicitli diagram also m hxyi step prove condit sketch proof condit prove wf hxyi suffic show infinit mani step occur first observ predic label node diagram impli either enabl fair condit psi impli behavior cannot remain forev node must keep move diagram henc behavior must infinit often pass node predic q a a impli hn w hn w enabl henc fair condit impli infinit mani hn w step infinit mani hn w step must occur action hn w enabl three node top loop take infinit mani hn w step therefor possibl go around top loop infinit mani time impli infinit mani step occur start state q b a true sinc nat step start hm hxyi step henc infinit mani hm hxyi step occur similarli take infinit mani hn w step impli infinit mani step occur complet proof condit use predicateact diagram simplifi proof make argument given rigor ou would go precis step proof describ howev diagram allow us visual proof help us understand it v conclus describ three use diagram believ new diagram precis formal semant ffl describ particular aspect complex specif simpl diagram ninput celement cannot specifi simpl pictur howev explain specif diagram describ synchron output individu input ffl provid complementari view system diagram b c figur look quit differ diagram specif ffl illustr proof disjunct predic label node figur equal invari proof section diagram provid graphic represent invari proof tla differ tradit specif method two import way first tla specif interpret set state instead assign valu variabl appear specifica tion state assign valu infinit number variabl appear specif second tla specif invari stutter formula neither requir rule finit sequenc step chang variabl mention formula the statefunct subscript tla formula guarante invari stutter two differ lead two major differ tradit statetransit diagram predic action diagram tradit diagram node repres singl state state tla assign valu infinit number variabl imposs describ singl state formula formula specifi valu finit number variabl draw diagram tla formula let node repres predic describ set state tradit di agram everi possibl state chang indic edg tla formula invari stutter draw diagram particular state functionsusu tupl variabl tla differ specif method logic use simpl logic oper like implic conjunct instead complic automatabas notion simul composit everyth done predicateact diagram done statetransit diagram pure statebas formal howev convent formal must use notion homomorph diagram describ express tla logic implic formal employ statetransit diagram pure statebas use state event node repres state edg describ input output event mean diagram sequenc event allow state effect hidden tla state event system describ term chang interfac variabl rather term interfac event variabl describ intern state hidden existenti quantifi describ chang variabl whether intern interfac indic node label edg label henc pure statebas approach like tla allow flexibl diagram drawn method base state event r a method synthes sequenti circuit gedankenexperi sequenti machin the tempor logic action defin live introduct vlsi system conjoin specif tr ctr m lusini e vicario engin usabl visual formal case studi real time logic proceed work confer advanc visual interfac may laquila itali harold thimblebi user interfac design matrix algebra acm transact computerhuman interact tochi v n p june jule desharnai marc frappier ridha khdri ali mili integr sequenti scenario acm sigsoft softwar engin note v n p nov jule desharnai marc frappier ridha khdri ali mili integr sequenti scenario ieee transact softwar engin v n p septemb l e moser y s ramakrishna g kutti p m melliarsmith l k dillon graphic environ design concurr realtim system acm transact softwar engin methodolog tosem v n p jan