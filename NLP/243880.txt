t assign confid condit branch predict a mani high perform processor predict condit branch consum processor resourc base predict situat resourc alloc better optim confid level assign branch predict ie quantiti resourc alloc function confid level support optim consid hardwar mechan partit condit branch predict two set accur rel high percentag time accur rel low percentag time object concentr mani mispredict practic rel small set low confid dynam branch first studi ideal method profil branch predict sort static branch high low confid set depend accuraci dynam predict find percent mispredict local set static branch account percent dynam branch studi ideal dynam confid method use one two level branch correct histori find singl level method perform least well complex two level method abl isol percent mispredict set contain percent dynam branch final studi practic less expens implement find achiev perform ideal method b introduct becom common practic high perform processor predict condit branch specul execut instruct base predict typic specul use branch predict act upon low penalti specul incorrectli ie resourc avail specul instruct would unus anyway and averag branch predict correct high percentag time howev processor becom advanc envis implement penalti incorrect specul may high enough may better specul instanc likelihood branch mispredict rel high is may desir vari behavior depend likelihood mispredict consequ would like develop hardwar method assess likelihood condit branch predict correct refer branch predict confid mechan ism consid follow potenti applic select dual path execut resourc may made avail simultan execut instruct path follow condit branch how ever like expens follow path branch especi sever condit branch may unresolv given time cons quentli may desir set limit two thread given time fork second execut thread nonpredict path instanc branch predict made rel low confid predict branch predict path would specul follow occasion path would follow guid instruct fetch simultan multithread smt instruct fetch identifi critic resourc resourc effici use fetch instruct predict path high likelihood correctli predict is thread predict high confid given prioriti low confid reduc number wast instruct fetch caus follow wrong specul path dynam selector hybrid branch predictor hybrid branch predictor use one predictor select predict made one base histori predict accuraci constitu predictor method propos basic ad hoc confid mechan develop specif applic studi confid mechan gen eral may abl arriv accur hybrid selector branch predict revers confid branch predict determin less predict revers henc confid mechan could use gener revers predict signal branch predict less accuraci theori one could focu develop hardwar comput probabl individu branch predict correct or incorrect howev practic could rather complex becaus divis impli comput probabl branch realli want anyway rather attempt divid branch predict two set high confid low confid binari signal gener simultan branch predict indic confid set predict belong pair predict confid signal illustr fig see confid signal could use consid four applic list abov select dual path execut confid signal use trigger fork second thread low confid branch predict smt instruct fetch applic confid signal use enabl instruct fetch specul thread high confid design hybrid predict selector confid signal multipl predictor compar select predict use revers applic confid threshold set approxim accuraci confid signal use revers predict applic would like divid predict high low confid set concentr mani mispredict branch branch taken taken execut pipelin highlow confid mechan confid instruct fetch unit fig gener specul processor contain branch predict signal pair highlow confid signal possibl low confid set time keep low confid set rel small note gener one could divid branch multipl set rang confid level date pursu gener consid two confid set paper gener signal separ two confid set propos use benchmark collect predict accuraci data data use design logic high low confid set characterist desir note logic design use data select benchmark how ever implement confid logic use program is simplifi hardwar design dynam adjust criteria determin high low confid set previou work propos assign confid level differ counter valu predictor base satur counter also rel abstract exampl optim perform specul differ degre base confid level author use branch probabl level guid disjoint eager execut fork multipl thread multipl thread fork probabl fork first difficulti dynam comput probabl static profilebas probabl use suggest implement regard specif applic revers predict processor static predict bit livermor s made static branch predict dynam revers bit instruct cach use revers static predict found incorrect recent make predict base opcod direct branch allow compil place revers bit instruct chang default predict simul methodolog collect branch predict accuraci data use tracedriven simul benchmark use mach version ib benchmark suit chosen accur repres branch characterist real program commonli use spec benchmark and includ kernel code arriv composit data collect benchmark averag weight result benchmark effect execut number condit branch import part studi underli branch predictor simul use fairli aggress predictor gshare predictor satur bit counter counter array address exclusiveor bit program counter recent branch outcom held branch histori regist bhr section consid perform use less expens predictor paper overview focu method assign confid branch predict applic confid method current investig interest applic goal establish set base confid method use start point studi section collect branch predict accuraci statist relat static branch exercis establish gener method use display confid result suggest optim static confid method use baselin compar dynam method fol low section look number gener dynam confid method use one two level tabl section give experiment result dynam method use ib benchmark suit section consid practic implement issu dynam confid method goal reduc logic complex cost section conclud paper analysi static branch first consid ideal method static branch assign either high low confid level base accuraci predict begin rel power gshare dynam predictor describ section collect statist static branch number time branch execut number incorrect predict consequ mispredict rate static branch gener combin branch benchmark normal benchmark effect contribut number dynam branch next sort static branch accord mispredict rate highest rate first concentr difficult predict static branch top sort list sort list use divid predict branch low high confid set cours mani set possibl depend defin low high thu far vagu point understand rang possibl go sort list branch statist plot accumul fraction mispredict branch versu accumul fraction execut branch produc them ib benchmark fig result plot note graph discret data point although run togeth plot correspond mispredict dynam branch static fig cumul mispredict versu cumul dynam branch static branch occur sort list point defin pair high low confid branch predict set interpret graph consid data point mark graph point percent dynam branch accumul time reach static branch question mispredict includ is separ branch percent execut branch place low confid set account percent mispredict gener shape curv steep rise round knee nearli horizont line particular curv static branch rather gentl knee dynam method given next section much sharper knee steeper initi slope farther left knee occur better curv shape mispredict concentr within smaller set low confid predic tion or word branch lower confid set higher mispredict rate and con vers branch higher confid set lower mispredict rate ideal low confid set would consist sole mispredict branch correspond graph would straight line parallel yaxi shift right origin mispredict rate one could develop static branch confid method base procedur follow is one could profil branch done threshold mispredict rate could set static branch threshold tag one way low confid tag anoth high confid or altern fraction mispredict could chosen correspond set static branch could select low confid one static confid method describ graph fig provid optimist estim per formanc method optimist repres perfect profil execut program exactli data profil nevertheless use result optimist static method comparison dynam method consid follow section minimum would like dynam method exceed perform static method dynam confid mechan previou section partit static branch high low confid set is dynam predict static branch assign confid set howev also partit branch dynam predict static branch assign differ confid set partit done base dynam histori refer dynam confid mechan larg number dynam confid mechan avail first cousin dynam branch predictor mani branch predictor propos year paper cannot explor entir design space select repres confid method preliminari experi indic interest variat begin gener confid mechan somewhat ideal section refin practic implement onelevel confid method one level dynam confid method sonam use singl level tabl lookup illustr fig tabl contain n recent correctincorrect indic given tabl entri nbit entri essenti shift regist call correctincorrect regist cir pronounc sir refer entir tabl tabl ct use convent cir indic incorrect predict indic correct predict exampl predict correct time follow incorrect predict follow correct predict bit cir contain number possibl access tabl one truncat program counter branch instruct use index ct alter nativ one could keep track global branch outcom branch histori regist bhr use index ct third altern maintain global cir ie correctincorrect statu collect recent dynam branch use index ct begin three basic method index ct pc global bhr global cir one construct number other concaten portion program counter bit global bhr cir histori tabl m entri n bit entri reduct function confid highlow signal fig one level dynam confid mechan exclusiveor them preliminari studi done indic exclusiveor effect concaten subfield howev influenc tabl size deserv studi preliminari studi also indic index global cir littl valu give low perform use alon typic reduc perform ad other consequ report result implement use pc global bhr lead three variat index ct pc alon global bhr alon pc xor bhr now divid branch two set take cir access tabl reduc singl binari signal gener pass cir combin logic block name reduct function fig exampl reduct function could perform one count cir one indic higher number recent mispredict would tend indic lower accuraci section consid one count reduct function along other actual implement complet cir could kept ct separ logic block implement reduct function exactli shown fig howev one might also use implement maintain compress form cir ct along simplifi reduct function discuss section two level method two level dynam confid method index first level ct manner similar one level method combin cir read tabl combin pc global bhr index second level ct second level tabl contain correctincorrect valu p recent time first level cirpcbhr combin occur final cir read second level tabl pass combin reduct function previou one level method reduct function m entri cir histori tabl level level n bit entri program counter bit global bhr cir histori tabl n entri highlow confid signal fig two level dynam confid mechan sever variat twolevel method refer fig gener one hash combin pc global bhr first tabl hash output first tabl combin pc global bhr lead differ possibl two level structur could probabl made one could consid use global cir comput index second level tabl exampl preliminari explor settl three repres method first variat pc alon use read first tabl cir alon use access second level tabl second variat pc xor bhr use read first level tabl cir read tabl use read second level tabl third variat like second except pc bhr exclusiveor cir read first level tabl index second level tabl experiment result use tracedriven simul studi dynam confid method outlin previou sec tion state earlier underli branch predictor gshare predictor use tabl twobit counter predict tabl access exclusiveor low order pc bit bit global bhr one level confid method cir tabl also entri contain simul ib benchmark suit result averag weight individu benchmark contribut total number dynam branch rel larg underli branch predictor use overal mispredict rate percent method initi branch predictor tabl weakli taken cir tabl one one found give better result initi ct valu studi addit inform initi valu given section initi collect separ statist cir valu read ct the second level ct case two level method cir pattern keep track number time pattern appear fraction incorrect predict occur cir pattern read collect data cir pattern sort construct graph similar use static method section particular sort cir pattern accord mispredict rate highest rate top sort list use plot data point one per cir point x axi valu fraction accumul condit branch correspond cir higher list axi valu fraction mispredict condit branch account for now point use defin high low confid predict set combin reduct function detect set select cir low confid high confid cir question cir defin minterm reduct function static method method determin confid set ideal reduct function tune specif set data input valu addit combin reduct function could complic ie could mani prime implic mani could conceiv minterm section look practic reduct function one level method fig give perform graph one level method index pc alon global bhr alon pc xor bhr note order avoid data point run togeth as fig plot point differ previou point percent best method the one concentr largest set mispredict smallest set predict use pc xor bhr index tabl reason pc bhr togeth precis establish context branch question either alon essen tialli reason lead gshare predic tor close second perform index global bhr alon worst perform provid use pc alon consid point curv correspond low confid set contain percent branch predict percent chosen rather arbitrarili illustr purpos index pc xor bhr concentr percent mispredict low confid set bhr alon concentr percent pc concentr percent also shown fig graph curv static method given section see dynam method capabl perform much better optimist static method comparison static method percent branch concentr percent mispredict dynam method zero cir occur frequent refer zero ct entri zero bucket zero bucket correspond case tabl entri seen correct predict last time row surpris zero bucket access frequent given overal predict accuraci percent larg zero bucket explain long gap data point dynam method right side graph exampl two better dynam method percent branch predict lead zero cir percent mispredict occur zero cir henc percent dynam branch region graph dynam method data point static method data point howev point allow static curv arc interpol curv dynam method region final note dynam result ideal way similar way static branch are particular sort cir worst best base perform ib bench mark effect use optim reduct function result ct look practic reduct function level optim mitig of mispredict dynam branch static pc bhr bhrxorpc fig cumul mispredict versu cumul dynam branch one level dynam confid method two level method now consid two level confid method result shown fig best method access first level tabl pc xor bhr second level tabl access cir read first level tabl method access first level tabl pc xor bhr second level tabl first level cir xor pc xor bhr gener second best perform howev region percent rang xaxi third method access first level cir second level slightli better otherwis third method wors two level method chose simul one level method zero ct entri larg lead data point percent region percent point xaxi fig compar best one level method from fig best two level method from fig static method from fig see one two level method give similar perform anyth two level method perform slightli wors main differ presenc absenc second level tabl first level tabl ident consequ conclud extra hardwar second level tabl worth cost least use ideal reduct function addit studi realist reduct function tend reinforc conclu sion consid two level tabl paper mispredict dynam branch static pccir bhrxorpccir bhrxorpcbhrxorcirxorpc fig cumul mispredict versu cumul dynam branch two level dynam confid method mispredict dynam branch static bhrxorpc bhrxorpccir fig comparison best one level two lev el static method implement issu section appli result previou section arriv actual implement first look reduct function consid call granular issu cost consider initi issu reduct function propos simpl reduct function compar result provid rel optimist result previou section obviou reason reduc cost andor logic complex would like simpl reduct function arriv three inspect sort list cir guid intuit alreadi observ pc xor bhr index perform best one level method studi consequ section focu method note occasion refer method simpli best even though best studi one count first consid count one cir read tabl reason one cir higher number recent mispredict therefor like futur mispredict cir length studi given abov data point one ie mispredict last singl one ie one mispredict etc one result one count reduct method consid section plot fig graph plot optimist reduct function tri approxim optimist curv discret data point plot make point easier read note one count zero bucket line optimist zero bucket as should one level method one count fall short optimum data point howev reason one level tabl signific time order cir recent predict repres time sequenc how ever recent mispredict eg recent correl better older one eg predict ago yet one count given equal weight satur counter second reduct function consid satur one count cir valu expect method perform better one count howev could lead less costli confid method satur counter embed ct place cir lead essenti logarithm reduct tabl space use counter count allow us compar directli one counter preced subsect although slightli less expens implement would count count correct predict incorrect one satur extrem data point plot fig see satur counter potenti defici particular equival zero bucket maximum satur counter becom significantli larger ie contain mispredict branch happen branch correctli predict vast major time usual access maximum satur counter singl mispredict follow correct predict satur count nonmaximum one branch hand full cir kept one count use singl mispredict lead mispredict dynam branch bhrxorpc bhrxorpccnt bhrxorpcreset bhrxorpcsat fig confid graph one level method reduct via one count satur count reset count nonzero cir next branch mean mani nonzero cir contain singl one con vert maximum satur count valu portion curv extrem left graph ie zero bucket region reach satur counter behav well one count ing consequ choos partit confid set region ie percent fewer dynam branch low confid set contain percent mispredict satur counter appear adequ howev larg maximum satur counter region make imposs partit larger low confid set ie contain percent mispr iction consequ might like find better method costsav satur counter maintain zero bucket characterist optim curv reset counter third algorithm arriv examin sort list cir so observ cir pattern account dynam branch particular contain zero singl one reflect high accuraci underli branch predictor suggest captur inform fulllength cir keep track time recent mispredict occur accomplish increment counter held ct time correspond branch predict correctli reset counter zero mispredict counter satur match cir counter size use preced subsect fig show result reset counter compar ideal reduct function one count ing satur counter see reset counter work quit well track ideal curv close zero bucket addit observ earlier satur counter reset counter replac fulllength cir ct yield logarithm cost save conclud reset counter probabl best choic implement confid method practic manner threshold granular produc confid set practic note merci natur bucket result reduc cir exampl use reset counter establish confid set data point determin reset counter valu tabl contain data point defin best singl level method use reset counter count counter satur first column contain counter valu second mispredict rate counter shown first column third fourth column percentag refer mispredict occur tabl statist reset counter valu count mi cum cum pred ref mi mi rate pred ref pred counter valu fifth sixth column cumul refer mispredict percentag top tabl use count valu defin low confid set could isol percent mispredict set percent branch predict cours would need singlebit counter accomplish thi similarli use count could isol percent mispredict within set percent branch predict etc maximum count equival zero bucket fulllength cir consequ use counter valu isol percent mispredict set percent branch rel larg zero bucket region defin satur counter achiev finer granular could howev use larger counter get somewhat better granular approach limit final note use tabl reduct function program yet discuss confid level particular set bench mark variat confid set depend individu benchmark program consid ib benchmark fig show confid curv best jpeg worst gcc perform ib benchmark use best singl level method ideal reduct see consider variat zero bucket appear contain approxim fraction mispredict total number branch zero bucket vari consider import characterist depend applic confid mispredict dynam branch gcc jpeg fig confid graph best jpeg worst gcc perform benchmark best one level confid method ideal reduct use mechan appli cost consider studi thu far assum fairli larg and rel expens predictor confid method reduc alias effect could get idea pure implement might per form howev also consid smaller less expens implement fulli explor design space here rather choos particular small predictor investig perform singl level confid method alias present use seri small confid histori tabl illustr falloff perform reduc tabl size smaller underli branch predictor use gshare branch predictor k entri consist satur bit counter predictor access exclusiveor bit branch program counter bit global branch histori mispredict rate predictor ib benchmark percent implement confid mechan use best singl level method access way gshare predictor reset counter held ct simul tabl size predictor k entri entri result plot fig see case confid tabl size predictor rel perform somewhat less larger tabl studi note zero bucket region ie counter maximum valu contain fraction mispredict befor fewer overal branch region put anoth way low confid set contain fraction mispredict larger set occur alias take place branch access tabl entri suffer mispredict counter reset take least correct predict counter reenter satur state henc alias counter like spend time nonsatur state nevertheless perform still fairli good percent mispredict identifi percent condit branch suggest confid method appli smaller less costli predictor use case predict confid tabl number entri cost confid method twice underli predictor bit reset counter versu bit satur counter fig also see perform diminish wellbehav manner confid tabl reduc size again loss doubt due alia ing make definit statement one tabl size costeffect anoth howev would requir knowledg applic confid method use is performancesimul model applic use confid method would use determin actual perform impact confid set effect initi state cours studi found initi state cir held ct import of mispredict dynam branch fig perform small cir tabl tabl hold reset counter access pc xor bhr take long time tabl build histori number possibl initi cir exampl one could initi cir s s random anoth altern initi cir context switch studi altern fig show result ideal one level method use ct entri see s random perform similarli perform nearli well mention abov differ ct fairli deep memori initi state effect still appear even benchmark run full length s initi increas number branch zero bucket benchmark begin startup like higher number mispredict initi zero cir assign high confid hand nonzero initi valu tend assign lower confid howev exactli nonzero initi valu use seem make much differ better perform provid avoid zero reason altern initi oldest bit cir other zero refer lastbit result shown fig along initi valu see perform essenti nonzero method experi conjectur one could probabl leav cir current valu time context switch except oldest bit initi would tend simplifi initi hardwar provid good perform mispredict dynam branch one zero lastbit random fig effect differ ct initializa tion best one level confid method ideal reduct use conclus implement confid method larg design space probabl larg branch pred iction mani branch predict method propos studi year consequ method propos mean comprehens goal introduc concept assign confid branch predict look characterist method doubt mani possibl method and should explor look static branch indic predict higher confid other better separ low high confid predict one must look dynam inform similar case branch predict predictor take dynam context account perform better static predictor dynam confid method inde better static one even ideal static method gener appear singl level dynam method work well two level method less expens reduct function found reset counter work well counter embed cir tabl reduc cost studi larg k predictor confid tabl use smaller k predictor smaller confid tabl k smaller found confid method perform rel wors reason use reset counter tend amplifi neg effect alias applic mention abov current research three four studi potenti perform benefit select dual thread fork well aspect implement applic data singl level method indic fork dual thread follow percent condit branch predict captur percent mispredict conjectur adequ provid worthwhil perform gain also studi revers hybrid predict selector underway revers applic look promis key issu whether costperform predictor plu revers better costperform power predictor inde predictorrevers model could consid method decompos design power pred ictor studi hybrid predict selector begun optimist work branch confid lead systemat way develop nearoptim selector acknowledg work support part nsf grant mip us armi intellig center fort huachuca contract dabtc arpa order no d view conclus contain herein author interpret necessarili repres offici polici endors either express impli us armi intellig center fort huachuca us govern eric rotenberg fund ibm graduat fellowship erik jacobsen fund wisconsinhilldal undergradu research scholarship author would like thank joel emer help discuss work progress suggest potenti applic r use hybrid branch predictor improv branch predict accuraci presenc context switch mip r use decoupl architectur s architectur manual branch predict strategi branch target buffer design combin branch predictor improv accuraci dynam branch predict use branch correl amd k design outrun pentium a studi branch predict stra tegi exploit choic instruct fetch issu implement simultan multithread processor instruct fetch cope code bloat disjoint eager execu tion optim form specul execut twolevel adapt branch predict tr twolevel adapt train branch predict improv accuraci dynam branch predict use branch correl instruct fetch disjoint eager execut use hybrid branch predictor improv branch predict accuraci presenc context switch exploit choic studi branch predict strategi architectur manual ctr artur klauser srilatha mann dirk grunwald select branch invers confid estim branch predictor intern journal parallel program v n p februari jame e smith retrospect studi branch predict strategi year intern symposia comput architectur select paper p june juli barcelona spain amirali baniasadi andrea moshovo instruct flowbas frontend throttl powerawar highperform processor proceed intern symposium low power electron design p august huntington beach california unit state steven wallac brad calder dean m tullsen thread multipl path execut acm sigarch comput architectur new v n p june yuan chou jason fung john paul shen reduc branch mispredict penalti via dynam control independ detect proceed th intern confer supercomput p june rhode greec jinson j koppanalil eric rotenberg simpl mechan detect ineffectu instruct slipstream processor ieee transact comput v n p april gari s tyson todd m austin memori renam fast earli accur process memori commun intern journal parallel program v n p oct robert s chappel franci tseng adi yoaz yale n patt microarchitectur support precomput microthread proceed th annual acmiee intern symposium microarchitectur novemb istanbul turkey gregori a muthler david crow sanjay j patel steven s lumetta instruct fetch deferr use static slack proceed th annual acmiee intern symposium microarchitectur novemb istanbul turkey pritpal s ahuja kevin skadron margaret martonosi dougla w clark multipath execut opportun limit proceed th intern confer supercomput p juli melbourn australia takashi yokota kanemitsu ootsu takanobu baba introduc entropi repres program behavior branch predictor perform experiment comput scienc experiment comput scienc p june san diego j adam butt guri sohi dynam deadinstruct detect elimin acm sigop oper system review v n decemb chienm chen chungta king walktim address adjust improv accuraci dynam branch predict ieee transact comput v n p may artur klauser abhijit paithankar dirk grunwald select eager execut polypath architectur acm sigarch comput architectur new v n p june daniel holm friendli sanjay jeram patel yale n patt altern fetch issu polici trace cach fetch mechan proceed th annual acmiee intern symposium microarchitectur p decemb research triangl park north carolina unit state enric musol predict use block result microarchitectur techniqu highperform lowpow processor proceed nd annual acmiee intern symposium microarchitectur p novemb haifa israel ayos falcon jare stark alex ramirez konrad lai mateo valero better branch predict prophetcrit hybrid ieee micro v n p januari dirk grunwald artur klauser srilatha mann andrew pleszkun confid estim specul control acm sigarch comput architectur new v n p june srilatha mann artur klauser dirk grunwald pipelin gate specul control energi reduct acm sigarch comput architectur new v n p june andrea moshovo checkpoint altern high perform powerawar processor proceed intern symposium low power electron design august seoul korea tanau ramrez alex pajuelo oliverio j santana mateo valero simpl specul load control mechan energi save proceed workshop memori perform deal applic system architectur p septemb seattl washington craig zill gurindar sohi executionbas predict use specul slice acm sigarch comput architectur new v n p may yiannaki sazeid jame e smith model program predict acm sigarch comput architectur new v n p june eduardo quion joanmanuel parcerisa antonio gonzalez select predic predict outoford processor proceed th annual intern confer supercomput june juli cairn queensland australia artur klauser dirk grunwald instruct fetch mechan multipath execut processor proceed nd annual acmiee intern symposium microarchitectur p novemb haifa israel haitham akkari ravi rajwar srikanth t srinivasan checkpoint process recoveri toward scalabl larg instruct window processor proceed th annual ieeeacm intern symposium microarchitectur p decemb glenn reinman brad calder dean tullsen gari tyson todd austin classifi load store instruct memori renam proceed th intern confer supercomput p june rhode greec matthew c chidest alan d georg matthew a radlinski multiplepath execut chip multiprocessor journal system architectur euromicro journal v n p juli david n armstrong hyesoon kim onur mutlu yale n patt wrong path event exploit unusu illeg program behavior earli mispredict detect recoveri proceed th annual ieeeacm intern symposium microarchitectur p decemb portland oregon chenyong cher t n vijaykumar skipper microarchitectur exploit controlflow independ proceed th annual acmiee intern symposium microarchitectur decemb austin texa hyesoon kim jo a joao onur mutlu yale n patt profileassist compil support dynam predic divergemerg processor proceed intern symposium code gener optim p march robert s chappel franci tseng adi yoaz yale n patt difficultpath branch predict use subordin microthread acm sigarch comput architectur new v n may zach purser karthik sundaramoorthi eric rotenberg studi slipstream processor proceed rd annual acmiee intern symposium microarchitectur p decemb monterey california unit state andrew d hilton amir roth ginger control independ use tag rewrit acm sigarch comput architectur new v n may teja karkhani jame e smith pradip bose save energi time instruct deliveri proceed intern symposium low power electron design august monterey california usa satish narayanasami ays k coskun brad calder transient fault predict base anomali processor event proceed confer design autom test europ april nice franc nikolao bella ibrahim hajj constantin polychronopoulo use dynam cach manag techniqu reduc energi highperform processor proceed intern symposium low power electron design p august san diego california unit state enric musol specul reduc unnecessari power consumpt acm transact embed comput system tec v n p novemb patrick akl andrea moshovo branchtap improv perform checkpoint adapt specul control proceed th annual intern confer supercomput june juli cairn queensland australia craig b zill gurindar s sohi understand backward slice perform degrad instruct acm sigarch comput architectur new v n p may karthik sundaramoorthi zach purser eric rotenburg slipstream processor improv perform fault toler acm sigarch comput architectur new v n p dec sriniva mantripragada alexandru nicolau use profil reduc branch mispredict cost dynam schedul processor proceed th intern confer supercomput p may santa fe new mexico unit state rakefet kol ran ginosar kin karthik sundaramoorthi zach purser eric rotenberg slipstream processor improv perform fault toler acm sigplan notic v n p nov ayos falcon jare stark alex ramirez konrad lai mateo valero prophetcrit hybrid branch predict acm sigarch comput architectur new v n p march veerl desmet lieven eeckhout koen de bosscher improv composit confid mechan perceptron branch predictor journal system architectur euromicro journal v n p march timothi sherwood brad calder autom design finit state machin predictor custom processor acm sigarch comput architectur new v n p may daniel a jimnez calvin lin neural method dynam branch predict acm transact comput system toc v n p novemb hyesoon kim onur mutlu jare stark yale n patt wish branch combin condit branch predic adapt predic execut proceed th annual ieeeacm intern symposium microarchitectur p novemb barcelona spain haitham akkari ravi rajwar srikanth t srinivasan analysi resourc effici checkpoint architectur acm transact architectur code optim taco v n p decemb steven swanson luke k mcdowel michael m swift susan j egger henri m levi evalu specul instruct execut simultan multithread processor acm transact comput system toc v n p august dirk grunwald microarchitectur design control specul energi reduct power awar comput kluwer academ publish norwel ma juan l aragn jo gonzlez antonio gonzlez jame e smith dual path instruct process proceed th intern confer supercomput june new york new york usa glenn reinman brad calder predict techniqu aggress load specul proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state alper buyuktosunoglu teja karkhani david h albonesi pradip bose energi effici coadapt instruct fetch issu acm sigarch comput architectur new v n may brad calder glenn reinman dean m tullsen select valu predict acm sigarch comput architectur new v n p may kevin skadron pritpal s ahuja margaret martonosi dougla w clark improv predict procedur return returnaddressstack repair mechan proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state hyesoon kim jose a joao onur mutlu yale n patt divergemerg processor dmp dynam predic execut complex controlflow graph base frequent execut path proceed th annual ieeeacm intern symposium microarchitectur p decemb trace processor proceed th annual acmiee intern symposium microarchitectur p decemb research triangl park north carolina unit state chunrong lai shihlien lu yurong chen trista chen improv branch predict accuraci parallel conserv corrector proceed nd confer comput frontier may ischia itali yiannaki sazeid jame e smith limit data valu predict intern journal parallel program v n p aug zhijian lu john lach mircea r stan kevin skadron alloy branch histori combin global local branch histori robust perform intern journal parallel program v n p april