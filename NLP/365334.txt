t optim rewardbas schedul period realtim task a abstractrewardbas schedul refer problem reward associ execut task framework realtim task compris mandatori option part mandatori part must complet task deadlin nondecreas reward function associ execut option part interrupt time imprecis comput increasedrewardwithincreasedservic model fall within scope framework paper address rewardbas schedul problem period task optim schedul one mandatori part complet time manner weight averag reward maxim linear concav reward function common show exist optim schedul option servic time task constant everi instanc show effici comput servic time also prove optim rate monoton schedul with harmon period earliest deadlin first least laxiti first polici case uniprocessor use optim servic time comput moreov extend result show polici fulli util processor also optim multiprocessor period rewardbas schedul show optim solut push limit rewardbas schedul prove that reward function convex problem becom nphard static optim solut besid provid consider reward improv previou suboptim strategi also major practic benefit runtim overhead elimin exist schedul disciplin may use without modif comput optim servic time b introduct realtim system task must complet produc correct output specifi deadlin howev system overload possibl meet deadlin past sever techniqu introduc research commun regard appropri strategi use overload system period realtim task one class approach focus provid somewhat less stringent guarante tempor con straint instanc task allow skip entir skip factor determin often instanc given task may left unexecut best effort strategi introduc aim meet k deadlin n instanc given task framework also known nkfirm deadlin scheme bernat burn present hybrid improv approach provid hard realtim guarante k n consecut instanc task techniqu mention tacitli assum task output valu execut complet howev mani applic area multimedia applic imag speech process timedepend plan robot controlnavig system medic decis make inform gather realtim heurist search databas queri process partial approxim time result usual accept imprecis comput iri increas reward increas servic model propos enhanc resourc util grace degrad realtim system compar hard realtim environ worstcas guarante must provid model everi realtim task compos mandatori part option part former complet task deadlin provid output accept minim qualiti option part execut mandatori part still deadlin enough resourc system commit run mandatori part task longer option part execut better qualiti result the higher reward algorithm propos imprecis comput applic concentr model upper bound execut time could assign option part aim usual minim weight sum error sever effici algorithm propos solv optim schedul problem aperiod imprecis comput task common assumpt studi qualiti result produc linear function precis consequ possibl gener error function usual address altern model allow task get increas reward increas servic iri model without upper bound execut time task though deadlin task implicit upper bound without separ mandatori option part task execut long schedul allow deadlin typic nondecreas concav reward function associ task execut time problem maxim total reward system aperiod independ task address optim solut static task set present well two extens includ mandatori part polici dynam task arriv note imprecis comput iri model close relat sinc perform metric defin dual maxim total reward vs minim total error similarli concav reward function correspond convex error function vice versa use term rewardbas schedul encompass schedul framework includ imprecis comput iri model task logic decompos mandatori option subtask nondecreas reward function associ execut option part interest question concern type reward function repres realist applic area linear reward function model case benefit overal system increas uniformli option execut similarli concav reward function address case greatest increaserefin output qualiti obtain first portion option execut linear gener concav function consid realist typic literatur sinc adequ captur behavior mani applic area like imag speech process multimedia applic timedepend plan robot controlnavig system realtim heurist search inform gather databas queri process paper show case convex reward function nphard problem thu focu linear concav reward function reward function constraint reward accru unless entir option part execut step function also receiv interest literatur unfortun problem shown npcomplet period rewardbas schedul remain rel unexplor sinc import work chung liu lin paper author classifi possibl applic area error non cumul error cumul former error or option part left unexecut effect futur instanc task wellknown exampl categori task receiv process transmit period audio video compress imag inform retriev task error cumul applic radar track option instanc must execut complet everi predetermin k invoc author prove case errorcumul job npcomplet problem paper restrict error noncumul applic recent qosbas resourc alloc model qram propos period applic studi problem optim alloc sever resourc variou applic simultan meet minimum requir along multipl qo dimens total system util maxim one aspect view gener optim cpu alloc problem multipl resourc qualiti dimens further depend independ qualiti dimens separ address first time work howev fundament assumpt model reward function resourc alloc term util resourc work fall rather along line imprecis comput model reward accru comput separ task instanc problem find optim servic time instanc optim schedul assign aspect period rewardbas schedul problem difficulti find optim schedul period rewardbas task set origin two object must simultan achiev name i meet deadlin mandatori part everi period task invoc ii schedul option part maxim total or averag reward two object import yet often incompat word hard deadlin mandatori part may requir sacrif option part greatest valu system analyt treatment problem complic fact that optim schedul option servic time given task may vari instanc instanc make framework classic period schedul theori inapplic furthermor fact introduc larg number variabl analyt approach final allow nonlinear reward function better character option task contribut overal system optim problem becom comput harder chung liu lin propos strategi assign static higher prioriti mandatori part decis proven paper effect achiev first object mention secur mandatori part potenti interfer option part option part schedul whenev mandatori part readi system simul result regard perform sever polici assign static dynam prioriti among option part report call class algorithm static assign higher prioriti mandatori part mandatoryfirst algorithm solut decoupl object meet deadlin mandatori part maxim total or averag reward formul period rewardbas schedul problem optim problem deriv import surpris properti solut common ie linear concav reward function name prove alway optim schedul option servic time given task vari instanc instanc import result immedi impli optim in term achiev util polici fulli use processor case hardreal time period task also hold context rewardbas schedul in term total reward use optim servic time exampl polici rmsh rate monoton schedul harmon period edf earliest deadlin first llf least laxiti first also extend framework homogen multiprocessor set prove polici fulli util processor also optim schedul period rewardbas task in term total reward multiprocessor environ follow exist proof address problem effici comput optim servic time provid polynomialtim algorithm linear andor gener concav reward function note use optim constant optim servic time also import practic advantag a runtim overhead due exist mandatoryopt dichotomi reward function remov b exist rm harmon period edf llf schedul may use without modif optim assign remaind paper organ follow section system model basic definit given main result optim period polici fulli util processor obtain section section first analyz worstcas perform mandatoryfirst approach also provid result experi synthet task set compar perform polici propos optim algorithm section show concav assumpt also necessari comput effici prove allow convex reward function result nphard problem then examin whether optim ident servic time still hold model modifi drop fundament assumpt section present detail specif optim problem use section conclud summar contribut discuss futur work system model first develop present solut uniprocessor system show extend case homogen multiprocessor system consid set n period realtim task period denot p also equal deadlin current invoc refer j th invoc task task assum independ readi task consist mandatori part option part length mandatori part denot task must receiv least unit servic time deadlin order provid output accept qualiti option part becom readi execut mandatori part complet execut long schedul allow deadlin associ option part task reward function r indic reward accru task ij receiv ij unit servic beyond mandatori portion r f nondecreas concav continu differenti function nonneg real number length entir option part underlin f benefit task ij decreas allow run longer notic reward function r t necessarili differenti note also formul time task option execut time reach threshold valu reward accru ceas increas clearli reward execut option part amount time reward execut therefor benefici execut time unit function fx concav x ff fffi geometr condit mean line join two point concav curv may curv exampl concav function linear function kx function lnkx decay function c th root function x k note first deriv nondecreas concav function nonincreas nondecreas concav reward function mean task receiv servic beyond mandatori portion reward monoton increas howev rate increas decreas remain constant time concav assumpt impli earli portion option execut less import later one adequ captur mani applic area mention introduct mostli concentr linear and gener concav reward function schedul period task feasibl mandatori part meet deadlin everi invoc given feasibl schedul task set t averag reward task defin as p hyperperiod is least common multipl p servic time assign j th instanc option part task is averag reward comput number invoc hyperperiod p analog way definit averag error averag weight reward feasibl schedul given by note result prove easili extend case one interest maxim total reward w constant interv indic rel import option part although gener formul easi see weight w alway incorpor reward function f replac w thu assum weight import inform alreadi express reward function formul reww simpli equal final schedul optim feasibl maxim averag weight reward motiv exampl describ solut problem present simpl exampl show perform limit mandatoryfirst algorithm consid two task assum reward function associ option part linear furthermor suppos k associ reward accru neglig compar k ie k ae k case best algorithm among mandatoryfirst approach produc schedul shown figur figur schedul produc mandatoryfirst algorithm abov assum rate monoton prioriti assign use whenev one mandatori task simultan readi yet follow dynam static prioriti scheme would chang fact processor busi execut sole mandatori part mandatoryfirst approach remain idl interv best algorithm would chosen schedul complet which bring benefit system time unit time unit howev optim algorithm would produc schedul depict figur seen optim strategi case consist delay execut order abl execut valuabl would still meet deadlin mandatori part so would succeed execut two instanc contrast mandatoryfirst scheme execut one instanc rememb k ae k one conclud reward accru best mandatoryfirst scheme may around half accru optim one exampl also observ optim schedul option execut time given task vari instanc instanc next section prove pattern figur optim schedul mere coincid perform analyt worstcas analysi mandatoryfirst algorithm section optim fullutil polici period rewardbas schedul first formal period rewardbas schedul problem object clearli find valu maxim averag reward substitut averag reward express given obtain object function maxim first constraint must enforc total processor demand mandatori option part hyperperiod p may exceed avail comput capac is note constraint necessari mean suffici feasibl task set valu next observ optim ij valu may less zero sinc neg servic time physic interpret addit servic time option instanc need exceed upperbound reward function r t sinc reward accru ceas increas henc obtain second constraint set constraint allow us readili substitut f r object function final need express full feasibl constraint includ requir mandatori part complet time manner everi invoc note suffici one feasibl schedul involv fm g optim valu exist feasibl schedul fm g ft ij g valu express constraint english formula sinc polici algorithm produc schedul includ optim ij assign need specifi point recaptur constraint period rewardbas schedul problem denot rewper find valu to maxim subject exist feasibl schedul fm g ft ij g valu state main result underlin possibl schedul mandatori part time manner optim problem solut note condit equival indic task set would unschedul even consist mandatori part henc thereaft suppos exist least one feasibl schedul theorem given instanc problem rewper exist optim solut option part task receiv servic time everi instanc ie furthermor period hardreal time schedul polici fulli util processor edf llf rmsh use obtain feasibl schedul assign proof strategi prove theorem follow drop feasibl condit obtain new optim problem whose feasibl region strictli contain rewper specif consid new optim problem denot maxrew object function given constraint set satisfi note new problem maxrew priori correspond schedul problem sinc feasibl issu address show exist optim solut maxrew then return rewper demonstr exist feasibl schedul ie satisfi assign reward associ maxrew optim solut alway greater equal rewper optim solut maxrew consid one rewper constraint impli specif optim solut new problem maxrew also optim solut rewper now show exist optim solut maxrew optim solut also optim solut maxrew ffl first show ft valu satisfi constraint alreadi satisfi them sinc constraint violat transform also assumpt arithmet mean necessarili less equal max j constraint set violat either transform ffl furthermor total reward decreas transform sinc proof statement present appendix use claim commit find optim solut maxrew set n case henc version maxrew rewritten as maxim subject final prove optim solut automat satisfi feasibl constraint origin problem rewper equal option servic time given task greatli simplifi verif constraint sinc satisfi write equival impli polici achiev processor util classic period schedul theori edf llf rmsh use obtain feasibl schedul task ident execut time everi instanc henc full feasibl constraint rewper satisfi furthermor schedul clearli maxim averag reward sinc ft g valu maxim maxrew whose feasibl region encompass rewper corollari optim valu problem rewper found solv optim problem given detail solut concav optim problem present section extens multiprocessor exist proof ident servic time easili extend homogen multiprocessor origin formul rewper need modifi order reflect multiprocessor environ note object function lower upper bound constraint option servic time full feasibl constraint kept are howev k processor system potenti task set whose total util k instead henc need chang first constraint accordingli so obtain formul period imprecis comput problem k processor denot multirew maxim subject exist feasibl schedul k processor fm g ft ij g valu follow exactli line reason depict theorem infer follow theorem given instanc problem multirew exist optim solut option part task receiv servic time everi instanc ie furthermor schedul polici achiev full util k processor use obtain feasibl schedul assign exampl fullutil polici multiprocessor provid mancini et al note pfair schedul polici also achiev fullutil assum period multipl slot length henc use context corollari optim valu problem multirew found solv follow optim problem maxim subject again detail solut concav optim problem given section evalu comparison approach show exampl section reward accru mandatoryfirst scheme may approxim half optim algorithm prove that worstcas scenario ratio reward accru mandatoryfirst approach reward optim algorithm approach zero theorem instanc period rewardbas schedul problem ratio reward best mandatorygammafirst scheme reward optim scheme r integ r proof consid two task p r impli r rgamma set suggest period schedul choic execut part addit note mandatoryfirst polici processor continu busi execut mandatori part furthermor best algorithm among mandatoryfirst polici use remain idl time schedul entir sinc unit result schedul shown figur m figur schedul produc mandatoryfirst algorithm averag reward best mandatoryfirst algorithm mfa accru therefor r howev optim algorithm shown figur would choos delay execut unit time everi period so would opportun accru reward everi instancem om r r r r r figur optim schedul total reward schedul is r ratio reward two polici turn for r rmfa ropt r r r made close possibl appropri choos rtheorem give worstcas perform ratio mandatoryfirst scheme also perform experi synthet task set investig rel perform mandatoryfirst scheme propos differ type reward function differ mandatoryopt workload ratio mandatoryfirst scheme differ polici accord option part schedul mandatori part readi execut ratemonoton rmso leastutil lu scheme assign static higher prioriti option part smaller period least util respect among dynam prioriti scheme earliestdeadlinefirst edfo leastlax first llfo consid deadlin laxiti option part assign prioriti least attain time lat aim balanc execut time option part readi dispatch one execut least far final best increment return bir onlin polici choos option task contribut total reward given slot word everi slot bir select option part ij differ f largest here ij option servic time ij alreadi receiv delta minimum time slot schedul assign option task howev still suboptim polici sinc consid laxiti inform author indic bir comput complex actual implement howev sinc total reward accru bir usual much higher five polici bir use yardstick measur perform algorithm use synthet task set compris task whose total mandatori individu task util vari consid exponenti logarithm linear reward function separ case measur reward ratio six mandatoryfirst scheme respect optim algorithm task characterist includ reward function given tabl below experi first set mandatori util which correspond case allopt workload increas subsequ figur show reward ratio six mandatoryfirst scheme respect optim algorithm function mandatori util differ type reward function common pattern appear optim algorithm improv dramat increas mandatori util scheme miss opportun execut valuabl option part constantli favor mandatori part reward loss becom strike mandatori workload increas figur a b show reward ratio case exponenti logarithm reward function respect curv strictli concav reward function fairli similar bir perform best among mandatoryfirst scheme perform decreas mandatori util increas instanc ratio fall mandatori util algorithm amen practic implement in term runtim overhead bir perform even wors howev worth note perform lat close bir expect sinc task set strictli concav reward function usual benefit balanc option servic time util opt reward ratio respect optim rmso llfo edfo a llfo rmso edfo lu reward ratio respect optim opt mandatori figur reward ratio mandatoryfirst scheme strictli concav reward function a exponenti b logarithm function reward ratio respect optim util opt llfo rmso edfo lu figur reward ratio mandatoryfirst scheme linear reward function figur show reward ratio linear reward function although reward ratio mandatori first scheme decreas mandatori util decreas less dramat case concav function see abov howev note ratio typic less five practic scheme interest observ impract bir reward remain compar optim even higher mandatori util differ less opinion main reason behavior chang lie fact that given task reward option execut slot differ instanc make differ linear case contrast execut valuabl first slot given instanc creat tremend effect nonlinear concav function improv optim algorithm would larger larger rang k valu where k coeffici linear reward function note even worstcas perform bir may arbitrarili bad respect optim one linear function theorem suggest consider optim ident servic time underlin theorem key elimin potenti exponenti number unknown therebi obtain optim problem n variabl one natur tempt ask whether optim ident servic time still preserv fundament assumpt model relax unfortun attempt reach optim result extend differ model remain inconclus follow proposit suggest proposit optim ident servic time longer hold deadlin period assumpt relax proof prove statement provid counterexampl assum allow deadlin task less period consid follow two task further assum deadlin deadlin coincid period ie note tight deadlin make imposs schedul option abl schedul unit optim schedul shown figur hand one commit ident servic time per instanc clear may schedul option part sinc could execut first instanc figur next suppos deadlin equal period adopt static prioriti schedul polici alreadi mention section period harmon use rm without compromis optim but gener case period necessarili harmon true even investig best schedul within context given static prioriti assign proposit gener case optim ident servic time longer hold commit static prioriti assign figur optim schedul figur best schedul ident servic time proof again consid follow task set two task consid case higher prioriti show everi case reward optim schedul differ one obtain ident servic time per instanc assumpt case higher prioriti easi see construct schedul fulli util timelin interv lcm schedul also immedi optim sinc reward function linear observ henc receiv reward execut but remark execut unit first instanc feasibl schedul without violat deadlin therefor would end lower reward execut unit instanc commit ident servic time figur b case higher prioriti optim still compromis higher prioriti optim schedul figur a fulli util timelin best schedul figur remain suboptim remark proposit also implic qram model sinc point imposs achiev optim ident servic time use static prioriti assign a b figur higher prioriti a optim schedul b best schedul ident servic time mo omm mo omm momm a b figur higher prioriti a optim schedul b best schedul ident servic time final proposit section illustr optim ident servic time also sensit concav reward function proposit optim ident servic time longer hold concav assumpt reward function relax proof consid two harmon task without mandatori part whose paramet given follow tabl note assign maximum possibl valu ie upper bound sinc margin return f larger f everywher optim schedul maxim averag reward two task depict figur o figur optim schedul sum averag reward optim schedul howev commit equal servic time per instanc find better schedul one shown figur whose reward difficult construct similar exampl task constraint well impli even number variabl deal the ij s may prohibit larg problem figur servic time period rewardbas schedul problem convex reward function nphard mention befor maxim total or averag reward constraint case alreadi proven npcomplet similarli section show that reward function convex optim ident servic time preserv section show that fact convex reward function result nphard problem even ident period show transform subsetsum problem known npcomplet rewper convex reward function subsetsum given set posit integ integ m set sa construct correspond rewper instanc follow let consid set n period task period mandatori part i reward function associ given by strictli convex increas function nonneg real number notic f t rewritten also underlin period task impli rewper formul as maxim subject let us denot maxrew total reward optim schedul observ quantiti otherwis either boundari valu maxrew wm now consid question is maxrew equal wm clearli question answer quickli polynomialtim algorithm rewper reward function allow convex furthermor answer posit equal either therefor maxrew equal wm set sa impli rewper convex reward function nphard solut period rewardbas schedul problem concav reward function corollari reveal two optim problem whose solut provid optim servic time uniprocessor multiprocessor system share common form maxim subject the slack avail option execut b posit ration number section present polynomialtim solut problem f nondecreas concav differenti function first note that avail slack larg enough accommod everi option part entir ie choic clearli maxim object function due nondecreas natur reward function otherwis slack use entireti sinc total reward never decreas again due nondecreas natur reward function case obtain concav optim problem lower upper bound denot optlu instanc optlu specifi set nondecreas concav function g set upper bound avail slack d aim to maxim subject auxiliari optim problem introduc shortli differenti assumpt hold well special case linear function address separ case f compris sole linear function sinc time complex consider reduc use inform note function f increas delta total reward increas k delta howev so make use b delta unit slack d reduc b delta due henc margin return task per slack unit w consid anoth function f alway favor respect sinc margin return f j strictli greater f everywher repeat argument everi pair task obtain follow optim strategi first order function accord margin return w function largest margin return f second tie broken arbitrarili d set done we use entir slack sinc transfer servic time task would increas total reward b set reduc accordingli next repeat next most valuabl n iter slack complet consum note solut analog one present domin factor time complex come initi sort procedur henc special case alllinear function optlu solv time on log n f contain nonlinear function procedur becom involv next two subsect introduc two auxiliari optim problem name problem opt which consid equal constraint problem optl which consid equal lower bound constraint use solv optlu problem opt case equal constraint instanc problem opt character set nondecreas concav function slack d maxim subject seen opt take account lower upper bound constraint problem optlu algorithm return solut problem opt denot algorithm opt f compos sole nonlinear reward function applic lagrang multipli techniqu problem opt yieldsb common lagrang multipli f deriv reward function f quantiti actual repres margin return contribut total reward denot w t observ sinc f nondecreas concav assumpt nonincreas posit valu equat impli margin return equal reward function optim solut g consid equal also hold one obtain close formula case occur practic close formula present obtain method ffl logarithm reward function form f ffl exponenti reward function form f ffl k th root reward function form f possibl find close formula follow exactli approach present solv equat invers function we assum exist deriv invers function whenev f nonlinear compli determin optim solut examin case f mix linear nonlinear function consid two linear function f t margin return f f j w servic time definit zero sinc margin return f strictli less f j everywher elimin process linear function largest margin return w max consid singl linear function procedur evenli divid return servic time max among valu correspond p function henc without loss gener assum f n linear function f margin return w first comput optim distribut slack among task nonlinear reward function f lagrang multipli techniqu w thu w t optim solut distinguish two case case optim solut opt see thi first rememb reward function concav nondecreas henc w impli transfer servic time anoth task n would mean favor task smaller margin reward rate would optim case reserv slack sole task nonlinear reward function mean violat best margin rate principl henc optim therefor increas drop level w beyond solv assign remain slack dgamma bn n the servic time uniqu task linear reward function clearli satisfi best margin rate principl achiev optim problem optl case lower bound section present solut problem optl improv solut section instanc problem optl character set fff nondecreas concav reward function avail slack d maxim subject solv optl first evalu solut set sopt correspond problem opt check whether inequ constraint automat satisfi case solut set sopt gammal problem optl clearli solut sopt otherwis construct sopt gammal iter describ below wellknown result nonlinear optim theori state solut sopt gammal problem optl satisfi socal kuhntuck condit furthermor kuhntuck condit also suffici case concav reward function problem optl kuhntuck condit compris equat and lagrang multipli necessari suffici charact kuhntuck condit indic n tupl satisfi condit provid optim valu optl one method solv optim problem optl find solut n equat satisfi constraint set iter solv n nonlinear equat complex process guarante converg paper follow differ approach name use kuhntuck condit prove use properti optim solut method base care use properti deriv order refin solut optim problem opt violat inequ constraint given proof assum contrari case kuhntuck condit reduc equal constraint set inequ constraint plu lagrangian condit given hand sopt solut opt satisfi lagrangian condit word solv opt alway equival solv set nonlinear equat ident kuhntuck condit optl except inequ constraint set henc solut optl solut would return algorithm solv opt would violat inequ constraint howev given solut sopt fail satisfi inequ constraint reach contradict therefor exist least one lagrang multipli strictli greater claim j proof sake contradict assum j j case equat enforc true equal leav slack total unutil case clearli would optim solut due nondecreas natur reward functionsin rest paper use express the set function instead the set indic function unless confus aris let rememb margin return associ f x t x denot w x t x in formal pi contain function f x f smallest margin return lower bound lemma sopt violat inequ constraint then sopt gammal proof assum pi case equat impli correspond know j j equat use equat writeb concav properti f suggest case contradict assumpt pi henc m equat in view lemma present algorithm solv problem optl figur algorithm optlfd evalu solut sopt optim problem without inequ constraint inequ constraint satisfi sopt gammal sopt exit comput pi equat goto step figur algorithm solv problem optl complex time complex copt n algorithm opt on if mention close appli complex clearli linear otherwis uniqu unknown solv linear time concav assumpt indic lemma immedi impli exist algorithm set reinvok algorithm opt remain task slack in case inequ constraint violat sopt sinc number invoc bound n complex algorithm solv optlu on faster solut problem optl section present faster algorithm time complex on delta log n solv optl make use new faster algorithm final solut optlu consid algorithm optl depict fig let f k set function pass opt k th iter algorithm optl pi k set function minimum margin return lower bound minimum w valu k th iter formal pi f number distinct w valu among function f n iter number algorithm opt return solut set satisfi constraint set given remain valu note element pi produc on delta log n time preprocess phase clearli algorithm optl sequenti set return solut violat constraint set remain unknown m th iter tempt idea use binari search rang n locat critic index faster way howev justifi correct procedur one need prove one set invok subsequ algorithm opt sopt obtain way would still satisfi constraint set given notic properti hold possibl determin direct search simpli test sopt given index i sinc must assur exist uniqu index that set invok opt provid solut sopt satisfi inequ constraint whenev set invok opt provid solurion sopt satisfi inequ constraint whenev first properti follow directli correct algorithm optl turn second properti also hold concav object function proven below henc time complex copt gammal n may reduc on delta log n use binari search like techniqu algorithm fastl solv problem optl time on delta log n shown figur correct proof fast algorithm begin introduc follow addit notat regard k th iter algorithm optl assign option part task opt k th iter algorithm optl solut produc opt k th iter algorithm optl g set indic solut soptk violat inequ constraint clearli algorithm optl success set return solut violat constraint function fm m th iter algorithm fastl use binari search determin critic index effici correct algprithm optl assur invok opt algorithm fastlfd evalu sopt correspond problem opt constraint satisfi sopt gammal sopt exit enumer function f accord nondecreas order w j valu construct set pi evalu sopt invok optpi m constraint violat els f evalu sopt invok constraint violat els f figur fast algorithm problem optl would yield nonempti violat set v remain task final proposit establish gamma v alway remain empti set invok opt sinc would leav even slack remain task algorithm fastl specif index test iter check whether satisfi properti case sinc one index satisfi properti howev case vm infer next probe determin rang m n final restrict search rang proposit suppos that execut algorithm optl soptk violat inequ constraint ie th invoc algorithm opt remain task yield soptk ik ik which impli v k still empti proof note ik assumpt base optim properti subproblem k th invoc algorithm opt yield optim solut also gener optim distribut gamma among function f k gamma pi k howev th invoc provid optim distribut among function f k gamma pi k well by set thu two success invoc algorithm opt written as maxim subject maxim subject henc proof complet show f solut soptk satisfi firstord necessari condit lagrangian necessari condit giveb c b sake contradict assum w f must f k gamma pi k yk yk distinguish two case f w nonlinear is deriv strictli decreas sinc f also concav f f clearli inconsist equat easili seen substitut w c equat respect f w linear impli f j case satisfi equat also linear form f bw henc two function margin return rememb assumpt section algorithm opt treat linear function margin return fairli that is assign amount servic time reach contradict sinc wk suppos greater yk complex olog n probe made binari search probe algorithm opt call twice recal algorithm opt time complex on initi cost sort deriv valu on log n henc total complex copt gammal log log n on delta log n combin constraint solut problem optlu instanc problem optlu character set f ff nondecreas differenti concav reward function set o upper bound length option execut part avail slack d maxim subject recal specif optlu first observ close relationship problem optlu optl inde optlu addit set upper bound constraint difficult see sopt gammal satisfi constraint given equat solut sopt gammalu problem optlu sopt gammal howev upper bound constraint violat construct solut iter way analog describ solut problem optl contain function f x f largest margin return upper bound w x o x algorithm algoptlu see figur solv problem optlu base success invoc fastl first find solut sopt gammal correspond problem optl know solut optim simpler problem take account upper bound upper bound constraint automat satisfi done howev case set gamma final updat set f slack go next iter correct algorithm selfexplanatori view result obtain previou section howev line algoptlu requir elabor addit constraint necessari suffici kuhntuck condit problem optlu express as algorithm optlufod evalu sopt gammal invok algorithm fastl upper bound constraint satisfi set ffgammagamma set oogammafo x jx gammag figur algorithm solv problem optlu lagrang multipli violat upper bound constraint given equat proof assum case kuhntuck condit vanish also condit becom exactli ident kuhntuck condit problem optl thu sopt gammal return algorithm fastl also equal sopt gammalu satisfi extra constraint set given claim proof assum case forc us choos impli contrari assumpt specif problem readi justifi line algorithm violat upper bound constraint given sopt gammalu gamma proof prove lagrang multipli nonzero impli by know j use give sinc necessarili less equal deduc contradict assumpt gammacomplex notic worst case time complex iter equal algorithm fastl on delta log n observ cardin f decreas least iter henc number iter bound n follow total time complex copt gammalu n on delta log n conclus paper address period rewardbas schedul problem prove reward function convex problem nphard thu focu linear concav reward function adequ repres realist applic imag speech process timedepend plan multimedia present shown class reward exist alway schedul option execut time given task chang instanc instanc result turn impli optim period realtim polici schedul task set util k k processor exist polici wellknown realtim system commun rm with harmon period edf llf uniprocessor system gener schedul polici fulli util multiprocessor system also present polynomialtim algorithm comput optim servic time believ effici algorithm also use concav resourc allocationqo problem one address underlin besid clear observ reward improv previous propos suboptim polici approach advantag requir runtim overhead maxim reward system constantli monitor timeli mandatori part optim option servic time determin static algorithm exist eg edf schedul need modifi awar mandatoryopt semant distinct all opinion anoth major benefit precomput optim equal servic time given task invoc rewardbas schedul addit theorem impli long concern linear concav reward function resourc alloc also made term util task without sacrif optim opinion fact point interest converg instancebas utilizationbas model common reward function tractabl issu regard natur reward function case step function alreadi proven npcomplet effici solv case concav linear reward function prove case convex reward function nphard effici solvabl boundari period aperiod rewardbas schedul reach work assum final provid exampl show theorem optim ident servic time per instanc longer hold relax fundament assumpt deadlineperiod equal avail dynam prioriti schedul polici consid dynam aperiod task arriv investig good approxim algorithm intract case step function error cumul job major avenu rewardbas schedul r polynomialtim algorithm solv rewardbas schedul prob lem fair period realtim schedul solv timedepend plan problem scalabl video code use d subband veloc code multir quan tizat scalabl video data placement parallel disk data array schedul period job allow imprecis result algorithm schedul realtim task input error endtoend deadlin extend imprecis comput model timeconstrain speech process gener dynam prioriti assign techniqu stream m architectur foundat realtim perform intellig agent reason vari uncertain resourc constraint effici onlin processor schedul class iri increas reward increas servic realtim task algorithm complex overload system allow skip imprecis result util partial comput realtim system schedul algorithm multiprogram hard realtim environ algorithm schedul imprecis comput linear nonlinear program schedul algorithm faulttoler hardrealtim system fundament design problem distribut system hard realtim environ classic optim foundat extens resourc alloc model qo manag algorithm schedul imprecis comput minim total error imag transfer endtoend design produc monoton improv approxim answer relat algebra queri anytim sens tr ctr r m santo j urriza j santo j orozco new method redistribut slack time realtim system applic compar evalu journal system softwar v n p januari hakan aydin rami melhem daniel moss pedro mejaalvarez powerawar schedul period realtim task ieee transact comput v n p may shaoxiong hua gang qu shuvra s bhattacharyya energi reduct techniqu multimedia applic toler deadlin miss proceed th confer design autom june anaheim ca usa xiliang zhong chengzhong xu frequencyawar energi optim realtim period aperiod task acm sigplan notic v n juli melhem nevin aboughazaleh hakan aydin daniel moss power manag point powerawar realtim system power awar comput kluwer academ publish norwel ma melhem daniel moss maxim reward realtim applic energi constraint acm transact embed comput system tec v n p novemb jeffrey a barnett dynam tasklevel voltag schedul optim ieee transact comput v n p may lui sha tarek abdelzah karlerik rzn anton cervin theodor baker alan burn giorgio buttazzo marco caccamo john lehoczki aloysiu k mok real time schedul theori histor perspect realtim system v n p novemberdecemb