t alternatingtim tempor logic a tempor logic come two varieti lineartim tempor logic assum implicit univers quantif path gener execut system branchingtim tempor logic allow explicit existenti univers quantif path introduc third gener varieti tempor logic alternatingtim tempor logic offer select quantif path possibl outcom game game system environ altern move lineartim branchingtim logic natur specif languag close system alternatingtim logic natur specif languag open system exampl preced tempor oper eventu select path quantifi specifi game system environ system strategi reach certain state problem recept realiz control formul modelcheck problem alternatingtim formula depend whether admit arbitrari nest select path quantifi tempor oper obtain two alternatingtim tempor logic atl atlastatl atlast interpret concurr game structur everi state transit concurr game structur result choic move one player player repres individu compon environ open system concurr game structur captur variou form synchron composit open system augment fair constraint also asynchron composit structur without fair constraint modelcheck complex atl linear size game structur length formula symbol modelcheck algorithm ctl extend modif atl structur weakfair constraint atl model check requir solut pair rabin game done polynomi time structur strongfair constraint atl model check requir solut game boolean combin bchi condit done pspace case atlast modelcheck problem close relat synthesi problem lineartim formula requir doubli exponenti time b introduct pnueli propos use lineartim tempor logic ltl specifi requir reactiv system pnu formula ltl interpret comput infinit sequenc state reactiv system satisfi ltl formula comput do due implicit use univers quantif set comput cannot express existenti possibl prop erti branchingtim tempor logic ctl ctl provid explicit quantif set comput ce eh instanc state predic ctl formula requir state satisfi visit computa tion ctl formula requir exist comput visit state satisfi problem model check verifi whether finitest abstract reactiv system satisfi temporallog specif ce qs effici model checker exist ltl eg spin hol ctl eg smv mcm increasingli use debug aid industri design logic ltl ctl natur interpret comput close system close system system whose behavior complet determin state system howev composit model design reactiv system requir compon view open system open system system interact environ whose behavior depend state system well behavior environ model open system csp hoa io automata lyn reactiv modul ah distinguish intern nondetermin choic made system extern nondetermin choic made environ ment consequ besid univers do comput satisfi properti existenti doe comput satisfi properti question third question aris natur system resolv intern choic satisfact properti guarante matter environ resolv extern choic altern satisfact view win condit twoplay game system environ altern natur gener existenti univers branch studi extens theoret comput scienc ck differ research argu gamelik interpret ltl ctl specif open system list four instanc here recept dil al gssl given reactiv system specifi set safe comput typ ical gener transit relat set live comput typic express ltl formula recept problem determin whether everi finit safe comput extend infinit live comput irrespect behavior environ sensibl necessari composition requir affirm answer recept problem realiz pro gram synthesi alw pra prb given set input output signal synthesi problem requir construct reactiv system assign everi possibl input sequenc output sequenc result comput satisfi supervisori control rw given finitest machin whose transit partit control uncontrol set safe state control problem requir construct control choos control transit machin alway stay within safe set or satisfi gener ltl formula modul check kv given open system modulecheck problem determin if matter environ restrict extern choic system satisfi approach use temporallog syntax develop specifi close sy tem reformul semant open system paper propos instead enrich tempor logic altern properti specifi explicitli within logic introduc alternatingtim tempor logic specif verif open system formul open system con sider instead system environ gener set set sigma agent correspond differ compon system environ schedul agent consid two polici state synchron sy tem known advanc agent proce state asynchron system sever agent may enabl unknown schedul determin agent take next step latter case schedul requir fair agent is infinit comput agent cannot continu enabl without schedul set sigma agent set gamma comput state w system consid follow game protagonist adversari game start state w whenev schedul agent set a protagonist choos next state otherwis adversari choos next state result infinit comput belong set gamma protagonist win protagonist win strategi say altern time formula hhaiigamma satisfi state w here hhaii path quantifi parameter set agent rang comput agent forc game into irrespect agent sigma na play henc parameter path quantifi hhaii gener path quantifi branchingtim tempor logic existenti path quantifi correspond hhsigmaii univers path quantifi correspond hhii par ticular close system view system singl agent sy then two possibl parameter path quantifi hhsysii hhii match exactli path quantifi requir specifi system depend syntax use specifi set gamma comput obtain two alternatingtim tempor logic logic atl set gamma specifi formula ltl restrict logic atl set gamma specifi singl tempor oper appli state formula thu atl altern gener ctl atl altern gener ctl alternatingtim tempor logic conveni express properti open system illustr follow five exampl multiprocess distribut system requir subset process attain goal irrespect behavior remain process consid exampl cachecoher protocol gigamax verifi use smv mcm one desir properti absenc deadlock deadlock state one processor say a perman block access memori cell requir specifi use ctl formul captur inform requir precis ctl formula assert alway possibl processor cooper eventu read write collabora tive possibl atl formula stronger guarante memori access processor a matter processor system adversari possibl ctl formula assert state predic invari system compon irrespect behavior compon adversari invari atl which stand hhsigma n fagii state weaker requir possibl invari compon a is cannot violat own therefor system compon may cooper achiev collabor invari invari complex system necessari but suffici check everi compon satisfi atl formula a recept system whose live comput given ltl formula specifi check realiz program synthesi correspond model check atl formula hhsysii maxim model consid possibl input output control system whose safe state given state predic specifi thesi then correspond model check formula gener ltl formula atl requir hhcontrolii assert control strategi ensur satisfact notic atl better suit composit reason ctl instanc compon satisfi ctl formula cannot conclud compound system akb also satisfi hand satisfi atl formula hhaii akb modelcheck problem alternatingtim tempor logic requir comput win strategi case synchron atl game finit reachabl game consequ modelcheck complex linear size system length formula case ctl check existenti reachabl correspond iter existenti nexttim oper check univers reachabl correspond iter univers next check altern reachabl correspond iter appropri mix govern parameter path quantifi suggest simpl modelcheck procedur synchron atl show exist symbol model checker ctl modifi check atl specif extra cost asynchron model due presenc fair constraint atl model check requir solut infinit game name gener buchi game vw consequ modelcheck complex quadrat size system symbol algorithm involv nest fixedpoint comput modelcheck problem atl much harder show complet exptim synchron asynchron case alternatingtim logic atl syntax tempor logic atl alternatingtim logic defin respect finit set pi proposit finit set sigma agent atl formula one proposit atl formula set agent atl formula oper hh ii path quantifi next u until tempor oper logic atl similar branchingtim logic ctl path quantifi parameter set agent ang known write ii instead hhfa gii synchronousstructur semant formula atl interpret synchron structur set proposit sigma set agent w set state r w theta w total transit relat ie everi state w w exist state rw w function map state w w set w pi proposit true w function oe map state w w agent oew sigma enabl w note precis one agent enabl state set sigma agent denot wa w set state w oew a fag singleton write w instead w fag two state w w rw w say w successor w comput infinit sequenc state rw refer comput start state w w comput comput fl index use fli fl i denot ith state fl finit prefix fl respect order defin semant atl first defin notion strategi strategi agent sigma function f w delta w w f fl delta thu strategi map finit prefix comput possibl extens compu tation intuit strategi f suggest histori fl state w enabl successor f fl delta w w strategi f induc set comput agent enforc given state w set ang agent set g strategi agent a defin outcom fa w set outw fa wcomput agent enforc cooper follow strategi fa is wcomput fl w fa iff whenev fl visit state whose agent k a comput proce accord strategi f ak formal k a w particular outcom set outw fa contain singl wcomput outcom set outw fa contain wcomput turn formal definit semant atl write w indic state w synchron structur satisfi when subscript clear context omit it satisfact relat defin state w w induct follow ffl p pi w exist set fa strate gie one agent a comput exist set fa strate gie one agent a comput exist index flj train train ctr gate gate request gate grant gate ctr figur synchron traincontrol system note next oper hhaii give local con straint w exist successor w satisfi w wa successor w satisfi denot w set state w w sinc parameter path quantifi hhsigmaii hhii correspond existenti univers path quan tific respect write hhsigmaii hhii logic ctl fragment atl interpret structur singl agent dual hh ii use path quantifi hhsigma n aii rang comput agent strategi enforc path quantifi rang comput agent strategi avoid therefor also ctl tempor oper eventu alway defin oper hhaiitru u exampl consid synchron structur shown figur structur describ protocol train enter gate railroad cross ing moment train either gate gate order enter gate train issu request servic grant reject control next step grant train may enter gate relinquish grant structur two agent train control two state structur label ctr control is comput one state control choos next state two state control train choos successor state system satisfi follow specif whenev train outsid gate grant enter gate control prevent enter gate out gate grant hhctr iiout gate whenev train outsid gate control cannot forc enter gate out gate ctrout gate whenev train outsid gate train control cooper train enter gate out gate hhctr trainiiin gate whenev train gate control forc singl step gate first two specif cannot state ctl provid inform ctl gate requir exist comput train alway outsid gate atl formula guarante matter train be have control prevent enter gate matter control behav train decid stay outsid gate sinc state structur either control state train state third specif equival out gate gate asynchronousstructur semant formula atl also interpret asynchron structur pi sigma r l synchron structur function oe map transit r r agent oer sigma own r agent sigma denot r r set transit own a two state w w r w w say w asuccessor w note state w may none sever asuccessor state w defin enabl w sigma set agent exist asuccessor w write w set state w enabledw synchron structur comput infinit sequenc state rw given set sigma agent comput fl afair iff agent index exist j either enabl w j r w is afair comput agent continu enabl without schedul similar synchron case strategi agent sigma function f w delta w w f fl delta r w w thu agent appli strategi influenc comput whenev schedul howev unlik synchron structur known advanc agent schedul particular state encount given state w set ang agent set g strategi agent a defin outcom w fa set wcomput agent enforc follow strategi f f schedul polici fair respect a formal comput k a w afair definit satisfact atl formula asynchron structur synchron case definit out come exampl w everi agent enabl w either exist a successor w w w asuccessor w w w synchron atl fragment asynchron atl interpret structur state w set enabledw enabl agent singleton set sigma agent singleton synchron asynchron interpret coincid and equal ctl exampl consid asynchron structur shown figur structur describ algorithm easili modifi account differ ent stronger type fair gate gate request gate grant gate train ctr train train train train ctr ctr ctr figur asynchron traincontrol system protocol train enter gate protocol similar one describ exampl request train enter gate servic asynchron futur step fair schedul polici ensur request servic grant reject eventu four specif exampl hold also asynchron system check synchron resp asynchron modelcheck problem atl ask given synchron asyn chronou structur atl formula set state satisfi measur complex modelcheck problem two way joint complex model check consid complex term size structur length formula structur complex model check consid complex term structur onli assum formula fix sinc structur typic much larger formula size common comput bottleneck structurecomplex measur particular practic interest lp synchron model model check synchron atl similar ctl model check ce qs bcm first present symbol algorithm manipul state set given synchron structur s algorithm shown figur use follow primit oper ffl function sub given return queue sub subformula subformula subformula preced queue sub ffl function propcheck given proposit return state set p ffl function pre given two state set ae return set state w either successor w w ae successor w ffl union intersect differ inclus test state set primit implement use symbol represent binari decis diagram state set transit relat given symbol model checker ctl smv mcm pre oper need modifi check atl sub case case case case case ae fals ae ae case return figur symbol atl model check altern atl modelcheck algorithm implement use enum represent state set w structur s then subformula everi state w w label iff w w label label state formula proce bottomup fashion follow order sub smaller larger subformula gener rule s s form hhaii label procedur straight forward label procedur correspond solv reachabl problem andor graph state wa ornod remain state andnod need comput set node orplay reach state label stay within state label sinc reachabl problem andor graph solv time linear number edg follow label procedur requir linear time subformula furthermor sinc reachabl andor graph ptimehard problem imm reduc model check synchron atl conclud follow theorem theorem synchron modelcheck problem atl ptimecomplet solv time om structur transit formula length structur complex problem also ptimecomplet interest compar modelcheck complex synchron atl ctl problem solv time om ce structur complex ctl model check nlogspacecomplet bvw model check relat graph reachabil iti synchron atl model check relat andor graph reachabl asynchron model consid asynchron structur state set w formula atl synchron case subformula comput set state satisfi start innermost subformula purpos transform asynchron structur synchron structur follow proposit proposit s agent agent s plu new agent b call schedul state state s plu everi state w w everi agent enabl w new state q wa then transit w w own agent replac two transit one w q wa q wa w proposit true state w q wa true state w s agent enabl state w b agent enabl state q wa a thu synchron structur first schedul choos one enabl agent chosen agent take step consid subformula hhaii more gener formula handl similarli evalu formula state w w correspond follow game protagonist ad versari game play synchron structur start w agent enabl current state a protagonist choos successor state otherwis adversari choos next state state w satisfi visit protagonist win game continu forev adversari win iff result comput fair agent a is contain either infinit mani state form q wa infinit mani state w w enabl state w s then state w satisfi formula hhaii iff protagonist win strategi win condit adversari specifi w w defin state enabl w defin state enabl buchi game set win state adversari comput nest fixedpoint comput ae true ae ae w n w ae od od enum implement complex solv buchi game quadrat number transit structur vw transi tion transit thu label procedur subformula hhaii requir om time subformula ii win condit adversari conjunct n buchi condit to precis ak w ak game transform game singl buchi condit introduc counter variabl rang set ng vw henc label procedur subformula requir om determin complex evalu subformula defin size logic connect size tempor connect number agent correspond path quantifi then size connect time complex om n k bound length formula final sinc synchron modelcheck problem special case asynchron problem conclud follow theorem theorem asynchron modelcheck problem atl ptimecomplet solv time om structur transit atl formula length structur complex problem also ptimecomplet interest compar modelcheck complex asynchron atl fairctl gener buchi fair constraint latter solv omk time vw k number buchi constraint best known algorithm former quadrat m model check relat check empti buchi automata asynchron model check relat check empti altern buchi automata alternatingtim logic atl logic atl fragment express logic call two type formula state formula whose satisfact relat specif state path formula whose satisfact relat specif comput formal state formula one follow proposit state formula hhaii sigma set agent path formula path formula one follow path formula path formula logic atl consist set state formula gener rule similar branchingtim tempor logic ctl path quantifi parameter set agent logic atl fragment atl consist formula everi tempor oper immedi preced path quantifi semant atl defin similarli semant atl write fl indic comput fl structur satisfi path the subscript usual omit satisfact relat j defin state w comput fl induct follow ffl state formula gener rule s s definit j atl exist set fa strategi one agent a comput state formula iff fl exist index fli befor tempor oper defin u usual exampl assert agent strategi enforc that whenev request continu issu infinit mani grant given specif cannot express ctl atl singleag structur degener ctl exponenti price paid modelcheck complex move ctl price becom even signific consid alternatingtim version logic theorem synchron asynchron case modelcheck problem atl exptimecomplet case structur complex problem ptimecomplet proof sketch given synchron structur state set w atl formula label state state subformula start innermost state subformula state subformula form hhaii employ algorithm modul check kv follow let result replac state subfor mula alreadi evalu appropri new proposit state w set fa strategi set outw fa comput induc tree obtain unwind w prune subtre whose root successor state wa chosen strategi fa construct buchi tree automaton twa accept tree induc outw fa set fa strategi rabin tree automaton t accept tree satisfi kv twa jw j state es t state ojj accept pair intersect two automata rabin tree automaton contain outcom tree satisfi henc semant atl state w satisfi hhaii iff intersect nonempti ej pra nonempti problem rabin tree automaton n state k pair solv time okn n henc evalu subformula hhaii singl state requir time sinc jw j state ojj mani subformula membership exptim follow asynchron case reduc synchron case similar proof theorem lower bound use reduct realiz problem ltl exptimehard problem ro model check synchron atl contrast ctl model check pspacecomplet ce structur complex nlogspacecomplet bvw verif problem open system correspond modelcheck problem tempor logic correspond case linear time realiz problem alw pra prb case branch time modul check problem kv is search win strategi regular game gener involv hefti comput price logic atl identifi interest class properti check solv finit game demonstr still great deal reason open system perform effici conclud sever remark variat atl support design choic agent limit memori definit atl atl strategi agent may depend unbound amount infor mation name full histori game current state howev sinc involv game regular exist win strategi impli exist win finitest strategi tho depend finit amount inform histori game thu semant atl atl defin equival use outcom finitest strategi onli in terest strategi thought parallel composit system control make sure system follow strat egi then appropri definit parallel composit precis finitest strategi implement use control synchron structur inde finit reachabl game gener buchi game atl suffic consid memoryfre strategi tho implement control map ie control without state case atl whose formula specifi win posit game tho agent limit inform model assum agent structur complet inform proposit which state satisfi proposit agent which agent own transit sometim may appropri assum agent sigma observ subset pi pi proposit strategi f pi pi must depend observ part histori decid observ part next state undecid result multiplay game incomplet inform follow modelcheck problem atl incomplet inform undecid synchron yan asynchron pr case special case path quantifi parameter singl agent cooper agent differ inform possibl decid follow result modul check incomplet inform kv case modelcheck complex synchron asynchron atl exptimecomplet exptimecomplet atl structur complex four problem exptimecomplet thu render reason agent incomplet inform infeas even sever restrict game logic modul check parameter path quantifi hhaii first stipul exist strategi agent univers quantifi outcom stipul strategi one may gener atl atl separ two concern strategi quantifi path quantifi say write a instead hhaii read there exist strategi agent a then exampl formula assert agent strategi behavior remain agent alway true possibl differ behavior remain agent alway true defin semant strategi quan tifier need consid tree induc outcom set strategi obtain three type formula state formula path formula ctl atl tree formula whose satisfact relat specif outcom tree instanc state formula subformula tree formula refer gener logic strategi quantifi path quantifi tempor oper boolean connect game logic then atl fragment game logic consist formula everi strategi quantifi immedi follow path quantifi note a equival anoth fragment game logic studi modul check kv there one consid formula form a singl outermost strategi quantifi follow ctl ctl formula express viewpoint alternatingtim logic modul check identifi incompar fragment game logic formula equival atl formula atl formula equival formula singl strategi quantifi kv shown modulecheck complex exptimecomplet ctl exptim complet ctl structur complex problem ptimecomplet appli method bottomup fashion use solv modelcheck problem game logic result joint complex exptim structur complex ptime thu game logic expens atl feel howev unlik state path formula tree formula natur specif reactiv system alternatingtim fixpoint logic tempor properti use oper defin fix point nexttim properti close system give calculu gener tempor logic koz similar fashion one gener alternatingtim tempor logic obtain alternatingtim calculu whose primit parameter next construct hhaii least greatest fixedpoint oper posit boolean connect then atl proper fragment alternatingtim calculu everi formula equival fixedpoint formula without altern least greatest fix point practic howev design prefer tempor oper fix point bbg ctl ctl captur use friendli subset calculu specif close system atl atl captur use friendli subset alternatingtim calculu specif open system worth note ctl parameter next construct suffici use cannot specifi unbound altern reachabl properti hhaii bvw henc essenti atl parameter path quan tifier nexttim oper alternatingtim transit system parameter next construct hhaii differ similar oper commonli written interpret for agent a exist asuccessor rather atl formula hhaii equival a sigmana abstract specif open system essenti parameter next gamelik interpret standard modal interpret definit synchron asynchron structur approxim real concurr model open system synchron eg ah asynchron eg lyn struc ture transit correspond step singl agent model transit may result simultan independ decis sever agent gener situat give rise game complex individu move captur abstractli altern transit system see full paper gamelik interpret parameter next make atl robust respect chang definit individu move particular result carri altern transit system therefor appli exampl reactiv modul ah acknowledg thank amir pnueli mosh vardi mihali yannakaki help discuss r reactiv modul compos specifica tion realiz unrealiz concurr program specif symbol model check state beyond automatatheoret approach branchingtim model check design synthesi synchron skeleton use branchingtim tempor logic automat verif finitest concurr system use tempor logic specif trace theori automat hierarch verif speedindepend circuit branch versu linear time complex tree automata logic program decid branchingtim logic live time untim system commun sequenti pro cess model checker spin number quantifi better number tape cell result proposit calculu modul check modul check re visit check finitest concurr program satisfi linear specif distribut algorithm symbol model check tempor logic program synthesi reactiv modul synthesi asynchron reactiv modul specif verif concurr system cesar control discret event system modular synthesi reactiv sy tem synthesi strategi infinit game person commun tr commun sequenti process myampersandldquosometimesmyampersandrdquo myampersandldquonot nevermyampersandrdquo revisit automat verif finitest concurr system use tempor logic specif synthesi reactiv modul trace theori automat hierarch verif speedindepend circuit automata infinit object tempor modal logic symbol boolean manipul order binarydecis diagram symbol model check ectl fragment modal myampersandmgrcalculu conjoin specif model checker spin modal model check extend abstract check finit state concurr program satisfi linear specif menbership problem function multivalu depend relat databas altern reactiv modul automatatheoret approach branchingtim model check modul check jmocha distribut algorithm symbol model check automata infinit object church problem realiz unrealiz specif reactiv system synthesi asynchron reactiv modul fair simul relat pariti game state space reduct bmyampersanduumlchi automata small progress measur solv pariti game control synchron system control synchron system part ii complex branch modular model check extend abstract specif verif concurr system cesar mocha lineartim modelcheck algorithm alternationfre modal mucalculu design synthesi synchron skeleton use branchingtim tempor logic live time untim system tree automata game decid branch time logic ctr xianwei lai shanli hu zhengyuan ning improv formal framework action individu intent group intent multiag system proceed ieeewicacm intern confer intellig agent technolog p decemb wojciech jamroga thoma gotn agent achiev incomplet inform proceed fifth intern joint confer autonom agent multiag system may hakod japan thoma gotn wieb van der hoek michael wooldridg logic coalit game proceed fifth intern joint confer autonom agent multiag system may hakod japan suchismita roy sayantan da prasenjit basu pallab dasgupta p p chakrabarti sat base solut consist problem formal properti specif open system proceed ieeeacm intern confer computeraid design p novemb san jose ca luigi sauro jell gerbrandi wieb van der hoek michael wooldridg reason action cooper proceed fifth intern joint confer autonom agent multiag system may hakod japan krishnendu chatterje luca de alfaro thoma a henzing complex quantit concurr pariti game proceed seventeenth annual acmsiam symposium discret algorithm p januari miami florida van der hoek michael wooldridg dynam deleg cooper control logic account proceed fourth intern joint confer autonom agent multiag system juli netherland aleksandra nenadi ning zhang qi shi rsabas verifi recover encrypt signatur applic certifi email deliveri journal comput secur v n p octob aldewereld wieb van der hoek johnjul meyer ration team logic aspect multiag system fundamenta informatica v n p april valentin goranko govert van drimmelen complet axiomat decid alternatingtim tempor logic theoret comput scienc v n p march thoma a henzing game system design verif proceed th confer theoret aspect ration knowledg june singapor van der hoek alessio lomuscio michael wooldridg complex practic atl model check proceed fifth intern joint confer autonom agent multiag system may hakod japan van der hoek mark robert michael wooldridg knowledg social law proceed fourth intern joint confer autonom agent multiag system juli netherland alur pavol ern p madhusudan wonhong nam synthesi interfac specif java class acm sigplan notic v n p januari van der hoek wojciech jamroga michael wooldridg logic strateg reason proceed fourth intern joint confer autonom agent multiag system juli netherland krishnendu chatterje thoma a henzing marcin jurdziski game secur equilibria theoret comput scienc v n p novemb alessio lomuscio franco raimondi model check knowledg strategi game multiag system proceed fifth intern joint confer autonom agent multiag system may hakod japan alur salvator la torr p madhusudan modular strategi recurs game graph theoret comput scienc v n p march wojciech jamroga wieb van der hoek agent know play fundamenta informatica v n p april magdalena kacprzak wojciech penczek fulli symbol unbound model check alternatingtim tempor logic autonom agent multiag system v n p juli van der hoek michael wooldridg logic cooper proposit control artifici intellig v n p may yve bontemp pierreyv schobben christof lding synthesi open reactiv system scenariobas specif fundamenta informatica v n p april d r ghica a s murawski ch l ong syntact control concurr theoret comput scienc v n p februari van der hoek knowledg ration action proceed third intern joint confer autonom agent multiag system p juli new york new york