t design perform conflictavoid cach a high perform architectur depend heavili effici multilevel memori hierarchi minim cost access data depend increas expect increas rel distanc main memori number publish propos cach conflictavoid scheme investig design perform conflictavoid cach architectur base polynomi modulu function earlier research shown highli effect reduc conflict miss ratio examin number practic implement issu present experiment evid support claim pseudorandomli index cach effect perform term practic implement viewpoint b introduct current project next year could see cpu clock frequenc increas factor twenti wherea dram rowaddressstrob delay project decreas factor two potenti tenfold increas distanc main memori seriou implic design futur cachebas memori hierarchi well architectur memori devic themselv mani option architect consid battl memori latenc partit two broad categori latenc reduct latenc hide latenc departa darquitectura de computador universitat politcnica de catalunya c jordi girona barcelona spain emailantonio josegacupc depart comput scienc univers edinburgh jcmb king build edinburgh uk reduct techniqu reli cach exploit local object reduc latenc individu memori refer latenc hide techniqu exploit parallel overlap memori latenc oper thu hide program critic path paper address issu latenc reduct degre futur cach architectur isol processor increas memori latenc discuss theori evalu practic use particular class conflictavoid index function demonstr cach could construct provid practic solut previous unreport problem well known problem associ unconvent index scheme section present overview caus conflict miss summaris previou techniqu propos minim effect perform propos method cach index demonstr lower miss ratio altern scheme summaris known characterist method section discuss number implement issu effect use novel index scheme processor cycl time present experiment evalu propos index scheme section result show ipc outoford superscalar processor improv use propos index scheme final section draw conclus studi problem cach conflict whenev block main memori brought cach decis must made block set block cach candid store data refer placement polici convent cach typic extract field bit address use select one block set whilst simpl easi implement index function robust princip weak function suscept repetit conflict miss exampl cach capac block size address map cach set condit repetit collis collid cach block address also collid cach integ except two common case happen access stream address collid may conflict miss stream access element two distinct array collid collid way setassoci help allevi conflict howev work set contain conflict cach block set associ elimin conflict follow section propos remedi problem cach conflict defin improv method block placement conflictresist cach placement function object conflictresist placement function avoid repetit conflict defin condit analog find suitabl hash function hash tabl perhap wellknown altern convent cach index skew associ cach involv two index function deriv xore two bit field address produc bit cach index field interleav memori well known bank k conflict reduc use bank select function simpl modulopow oftwo lawri vora propos scheme use primemodulu function harper jump sohi propos skew function use xor function propos frailong et al pseudorandom function propos raghavan hay rau et al scheme yield less uniform distribut request bank vari degre theoret predict implement cost principl scheme could use construct conflictresist cach use index function howev consid conflict resist cach architectur two factor critic firstli chosen placement function must logic simpl implement secondli would like abl guarante good behavior regular address pattern even patholog convent placement function respect irreduc polynomi modulu ipoli permut function propos rau ideal candid ipoli scheme effect defin famili pseudorandom hash function implement use exclusiveor gate also use behavior characterist discuss later miss ratio ipoli index scheme evalu extens context cach index compar number differ cach organ includ directmap setassoci victim hashrehash columnassoci skewedassoci result studi suggest ipoli function particularli robust exampl spec kb twoway associ cach averag miss ratio ipoli cach ident capac associ reduc miss ratio compar well fullyassoci cach miss ratio polynomialmodulu cach placement defin gener form conflict resist cach index scheme let placement block data bit address way way associ cach set determin set indic ipoli index given function scheme member set possibl distinct integ valu rang choos use distinct valu cach skew though skew obligatori featur scheme function defin follow consid integ term binari represent exampl similarli consid polynomi defin field gf similarli best perform irreduc polynomi though need so valu also defin gf given order less effect polynomi modulu function ignor higher order term bit index comput use xor tree constant andxor tree one requir configur index function best perform close possibl though may small scheme distinct convent block placement polynomi placement characterist class polynomi hash function describ studi previous context strideinsensit interleav memori see function certain p n n x n x x r x provabl characterist signific valu context cach indic exampl stride form produc address sequenc free conflict ie condit set section fundament result polynomi index address stride sequenc partit long subsequ number cach block guarante cach conflict within sub sequenc conflict subsequ due capac problem solv larger cach tile iter space strideinsensit ipoli index function seen figur show behavior four cach configur ident except index function capac twoway associ driven address trace repres repeat access vector byte element element separ stride conflict sequenc would use half set cach experi repeat stride rang determin mani stride exhibit bad behavior index function experi compar three differ index scheme convent modulo powerof label a function propos skewedassoci cach ahxsk two ipoli function ipoli scheme simul without skew index function ahp ahpsk respect appar ipoli scheme skew display remark abil toler stride equal without patholog behavior scheme major stride yield low miss ratio howev convent skew xor function display patholog behavior miss ratio stride implement issu logic polynomi modulu oper gf defin class hash function comput cach placement address combin subset address bit use xor gate mean that exampl bit cach index may comput exclusiveor bit origin address choic polynomi determin bit includ set implement function cach bit index would requir eight xor gate fanin whilst appear remark simpl consid placement function firstli function use address bit beyond normal limit impos typic minimum page size restrict secondli use pseudorandom placement multilevel memori hierarchi implic mainten inclus briefli examin two issu show virtualr twolevel cach hierarchi propos wang et al provid clean solut problem overcom page size restrict typic oper system permit page small kbyte convent cach place limit firstlevel cach size address translat proceed parallel tag lookup similarli novel cach index scheme use address bit beyond figur frequenc distribut miss ratio convent pseudorandom index scheme column repres ipoli index line repres convent skewedassoci index minimum page size boundari cannot use virtuallyindex physicallytag cach four altern option consid perform address translat prior tag lookup ie physic indic enabl ipoli index data page known larg enough use virtuallyindex virtuallytag level cach index convent use polynomi rehash level miss option attract exist processor pipelin perform address translat least one stage prior tag lookup might case processor abl hide memori latenc dynam execut multithread exampl howev mani system perform address translat prior tag lookup either extend critic path critic pipelin stage introduc extra cycl untoler latenc via addit pipelin stage option could attract high perform system larg data set larg physic memori norm circumst process may typic data page kbyte more os abl track page size segment current use process and kernel enabl polynomi cach index firstlevel cach segment page size certain threshold provid unmap bit hash function possibl revert convent index possibl exampl threshold kbyte cach kbyte twoway associ may implement polynomi function hash unmap physic address bit cach index bit suffici produc good conflictfre behavior provid level cach flush index function chang reason index function need remain constant third option current popular primarili potenti difficulti alias virtual address space well difficulti shoot level virtual cach line physicallyaddress invalid oper receiv anoth processor twolevel virtualr cach hierarchi propos wang et al provid way implement virtuallytag l cach thu expos address bit index function without incur address translat delay fourth option would appropri physicallytag directmap cach similar principl hashrehash columnassoci cach idea make initi probe convent integermodulu index function use unmap address bit probe hit probe again differ index time second probe begin full physic address avail use polynomi hash function comput index second probe address coresid convent index function collid first probe convers set address collid convent index function collid second probe neglig probabl due pseudorandom distribut polynomi hash function provid kind pseudoful associ effect directmap cach hit time cach first probe would good directmap physicallyindex cach howev averag hit time lengthen slightli due occasion need second probe investig style cach devis scheme swap cach line convent modulo index locat altern polynomiallyindex locat lead typic probabl around hit detect first probe howev slight increas averag hit time due occasion doubl probe mean columnassoci cach attract miss penalti compar larg space restrict prevent coverag option requir inclus coher cach architectur normal requir properti inclus maintain level memori hierarchi thu repres set data present cach level properti inclus demand level memori hierarchi whenev properti maintain snoop bu protocol need compar address global write oper tag lowest level privat cach line index l cach replac line index l cach replac data address alreadi present l line contain valid data must sure replac data still present l conventionallyindex cach issu rel easi guarante data l index alway locat l index thu ensur l replac automat preserv inclus pseudorandomli index cach gener way make guarante instead cach replac protocol must explicitli enforc inclus invalid data l requir guarante twolevel virtualr cach lead creation hole upper level cach turn lead possibl addit cach miss perform implic hole twolevel virtualr cach hierarchi three caus hole l are replac l remov virtual alias l invalid due extern coher action probabl frequenc item occur low kind hole caus perform problem process must issu interleav access two segment distinct virtual address map physic address preserv consist copi data virtual address ensur one alia may present l instant prevent physic copi resid undisturb l simpli increas traffic l l access virtual alias interleav invalid extern coher action occur regardless cach architectur consid analysi event primari import invalid l due mainten inclus l l import quantifi frequenc effect hit ratio l recal index function l base physic address wherea index function l use virtual address also number bit includ index function function differ case function pseudorandom correl indic l l particular datum consequ line replac l data replac also exist l probabl number bit indic l l respect data replac l exist l possibl l index coincident equal index data brought l as l replac actual caus l replac occur hole creat all thu probabl elimin line l preserv inclus result hole given net probabl miss l caus hole appear l given product thu size ratio l l larg valu small exampl kb l cach kb l cach line yield slightli l result creation hole expect increas compulsori miss ratio l model product l miss ratio compar simul miss ratio find approxim accur ll cach size ratio abov instanc simul whole spec suit kb twoway skew ipoli l cach back mb conventionallyindex twoway setassoci l cach show effect hole l miss ratio neglig percentag l miss creat hole averag less never greater program twolevel virtualr cach describ implement protocol l l cach effect provid mechan ensur inclus maintain coher maintain without revers address translat case hole creat level requir inclus properti effect polynomi map critic path cach memori access convent organ normal comput effect address ad two regist regist plu displac ipoli index impli addit circuitri comput index effect address circuitri consist sever xor gate oper parallel therefor total delay delay one gate xor gate number input depend particular polynomi use experi report paper number input never higher therefor delay due gate low compar delay complet pipelin stage depend particular design may happen addit delay hidden instanc memori access begin complet effect address comput xor delay hidden sinc address comput right left gate use leastsignific bit address experi report paper notic true even carri lookahead adder cla cla lookahead block size b bit comput first b leastsignific bit avail delay approxim one lookahead block threeblock delay b leastsignific bit avail gener b leastsignific bit delay approxim i block instanc bit address binari cla bit requir ipoli function use experi paper delay block wherea whole address comput requir blockdelay leastsignific bit comput reason assum xor gate delay shorter time requir comput remain bit howev sinc cach access time usual determin pipelin cycl fact leastsignific bit avail earli sometim exploit design order shorten latenc memori instruct overlap part cach access which requir leastsignific bit comput signific address bit approach result pipelin structur similar shown figur notic organ requir pipelin memori in exampl assum twostag pipelin memori case polynomi map may caus addit delay critic path show later even addit delay induc one cycl penalti cach access time polynomi map provid signific overal perform improv addit delay load instruct may neg impact perform processor issu depend instruct may delay accordingli hand delay neglig effect ani store instruct sinc instruct issu memori commit order precis except therefor xor function usual perform instruct wait store buffer besid load instruct may depend store depend resolv current microprocessor eg pa forward techniqu compar effect address load store instruct order check possibl match cach index involv use xor gate requir oper memori address predict also use avoid penalti introduc xor delay lengthen critic path effect address memori refer shown highli predict instanc shown address dynam execut memori instruct spec suit predict simpl scheme base tabl keep track last address seen given instruct last stride propos use similar scheme predict earli pipelin line like access given load instruct particular scheme work follow processor incorpor tabl index instruct address entri store last address predict stride recent execut load instruct fetch stage figur pipelin overlap part address comput memori access leastsignific bit mostsignific bit memori access memori access alu stage stage critic path tabl access program counter decod stage predict address comput xor function perform comput predict cach line notic done one cycl sinc xor perform parallel comput mostsignific bit discuss abov time perform integ addit higher one cycl vast major processor instruct subsequ issu memori unit use predict line number access cach parallel actual address line comput predict line turn incorrect cach access repeat actual address otherwis data provid specul access load destin regist scheme predict effect address earli pipelin previous use purpos load target buffer present predict effect address ad stride previou address fast address calcul perform comput load address earli pipelin without use histori inform propos memori access overlap nonspecul effect address calcul order reduc cach access time though none execut specul subsequ instruct depend predict load author propos use memori address predict scheme order execut memori instruct specul well instruct depend them case missspecul recoveri mechan similar use branch predict scheme util squash missspecul instruct noteworthi paper topic experiment evalu order verifi impact polynomi map realist microprocessor architectur develop parametr simul outoford execut processor fourway superscalar processor simul tabl show differ function unit latenc consid experi size reorder buffer entri two separ physic regist file fp integ one physic regist processor lockupfre data cach allow outstand miss differ cach line cach size either kb kb way setassoci byte line size cach writethrough nowritealloc hit time cach two cycl miss penalti cycl infinit l cach assum bit data bu l l consid ie line transact occupi bu four cycl two memori port depend thorough memori specul use mechan similar arb multiscalar pa branch histori tabl k entri bit satur counter use branch predict memori address predict scheme implement mean directmap tabl k entri without tag order reduc cost expens interfer tabl entri contain last effect address last load instruct use entri last observ stride addit entri contain bit satur counter assign confid predict mostsignific bit counter set predict consid correct address field updat new refer regardless predict wherea stride field updat counter goe function unit latenc repeat rate multipli effect address tabl function unit instruct latenc tabl show ipc instruct commit per cycl miss ratio differ configur baselin configur kb cach ipoli index address predict th column averag ipc configur averag miss ratio th column ipoli index use averag miss ratio goe th column xor gate critic path impli increas ipc th column hand xor gate critic path assum one cycl penalti cach access time result ipc th column howev use memori address predict scheme xor gate critic path th column provid perform cach xor gate critic path th column thu main conclus studi memori address predict scheme offset penalti introduc addit delay xor gate critic path final tabl also show perform kb way setassoci cach nd rd column notic addit ipoli index kb cach yield ipc increas obtain doubl cach size main benefit polynomi map reduc conflict miss howev benchmark suit mani benchmark exhibit rel low conflict miss ratio fact spec conflict miss ratio way associ cach less program except tomcatv swim wave focu three benchmark highest conflict miss ratio observ abil polynomi map reduc miss ratio significantli boost perform problem case shown tabl case see polynomi map provid signific improv perform even xor gate critic path memori address predict scheme use increas ipc memori address predict use ipc higher convent cach capac higher convent cach twice capac notic polynomi map scheme benchmark consid instruct skip first m predict even better organ xor gate critic path without predict due fact memori address predict scheme reduc one cycl effect cach hit time predict correct sinc address comput overlap cach access the comput address use verifi predict correct howev main benefit observ tabl come reduct conflict miss isol differ effect also simul organ convent index ipoli index xor cp xor cp ipc miss pred pred ipc miss pred pred ipc miss ipc ipc go compress li ijpeg perl vortex sucor hydrod applu mgrid turbd apsi fpppp wave averag tabl ipc load miss ratio differ cach configur memori address predict scheme convent index kb cach column compar ipc column tabl see benefit memori address predict scheme due reduct hit time almost neglig confirm improv observ ipoli index scheme address predict deriv reduct conflict miss conclus paper describ pseudorandom index scheme robust enough elimin repetit cach conflict discuss main implement issu aris use novel index scheme exampl ipoli index use address bit convent cach comput cach index also use differ index function l l result occasion creation hole l problem solv use twolevel virtualr cach hierarchi final propos memori address predict scheme avoid penalti due potenti delay critial path introduc ipoli index function detail simul ooo superscalar processor demonstr program signific number conflict miss convent kb way setassoci cach convent index polynomi map xor cp xor cp ipc miss pred pred ipc miss pred pred ipc miss ipc ipc wave averag tabl ipc load miss ratio differ cach configur select bad program perceiv ipc improv with address predict without address predict higher ipc improv obtain simpli doubl cach capac furthermor program experi signific conflict miss see less reduct ipc ipoli index use conjunct address predict interest byproduct ipoli index increas predict cach behaviour experi see ipoli index reduc standard deviat miss ratio across spec conflict miss elimin miss ratio depend sole compulsori capac miss gener easier predict control system incorpor ipoli cach could use realtim domain cachebas scientif comput iterationspac tile often introduc extra cach conflict r cach perform oper system multiprogram columnassoci cach techniqu reduc miss rate directmap cach streaml data cach access fast address calcul zerocycl load microarchitectur support reduc load latenc xorschem flexibl data organ parallel memori arb hardwar mechanim dynam reorder memori refer hardwar support fot hide cach latenc memori address predict data specul specul execut via address predict data prefetch elimin cach conflict miss xorbas placement function vector access perform parallel memori use skew storag scheme advanc perform featur bit pa improv directmap cach perform addit small fullyassoci cach prefetch buffer lockupfre instruct fetchprefetch cach organ the cach perform optim block algorithm the prime memori system array access on randomli interleav memori the cydra strideinsensit memori system pseudorandomli interleav memori the perform potenti data depend specul collaps a case twoway skewedassoci cach skewedassoci cach cach memori logic data skew scheme interleav memori vector processor organ perform twolevel virtualr cach hierarchi tr vector access perform parallel memori use skew storag scheme cach perform oper system multiprogram workload organ perform twolevel virtualr cach hierarchi cach perform optim block algorithm randomli interleav memori pseudorandomli interleav memori case twoway skewedassoci cach columnassoci cach streamlin data cach access fast address calcul zerocycl load perform potenti data depend specul myampersandamp collaps elimin cach conflict miss xorbas placement function specul execut via address predict data prefetch cach memori skewedassoci cach memori address predict data specul advanc perform featur bit pa lockupfre instruct fetchprefetch cach organ ctr han vandierendonck koen de bosscher highli accur effici evalu randomis set index function journal system architectur euromicro journal v n p may steve carr soner nder case workingsetbas memori hierarchi proceed nd confer comput frontier may ischia itali mazen kharbutli yan solihin jaejin lee elimin conflict miss use prime numberbas cach index ieee transact comput v n p may nigel topham antonio gonzlez random cach placement elimin conflict ieee transact comput v n p februari rui min yime hu improv perform larg physic index cach decoupl memori address cach address ieee transact comput v n p novemb jaum abella antonio gonzlez heterogen waysiz cach proceed th annual intern confer supercomput june juli cairn queensland australia