t load balanc multicomputerdistribut system equip circuit cutthrough switch capabl a abstractfor multicomput distribut system use circuit switch wormhol rout virtual cutthrough the last two collect call cutthrough switch commun overhead messag deliveri time depend larg upon link content rather upon distanc sourc destin is larger commun overhead longer deliveri delay occur messag travers rout heavier traffic one longer distanc lesser traffic characterist greatli affect select rout interprocessor commun andor load balanc consid loadbalanc problem type system object find maximum load imbal elimin without violat traffic capac constraint rout elimin imbal keep maximum link traffic low possibl investig loadbalanc problem variou condit first consid case excess load overload node divis devis network flow algorithm solv type load balanc problem optim polynomi time next impos realist assumpt system use specif rout scheme excess load transfer overload node underload node must use rout found rout scheme case use graph transform techniqu transform system graph anoth graph network flow algorithm appli solv load balanc problem optim final consid case excess load overload node indivis ie excess load must transfer entiti show loadbalanc problem type becom npcomplet propos heurist algorithm solut b introduct multicomput distribut system dynam creationdelet data andor file may temporarili overload nodessit storag space leav other underload sinc storag resourc nodesit usual limit uneven datafil distribut may result ineffici use storag space affect futur datafil creation exampl nodessit may suffici space store new datafil even overal system suffici space datafil load balanc respect thu transfer excess data load overload node underload node balanc data load among node system multicomput distribut system use circuit switch wormhol rout virtual cutthrough commun overhead messag deliveri time depend larg upon link content rather upon distanc sourc destin is larger commun overhead longer deliveri delay result messag travers rout heavier traffic one longer distanc lesser traffic characterist greatli affect select rout interprocessor commun ipc andor load balanc object select rout ipc load balanc thu minim traffic volum link commun overheaddelay due link content minim note object also reduc probabl block futur messag transfer load overload node underload one balanc storag load among node minim maximum link content among link balanc commun load among link major differ ipc load balanc former case must select rout rout pair commun processor latter case select rout rout overload node one underload node note excess load overload node transfer underload node node instead particular one differ most all variat ipc rout problem nphard optim algorithm polynomialtim complex exist sever variat load balanc problem kandlur shin studi rout select problem interprocessor commun multicomput network equip virtual cutthrough switch capabl paper studi instead rout select problem load balanc multicomput distribut system use circuit switch wormhol rout virtual cutthrough main concern find maximum load imbal elimin and rout elimin imbal without violat traffic capac constraint link keep maximum link content low possibl work signific extens bokhari work solv load balanc problem sever restrict assumpt unit load imbal overload underload node ie node either one unit excess load one unit deficit load neutral content allow link ie one unit excess load transfer via link moreov solut approach take account content excess load transfer among processor ipc traffic paper relax assumpt load imbal node arbitrari valu instead one unit onli one unit excess load transfer via link long link traffic capac constraint violat two case studi first consid case excess load overload node divis ie arbitrarili divid transfer one underload node second consid case may one entiti excess load node indivis must transfer underload node entiti also take account effect exist ipc traffic rout select transfer excess load result load balanc problem consid paper much gener practic difficult solv one treat bokhari consid multicomput system use specif rout scheme particular consid mesh hypercub interconnect network use rowcolumn columnrow ecub rout scheme respect use graph transform techniqu network flow algorithm solv load balanc problem system graph transform scheme use mesh hypercub differ correct trivial prove especi case hypercub interconnect network contrast propos simpl unifi graph transform scheme network flow algorithm solv load balanc problem multicomputerdistribut system without specif rout scheme propos graph transform scheme togeth network flow algorithm work larger class rout scheme includ rowcolumn columnrow e cube scheme propos scheme also intuit appeal correct easi prove propos graph transform scheme network flow algorithm show case divis excess load load balanc problem without specif rout scheme solv optim polynomi time ie find maximum load defin later imbal elimin without violat traffic capac constraint link minim maximum content among link case indivis excess load first prove load balanc problem npcomplet propos heurist algorithm it rest paper organ follow section formal defin load balanc problem consid paper briefli review network flow problem whose solut algorithm use solv load balanc problem section discuss appli network flow algorithm describ section optim solv load balanc problem assumpt excess load divis specif rout scheme system consider section show transform repres graph system specif rout scheme anoth graph techniqu describ section use find optim solut load balanc system section give npcomplet proof heurist algorithm load balanc problem indivis excess load paper conclud section problem formul network flow algorithm problem formul system consider either distribut pointtopoint network multicomput interconnect structur mesh hypercub use direct graph e repres system vertexnod set v repres set nodesprocessor system edg set e repres set commun link also traffic capac or simpli capac function c defin edg set e ie edg associ traffic capac cv maximum commun volum measur data unit bit byte packet take place node v node v j constraint link u v cu v defin note traffic capac defin paper link bandwidth maximum data transmiss rate link think traffic capac link maximum content to defin later allow link also note use notat v denot edg allow one edg vertex anoth vertex thi howev impos unnecessari constraint multipl edg vertex anoth vertex transform singl edg introduc new vertex properli redefin capac function assum system need perform load balanc node either over load underload neutral total excess load overload node e deficit load underload node j v denot j excess deficit load arbitrari valu oppos one unit assum assum global state system degre load imbal node known central load balanc control the determin degre load imbal node beyond scope paper requir e unit load transfer overload node underload node j unit load transfer underload node j overload node call requir load transfer constraint also assum without loss gener transfer one unit load link incur one unit commun volum link link capac constraint requir total commun volum link v exceed traffic capac cv link system may may use specif rout scheme specif rout scheme use path p v v j said feasibl under underli rout scheme rout scheme find p one possibl path v v j assum least one feasibl path vertex vertex so jej jv j note may one feasibl path vertex anoth vertex sinc assum one edg vertex anoth vertex use sequenc vertic denot path paper consid rout scheme satisfi follow properti p edg e feasibl path ie v feasibl path v v j p subpath feasibl path also feasibl ie path v feasibl path also feasibl p last edg feasibl path overlap first edg anoth feasibl path path form combin two feasibl path also feasibl ie v two feasibl path v also feasibl fig rout scheme commonli use mesh hypercub rowcolumn column row ecub rout algorithm respect mesh interconnect network consid two dimension array processor denot hx yi connect four neighbor processor hx sigma yi hx sigma the boundari array may wrap around hand ndimension hypercub ncube n processor label processor label binari representationaddress hb feasibl feasibl figur properti p rout scheme consid paper two processor connect binari address differ exactli one bit rowcolumn algorithm mesh rout messagepacket first horizont sourc node node column destin node vertic destin node exampl messag sourc node h destin node h rout via path h i h i h i h i h i ecub algorithm hypercub alway rout messag node close match address destin node comparison begin least signific bit address exampl messag sourc node hi destin node hi rout via path hi hi hi hi hi easi check rowcolumn columnrow rout algorithm mesh satisfi properti pp ecub rout algorithm hypercub satisfi properti p p check ecub rout algorithm also satisfi p let v two feasibl path ncube ecub rout algorithm let address v j v j hb respect recal sinc v j two adjac node binari address differ one bit accord ecub algorithm address node v j must form easi see path v form combin two feasibl path also feasibl path want find maximum load imbal elimin and rout elimin imbal without violat link capac load transfer constraint minim maximum link content minimax flow algorithm solut approach load balanc problem consid paper base flow problem solut algorithm describ minimax flow algorithm find maximum flow network weight function also minim maximum edg cost the cost edg defin weight time flow edg appli algorithm load balanc problem one view maximum flow maximum load imbal elimin edg cost link content describ solut approach load balanc problem first give brief review minimax flow problemalgorithm detail network flow problem flow problemalgorithm found respect t c network vertexnod set v edg set e sourc s sink t capac function e underli direct graph set posit real number edg u v e also associ nonneg realvalu weight wu v eas discuss defin c w defin v theta v say network weight function w flow network n function satisfi follow properti capac constraint conserv condit edg u v e fu v call flow u v u v call net flow u v capac constraint state flow u v bound capac cu v conserv condit state net flow go node except sourc sink equal net flow go node valu flow f denot jf j net flow go sourc ie load balanc problem divis excess load transfer fu v unit load u v fv u unit load v u assum fu v fv u replac brought attent ahuja design similar algorithm solv minimax transport problem algorithm also adapt solv minimax flow problem without loss gener assum g simpl graph ie loop an edg vertex v itself multipl edg edg vertex u anoth vertex v therefor edg repres two end vertic edg note howev assumpt easili enforc introduc dummi vertic properli redefin capac weight function graph g origin satisfi assumpt transfer fu v gamma fv u unit net load u v without chang valu flow load without increas content flow edg network therefor f flow fu v fv u flow u v simpli replac fu v gamma fv u flow v u note fu v fv u impli u v v u belong e note howev replac oper valid excess load indivis sinc one indivis excess load fu v unit transfer u v anoth indivis excess load fv u unit transfer v u cannot cancel replac singl load transfer one vertex other u v e fu say flow f satur edg u v call u v fsatur edg n edg cost with respect flow f edg u v e defin wu v delta fu v total cost flow f defin v flow problem find maximum flow f minim maximum edg cost ie minim max uve wu v delta fu v show load balanc problem transform minimax flow problem weight function henceforth concentr network weight function definit given network t c weight function w defin new network edg u v e edg u v e fi call critic edg wu let f maximum flow n f fi maximum flow nfi sinc c fi u v cu v u v e jf vg easi see fi therefor jf fi capac fi critic edg nfi maximum edg cost note weight critic edg allow network nfi henc minimum valu maximum edg cost maximum flow n fi fi minimum valu fi jf fi maximum flow nfi propos minimax flow algorithm mmc solut minimax flow problem weight function mmc simpli find fi construct maximum flow network nfi complet list algorithm mmc fig summar below howev sake concis omit proof correct time complex algorithm interest reader refer detail idea behind algorithm mmc iter variabl fi construct network nfi set maximum edg cost allow iter maximum edg algorithm mmc step find maximum flow f valu jf j network t c step let number edg nonzero weight n wlog assum step construct network find maximum flow f fi valu jf fi j nfi jf step step let delta jf let r set f fi satur critic edg nfi ie go step step maximum flow f fi minim maximum edg cost found maximum edg cost respect flow f fi fi figur algorithm minimax flow problem weight function cost capac edg u v wu set mincu v fi ie flow allow go edg u v restrict mincu v fi henc cost edg u v bound mincu v fi delta wu v fi algorithm repeatedli construct maximum flow network nfi increas valu fi step initi fi step jf maximum flow zero cost otherwis jf fi optim valu fi ie minimum valu maximum edg cost fi found step jf optim valu fi found u v wu f fi satur critic edg nfi therefor get larger flow need increas capac critic edg let delta defin algorithm step shown fi delta fi henc set delta repeat process step assign guarante valu fi alway less equal optim valu fi upon termin jf also shown algorithm mmc termin iter henc time complex o delta mnm number edg nonzero weight mnm time complex algorithm use algorithm mmc find maximum flow network jv vertic edg system without specif rout scheme section discuss load balanc problem system without constrain specif rout scheme ie excess load transfer overload node underload node j use rout path j first consid case excess load overload node arbitrarili divid transfer one underload node exampl node v excess load e node v j v k deficit load j k respect transfer e ij e ik unit load v v j v k respect e real number case excess load indivis ie overload node may one entiti excess load transfer underload node entiti load balanc problem becom difficult defer discuss case section case excess load arbitrarili divis algorithm mmc describ section easili appli find maximum amount load imbal elimin minim maximum link content given graph represent e multicomput distribut system capac function c let ae v set overload node node excess load e set underload node node j deficit load j e s j s real number note recal e maximum amount load transfer underload node j maximum amount load receiv overload node as mention section assum e s j s given determin beyond scope paper construct new graph g ad g new sourc node s new sink node t tg defin new capac function c v current commun volum link v due interprocessor commun traffic ie c v maximum amount load transfer link edg v violat traffic capac constraint final weight function w defin wu recal load balanc problem consid paper want find maximum amount load imbal elimin minim maximum link content equival find minimax flow network weight function w let fv amount load transfer link v load balanc procedur activ two possibl way defin link content depend type commun traffic minim link c concern minim amount total commun traffic link v content f v concern minim amount load transfer link v defin content fv c simpli use algorithm mmc find minimax flow f network with weight function w valu jf j maximum edg cost flow f found mmc maximum load imbal elimin maximum edg content flow respect c link content defin f v network nfi redefin follow f defin abov defin new network edg u v e edg u v e fi call critic edg wu moreov initi valu fi step mmc chang max uve f u v case valu fi iter mmc maximum content f u v allow iter sinc case c c solv similarli except graph represent need appropri defin unless otherwis state assum follow discuss content edg u v defin fu v ie total amount excess load transfer edg suppos excess load arbitrarili divis without loss gener assum smallest indivis load entiti one unit case flow f capac c redefin function v theta v z set posit integ algorithm mmc still appli find integr minimax flow network n except statement fi fi delta step chang fi fi g g x xy xz jl ik figur illustr graph transform system specif rout scheme section discuss load balanc problem system special rout scheme that satisfi properti pp discuss section rowcolumn columnrow rout scheme mesh ecub rout scheme hypercub satisfi properti pp two rout scheme handl differ solv load balanc problem fact use approach describ differ graph transform method need design differ rout scheme contrast propos unifi graph transform scheme appli differ rout scheme long satisfi properti pp given system graph e specif rout scheme satisfi properti p p first transform g anoth graph g accord follow rule see fig r vertex v x v dv x xd indegre outdegre total degre respect vertex v x g vertex v call invertexnod of v x correspond incom edg v vertex v xz call outvertexnod of v x correspond outgo edg v x v x g r let v ik v xy correspond edg v g correspond edg v ik xy g capac v weight r v feasibl path v v j g add edg v xz graph g capac weight v xy jl edg g correspond edg v r overload node v add g node ik figur transform graph theta mesh use rowcolumn rout scheme capac e weight e total excess load v underload node v j add g node j v j edg v jl capac j weight j deficit load v j r add g sourc s sink t edg s capac e weight overload node v s edg capac j weight underload node v j t j system graph g transform g treat system repres g one without specif rout scheme solv load balanc problem find minimax flow network weight function w describ section capac weight function defin rule rr transform graph obtain appli rule rr theta mesh use rowcolumn rout scheme cube use ecub rout scheme shown fig fig respect note assum link two adjac node u v mesh hypercub bidirect commun link thu two direct edg u v v u correspond link graph represent mesh hypercub fig easi see whenev rout path use horizont edg longer abl use vertic edg henc direct path outvertex figur transform graph cube use ecub rout scheme invertex transform graph correspond feasibl path found rowcolumn rout scheme mesh vice versa transform graph also satisfi requir ecub rout scheme hy percub exampl consid node hi fig definit ecub rout scheme path go node hi node hi go either node hi node hi path go node hi node hi go node hi path go node hi node hi go nowher formal prove correct transform suffic us prove follow theorem theorem suppos rout scheme use system consider satisfi properti pp everi feasibl rout path vertex v x anoth vertex v g correspond uniqu direct path outvertex v xz v x invertex v yw v transform graph g vice versa assum g deriv appli rule rr g feasibl path v x v g properti p know subpath v j l feasibl path g transform rule rr easi see exist direct path v yw g hand suppos zw direct path g transform rule easi see edg must satisfi either u invertex v outvertex vice versa moreov u invertex v outvertex u v correspond vertex g therefor k must even outvertic v invertic moreov pair vertic l v correspond vertex say v l invertex v j l v outvertex v j l l now transform rule r r know v x direct path v x v g notat simplic let v next prove induct path feasibl specif show path v j feasibl sinc v e properti p path v feasibl g suppos path v j feasibl g sinc v edg g transform rule r know v j feasibl path g then properti p conclud path v system indivis excess load section discuss case excess load indivis assum specif rout scheme system system use certain specif rout scheme one first appli graph transform rule describ section repres graph treat transform graph system specif rout scheme discuss section system indivis excess load overload node one entiti excess load e k transfer underload node entiti without loss gener assum overload node exactli one entiti indivis excess load e sinc excess load add new overload node ij one entiti indivis excess load e ij new edg entiti excess load e ij neutral node note use e refer either entiti excess load amount first show load balanc problem indivis excess load nphard strong sens in fact show problem find maximum load imbal elimin without consid link content alreadi nphard strong sens figur instanc construct npcomplet proof excess load indivis propos heurist algorithm solut nphard case load balanc problem decis version load balanc problem find maximum load imbal elimin ask given number b whether possibl elimin least b unit load imbal without violat link capac load transfer constraint theorem decis version load balanc problem find maximum load imbal elimin npcomplet strong sens excess load indivis proof easi see decis version load balanc problem np complet proof reduc multiprocessor schedul problem given set n task length la n number p processor deadlin d partit max ip given instanc multiprocessor schedul problem construct instanc load balanc problem shown fig overload node indivis excess load la unit underload node deficit load unit p nodedisjoint path u v edg path capac d edg infinit capac note construct done polynomi time easi see least b unit load imbal elimin without violat link capac load transfer constraint exist solut multiprocessor schedul problem sinc multiprocessor schedul problem npcompet strong sens decis version load balanc problem indivis excess load also npcomplet strong sens sinc unlik find polynomi time optim algorithm load balanc problem indivis excess load propos heurist algorithm problem let e graph represent multicomput distribut system consider cu v capac for load transfer purpos edg u v u v e let overload node q underload node overload node indivis excess load e must rout underload node entiti underload node deficit load maximum amount load receiv overload node without loss gener assum e s sort nonincreas heurist algorithm see fig consist two phase phase i treat excess load divis use network flow techniqu describ section find minimax flow f excess load inde divis f would optim solut valu jf j maximum load imbal elimin maximum link content cost minim phase ii use minimax flow f found phase templat rout entiti excess load one one way result flow link close correspond minimax flow possibl ie valu fu v found phase serv target flow load edg u v achiev phase ii sinc gener larger amount excess load difficult rout smaller amount rout excess load nonincreas order load amount execut phase ii f u v total load current rout edg v excess load current rout e say edg u v feasibl path feasibl edg path feasibl rout excess load e overload node underload node j actual node t via feasibl path ie excess load rout via path edg enough remain capac note phase ii vertex edg s are fact use ie underli graph g qg excess load e rout use greedi type algorithm call order depthfirst search odf note fu v gamma f u v differ target flow fu v total load f u v current rout edg u v larg fu impli current load rout edg u v still far target valu note fu may neg therefor vertex u alway choos travers next edg u v largest fu delta gamma f u delta valu among feasibl outgo edg u henc reduc note overload word feasibl here term feasibl path defin differ defin section phase i step construct network let wu step treat excess load e divis load use algorithm mmc find minimax flow f n phase ii step set f u v u v step p follow step use order depthfirstsearch odf algorithm find feasibl path t order df algorithm similar df graph travers algorithm except branch vertex alway choos travers next edg largest fdelta delta gamma f delta delta valu among untravers feasibl edg vertex step exist feasibl path t mean excess load e elimin next round load balanc perform exist feasibl path t let p first path found odf algorithm p use rout elimin excess load e next round load balanc perform reset f u v f u v edg u v p figur heurist algorithm case excess load indivis maximum fu delta gamma f u delta valu u note heurist algorithm optim algorithm may find maximum load imbal elimin case find maximum load imbal may minim maximum link content use follow exampl illustr heurist algorithm exampl suppos construct network system graph e minimax flow f found end phase shown fig a maximum edg a b c d figur exampl show heurist algorithm work cost link content shown figur note edg e consid phase ii initi set f u first rout excess load e start vertex sinc fs odf algorithm first visit vertex v sinc v feasibl outgo edg ie next vertex visit then vertex visit feasibl path found e ie path t edg u v path reset f u current valu c u shown fig b next rout excess load e use odf algorithm find feasibl path e note vertex although fs still choos edg edg u v path found e reset f u current valu shown fig c next excess load rout e path found e t valu rout f updat shown fig d final rout excess load e start odf first travers edg vertex sinc feasibl outgo edg odf backtrack vertex travers edg sinc visit odf next travers v next edg travers path found e t valu c u rout f updat shown fig e amount load imbal elimin exampl maximum link content time complex heurist algorithm shown follow theorem theorem phase heurist algorithm worstcas time complex om delta mnm time complex find maximum flow network ox vertic oy edg phase ii heurist algorithm worstcas time complex op number excess load entiti proof complex phase discuss section note edg nonzero weight n mention earlier underli graph find path overload node underload node phase ii g q number underload node wellknown df algorithm done x number vertic number edg graph travers odf algorithm time first visit backtrack vertex alway travers untravers edg maximum fdelta delta gamma f delta delta valu therefor travers outgo edg vertex u take od outdegre u logarithm base thu total time rout excess load entiti sinc need rout p excess load entiti e worstcas time complex phase ii op m note sinc assum one entiti indivis excess load overload node least one direct path vertex vertex g conclus paper consid load balanc problem multicomput distribut system use circuit switch wormhol rout virtual cutthrough object find maximum load imbal elimin without violat traffic capac constraint link minim maximum link content among link solv problem variou condit give om delta mnm optim algorithm load balanc problem divis excess load n number nodesprocessor number link system mx y time complex find maximum flow network x vertic edg propos graph transform techniqu system specif rout scheme satisfi properti pp describ section graph transform techniqu transform repres graph system anoth graph load balanc problem solv optim manner easi see overload node one entiti indivis excess load time complex phase ii chang op sinc add p vertic p edg system graph howev still n q time complex load balanc problem system without specif rout scheme also consid load balanc problem case excess load indivis prove problem nphard propos base om delta mnm optim algorithm problem divis excess load om delta mnm m heurist algorithm solut problem p number excess load entiti result obtain paper signific extens bokhari work report gener work sever direct relax assumpt unit load imbal relax assumpt unit link content consid effect exist ipc traffic select rout load balanc graph transform techniqu network flow model appli larger class rout scheme moreov solut approach algorithm intuit simpler propos r design analysi comput algorithm algorithm minimax transport problem network flow model load balanc circuitswitch multicomput er introduct algorithm comput intract guid theori npcomplet fast algorithm minimax flow problem weight traffic rout multicomput network virtual cutthrough capabl virtual new comput commun switch techniqu survey wormhol rout techniqu direct network data structur network algorithm tr ctr michael e houl antonio symvoni david r wood dimensionexchang algorithm token distribut treeconnect architectur journal parallel distribut comput v n p may patrick p c lee vishal misra dan rubenstein distribut algorithm secur multipath rout attackresist network ieeeacm transact network ton v n p decemb