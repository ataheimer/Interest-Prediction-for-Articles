t predict data cach miss nonnumer applic correl profil a maxim benefit minim overhead softwarebas latenc toler techniqu would like appli precis set dynam refer suffer cach miss unfortun inform provid stateoftheart cach miss profil techniqu summari profil inadequ refer intermedi miss ratio result either fail hide latenc els insert unnecessari overhead overcom problem propos evalu new techniqu correl profil improv predict correl cach behavior associ dynam context experiment result demonstr roughli half nonnumer applic studi potenti enjoy signific reduct memori stall time exploit least one three form correl profil consid b introduct dispar processor memori speed continu grow memori latenc becom increasingli import perform bottleneck cach hierarchi essenti step toward cope problem complet solut toler latenc number promis softwarebas techniqu propos exampl compil toler modest latenc schedul nonblock load earli rel result consum toler larger latenc insert prefetch instruct softwarebas techniqu provid latencyhid benefit also typic incur runtim overhead exampl aggress schedul nonblock load increas regist lifetim lead spill softwarecontrol prefetch requir addit instruct comput prefetch address launch prefetch themselv benefit techniqu typic outweigh overhead whenev miss toler overhead hurt perform case refer would enjoy cach hit anyway therefor maxim overal perform would like appli latencytoler techniqu precis set dynam refer would suffer miss previou work address problem numer code paper focus difficult import case isol dynam miss instanc nonnumer applic predict data cach miss nonnumer code overcom compil inabl analyz data local nonnumer code instead make use profil inform one simpl type profil inform precis miss ratio static memori refer throughout remaind paper refer approach summari profil sinc miss ratio memori refer summar singl valu summari profil indic signific memori refer instruct ie execut frequent enough make nontrivi contribut execut time miss ratio close isol dynam miss trivialw simpli appli latencytoler techniqu static refer alway suffer miss contrast import refer intermedi miss ratio eg suffici inform distinguish dynam instanc hit miss sinc inform lost cours summar miss ratio current stateoftheart approach deal intermedi miss ratio treat static memori refer miss ratio certain threshold though alway miss alway hit respect howev allornoth strategi fail hide latenc refer predict hit actual miss induc unnecessari overhead refer predict miss actual hit rather settl suboptim perform would prefer predict dynam hit miss accur correl profil expos cach behavior directli user inform memori oper enabl new class lightweight profil tool collect sophist inform simpli perrefer miss ratio exampl cach miss correl inform recent controlflow path whether recent memori refer hit miss cach etc help predict dynam cach miss behavior refer approach correl profil figur illustr correl profil inform might exploit load instruct shown figur overal miss ratio howev depend dynam context load may see predict behavior exampl context b result high likelihood load miss wherea context c not henc would like appli latenc toler techniqu within context b c d dynam context shown figur view simpli nonoverlap set dynam instanc load group togeth share common distinguish pattern paper consid three differ type inform use distinguish context first controlflow informationi sequenc n basic block number preced load two base sequenc cach access outcom ie hit miss previou memori refer self correl consid cach outcom previou n dynam instanc given static refer global correl refer previou n dynam refer across entir program note load context c context context figur exampl correl cach miss dynam context may improv predict xy mean x miss dynam refer analog form three type correl profil explor previous context branch predict object overview goal paper determin whether correl profil predict data cach miss accur nonnumer code summari profil so translat signific perform improv appli softwarebas latenc toler techniqu greater precis focu specif predict load miss paper load latenc fundament difficult toler store latenc hidden buffer pipelin although reli simul captur profil inform studi correl profil practic techniqu sinc could perform rel littl overhead use inform memori oper remaind paper organ follow begin section discuss three differ type histori inform use correl profil section present qualit analysi expect perform benefit section present experiment result quantifi perform advantag correl profil collect nonnumer applic addit section report memoryaccess behavior individu applic explain correl profil effect section compar perform softwar prefetch guid summari correl profil modern superscalar processor final discuss relat work present conclus section profil techniqu section propos motiv three new correl profil techniqu predict cach outcom controlflow correl self correl global correl controlflow correl first profil techniqu correl cach outcom recent controlflow path collect inform profil tool maintain n recent basic block number fifo buffer match pattern hitmiss outcom given memori refer intuit controlflow correl use detect case either data reus cach displac like path lead data reuseeith tempor spatialthen next refer like cach hit consid exampl shown figur ab graph travers recurs procedur walk cyclic path eg abcda pqrsp result tempor reus pdata exampl controlflow correl potenti detect last four travers decis lead cycl eg right down left up high probabl next pdata refer enjoy cach hit controlflow path may increas likelihood cach miss displac data line reus exampl x condit true figur c subsequ loop like struct node f int data struct node left right up down void walknod p f go leftpdata elsif go rightpdata elsif go elsif go els p null walkp r left right a code data reus b exampl graph c code cach displac figur exampl controlflow correl detect data reus cach displac control flow profil load underlin void preordertreenod p f p null f preorderpleft preorderpright preorder travers self cach outcom pdata a exampl code b tree construct travers preorder figur exampl use selfcorrel profil detect spatial local pdata consecut number node adjac memori displac p primari cach load again note path access larg amount data obviou problem displac might also due map conflict self correl self correl profil load l correl cach outcom n previou cach outcom l itself approach particularli use detect form spatial local appar compil time exampl consid case figur tree construct preorder assum consecut call memori alloc return contigu memori locat cach line larg enough hold exactli two treenod depend travers order and extent tree modifi creat may experi spatial local tree subsequ travers exampl tree also travers preorder expect pdata suffer miss everyoth refer cach line boundari cross therefor despit fact overal miss ratio pdata compil would difficulti recogn form spatial local self correl profil would accur predict dynam cach outcom pdata global correl contrast self correl idea behind global correl correl cach outcom load l previou n cach outcom regardless posit within program profil tool maintain pattern use singl ndeep fifo updat whenev dynam cach access occur f regist int regist listnod curr null f g r adata anext bdata bnext gdata gnext rdata rnext adata anext bdata bnext h h h memori global cach outcom global htaba exampl code b hash tabl access figur exampl use globalcorrel profil detect bursti cach miss currdata note sinc earlier instanc l may appear global histori pattern global correl may captur behavior self correl particularli extrem tight loop intuit global correl particularli help detect bursti pattern miss across multipl refer one exampl situat move new portion data structur access long time and henc displac cach case fact first access object suffer miss good indic associ refer neighbor object also miss figur illustr case larg hash tabl too larg fit cach organ array link list case might expect strong correl whether htabi the list head pointer miss whether subsequ access currdata the list element also miss similarli entri access twice within short interv eg htab fact head pointer hit strong indic list element eg adata bdata also hit summari correl cach outcom context refer occurseg surround control flow cach outcom prior referencesw potenti predict dynam cach behavior accur possibl summar miss ratio qualit analysi expect benefit present quantit result later section begin section provid intuit correl profil improv perform key factor dictat potenti perform gain ratio latenc toler overhead v cach miss latenc l extrem case v point appli latenc toler techniqu t select sinc either cost benefit appli select may import figur a illustr averag number effect stall cycl per load cpl vari function v l variou strategi appli note cpl metric includ overhead associ appli includ singl cycl execut load instruct itself never appli cpl simpli ml averag miss ratio extrem alway appli latenc alway hidden refer even normal hit suffer henc note v better never appli rather alway appli it figur b show altern view cpl plot function fix v l again observ choic whether alway never appli depend valu rel v l achiev better perform allornoth approach appli decisionmak process ie compar miss ratio v l refin set load ideal case would consid optim dynam refer individu the result cpl mv shown figur howev sinc impract softwarebas techniqu must consid aggreg collect refer sinc summari profil provid singl miss ratio per static refer finest granular cpl never cpl single_action_per_load ideal multiple_actions_per_load cpl alway cpl cpl single_action_per_load ideal multiple_actions_per_load cpl alway cpl never a cpl vs v figur illustr cpl differ approach appli latenc toler scheme overal averag load miss ratio latenc toler overhead load miss latenc decid whether appli dynam instanc given static refer figur illustr potenti shape singl action per load curv bound case never alway ideal appli sinc correl profil distinguish differ set dynam instanc static load base path inform allow us make decis finer granular summari profil therefor potenti achiev even better perform illustr multipl action per load curv figur further detail actual cpl equat summari correl profil case found appendix quantit evalu perform gain section present experiment result quantifi perform benefit offer correl profil begin measur understand potenti perform advantag gener latenc toler scheme later section focu softwarecontrol prefetch specif case studi experiment methodolog measur impact correl profil follow nonnumer applic entir spec integ benchmark suit addit integ benchmark contain spec suit uniprocessor version two graphic applic splash eight applic olden a suit pointerintens benchmark standard unix util awk tabl briefli summar applic includ input data set run complet case tabl show relev dynam statist applic compil applic o optim use standard mip c compil irix use mip pixi util instrument binari pipe result trace detail perform simul increas simul speed simplifi analysi model perfectlypipelin singleissu processor similar mip r section later section model modern superscalar processor mip r reduc simul time simul perform correl profil select subset load instruct criteria profil load must rank among top load term total cach miss count miss ratio must use criteria focu signific load intermedi miss ratio refer load correlationprofil load fraction dynam load refer applic correl profil shown tabl tabl benchmark characterist suit name descript input data set cach size integ perl unix script languag perl train scrabbl kb go comput game go train kb ijpeg graphic compress decompress train kb vortex databas program train kb compress compress decompress file memori train li lisp interpret train kb integ espresso minim boolean function cp eqntott translat boolean equat truth tabl int pri eqn kb raytrac raytrac program car kb radios light distribut use radios method batch kb olden bh barneshut nbodi forcecalcul k bodi kb mst find minimum span tree graph node kb perimet comput perimet region imag k x k imag kb health simul columbian health care system max level kb tsp travel salesman problem citi kb bisort sort merg biton sequenc integ kb emd simul propag em wave object hnode kb enod voronoi comput voronoi diagram set point point kb unix awk unix script languag awk extens test kb util awk capabl attempt maintain much histori inform possibl sake correl controlflow correl typic maintain path length basic blocksin case result larg number distinct path forc measur basic block self global correl experi maintain path length previou cach outcom either self global focu predict singl level data cach two level make analysi compli cate choic data cach size import either larg small rel problem size predict dynam miss becom easi they either alway hit alway miss therefor would like oper near knee miss ratio curv predict dynam hit miss present greatest challeng although could potenti reach knee alter problem size greater flexibl adjust cach size within reason rang chose data cach size follow first use summari profil collect miss ratio load within applic differ cach size rang kb kb chose cach size result largest number signific load intermedi miss ratiosthes size shown tabl case model twoway setassoci cach line improv predict accuraci perform figur show three correl profil schemescontrolflow c self s global g improv predict accuraci correlationprofil load bar normal respect number mispredict refer summari profil p broken two categori top section predict hit actual miss repres lost opportun predict refer hit and thu attempt toler latenc actual miss predict miss actual hit section account wast overhead appli latenc toler refer actual hit discuss earlier section threshold decid whether appli latenc toler refer miss ratio must exceed v latenc toler overhead l miss latenc summari profil threshold appli overal miss ratio instruct correl profil appli group dynam refer along individu path figur show result two valu v summari profil tend appli latenc toler aggress thu result notic amount wast overhead contrast v summari profil tend conserv thu result mani untoler miss overal correl tabl dynam benchmark statist the column inst number dynam instruct column load number dynam load it percentag inst also given column load miss rate datacach miss rate load column cp load fraction dynam load correl profil column cp load miss fraction load miss correl profil suit name dynam statist inst load load miss rate cp load ref cp load miss integ perl go ijpeg vortex compress gcc li integ espresso raytrac radios olden bh mst perimet health tsp bisort emd voronoi unix util awk profil significantli reduc type mispredict quantifi perform impact increas predict accuraci figur show result execut time four profil scheme assum cach miss latenc cycl bar normal execut time without latenc toler broken four categori bottom section busi time section predict miss actual miss use overhead paid toler refer normal miss top two section repres mispredict penalti includ wast overhead predict miss actual hit untoler miss latenc predict hit actual miss degre improv predict accuraci translat reduc execut time depend rel import load stall also fraction load correl profil factor favor eg eqntott see larg perform improvementswhen either factor small eg perimet tsp perform gain modest despit larg improv predict accuraci case studi develop deeper understand correl profil succe examin number applic greater detail addit discuss memori access pattern applic also show impact correlationprofil load three perform metric miss ratio distribut stall cycl per load cpl due correlationprofil load onli overal i cpl cp measur impact execut time miss ratio distribut give us insight effect correl profil isol dynam hit miss instanc static load instruct fail hide miss expens wast overhead possibl improv perform replac expens less expens mispredict even total mispredict count increas eg raytrac controlflow correl v predict miss actual hit predict hit actual miss normal mispredict awk basic block normal mispredict bh basic block normal mispredict bisort basic block normal mispredict compress basic block normal mispredict emd basic block normal mispredict eqntott basic block normal mispredict espresso basic block normal mispredict gcc basic block normal mispredict go basic block normal mispredict health basic block normal mispredict ijpeg basic block normal mispredict li basic block normal mispredict normal mispredict mst basic block normal mispredict perimet basic block normal mispredict perl basic block normal mispredict radios basic block normal mispredict raytrac basic block normal mispredict sc basic block normal mispredict tsp basic block normal mispredict voronoi basic block normal mispredict vortex basic block figur number mispredict correlationprofil load normal summari profil summari profil controlflow correl global correl maximum path length use controlflow correl indic next benchmark name li half total load miss caus two pointer derefer thisn flag mark pn flag sweep illustr pseudocod figur access pattern behav follow procedur mark travers binari tree three loop shown figur a start particular node first inner loop continu descend treechoos either left right child goesuntil reach either mark node leaf node point backup node continu descend search predict hit actual miss predict miss actual hit predict miss actual miss busi normal exec time awk basic block normal exec time bh basic block normal exec time bisort basic block normal exec time compress basic block normal exec time emd basic block normal exec time eqntott basic block normal exec time espresso basic block normal exec time gcc basic block normal exec time go basic block normal exec time health basic block normal exec time ijpeg basic block normal exec time li basic block normal exec time normal exec time mst basic block normal exec time perimet basic block normal exec time perl basic block normal exec time radios basic block normal exec time raytrac basic block normal exec time sc basic block normal exec time tsp basic block normal exec time voronoi basic block normal exec time vortex basic block figur impact profil scheme execut time assum cycl miss latenc l summari profil controlflow correl perform second inner loop tree alloc preorder similar one shown figur except much larger therefor enjoy spatial local long continu follow left branch tree spatial local disrupt whenev backup second inner loop illustr figur c three type correl profil provid better cach outcom predict summari profil thisn flag refer mark li self correl detect form spatial local effect global correl accur summari profil less accur self correl case cach outcom refer which help predict refer consum wast space global histori pattern controlflow correl also perform well void marknod ptr f true f outer loop true f st inner loop thisn flag mark break mark node els f els livecdrthi f right gels break leaf node end ifels end st innerwhil true f nd inner loop backup point continu descend end nd inner st outer a procedur mark pn flag b procedur sweep tree pointer c tree travers order mark figur procedur mark sweep li memori access pattern mark note consecut number node part c correspond adjac address memori observ thisn flag like suffer miss begin iter first inner loop immedi follow backup perform second inner loop in preced outer loop iter final refer pn flag sweep shown figur b fact array refer written pointer form self correl global correl detect spatial local caus access consecut element within array although compil could potenti recogn spatial local static analysi recogn pn flag effect array refer alway possibl case figur show detail perform result li miss ratio distribut figur a ten rang miss ratio contain four bar correspond fraction total dynam correlationprofil load refer fall within rang bar summari profil repres inher miss ratio load instruct three case repres degre correl profil effect group togeth dynam instanc load separ path similar cach outcom behavior correl scheme effect would like see ushap distribut refer isol alway high low miss ratiosw refer case strongli bias contrast refer cluster around middl distribut say weakli bias correl profil outperform summari profil increas degre bia observ figur a summari profil load profil miss ratio rang these includ thisn flag pn flag refer shown earlier figur contrast self correl recal profil load miss ratio among top rank load term contribut total miss therefor summari profil case never load outsid miss ratio rang cpl summari global controlflow self cpi summari global controlflow self ideal b cpl due correlationprofil load c overal cp figur detail perform result li profil isol load miss ratio rang either three correl scheme increas degre bia case increas degre bia correlationprofil load translat reduct cpl shown figur b cpl due correlationprofil load plot rang overheadtolat assum miss latenc cycl discuss section correl profil partial close gap summari profil ideal predict overal cp also shown figur c eqntott figur show detail perform result eqntott see three form correl profil success increas degre bia reduc cpl and henc cp i focu memori access behavior load miss caus four load cmppt shown figur a two array refer a ptandi b ptandi clearli spatial local enjoy two array refer detect self correl and henc global correl howev access pattern two load aptand bptand complic procedur cmppt multipl call site two them say invok frequent whenev cmppt call a like unchang b new valu contrast whenev cmppt call b like unchang a new valu moreov repeatedli call cmppt callsit depend behavior result stream cach outcom illustr figur b self correl captur stream behavior controlflow correl also predict cach outcom accur distinguish two call site cmppt cach outcom aptand also help predict ptandiif aptand hit impli array ptand load recent therefor ptandi refer like also hit similar correl also exist bptand b ptandi henc global correl quit effect case controlflow correl also predict cach outcom ptandi cpl summari controlflow global self ideal cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur detail perform result eqntott extern int ninput noutput int cmppt a b pterm a b f regist int i aa bb regist int ptand b ptand famou correl branch return aptand bptand a procedur cmppt caus b callsit depend load miss cach outcom pattern figur memori access behavior eqntott make load explicit rewrit two express aptandi bptandi origin cmppt four load ie aptand ptandi bptand b ptandi shown a b ptandi indirect fashion virtu predict aptand bptand cpl summari controlflow global self ideal cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur detail perform result perimet middle_right left right middle_leftmor spatial local found bottom void middl firstquadtre p f p null return middl firstpmiddl left middl firstpmiddl right middl middl a quadtre alloc preorder b code travers quadtre a figur exampl case spatial local found bottom tree exampl assum one cach line hold three tree node tree alloc preorder node consecut number adjac memori perimet bisort figur show detail perform result perimet main data structur use perimet bisort tree quadtre perimet binari tree bisort tree alloc preorder order travers rather arbitrari result see regular cach outcom pattern such one illustr figur applic cpl summari controlflow global self cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur detail perform result mst nevertheless still consider amount spatial local among consecut access node travers around bottom tree alloc preorder exampl travers quadtre use procedur middl first shown figur miss twice upon access node tree bottom assum node one cach line node anoth contrast rel littl spatial local travers middl tree self correl and henc global correl discov whether current region tree enjoy spatial local controlflow correl also potenti detect whether close bottom tree notic number level recurs descent mst miss mst see detail perform result figur caus load hashlookup tmpedgehash load bluerul illustr figur mst applic consist two phase creation phase comput phase phase invok hashlookup creation phase caus miss call hashlookup check whether key alreadi exist hash tabl alloc new entri it comput phase much data alreadi brought cach henc rel miss self correl global correl accur predict cach outcom two distinct phase sinc appear repeat stream either hit miss controlflow correl also effect sinc distinguish call chain invok hashlookup load tmpedgehash bluerul access link list whose node fact alloc contigu memori locat consequ self correl detect spatial local accur controlflow correl help void hashlookupint key hash hash f int j hashentri ent ent entkey key ent return ententri return null static bluereturn bluerul f tmpvlistnext tmp prevtmptmptmpnext f figur pseudo code drawn mst total correlationprofil miss ratio controlflow global self a miss ratio distribut correlationprofil load refer cpl summari controlflow global self ideal cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur detail perform result raytrac raytrac tsp raytrac refer figur perform result load miss caus pointer derefer tmpbv prim box see figur subdiv bintre two call prim box copi part array pe current node btn array btnpe btnpe btn btn children btn process copi pe perform recurs whole tree creat bintre result prim box call upon node n may use valu array pe refer pepa prim box n anteced n henc hope data load tmpbv alreadi cach case refer tmpbv hit cach contrast valu pepa new tmpbv refer miss henc self correl captur stream hit stream miss theori controlflow correl could also achiev good predict observ whether copi occur parent nodeunfortun profil tool cannot record enough state across mani controlflow chang subdiv bintre prim box know decis made parent node element prim boxpepa f comput ovlap chang pepaj ovlap f return npepa void subdiv bintreebtnod btn f btn btn btn children prim boxbtnp prim boxbtnp void creat bintreebtnod root f f subdiv bintreeroot creat bintreerootbtn creat bintreerootbtn figur pseudo code drawn raytrac tree tsptree tint sz f tsize sz return conquert return mergeleftv rightval t static tree conquertre t f l ldonext f figur code drawn tsp procedur makelisttre t sling list consist node t similar raytrac tsp also travers binari tree recurs data read current node read descend illustr figur procedur tsp recurs travers tree call conquert size greater sz procedur conquert use makelistt sling everi node list travers loop therefor sinc descend brought cach whenev conquert call subsequ recurs tleft tright within tsp result mani cach hit henc ldata refer either mainli hit mainli miss given node t self correl captur pattern effect controlflow correl also quit effect observ number time conquer call given recurs descentmost miss occur first time invok voronoi compress controlflow correl offer best predict accuraci applic miss voronoi caus load bnext splice call three differ place merg illustr figur a splice call call site bnext hit sinc ldinext load data cach prior call splice call two call site bnext like miss henc controlflow correl distinguish behavior differ call site accur self correl less effect sinc bnext regular cach outcom pattern compress see figur perform result roughli half miss caus hash total correlationprofil ref summari miss ratio controlflow global self a miss ratio distribut correlationprofil load refer cpl summari global self controlflow cpi summari global self controlflow ideal b cpl due correlationprofil load c overal cp figur detail perform result compress tabl access htabofi procedur compress see figur b index hash tabl htab function combin prefix code ent new charact c combin seen befor hash probe test htabi fcode trueif seen recent load htabi like hit cach sinc input file use provid spec gener frequenc distribut common english text string appear often other thi expect condit htabi fcode true quit frequent mani common string enter htab last test htabi fcode fals probabl next one true high also impli next refer htabi like hit therefor controlflow correl make accur predict examin last sever outcom branch espresso vortex mksim go four applic correl profil mainli improv cach outcom predict array refer espresso see figur detail perform result mani load miss due array refer written pointer form variabl stride figur a show one exampl insid loop p increment bbwsize whose valu depend call chain setup bb cc rang byte differ valu result differ degre spatial local captur self correl and henc global correl controlflow correl also make enhanc predict exploit callchain inform vortex mksim go mani load miss caus array refer locat insid procedur array indic pass procedur paramet see figur b exampl drawn vortex procedur multipl call site cach outcom array refer mainli callsit depend explain controlflow correl offer highest cach outcom predict accuraci three benchmark vortex array index paramet valu given call close even ident time valu pass differ call site quit differ consequ refer made call site enjoy tempor andor spatial edg pair merg f call site derefer ldj call site derefer ldk call site splicequad edg a quad edg b f htabi fcode f els f store fcode htab a code fragment voronoi b code fragment compress figur pseudo code drawn a voronoi b compress local made differ call site not sinc procedur usual invok multipl time call site invok anoth call site result stream pattern miss follow sever hitshenc self correl also perform well vortex captur cach outcom pattern lesson learn case studi although global correl make excel predict case correl behavior across differ load instruct eg eqntott case essenti assimil self correl perform quit well sinc record less histori given load self correl often success sinc recogn form spatial local recogniz compil time eg li perimet bisort mst also long run either hit miss eg eqntott mst tsp raytrac often find four previou cach outcom per refer suffici achiev good predict self correl captur call chain inform controlflow correl distinguish behavior base call site eg eqntott espresso vortex mksim go mst voronoi depth recurs travers tree eg perimet bisort tsp roughli half applic enjoy signific improv controlflow self correl mani case observ load refer success predict form correl good news sinc controlflow correl profil easiest case exploit practic use procedur clone distinguish callchain depend behavior appli correl profil prefetch demonstr practic correl profil use summari correl profil guid manual insert prefetch instruct three applic eqntott tsp raytrac case correl profil use procedur clone isol differ dynam instanc static refer adapt prefetch strategi accordingli respect call site assum v decid whether insert prefetch perform fullydetail simul processor similar mip r detail memori hierarchi shown figur a assum averag prefetch overhead v two cycl averag miss latenc l cycl total correlationprofil ref summari miss ratio controlflow global self a miss ratio distribut correlationprofil load refer cpl summari controlflow global self ideal cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur detail perform result espresso void setup bb ccpcover bb pcover ccf lastpbbcountbbws boolean chkgetchunknumtyp chunknum f a code fragment espresso b code fragment vortex figur pseudo code drawn a espresso b vortex figur b show result execut time normal case without prefetch applic summaryprofil direct prefetch actual hurt perform due overhead unnecessari prefetch contrast correl profil provid measur perform improv isol dynam hit miss effect therebi achiev similar benefit significantli less overhead would also like point number repres limit correl achiev exampl kb primari data cach correl profil offer speedup summari profil case eqntott relat work abraham et al investig use summari profil associ singl latenc toler strategi ie either attempt toler latenc not profil load use approach reduc memori paramet mip r simul primari instr data cach kb way setassoc unifi secondari cach mb way setassoc line size b primarytosecondari cycl miss latenc primarytomemori miss latenc data cach miss handler mshr data cach bank data cach fill time cycl requir exclus access main memori bandwidth access per cycl normal exec time load stall eqntott tsp raytrac store stall inst stall busi a memori paramet b execut time figur impact correl profil prefetch perform prefetch prefetch direct summari profil prefetch direct correl profil cach miss ratio nine spec benchmark includ integ floatingpoint program followup studi also report improv effect cach miss ratio contrast earlier work studi focus correl profil novel techniqu provid superior predict accuraci rel summari profil ammon et al use path profil techniqu observ larg fraction primari data cach miss spec benchmark occur along rel small number frequent execut path three form correl explor studi controlflow self global inspir earlier work use correl enhanc branch predict accuraci branch outcom cach access outcom quit differ interest observ correlationbas predict work well case conclus achiev full potenti softwarebas latenc toler techniqu propos correl profil techniqu isol dynam instanc static memori refer like suffer cach miss evalu potenti perform benefit three differ form correl profil wide varieti nonnumer applic experi demonstr correl profil techniqu alway outperform summari profil increas degre bia miss ratio distribut improv predict accuraci translat signific reduct memori stall time roughli half applic studi detail case studi individu applic show self correl work well cach outcom pattern individu refer often repeat predict way controlflow correl work mainli mani cach outcom callchain depend although global correl offer superior perform case part mainli assimil self correl final observ correl profil offer superior perform summari profil prefetch superscalar processor believ promis result may lead innov optim memori perform nonnumer applic appendix deriv stall cycl per load cpl five latencytoler scheme denot cpl particular toler scheme cpl let cpl cpl load program f fraction refer made load total refer load then theta f let l cycl stall upon load miss v overhead appli latencytoler techniqu load refer miss ratio load overal miss ratio load load refer stall cach miss so fulli toler latenc load refer alway incur overhead so cpl singl action per load miss ratio decid whether appli load i singl action per load ae l ie appli t otherwis ie appli t cpl singl action per load singl action per load theta f singl action per load theta f set load miss ratio v l na set load miss ratio v l cpl multipl action per load appli refer load belong context miss l formula cpl multipl action per load simpli obtain ad extra level equat captur notion context within load i is multipl action per load set context load miss ratio v set context load miss ratio v miss ratio context j load i f ij fraction refer load context j cpl multipl action per load obtain substitut multipl action per load equat loadmiss latenc fulli toler overhead incur miss refer r predict load latenc use cach profil predict loadstor instruct latenc exploit hardwar perform counter flow context sensit profil branch classif new mechan improv branch predictor perform methodolog procedur clone inform memori oper provid memori perform feedback modern processor mip technolog inc design evalu compil algorithm prefetch improv accuraci dynam branch predict use branch correl support dynam data structur distribut memori machin softwar support specul load trace pixi splash program character methodolog consider comparison dynam branch predictor use two level branch histori improv accuraci static branch predict use branch correl tr softwar support specul load design evalu compil algorithm prefetch improv accuraci dynam branch predict use branch correl comparison dynam branch predictor use two level branch histori branch classif improv accuraci static branch predict use branch correl support dynam data structur distributedmemori machin splash program inform memori oper predict loadstor instruct latenc exploit hardwar perform counter flow context sensit profil ctr aleksandar milenkov achiev high perform busbas sharedmemori multiprocessor ieee concurr v n p juli craig zill gurindar sohi executionbas predict use specul slice acm sigarch comput architectur new v n p may t k tan a k raghunathan g lakishminarayana n k jha highlevel softwar energi macromodel proceed th confer design autom p june la vega nevada unit state young michael d smith better global schedul use path profil proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state jeffrey dean jame e hick carl a waldspurg william e weihl georg chryso profilem craig b zill gurindar s sohi understand backward slice perform degrad instruct acm sigarch comput architectur new v n p may adi yoaz mattan erez ronni ronen stephan jourdan specul techniqu improv load relat instruct schedul acm sigarch comput architectur new v n p may chihung chi junli yuan chinm cheung cyclic depend base data refer predict proceed th intern confer supercomput p june rhode greec abhinav da jiwei lu howard chen jinpyo kim penchung yew weichung hsu dongyuan chen perform runtim optim blast proceed intern symposium code gener optim p march young michael d smith static correl branch predict acm transact program languag system topla v n p sept martin burtscher amer diwan matthia hauswirth static load classif improv valu predict datacach miss acm sigplan notic v n may jaydeep marath frank mueller tushar mohan broni r de supinski salli a mckee andi yoo metric track ineffici memori hierarchi via binari rewrit proceed intern symposium code gener optim feedbackdirect runtim optim march san francisco california chikeung luk toler memori latenc softwarecontrol preexecut simultan multithread processor acm sigarch comput architectur new v n p may tor m aamodt paul chow optim data prefetch helper thread pathexpress base statist model proceed st annual intern confer supercomput june seattl washington jiwei lu howard chen rao fu weichung hsu bobbi othmer penchung yew dongyuan chen perform runtim data cach prefetch dynam optim system proceed th annual ieeeacm intern symposium microarchitectur p decemb chikeung luk robert muth harish patil richard weiss p geoffrey lowney robert cohn profileguid postlink stride prefetch proceed th intern confer supercomput june new york new york usa jaydeep marath frank mueller tushar mohan salli a mckee broni r de supinski andi yoo metric memori trace via dynam binari rewrit identifi cach ineffici acm transact program languag system topla v n pe april character memori behavior java workload structur view opportun optim acm sigmetr perform evalu review v n p june mark horowitz margaret martonosi todd c mowri michael d smith inform memori oper memori perform feedback mechan applic acm transact comput system toc v n p may