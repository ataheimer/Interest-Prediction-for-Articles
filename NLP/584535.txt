t parallel variabl distribut constrain optim a parallel variabl distribut framework solv optim problem pvd variabl distribut among parallel processor processor primari respons updat block variabl allow remain secondari variabl chang restrict fashion along easili comput direct constrain nonlinear program converg theori pvd algorithm previous avail case convex feasibl set addit one either assum constraint blocksepar use exact project gradient direct chang secondari variabl paper propos two new variant pvd constrain case without assum convex constraint assum blocksepar structur show pvd subproblem solv inexactli solv quadrat program approxim extend pvd nonconvex separ feasibl set provid construct practic way solv parallel subproblem insepar constraint assum convex develop pvd method base suitabl approxim project gradient direct approxim criterion base certain error bound result readili implement use approxim direct may especi use project oper comput expens b am subject classic c introduct motiv consid parallel algorithm solv constrain optim problem min research rst author support cnpq faperj second author support part cnpq grant pronexoptim faperj c kluwer academ publish print netherland sagastizab solodov c nonempti close set n f continu dierenti function approach consist partit problem variabl x n p block x distribut among p parallel processor note notat shall explicitli account possibl rearrang variabl parallel algorithm iter usual consist two step parallel synchron consid moment unconstrain case correspond typic synchron step aim guarante sucient decreas object function parallel step produc candid point or candid direct simultan solv certain subproblem p l dene subspac dimens smaller n way p subspac span whole variabl space n method block jacobi updat conjug subspac coordin descent parallel gradient distribut dene p l minim problem lth block variabl ie n l recent parallel variabl distribut pvd algorithm introduc studi extend advoc subproblem l slightli higher dimens n l lth subproblem addit associ primari optim variabl x l repres condens form remain n n l problem variabl see algorithm below sinc remain n n l variabl allow chang restrict fashion in subspac dimens p addit comput burden solv enlarg subproblem big idea forgetmenot term add extra degre freedom yield algorithm better robust faster converg refer reader numer valid pvdtype method note variabl parallel subproblem complet xed especi import constrain case ie thi method simpli fail shall return issu later on gener pvd framework formal notion primari secondari variabl need introduc notat let l denot complement l index set number parallel processor given parallel variabl distribut direct n shall call pvddirect denot l n l p blockdiagon matrix form place block chosen direct along block diagon follow id id l note denot ident matrix appropri dimens linear transform l n l n l l l map l l unconstrain case gener transform use give rise fairli broad parallel variabl transform framework discuss howev theori appear extend constrain case focu present paper describ next basic pvd algorithm algorithm pvd start x c choos pvd direct x check stop criterion satis comput x i follow parallel processor l possibl solut y l l d l l l l l synchron comput lfpg l y choos new pvddirect repeat sagastizab solodov idea pvd algorithm balanc reduct number variabl p l allow enough freedom chang secondari variabl due thi parallel subproblem better approxim origin problem resolv note secondari variabl chang along chosen xed direct inclus signicantli increas dimension parallel subproblem p l inde number variabl p l secondari variabl exclud cours context parallel comput reason assum p small rel n l synchron step algorithm may consist minim object function ane hull subject feasibl point comput parallel p processor would requir solv pdimension problem small compar origin one convex program one altern dene x i convex combin candid point prin cipl converg purpos point object function valu least good smallest comput processor accept pvddirect typic easili comput feasibl descent direct object function f current iter x eg quasinewton steepest descent direct unconstrain case algorithm rather gener framework rene special obtain implementablepract version respect two princip question are set parallel subproblem eg choos pvd direct solv parallel subproblem includ criteria inexact resolut unconstrain issu address contain improv converg result compar includ linear rate converg result well use gener algorithm inexact subproblem solut certain degre asynchron obtain impos natur restrict of sucient descent type pvd direct even gener framework unconstrain case develop later subproblem obtain via certain nondegener transform origin variabl space transform gener need even distinct primari secondari variabl howev approach seem extend constrain case seem parallel variabl distribut also intuit justiabl transform kind primarysecondari variabl structur reason present paper shall restrict consider specic transform form constrain optim problem mani question still open especi nonconvex feasibl set c c convex blocksepar structur ie c cartesian product close convex set shown everi accumul point pvd iter satis rstorder necessari optim condit problem state case insepar convex constraint pvd approach may fail conclus support counterexampl reproduc below strongli convex quadrat program uniqu global solut consid point x x observ therefor appli algorithm use x start point xing secondari variabl pvd variant stay nonoptim point thu fail solv origin problem show constrain case special care taken set parallel subproblem gener convex feasibl set shown use project gradient direct dx x p c x rfx secondari variabl job here p c stand orthogon project map onto close convex set c specic establish set dx would ensur converg pvd method problem gener insepar convex constraint criteria inexact subproblem solut also given c polyhedr set comput project gradient direct requir solv everi synchron step algorithm singl quadrat program problem thi wealth fast reliabl algorithm avail note case nonlinear constraint task comput project gradient direct consider comput expens actual even ane case comput direct exactli or accur may turn rather wast especi far solut origin problem therefor improv necessari sagastizab solodov paper propos two new version pvd nonlinearli constrain case rst one appli problem block separ nonconvex feasibl set base use sequenti quadrat program techniqu sqp second propos insepar convex feasibl set introduc comput approxim criterion allow employ inexact project gradient direct criterion base error bound result independ interest emphas readili implement preserv global converg pvd method base exact direct notat fairli standard usual inner product two vector denot hx yi associ norm given use norm shall specifi explicitli analog notat use subspac dimens exampl reduc subspac n l sake simplic sometim use compact transpos notat refer composit vector instanc stand column vector l dierenti function denot ndimension column vector partial deriv f point dierenti vectorfunct c denot n jacobian matrix whose row transpos gradient compon c function h partial deriv lipschitzcontinu set x modulu l nonconvex separ constraint suppos feasibl set c describ system inequ constraint section assum c block separ structur specic propos solv parallel subproblem p l algorithm in exactli make one step sequenti quadrat program method sqp ch sinc sqp method local natur parallel variabl distribut modifi synchron step algorithm introduc suitabl linesearch base follow exact penalti function l posit paramet taken componentwis given x lth block rfx denot l i n l n l l algorithm follow algorithm start x c choos paramet posit denit n l n l matric x check stop criterion satis comput x i follow parallel processor l l l kkt point h l l l c l l l l synchron dene linesearch choos l l use merit function nd smallest nonneg integ m l repeat propos compar origin pvd algorithm two remark order first algorithm view pvd method inexact solut parallel subproblem inde hard nonlinear pvd subproblem p l algorithm approxim easi quadrat program subproblem qp l secondli pvd approach extend case nonconvex sagastizab solodov constraint note inclus forgetmenot term seem crucial blocksepar case for exampl term speci analysi thu drop secondari variabl p l take null pvddirect howev use secondari variabl deserv studi feasibl set insepar constraint also note algorithm thought distribut parallel implement sqp blockdiagon matrix chosen gener quadrat approxim object function remark contribut algorithm meant primarili pvd framework rather gener sqp method algorithm assum subproblem qp l nonempti feasibl set everi iter thi guarante exampl l jacobian c l map n l onto l c l convex alter nativ known feasibl subproblem forc introduc extra slack variabl p sometim argu sqp method conveni solv largescal with n larg nonlinear program inequ constraint present precis argu combinatori aspect introduc complementar condit kkt system associ qp make subproblem resolut rel costli hand sqp techniqu known ecient small medium size problem often method choic set relat algorithm import note subproblem qp l quadrat program problem rel small dimens n l l presum small compar n m exist number fast reliabl algorithm solv problem see eg section report numer result algorithm obtain via simul serial comput refer state optim condit qp l pair l solv kkt system l m l l l c l l l l l h l l denot x d usual direct deriv merit function x n direct n next state descent direct function point x turn impli linesearch procedur algorithm wellden parallel variabl distribut lemma f c c h l l l l dene algorithm proof dene indexset eg see p use b componentwis impli henc l l obtain rightmost inequ proceed follow l l l l l l l l l l sagastizab solodov second equal a fourth c inequ follow c fact c l l l combin latter relat l l l l j j l l j l l l second inequ cauchyschwarz inequ last choic complet proof algorithm global converg assum penal paramet kept bound abov essenti mean multipli l stay bound practic point view latter assumpt natur follow show converg algorithm karushkuhntuck kkt point ie pair x theorem suppos f c c let feasibl set c blocksepar structur given let fx sequenc gener algorithm assum exist iter matric l uniformli posit denit bound iter indic i either everi accumul point x sequenc fx g kkt point problem ie satis proof iter index happen l l ac reduc l l l c l l l h parallel variabl distribut take account separ constraint follow kkt system suppos hold i lemma direct descent merit function x standard argument linesearch procedur wellden termin nite stepsiz entir method wellden gener innit sequenc iter prove rst sequenc stepsiz ft g bound away take sinc f c similarli sinc c c use equival norm nitedimension set r l l l l l l l l l l l j c l l l l l l l l l l l l l tc l l equal obtain ad subtract tc l l second inequ follow jaj ja use last inequ rewrit relat obtain l l l j j l l l tj c l l l l l l l l second inequ convex j equal b togeth last inequ yield l l l j l l sagastizab solodov xed constant depend r direct comparison latter relat conclud guarante satis larg enough within set satisfi particular sinc linesearch procedur accept stepsiz follow either lemma uniform posit denit matric l exist r l use conclud assumpt follow sequenc f nonincreas henc either unbound below converg latter case impli sinc hold denit uniform posit denit matric l conclud l l pass onto limit ac take account bounded matric l obtain assert theorem convex insepar constraint suppos feasibl set c dene system convex inequ convex compon emphas section assum separ constraint set appear current known way ensur converg pvd algorithm use parallel variabl distribut project gradient direct chang secondari variabl omit iter indic i x current iter comput direct one solv subproblem follow structur min done iter algorithm alreadi discuss section solv problem gener nonlinear case quit costli moreov far solut origin problem exact or even accur project direct perhap unnec essari suggest develop stop rule solv or equival approxim criterion project direct use pvd scheme algorithm purpos import make criterion construct implement assum constraint qualic condit z solv ie if if pair z kkt system r z lz u hu standard lagrangian problem suppos z c u current approxim primaldu optim solut gener iter algorithm appli solv problem lemma establish error bound distanc z p c x rfx term violat kkt condit pair z u nice featur estim unlik perhap most error bound result literatur see survey involv express readili comput quantiti observ furthermor error bound hold global ie neighbourhood solut point thu easili employ algorithm purpos lemma relat error bound strongli convex program obtain howev theorem involv certain constant gener comput corollari assum z primal feasibl also z u dual feasibl mean u lemma sagastizab solodov assum z primal feasibl approxim multipli u nonneg assumpt weaker also appear suitabl algorithm framework satis iter mani standard optim method dual feasibl contrast unlik satis along iter typic algorithm except limit lemma let c convex dierenti suppos set c given satis constraint qualic z c u hold z u jr z lz uj jr z lz uj hu czi proof let u associ multipli pair z u satis denot l dene take z c u denot ui jz inequ follow u fact that convex c cz cz c zz z cz cz hand zi jr z lz ujjz equal follow kkt condit inequ follow fact cz cauchyschwarz inequ denot jz zj jr z lz uj hu czi combin obtain follow quadrat inequ t parallel variabl distribut resolv inequ obtain recal denit quantiti involv conclud jz zj jr z lz uj jr z lz uj hu propos follow pvd algorithm base approxim project gradient direct algorithm choos paramet start x c set x check stop criterion satis proceed follow pvddirect choic comput z associ approxim lagrang multipli u problem satisfi comput parallel processor l comput solut l dene algorithm synchron comput lfpg l y l repeat note algorithm generalpurpos method problem special structur exampl present introduct show problem comput meaning direct secondari variabl indispens compar alterna tive comput approxim project gradient direct seem quit favor term cost perhap even best one sagastizab solodov do regard toler criterion note z exact project point z rstorder necessari optim condit thi easi see project problem alway inexact solut satisfi henc method wellden converg properti algorithm result follow theorem let c convex dierenti l c suppos fx g sequenc gener algorithm either f unbound c sequenc ffx g converg everi accumul point sequenc fx g satis rstorder necessari optim condit proof consid iter processor l point l rst show point feasibl correspond subproblem p l minim function l l l l inde use notat l l l e l l l rst equal follow structur l inclus fact x convex set c result l d l l l y l l l l l l e l last inequ follow f c a parallel variabl distribut construct algorithm lemma henc exist n dene continu residu function notat properti project oper eg see proposit b sinc x c henc combin latter relat take account synchron step algorithm obtain observ rst relat cauchyschwarz inequ second follow last henc use latter inequ choic assumpt paramet sequenc ffx g nonincreas f bound c bound below henc converg latter case sagastizab solodov hand conclud frx g also tend zero continu r follow everi accumul point x sequenc well known latter equival minimum principl necessari optim condit xi x c preliminari numer experi get insight comput properti approach x consid test problem taken studi sphere pack problem particular problem chosen one use access parallel comput carri simul ie subproblem solv serial serial machin even though admittedli rather crude experi nevertheless give idea one might expect actual parallel implement given p sphere x p problem follow problem min x i t x j t st i t problem given integ min st parallel variabl distribut problem min st implement matlab algorithm serial sqp method gener pvd algorithm code run matlab version releas sun ultrasparcst detail implement follow algorithm implement use function constrm matlab optim toolbox solv subproblem p l algorithm serial sqp method quit sophist quasinewton implement linesearch base merit function qp l solv nullspac method penalti paramet updat use modic mayn polak rule allow decreas warrant stepsiz comput armijo rule use safeguard quadrat interpol order prevent marato eect ie ensur unit stepsiz asymptot accept possibl secondord correct ad search direct necessari ch final quasinewton matric updat bfg formula use also powel correct orenluenberg scale method stop rel error measur sum norm reduc gradient norm constraint less rst compar algorithm gener pvd algorithm sinc comparison turn rather obviou onesid which certainli surpris report exhaust test part tabl ii report number iter run time algorithm problem result problem follow trend yield insight note run time report serial without regard parallel natur algorithm iter structur two algorithm same seem meaning fair comparison alreadi clear intuit solv exactli gener nonlinear subproblem p l algorithm costli unlik yield competit algorithm easili conrm experi cours one could use heurist consider somehow adjust dynam toler solv subproblem in experi subproblem solv within sagastizab solodov tabl i result algorithm sqp method sphere pack prob lem start point gener randomli coordin time solv qp measur in second use intrins matlab function cputim problem p qp iter call qp speedup iter call prob parallel variabl distribut tabl ii result algorithm problem start point feasibl gener randomli time measur in second use intrins matlab function cputim algorithm algorithm name p iter time iter time toler origin problem howev converg analysi support strategi within algorithm constrain case strictli speak even converg proof algorithm case consider sinc feasibl set nonconvex discuss abov one motiv algorithm precis provid construct implement way solv subproblem p l inexactli solv quadrat approx imat result tabl ii conrm propos approach certainli make sens next set experi concern comparison algorithm serial sqp easi come meaning comparison serial method parallel method serial machin exampl overal run time parallel method obtain serial machin consid notori unreli predict time would requir parallel implement ie divid time number processor good measur therefor focu indic feel still meaning actual parallel implement discuss below evalu gain comput search direct report total time spent solv quadrat program subproblem within sqp within serial implement algorithm sinc commun processor would need within phase expect time solv qp parallel implement algorithm inde obtain divid number processor somewhat surpris even smaller problem see tabl i serial time solv qp algorithm alreadi consider smaller standard sqp dierenc sagastizab solodov becom drastic larger problem approxim speedup ecienc comput direct parallel time spent solv qp sqp time spent solv qp serial algorithm ecienc vari accept around high over grow fast size problem conrm motiv discuss x ie smaller qp signi cantli easier solv obvious possibl price pay algorithm deterior direct compar good implement full sqp algorithm issu address report number iter call oracl evalu function deriv valu see tabl i note number iter functionderiv evalu usual slightli higher algorithm alway overal number two method quit similar given impress gain algorithm exhibit solv qp subproblem indic parallel implement algorithm inde ecient least comput function deriv cheap rel solv qp particular case largescal problem function deriv given explicitli conclud remark two new parallel constrain optim algorithm base variabl distribut pvd present rst one consist parallel sequenti quadrat program approach case blocksepar constraint rst pvdtype method whose converg establish nonconvex feasibl set second propos algorithm employ approxim project gradient direct case gener insepar convex constraint use inexact direct particular relev project oper comput costli r nonlinear program parallel distribut comput sphere pack linear complementar problem nonlinear program tr iter method larg convex quadrat program survey spherepack lattic group parallel distribut comput numer method dual coordin ascent method nonstrictli convex minim parallel gradient distribut unconstrain optim new inexact parallel variabl distribut algorithm bound mathemat program twophas model algorithm global converg nonlinear program test parallel variabl transform parallel synchron asynchron spacedecomposit algorithm largescal minim problem converg constrain parallel variabl distribut algorithm parallel variabl transform unconstrain optim