t mimicri attack hostbas intrus detect system a examin sever hostbas anomali detect system studi secur evas attack first introduc notion mimicri attack allow sophist attack cloak intrus avoid detect id then develop theoret framework evalu secur id mimicri attack show break secur one publish id method experiment confirm power mimicri attack give work exampl attack concret id implement conclud call research intrus detect attack defend viewpoint b introduct goal intrus detect system id like watch burglar alarm attack manag penetr somehow secur perimet id set alarm system administr may take appropri action cours attack necessarili cooper us thi cat burglar use stealth escap without notic expect comput hacker may take step hide presenc tri evad detect henc id use research support part nsf career ccr permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee cc novemb washington dc usa would good idea make dicult attack caus harm without detect paper studi abil idss reliabl detect stealthi attack tri avoid notic fundament challeng attack adapt respons defens measur deploy enough design system withstand attack common time system deploy rather secur like game chess one must anticip move attack might make ensur system remain secur attack possibl respons cons quentli id suscept evas attack where attack cloak attack evad detect uncertain util long term expect id see widespread deploy attack chang behavior routin evad it sinc practic mani attack aris autom script script writer may someday incorpor techniqu design evad popular idss script sens success approach intrus detect may lead downfal approach secur evas attack broadli speak two kind intrus detect system network intrus detect system hostbas intrus detect system sever research previous identi number evas attack network intrus detect system motiv result paper turn attent hostbas intrus detect though good deal research secur network idss evas attack secur hostbas intrus detect system evas attack seem receiv much attent secur literatur one nd mani paper propos new techniqu intrus detect author often tri measur detect power test whether detect currentlypopular attack howev notion secur adapt adversari attack much harder measur apart recent work subject seem receiv great deal coverag literatur remedi shortcom paper undertak systemat studi issu hostbas intrus detect system divid two categori signaturebas scheme ie misus detect anomali detect signaturebas scheme typic trivial bypass simpli vari attack slightli much way polymorph virus evad viru checker show section automat creat mani equival variant given attack could use attack avoid match idss signatur attack unavoid weak misus detect evas attack signaturebas scheme child play consid paper anomali detect system interest point view evas attack paper focu specic anomali detect system show section sever gener evas method includ notion mimicri attack idea introduc semant noop middl attack throw id o next section introduc principl framework nding mimicri attack build idea languag automata theori argu section nearli everi system call use noop give attack great freedom construct attack trigger intrus alarm section describ empir experi use mimicri attack escap de tection convert otheshelf exploit script one work without detect ph id final section conclud part thought countermeasur implic expositori purpos paper written point view attack nonetheless goal empow comput crimin rather explor limit current intrus detect technolog enabl develop robust intrus detect sy tem cryptograph commun benet tremend combin research attack defensesfor instanc accept wisdom one must rst becom expert codebreak one want success codemak mani cryptosystem valid accord abil stand concert adversari analysisyet intrus detect commun date benet style adversari scholarship hope work help jumpstart dialogu intrus detect research literatur typic hostbas id mani propos hostbas anomali detect paradigmat and semin exampl gener approach forrest et al brie review scheme monitor behavior applic host observ interact applic underli oper system practic securityrelev interact typic take form system call scheme work examin trace system call perform applic scheme motiv use human immun system biolog analog system call trace normal applic selfsimilar attempt build id learn normal behavior applic recogn possibl attack look abnorm learn phase sort scheme id gather system call trace time system attack extract subtrac contain six consecut system call creat databas observ subtrac subtrac deem anomal practic ph use lookahead pair reduc size databas increas set system call appear databas then monitor phase abnorm new system call trace measur count mani anomal subtrac contain author experi attack often appear radic abnorm trace instanc imagin mail client attack script exploit buer overrun add backdoor password le spawn new shell listen port case system call trace probabl contain segment look someth like thi open write close socket bind listen accept read fork sinc seem unlik mail client would normal open le bind network socket fork child immedi success sequenc would like contain sever anomal subtrac thu attack would easili detect select somayaji forrest ph intrus detect system detail analysi mainli system full sourc code could obtain analysi mani propos hostbas anomali detect may found literatur howev ph fairli typic sens mani hostbas idss reli recogn attack base trace produc trace system call bsm audit event unix command use ph motiv exampl throughout paper expect techniqu appli gener hostbas intrus detect system base detect anomali sequenc event instanc possibl use approach analyz system base system call sequenc data mine neural network nite automata hidden markov model pattern match behavior sequenc build block evas background first let us start assumpt simplifi analysi follow seem natur assum attack know id work seem unavoid id becom popular deploy mani site extrem dicult prevent sourc code id leak usual secur obscur rare reliabl defens seem natur assum id algorithm avail inspect studi attack similarli id reli databas normal behav ior typic straightforward attack predict approxim databas behavior system softwar depend primarili oper system version congur detail variabl held constant normal databas produc dierent machin quit similar henc attack could readili obtain use approxim databas target host examin normal databas found sever host type retain program behavior common databas use result predict normal databas target host sinc attack trace allow ph attack need underapproxim normal databas use suce henc seem reason assum databas normal behavior mostli or entir known moreov also assum attack silent take control applic without detect assumpt alway satis mani common attack vector actual penetr leav trace system call trace instanc exploit buer overrun vulner involv chang control ow program caus system call invok thu syscallbas id detect buer overrun itself gener attack divid penetr phase when attack take control applic inject remot code exploit phase when attack exploit control applic bring harm rest system execut recentlyinject foreign code anomali detect system base detect harm eect exploit detect penetr itself consequ seem reason believ mani applic may contain vulner allow attack secretli gain control applic background remaind section describ six simpl idea avoid detect order increas sophist power presum attack malici sequenc action caus harm want execut goal execut sequenc without detect slip radar rst evas techniqu base tri avoid caus chang whatsoev observ behavior applic simpl observ system callbas idss detect attack signatur system call trace applic possibl caus harm system without issu system call id hope detect attack instanc old version solari possibl becom root simpli trigger dividebyzero trap handler involv system call howev os vulner appear except rare gener instanc attack class attack usual caus applic comput incorrect result instanc compromis web browser might invis elid headlin mention democrat parti whenev user visit news site compromis mailer might silent chang word is isnt everi third email compani ceo seem littl id class attack fortun harm attack rest system without execut system call appear limit patient second techniqu evad detect simpli patient wait passiv time malici sequenc accept id normal behavior paus applic insert malici sequenc cours attack readili recogn sequenc allow simpli simul behavior id simul id easi sinc discuss secret id algorithm moreov straightforward attack retain control allow applic execut usual sequenc system call instanc attack take control applic could emb trojan hors replac librari function applic address space modi code replac implement might behav like preexist librari code except return caller function could check whether time right begin execut malici sequenc modic complet attack could return ow program control applic condent knowledg retain power regain control time mani way accomplish sort parasit infect seem defens invas one substanti constraint attack though attack assum come time malici sequenc accept not attack gain noth thu power attack limit precis databas normal behavior anoth limit attack that malici sequenc execut resum execut applic may well lead abnorm system call trace case two choic immedi present them selv could allow applic continu execut therebi allow id detect attack albeit harm alreadi done could freez applic perman which like notic thu might attract attent slightli better strategi may caus applic crash way make crash appear come innocu program bug rather secur violat sinc practic mani program rather buggi system administr use see coredump blue screen death time time may well ignor crash howev strategi without risk attack short patient attack probabl somewhat danger naiv impati attack attack still get lucki caus harm scenario risk might accept defend patient make luck one way attack improv upon passiv patienc load dice typic mani possibl path execut applic may lead slightli dierent system call trace suggest attack strat egi attack look favor path execut nudg applic follow path optim rather embed trojan hors allow applic execut normal attack discard applic entir simul presenc exampl attack identifi favor path execut synthet construct sequenc system call would execut path issu directli insert malici sequenc appropri point analysi eort precomput thu stealthi attack might simpli contain sequenc hardcod system call simul presenc applic eventu execut malici sequenc fact see reason attack restrict feasibl execut path appli cation attack even consid system call trace could possibl output execut applic long trace accept nor mal id word attack examin set system call trace trigger alarm look one trace malici sequenc safe insert then path identi attack simul execut proceed evad id essenc mimick behavior applica tion malici twist continu biolog analog success mimic recogn self immun system caus alarm reason dub mimicri attack style attack power requir care examin id attack also somehow identifi favor trace studi topic greater detail section replac system call paramet anoth observ scheme complet ignor argument system call instanc innocu system call openliblibcso o_rdonli look indistinguish to id malici call openetcshadow o_rdwr evas techniqu then obviou want write shadow password le need wait applic open shadow password le normal execut instead may simpli wait applic open le whatsoev substitut paramet etcshadow o_rdwr applic appar anoth form mimicri attack far tell almost hostbas intrus detect system complet ignor system call paramet return valu except awar wagner dean static id look small class system call paramet parameterreplac attack may problemat scheme well insert noop anoth observ conveni way insert given malici sequenc applic system call stream often vari malici sequenc slightli insert noop it context term noop indic system call eect whose eect irrelev goal at tacker open nonexist le open le immedi close it read byte open le de scriptor call getpid discard result exampl like noop note even origin malici sequenc never accept id modi sequenc appropri noop embed might well accept without trigger alarm show later paper see section tabl that one two except nearli everi system call use noop give attack great power sinc pad desir malici sequenc system call chosen freeli maxim chanc avoid detect one might expect intuit everi system call found normal databas may becom reachabl mimicri attack insert appropri noop develop partial evid support intuit section gener equival attack gener way gener variat malici sequenc without chang eect give attack extra degre freedom tri evad detect one imagin mani way systemat creat equival variat given malici sequenc instanc call read open le descriptor typic replac call mmap follow memori access anoth exam ple mani case system call malici sequenc reorder attack tri mani possibl see insert compromis applic without detect entir comput done oin singl precomput also system call give attack special power execut without detect part exploit sequenc instanc idss handl fork clone id monitor child parent applic process independ henc attack reach fork system call split exploit sequenc two concurr chunk eg overwrit password le place backdoor ls program attack call fork execut rst chunk parent second chunk child anoth exampl abil execut execv system call give attack power run program whatsoev system cours idea evas combin freeli make situat appear rather grim defend attack mani option though check option may requir lot eort attack part also seem unclear whether defend evalu advanc whether might work given id shall address issu next theoret framework section develop systemat framework method identifi potenti mimicri attack start given malici sequenc system call model intrus detect system goal identifi whether trace system call accept id without trigger alarm yet contain malici sequenc equival variant it formal follow let denot set system call set sequenc alphabet say system call trace accept or al low id execut sequenc trigger alarm let denot set system call trace allow id ie accept idsg also let denot set trace achiev attack goal eg equival variant given malici sequenceg succinctli state condit exist mimicri attack set exactli set trace permit attack achiev goal without detect thu mimicri attack possibl intersect nonempti element give stealthi exploit sequenc use achiev intrud goal reliabl evad detect main idea propos analyt method frame problem term formal languag theori pa per regular languag fairli natur nitest idss alway describ nitest automata thu accept regular languag syscal trace moreov insist also regular languag requir bit justic see section below hope sound unreason point easi gener framework still formul adequ hostbas idss consid experi formul test mimicri attack done automat polynomi time standard theorem languag theori l l two regular languag l l l l comput eectiv x also given regular languag l ecient test whether l l nonempti quickli nd member l x thi follow comput descript m ecient test exist mimicri attack remaind section describ rst comput comput m model id forrest id predict whether next system call allow need know previou system call consequ fact forrest id work look subtrac six consecut system call check observ subtrac databas allow subtrac consequ case model id nitest automaton statespac given vetupl system call transit allow system call action formal statespac recal denot set system call transit subtrac found idss databas allow subtrac automaton repres ecient way normal databas repres next need initi state set nal accept state requir patch thing bit introduc new absorb state alarm selftransit alarm alarm system call ensur everi trace set intrus alarm end state alarm ad transit s alarm subtrac found idss databas allow subtrac nal ac cept state nonalarm state exclud special state alarm initi state automaton repres state applic applic rst penetr heavili depend applic attack vector use presum dierent vulner lead dierent initi state instanc buer overrun allow attack gain control instanc could allow but both contextfre languag without violenc polynomialtim natur analysi applic execut consecut read system call initi state automaton read read read read read extens practic one may want rene model account addit featur id instanc local frame count slightli forgiv occasion mismatch subtrac trigger alarm sucient mani mismatch seen handl within nitest model detail see appendix a model malici sequenc next consid express desir malici sequenc within framework particular gener mani equival variat it abil gener equival variat critic success attack rest knowledg equival induc oper system semant follow let malici sequenc want sneak id ad noop note one simpl way gener equival variant freeli insert noop malici sequenc noop system call eect gener one eect success malici sequenc instanc call getpid ignor return valu call brk ignor newli alloc return memori on use trick nding noop invok system call invalid argument system call fail action taken yet id appear system call execut give exampl open nonexist pathnam call mkdir invalid pointer say null pointer one caus access violat call dup invalid le descriptor everi id known author ignor return valu system call allow intrud nullifi eect system call fool id think system call succeed conclus analysi almost everi system call nulli way sideeectfre system call alreadi noop system call take pointer memori address le descriptor signal number pid uid gid nulli pass invalid argument one notabl except exit kill process matter argument is see tabl list system call found might caus diculti rest may freeli use gener equival variant malici sequenc surpris hard nd nulliabl system call rather easi nd themwith except nearli everi system call readili nulliabl give attack extraordinari freedom vari malici exploit sequenc character equival sequenc obtain way simpl regular express let n denot set nulliabl system call consid regular certainli possibl might overlook problemat system call particularli system linux howev yet encount problemat system call found tabl system call nulli abl use attack comment process caus problem intrud unlik put process sleep would caus problem intrud attack might abl caus process receiv signal wake eg send sigurg tcp band data applicationdepend hang current termin might problemat intrud rare use applic henc caus problem usual creat new copi process sinc id probabl clone monitor separ unlik caus problem attack similar comment appli vfork clone linux call alarm set new alarm like safe sideeect cancel previou alarm might occasion interfer normal applic oper rare usual creat new session process alreadi session leader seem unlik interfer typic attack goal practic nullifi pass socket type paramet nullifi pass null pointer paramet nullifi pass null lenam paramet ye ye tabl system call whether use build equival variant given malici sequenc second column indic whether system call reliabl turn noop ie nulli third column indic whether attack interspers system call freeli given malici sequenc obtain equival variant instanc exit nulliabl kill process henc usabl gener equival variant malici sequenc tabl show system call know attack might abl nullifi remain system call shown easili nulli express dene match set sequenc obtain insert noop sequenc match regular express eect henc interchang moreov regular express may express nitest automaton standard method x way obtain represent set dene earlier desir extens necessari could introduc variabl set variant consid consid equival system call instanc read system call appear malici sequenc could also easili replac read mmap system call help avoid detect anoth exampl often collaps multipl consecut read call singl read call multipl chdir system call singl chdir on equival also model within nitest framework assum relat r obey follow condit may assum sequenc x equival replac x without alter result eect system suppos moreov relat express nitest transduc eg meali moor machin equival assum r form ration transduct dene standard result languag theori x nd regular languag moreov easili comput represent nitest automaton given nitest represent r note also gener strategi insert noop dene relat rn rn x obtain x insert noop set n hard see relat rn given nitest transduct henc idea introduc noop seen special case gener theori base ration transduct summari see framework fairli gener expect model id set malici sequenc nitest automata implement implement idea follow first train id programmat built automaton result databas normal sequenc system call automaton form describ abov next step form composit take usual product construct implement test nonempti intersect construct product automaton explicitli memori x perform depthrst search initi state see accept state reachabl x ye weve found stealthi malici sequenc not mimicri attack fail essenc simpl way modelcheck system properti m note mani way optim comput use idea modelcheck literatur instanc rather explicitli comput entir product automaton advanc store memori reduc space could perform depthrst search gener state lazili y also could use hash keep bitvector previous visit state reduc memori consumpt enough could even use techniqu symbol modelcheck repres automata use bdd comput product symbol standard algorithm howev found fanci optim seem unnecessari practic simpl approach seem adequ case weve look at experi algorithm run less second surpris one consid that usag scenario automaton typic thousand state contain half dozen state henc composit contain ten thousand state easi comput with empir experi section report experiment evid power mimicri attack investig number hostbas anomali detect system although mani paper written propos variou techniqu found one work implement sourc code could download use test ph for process homeostasi system ph deriv for rest et al earli system twist ph respond attack slow applic addit rais alarm system administr system call ph delay respons count number mismatch length subtrac last system call use ph version run fresh linux redhat instal version kernel test host disconnect network durat experi avoid possibl attack extern sourc corrupt experi also select otheshelf exploit see whether could made stealthi use techniqu chose one less random select attack script call autowuxc exploit site exec vulner wuftpd ftp server autowux attack script exploit string vulner call setreuid escap chroot protect exec binsh use execv system call turn fairli typic payload shellcod found mani attack script exploit other unrel vulner conjectur author autowux script copi shellcod previou sourc rather develop new shellcod version linux redhat run wuftpd version wuacadembeta train ph run wuftpd hundr larg sinc work done version ph re leas new version use longer window length might improv secur test whether chang improv resist ph mimicri attack interest instruct notic widespread attack payload includ provis default alway attempt escap chroot jail lesson that weak protect measur becom widespread enough eventu attack routin incorpor countermeasur attack implic intrus detect system suscept mimicri attack troubl le download period two day veri ph detect unmodi exploit next attempt modifi exploit evad de tection pars ph databas learn length sub trace built automaton recogn exactli system call trace never caus mismatch bother rene represent model fact intrud safe caus occasion mismatch without caus problem see appendix a renement turn unnecessari also examin point time autowux mount buer ow attack wuftpd server found window last system call execut wuftpd exploit rst gain control determin initi state a addit revers engin exploit script learn perform follow sequenc system call chdir chroot execvebinsh notic nine consecut chdir call can case collaps singl alway one also freeli introduc noop two simpl observ built automaton recogn regular express program perform depthrst search product automaton inform us stealthi trace match regular express next modi attack sequenc slightli hand repair decienc interact invok tool time discov reason origin pattern infeas path normal databas reach dup mkdir execv henc attack use system call complet avoid mismatch howev note three system call readili dispens with need creat new directori exist directori well escap chroot jail side benet leav fewer trace also dup execv need spawn interact shell yet attack still caus harm simpli hardcod exploit shellcod action want take without ever spawn shell hypothes typic harm action attack might want perform add backdoor root account password le henc propos attack might happi perform follow took care ensur id learn exploit code normal process subsequ experi virgin databas train scratch use procedur complet untouch attack read stat close close munmap brk fcntl setregid open fcntl close brk time getpid sigact socketcal figur stealthi attack sequenc found tool exploit sequenc intend execut take control wuftpd site exec format string vulner modic preexist sequenc found autowux ex ploit underlin system call origin attack sequenc tool take underlin system call input output entir sequenc nonunderlin system call intend nulli play role seman tic noop present ensur ph id detect attack eect result stealthi exploit escap chroot jail add backdoor root account system password le variant origin exploit sequenc openetcpasswd appendo wronli closefd exit fd repres le descriptor return open call thi valu readili predict modi attack sequenc becom root escap chroot jail append backdoor root account password le check whether modi attack sequenc could execut stealthili built automaton recogn regular express found sequenc rais alarm match pattern see fig stealthi sequenc find stealthi sequenc took us hour interact explor search program softwar implement build modi exploit script implement attack instead independ verifi correct stealthi sequenc separ ran sequenc stide conrm would accept zero mismatch databas gener earlier note abl transform origin attack sequenc modi variant would trigger even singl mismatch would similarli harm eect word need take advantag fact ph allow occasion mismatch without set alarm attack would success matter set chosen ph local frame count threshold make success result meaning summari experi indic sophist attack evad ph id fairli surpris success mimicri attack convert autowux script one would avoid detect rst glanc worri would abl much attack script payload contain fairli unusu look system call sequenc nonetheless seem databas normal system call sequenc rich enough allow attack consider power shortcom awar sever signic limit experiment methodolog compil stealthi sequenc fig modi exploit script tri run modi script machin protect ph moreov assum could modifi autowux exploit sequenc long aect eect success attack howev exampl would convinc attack requir modic origin exploit sequenc also test singl exploit script autowux singl vulner applic wuftpd singl oper system redhat linux singl system congur the default redhat instal singl intrus detect system ph enough establish presenc risk provid enough data assess magnitud risk evalu dierenc oper system congur might aect risk tri assess practic attack might be studi much eort knowledg requir attack mount sort attack empir test eectiv one predict congur id normal databas found target host measur whether databas divers signic barrier attack estim percentag vulner would give attack sucient control applic mount mimicri attack permit inject enough foreign code execut entir stealthi sequenc also attack often get better time may soon draw denit conclus unknown factor thorough studi need con dentli evalu level risk associ mimicri attack practic ph use lookahead pair stide restrict ph howev result test still valid sinc modi sequenc accept stide expect accept ph too anyth use stide make experi meaning indic stidebas idss also vulner mimicri attack relat work recent research secur hostbas anomali detect system so phistic adapt adversari wagner dean brie sketch idea mimicri attack earlier work x gin jha miller elabor outlin metric suscept evas attack base attack automata x somayaji suggest may possibl principl dicult practic evad ph id give brief exampl justifi claim x none paper develop idea depth examin implic eld set stage futur research recent independ tan killourhi maxion provid much thorough treatment issu research show attack render hostbas idss blind presenc attack present compel experiment result illustr risk followup work tan mchugh killourhi rene techniqu gave experiment conr mation risk attack method dierent given paper result agreement our discuss sever lesson suggest experi first foremost possibl intrus detect system design resist mimicri attack stealthi behavior sophist attack attack also give specic guidanc id design might help idss observ system call attempt also one fail error code return might good idea monitor predict system call execut also argument pass otherwis attack might much leeway moreov databas normal behavior minim precis possibl reduc degre freedom aord attack second recommend futur publish work propos new id design includ detail analysi propos secur evas attack even type vulner cannot complet counter clever design seem worthwhil evalu care risk final encourag id design publicli releas full implement design enabl independ secur analysi sever propos intrus detect techniqu would like examin detail work unabl access refer implement conclus shown attack may abl evad detect hostbas anomali intrus detect system present initi evid idss may vulner clear seriou threat mimicri attack practic nonetheless lesson enough mere protect today attack one must also defend tomorrow attack keep mind tomorrow attack might adapt respons protect measur deploy today suggest attent could paid intrus detect commun secur adapt attack hope stimul research area acknowledg thank umesh shankar anil somayaji anonym review mani insight comment earlier draft paper also indebt somayaji make ph sourc code publicli avail without research would possibl r design valid comput protocol introduct automata theori tr design valid comput protocol model checker spin tempor sequenc learn data reduct anomali detect bro enforc secur polici symbol model check introduct automata theori languag comput intrus detect use variablelength audit trail pattern use finit automata mine execut data intrus detect detect manipul remot call stream learn program behavior profil intrus detect hide intrus selfnonself discrimin comput sens self unix process intrus detect via static analysi oper system stabil secur process homeostasi ctr wunhwa chen shenghsun hsu hwangpin shen applic svm ann intrus detect comput oper research v n p octob hilmi gne kayacik malcolm heywood nur zincirheywood evolv buffer overflow attack use genet program proceed th annual confer genet evolutionari comput juli seattl washington usa jess c rabek roger i khazan scott m lewandowski robert k cunningham detect inject dynam gener obfusc malici code proceed acm workshop rapid malcod octob washington dc usa christoph kruegel engin kirda darren mutz william robertson giovanni vigna autom mimicri attack use static binari analysi proceed th confer usenix secur symposium p juli august baltimor md jame poe tao li bass benchmark suit evalu architectur secur system acm sigarch comput architectur new v n p septemb debin gao michael k reiter dawn song graybox program track anomali detect proceed th confer usenix secur symposium p august san diego ca haizhi xu steve j chapin improv address space random dynam offset random techniqu proceed acm symposium appli comput april dijon franc timothi hollebeek rand waltzman role suspicion modelbas intrus detect proceed workshop new secur paradigm septemb nova scotia canada analyz evalu dynam stide perform intrus detect knowledgebas system v n p novemb niel provo virtual honeypot framework proceed th confer usenix secur symposium p august san diego ca prahlad fogla wenk lee evad network anomali detect system formal reason practic techniqu proceed th acm confer comput commun secur octob novemb alexandria virginia usa we masri andi podgurski use dynam inform flow analysi detect attack applic acm sigsoft softwar engin note v n juli hassen sadi guard model intrus detect proceed workshop program languag analysi secur june san diego california usa gaurav tandon philip chan debasi mitra morpheu motif orient represent purg hostil event unlabel sequenc proceed acm workshop visual data mine comput secur octob washington dc usa salvator j stolfo shlomo hershkop chiawei hu weijen li olivi nimeskern ke wang behaviorbas model applic email analysi acm transact internet technolog toit v n p may niel provo improv host secur system call polici proceed th confer usenix secur symposium p august washington dc darren mutz fredrik valeur giovanni vigna christoph kruegel anomal system call detect acm transact inform system secur tissec v n p februari c m linn m rajagopalan s baker c collberg s k debray j h hartman protect unexpect system call proceed th confer usenix secur symposium p juli august baltimor md r sekar vn venkatakrishnan samik basu sandeep bhatkar daniel c duvarney modelcarri code practic approach safe execut untrust applic proceed nineteenth acm symposium oper system principl octob bolton land ny usa maja pusara carla e brodley user reauthent via mous movement proceed acm workshop visual data mine comput secur octob washington dc usa janak j parekh ke wang salvator j stolfo privacypreserv payloadbas correl accur malici traffic detect proceed sigcomm workshop largescal attack defens p septemb pisa itali kenneth l ingham anil somayaji john burg stephani forrest learn dfa represent http protect web applic comput network intern journal comput telecommun network v n p april christoph kruegel giovanni vigna william robertson multimodel approach detect webbas attack comput network intern journal comput telecommun network v n p august shuo chen jun xu emr c sezer prachi gauriar ravishankar k iyer noncontroldata attack realist threat proceed th confer usenix secur symposium p juli august baltimor md jedidiah r crandal s felix wu freder t chong mino architectur support protect control data acm transact architectur code optim taco v n p decemb martn abadi mihai budiu lfar erlingsson jay ligatti controlflow integr proceed th acm confer comput commun secur novemb alexandria va usa