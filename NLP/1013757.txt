t minim np multifunct a implicit character polynomialtim comput function fp given bellantonicook leivant suggest class complexitytheoret analog primit recurs function henc natur add minim oper character investig result class partial function candid analog partial recurs function paper cobham definit fp bound recurs bellantonicook safe recurs prove result class captur exactli npmv nondeterminist polynomialtim comput partial multifunct also consid relationship scheme notion nondeterminist recurs defin leivant show latter character total function npmv view result give evid npmv appropri analog partial recurs view reinforc earlier result spreen stahl show mani relationship partial recurs function re set analog relationship hold npmv np set furthermor sinc npmv obtain fp way recurs function obtain primit recurs function when defin via function scheme also give evid fp properli seen play role primit recurs b introduct consid analog arithmet polynomialtim hierarchi standard view polynomi time play role recurs though alwaysse eg selman return polynomialtim set use base p polynomi hierarchi p dene set polynomialtim oracl p set howev view unproblemat analog p indic np conp identi recurs set assumpt p np conp leav polynomialtim set view analog smaller class natur choic smaller class primit recurs set or function back cobham character fp function comput polynomi time scheme recurs notat noth explicitli bound version primit recurs formul binari word further work bellantoni cook report date oct leivant provid primit recurs scheme dene fp explicit bound rather control primit recurs semanticallyinspir syntact implement tier notion approach character complex class without explicit mention resourc bound typic refer implicit comput complex howev identifi fp primit recurs function view np conp appropri analog recurs set left follow question correct analog partial recurs function cours expect class partial function howev machinebas view complex class bound lead unpleas seem straightforward clean way dene complex partial function especi becom clear insist upon notion timebound machin may halt input implicit comput complex truli shine sinc character make mention resourc bound natur extend exist implicit character fp oper analog classic case analyz result class partial function candid analog partial recurs function sinc one pass primit recurs function partial recurs function ad minim oper composit primit recurs obviou start point add version minim cobham bellantoni cook leivant character understand version minim use consid classic denit use partial recurs function obtain version minim appropri polynomialtim function want ensur veric fact minimum valu requir search polynomi number valu thu replac bound quantier sharpli bound one denit immedi rais ag minim longer dene partial function could sever satisfi b x eg suppos input length input length minim would yield thu straightforward approach lead us consid partial multifunct formal map natur number n p n set nite subset n retrospect unexpect partial function satis condit x x one element partial multifunct same except x nite mani element essenti unrestrict comput resourc recurs function collaps mani valu one problem restrict complex object consider reason assum cannot necessarili perform collaps eg x mani element function must allow mani output anoth view sharpli bound quantier instead multipl output valu instead choos one valu lead directli idea nondeterminist choic comput fact function class consid particular selman dene class npmv consist partial multivalu function comput nondeterminist ture machin polynomi time here comput mean possibl output x tm accept path input x content output tape upon halt y main result paper add minim variou primit recurs denit fp obtain exactli class npmv thu approach implicit comput complex provid straightforward way gener polynomialtim comput function broader class ought correspond partial recurs function fact give resourcefre character previous dene class assert play role thu justifi natur what turn be singl class consid plan paper follow section provid basic denit includ notion bound minim result extens cobham class section contain proof extens captur exactli npmv section introduc resourcefre notion minim within framework bellantoni cook safe recurs work know directli address issu ad minim oper similar way bellantoni add oper singlevalu total compar approach section well section consid scheme nondeterminist recurs dene leivant show total function denabl scheme exactli total function npmv and henc total function denabl use safe recurs notion safe minim final close section mention straightforward result reinforc claim npmv correct analog partial recurs function suggest direct studi definit use lowercas roman letter a b x numer variabl length number jxj dene dlog e abbrevi sequenc x x k relev binari successor binari predecessor given partial multifunct pmf altern view relat n k satisfi constraint x fy j hx yi g nite use rang pmf total partial function identi natur way pmf assum ident whenev mention function function class write x possibl output x x z x z z comput model regist machin rm consist nite set state nite set regist nite set instruct follow form state j hold x store x x j chang state k state j hold x store px j chang state k state content j either x chang state k otherwis chang state k let regist machin state one instruct determinist state other nondeterminist determinist state deter minist determinist rm comput nari partial function store n argument enter state execut instruct natur manner reach state instruct halt x content wise never halt x unden nondeterminist rm assum two distinguish state acc rej instruct enter one state said accept reject input accordingli nondeterminist rm comput pmf store x execut instruct obviou nondeterminist fy j contain accept xg congur list specifi state content regist comput sequenc sequenc congur n transit c c i assum code regist machin congur satisfi condit e code z code comput sequenc length n everi regist everi congur store number length n z seqbnd n seqbnd polynomialtim comput also dene polynomialtim function result z code comput sequenc resultz content last congur z shall consist con ate state etc correspond code consid follow class function paper fp class total singlevalu function comput determinist rm time polynomi length input npmv class pmf comput nondeterminist rm polynomi time pr primit recurs function rec partial recurs function note leivant ture machin regist machin polynomialtim reduc other denit fp npmv correspond usual one make use follow oper pmf composit dene composit bound recurs notat dene bound recurs notat brn bound weak minim dene bound weak minim bwm written bound wit dene bound wit written definit class c smallest class pmf contain project zero binari successor smash function x y jxjjyj close composit brn bwm class smallest class pmf contain project zero binari successor smash function x y jxjjyj close composit brn bound wit proposit fp c fp d proof without bwm bound wit class dene cobham character fp freeli make use polynomialtim comput predic denit func tion case understand formal refer characterist function specic minim form z xp x z mean z definit pmf polynomiallybound polybound polynomi p y jyj pjxj proposit everi pmf c polybound proof straightforward proof induct denit c proposit may assum bound function use bound recurs notat bound pseudominim fact polynomi machin character theorem let pmf follow equival npmv proof prove induct denit c initi function c ptime comput henc npmv given induct assum comput nondeterminist rm time p similarli pmf suppos comput machin follow input x run x reject also reject otherwis accept output z run input x z reject reject otherwis accept output clearli comput run time p n suppos x z dene bound recurs notat qjjjj q polynomi increas argument z x z sequenc y zi th bit z furthermor sequenc i thu comput x z guess sequenc qjxjjzj verifi condit hold element sequenc run compar output previou element sequenc none veric fail y accept output y guess sequenc take time veric take jzjpjxj qjxj jzj time final suppos comput x follow run input x reject reject otherwis guess smaller output next verifi reject not veric success run input x everi jyj comput accept output reject otherwis accept output y assumpt code rm given section polynomi q let x z modi kleen predic assert follow e descript nondeterminist rm n z sequenc c c the code of congur n c initi congur n input x i c i congur n reachabl c one step transit relat n accept state n note c k may repeat number time suppos nondeterminist rm code e comput pmf x comput path length pjxj dene claim y denit z code comput sequenc input x length pjxj content enter state acc henc x y convers suppos x y denit accept comput path code w input x length pjxj and henc w seqbnd pjxj end sinc allow accept state repeat number time may assum j seqbnd pjxjj w j seqbnd pjxjj w reason might x could much shorter accept comput path output dierent y weak minim oper would reject w pick up shorter path instead w jwj w situat aris henc z seqbnd pjxjj seqbnd pjxjj z therefor x y proof equival essenti preced without compens short comput sequenc revers direct corollari normal form theorem everi pmf x c written form z applic equival consid follow intersect union oper pmf see npmv close oper follow comput rm respect x comput nondeterminist choos run one x x comput run accept exactli accept output theorem c must also close oper note latter fact obviou composit simpl oper appli partial function particular consid composit evalu x intuit must nd z z involv evalu if exampl x unden entir composit unden hand intersect union oper wellden even x x dene resourcefre character recal bellantoni cook denit safe recurs context pmf argument separ two type normal for use x y z safe a b c one view distinct normal argument use clock iter wherea safe argument use simpli bit store polynomi number bit examin comput anoth view safe posit safe larg input valu ie one increas size argument without signic increas comput time yet anoth philosoph justi view given leivant view safe argument in terminolog tier argument abl take data somehow impred dene say denit data somehow assum total domain function dene impred use tier posit particular function dene recurr denit make sens g dene matter third argument isin word denit assum total f henc domain denit argument must tier use semicolon delimit normal safe argument x a take singl normal argument x singl safe argument a consid follow oper pmf x mod valu loword bit x safe composit dene safe composit z y safe recurs notat dene safe recurs notat srn a ux z a safe weak minim dene safe weak minim swm written d mod we write x a c mod z x a c z z mod usual notion pmf composit zz mod would natur say dene safe wit x a c x a c mod minim bound requir would lead pmf innit number output xed input eg constantli consid scheme mention introduct bellantoni dene minim scheme bfx least b fx a b mod b exist otherwis note f total bfx a b mod bellantoni add scheme character fp base function plu safe composit safe recurs notat dene new class total function prove natur denit i applic actual b bellantoni minim output sb minim function denabl i applic minim exactli comput polynomi time p oracl also show character hold bound version total minim scheme no notion safeti furthermor note add unbound total minim oper primit recurs easi show function denabl applic exactli recurs for proof one simpli remov bound bellantoni proof bound version thu total minim oper bound safe behav manner exactli analog correspond oper recurs function howev exactli reason captur appropri minim analog gener partial recurs function aim paper show safe weak minim appropri oper goal follow set function constant nullari function project nm binari successor predecessor pred condit cond a b c mod definit class c safe smallest class pmf contain b close safe composit srn swm class c nml safe consist function c safe normal argument follow denit lemma proposit taken essenti proof taken almost verbatim there taken togeth formal intuit pmf polynomi q jwj bit output x a depend bit safe argument a first dene jxj rightmost bit a bellantoni give denit mod x x safe normal definit let x a pmf note separ argument normal safe here let q polynomi polycheck x threshold q w v satisfi jvj qx jwj x mod v mod w x a mod w pmf x a polymax bound x q x a x a dene maxfjajg lemma let x a b pmf polycheck x threshold q x a x a b mod jb proposit x a c safe polycheck polymax bound x proof induct denit c safe theorem let pmf safe proof proof npmv impli c nml safe follow line proof thm npmv c must dene version kleen predic use safe recurs notat allow us extract accept comput sequenc nondeterminist rm main idea use srn dene function fx a examin bit return valu word normal argument use clock examin safe valu use bit store mind dene characterist function of follow predic machm e jmj loword bit e code descript nondeterminist rm given code machm e actual examin pjmj bit e xed polynomi p detail specifi point onward cfgn e c machjej e jnj loword bit c code congur rm describ e transit c c accord descript e csn t e z machjej e jtj loword bit z code sequenc congur c rm transn rst congur z initi congur rm describ e input x last congur accept state suppos c thm comput nondeterminist rm code e time bound polynomi pn sinc pn tape cell access comput input length n everi congur code string whose length also polynomi n say qn furthermor code comput sequenc length n seqbnd e n take seqbnd e argu thm dene safe revers direct one prove induct x a c safe c use polymax bound given prop case real interest dene safe recurs notat safe weak minim dene srn recurs notat dene c furthermor polymax bound q x x x a dene x a qjxj sinc bound polynomialtim comput recurs notat bound function denabl c suppos x a b x polymax bound q x induct hypothesi denabl c x a denit valid suce note function zz mod polynomialtim therefor denabl c nondeterminist recurs x leivant discuss notion nondeterminist recurs safe rami variant say fx z a dene nite set multifunct nondeterminist safe recurs a g gx a a g ufx z a word step comput fx z a allow choos dierent recurs function note consist total multifunct f also total multifunct let e smallest class total multifunct contain b close safe composit nondeterminist safe recurs e nml consist function e normal argument section prove e nml consist exactli total multifunct npmv lemma fx a e f polymax bound x technic subtleti leivant proof sketch result carri through proof prove induct denit f essenti proof function dene safe recurs no minim polymax bound theorem let f total multifunct f proof forward direct prove induct fx a e fx a c therefor f npmv thm essenti proof forward direct thm cours case need consider f dene nondeterminist safe recurs say multifunct use comput fx a multifunct use comput fx z a dene f c union oper dene cor recal dene nondeterminist safe recurs nite set nite polymax bound f given lemma give ptime comput bound recurs recurs dene c revers direct suppos f comput nondeterminist rm run time qn use state regist simplic assum f unari assum nondeterminist state exactli two correspond instruct dene new regist machin n behav similarli dierenc n rst guess nondeterminist choic behav determinist refer origin guess whenev encount nondeterminist state formal dene n follow n use regist new state everi nondeterminist state initi state n nondeterminist construct m length qj use state t otherwis n exactli except everi nondeterminist state instruct replac instruct follow tm pmm thu n enter state transit state ai correspond loword bit content m delet bit execut either rst second instruct would execut state note nondeterminist instruct start one state t n also comput fx execut exactli qjx step chang content m act determinist simul n use nondeterminist safe recurs dene transit function j s dene state more accur denit state irrelev give content j th regist transit state with code for one possibl give next state j dene use condit successor predecessor henc take safe argument dene function j simultan safe recurs j y content execut jy j jy step start state regist see detail leivant also show simultan safe recurs reduc safe recurs without loss gener assum use latter dene function guessz use nondeterminist safe recurs word guess dene set function contain constant function qn n k where qn run time f repres e nml examin proof thm actual prove f e nml f dene c use scheme composit bound recurs notat along oper let c smallest class total multifunct contain base function c close composit brn prove theorem f total multifunct f c analog npmv partial recurs function close return theme introduct proper analog partial recurs function class npmv recal pr rec primit recurs partial recurs function respect made argument fp proper analog pr given two dene term essenti function scheme one bound safe not previou section seen npmv aris straightforward bound safe minim oper ad scheme partial recurs function aris unbound minim oper ad pr section consid properti rec analog npmv specic consid relationship rec recurs enumer set show mostli relationship hold npmv np set conclud introduc new hierarchi obtain appli analog view level arithmet hierarchi rang partial function also discuss gener npmv higher type comput pmf dene yg graph say polybound polynomi q hx yi lemma let partial function npmv np polybound particular characterist function set npmv np proof npmv comput regist machin verifi y run x accept accept output y sinc run polynomi time must polybound revers direct suppos x polybound q comput x follow first guess qjxj guess accept output y otherwis reject lemma set characterist function np np conp proof suppos np say suppos np conp r ptime predic proposit set npmv np conp compar rec proof rst equival follow thm second follow lemma proposit set np npmv compar re rec dom proof suppos x pjxj rx y dene npmv follow input x guess pjxj rx y hold accept output reject clearli dom a suppos npmv sinc polybound x dom y x np predic lemma interestingli seem abl identifi np rang honest pmf npmv follow balcazar iaz gabarro def pmf honest polynomi q whenev x y z jz j qjyj z y proposit set np honest npmv ran proof forward direct use pmf prop revers direct suppos npmv honest y matrix predic np lemma howev honesti condit appli express np rang fp function rosser show analog result hold primit recurs function albeit without honesti condit proposit set exercis np honest f fp ran f re primit recurs f ran f final close two suggest studi first one view arithmet hierarchi follow way refer syntax formal languag recurs g npmv right analog partial recurs follow ought interest hierarchi studi second notion oracl comput total singlevalu oracl g straightforward one correspond ad g base function class c one consid oracl comput focus function natur oracl pmf lead notion highertyp comput two dierent denit comput rel pmf oracl neither obvious compar ad oracl base pmf c denit total oracl order alway return valu obvious make dierenc oracl characterist function wherea would unnatur approach ad base pmf c properli develop notion highertyp comput along line may help clarifi dicult issu highertyp feasibl provid appropri univers consid highertyp complex r predic recurs polytim hierarchi new recursiontheoret character polytim function intrins comput di oracl comput valu extens theorem g taxonomi complex class function much ado function tr power singlevalu nondeterminist polynomi time comput new recursiontheoret character polytim function function comput nondeterminist polynomi time much ado function