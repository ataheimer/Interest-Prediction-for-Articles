t product system negat failur a studi action rulebas system two form negat name classic negat negat failur find cours action show sever exampl ad negat failur system increas express sens real life problem repres natur simpl way then address problem provid formal declar semant extend system adopt argumentationbas approach shown simpl unifi framework understand declar semant variou nonmonoton formal way natur defin ground wellfound stabl prefer semant product system negat failur next character class stratifi product system enjoy properti mention semant coincid negat failur find cours action comput simpl bottomup oper stratifi product system implement top convent product system two way first way correspond understand stratif form prioriti assign rule show implement though sound complet gener case henc propos second implement mean algorithm transform finit stratifi product system classic one sound complet implement though comput hard shown paper b sound complet implement though comput hard shown paper keyword rulebas system knowledgebas system rulebas process ing expert system knowledg represent note paper revis extend version introduct motiv section rst give exampl motiv extens product system paradigm introduct negat failur to nd cours action discuss role specic mechan reactiv system need negat failur product system exampl imagin situat person household work cloth wash person two option either hand wash machin wash machin powder hous machin wash take place repres product rule machin powder hous acquir either buy shop provid shop open borrow neighbor if in rule acquir powder repres follow two classic product rule neighborin borrow cours hand wash undesir taken way acquir machin powder naiv represent rule use classic negat clearli correct sinc mean rule machin powder hous current state cloth hand wash intuit mean there way acquir machin pow der cours action start current state lead acquir machin powder henc state machin powder hous neighbor in naiv represent would allow hand wash though way acquir machin powder borrow neighbor henc fail captur intuit understand problem need use dierent kind negat call negat failur to nd cours action denot oper previou naiv represent replac powder handwash clearli way repres situat use negat failur all see next section argu howev represent use negat failur provid better specic problem hand dicult nd real life situat govern rule negat failur exampl consid rule review work faculti end academ year univers rst rule speci condit oer tenur assist professor state assist professor good public work experi least year oer tenur rule could formal by assistantprofx goodpubx workatleastx oertenurex second rule state assist professor prospect get tenur him though intuit mean rule clear possibl repres classic product rule sinc premis classic product rule repres condit must satis current state world premis second rule repres project futur say possibl assist professor get tenur futur sack now word rule say assist fail possibl cours action futur get tenur him repres rule use negat failur nd cours action second rule repres follow assistantprofx gettingtenurex rex real life often nd situat deal riski undesir action exampl doctor may take decis cut foot patient due sever frostbit riski undesir decis commonsens rule specifi condit take action doctor allow cut way save foot patient repres use negat failur follow save cut final expect real life intellig system could employ satisfi multipl goal goal dierent prioriti negat failur to nd cours action use repres prioriti follow exampl exampl consid robot ghter sent save live properti prioriti certainli save live rst imagin robot stand valuabl artifact take get re answer ye robot certain noth save life rule repres follow artifactx indangerx humanfound savex note humanfound mean human could found current possibl state world reachabl ring sequenc action robot enabl perform negat failur specic mechan reactiv system let us consid exampl check whether condit rule powder handwash satis current state involv check whether way acquir machin powder current state process could time consum expens concret applic exampl two way get powder buy shop borrow neighbor negat failur compil classic negat produc ecient rule neighborin handwash howev environ product system rule appli chang exampl may get new neighbor may interest good relat peopl abl borrow anyth him henc rule borrow must drop consequ product rule must revis clear rule r negat failur still correct serv specic check correct new rule point want make mani case though negat failur employ directli could use specic mechan classic product system situat encount quit often mani real life situat imagin work physician emerg case deal patient sever injur road accid case time crucial doctor would follow certain treatment taught appli situat less simpli react depend physic condit patient treatment may even suggest fate decis oper patient cut organ clear treatment chang accord progress medic scienc one treatment correct yesterday may wrong today decid correct treatment think treatment simpli way set product rule tell doctor concret state patient correct rule determin commonsens principl like oper cut organ way save patient principl express use negat failur alreadi point out negat failur seen mechan specifi prioriti dierent goal exampl robot reghter exampl negat failur use give goal save human higher prioriti goal save artifact explicit prioriti rule often use product system activ databas system uenc way rule execut system whenev dierent rule trigger state rule higher prioriti trigger rst clearli notion prioriti negat failur induc dierent one use classic product activ databas system former goal whether latter rule employ implement goal moreov often dicult understand declar rule higher prioriti anoth rule believ mani case negat failur use highlevel tool specifi implicit prioriti goal could implement dene explicit prioriti rule aim work seen exampl use negat failur product system allow one natur correctli repres mani real life problem main aim paper extend revis version provid declar semant product system two kind negat use classic negat negat failur to nd cours action respect show argument base approach success adopt understand logic program negat failur well mani nonmonoton formal also adopt provid natur simpl declar semant product system two kind negat basic idea negat failur liter not powder exampl repres assumpt underli potenti comput product system intuit mean assumpt comput goe assum cours action ie comput current state world lead state defeat assumpt itself refer back exampl assum powder correspond assum current state cours action lead state machin powder hous comput support sequenc assumpt plausibl accept underli assumpt cannot defeat actual nd cours action defeat them inform intuit notion formal view product system argument system along line provid us mani natur semant ground wellfound prefer stabl semant semant arguabl popular wide accept semant nonmonoton commonsens reason literatur moreov address problem actual comput negat failur respect introduc class strati product system negat failur comput use simpl bottomup oper case gener strati argument system strati product system enjoy properti previous mention semant ground prefer stabl coincid show classic product system explicit prioriti rule use obtain straightforward sound implement strati product system negat failur also show complet implement requir sophist method compil away negat failur even class strati product system method yield classic product system complex worst case polynomi number atom occur product system rest paper structur follow section introduc basic notat terminolog use classic product rule system section extend product system gener product system negat failur use condit part rule provid argument base semant argument system brie review section section address problem comput negat failur introduc class strati product system semant character simpl bottomup oper section discuss two way implement strati product system along line mention abov final section address open issu futur work preliminari classic product rule system introduc notat basic terminolog go use follow product system languag use similar classic one see eg assum rst order languag l repres ontolog use describ domain interest state world interpret snapshot world henc repres herbrand interpret l ie set ground atom l set state denot stat assum set primit action given semant eect action describ function eect product rule rule form ground liter l action a condit resp action rule r refer cond r resp actionr product system p set product rule product rule l said applic state condit l true s ie denit comput comput c product system p sequenc s state r s product rule p applic refer initialc n nal c note that comput empti comput denit complet comput comput c call complet comput product rule p applic n behavior product system p dene set pair state initi resp nal state complet comput p formal next denit denit inputoutput semant product system p inputoutput semant p dene nal c j c complet comput pg even though consid ground product rule approach easili adopt product system rule may contain variabl given collect rule consid possibl ground instanc obtain replac variabl occur ground term approach usual adopt studi semant logic program worth note semant ect inher nondeterminist natur product system inde natur expect initi state may exist mani dierent comput lead possibl dierent nal state mean that given s might mani differ pair io semant nondetermin aris natur represent real life problem product rule refer back exampl shop open neighbor two possibl way acquir machin powder plausibl ie buy shop borrow neighbor clearli correspond comput product system plausibl intuit reason prefer one other need nondeterminist rule base languag point mani author see eg inde nondeterminist rule base languag mainli studi respect express power comput complex oppos pure determinist languag paper argu nondetermin need natur repres real life problem work literatur see eg also devot dene oper semant classic product system way nondetermin avoid adopt ad hoc comput mechan either implicitli explicitli assign sort prioriti product rule red state lack intuit motiv make full understand technic result dicult product rule naf introduc new form negat languag l denot not gener liter either classic liter l nafliter l l classic liter classic liter l intuit l possibl nd cours action achiev l denit gener product rule gener product rule form l ground gener liter given gener product rule set classic liter r refer clcond r set nafliter refer hypr gener product system gp p set gener product rule gener product rule possibl applic state denit possibl comput given gp p possibl comput p sequenc state r s gener product rule p r possibl applic denot cp set possibl comput gp p given possibl comput abov sequenc hhypr refer sequenc hypothes underli comput basic idea understand mean nafcondit ls gener product rule view hypothes assum possibl cours action achiev l so intuit say rule applic state possibl applic hypothes could assum comput accept comput rule applic whole problem understand formal mean possibl cours action start state achiev result l let us consid exampl notic rule satisfi condit j clcondr state necessarili applic sinc clear whether nafcondit satis s exampl let us rst recal product rule machinepowd handwash neighborin borrowpowd eect action speci below eecthandwash eectbuypowd eectborrowpowd assum initi state powder shop close neighbor in state repres interpret state three possibl nonempti comput start name r fneighborin machinepowd clothescleang r first notic c c base assumpt commonsens dictat c c repres accept cours action initi state lead commonsens result cloth machin wash henc must accept possibl cours ac tion hand c base assumpt not machinepowd mean c assum possibl way acquir machin powder howev c repres one possibl way henc c repres attack assumpt not machinepowd c also view attack accept c legitim compu tation hand c c base assumpt henc way attack exampl point semant gpss form argument reason argument repres possibl comput follow rst recal gener notion argument system show natur semant gp dene use theori argument argument system argument recogn late import natur approach nonmonoton reason shown mani major nonmonoton logic repres fact dierent form simpl system argument reason base result simpl logicbas argument system develop captur well known nonmonoton logic like autoepistem logic reiter default logic logic program special case argument employ give proof procedur condit logic argument also appli give eleg semant reason specic review basic notion denit argument system the reader refer detail discuss role argument system mani eld artici intellig argument system pair har attacksi ar set possibl argument attack arar repres attack relationship argument pair a b attack say attack b b attack a moreov attack set argument h attack argument b h set h argument con ictfre argument h attack h argument defend set argument h h attack attack a also say h defend defend h basic notion underli semant argument system go review rest section follow intuit notion accept set argument set h argument accept con ictfre defend argument it let h set argument let def h set argument defend h dicult see h accept h h con ictfre easi see monoton henc equat least solut also accept follow fact def accept h accept also h variou semant argument system basic solut equat particular ground wellfound semant argument system least solut equat anoth semant argument system call prefer semant dene maxim accept set argument dicult see set maxim con ictfre solut equat gener prefer set contain ground semant coincid it next section give exampl thi final popular semant nonmonoton reason argument system stabl semant dene follow con ictfre set argument h said stabl attack argument belong it dicult see stabl set argument accept furthermor also easi see stabl set prefer henc maxim con ictfre solut equat vice versa shown logic program negat failur seen form argument system view variou semant argument system present captur unifi framework variou wellknown semant logic program negat failur instanc ground semant correspond wellfound semant logic program stabl semant correspond stabl semant logic program follow show gener product system two kind negat also form argument system philosoph explan result seen fact comput product system repres also form commonsens reason comput argument semant gp p dene view argument framework set possibl comput p relat attack dene follow denit attack let c possibl comput attack c possibl comput c initialc i exist underli assumpt l hypr i l hold nalc remark empti comput cannot attack henc empti comput contain semant notic that denit initi state attack c defeat assumpt l underli c actual state assumpt made word whether assumpt l defeat not depend state assumpt made whether state lead comput state l hold refer back exampl easi see c attack c defeat assumpt not machinepowd c base assumpt made state c show altern cours action lead state machinepowd actual hold consid initi state among other fact machin powder hous shop close neighbor in clear one possibl comput apart empti one lead nal state fclothescleang state repres fact cloth hand wash comput also base assumpt not machinepowd made state henc cannot defeat the powder cannot bought sinc shop close neither borrow sinc neighbor in view gp argument system allow us provid three dierent semant ground wellfound prefer stabl se mantic recal that given set h argument ie possibl comput h set argument defend h see section denit let p gp k set possibl comput then k ground k least solut equat k prefer k maxim con ictfre solut equat k stabl k con ictfre attack everi possibl comput klet us elabor detail exampl comput ground semant exampl comput ground semant use use follow abbrevi mp machinepowd ni neighborin cc clothesclean shopopen hw action handwash mw action machinewash bp action buypowd bop action borrowpowd henc rule exampl becom mp hw mention previou section ground semant least solut equat empti set argument comput contain comput never attack h cannot defend comput clearli empti comput nonempti comput base assumpt let state follow comput belong h sinc hypr hypr empti similarli let ni state ni follow comput r belong h let us move h us consid possibl comput underli assumpt comput must use rule r rule contain nafliter premis let state consid comput c form base assumpt mp now comput form a abov attack comput sinc lead nal state mp hold belong h sinc h con ict defend comput c similarli cannot defend c so conclud comput h n h comput form e easi see h inde solut henc least solut equat case moreov dicult see that exampl ground prefer stabl semant coincid henc h also stabl prefer also consequ fact product system strati sens section show strati product system dierent semant coincid easi see follow proposit hold proposit comput c attack comput c c prex c c also attack c proposit let h set comput either ground prefer stabl set c h prex c also belong h give exampl gener product system ground prefer stabl semant coincid exampl let p follow gp eect assertp state ad p s let easi see nonempti possibl comput start are fbg underli assumpt hfnot agi underli assumpt hfnot ag fnot bgi fag underli assumpt hfnot bgi underli assumpt hfnot bg fnot agi empti comput start fbg attack c empti comput start fag attack c hand empti comput cannot attack henc c contain accept set comput furthermor also clear c attack c sinc c base assumpt a mean way achiev start similar reason c also attack c henc comput start contain ground semant empti comput two stabl set comput one contain c contain c c resp c defend attack exampl prefer stabl semant coincid notic rule similar r r may need repres real world situat imagin situat team leader need hire person import posit two applic it say mari ann leader ask advisor express opinion rst advisor like ann henc say if way hire ann hire mari express rule mari hire ann hire hiremari notic use negat failur captur intuit possibl cours action hire ann imagin second advisor exactli opposit view ie opinion express as mari hire hireann team leader reason repres two comput correspond comput c c abov next exampl show prefer set may stabl exampl let p follow gener product system intuit rule true current state way achiev a add state clearli paradox sinc way achiev rule allow achiev it nonempti possibl comput start fag clear c attack itself henc exampl ground prefer semant coincid contain empti comput clearli stabl set comput dene set complet accept comput respect select semant denit complet comput let p gp sem select semant p ie sem either ground prefer stabl set possibl comput comput c sem call semcomplet comput exist comput c sem c prex c semant gp coincid simpli talk complet comput instead semcomplet comput refer back exampl complet comput start c inputoutput semant classic product system extend gener product system respect select ground prefer stabl semant denit inputoutput semant gp let p gp ground inputoutput semant p dene nal c j c ground complet computationg let sem set argument prefer stabl io sem p nal c j c semcomplet comput p g strati product system section consid special kind gp action two type assertp retractp p atom eect assertp resp retractp state ad resp remov p resp s moreov rule follow structur l s classic liter rule rst kind call assert rule rule second kind call retract rule import distinguish assert retract rule simpli write rule further dene strati gpss way negat failur comput bottomup follow given classic liter l refer atom l l posit atom p l p denit strati product system gp p strati exist partit rule follow condit satis let rule p j i l rule contain atom l head must belong pm ii l h rule contain atom l head must belong pm it worth note intuit underli denit strati gpss similar one underli denit stratic logic program strati gpss ground prefer stabl semant coincid see theorem moreov semant comput bottomup way simpl oper s go dene next let c possibl comput h k h k n sequenc call subcomput c further denot rulesc sequenc denit let strati gp let oper dene follow subcomput c c c subcomput c form l hypr j comput lgroughli speak oper formal intuit accept possibl comput use rule p depend comput p thu semant strati gp p comput bottomup iter oper strata p theorem let p strati gp then uniqu prefer set comput uniqu stabl set computationsproof see appendix implement strati ps section address issu implement strati ps translat strati ps classic ps on restrict product system collect the ground instanc rule nite let us rst introduc notion implement product system let two product system say p sound implement p follow two condit hold i comput c p exist comput c p nal c ii complet comput c p exist complet comput c p initialc p sound implement p say also complet revers condit i ii hold name comput c p exist comput c p complet comput c p exist complet comput c p next section introduc class priorit product system pp rule dierent prioriti dene accordingli suitabl notion comput show view stratic prioriti assign rule the lower stratum higher prioriti yield sound implement strati gp pp howev see mean simpl exampl implement complet gener case mean prioriti induc stratic power enough complet captur implicit prioriti induc negat failur mechan order obtain sound complet implement need sophist method compil away negat failur strati gp yield classic product system prioriti all show classic ps obtain transform inde sound complet implement origin strati ps howev transform worst case polynomi number atom product system implement negat failur prioriti let us introduc class pp name classic product system rule assign dierent prioriti type system extens studi literatur denit priorit product system pp pair hp p classic ps partial order relat rule partial order irr exiv transit asymmetr relat sequel r r say r higher prioriti r notic classic ps pp empti relat prioriti relat rule aect applic rule denit let hp pp product rule l applic state rule r r r applic s notion comput pp one given denit provid applic rule understood previou denit exampl let us formul wash machin exampl pp let us rst recal product rule neighborin borrowpowd notic negat failur rst rule replac classic negat correctli repres fact hand wash lower prioriti machin wash add follow prioriti relat rule way rule r cannot appli state machin powder either shop open neighbor in thu achiev desir behavior p strati gp idea view stratic implicit assign prioriti rule make assign explicit allow us get rid negat failur translat directli classic negat need rst introduc use notat let l naf liter denot l classic liter a l a l a moreov given gener product rule r denot r rule obtain replac nafliter l l denit let strati gp priorit pp obtain replac rule r p r dene follow follow theorem show that given strati gp p hp sound implement it theorem let p strati gp hp priorit form sound implement p ie i comput c hp exist comput c p ii complet comput c hp exist complet comput p nal c follow exampl show implement given complet gener case exampl consid follow stratic g consid follow complet comput priorit form p given follow pp hp i r r r r dene r dicult see complet comput hp start empti state end state fa c dg due fact r r rule highest prioriti red r sinc eect r ad fdg state prevent r applic point naf liter b r induc prioriti rule dierent naiv one obtain given stratic inde b intuit mean way achiev b and given state classic condit r satis ensur enforc c true ie make r rule assert b applic obtain two way either enforc prioriti r transform r follow classic rule thu need deeper understand stratic gener intuit sketch exampl allow us compil away negat failur rule r next section propos transform which given strati gp p yield classic ps p sound complet implement p howev order get complet implement pay high price term complex transform shown section compil away negat failur let us rst introduc notion incomplet state comput respect incomplet state denit incomplet state consist set ground liter l product rule l said applic incomplet state condit l true i ie often necessari complet inform state world carri comput inde comput reli classic product rule follow notion comput refer partial comput sucient denit partial comput let incomplet state r s product rule classic product system p sequenc partial comput c p r applic retractpnotic comput also partial comput moreov partial comput c start incomplet state view collect comput c start state j denit let p classic ps incomplet state l ground liter say l achiev p partial comput c start l finalc let us rst consid problem compil away negat failur strati ps two strata let r rule p follow form l n collect incomplet state that satis clcond r consist l achiev p clcond r two case here j empti mean exist classic comput p start clcond r lead state l hold henc rule r never appli comput sp simpli drop j empti let r l r empti set one j empti otherwis r l r follow r minimalg notic nonempti j view conjunct liter also minim mean exist proper subset r impli j set r r l r set condit that satis state make l achiev state set r l r cover condit formal follow lemma lemma let state clcond r then exist comput c cp finalc proof denit r l r clear that l achiev consist clcondr clcond r clear condit satis comput c cp suppos comput c cp finalc assum exist incomplet state l achiev i consist clcond r j i n clcond r assumpt j clcondr follow henc exist comput c cp r r l r dene new product rule r r follow clcond r r hypr r actionr r dene exampl machin wash exampl translat follow strati ps g then set incomplet state mp achiev is henc henc pmp r consist follow rule product system clearli still strati equival shown follow result lemma exist r r proof let us consid follow assert comput c sp hold consist set liter l achiev p from lemma exist r r l r denit oper s comput c sp l comput c sp exist r r l r comput r r theorem r h r proof obviou take r procedur compil away negat failur two strata product system follow step select r p l hypr r exist stop step els step goto step gener procedur gener case strati product system two strata obviou rst compil away naf p obtain strati product system continu process eventu obtain classic product system come back exampl result appli transform classic ps consist rule origin p togeth new rule obviou new product system equival origin one procedur assum p lr given dene method comput it denit set fi incomplet state call base l respect p follow condit hold l achiev p incomplet state l achiev p r p l hypr easi see follow lemma hold lemma n base l respect p j suppos j empti r construct p lr consist comput base l respect p comput r lr set r lr comput base appli standard method proposit logic comput disjunct normal form follow give algorithm comput base l construct tree satisfi follow properti node n tree label incomplet state labeln root tree label set flg link label rule r node node n child link label rule ancestor label labeln consist actionr labelm fpg clear construct node n ancestor label n leaf node henc sinc p nite tree also nite further clear construct tree exactli one tree satisfi condit let us refer tree p l exampl consid product system exampl follow tree fmpg f mp sog f mp nig theorem node p l g base l respect p proof see appendix complex transform section show compil away naf is gener polynomi number atom product system method given compil away naf liter l occur rule r basic consist comput base l comput set r lr set r lr comput base appli standard method proposit logic comput disjunct normal form show next comput set r lr polynomi take account restrict class strati product system first consid sequel classic product system rule follow structur b posit atom sequel rule form refer rule b given two atom a b say successor b denot b occur bodi rule b product system acycl relat well found ie decreas sequenc nite give acycl product system dene rank atom a denot kak follow ag let strati product system where contain exactli one rule r p l assertp p classic product system satisfi follow condit c rule p follow structur c atom either appear head exactli two rule appear head rule posit atom either occur bodi exactli one rule occur bodi rule atom a either atom exist decreas sequenc l atom occur naf liter rule r notic condit c impli atom a b c b c also atom either successor exactli four successor due condit c c abov want show number rule obtain compil away naf liter rule r polynomi number atom p amount prove cardin set r lr polynomi number atom p recal set r lr comput base l appli standard method proposit logic comput disjunct normal form let atom partial state satisfi follow condit i achiev state satisfi ii minim ie proper subset satis i let also r set partial state satisfi condit i ii abov obvious r lr l sequel show cardin r l polynomi number atom p first all let us gener denit r l conjunct atom given conjunct set partial state satisfi follow condit achiev state satisfi iv minim ie proper subset satis iii consid conjunct distinct atom ka let partial state r a n syntact restrict clear r moreov clear r r j j disjoint set cardin r previou observ clear cardin r consid atom b kbk p contain exactli two rule b consid partial state r b syntact restrict p minim clear split two disjoint set r a r a recal that b c b p set rule p rule rule atom c c structur p fact clear p p j j equal renam atom henc also clear set r r j equal renam atom let cardin r previou argument obviou cardin r a r a m henc cardin r let seen cardin r b given induct furthermor obviou sinc atom occur head rule henc fag set r easi show induct relat fk dene uniqu solut let us go back rule p r p l assertp k dicult see that due syntact restrict number n atom occur p exactli easili calcul ie ie henc dene cardin r l function gn follow let easi see that constant c sucient big x x x c henc constant c sucient conclud gn polynomi n number atom p henc worst case complex translat away naf polynomi number atom discuss conclus product system negat failur nd cours action natur extens classic product system increas express sens allow natur simpl represent specic mani real life problem extens given simpl semant base argument theoret framework negat failur nd cours action tightli relat negat failur prove logic program inde normal logic program p view gp g p transform rule product rule a k asserta dicult show semant p g p coincid sens ground prefer stabl set comput g p correspond ground prefer stabl model p side shown argument repres logic program negat failur therefor say mechan negat failur nd cours action product system negat failur prove logic program dierent side coin still sever issu deserv deeper studi understand first seen semant ect inher nondetermin product system fact semant dierent complet comput start initi state yield dierent nal state even strati gpss contrast mani eort literatur aim nding method select one complet comput expect semant even though believ mani case eort contrast inher nondeterminist natur problem repres product rule situat select one possibl mani complet comput may harm all case worth studi comput strategi basic provid us determinist oper semant product system still declar semant serv basi reason correct method secondli intend studi comput mechan proof procedur gener product system negat failur seen strati product system way comput negat failur bottomup fashion seen dynam runtim method comput negat failur worth address point whether class strati ps extend gener class similar bottomup method exist hand case negat failur compil classic negat seen section seen compiletim static method comput negat failur find gener techniqu achiev anoth interest issu alreadi mention case negat failur still serv specic classic ie without naf product system final investig applic approach activ databas area activ databas import research topic databas commun due fact nd mani applic real world problem mani commerci databas system extend allow user express activ rule still activ databas face mani open issu lack well understood declar semant see eg semant would provid common basi understand oper semant dene implement activ rule databas system well compar dierent implement typic activ rule activ databas eventconditionact rule form event condit action current extend argument base approach activ rule address also case use negat failur condit part rule r static analysi techniqu predict behavior activ databas rule toward theori declar knowledg abstract prefer answer set extend logic program activ databas system trigger rule advanc databas process negat hypothes abduct foundat logic program accept argument fundament role logic program product system need negat failur reason speci activ databas system op user manual logic action rulebas system stabl model semant logic pro gram overview product rule databas system rule base system comput argument logic program semant consider nonmonoton logic defeas reason system defeas argument logic system defeas argumen tation semant class strati logic default reason mathemat treatment defeas reason implement unfound set wellfound semant gener logic program feasibl defeat defeas reason activ databas rule transactionconsci stablemodel semant tr