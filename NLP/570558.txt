t compact recogn episod sequenc a given two string xaan pbbm alphabet problem test whether p occur subsequ x trivial solv linear time also known simpl n log time preprocess x make easi decid subsequ p p log charact comparison whether p subsequ x problem becom complic one ask instead whether p occur subsequ substr x bound length paper present automaton built textstr x capabl identifi distinct minim substr x p subsequ substr minim respect p meant p subsequ proper substr y everi minim substr y automaton recogn occurr p lexicograph smallest sequenc symbol posit y difficult realiz automaton time space n text n charact one result paper consist bring bound linear n log n respect depend whether alphabet bound arbitrari size therebi match correspond complex automata construct offlin exact string search built automaton search lexicograph earliest occurr p x carri time imroccii nimroccii log n depend whether alphabet fix arbitrari rocci number distinct minim substr x bbi subsequ note substr may occur mani time x count bound log factor appear bound reduc log log resort known integerhandl data structur b introduct consid problem detect occurr pattern string subsequ substr bound length larger text string variant problem aris numer applic rang inform retriev data mine see eg molecular sequenc analysi see eg intrus misus detect comput system see eg recal given pattern say p occur subsequ x iff exist indic case also say substr x realiz p begin posit end posit x reserv term occurr sequenc trivial comput time linear jxj whether occur subsequ x altern simpl onjsigmaj time preprocess x make easi decid subsequ p jp j charact comparison whether p subsequ x thi need pointer lead everi posit x everi alphabet symbol closest posit occupi symbol exemplifi fig slightli complic arrang develop accommod within preprocess time on log jsigmaj space linear x also case arbitrari alphabet size though introduc extra log jsigmaj cost factor search p refer also addit discuss subsequ search figur recogn subsequ abaababaabaababa shown without explicit label forward skip link problem becom complic one ask instead whether x contain realiz p bound length sinc earliest occurr p subsequ x guarante solut case one would need appli scheme suffix x find way detect minim realiz p x realiz minim substr realiz p algorithm socal episod match problem consist find earliest occurr p minim realiz p x given previous occurr p realiz earliest occurr string lexicograph smallest respect possibl occurr p algorithm perform within roughli onm time without resort auxiliari structur index base structur text applic exact string search text string preprocess way subsequ queri regard pattern occurr take time proport size pattern rather text notabl among construct result structur subword tree graph refer to eg notic answer typic queri whether pattern appear text one want locat occurr well time would becom ojwj denot total number occurr kind search may consid line respect pattern sens preprocess pattern allow offlin term abil preprocess text gener set effici structur kind non exact match seem quit hard sometim small select option face repres variou compromis among space time paramet idea limit search distinct substr text appli perform approxim string match suffix tree paper address construct automaton base textstr x suitabl identifi given p set distinct minim realiz p x specif automaton recogn realiz earliest occurr p preced discuss suggest difficult realiz automaton time space text n charact main result paper consist bring bound linear on log n depend assumpt alphabet size thu match cost preprocess offlin exact string search subword graph construct use particular case symbol p affect individu expir deadlin express eg term posit x might elaps next symbol or altern entir occurr pattern p must match paper organ follow next section review basic structur direct acycl word graph outlin extens constitut first quadrat space realiz automaton compact implement automaton address follow section implement requir linear space case finit alphabet case gener alphabet address last section result tradeoff seach time space dawg skipedg dawg main concern section show text x preprocess way subsequ search earliest occurr x prefix given p carri time bound size output rather input solut rest adapt partial minim automaton recogn subword word also known dawg direct acycl word graph associ word let w set subword text x p m ith prefix p modifi graph built time space quadrat linear length input depend whether size input alphabet arbitrari bound constant respect search earliest occurr rocc distinct realiz p m time o realiz p m minim substr x quenc note realiz p substr may occur mani time x count bound begin discuss recal structur dawg string first consid follow partial determinist finit automaton recogn subword x given two word x endset x set endpo x y two string w equival x endpo x w equival relat institut way denot jx partit set string sigma equival class conveni assum henceforth text string x fix equival class respect jx word w denot simpli set string occurr x termin set posit w correspondingli finit automaton recogn substr x one state equival class subword x jx specif start state ffl ffl empti word state w symbol sigma transit edg lead state wa state correspond string substr w nonaccept state state accept state delet nonaccept state incom arc yield dawg associ x exampl dawg abbbaabaa report figur aa figur exampl dawg refer to eg construct dawg recal basic properti structur clearli direct acycl graph one sink one sourc everi state lie path sourc sink moreov follow two properti hold properti word x sequenc label distinct path sourc sink dawg x repres one distinct suffix x properti word x dawg x number state q jxj number edg e jxj recal basic structur subsequ detector one fig immedi see dawg x may adapt recogn earliest occurr given pattern p subsequ x essenti need endow everi node ff number downward failur link skipedg link associ specif alphabet symbol role link leav ff label enabl transit descend ff nontrivi ie least two origin edg path label string symbol occur suffix formal skip link label set node ff associ equival class w node fi associ class wv a v ffl appear v thu skipedg label issu ff one closest descend children origin incom edg label alreadi exist exampl figur display partial augment version dawg figur skipedg ad sourc two adjac node use word full skipedg dawg refer structur would result ad skipedg node dawg clearli role skipedg serv shortcut search howev edg also introduc nondetermin automaton particular one path sourc may labeb prefix p follow theorem use summar discuss theorem string x n symbol full skipedg dawg x built on jsigmaj time space search rocc earliest realiz prefix pattern symbol time o proof built dawg time on log jsigmaj one exist method augment easili carri on jsigmaj time space eg adapt depthfirst visit dawg follow first sink first reach get assign nil skipedg alphabet symbol next everi time backtrack node ff node fi label arc ff fi skipedg defin fi use identifi issu addit skipedg ff bound follow fact everi node symbol skipedg might direct thetan node time bound search subtend immedi consequ properti name p occur subsequ x begin specif posit x follow two condit hold path label p sourc node ff full skipedg dawg x possibl replac skipedg chain origin edg way result path sourc ff label consecut symbol x begin posit i therefor search p trivial perform eg depthfirst visit longest path full skipedg dawg start sourc label prefix p incident depth search may suitabl bound take account length p length shunt path edg travers precis onc time backtrack node correspond prefix p cannot continu along path explor whenc claim time bound search searchtim bound theorem actual tight even tighter one repres total number distinct node travers practic may expect proport small power length p consider symbol durat may also ad construct phase therebi reduc number skipedg issu main problem howev store full skipedg dawg would take unrealist thetan worstcas space even alphabet size constant cf fig remaind discuss devot improv space requir figur ad skipedg sourc two adjac node compact skipedg dawg observ properti node dawg x map posit x way path say fix idea longest one node sink label precis suffix i a n x easi check map assign carri construct dawg extra cost observ also alway path label x dawg x path call backbon dawg let depth node dawg length longest word w path sourc that definit dawg everi path sourc label one consecut suffix w certain minimum length these word equival class w occur x suffix w also follow that consid set immedi predecessor path depth must mutual differ smaller jw j final depth backbon node must given consecut integ for sourc n for sink order describ skip link issu dawg resort slightli extend version span tree dawg see fig extens consist simpli replic node dawg adjac leav span tree bring final structur also edg connect node ani edg would classifi either cross edg descend edg depthfirst visit dawg result tree stipul duplic node creat way leav connect immedi predecessor properti depth dawg equal depth minu note node must exist except sourc note also span tree must contain direct path correspond precis backbon dawg let result structur clearli number edg dawg moreov node dawg repres everi incom edg therefor size linear jxj use conveni structur describ set skipedg auxiliari link actual edg set dawg sinc introduct skipedg everi node symbol would costli endow edg fraction node specif polici result linear number skipedg issu overal node endow skipedg desir symbol correspond transit perform first gain access suitabl node skipedg avail follow edg order gain access node appropri surrog skipedg need resort two addit famili auxiliari edg respect call defer edg back edg space overhead brought auxiliari edg on delta jsigmaj henc linear sigma finit new edg label like skipedg unlik skipedg travers given input symbol consum symbol full structur manag explain due cours describ augment dawg refer gener node fl distinguish follow case outdegre assum edg leav fl label a consid origin path fl branch node leaf whichev come first everi first occurr edg j fi label a direct skipedg label fl figur extend span tree sampl skipedg fi everi symbol alphabet encount set defer edg fl branch node leaf found end ffl case node fl branch node auxiliari edg possibl issu fl determin follow see also fig let j descend child fl incom edg label a let longest ascend origin path j edg label a fl highest ie closest root branch node perform follow two action first direct skipedg label fl j next consid subtre root fl path tree lead eventu arc label like arc lead node j must end leaf everi leaf direct fl defer edg label a second action alway perform special case fl root ffl case node fl leaf fl sink noth done otherwis let origin dawg node fl replica back symbol alphabet follow everi distinct path encount first occurr sink everi path interven branch node direct skipedg leaf fl node end path everi path travers proced past branch node direct defer edg fl deepest one among branch node end elimin possibl duplic among defer edg introduc figur exemplifi skip link backbon root one children tree exampl figur onesymbol transit node ff descend j implement via three auxiliaryedg travers first defer link nearest branch node fi next fi fl backedg final skipedg fl j avoid unnecessarili clutter figur edg shown note presenc anoth alabel skipedg fl ffi introduc ambigu direct take search reach fl point result construct polici may branch node get assign skip defer edg may caus search stall middl downward path lack appropri direct order prevent problem back edg ad everi branch node follow see fig everi branch node fi everi alphabet symbol alabel skipedg fi defin edg label direct fi closest ancestor fl fi skip defer edg label defin refer fl abackup fi denot back fi note that construct case backup node exist alway clearli intent effect travers skipedg describ previou section achiev travers small sequenc auxiliari edg exampl fig transit node ff j implement travers success one defer edg one back edg one skipedg complic compens follow advantag lemma total number auxiliari edg whenc also augment dawg x ojxj delta jsigmaj proof one auxiliari edg per alphabet symbol leav node outdegre concentr branch node leav skipedg direct branch node observ symbol node fi one skipedg label may reach fi node due convent made case inde skipedg label set branch node ff anoth node fi construct branch node path ff fi issu alabel skipedg also construct either ff root els must edg label path closest branch ancestor ff ff itself henc skipedg label could possibl set branch ancestor ff node subtre root ff similar argument hold defer edg direct toward everi leaf inde mechan case defer edg label set branch node ff leaf fi origin edg label path ff fi again either ff root els must origin edg label path closest branch ancestor ff ff itself defer edg label may issu branch ancestor ff node subtre root ff consid leav observ first one skipedg per symbol may direct leaf node get global bound defer edg set leav consid compact trie suffix x trie on leav arc everi branch node map distinct branch node trie inde obtain figur prune noncompact version trie map one defer edg set leaf fl arc trie way arc trie charg one defer edg per alphabet symbol see map let w word root fl let w extens w complet one path end first occurr cross branch node dawg defer edg rel w charg edg trie w end observ that extens w appear x occurr v v v must diverg word w must path trie diverg w thu charg arc trie differ one charg w moreov sinc prefix w end leaf ancestor fl produc charg conclus leaf symbol sigma distinct arc trie charg whenc total number auxiliari edg kind per symbol bound length x realiz x begin end j sequenc oe arc follow properti i concaten consecut label origin skipedg oe spell p ii origin skipedg oe follow sequenc contain two defer edg one back edg iii path label dawg sourc node reach last arc oe proof proof induct length pattern let assum p realiz x state definit must origin arc correspond node reach arc satisfi trivial point i gamma iii assum claim hold pattern length match prefix p node ff maintain i gamma iii henc index f j path root ff label f realiz pmgamma given p realiz must path dawg label f a j origin node repres ff path imag perhap fragment sequenc segment consid imag claim easili check last symbol b p consum either origin arc defin skipedg leav ff shunt path label f a j assum neither type edg defin ff construct must defer edg label lead path label prefix f a k f either branch node call fi leaf second case either defin skipedg lead final node would conclud argument one defer edg take branch node consid branch node must imag node dawg path ff label k a j henc moment reset reason assum case branch node fi except fact would start handicap alreadi consum two defer edg assum branch node fi possibl alreadi travers one two defer edg suffix k a j f still match clearli fi defin alabel skip origin edg conclud argument thu remain case interest occur alabel skip origin edg defin fi event link back fi travers instead depict fig let j descend fi j connect fi nontrivi origin path symbol appear precis suffix alabel origin edg fi j claim skipedg label fl j fact select edg label path fi parent node j assum one edg exist path fl fi fi branch ancestor fi would alabel skipedg defin therebi contradict back choos j node end path origin fi label suffix k a j remain point consum skipedg label must exist fl j travers edg achiev propag point i gamma iii p within transit two defer edg one back edg one skipedg proof convers straightforward thu omit base lemma search realiz pattern augment dawg x may carri along line boundeddepth visit direct graph elementari downward step search consist follow origin edg skipedg depend one found detail obviou whenev edg actual exist problem need examin detail symbol may one skip defer edg label leav node like node fl fig edg lead descend fl simultan descend ff fig instanc situat repres node ffi assum auxiliari ie skip defer edg leav node fl label arrang list dedic a sort say accord lefttoright order descend fl thu particular descend node ff exampl reachabl alabel auxiliari edg fl found consecut entri auxiliari edg list fl associ symbol a list part travers left right search follow natur structur depthfirst visit graph convent also made backedg fi fl point directli auxiliari edg associ leftmost descend fi search begin sublist fl rel descend fi immedi access fi way skip defer edg sublist scan sequenti subtre root fi explor follow theorem summar discuss theorem compact skipedg dawg associ x support search earliest occurr pattern x time o rocc number distinct realiz x prefix p p alreadi note realiz substr may occur mani time x count bound difficult modifi dawg augment highlight previou section build compact variant describ here again core paradigm bottomup comput except time list skip defer edg may assign branch node temporari basi whenev climb back toward root node fi ancestor branch node ff encount interven edg label a alabel skip defer edg list fi surrend ff fi simultan append list back branch node await back edg soon becaus interven origin edg label reach root alabel list perman assign node ff appropri backedg also direct everi node list back back dispos of similar process govern introduct skip defer edg leav recal leaf fact replica confluenc node dawg show possibl comput class auxiliari edg bottomup also suggest group leav replic node dawg suffic issu edg node imag dawg node let replica simpli point it note that long insist reason term defer edg leav must suitabl mark lest confus issu branch node play havoc search describ lemma overal process take time space linear structur outset linear jxj fix alphabet symbol durat may taken account construct well search possibl result addit save detail tediou straightforward left reader gener unbound alphabet alphabet size jsigmaj constant independ length n x face choic implement origin adjac list node dawg either linear list balanc tree first option leav space unaffect introduc slowdown linear multipl factor worstcas search second introduc linear number extra node overhead search multipl factor olog jsigmaj below assum second choic made rather straightforward adapt structur discuss previou section would lead statement similar theorem except olog jsigmaj factor time bound here howev interest fact alphabet size longer constant lemma collaps number auxiliari edg need dawg may becom quadrat section show transduc support search time fact built within on log n time linear space idea cours forfeit mani skipedg auxiliari edg pay sparsif log jsigmaj overhead elementari transit explain first work origin array x store resort global tabl close defin follow contain smallest posit larger j occurr p pth symbol alphabet thu close regard subdivid block size jsigmaj entri cyclic assign differ symbol alphabet trivial comput close x linear time let closesti p closest instanc p right posit if occurr set closesti follow properti hold lemma given tabl close sort list occurr p closesti p comput p olog jsigmaj time refer proof lemma main idea two access form must either identifi desir occurr els defin interv jsigmaj entri occurr list p within desir occurr found binari search henc olog jsigmaj time note symbol x partit individu symboloccurr list on log jsigmaj overal time list occupi linear space collect construct enabl us immedi get rid skipedg issu insid chain unari node present key element make latter fact possibl cir cumstanc alreadi remark map everi path sink dawg henc also everi maxim chain substr suffix henc interv posit x fact interv identifi applic closest tell far along chain one go along line need show downward transit perform follow identif made closest node want reach may either scan chain sequenti search logarithm first option result ad overal time complex term linear n second requir addit adhoc auxiliari link rate log n per node log n point upward mani point downward overhead introduc second option olog n per transit absorb olog possibl charg closest scheme adapt get rid skipedg direct leav still face potenti thetajsigmaj defer edg per chain node mani backup edg per branch node edg easi accommod defer edg node point branch node thu coalesc singl downward failur link backup edg recal definit path fi back fi edg label a edg must exist path closest branch ancestor fl fl let trivial node given label start posit earliest suffix whose path pass node then use tabl closest array x find distanc arc j climb use log n auxiliari upward link final reach fl downward failur link consid defer edg lead leav edg entir suppress cost visit subtre involv search time introduc work linear overal sinc eg breadthfirst search suffic visit subtre onc final consid collect defer edg origin arbitrari leaf recal defer edg label set leaf fl branch node fi done intent make access search final target node j found along unari chain connect fi closest branch descend or leaf specif j node end first edg label chain connect fi analog discuss earlier j reach logarithm time applic closest problem thu prepar reach node search without dedic one separ defer edg everi node term discuss lemma idea could coalesc defer edg defer edg fl would charg arc suffix trie x let closest discern search time among individu symbol present arc specif case consid trie arc would one map dawg path connect fi howev time enough sinc everi symbol sigma guarante appear everi dawg chain trie arc must go one step coalesc jsigmaj edg reach along given path trie deepest one among edg intent that search tabl closest use climb back appropri depth symbol need show done consist ie connect path support climb guarante exist let w word associ fl w shortest extens w v contain least one instanc everi symbol sigma w end branch node suffix trie let w respect longest word equival class w w recal fl replica node correspond w clearli must path dawg connect node w w label v moreov dawg node correspond w must branch node correspond node trie construct branch node must exist also tree must connect root path label suffix connect path label v exist claim conclud point log factor appear claim reduc log log expens addit bookkeep deploy data structur especi suit store integ known rang also like log n factor could made disappear entir resort amort finger search as eg conclus describ data structur suitabl report occurr pattern string constrain subsequ anoth string sinc fullfledg data structur would bulki practic alloc compact spars version built space save trade exchang overhead search time paramet perhap suscept improv particular clear bound attain fix alphabet size cannot extend without penalti case unrestrict alphabet nontrivi estim bound term rocc appear complex may shed light expect worst case perform search final littl known indic would return time linear pattern size whether given pattern occur episod subsequ textstr acknowledg indebt refere thorough scrutini origin version paper mani valuabl comment r pattern match algorithm longest common subsequ problem revisit smallest automaton recogn subword text fast approxim match use suffix tree algorithm prioriti queue initi queue oper take olog log n time patternmatch model instrus detect discov frequent episod sequenc approxim string match suffix tree introduct comput biolog tr search subsequ text algorithm pattern match algorithm discoveri frequent episod event sequenc approxim stringmatch suffix tree episod match ctr zdenk tronek episod direct acycl subsequ graph nordic journal comput v n p spring abhijit chattaraj laxmi parida inexactsuffixtreebas algorithm detect extens pattern theoret comput scienc v n p may robert gwadera mikhail j atallah wojciech szpankowski reliabl detect episod event sequenc knowledg inform system v n p may philipp flajolet wojciech szpankowski brigitt vall hidden word statist journal acm jacm v n p januari