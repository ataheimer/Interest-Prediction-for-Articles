t mixedmod bist use embed processor a complex system embed processor may use run softwar routin test pattern gener respons evalu system compon complet random pattern testabl test program gener determinist pattern random test usual random test part program requir long run time wherea part determinist test high memori requirementsin paper shown appropri select random pattern test method significantli reduc memori requir determinist part new highli effici scheme softwarebas random pattern test propos shown extend scheme determinist test pattern gener entir test scheme may also use implement scan base bist hardwar b introduct integr complex system singl chip implement multichip modul mcm becom widespread approach varieti embed processor embed corewar found market allow appropri split system function hardwar softwar modul develop howev system test becom enorm challeng complex restrict access hardwar compon requir sophist test strategi builtin selftest combin ieee standard help tackl problem low cost convent asic test number power bist techniqu develop past exampl shown combin random effici encod determinist pattern provid complet fault coverag work support dfg grant test und synthes schneller eingebettet system wu keep cost extra bist hardwar storag requir low case embed system high qualiti test possibl without extra hardwar use embed processor gener test compon usual kind function test requir larg test program memori space alway avail system paper shown small test program synthes complet coverag nonredund stuckat fault combin part system obtain cost extra bist hardwar convent system test reduc cost hundr byte system memori store test routin propos bist approach effici exploit designfortest structur subcompon shown figur serial bist embed processor execut program gener test pattern shift scan regi ter compon test even effi cientli present approach may use gener test data input regist pipelin combin subsystem embed processor scan input scan output scan input scan output test data random determinist pattern figur serial bist approach structur test program kept sim ple random pattern gener sinc elementari processor instruct use even linear feedback shift regist lfsr emul effici figur show exampl modular lfsr correspond program for simplic ccode shown gener fix number state transit void transit int m int n unsign int polynomi unsign int state transit modular lfsr degre n int i im i state n state state polynomi els state figur modular lfsr correspond program gener state transit usual subcompon system random pattern testabl remain fault determinist test pattern appli pur pose compact test set may gener describ reproduc test program hardwarebas determinist bist scheme emul test softwar kind mixedmod test may interleav determinist random test perform success case storag requir determinist part test program directli relat number undetect fault random pattern gener great tradeoff runtim random test memori requir mixedmod program assum small improv random test method lead increas fault coverag reduc number undetect fault storag requir factor overal effici mixedmod test scheme improv much higher degre modifi random part rather determinist part paper highli effici softwarebas random bist scheme present also use gener determinist pattern rest paper organ follow next section differ random pattern test scheme emul softwar evalu section extens determinist test describ subsequ section procedur optim overal bist scheme present section describ procedur gener mixedmod test program final section give experiment result base intel ca processor exampl emul random pattern test test routin exploit arithmet function processor produc pattern properti suffici test random pattern testabl circuit even complet satisfi condit random state eg howev circuit particular circuit consid random pattern resist arithmet pattern may perform well linear feedback shift regist lfsr correspond primit feedback polynomi cellular automata gener consid stimuli gener good properti random test gener sequenc still show linear dependen cie differ primit polynomi perform differ circuit case linear depend may support fault detect circuit perform poorli follow fault coverag obtain sever lfsrbase pattern gener scheme discuss experiment data feedback polynomi contrast hardwarebas bist softwarebas approach number posit feedback tap lfsr impact cost bist im plement thu given length achiev fault coverag optim without cost constraint assum test per scan scheme shown figur sensit fault coverag select feedback polynomi studi seri experi combin part isca isca benchmark circuit lfsr feedback scan path cut figur scanbas bist circuit pi f degre lfsr lfsr lfsr lfsr lfsr lfsr averag tabl absolut normal w r t worst lfsr percentag undetect nonredund fault pattern fault simul random pattern perform circuit use sever differ feedback polynomi degre typic result shown tabl first four column contain circuit name number input number nonredund fault select degre feedback polynomi remain column show characterist six differ lfsr first entri report percentag undetect nonredund fault second entri normal number correspond number worst lfsr in worst best perform lfsr print bold respect last column give averag lfsr observ big varianc perform differ lfsr degre s eg best lfsr reduc number undetect fault fault left undetect worst polynomi multiplepolynomi lfsr one explan consider differ fault coverag observ section given fact linear depend scan posit may prevent certain necessari bit combin scan pattern independ initi state lfsr differ lfsr distribut linear depend scan chain differ and depend structur circuit may differ impact fault coverag shown figur impact linear depend reduc sever polynomi use small exampl lfsr oper accord two dif degre polynomi select compat requir determinist test describ section ferent primit feedback polynomi p select input multiplex given initi state lfsr produc scan pattern a that depend select polynomi shown equat hold compon st st u figur scanbas bist multiplepolynomi lfsr polynomi p linear relat prevent combin input andgat impli polynomi p x never produc test stuckat fault node contrast that polynomi input posit linearli independ produc possibl nonzero bit combin thu test consid fault similarli stuckat fault node cannot test use polynomi polynomi p x provid test use polynomi certain number pattern increas chanc detect fault multiplepolynomi lfsr implement effici hardwar tri share part feedback sever polynomi softwar emul also simpl sinc basic procedur simul lfsr modifi slightli control select feedback polynomi sever scheme possibl first shown figur assum n random pattern gener p differ polynomi denot lfsr oper correspond feedback polynomi p initi lfsr gener np pattern lfsrp figur success multiplepolynomi scheme suc polynomi appli success gener contigu subsequ np random pattern scheme therefor refer scheme suc one polynomi scheme degener convent singl polynomi scheme possibl switch differ distribut linear depend paid disadvantag pattern may occur repeatedli p time henc overal increas fault coverag cannot expect experi shown inde improv circuit tabl list result set circuit studi previou section circuit degre tabl absolut normal w r t worst best singl lfsr percentag undetect nonredund fault scheme suc pattern circuit pattern simul use p polynomi experi percentag undetect nonredund fault report st line well correspond normal number worst nd line best singl polynomi rd line degre in appli success scheme exampl circuit c reduc number undetect fault compar worst singl polynomi even import scheme also outperform best singl polynomi number remain target fault atpg less ie percent fault left best singl polynomi addit cover scheme random sequenc in creas polynomi use success select randomli test pattern random select implement second lfsr shown figur refer scheme rnd u feedback cut scan chain figur hardwar scheme random select feedback polynomi rnd select p differ feedback polynomi lfsr control log p bit state regist lfsr softwar implement structur figur two addit regist requir store feedback polynomi state lfsr lfsr emul proce dure complet routin gener sequenc n random pattern shown figur initi lfsr initi lfsr select p base state lfsr gener pattern lfsrp perform state transit lfsr figur softwar routin random pattern gener scheme figur rnd tabl show percentag undetect nonredund fault correspond normal number obtain scheme rnd circuit degre tabl absolut normal w r t worst best singl lfsr percentag undetect nonredund fault scheme rnd pattern randomli select polynomi higher chanc pattern repetit randomli switch differ distribut linear depend may improv qualiti pattern cir cuit result improv fault coverag set fault remain determinist test reduc multiplepolynomi multiplese anoth way improv effici random test repeatedli store new seed pattern gener investig instanc techniqu combin use multipl polynomi shown figur u feedback cut scan chain figur multiplepolynomi multiplese lfsr scheme rnd log p bit state regist lfsr use drive select p differ feedback polynomi degre k lfsr remain k bit provid seed lfsr sequel scheme refer scheme rnd structur correspond test program shown figur initi lfsr select seed polynomi p base state lfsr initi lfsr gener pattern lfsrp perform state transit lfsr figur test program multiplepolynomi multi plese lfsr rnd again scheme pattern may occur repeatedli addit advantag randomli chang distribut linear depend scheme also abl gener zerovector often need complet fault coverag tabl give result percentag undetect nonredund fault correspond normal number tabl circuit degre tabl absolut normal w r t worst best singl lfsr percentag undetect nonredund fault scheme rnd pattern expect circuit fault coverag increas circuit techniqu lead signific improv circuit s best result obtain compar experi befor softwarebas determinist bist structur multiplepolynomi multiplese random bist scheme figur similar determinist bist scheme base reseed multipl polynomi lfsr propos see figur u cut scan chain m bit id seed figur determinist bist scheme base multipl polynomi lfsr determinist pattern encod polynomi identifi seed respect polynomi test mode pattern reproduc emul lfsr correspond polynomi identifi load seed lfsr perform autonom transit lfsr mth transit scan chain contain desir pattern appli cut calcul encod system linear equat solv fix feedback polynomi degre k lfsr produc output sequenc a i satisfi feedback equat k lfsrsequenc compat desir test pattern specifi bit hold recurs appli feedback equat provid system linear equat seed variabl k solut found given polynomi next avail polynomi tri shown alreadi polynomi high probabl success determinist pattern specifi bit encod sbit seed henc p differ polynomi avail polynomi identifi implement next bit seed next bit determinist test set number specifi bit max requir bit storag minim st requir minim maximum number care bit max number pattern n atpgalgorithm present gener test pattern number specifi bit max mini mize mixedmod bist approach number n pattern highli correl number fault left undetect random test synthes bist scheme sinc effici mixedmod bist scheme strongli depend number hard fault cover determinist pattern major concern synthes bist scheme optim random test experiment data section show signific varianc fault effici achiev differ lfsr scheme exist univers scheme polynomi work circuit sequel procedur present determin optim lfsr scheme select lfsr guid fault effici maxim satisfi requir effici encod determinist pattern random pattern resist fault assum tabl primit polynomi avail propos procedur consist step perform atpg elimin redund fault estim maximum number specifi bit max expect test cube hard fault select polynomi degre max randomli perform fault simul correspond shift regist sequenc rank polynomi accord fault coverag achiev select p best polynomi store highest fault coverag correspond lfsr best_schem use polynomi simul scheme suc rnd rnd updat best_schem best solut obtain far number mainli determin limit comput time spent number p also restrict comput time avail addit lfsr requir two regist processor pattern gener so regist file target processor put limit p too tabl show result achiev procedur set circuit studi section degre use section sequenc random pattern appli scheme best uf worst tabl best scheme relat best worst singl polynomi solut second third column show best scheme correspond number polynomi p column provid fault effici fe percentag detect nonredund fault percentag fault left undetect best scheme report column uf uf best normal solut number obtain best singl polynomi uf worst refer worst singl polynomi tabl indic search appropri random test scheme reduc number remain fault significantli procedur need run fault simul may decreas storag amount need determinist pattern consider save memori mixedmod test program particularli import test program store rom startup mainten test gener mixedmod test program test program implement random test scheme reseed scheme determinist pattern gener intel ca target processor larg regist set made compact code possibl sinc part test program gener determinist pattern superset instruct requir implement random scheme exampl complex random scheme shown mixedmod test program figur gener random test pattern multiplepolynomi multipl seed lfsr emul switch reseed scheme afterward program figur requir word memori assum lfsr fit regist step equ number step lfsr step equ number step lfsr steps_det equ number step determinist test len equ posit msb lfsr len equ posit msb lfsr testport equ address testport no_poly_bit equ number bit polynomi choic mask equ defin mask start dq startvector defin startvector lfsr poli dq polynomi defin polynomi lfsr seed dq seedvector defin seed det test seed_offset equ seed start defin offset seed tabl begin lda testport r load address testport lda steps_det r load loopcount lfsr det mode lda step r load loop counter lfsr lda start r load startvector address lfsr ld r r load startvector lfsr ld r r load polynomi lfsr l mov r r initi lfsr content lfsr mask r r comput polyid ld rr r polynomi lfsr lda no_poly_bit r load number bit polyid l shro no_poly_bit r r shift polybit lda step r load loop counter lfsr l st r r write testpattern testport mov r r shlo r r shift left bbc len r l branch msb lfsr equal zero xor r r r xor decrement loop counter cmpibn r l branch equal zero mov r r shlo r r shift left bbc len r l branch msb lfsr equal zero xor r r r xor l subi r r decrement loop counter cmpibg r r l branch r steps_det ld seed_offsetrrr load seed cmpibn rl figur mixedmod bist program alway possibl random pattern gener encod determinist pattern may lead lfsr length exceed bit case program figur modifi straightforward way requir memori tabl give relat memori requir lfsr length lfsr length memori requir word tabl length memori requir mixedmod test program addit program size memori reserv store polynomi seed order decod determinist pattern experiment result next section show data form far major part memori requir experiment result describ strategi gener mixedmod test program appli benchmark circuit e circuit run fault simul perform determin best random scheme tabl show result circuit pi degre best scheme p tabl circuit characterist best random scheme select random scheme characterist data report tabl column list number primari input pi degre poli nomial best random scheme number polynomi report subsequ column tabl show detail result number nonredund fault circuit given column effici random scheme character fault effici fe percentag undetect nonredund fault uf normal number uf respect best uf best averag uf averag singl polynomi solut column circuit f fe uf uf best uf averag s tabl fault effici percentag undetect nonredund fault best random scheme pattern reduct remain fault obtain best random test scheme signific instanc circuit c known random pattern resi tant singl polynomi solut averag lead fault effici leav fault determinist encod circuit rnd scheme achiev fault effici or absolut fault left correspond reduct remain fault circuit care select random scheme even make determinist test super fluou final note larger cir cuit alreadi small rel reduct mean consider number fault addit cover random test need consid determinist test exampl circuit reduct respect mean addit respect fault elimin random test tabl show result number test pattern requir random pattern resist fault amount test date storag in bit best random scheme compar random test use averag singl polynomi includ storag need poli nomial initi lfsr state random test encod determinist test set sinc goal work determin impact random test test data storag standard atpg tool select perform experi circuit fault effici determinist test circuit determinist pattern test data storag bit scheme averag polynomi scheme averag polynomi s tabl number determinist pattern storag requir complet test data in bit result show optim random test fact consider reduc number determinist pattern overal test data storag particularli true circuit known random pattern resist eg circuit c number determinist pattern reduc reduct test data storag k circuit best scheme elimin determinist pattern lead reduct test data storag k shown tabl alreadi standard atpg propos techniqu requir less test data storag approach base store compact test set cf circuit determinist pattern test data storag bit scheme compact test scheme compact test s tabl amount test data storag propos approach store compact test set expect test data storag present approach could reduc even further atpg tool special tailor encod scheme use describ conclus scheme gener mixedmod test program embed processor present test program use new highli effici random test scheme new softwarebas encod determinist pattern shown care select primit polynomi lfsrbase random pattern gener strong impact number undetect fault multiplepolynomi random pattern scheme provid significantli better result mani case qualiti random scheme main impact overal size mixedmod test program exampl processor intel ca test program gener benchmark circuit complet coverag nonredund fault obtain r test embed builtin selftest environ exhaust gener bit pattern applic vlsi selftest neutral netlist combin benchmark design special translat combin profil sequenti benchmark circuit new pattern bias techniqu bist bist hardwar gener mix test scheme multichip modul selftest provid mean test speed shift regist sequenc test gener base arithmet oper gener vector pattern reseed multiplepolynomi linear feedback shift regist pattern gener determinist bist scheme compact test set base symbol fault simul cellular automatabas pseudorandom number gener builtin selftest costeffect gener minim test set stuckat fault combin logic circuit accumul builtin self test highlevel synthesi rotco revers order test compact techniqu multipl seed linear feedback shift regist advanc automat test gener redund identif techniqu synthesi map logic gener transform pseudorandom pattern bist minim test set combin circuit circuit pseudoexhau tive test pattern gener test use unequiprob random pattern multipl distribut bias random test pattern decompress test data use variablelength seed lfsr tr ctr sybil hellebrand huaguo liang hansjoachim wunderlich mix mode bist scheme base reseed fold counter journal electron test theori applic v n p juneaugust huaguo liang sybil hellebrand hansjoachim wunderlich twodimension test data compress scanbas determinist bist journal electron test theori applic v n p april rainer dorsch hansjoachim wunderlich reus scan chain test pattern decompress journal electron test theori applic v n p april liang huaguo sybil hellebrand hansjoachim wunderlich mixedmod bist scheme base fold compress journal comput scienc technolog v n p march