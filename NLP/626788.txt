t data structur circular string analysi visual a csdawg circular string obtain make simpl modif compact symmetr direct acycl word graph csdawg linear string propos data structur contain extran vertic and consequ avoid disadvantag previou method use method algorithm make use csdawg linear string extend circular string trivial modif extend algorithm continu time space complex moreov extens take form postprocess preprocess step simpl add system built linear string particularli objectori languag b introduct circular string data type use repres number object circular genom polygon close curv research molecular biolog involv identif recur pattern data hypothes caus andor effect research pattern recognit comput vision involv detect similar within object object detect pattern visual tediou prone error model propos allevi problem model consist identifi recur pattern string highlight ident pattern color also list number queri model would support effici mostli optim algorithm propos queri linear string algorithm perform oper travers symmetr compact direct acycl word graph scdawg linear string scdawg use repres string set string evolv string data structur posit tree suffix tree direct acycl word graph etc one approach extend techniqu circular string arbitrarili break circular string point becom linear string techniqu linear string may appli it howev disadvantag signific pattern circular string may lost pattern broken linear string inde would defeat purpos repres object circular string defin polygon structur graph extens suffix tree circular string howev suffix tree power scdawg cannot use solv problem scdawg solv paper defin scdawg circular string algorithm make use scdawg linear string extend circular string minor modif extend algorithm continu effici time space complex further extens take form postprocess preprocess step simpl add system built linear string particularli object orient languag e c c figur circular string section contain definit section describ scdawg linear string section describ extens circular string section deal comput occurr display entiti section introduc notion conflict section list queri implement section also explain algorithm implement queri linear string modifi work circular string final section mention applic visual analysi circular string let denot circular string size n consist charact fix alphabet sigma constant size figur show exampl circular string size shall repres circular string linear string enclos angl bracket thi distinguish linear string linear string obtain travers circular string clockwis order list element travers start point travers chosen arbitrarili consequ n equival represent s exampl could repres abcdabc bcdabcea etc character relationship circular string linear string defin function linear circular linear map circular string linear string onemani map circular string can gener map one linear string exampl dabcg assum purpos paper linear arbitrarili choos one linear string conveni assum choos represent obtain remov angl bracket so linearizeabcd abcd circular map linear string circular string manyon function repres invers linear use lower case letter repres circular string upper case letter repres linear string further lower case letter say s use repres particular circular string correspond upper case letter s assum linear singl charact occur th posit denot respect substr denot ij j substr denot ij j exampl use symbol fl denot either circular string linear string exampl predecessor predflij substr fl ij fl defin linear successor succflij substr fl ij fl defin fl linear fl circular immedi context contextflij substr fl ij fl order pair predecessor predfl ff successor succfl ff set pattern ff string fl defin below predfl g succfl g immedi context set contextflff pattern ff fl set g exampl string figur succ pattern occur fl said maxim iff occurr preced charact follow charact so pattern ff length n fl maxim iff jpredfl ffj jsuccfl ffj necessarili true pattern length greater equal n exampl maxim sinc neither preced follow charact jpred pattern said display entiti or display fl iff maxim occur least twice fl note fl repres circular string pattern arbitrarili long rest discuss assum display entiti circular string length less n scdawg linear string scdawg correspond string direct acycl graph defin set vertic v s set rs label direct edg call right extens re edg set label direct edg ls call left extens le edg vertex v s repres substr s specif v s consist sourc which repres empti word sink which repres s vertex correspond display entiti s let dev denot string repres vertex v v ffl v s defin implic imp ff string ff smallest superword ff fdevj v ffl v sg superword exist otherwis imp ff exist edg v v obtain follow letter x sigma imp dev x exist equal edg v v label xfl fi empti string edg known prefix extens edg le edg v v obtain follow letter x sigma imp xdev exist equal dev gabcd de e de c abc bc de gabcd fabcgabcd gabcd fabcgabcd cde sink abc c sourc figur scdawg edg shown le edg v v label flx fi empti string edg known suffix extens edg figur show v sr correspond cde c display entiti s two edg vertex repres abc correspond g impsabcd consequ edg incid sink edg correspond letter alphabet impsabcx exist x ffl fg notic number edg vertex v equal jsucc dev fgj number le edg equal jpred dev fgj exampl so number right edg leav vertex correspond space requir scd on time need construct on defin scdawg data structur singl string extend repres set string extens circular string section present construct definit scdawg circular string section analyz complex algorithm section construct scdawg circular string section identifi prove properti scdawg scdawg circular string notion scdawg may extend circular string scdawg circular string defin construct algorithm figur scdawg circular string obtain first construct scdawg linear string linear bit associ edg rt indic whether prefix extens edg not similarli bit associ le edg lt identifi suffix extens edg two pointer suffix pointer prefix pointer associ vertex v v t suffix prefix pointer point vertex w v t dew largest suffix prefix dev repres vertex v t suffix prefix pointer revers suffix prefix extens edg deriv them figur show scdt cabcbab broken edg vertex c vertex abc suffix extens edg solid edg vertex ab vertex abc prefix extens edg next step suffix prefix redund vertic scdt identifi suffix prefix redund vertex vertex v satisfi follow properti a v exactli one outgo le edg vertex said redund either prefix redund suffix redund both figur vertex c prefix redund onli vertex ab suffix redund onli vertic figur redund in particular vertex repres redund even though one one le edg n fact step doe fact identifi redund vertic establish later vertic scdt process revers topolog order step redund algorithm step construct scdt fidentifi suffix redund verticesg v sourc begin v exactli one outgo edg mark v suffix redund els exit step a fidentifi prefix redund verticesg fsimilar step ag step v sourc begin case v suffix redund prefix redund processsuffixredundantv prefix redund suffix redund processprefixredundantv suffix redund prefix redund processbothredundantv redund fdo noth figur algorithm construct scdawg circular string tss c cabcbab cabcbab cabcb abcbab c bab cabcb c c ab cabc abcbab bab ab c c ab c abc ab figur scdt tcabcbabcabcbab procedur processsuffixredundantv elimin left extens edg leav v there least two these exactli one right extens edg e leav v let vertex lead w let label right extens edg xfl delet edg right edg incid v updat point w label modifi repres concaten origin label xfl left edg incid v updat point w label modifi howev suffix extens edg bit indic reset edg longer suffix extens edg delet v figur algorithm process vertex suffix redund vertic elimin vertex elimin edg incid tofrom redirect relabel describ figur result graph cscd set vertic cscd denot cv s set right left edg denot cr cl figur show cscd notic vertic c ab elimin two incom edg c three incom edg ab figur point abc ul ur ur ul u u figur procedur processprefixredundantv elimin right extens edg leav v there least two these exactli one left extens edg e leav v let vertex lead w let label left extens edg flx delet edg left edg incid v updat point w label modifi repres concaten flx origin label right edg incid v updat point w label modifi howev prefix extens edg bit indic reset edg longer prefix extens edg delet v figur algorithm process vertex prefix redund ul ur ur ul u u figur v prefix redund procedur processbothredundantv exactli one right extens edg e leav v let vertex lead w let label edg xfl delet edg exactli one left extens edg e leav v let vertex lead w let label edg flx delet edg fwe establish later w w are fact vertexg right edg incid v updat point w label modifi repres concaten xfl edg prefix edg bit indic reset similarli left edg incid v updat point w label modifi repres concaten flx edg suffix extens edg bit indic reset delet v figur algorithm process vertex prefix suffix redund e l l l fiy e r l r xfl e l l l ul ur ur ul u u figur v suffix prefix redund lemma everi substr ij length n s exist substr lm ij contextt proof case case subcas context subcas subcas possibl sinc length corollari everi pattern ff length n s context ff contextt ff corollari everi pattern ff length n s pred ff predt ff succ ff substr substr lm t ij pred l m proof result follow definit predt choos lm length ij greater n lm assum wrap around onc so pred l m corollari everi pattern ff length n predt theorem everi pattern ff length less n pred proof corollari pred ff predt ff so pred ff fg predt ff fg henc pred ff predt ff fg sinc pred ff contain cabc ab tss sourc abcbab cabcb cabcbab cabcbab bab c c c abc abc abc figur scdawg corollari pred ff predt ff fg so pred fg proof succ theorem vertex v jdevj n v t non redund iff dev display entiti s proof suppos ff display entiti s then jpred ffj jsucc ffj theorem jpredt so ff display entiti correspond vertex v t least two le two edg leav it henc v redund next suppos non redund vertex v scdt dev sinc v redund jpredt theorem jpred ffj jsucc ffj so ff display entiti scorollari redund vertex v t display entiti s lemma a vertex v v t exactli one le edg dev suffix prefix b vertex v dev jdevj n suffix prefix one le edg vertex w dew suffix prefix dev suffix prefix redund proof a suppos dev suffix element succt dev so v least two edg contradict henc dev must suffix b sinc dew suffix dev successor dev must also successor dew so dev least two edg so w must least two edg cannot suffix redund show step a algorithm identifi suffix redund vertic suffici examin vertic correspond suffix lemma a step a follow chain suffix pointer start sink vertex chain repres display entiti length n one edg mark suffix redund travers chain termin either sourc reach vertex one edg encount lemma b similarli step b identifi prefix redund vertic v t complex analysi worst case travers vertic scdt spend o time each number vertic bound on so step take on time step travers scdt vertex process onc edg process twice onc incom edg vertex current process edg vertex current process so step take on time note scdt on edg properti cscd defin implic imp ff string ff respect cscd smallest superword fifffl ff repres vertex cv s exist substr fi fffl length least common suffix less minjfij length least common prefix lcpfl less minjflj jfl j superword exist otherwis imp ff exist addit condit which refer uniqu condit impos imp ff guarante impt ff definit scdt smallest set superword display entiti abc superword display entiti abc superword element r then de abc must one element r jlcsb abc neither babcaa cabcaa further sinc jlcsaaaa aaj abcaaaa lemma let v suffix prefix redund vertex scdint t scdint t repres intermedi configur scdt cscd statement step algorithm a let le edg incid w w respect dew redund w proof case jdew cannot nil if is w prefix redund sinc jdew j n occurr dev except prefix preced y similarli must form fi ydevxfl sinc letter preced dev similarli dew must form fi ydevxfl show fi assum case sinc jdew redund least so must exist display entiti fi ydevxfl fi largest common suffix fi fi fl largest common prefix fl fl further fi dev dev dev dev figur illustr proof prefixsuffix redund invari imp ydev contradict statement made abov case jdew j n cannot nil otherwis w suffix redund so dew x letter follow dev argument similar case show sinc jdew j must prefix fl fi suffix fi y but contradict henc case cannot exist case jdew j n similar case case jdew j n figur show case occur prefixsuffix redund invari figur assum jdew dev prefix dew jdevj n divid n howev prefixsuffix redund invari shown true case two copi shown figur first copi shade occurr n dev ff ff vertic ff ff ff ff ff ff ff ff ff figur scdff extens dew second shade occurr n n jdevj extens dew sinc shade region string repres next assum without loss gener fi call smallest repetit assumpt occurr ff jffj jffj jffj m gamma ff n if not argument similar one figur contradict smallest repetit assumpt take form figur vertex repres ff exactli one le one edg shown remain display entiti subword ff size less jffj if not argument ident one figur contradict smallest repetit assumpt vertic repres display entiti repres box figur none vertic box edg incid vertic repres display entiti g particular edg vertic box incid vertic repres display entiti length greater n process algorithm a incom edg vertic correspond ff ff scdff incid vertex correspond cscdff follow prefix suffix redund vertex scdff process step algorithm edg incid w w least n dew properti p p p state theorem properti ensur algorithm extend circular string consist sourc sink v cv s sourc sink follow true a jdevj n iff dev display entiti s b jdevj n dev display entiti exist edg correspond letter x sigma vertex v cv s vertex exist equal dev dev label edg xfl edg prefix extens edg similar p le edg theorem cscd satisfi p p p proof properti p establish knowledg scdt contain display entiti algorithm elimin display entiti length less n display entiti corollari p p prove induct induct hypothesi is let u subset u remain vertex set u v t process step algorithm a let ru set edg incid vertic u edg r ffl ru vertex u w label xfl imp condit hold le edg ii vertex u u edg correspond letter x succt incid vertex u condit hold le edg u definit so r cv establish edg incid correct vertic label correct ii establish cr complet p hold similarli p hold induct base u fg ru lu empti i appli ii establish definit scdt induct step consid vertex v v ffl v t process step algorithm a let u u denot u u respect v process must show i ii hold u u sinc vertic process revers topolog order edg v incid vertic u therefor element ru lu so must satisfi i case v redund u sinc v elimin must show i true incom edg v addit ru lu ie r u fincom right edg vg l u fincom left edg vg let e edg label xfl u v definit scdt smallest superword deux fdewjw ffl v t g sinc cv sg but true sinc v ffl cv s so symmetr argument made incom le edg v letter alphabet le edg correspond first last charact label sinc edg ad delet redirect label edg unchang vertex rele edg correspond letter alphabet prior process vertex v so ii hold induct hypothesi case v redund u sinc v elimin subcas a v suffix redund onli definit v consist singl edg e vertex w u let label xfl induct hypothesi imp first establish i ii dev prefix dew imp dev dev v redund so imp dev must correspond vertex one edg v incid sinc edg correspond element pred dev succ dev from ii singl edg incid w repres imp devx left edg v incid vertic repres imp x dev definit imp dev none vertic possibl repres imp dev instanc imp x dev imp dev string imp x j dev j would invalid definit so imp dev must dew howev true must show nil therefor dev prefix dew occurr dev follow x so jpredt argument similar one previou paragraph show imp devx exist ru edg vg fincom edg vg lu edg vg fincom le edg vg i ii appli edg delet ru lu so need prove i ii incom edg v let e r edg incid v vertex ur label yfl must redirect imp deu r y i hold impt deu r dev smallest superword deu r y fdeaj ffl v t g imp deu r y smallest superword deu r y satisfi uniqu condit fdeaj ffl cv sg fdeaj ffl v t g sinc v imp deu r y smallest superword dev satisfi uniqu condit fdeaj ffl cv sg imp deu r xfl updat edg e r incid w label yfl xfl obtain step algorithm concaten continu prefix extens edg e r satisfi i let e l le edg incid v ul z use argument use e r imp zdeu l redirect w label remain unchang clearli e l longer suffix edg even fi notic ii continu satisfi edg correspond vertex u continu associ charact in particular label r continu begin label l continu end z edg continu leav vertex in particular e r continu leav ur e l continu leav ul subcas b v prefix redund onli symmetr subcas a subcas c v prefix suffix redund so v one edg e vertex w cv s let label also v one le edg e vertex w y induct hypothesi dew imp condit lemma satisfi sinc w w redund otherwis would elimin thu dew imp dev either imp devx imp ydev but express equal dew so imp proof i ii satisfi similar subcas a note howev incom prefixsuffix extens edg v longer remain prefixsuffix extens edg xfl fiy nil comput occurr display entiti procedur linearoccurrencess v figur base outlin report end posit occurr dev v ffl v s linear string howev invok linearoccurrencest v v ffl cv s immedi yield occurr dev section present modif obtain occurr display entiti s section show modif correct time complex optim algorithm auxiliari boolean array reportedn use conjunct cscd initi element array set fals procedur circoccurrencess v figur comput end posit dev v ffl cv s s linearoccurrencest v line necessarili comput occurr dev sinc execut cscd scdt note also occurr dev end posit i n ident occurr end posit n occurr correspond occurr dev s so report occurr singl correspond occurr dev must eventu report line transform occurr l necessari repres valu n occurr alreadi list ad list occurr correspond element report set true occurr list duplic line occurr comput element report reset fals line report subsequ reus comput occurr display entiti s exampl figur linearoccurrencest v v repres abc report end posit occurr abc ie line transform list end posit abc ie correspond respect figur show dev dew dex hypothet string figur show fragment scdawg v suffix redund scdt singl edg incid w edg x v x redund construct edg x v scdt becom edg x w cscd procedur linearoccurrencest x x cscd fail yield rightmost occurr dex sinc occurr neither subword dew procedur linearoccurrencessstr vvertex fobtain occurr dev v ffl v s sg procedur occurrencesslinear string vvertex iinteg begin dev suffix edg e v scd begin let w vertex e incid figur obtain occurr display entiti linear string procedur circoccurrencesscircular string vvertex fv vertex cscdsg report occurr l dev els reportedk begin add k final list occurr occurr l dev figur obtain occurr display entiti circular string dev dew figur exampl string suffix next section show circoccurrencess x comput occurr dex spite fact linearoccurrencest v comput occurr dex proof correct substr assum ij suffix defin immedi right extens irescdt ij ij scdt occurr igammajfijjjflj display entiti y s substr assum ij suffix defin immedi right extens irecscdst ij ij cscd occurr igammajfijjjflj display entiti y so figur occurr dev correspond suffix howev repres valid substr ff figur fragment scdawg correspond figur iredawg ire occurr said right retriev rr scdt iff one follow true rr scdt similarli occurr said right retriev rr iff one follow true rr cscd defin occurr ij rr cscd i irecscdst ij repres substr iiirecscd ij valid substr rr cscd exampl figur ngammajdexffjngammajffj rr scdt rr cscd notic i substr iff lemma k ire substr i proof assum exist pair substr assum ire defin symmetri occurr repres display entiti say dev further definit ire n appli argument repeatedli prove lemma lemma rr occurr dev v v t cv s scdt cscd exactli occurr dev obtain linearoccurrencest v proof follow definit rr occurr corollari occurr pattern dev v ffl v t obtain linearoccurrencest v lemma occurr dev v ffl cv s jdevj n obtain proof follow corollari construct cscd right edg vertic repres display entiti size n modifi rr cscd proof assum lemma fals exist occurr ij dev rr cscd clearli j n otherwis ij would rr cscd let last denot smallest valu k ire k cscd ij substr last must exist sinc ij rr let i last j last denot ire last cscd ij let z vertex cv s last j last correspond case last last n consid string j last length greater n two occurr string would display entiti length n becaus i ij last predecessor ii dez maxim occurr follow letter vertex correspond display entiti would elimin algorithm sinc length would n j last would rr cscd lemma so must exist one occurr string repres ij last but string proper suffix dez mean one occurr preced charact so two occurr string lead contradict case last n proof similar one case lemma least one two occurr ij injn dev ffl cv s rr cscd proof assum lemma fals let last smallest valu k either substr let i last cscd ij i q last cscd injn case ire last cscd ij substr t ire last cscd injn substr t ie rr cscd sinc i q j q satisfi condit lemma case ire last cscd ij substr ire last cscd injn substr symmetr case case ire last cscd ij substr ire last cscd injn substr shown caus contradict argument similar one lemma theorem procedur circoccurrencessv correctli obtain occurr dev show linearoccurrencest v comput rr occurr dev cscd lemma show occurr dev least one correspond occurr rr cscd circoccurr comput occurr transform repres occurr s remov duplic ani so output list occurr dev s theorem procedur circoccurr optim proof procedur circoccurrencess v take ojocct vj time jocct vj number occurr dev loop take ojocct vj time number occurr dev s so complex ojocc vj jocc vj size output algorithm optim comput conflict effici defin concept conflict explain import analysi visual string formal i subword conflict two display entiti exist iff substr ii prefixsuffix conflict two display entiti exist iff exist substr p sm occur p string sm known intersect conflict conflict said occur respect sm also identifi number problem relat comput conflict linear string present effici algorithm problem some list next section algorithm typic involv sophist travers oper scdawg linear string extens scdawg circular string make possibl use algorithm solv correspond problem circular string minor modif outlin below conceptu two kind travers algorithm perform scdawg correspond linear string i travers display entiti string travers vertex travers specif repres display entiti string ii incident travers travers vertex travers display entiti perform function exampl includ vertic travers linearoccurrencest v travers type i cscd requir travers vertic repres display entiti size greater equal n may achiev simpli disabl edg cscd leav vertex repres display entiti size less n incid vertex repres display entiti size greater equal n travers type ii howev may requir travers vertic repres display entiti size greater equal n achiev associ bit edg set repres edg vertex whose display entiti size less n vertex whose display entiti size greater equal n otherwis set type i travers check bit type ii travers ignor it final call linearoccurr replac call circoccurr queri section list queri system visual analysi circular string would support contain algorithm queri linear string previou section show algorithm could modifi support queri size restrict queri experiment data show random string contain larg number display entiti whose length small applic small display entiti uninterest henc use list display entiti whose length greater integ k similarli use report exactli conflict conflict display entiti length greater k give rise follow problem list occurr display entiti whose length greater k comput prefix suffix conflict involv display entiti length greater k comput subword conflict involv display entiti length greater k altern formul problem also seek achiev goal outlin base report conflict whose size greater k size conflict defin below overlap conflict defin string common conflict display entiti overlap subword conflict subword display entiti overlap prefixsuffix conflict intersect size conflict length overlap formul problem particularli relev conflict interest display entiti also ensur conflict display entiti report size greater k follow problem obtain prefixsuffix conflict size greater integ k obtain subword conflict size greater integ k pattern restrict queri queri use applic fact two pattern conflict import number locat conflict follow problem aris result list pair display entiti subword conflict list triplet display entiti d d dm prefix suffix conflict respect dm size restrict size restrict statist queri queri use conclus drawn data base statist fact pair display entiti involv subword conflict d subword obtain number occurr occur subword number occurr pair display entiti involv prefixsuffix conflict number occurr prefixsuffix conflict number occurr greater statist determin threshold follow could said confid presenc impli presenc applic circular string may use repres circular genom g oex detect analysi pattern genom help provid insight evolut structur function organ analyz g oex linear construct scdawg work improv upon i analyz circular string without risk loss pattern ii extend analysi visual techniqu linear string circular string circular string form chain code also use repres close curv comput vision object figur a repres chain code follow arbitrarili choos pixel curv pass diagram start pixel chain code represent object mark arrow travers curv clockwis direct move one pixel next direct move record accord convent shown figur b object repres respect alphabet f g fix constant size therefor satisfi condit section may use visual techniqu compar two object exampl method would show object share segment figur c correspond respect inform common segment would also avail techniqu paper make possibl detect pattern irrespect start pixel chosen two object circular string may also use repres polygon comput graphic comput geometri figur show polygon repres follow altern sequenc line angl bfiaffeffeffcficfiefiaffeffeffcficfibffcffdffcff ff denot degre angl fi degre angl techniqu paper would point instanc self similar polygon affeffeffcf note howev method work effici number line angl use repres polygon must small fix conclus paper defin scdawg circular string shown use solv problem visual analysi pattern circular string expect also use string match applic involv circular string import featur scdawg circular string easi implement use correspond techniqu scdawg linear string alreadi avail c b a start posit object start posit object chain code represent direct figur repres close curv circular string e c c c c c c e e figur repres polygon circular string acknowledg grate professor gerhard ritter point applic circular string represent close curv r sequenc landscap the match protein sequenc use color intrasequ homolog display a method detect structur polygon string visual comput display conflict string visual complet invert file effici text retriev analysi the smallest automaton recogn subword text effici onlin construct correct posit tree a spaceeconom suffix tree construct algorithm effici eleg subword tree construct process nd edit tr digit imag process nd ed complet invert file effici text retriev analysi match protein sequenc use color intrasequ homolog display comput graphic principl practic nd ed model techniqu visual label discret object spaceeconom suffix tree construct algorithm ctr d p mehta s sahni comput display conflict string visual ieee transact comput v n p march