t kleen algebra test a introduc kleen algebra test equat system manipul program give pure equat proof use kleen algebra test commut condit follow classic result everi program simul program simul program one loop proof illustr use kleen algebra test commut condit program equival proof b introduct kleen algebra algebra structur oper delta satisfi certain axiom aris variou guis mani context relat algebra ng tarski semant logic program kozen pratt automata formal languag theori kuich kuich salomaa design analysi algorithm aho et al iwano steiglitz kozen mani author contribut develop kleen algebra anderaa archangelski backhous bloom esik boffa cohen a conway gorshkov kleen kozen author address comput scienc depart cornel univers ithaca ny email kozencscornelledu support nation scienc foundat grant ccr grate acknowledg permiss make digitalhard copi part materi without fee grant provid copi made distribut profit commerci advantag acm copyrightserv notic titl public date appear notic given copi permiss associ comput machineri inc acm copi otherwis republish post server redistribut list requir prior specif permiss andor fee c krob kuich salomaa pratt redko sakarovitch salomaa semant logic program kleen algebra form essenti compon proposit dynam logic pdl fischer ladner mix boolean algebra modal logic give theoret appeal practic system reason comput proposit level syntact pdl twosort logic consist program proposit defin mutual induct test form proposit intuit act guard succe side effect state satisfi fail abort state satisfi semant program model binari relat set state interpret subset ident relat consist pair s s true state s practic point view mani simpl program manipul loop unwind basic safeti analysi requir full power pdl carri pure equat subsystem use axiom kleen algebra howev test essenti ingredi sinc need model convent program construct condit loop defin section variant kleen algebra call kleen algebra test reason equat construct cohen studi kleen algebra presenc extra boolean commut condit given sever practic exampl use kleen algebra program verif lazi cach cohen b concurr control cohen c also shown kleen algebra extra condit form remain decid cohen a shown use result berstel see also gibbon rytter kozen continu kleen algebra presenc extra commut condit form even atom p q undecid section give complet equat proof classic folk theorem harel mirkowska state everi program simul anoth program one loop approach take mirkowska give set local transform allow everi program transform systemat one one loop transform give pure equat proof correct result illustr use kleen algebra test commut condit program equival proof section observ univers horn theori continu kleen algebra recurs enumer therefor finit axiomatiz follow construct berstel see also gibbon rytter lemma kozen resolv open question kozen kleen algebra defin kozen kleen algebra algebra structur satisfi below usual omit oper delta express write pq p delta q order preced oper kleen algebra test delta pars unari oper defin q refer natur partial order k instead might take equival axiom axiom say structur idempot semir delta remain axiom say essenti behav like kleen star oper formal languag theori reflex transit closur oper relat algebra see kozen introduct kleen algebra said continu satisfi infinitari condit r supremum respect natur order think conjunct infinit mani axiom pq infinitari horn formula s presenc axiom continu condit impli strictli stronger sens exist kleen algebra continu kozen true ident regular express interpret regular set string deriv axiom kleen algebra kozen au thor experi two use ident simplifi express call slide denest rule respect exampl deriv ident p q reason equat follow p q kleen algebra test accommod test introduc follow variant kleen algebra kleen algebra test twosort algebra unari oper defin b kleen algebra boolean algebra element b call test reserv letter arbitrari element k a b c d e test pdl test would written b sinc use differ symbol test omit sequenti composit oper delta act conjunct appli test choic oper act disjunct intuit test bc succe iff b c succeed b c succe iff either b c succe follow immedi definit b b b tempt defin test arbitrari kleen algebra set fp k g approach taken cohen a approach restrict our feel less desir two import reason although make sens algebra binari relat ng tarski work kleen algebra exampl consid min kleen algebra theori algorithm see kozen consist set fx r j x g fg oper min x kleen algebra oper delta respect algebra p p idempot law fail set fp k form boolean algebra approach everi kleen algebra extend kleen algebra test delta trivial kleen algebra test take twoelement boolean algebra f g cours interest model well even algebra binari relat forc us consid element test includ condit practic would normal consid testabl exampl may program p whose inputoutput relat side effect ie p associ test succe iff p halt gener undecid intend test view simpl predic easili recogniz immedi decid given state and whose complement therefor also immedi decid explicit boolean subalgebra allow thi program result section work pascallik program languag sequenti composit p q condit test b p els q loop construct b p program built induct atom program test use construct call program take sequenti composit oper lower preced condit test loop parenthes b pars begin b p end q b begin occasion omit els claus condit test consid abbrevi condit test dummi els claus true construct model kleen algebra test follow b p els b b see kozen tiuryn discuss relationtheoret semant program test semant justif definit commut condit also reason presenc commut condit form arbitrari element kleen algebra b test practic signific condit becom appar section intuit execut program p affect valu b stand reason p affect b neither affect b inde case lemma kleen algebra test follow equival proof symmetri suffic show equival assum convers assum therefor cours pair test commut ie axiom boolean algebra conclud section pair use result fairli evid intuit point view nevertheless requir formal justif lemma kleen algebra test note case bq lefthand side righthand side proof prove three inequ equival bqb express follow first inequ suffic axiom show b bq bq bq b boolean algebra commut assumpt second inequ follow b monoton kleen algebra oper last inequ suffic show note last argument use fact b test theorem kleen algebra p gener set element commut q p commut q proof let p express languag kleen algebra assum atom subexpress p commut q proof induct structur p basi induct case except subexpress form r straightforward induct case induct hypothesi need argu qr q kleen algebra test delta inequ one direct given argument last paragraph proof lemma use direct symmetr argument use folk theorem section give pure equat proof use kleen algebra test commut condit classic result everi program simul program one loop provid extra boolean variabl allow theorem subject treatis folk theorem harel note commonli erron attribut bohm jacopini argu justif known kleen version state origin due mirkowska give set local transform allow everi program transform systemat one one loop consid similar set local transform give pure equat proof correct each result illustr use kleen algebra test commut condit program equival proof seem commonli held belief result pure schemat ie proposit uninterpret proof harel proof hiros oya mirkowska report harel use extra variabl rememb certain valu certain point program either program counter valu valu test sinc rememb valu seem unavoid abl one might infer recours introduc extra variabl along explicit assign mechan assign valu them thu argument goe proof theorem cannot pure proposit disagre conclus purpos extra variabl preserv valu across comput treatment need preserv valu certain test b certain comput p handl pure equat follow suppos need preserv valu b across p introduc new test c commut condit intuit say comput p affect valu c insert appropri place program new atom program intuit regard assign valu b new boolean variabl test c although explicit mechan thi uninterpret atom program symbol howev languag program b c els c insur b c boolean valu execut s exampl illustr techniqu consid simpl program els begin valu b preserv p could rewrit program simpli formal assumpt valu b preserv p take form commut condit also languag kleen algebra equival becom equat ident establish simpl equat reason bpr commut assumpt b preserv p situat seem call boolean variabl rememb valu b across p explicit assign mechan set valu variabl howev approach much less drastic introduc new atom test c atom program along commut condit intuit model idea c test variabl modifi p insert program give pure equat proof equival two program els begin use axiom kleen algebra test commut condit fact even away atom program s two program equival without precomput s certainli equival it remov lead express two program languag kleen algebra equival problem becom use distribut law law boolean algebra simplifi lefthand side follow righthand side simplifi similar fashion express commut assumpt use second step kleen algebra test delta normal form theorem program normal form form q p q free subprogram p call precomput normal form approach folk theorem take follow form theorem everi program suitabl augment finit mani new subprogram form bc equival program normal form reason kleen algebra test certain commut assumpt theorem prove induct structur program program construct account one case induct proof case give transform move inner loop outsid equat proof correct induct construct perform insid out ie smaller subprogram first statement theorem deliber vagu insert subprogram bcbc commut assumpt need assum made explicit better done context construct below condit first show deal condit contain program normal form els claus consid program b begin els begin introduc new atom program test c assum c commut assumpt show program b begin els begin c p els c q els q equival note two program els claus normal form normal form argu section away precomput s remov rewrit languag kleen algebra obtain reduc distribut boolean algebra similarli becom subexpress cd equival proposit reason use familiar proposit equival de morgan law subexpress simplifi use distribut boolean algebra obtain use distribut broken sum four term commut assumpt lemma impli vanish remain two term sum two term exactli nest loop next consid case perhap interest denest two nest loop construct particularli remark commut condit thu extra variabl need compar correspond transform hiros oya mirkowska report harel use extra variabl show program b begin c q kleen algebra test delta equival program b begin c q els p end construct transform pair nest loop singl loop insid condit test commut condit assum proof transform loop taken outsid condit use transform section thi part requir commut condit dummi normal form suppli miss els claus note program insid block normal form result program normal form surprisingli key properti use proof denest properti equat regular express depth two anoth depth one translat languag kleen algebra becom bpcq c b becom b nonexist els claus outermost condit star subexpress simplifi use basic law kleen boolean algebra b equival bc de morgan law make transform obtain unwind outer loop use distribut b result sum obtain appli slide rule express give remov b bp bc express suffic show instanc denest rule elimin postcomput wish show postcomput occur loop absorb loop consid program form b assum without loss gener b test loop commut postcomput q not introduc new test c commut q along atom program intuit set valu c b loop loop bodi claim two program begin c begin equival allow us replac commut assumpt hold purpos argu equival omit occurr s lead occurr omit argu section occurr insid loop assum part p two trail occurr q omit well make modif write program languag kleen algebra need show use slide rule side becom distribut boolean algebra side reduc easili bcp bc assumpt b q commut show equival program b q els b begin b q end note p q free consist program normal form insid condit transform normal form use construct section written languag kleen algebra becom bp bq becom unwind one iter use distribut bq result sum obtain kleen algebra test delta elimin term bq side suffic prove start righthand side slide composit composit two program normal form b b q transform singl program normal form actual alreadi done work need handl case first use result section absorb whilefre program p first loop also ignor sinc absorb precomput result normal form done therefor suffic show transform program b c q normal form p q free argu section assum without loss gener test b commut program q introduc new test necessari sinc b also commut c boolean algebra theorem b commut entir second loop allow us use transform section absorb second loop first result program look like b c q els b begin b c q end substitut c q q point appli transform section inner subprogram b c q use dummi normal form omit els claus give two nest loop els claus transform section els claus final transform section entir result program yield program normal form transform section give systemat method move loop outsid program construct appli transform induct innermost loop outward transform program program normal form none argument need explicit assign mechan boolean variabl dummi program someth unspecifi and often omit actual proof guard say b c somehow obtain boolean valu cours real implement might assign valu test b new boolean variabl test c play role equat proof point signific exactli boolean valu preserv across comput rather preserv purpos formal verif fact complet captur commut assumpt thu justifi claim given pure equat proof theorem relat result decid undecid difficult reason kleen algebra commut assumpt qp word hard determin whether univers horn formula hold kleen algebra continu kleen algebra e finit set equat form turn problem undecid gener continu kleen algebra howev condit form test problem pspacecomplet kleen algebra test continu kleen algebra test thu difficult reason without extra condit undecid result gener commut assumpt continu kleen algebra follow undecid result berstel see also gibbon rytter regular set partial commut monoid result relat continu kleen algebra regular set kozen lemma p direct proof also given cohen privat commun see kozen reduct valid absenc continu reason explain section decid result condit form pb bp follow fact condit equival condit form cohen a show kleen algebra condit reduc effici kleen algebra without condit kozen smith result extend kleen algebra test thu reason presenc commut condit form use section harder reason without extra condit finit axiomatiz berstel result establish undecid construct berstel see also gibbon rytter cohen see kozen employ reduct core complet set name empti problem kleen algebra test delta ture machin complement post correspond problem respec tive impli univers horn theori continu kleen algebra recurs enumer therefor finit axiomatiz fact theori pi univers horn theori kleen algebra finit axiomatiz the axiomat given section thu two theori coincid answer question kozen complet complex kozen smith show equat theori continu kleen algebra test complet relat model admit consist set guard string model analog regular set string finit alphabet kleen algebra without test use techniqu base kozen also shown kozen smith equat theori kleen algebra test continu kleen algebra test coincid result analog complet result kozen kleen algebra without test result impli equat theori kleen algebra test reduc pdl therefor decid exponenti time shown differ method problem actual pspacecomplet cohen et al thu harder equat theori kleen algebra known pspacecomplet stockmey meyer acknowledg thank erni cohen neal glew david gri david harel greg morrisett vaughan pratt fred b schneider frederick smith dave walker anonym refere valuabl comment indebt erni cohen kind permiss includ previous unpublish result earlier version articl kozen theorem r design analysi comput algorithm algebra regular express new finit complet solvabl quasiequ calculu algebra regular languag closur algorithm starheight problem regular languag transduct contextfre languag une remarqu sur le system complet didentit rationnel hypothes kleen algebra lazi cach complex kleen algebra test regular algebra finit machin proposit dynam logic regular program decid problem ration subset free partial commut monoid ration data structur applic folk theorem gener theori flowchart semir convex polygon zerosum cycl prob lem represent event nerv net finit automata induct vs kleen algebra close semir design analysi algorithm complet theorem kleen algebra algebra regular event kleen algebra test commut condit complex reason kleen algebra kleen algebra test complet decidabil iti logic program complet system bration ident kleen parikh theorem complet semir algorithm logic applic relat algebra transit closur action logic pure induct defin relat algebra regular event kleen theorem revisit formal path kleen chomski trend two complet axiom system algebra regular event word problem requir exponenti time calculu relat revis novemb tr kleen parikh theorem complet semir kleen theorem revisit decid problem ration subset free partial commut monoid kleen algebra close semir dynam algebra wellbehav fragment relat algebra semir convex polygon zerosum cycl problem action logic pure induct logic program design analysi algorithm complet system inlineequ f scbscf inlineequationr ident complet theorem kleen algebra algebra regular event two complet axiom system algebra regular event folk theorem flow diagram ture machin languag two format rule semir automata languag kleen algebra withtest commut condit kleen algebra test induct vs continu complex reason kleen algebra word problem requir exponenti timepreliminari report complex kleen algebra test ctr hubi chen riccardo pucella coalgebra approach kleen algebra test theoret comput scienc v n p octob dexter kozen result dynam model theori scienc comput program v n p may riccardo pucella logic verif equat verif acm sigact new v n june klausdiet schew bernhard thalheim conceptu model web inform system data knowledg engin v n p august dexter kozen jerzi tiuryn substructur logic partial correct acm transact comput logic tocl v n p juli therrezinha fernand jule desharnai describ data flow analysi techniqu kleen algebra scienc comput program v n p march sorin lerner todd millstein erika rice craig chamber autom sound proof dataflow analys transform via local rule acm sigplan notic v n p januari dexter kozen hoar logic kleen algebra test acm transact comput logic tocl v n p juli bernhard mller georg struth algebra modal oper partial correct theoret comput scienc v n p februari klausdiet schew bernhard thalheim aleksand binemannzdanowicz roland kaschek thoma kuss bernd tschiedel conceptu view webbas elearn system educ inform technolog v n p januari j von wright toward refin algebra scienc comput program v n p may bernhard mller kleen get lazi scienc comput program v n p march maarten marx condit xpath acm transact databas system tod v n p decemb jule desharnai bernhard mller georg struth kleen algebra domain acm transact comput logic tocl v n p octob klausdiet schew bernhard thalheim personalis web inform system term rewrit approach data knowledg engin v n p juli fairouz tchier demon fix point acta cybernetica v n p januari