t latch optim circuit gener highlevel descript a gatelevel descript finit state machin fsm tradeoff number latch size logic implement nextstat output function typic initi implement gener via explicit state assign translat highlevel languag tradeoff subsequ lightli explor effici explor good latchlog tradeoff larg design gener highlevel specif reduc number latch control logic size demonstr efficaci techniqu larg industri exampl b introduct gatelevel descript nite state machin fsm tradeoo number latch size logic implement nextstat logic tradeoo exploit two level gener initi implement subsequ logic optim step background state assign gener state encod initi latchlog implement higher level design process date primarili two approach use explicit state assign begin explicit state transit graph choos minimum latch encod minim size combin logic dbsv vsv har state assign highlevel languag choos encod accord delay statement specic reli logic synthesi later optim gatelevel implement bt explicit state assign impract larg design despit sophist techniqu determin optim assign produc result far wors handcod implement furthermor explicit state assign program target greaterthanminimumlatch impl mentat current technolog eg fpga longer necessari minim number latch often produc prohibit larg combin logic onehot encod also appli explicit state graph one latch use state result logic small fast sinc state need encod decod howev number latch huge onehot implement dioecult start place logic synthesi automat techniqu reduc number latch onehot implement produc good tradeoo resoundingli success state assign highlevel languag typic done statementbystat transla tion result natur insert regist delay statement descript good start point logic synthesi result far latch requir implement design bt even number latch import nal implement mani drastic reduc eoecienc mani synthesi optim algorithm eg symbol state travers state assign latchlog tradeoo explor via logic optim standard techniqu eg extract common factor function simplic retim may result latchlog rearrang larg state assign xed optim improv implement given assign goal retim resynthesi msbsv jointli optim latch posit combin logic optim potenti limit initi state assign rr nsigma ellen m sentovich horia toma grard berri remov redund latch done ubiquit term iredund latchesj use ubiquit varieti mean latch fanout primari output latch constant entir state space latch constant reachabl state space latch equival latch sophist denit consid simpl redund latch remov latch fanout latch constant result straightforward equival state variabl ident remov done part sever work eg ssm current bdd symbol travers techniqu also simpl oper robust algorithm singl latch remov publish ln directli relev singl latch remov algorithm describ section treat thoroughli section exact precis replac singl latch logic far expens number latch exce minimum log reachabl gamma state even small circuit qcc gener techniqu reencod nite state machin given work relev eg control size encodingdecod logic target quit dioeerent goal reencod tri match encod two dioeerent similar machin order speed symbol travers approach complet explor latchlog tradeoo certainli feasibl necessari nonetheless suoecient rich choic solut avail especi varieti implement found today technolog exampl ffl one may target implement hardwar softwar ffl hardwar implement may target nal custom design fpga board emul ffl current specic may preliminari one not intend implement use veric function properti three case optim criteria quit dioeerent focu eoecient explor latchlog tradeoo design gener highlevel specic particular begin design gener esterel descript initi encod gener esterel compil natur one respect behavior design contain mani redund regist develop algorithm remov redund regist target algorithm work well larg design remov regist cheapli possibl ie easili discov redund regist abl easili replac minimum amount addit logic gener optim solut consid nal implement cost andor eoecaci intermedi represent key result includ follow ffl algorithm eoecient enough provid signic choic implement regard latchlog tradeoo larg circuit result direct publish thu far awar of ffl appli simpl easi comput heurist latch reduct get close minimum number latch possibl given reachabl state set almost exampl obtain nal number latch less equal log jrj set reachabl state ffl work increment initi implement taken highlevel languag strive preserv given structur size result logic remain tractabl even approach minimum number latch inria latch optim circuit gener highlevel descript ffl result maximum latch remov term area result logic compar favor obtain tradit irobustj techniqu extract state transit graph run explicit state encod program perform logic optim result usual obtain smaller implement much less time furthermor observ blowup area initi implement state assign result long logic optim runtim experi increment techniqu could make comparison rel small exampl explicit state transit graph expens comput ffl runtim latch remov algorithm insignic reachabl state set comput initi subsequ latch redund determin compar trivial amount time set overview techniqu appli heurist techniqu success remov redund latch control size combin logic complet latch remov techniqu could implement extract explicit state transit graph perform exact state minim run state assign program gener minimumlatch encod far expens yield insight latchlog tradeoo instead success remov latch use subset inform use aforement complet scheme for exampl consid reachabl state equival state realm gener heurist procedur might be comput bdd latch output auxiliari function eg equival state reachabl state controllabilityobserv inform environ appli algorithm remov latch sequenti behavior unchang respect environ describ auxiliari function iter remov mani latch possibl mani latch desir given constraint size combin logic gener algorithm nd scheme still expens industri applic robust necessari demonstr experiment choos simpler scheme comput reachabl state machin determin set latch may easili remov preserv reachabl state set among these choos set latch remov base cost estim remov latch add logic optim iter remov mani latch possibl mani latch desir given constraint size combin logic import note onelatchremov step propos algorithm reencod state consid state pair easili merg gener reencod pair reachabl state unreach state give pair singl new encod pairmerg oper done way ffl comput easi determin pair rr nsigma ellen m sentovich horia toma grard berri m figur gener circuit transform ffl inexpens bdd size logic size perform merg updat reachabl state ffl exist logic preserv much possibl contain valuabl inform structur circuit way comput requir remain tractabl larg circuit result addit combin logic which usual limit factor increment reencod algorithm control import note transform proven preserv behavior reachabl state set remain correct everi overapproxim reachabl state set therefor could use conjunct eoecient techniqu approxim reachabl analysi chm circuit transform transform illustr figur origin fsm transform one call ng set latch transform remov latch indic set i conveni keep indic remain latch ig assum l latch next state vector l gener c call encod function e type given vector function i decod function type given vector set reachabl state resp denot characterist function r resp r thu r r impli let r r denot initi state context say equival r properti transform satisfi function repres polynomi bdd input variabl consist call k d l k r l k r f denot polynomi bdd set variabl x anoth set variabl denot f yx result substitut x k k f y x result substitut x k complement k respect denot f x f x posit neg cofactor f respect x algorithm section sever algorithm latch remov describ summari singlelatch remov determin latch remov individu replac combin function latch inria latch optim circuit gener highlevel descript determin pair latch remov replac singl latch whose input combin function latch onehotbi search onehot encod replac everi three latch two latch combin function replac n latch latch new combin function latch follow section speci precis accord ffl condit latch remov ffl logic transform requir circuit ie specic e figur note mani choic function implement chosen describ one algorithm reason choic subsequ eoeect optim describ section ffl proof transform valid note new initi state trivial comput encod function e henc discuss further ffl brief descript algorithm note everi case r increment eoecient updat comput iter transform singlelatch singl latch remov nd replac latch substitut combin function latch condit singl latch l replac combin function other r l condit origin given bcm satisfact impli l distinguish reachabl state reencod coupl reachabl state form l l unreach state l l produc state l n similarli gener subset latch satisfi condit singl latch remov remain subset remov latch may chang appli heurist techniqu describ algorithm below determin latch remov ln exact branchandbound algorithm use determin maximum number singl latch remov paper indic bound heurist power exact result obtain reason amount time experi perform small exampl largest reduct number latch largest total number latch design s s latch mani redund latch exact algorithm far expens empir observ result nearli match singlelatch algorithm furthermor reduc number latch even algorithm describ sequel transform latch l remov logic function e ad e dene e k y d set k l rr nsigma ellen m sentovich horia toma grard berri singlelatchm r removedlist find remov latch bestlatchcost foreach latch l c l bestlatchcost bestlatchcost j break removedlist removedlist removedlist j oe return comput modifi m foreach l removedlist foreach l removelatchm l rnew l r rnew figur transform let l impli r l two algorithm implement singl latch remov pseudocod given figur inria latch optim circuit gener highlevel descript singlelatchm r bound removablelist removedlist foreach latch l transform removablelist removablelist l removablelist j oe return foreach latch l removablelist stillcanberemovedremovedlist l removelatchm l removedlist removedlist figur transform algorithm greedili select remov one latch time base cost function relat potenti remov latch use branch heurist ln computecost set c l j jrj onset size bdd r absolut valu term highest latch potenti distinguish state select latch lowest c l leav latch highest potenti thu heurist maxim chanc remov latch furthermor heurist impli minimum number minterm chang encod space observ help control size overal logic select latch r updat though latch alreadi remov process iter set latch remov simultan comput remov replac combin logic depend remain latch algorithm comput maxim remov set henc iter necessari note upon remov latch output variabl implement input latch set result simplic combin logic c addit comput directli initi r smooth variabl remov l simultan remov thermor oper perform order sinc commut cofactor commut altern r could updat variabl remov next comput updat r latter techniqu requir less comput remov creat function depend upon variabl eventu remov henc increas level logic strive control size depth logic comput time signic prefer former method algorithm select set latch accord cost bound base bdd size computecost return number support variabl bdd estim bdd size for manipul nal implement size result logic d cours number bdd support variabl tight measur implement size nonetheless rr nsigma ellen m sentovich horia toma grard berri foreach latch l foreach latch l j j isremovabl l l j transform removelatchm l r l figur transform by algorithm correl level dioecult estim implement size without synthes design sinc set latch select accord individu remov condit r guarante remov simultan condit check latch remov second part algorithm must recomput well ensur depend remain latch entir process iter increas cost bound transform by condit two latch l l j replac singl latch l satisfact condit impli valid pair reachabl state unreach state reencod coupl reachabl state l l unreach state l l produc l n is l l replac l replac l transform l l j satisfi condit one remov l set ae proof let l r k k j k let l l sinc rst term condit impli r l l j l j similarli l l j f g thu l reachabl state l inria latch optim circuit gener highlevel descript algorithm pseudocod algorithm shown figur latch pair examin replac singl latch possibl note case input remov latch l cannot set e j depend it therefor subsequ logic reduct c transform onehotbi transform specic onehot encod design note singl latch remov algorithm appli onehotencod design one latch remov even exact algorithm appli even though design jlj latch minimum log jlj algorithm rst search part encod space onehot encod replac everi three latch two part encod condit condit latch onehotencod given r l transform group three latch l l i l i replac deltal l proof algorithm omit proof breviti describ algorithm detail special heurist straightforward implement transform nbyn nbyn algorithm consid entir encod space search statepair merg rather restrict merg across plane small cube as case singl by algorithm two part first encod modi without remov latch cluster exist encod toward all encod call migratest next result encod check see reachabl state pair mirror state all variabl complement transform migratest condit condit encod shift toward origin given regist remov step reachabl state l deltar l reencod l deltar l r transform safe map state reachabl set unus encod in unreach set transform given l satis machin reencod follow r l rr nsigma ellen m sentovich horia toma grard berri let l shannon cofactor l final l r l algorithm greedili move encod toward origin boolean space algorithm implement simpli iter latch check condit perform transform possibl motiv subsequ foldstat oper perform reachabl state ham distanc ne gamma origin could choos point boolean space around cluster encod all encod good choic esterel circuit and believ other gener highlevel descript reason that initi encod onehot close onehot igrouphotj contain mani s migratest add exorbit amount logic rather iter complet check foldstat condit iter stop satis reachabl state updat latch visit follow transform foldstat reencod done choos latch l state encod l l l encod unchang l state variabl invert latch l remov exampl condit satis choos rst bit remov latch l new encod r condit condit state merg given transform transform remov regist l set ae proof let l r let l l shannon expans rl fact sinc condit ll r l final l j i similarli l algorithm implement directli reachabl state updat follow suoecient necessari condit inria latch optim circuit gener highlevel descript comment algorithm must emphas select algorithm heurist focu primarili tradit logic optim metric goal explor latchlog tradeoo instead ffl maintain initi exist logic structur extent possibl reaeect structur given highlevel descript ffl use metric relat perform algorithm size d e logic control over tri overli pessim logic synthesi ffl leav logic optim exist tool special purpos heurist import heurist describ relat care condit select e case actual set combin function use singl one set aris use unreach state care condit indic choic descript e function exampl singlelatch algorithm function satis r l would correct experi dioeerent choic found function small enough degre aeexibl use level furthermor sinc aris sole reachabl state set inform use instead subsequ logic optim mani heurist employ select latch minim bdd minim implement optim algorithm perform etc focu nding good implement explor reason subset latchlog tradeoo given avail tool stateoftheart bdd technolog logic optim etc design domain rather attempt implement exact algorithm thoroughli test larg set heurist whose nal valu dioecult measur test number heurist especi select e choic function implement reaeect result experi similar algorithm note by gener singl latch remov algorithm gener replac regist etc found success gener improv result suoecient justifi rapidli increas cost note nbyn algorithm describ gener by complet singlelatch algorithm complet nish singl latch remov maintain reachabl state set l claim made remov sever latch criteria transform by complet may possibl two latch replac one latch addit combin logic replac algorithm similarli nbyn algorithm complet implement result experi shown nding good latch encod perform optim dioecult problem yet import one encod strongli eoeect subsequ optim know log jrj encod usual impli exorbit combin logic given particular encod cannot predict size combin logic be intuit appli tradeoo number latch perform veric algorithm rr nsigma ellen m sentovich horia toma grard berri aim implement develop tool allow us make estim start point combin optim hardwar softwar design veric two dioeerent metric impli need dioeerent strategi combin latch remov logic optim implement implement program remlatch use tiger librari cmt which contain bdd packag reachabl state comput implement latch remov algorithm berkeley si environ ssl perform combin logic optim use mainli two script logic optim si fast less robust one combopt expens one includ eg fullsimplifi blifopt actual logic cost estim liter count si comput cost regist term liter vari depend target implement found reason measur hardwar softwar produc implement optim rst strategi orient hardwar softwar implement basi latch remov case singlelatch cost function bound size support bdd logic replac latch d transit bdd logic costli found bdd support size best measur control blowup as oppos guess base liter count recal singlelatch algorithm actual reduc size c overal logic cost use postsynthesi measur liter count vari littl see section experi observ attract congur discov even circuit larg intermedi bdd gener case subsequ logic optim success reduc implement size reason iter singlelatch relax cost condit continu by foldstat algorithm expens term addit logic by necess perform migrateto add signic logic prohibit use nbyn hardwar softwar implement strategi veric optim second strategi orient improv time taken vericationbas algorithm experi demonstr reduc number latch posit eoeect perform veric techniqu bdd reachabl state decreas size size combin logic grow slowli reason primarili number latch strong eoeect bdd size there two bdd variabl per latch fsm veric thu strategi use singlelatch heurist maxim number remov latch follow iter by complet latter appli altern logic optim ensur success nite state machin reason size result phase encourag mainli suoecient control addit logic use blifopt script largest circuit cours possibl use combopt script logic grew quickli consequ restrict number latch remov nonetheless abl reduc latch improv veric time abl perform optim previous explor topic handl larg circuit section strategi explor goal third strategi minim number latch studi behavior algorithm properti nal circuit interestingli abl almost case reduc inria latch optim circuit gener highlevel descript circuit state reg exact singl minimum tabl singlelatch vs exact singl remov number latch log jrj give indic power algorithm addit found larg exampl remain reasonablys even number latch decreas dramat report extens maximum latch remov compar strategi section control logic size alreadi tailor algorithm nd state pair easi merg reencod therebi minim modifi reach state set function determin necessari comput implement logic start bdd new logic must transform logicg represent two place control size introduc logic rst keep bdd size small goal use algorithm tiger bdd packag creat logic bdd linear number bdd node second use formula e logic directli implement function logic gate comput function bdd substitut bdd result creat logic gate techniqu increas number level circuit must use caution result rst set test isca sequenti test benchmark use comparison exact singl latch algorithm ln result shown tabl result exact algorithm better runtim comparison would fair implement exact algorithm author algorithm ran second isca benchmark compar favor result ln implement exact algorithm ran hour smallest esterel exampl benchmark use synthes esterel v compil simpli test program other larg industri design tcint renault snecma sequenceur trapp particularli larg interest exampl two possibl start point design gener directli esterel compil manag initi implement term encod logic far mani redund regist case aris exampl initi combin cycl design causal causal analysi program sbt gener initi acycl implement directli bdd thu huge term logic eg trapp tabl initi circuit compar minimumlatch remlatch result optim combopt obtain close minimum number latch exampl logic increas remain reason mani case decreas due remov mani simpli redund latch gate fact sequenceur tcintnocount trapp report minimum number latch logic increas exorbit eg tcintnocount obtain latch version liter sequenceur latch version liter cpu time report tabl experi run dec alpha station rr nsigma ellen m sentovich horia toma grard berri initi remlatch circuit in out state min reg lit reg lit abc renault runner sequenceur tcintnocount trapp tabl initi version vs minimumlatch version circuit reachablest singl by merg fold abc abcdef control controlecount renault runner sequenceur snecma tcint tcintnocount trapp tabl cpu second dec alpha remlatch novasi circuit reg liter reg liter state abc control controlecount tcintnocount traoec tabl remlatch minimumlatch vs novasi time cpu second tabl show seri cumul time run algorithm success begin reachabl state comput progress add time algorithm runtim remain order magnitud initi reachabl state comput note tcint mergest condit satis immedi run quickli tabl report minimumlatchblifopt result versu obtain combin stategraph extract exact state minim state assign nova logic optim si si rug script blifopt tcint exampl actual run latch remov optim obtain implement could extract state transit graph still except control circuit novasi combin perform much wors case abcdef initi nova circuit larg run optim even though circuit gener esterel one case equival state found aoeect minimum number latch give indic lose much explicitli consid equival state strategi inria latch optim circuit gener highlevel descript blifopt bestremlatch circuit in out reg lit reg lit renault runner tcint tcintnocount sequenceur trapp tabl blifopt vs bestremlatch singledat sis_singledat figur graph latch vs liter tabl compar best logic optim result obtain appli blifopt initi circuit best remlatch result obtain combin latch remov optim small exampl abl reduc number latch minimum thorough explor possibl here tri mani combin latch remov optim algorithm strategi discuss section reaeect experi larger le obtain minimum due size encod logic theoret limit algorithm instead use strategi similar success small exampl number liter compar despit fact remlatch must add encod decod logic furthermor number latch much lower sequenceur trapp signic logic optim done without rst remov latch present novel result exampl graph figur show evolut latchliter tradeoo one exampl applic standard strategi all exampl behav similarli observ rst number liter remain almost constant singl latch remov recal c actual rr nsigma ellen m sentovich horia toma grard berri figur graph veric time vs number latch reduc case by algorithm logic tend increas quickli still success reduc logic continu by except sequenceur logic size must alway care monitor similar phenomenon observ applic migrat fold graph figur show evolut cpu time selfver one exampl number latch decreas best point latch obtain singl by without iter by complet exampl behav similarli futur work rst goal use result work preprocessor improv logic optim critic point sinc circuit produc causal analysi larg dioecult cope with experiment work indic partit beyond e improv result stage next step exploit particular properti esterel program includ esterel relat form care condit circuit structur particular esterelgener implement cost function base structur analysi could improv veric time also allow good tradeoo logic optim import larg design exploit given natur circuit structur hardwar implement use fpga explor increas number latch via retim improv critic path fact retimingbas techniqu could use direct stage ie reduc number latch reduc critic path increas new latch acknowledg work support part nation scienc foundat grant int french geni mesr inria project inria latch optim circuit gener highlevel descript r new idea symbol manipul finit state machin optim control synthesi use esterel structur approach state space decomposit approxim reachabl analysi optim state assign finit state machin state assign problem sequenti machin exact redund state regist remov base binari decis diagram retim resyn thesi optim sequenti network combin techniqu increment fsm reencod simplifi veric symbol travers construct analysi cyclic circuit si system sequenti circuit synthesi sequenti circuit design use synthesi optim detect equival state variabl finit state machin veric nova state assign finit state machin optim twolevel logic implement tr sequenti circuit design use synthesi optim structur approach state space decomposit approxim reachabl analysi construct analysi cyclic circuit ctr ellen m sentovich horia toma gard berri effici latch optim use exclus set proceed th annual confer design autom p june anaheim california unit state andrew seawright wolfgang meyer partit optim control synthes hierarch highlevel descript proceed th annual confer design autom p june san francisco california unit state yunjian jiang robert k brayton softwar synthesi synchron specif use logic simul techniqu proceed th confer design autom june new orlean louisiana usa priyank kalla maciej j ciesielski perform driven resynthesi exploit retiminginduc state regist equival proceed confer design autom test europ pe januari munich germani hahnsang kim thierri turletti amar bouali epspectra formal toolkit develop dsp softwar applic theori practic logic program v n p juli stefano quer gianpiero cabodi paolo camurati luciano lavagno ellen m sentovich robert k brayton verif similar fsm mix increment reencod reachabl analysi combin check formal method system design v n p oct klau winkelmann formal method design embed systemsth sacr experi formal method system design v n p juli