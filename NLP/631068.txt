t experiment comparison effect branch test data flow test a experi compar effect allus alledg test data adequaci criteria discuss experi design overcom defici previou softwar test experi larg number test set randomli gener nine subject program subtl error test set percentag execut edg definitionus associ cover measur determin whether test set expos error hypothesi test use investig whether allus adequ test set like expos error alledg adequ test set logist regress analysi use investig whether probabl test set expos error increas percentag definitionus associ edg cover increas error expos abil shown strongli posit correl percentag cover definitionus associ four nine subject error expos abil also shown posit correl percentag cover edg four differ subject relationship weaker b introduct consider effort softwar test research focuss develop softwar test data adequaci criteria is criteria use determin softwar test enough releas numer test data adequaci criteria propos includ base control flow analysi data flow analysi program mutat tool base sever criteria built mani theoret studi formal properti certain aspect relat one anoth done surprisingli rel littl work focuss crucial question good expos error test set deem adequ accord criteria paper describ experi address question one factor make difficult answer question given program p adequaci criterion c typic larg number adequ test set p incorrect usual test set expos error other not previou experi fail sampl larg space test set statist sound way thu given potenti mislead result goal research twofold develop experi design allow errordetect abil adequaci criteria compar meaning way use design measur compar sever adequaci criteria varieti subject program section below defin notion effect adequaci criterion that given erron program specif measur likelihood adequ set expos error higher effect criterion c confid program test cadequ test set without exposur error inde correct experi measur effect sampl space cadequ test set nine subject program gener larg number test set determin extent test set satisfi certain adequaci criteria determin whether test set expos error data use measur compar effect sever adequaci criteria address sever relat question limit attent three adequaci criteria alledg criterion also known branch test wellknown techniqu wide use practic other sophist adequaci criteria requir test data caus execut edg subject program flow graph allus data flow test criterion requir test data caus execut path go point variabl assign valu point valu use receiv consider attent research commun consid promis mani test research comparison also consid null criterion deem test set adequ design experi allow us address three type relat question given subject program pair criteria c c investig overal comparison criteria test set satisfi criterion c like detect error satisfi c gener test set satisfi x requir induc c like detect error satisfi requir induc c comparison criteria fix test set size given test set size n test set size n satisfi criterion c like detect error satisfi c relationship coverag effect likelihood test set detect error depend extent test set satisfi criterion size test set overal comparison criteria give insight criterion select cost factor c effect c c typic demand larger test set c one may ask whether increas effect aris differ test set size other intrins characterist criteria comparison criteria fix test set size address issu factor differ test set size lastli investig relationship coverag effect use practic unusu demand partial satisfact criterion believ result report interest test research test practition practition may primarili interest experi result implic choos adequaci criterion research may also find novel design experi interest paper organ follow section paper defin effect review definit relev adequaci criteria section describ design experi section describ statist analysi techniqu use section describ subject program experi perform experi result present section discuss section experi design compar relat work section conclus present section background effect adequaci criterion goal test detect error program say test case expos error program p input t ps output differ specifi output test set expos error expos least one test case expos error consid follow model test process ffl test set gener use test data gener techniqu ffl program execut test set output check adequaci test set check ffl least one test case expos error program debug regress test error expos test set inadequ addit test case gener ffl process continu program execut adequ test set fail expos error point program releas although program guarante correct better adequaci criterion confid one correct note explicitli distinguish two aspect test test gener applic test data adequaci criterion test gener techniqu algorithm gener test case wherea adequaci criterion predic determin whether test process finish test gener algorithm adequaci criteria base structur program test call programbas whitebox base structur program call blackbox blackbox techniqu typic specificationbas although some random test not possibl principl use white box techniqu basi test gener exampl one could examin program text devis test case caus execut particular branch howev usual much difficult gener test case caus execut particular branch simpli check whether branch execut given test case thu practic systemat approach test gener usual blackbox systemat approach check adequaci often whitebox black box test gener techniqu may involv devis test case intend exercis particular aspect specif may randomli sampl specif domain test techniqu investig paper combin black box test gener techniqu whitebox adequaci criteria particular explor whether one white box adequaci criterion like anoth detect bug particular random black box test strategi use defin measur good adequaci criterion captur intuit let p incorrect program whose specif s let c adequaci criterion consid test set satisfi c p s may case test set expos error other not larg percentag cadequ test set expos error c effect criterion program formal consid given probabl distribut space cadequ test set program p specif s defin effect c probabl test set select randomli accord distribut expos error practic test set gener use particular test gener strategi g random test given input distribut form blackbox test systemat whitebox strategi induc distribut space cadequ test set defin effect criterion c p rel test gener strategi g probabl cadequ test set gener g expos error p paper concern effect criteria rel variou random test gener strategi see notion effect captur intuit good adequaci criterion let pc p denot effect criterion c program p probabl randomli select cadequ test set expos error ie releas p treat correct particular p incorrect probabl test cadequ test set mistakenli believ p correct suppos pc p class p then sinc probabl mistakenli believ p correct use c adequaci criterion least great use c adequaci criterion thu test p without expos error least much confid p correct use criterion c use criterion c weiss defin gener notion effect adequaci criterion discuss relat confid program correct previou comparison adequaci criteria base investig whether one criterion subsum anoth criterion c subsum criterion c if everi program p specif s everi test set satisfi c also satisfi c might seem first glanc c subsum c c guarante effect c everi program case may happen program specif s test gener strategi g test set satisfi c may better expos error satisfi c hamlet discuss relat issu weyuk weiss hamlet frankl weyuk examin relationship subsumpt errordetect abil definit adequaci criteria studi compar effect three adequaci criteria alledg criterion allus criterion null criterion two criteria alledg all use member famili criteria sometim call structur test criteria requir test data caus execut repres certain set path flow graph subject program null criterion consid test set adequ thu applic null criterion use adequaci criterion all includ null criterion studi order allow comparison alledg allus adequ set arbitrari set alledg criterion also known branch test demand everi edg program flow graph execut least one test case alledg known rel weak criterion sens often easi devis test set cover edg buggi program without expos bug much demand complet impract criterion path test requir execut everi path program flow graph effort bridg gap branchtest pathtest rapp weyuk defin famili adequaci criteria base data flow analysi similar done optim compil allus criterion belong famili data flow test criteria also defin roughli speak criteria demand test data exercis path point variabl defin point valu subsequ use occurr variabl subject program classifi either definit valu store use valu fetch exampl variabl occurr lefthand side assign statement definit variabl occurr right hand side assign statement boolean express condit statement typic use definitionus associ dua tripl duv node program flow graph variabl v defin u node edg v use definitionclear path respect v u test case cover dua duv caus execut path goe u without pass intermedi node v redefin allus criterion demand test data cover everi dua subject program previous design implement tool asset check extent given test set given pascal program satisfi allus variou data flow test criteria asset analyz subject program determin definitionus associ particular program unit build modifi program whose function ident origin subject program except also output trace path follow test case execut execut modifi program given test set asset analyz trace determin extent adequaci criterion satisfi output list definitionus associ still need cover experi modifi asset could also check whether test set satisfi alledg replac asset interact user interfac batch interfac one problem alledg allus criteria origin defin program adequ test set exist problem aris infeas path program ie path never execut problem origin criteria defin program written simpl languag definit subsequ extend frankl weyuk program written pascal adopt convent notat here particularli seriou allus criterion mani commonplac program adequ test set exist exampl problem occur program loop lower upper bound nonequ constant frankl weyuk defin new famili criteria feasibl data flow test criteria circumv problem elimin unexecut edg definitionus associ consider show reason restrict subject program feasibl version allus subsum feasibl version alledg import note origin infeas criteria realli use practic appli program infeas edg dua feasibl version program ideal tester examin program elimin infeas edg dua consider realiti often stop test arbitrari percentag edg dua cover without investig whether remain edgesdua infeas whether indic defici test set reason felt also import examin relationship percentag dua cover test set likelihood expos error remaind paper will abus notat use term alledg allus refer feasibl version criteria experi design goal experi measur compar effect variou adequaci criteria rel random test gener strategi sever differ subject program measur effect criterion c ffl gener larg number cadequ test set ffl execut subject program test set ffl check output consid test set expos program give wrong output least one element test set ffl calcul proport cadequ test set expos proport cadequ test set expos error significantli higher proport cadequ test set expos error conclud criterion c effect c given program test gener strategi present experi gener test set randomli compar all edg allus null criteria program experi exact notion randomli gener test set use describ section below collect data way allow comparison famili variant alledg allus rather check whether test set satisfi alledg allus record number execut edg dua cover test set allow us use collect data measur effect alledg allus also criteria x edg coverag y dua coverag addit allow us investig correl percentag edg dua cover error expos abil subject program first identifi unexecut edg dua elimin consider gener larg set test case call univers execut test case univers check output record whether correct save trace path execut test case sampl space adequ test set follow select variou test set size n n gener mani test set randomli select n element univers use uniform distribut note use uniform distribut space test set rather use distribut aris practic test gener strategi determin whether test set expos use asset check mani execut edg dua cover path correspond test set care necessari choos appropri test set size gener test set small rel cover edg all dua result statist signific hand test set larg almost expos error make difficult distinguish effect two criteria overcom problem gener test set batch batch contain set fix size observ size larg small gener addit batch appropri size rang necessari stratif test set size also allow us investig whether allus effect alledg test set given size design experi impos sever constraint subject program ffl input domain program structur reason way gener univers test case exampl sever reason way randomli gener matric less clear randomli gener input oper system ffl larg number test case program execut necessari mean automat check correct output two subject matinv determin execut dua cover element univers dealt consid dua cover univers unexecut ffl failur rate program low ie error expos rel input univers otherwis almost test set big enough satisfi alledg would like expos error surpris discov mani program consid candid experi includ mani use previou softwar qualiti studi reject high failur rate avail tool support asset impos addit constraint subject program either written pascal short enough translat manual translat necessari program structur chang littl possibl note experi consid effect alledg adequ set gener effect alledg adequ set fail satisfi allus model situat tester releas program pass alledg adequ test set without care whether test set also satisfi allus altern model tester would classifi test set alledg adequ satisfi alledg satisfi allus allus shown effect alledg use model differ would even greater use altern model also note design introduc bia favor alledg use test set big enough insur select statist signific number allus adequ set signific number alledg adequ set result select mani alledg adequ set bigger thu like expos error alledg adequ set would select practition use model test process data analysi techniqu recal interest compar effect allus alledg null criterion varieti subject program treat subject program data separ experi throughout section refer effect criterion mean effect particular program test gener strategi clariti describ techniqu use compar allus alledg techniqu compar allus alledg null criterion compar coverag x dua coverag edg ident randomli chosen n cadequ test set x number expos least one error sampl proport good estim pc effect c fact probabl cadequ test set expos error govern binomi distribut pc minimum varianc unbias estim effect c ie good statist estim effect overal comparison criteria first question pose whether allus adequ test set significantli effect alledg adequ test set let p u proport allus adequ set expos error let e proport alledg adequ set expos error p u significantli higher e strong statist evid allus effect alledg not data support hypothesi observ suggest hypothesi test techniqu suitabl answer question hypothesi test research altern hypothesi pit null hypothesi data use determin whether one hypothesi like true other research hypothesi allus effect alledg express assert p e p u null hypothesi two criteria equal effect express p note chose onesid test want know whether allus effect alledg whether differ import realiz goal hypothesi test quit conserv uphold null hypothesi true unless data strong testimoni it case reject null hypothesi favor altern sinc use sampl proport estim effect criteria decis accept reject null hypothesi reduc decis whether differ sampl proport significantli larg particular reject e greater prespecifi critic valu use standard statist techniqu establish critic valu call sampl suffici larg least five expos five unexpos test set sampl suffici larg sampl differ p e approxim normal distribut mean p e assum parent popul binomi oe popul size enabl us calcul critic valu signific probabl confid interv p signific probabl indic strength evid reject hypothes confid interv give indic much better one criterion other all conserv interpret data chose signific level mean null hypothesi reject probabl alledg actual effect allus sever subject everi allus adequ test set expos error normal approxim could use case calcul confid interv separ p u p e inspect data show allus clearli effect alledg subject make analysi unnecessari comparison criteria fix size test set second question ask dealt effect test set size previou result allus adequaci criterion gener requir larger test set alledg criterion sinc probabl test set expos error increas size increas subject allus may effect alledg simpli demand larger test set hand increas effect allus may result way criterion subdivid input domain determin whether differ effect criteria primarili due differ size adequ test set analyz data bysiz basi tabl display sampl data subject program size arrang close size group intent tabl give descript evid relationship allus alledg fix size test set enough data also hypothesi test individu size group report result right hand column relationship coverag effect third question answer whether relationship extent test set satisfi allus or alledg criterion probabl test set expos error difficult question techniqu employ answer logist regress regress model give mean respons variabl particular group variabl function numer characterist group respons variabl predictor denot mean given fix valu ordinari linear or higher order regress model suitabl data respons variabl take yesno type valu expos not expos part regress equat put constraint valu jx right hand side take real valu wherea left hand side must lie right hand side also assum follow normal distribut wherea left hand side gener not seriou problem make linear regress poor choic model proport logist regress overcom problem provid mani import advantag well logist regress left hand side equat replac logit respons variabl log right hand side realvalu function predictor express frequent call odd ratio respons variabl jx lie odd ratio assum posit real valu logarithm logit assum real valu thu logist regress equat becom one neither left right hand side constrain algebra manipul show log exp fx equat regress equat goal find simplest function fx explain data well analysi treat test set size fraction coverag definitionus associ or edg predictor variabl use logist regress determin extent ani probabl expos error depend upon variabl use catmod modul sa assist regress analysi use maximum likelihood estim measur good fit test model paramet estim likelihood ratio subject program nine subject obtain seven program natur occur error three program drawn duran ntafo studi high failur rate made rest duranntafo subject unsuit experi ment program buggyfind textfmt transpos describ below use duran ntafo remaind came sourc obtain two subject buggyfind use two differ input distribut recal asset monitor coverag edg dua singl program unit obtain two subject matrix invers program instrument two differ procedur section describ program procedur select random test data them method use check output tabl give number line code edg dua execut edg execut dua instrument procedur proport failur caus test case univers subject loc edg dua exec exec failur edg dua rate detm strmtch textfmt transpos tabl subject program buggyfind hoar find program take input array index f permut element element left posit f less equal af element right posit f greater equal af boyer elspa levitt analyz erron variant program dub buggyfind repres fail attempt translat hoar program lisp experi translat lisp version pascal test use two differ distribut random input find test univers consist randomli gener array array size randomli select zero element randomli select rang valu f randomli select array size find univers contain one test case array element select f g rang n distribut close approxim uniform random select test case array size find find check output check whether element left posit f less equal af element right posit f greater equal af textformat goodenough gerhart analyz erron text format program identifi seven problem program trace five fault four fault either blatant use experi could replic pascal version program textfmt program pascal version goodenough gerhart correct textfmt program reinsert remain fault fault correspond goodenough gerhart problem n n caus lead blank adjac blankslinebreak handl improperli would like reinsert fault produc addit subject program either could replic pascal led failur rate high test case piec text charact long gener repeat uniform random select charact set consist uppercas letter lowercas letter blank newlin charact output check compar output text correct version use unix diff command transpos next subject program transpos routin spars matrix packag algorithm collect algorithm acm two fault subsequ identifi translat correct fortran program pascal reintroduc one fault univers could expos alleg fault failur occur first row matrix consist entir zero sinc spars matrix packag design reduc memori storag matric whose densiti exceed chose test case randomli among set r c matric densiti matrix transpos packag requir c r posit zero matric chosen randomli nonzero entri fill rowmajor ordin valu check output simpli compar element mij mji j stringmatch program two subject program bruteforc stringmatch program input text pattern suppos output locat first occurr pattern text occur zero pattern never occur first subject strmtch result flaw attempt modifi stringmatch program pascal textbook could handl variabl length text pattern error occur pattern length zero enter case program return valu two note sever reason specif program case return valu two among them previous observ allus criterion guarante expos error one dua execut pattern length zero know effect alledg null criterion program second erron string match program strmtch reflect differ error also occur natur implement maximum length pattern shorter be program sometim work truncat version pattern henc sometim erron report found match stringmatch program univers consist text pattern pair two letter alphabet text length pattern length rang zero four output check compar produc correct program matrix manipul three subject program deriv mathemat softwar packag written group project graduat softwar engin cours one program packag matrix invers program use lu decomposit error program implement error rather case choos known algorithm quit meet specif problem aros lu decomposit algorithm detect some all singular matric thu given singular matric program return error messag given other return matrix purport invers input matrix interest note sever wellknown numer method textbook describ lu decomposit algorithm brief mention singular problem thu easi imagin profession programm misus algorithm algorithm two step call decomposit backsolv decomposit step implement procedur ludcmp return lu decomposit rowwis permut input matrix backsolv step achiev repeat call procedur lubksb triangular matric use comput invers subject program matinv procedur ludcmp instrument matinv lubskb instrument case test set drawn univers consist squar matric size uniformli select integ entri select uniformli output check multipli output matrix input matrix compar ident matrix subject program determin use lu decomposit comput determin squar matrix program oper call ludcmp procedur multipli diagon element result lowertriangular matrix like matrix invers program determin produc error messag singular matric comput determin incorrectli other error program relat one anoth worth note set input two program fail ident instrument ludcmp procedur gener anoth univers way univers use matrix invers subject check output compar result obtain use ineffici correct program base calcul minor cofactor result result experi present below organ three subsect correspond three type question ask initi test set satisfi criterion c like detect error satisfi c given test set size test set satisfi criterion c like detect error satisfi c likelihood test set detect error depend extent test set satisfi criterion subsect present describ tabl summar data statist analysi interpret analysi overal comparison criteria tabl summar result comparison effect allus alledg allus null alledg null column label n e n u give total number adequ test set criteria alledg allus null respect column label give proport expos error sixth column tabl give signific probabl applic entri indic hypothesi test could appli ye column label p e p u indic allus significantli effect alledg column label p analog question answer question ye confid interv shown last column case normal assumpt held confid interv differ effect two criteria eg p case confid interv around effect criterion shown exampl first row tabl indic determin confid effect alledg lie wherea allus lie second row indic find confid effect allus greater alledg examin tabl show five nine subject allus effect alledg confid six subject allus effect null criterion five subject alledg effect null note strmtch allus would consid effect alledg confid interpret result given section subj n e confid detm ye vs find ye find matinv ye vs strmtch ye vs strmtch textfmt ye vs transpos tabl alledg vs allus subj confid detm ye vs find ye find matinv ye vs matinv strmtch ye vs strmtch ye textfmt ye vs transpos tabl null criterion vs allus subj detm find ye strmtch ye strmtch ye textfmt ye transpos ye tabl null criterion vs alledg subj n e sig confid detm strmtch ye strmtch ye textfmt ye vs transpos tabl allbuttwo dua vs allbuttwo edg next compar test set cover x dua test set cover edg particular tabl compar test set cover two dua cover two edg exampl sinc determin execut dua execut edg tabl compar dua coverag edg coverag program note although one program strmtch result hypothesi test chang ye no go coverag all buttwo coverag effect allus fell dramat sever subject hand one subject find allbuttwo dua coverag actual slightli effect dua coverag addit comparison x dua coverag edg coverag made examin raw data comparison criteria fix size test set tabl test set group accord size four nine subject allus adequ test set effect alledg adequ set nulladequ set similar size thu appear four five subject allus effect alledg four six allus effect null criterion improv effect attribut inher properti allus fact allus adequ test set larger averag alledg null adequ test set contrast alledg adequ set effect nulladequ set size subject indic that case alledg effect null increas effect primarili due fact alledg demand larger test set null criterion subj size n e ye strmtch transpos tabl alledg vs allus size detm ye strmtch transpos tabl null vs allus size detm find find strmtch strmtch transpos tabl null vs alledg size subject fs c detm strmtch transpos tabl logist regress result dua coverag subject fs c tabl logist regress result edg coverag relationship coverag effect result logist regress shown tabl discuss section regress equat form fs c function predictor variabl s test set size c fraction dua edg cover test set tabl give function fs c subject program abl find goodfit model asterisk tabl entri indic data scatter function give good fit complex offer much insight relationship exist coverag effect regress equat give us inform way effect test set depend all upon coverag criterion test set size function fs c sever term difficult understand much depend relationship inspect tabl alon howev subject fs c simpl enough one restrict one attent coeffici term contain highest power c coeffici posit larg magnitud effect depend strongli posit coverag case exampl find subject dua edg coverag find term involv c posit type coverag safe conclud effect strongli correl dua edg coverag subject program includ graph probexpos versu proport dua edg cover select test set size reader see relationship clearli figur allus alledg graph super impos distinguish them use dash line alledg graph dotdash line allus graph figur one see find probabl expos error increas monoton coverag increas test set test input fact test set size would true pick purpos onli subject relationship harder determin care analysi tabl howev show find matinv strmtch effect depend strongli posit coverag dua similarli analysi tabl show find matinv strmtch strmtch effect depend posit coverag edg graph case tend look much like graph strmtch illustr figur case probabl expos error neglig unless suffici larg percentag dua edg cover dua edg cover probabl rise sharpli plateau near offer possibl explan next section summari clear depend effect extent coverag allus criterion three nine subject fourth subject transpos probabl expos error increas percentag dua cover increas except drop slightli percentag get close four subject depend exist alledg criterion close examin data led us sever interest observ allus alway effect alledg null criterion case effect much effect contrast case alledg effect null criterion usual littl bit effect buggyfind allus perform significantli better alledg find univers use appar allus requir larger test set howev find univers use littl differ criteria also figur coverag vs probexpos find figur coverag vs probexpos strmtch figur coverag vs probexpos find figur coverag vs probexpos textfmt effect criterion dramat better find find show even rel minor chang test gener strategi profoundli influenc effect adequaci criterion blanket statement random test without refer particular input distribut use mislead matinv allus appear guarante detect error matinv differ procedur instrument allus perform poorli part due fact easi satisfi allus matinv partli due possibl procedur instrument matinv noth bug matinv detm involv instrument ludcmp procedur dua coverag appear guarante detect error case dua coverag much effect detm matinv vs interest show adequaci criterion less effect given procedur depend upon program procedur use four subject determin matinv textfmt strmtch coverag dua appear guarante detect error knew prior experi strmtch surpris see three program figur contain graph find figur two graph allus alledg test set size superimpos test set size alledg graph show probabl expos error monoton increas number cover edg increas allus graph upward slope roughli dua cover take downturn phenomenon might result insuffici data coverag combin good fit regress curv data graph shown figur data determin matinv found elsewher exhibit interest phenomenon high valu coverag probabl p error detect then coverag decreas point reach p decreas rapidli raw data corrobor thi ffl matinv effect goe coverag coverag ie test set cover least execut dua ffl strmtch effect coverag coverag all buton dua coverag all dua ffl textfmt effect dua coverag effect dua coverag fall strang enough valu c again aris fact test set coverag expos curv fit close data like way achiev coverag exactli particular set path execut test set execut set path guarante expos error time test set execut differ set path cover dua guarante expos error ffl determin effect goe coverag coverag thu appear case one dua whose coverag guarante error detect remain dua larg irrelev phenomenon profound consequ test practition might deal unexecut dua problem test arbitrari predetermin percentag dua cover happen test set fail cover crucial dua test set may much less like detect error cover execut dua exampl matinv total dua execut suppos decid test set cover dua deem adequ quit possibl test without hit crucial dua chanc expos error much less would coverag execut dua consequ recommend practition use data flow test put effort requir weed unexecut defus associ accept test set achiev coverag execut dua heurist present frankl issu affect cost use criterion discuss weiss close examin program allus guarante expos error gain insight situat allus seem perform well case fault could classifi miss path error ie situat programm forgot take special action certain circumst particularli interest structur test criteria usual consid poor expos miss path error sinc test case execut miss path explicitli demand howev case turn test case cover particular dua happen test case would taken miss path present consequ allus guarante error detect strmtch miss path would return write error messag null pattern input textfmt miss path would skip certain statement bufpo determin matinv miss path would return error messag input singular matrix manipul program explicit check singular presum omit effici reason relat work previou work compar test techniqu fall two categori theoret comparison adequaci criteria empir studi test gener techniqu mani theoret comparison adequaci criteria address error detect abil section summar simul experi analyt studi address fault detect abil variou test techniqu sever paper investig fault detect abil gener path test call partit test duran ntafo perform simul compar random test partit test which use hypothet input domain partit distribut error compar probabl techniqu would detect error conclus that although random test alway compar favor path test well enough cost effect altern consid result counterintuit hamlet taylor extens simul arriv precis statement relationship partit probabl failur rate effect corrobor duranntafo result jeng weyuk attack problem analyt show effect partit test depend greatli failur caus input distribut among subdomain partit frankl weyuk investig condit one criterion guarante like detect fault anoth found fact c subsum c guarante c better detect fault c stronger condit bear faultdetect abil also describ note studi use differ model test set select use program subdomain consid test set size mk aris ideal test gener scheme name independ random select k element sub domain use uniform distribut subdomain contrast variou valu n gener test set independ random select n element univers consid set adequ sever empir studi count number error detect particular techniqu program either natur seed error duran ntafo execut roughli randomli gener test case sever program calcul percentag expos error girgi woodward seed five textbook fortran program error subject variou test meth od hamlet point experi natur may give mislead result typic reli small number test set repres test tech niqu furthermor studi employ liber notion test case detect error experi basili selbi compar statement test partit boundari valu analysi coderead stepwis abstract differ somewhat other categori use human subject gener test evalu extent expertis influenc result use human subject type experi laudabl goal all long test human control human factor influenc result problem approach one cannot necessarili extrapol popul one tri model sinc human sampl may repres popul third categori studi involv measur extent test set gener use particular techniqu satisfi variou adequaci criteria extent test set satisfi one adequaci criterion also satisfi anoth exampl duran ntafo measur extent randomli gener test set roughli test case satisfi lcsaj alledg requir pair ter n criteria sever studi natur perform mutat test exampl demillo lipton sayward measur extent randomli gener test set satisfi mutat test buggyfind program offutt measur extent test set kill firstord mutant also kill secondord mutant note type studi address question errordetect abil cite studi contribut way toward better understand softwar test sever noteworthi differ experi describ paper experi ffl compar error detect abil adequaci criteria oppos error detect abil test gener techniqu oppos characterist adequaci criteria ffl design allow applic rigor statist techniqu ffl investig real adequaci criteria as oppos hypothet partit input domain real program natur occur bug none mention paper three attribut final note also mani experiment studi use rigor statist techniqu investig softwar qualiti issu howev sinc none aim evalu effect adequaci cri teria directli relev here conclus describ experi compar effect randomli gener test set adequ accord alledg allus null test data adequaci criteria unlik previou experi experi design allow statist meaning comparison errordetect abil adequaci criteria involv gener larg number test set subject program determin test set adequ accord criterion determin proport adequ test set expos least one error data analyz rigor use well establish statist techniqu first group question pose whether c effect c subject pair criteria five nine subject allus significantli effect alledg six subject allus significantli effect null criterion five subject alledg effect null closer examin data show sever case allus well actual well appear guarante error detect also compar test set partial satisfi allus partial satisfi alledg six subject test set cover two definitionus associ effect test set cover two edg thu test set cover or almost all dua sometim alway like expos error cover almost all edg second group question limit attent test set similar size allus adequ test set appear effect alledg adequ set similar size four nine subject four subject allus adequ test set appear effect null adequ set similar size contrast alledg adequ set effect null adequ set similar size subject indic case alledg effect null criterion increas effect due primarili fact alledg test set typic larger nulladequ test set case allus effect alledg null criterion increas effect appear due factor way criterion concentr failurecausinginput subdomain third group question investig whether probabl test set expos error depend size test set proport definitionus associ edg cover import question uncommon tester test research assum implicitli confid correct program proport extent adequaci criterion satisfi logist regress show four nine subject program error expos abil test set tend increas test set cover definitionus associ also show differ set four subject program weaker still posit correl errorexpos abil test set percentag edg cover set howev even subject probabl test set expos error depend proport definitionus associ edg cover depend usual highli nonlinear indic one confid correct program gener proport percentag edg dua cover summari result show allus extrem effect appear guarante error detect sever subject alway perform significantli better alledg null criterion subject did hand alledg effect subject fact none subject alledg almostalledg adequ test set perform significantli better randomli select nulladequ test set size make claim collect subject program repres softwar therefor believ sensibl extrapol result softwar gener primari contribut research methodolog use experi believ result sound interest motiv research addit even rel small scale experi allow us observ exist sever interest phenomena note section foremost direct futur research perform similar experi much larger collect subject includ larg program design could also use compar adequaci criteria experi compar effect variou adequaci criteria nonrandom test gener strategi use would also use hope research join us perform experi futur acknowledg author would like thank prof al baranchik hunter colleg mathemat depart advic statist method moham ghriga roongko doong help prepar subject program zhang ming help data analysi tarak goradia use comment earlier version paper hunter colleg geolog geographi depart use statist analysi softwar anonym refere made sever use suggest present materi r analysi ordin categor data compar effect softwar test strate gie statist concept method element statist formal evalu data flow path select criteria extend overview mothra softwar test environ hint test data select help practic programm evalu random test asset user manual use data flow inform select evalu softwar test partial symbol evalu path express version applic famili data flow test criteria assess faultdetect abil test method formal analysi fault detect abil test method experiment comparison error expos abil program test criteria toward theori test data select remark algorithm theoret comparison test method partit test inspir confid data flow analysi approach program test proof program find survey dynam analysi method approach program test experiment evalu assumpt independ multivers program data flow orient program test strategi algorithm spars matrix packag part i requir element test investig softwar test coupl effect numer recip art scientif comput select softwar test data use data flow inform experiment comparison three system test strate gie preliminari report experiment evalu effect random test faulttoler softwar method compar test data adequaci criteria comparison allus alledg design analyz partit test strategi comparison program test strate gie tr select softwar test data use data flow inform numer recip art scientif comput experiment evalu assumpt independ multivers program compar effect softwar test strategi applic famili data flow test criteria theoret comparison test method experiment comparison three system test strategi preliminari report formal evalu data flow path select criteria partit test inspir confid program test analyz partit test strategi comparison program test strategi assess faultdetect abil test method investig softwar test coupl effect remark algorithm approach program test proof program algorithm spars matrix packag part i f oh pascal formal analysi faultdetect abil test method selectmyampersandmdasha formal system test debug program symbol execut use data flow inform select evalu softwar test data ctr p g frankl s n weiss correct an experiment comparison effect branch test data flow test ieee transact softwar engin v n p decemb phylli g frankl oleg iakounenko empir studi test effect acm sigsoft softwar engin note v n p nov tohru matsuodani kazuhiko tsuda evalu debugtest effici duplic detect fault delay time repair inform sciencesinformat comput scienc intern journal v n p octob dick hamlet learn test program acm sigsoft softwar engin note v n p march kalpesh kapoor jonathan p bowen test condit fault class boolean specif acm transact softwar engin methodolog tosem v n pe juli jennif black emanuel melachrinoudi david kaeli bicriteria model allus test suit reduct proceed th intern confer softwar engin p may mari jean harrold gregg rothermel perform data flow test class acm sigsoft softwar engin note v n p dec n juristo a m moreno s vega toward build solid empir bodi knowledg test techniqu acm sigsoft softwar engin note v n septemb w eric wong joseph r horgan saul london aditya p mathur effect test set minim fault detect effect proceed th intern confer softwar engin p april seattl washington unit state dick hamlet subdomain test profil compon acm sigsoft softwar engin note v n p sept l c briand y labich y wang use simul empir investig test coverag criteria base statechart proceed th intern confer softwar engin p may martina marr antonia bertolino unconstrain dual use achiev allus coverag acm sigsoft softwar engin note v n p may w eric wong yu qi kendra cooper sourc codebas softwar risk assess proceed acm symposium appli comput march santa fe new mexico hong zhu formal analysi subsum relat softwar test adequaci criteria ieee transact softwar engin v n p april sira vega victor basili characteris schema softwar test techniqu empir softwar engin v n p octob phylli g frankl yuetang deng comparison deliv reliabl branch data flow oper test case studi acm sigsoft softwar engin note v n p sept bev littlewood peter t popov lorenzo strigini nick shryan model effect combin divers softwar fault detect techniqu ieee transact softwar engin v n p decemb elain j weyuk use oper distribut judg test progress proceed acm symposium appli comput march melbourn florida gregg rothermel lixin li christoph dupui margaret burnett see test methodolog test formbas visual program proceed th intern confer softwar engin p april kyoto japan chi keen low t y chen ralph rnnquist autom test case gener bdi agent autonom agent multiag system v n p novemb karen j rothermel curti r cook margaret m burnett justin schonfeld t r g green gregg rothermel wysiwyt test spreadsheet paradigm empir evalu proceed nd intern confer softwar engin p june limerick ireland a pretschner w prenning s wagner c khnel m baumgartn b sostawa r zlch t stauner one evalu modelbas test autom proceed th intern confer softwar engin may st loui mo usa lutz prechelt walter f tichi control experi assess benefit procedur argument type check ieee transact softwar engin v n p april phylli g frankl richard g hamlet bev littlewood lorenzo strigini evalu test method deliv reliabl ieee transact softwar engin v n p august phylli frankl dick hamlet bev littlewood lorenzo strigini choos test method deliv reliabl proceed th intern confer softwar engin p may boston massachusett unit state prem devanbu stuart g stubblebin cryptograph verif test coverag claim acm sigsoft softwar engin note v n p nov n juristo a m moreno s vega limit empir test techniqu knowledg lectur note empir softwar engin world scientif publish co inc river edg nj richard a demillo aditya p mathur w eric wong critic remark hierarchi faultdetect abil test method ieee transact softwar engin v n p octob heng lu w k chan t h tse test contextawar middlewarecentr program data flow approach rfidbas experiment proceed th acm sigsoft intern symposium foundat softwar engin novemb portland oregon usa matthew j rutherford antonio carzaniga alexand l wolf simulationbas test adequaci criteria distribut system proceed th acm sigsoft intern symposium foundat softwar engin novemb portland oregon usa natalia juristo ana m moreno sira vega review year test techniqu experi empir softwar engin v n p march alessandro orso saurabh sinha mari jean harrold classifi data depend presenc pointer program comprehens test debug acm transact softwar engin methodolog tosem v n p april jame h andrew susmita haldar yong lei felix chun hang li tool support random unit test proceed st intern workshop random test juli portland main mari jean harrold analysi test program except handl construct ieee transact softwar engin v n p septemb premkumar thoma devanbu stuart g stubblebin cryptograph verif test coverag claim ieee transact softwar engin v n p februari gregg rothermel margaret burnett lixin li christoph dupui andrei sheretov methodolog test spreadsheet acm transact softwar engin methodolog tosem v n p jan hyunsook sebastian elbaum gregg rothermel support control experiment test techniqu infrastructur potenti impact empir softwar engin v n p octob lionel c briand massimiliano di penta yvan labich assess improv statebas class test seri experi ieee transact softwar engin v n p novemb peifeng hu zhenyu zhang w k chan t h tse empir comparison direct indirect test result check approach proceed rd intern workshop softwar qualiti assur novemb portland oregon ramkrishna chatterje barbara g ryder william a landi complex pointsto analysi java presenc except ieee transact softwar engin v n p june gregor v bochmann alexandr petrenko protocol test review method relev softwar test proceed acm sigsoft intern symposium softwar test analysi p august seattl washington unit state barbara g ryder william a landi philip a stock sean zhang rita altuch schema interprocedur modif sideeffect analysi pointer alias acm transact program languag system topla v n p march hong zhu patrick a v hall john h r may softwar unit test coverag adequaci acm comput survey csur v n p dec