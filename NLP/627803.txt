t parallel mine associ rule a abstractw consid problem mine associ rule sharednoth multiprocessor present three algorithm explor spectrum tradeoff comput commun memori usag synchron use problemspecif inform best algorithm exhibit near perfect scaleup behavior yet requir minim overhead compar current best serial algorithm b introduct avail inexpens storag progress data captur technolog mani organ creat ultralarg databas busi scientif data trend expect grow complementari technolog trend progress network memori processor technolog open possibl access manipul massiv databas reason amount time data mine also call knowledg discoveri databas effici discoveri previous unknown pattern larg databas promis data mine deliv technolog enabl develop new breed decisionsupport applic discov associ rule import data mine problem recent consider research design fast algorithm task howev except work far concentr design serial algorithm sinc databas mine often larg measur gigabyt even terabyt parallel algorithm requir present paper three parallel algorithm mine associ rule order determin best method mine rule parallel explor spectrum tradeoff comput commun memori usag synchron use problemspecif inform parallel data mine specif focu count distribut algorithm minim commun even expens carri redund duplic comput parallel data distribut algorithm attempt util aggreg main memori system effect communicationhappi algorithm requir node broadcast local data node also depart comput scienc univers wisconsin madison candid distribut algorithm exploit semant particular problem hand reduc synchron processor segment databas base upon pattern differ transact support algorithm also incorpor load balanc algorithm base upon serial algorithm apriori first present chose apriori algorithm superior perform earlier algorithm shown prefer apriori apriorihybrid somewhat faster algorithm apriorihybrid harder parallel perform apriorihybrid sensit heurist determin paramet furthermor perform apriori made approxim apriorihybrid combin small workload sever apriori cycl singl workload requir one cycl algorithm quit similar apriori parallel techniqu directli appli algorithm well algorithm perform well apriori larg dataset larg number item algorithm attempt improv perform apriori use hash filter howev see section optim actual slow apriori algorithm concurr work algorithm parallel recent present simul studi suffer use hashfilt despit use special commun oper build it discuss section three parallel algorithm implement ibm powerparallel system sp henceforth refer simpli sp sharednoth machin present measur implement evalu effect design tradeoff win algorithm part ibm datamin product use field organ rest paper follow section give brief review problem mine associ rule apriori algorithm propos parallel algorithm base section give descript parallel algorithm section present result perform measur algorithm section contain conclus detail version paper found overview serial algorithm associ rule basic problem find associ rule introduc follow let set liter call item let set transact transact itemset say transact contain x set item i x associ rule implic form x rule x hold transact set confid c c transact contain x also contain rule x support transact set s transact contain x given set transact d problem mine associ rule gener associ rule certain userspecifi minimum support call minsup confid call minconf problem decomposit problem mine associ rule decompos two subproblem find set item itemset whose support greater userspecifi minimumsupport itemset minimum support call frequent itemset kitemset itemset k item lk set frequent kitemset those minimum support member set two field i itemset ii support count ck set candid kitemset potenti frequent itemset member set two field i itemset ii support count dataset local processor p dr dataset local processor p repartit candid set maintain processor p kth pass there k item candid figur notat l ffrequent itemsetsg repres pass number begin ck new candid size k gener transact increment count candid ck contain t lk candid ck minimum support answer figur apriori algorithm use frequent itemset gener desir rule gener idea if say abcd ab frequent itemset determin rule ab cd hold comput ratio supportabcdsupportab conf minimum confid rule hold the rule minimum support abcd frequent much research focuss first subproblem databas access part comput sever algorithm propos review section apriori algorithm parallel algorithm base apriori algorithm figur give overview apriori algorithm find frequent itemset use notat given figur first pass algorithm simpli count item occurr determin frequent itemset subsequ pass say pass k consist two phase first frequent itemset l kgamma found pass use gener candid itemset c k use apriori candid gener procedur describ below next databas scan support candid c k count fast count need effici determin candid c k contain given transact t hashtre data structur use purpos candid gener given l kgamma set frequent itemset want gener superset set frequent kitemset intuit behind apriori candid gener procedur itemset x minimum support subset x simplic assum item itemset lexicograph order candid gener take two step first join step join l kgamma l insert ck select pitem pitem next prune step delet itemset c c k k gamma subset c l kgamma exampl let l ff g f g f g f g f gg join step c ff g prune step delet itemset f g itemset f g l left f g c parallel algorithm first present three parallel algorithm first subproblem problem find frequent itemset give parallel algorithm second subproblem problem gener rule frequent itemset refer figur summari notat use algorithm descript use superscript indic processor id subscript indic pass number also size itemset algorithm assum sharednoth architectur n processor privat memori privat disk processor connect commun network commun pass messag commun primit use algorithm part mpi messag pass commun librari support sp candid messagepass commun standard current discuss data evenli distribut disk attach processor ie processor disk roughli equal number transact requir transact place disk special way algorithm count distribut algorithm use simpl principl allow redund comput parallel otherwis idl processor avoid commun first pass special pass k algorithm work follow processor p gener complet c k use complet frequent itemset l kgamma creat end pass k gamma observ sinc processor ident l kgamma gener ident processor p make pass data partit develop local support count candid processor p exchang local c k count processor develop global c k count processor forc synchron step processor p comput l k c k processor p independ make decis termin continu next pass decis ident processor ident l k first pass processor p dynam gener local candid itemset c depend item actual present local data partit henc candid count differ processor may ident care must taken exchang local count determin global c thu everi pass processor scan local data asynchron parallel howev must synchron end pass develop global count perform consider step similar serial algorithm nonobvi step processor exchang local count arriv global c k count sinc processor exact c k processor put count valu common order count array need perform parallel vector sum array requir commun count valu done ologn commun step also avoid timeconsum logic would otherwis need assur combin count belong candid full detail process includ mpi commun primit use describ algorithm data distribut attract featur count distribut algorithm data tupl exchang processor count exchang thu processor oper independ asynchron read data howev disadvantag algorithm exploit aggreg memori system effect suppos processor memori size jm j number candid count one pass determin jm j increas number processor n system n theta jm j total memori still count number candid one pass processor count ident candid count distribut algorithm count candid per pass serial algorithm data distribut algorithm design exploit better total system memori number processor increas algorithm processor count mutual exclus candid thu number processor increas larger number candid count pass nprocessor configur data abl count singl pass candid set would requir n pass count downsid algorithm everi processor must broadcast local data processor everi pass therefor algorithm becom viabl machin fast commun pass count distribut algorithm processor p gener c k l kgamma retain nth itemset form candid subset k count n itemset retain determin processor id comput without commun processor implement itemset assign roundrobin fashion c k set disjoint union c k set origin c k processor p develop support count itemset local candid set c use local data page data page receiv processor end pass data processor p calcul l k use local c k again l set disjoint union l k set l k processor exchang l k everi processor complet l k gener c k next pass step requir processor synchron obtain complet l k processor independ but ident decid whether termin continu next pass interest step step processor develop support count local candid c chronous step processor broadcast local data well receiv local data processor must care avoid network congest use asynchron commun overlap commun time count support see full detail algorithm candid distribut one limit count data distribut algorithm sinc databas transact could support candid itemset transact must compar entir candid set requir count duplic candid set everi processor data broadcast everi databas transact addit count data distribut algorithm requir processor synchron end pass exchang count frequent itemset respect workload perfectli balanc caus processor wait whichev processor finish last everi pass problem due fact neither count data exploit problemspecif knowledg data tupl candid itemset partit mere equal divid work processor must consult inform gather proceed onto next pass candid distribut algorithm attempt away depend partit data candid way processor may proceed independ pass l l heurist determin algorithm divid frequent itemset l lgamma processor way processor p gener uniqu c independ processor c time data repartit processor count candid c independ processor note depend upon qualiti itemset partit part databas may replic sever processor itemset partit algorithm consid aspect identifi segment l lgamma like support differ databas transact choic redistribut pass tradeoff decoupl processor depend soon possibl wait itemset becom easili equit partition partit algorithm exploit semant apriori candid gener procedur describ section candid distribut processor proce independ count portion global candid set use local data commun count data tupl ever requir depend processor processor prune local candid set prune step candid gener howev inform sent asynchron processor wait complet prune inform arriv processor prune step candid gener prune candid set much possibl use whatev inform arriv opportunist start count candid late arriv prune inform instead use subsequ pass algorithm describ below use either count data distribut algorithm pass partit l kgamma among n processor l kgamma set well balanc discuss partit done record frequent itemset l kgamma processor assign itemset partit ident done parallel processor processor p gener c logic use l kgamma partit assign it note p still access complet l kgamma henc use standard prune gener c k pass p develop global count candid c k databas repartit dr time p process local data data receiv processor post asynchron receiv buffer receiv l j k processor l j need prune c prune step candid gener processor p comput l k c k asynchron broadcast processor use send processor p collect frequent itemset sent processor use prune step candid gener join step itemset receiv processor j could length greater keep track processor p j largest size frequent itemset sent it receiv buffer frequent itemset repost process k use local l happen p receiv l j kgamma processor p need care time prune need distinguish itemset a long subset candid itemset present l j itemset present set yet receiv processor p probe l rememb repartit took place pass l use l gamma long prefix itemset question find processor respons it check l j receiv processor p make pass dr count c k comput l k c k asynchron broadcast k everi processor use send data distribut algorithm step pass commun local data support count develop one differ local data need broadcast everi processor candid partit processor inform transact use develop support count processor allow processor send less data network full detail filter describ partit l k motiv algorithm partit l k exampl let l fabc abd abe acd ace bcd bce bde cdeg l fabcdeg l whose member common prefix ab note candid abcd abc abd abcd also prefix ab apriori candid gener procedur section gener candid join item e therefor assum item itemset lexicograph order partit itemset l k base common long prefix ensur partit assign one processor ensur processor gener candid independ ignor prune step suppos also repartit databas way tupl support itemset contain l k partit assign processor copi local disk processor processor proceed complet asynchron actual algorithm involv two reason processor may obtain frequent itemset comput processor prune step candid gener exampl abov processor assign set e know whether bcde frequent abl decid whether prune candid abcd set prefix bc may assign differ processor problem need balanc load across processor detail full partit algorithm given parallel rule gener present parallel implement second subproblem problem gener rule frequent itemset gener rule much less expens discov frequent itemset requir examin data given frequent itemset l rule gener examin nonempti subset gener rule lgammaa comput effici done examin largest subset l first proceed smaller subset gener rule requir minimum confid exampl given frequent itemset abcd rule abc minimum confid neither ab cd need consid it gener rule parallel simpli involv partit set frequent itemset among processor processor gener rule partit use algorithm abov sinc number rule gener itemset sensit itemset size attempt equit balanc partit itemset length equal across processor note calcul confid rule processor may need examin support itemset respons reason processor must access frequent itemset rule gener begin problem count data distribut algorithm end last pass processor frequent itemset candid distribut algorithm fast processor may need wait slower processor discov transmit frequent itemset reason rule gener step rel cheap may better candid distribut algorithm simpli discov frequent itemset gener rule offlin possibl serial processor would allow processor freed run job soon done find frequent itemset even processor system still work discuss tradeoff initi clear us three algorithm would win would even singl overal winner count minim commun expens ignor aggreg memori workstationclust environ approach probabl ideal may so howev sp data distribut fulli exploit aggreg memori cost heavi commun help us explor issu also data abil count singl pass n time mani candid count could make algorithm strong contend third algorithm candid distribut see incorpor detail problemknowledg yield benefit count data distribut algorithm also see benefici remov processor depend synchron commun be perform evalu ran experi node ibm sp model node multiprocessor thin consist power processor run mhz mb real memori attach node gb disk less mb avail test processor run aix level commun highperform switch hp adaptor combin commun hardwar rate peak bandwidth megabyt per second latenc less microsecond test base commun routin actual pointtopoint bandwidth reach mb experi run otherwis idl system see detail sp architectur name averag transact length averag size frequent itemset averag number transact tabl data paramet use synthet dataset vari complex gener use procedur describ characterist six dataset use shown tabl dataset vari mani short transact frequent itemset fewer larger transact mani frequent itemset dataset mb per processor size could use larger dataset due constraint amount storag avail local disk candid algorithm write redistribut databas local disk candid partit run disk space larger dataset howev includ result experi up mb per processor count distribut algorithm show trend larger amount data per processor experi repeat multipl time obtain stabl valu data point rel perform tradeoff figur show respons time three parallel algorithm six dataset node configur total databas size approxim gb respons time measur time elaps initi execut end time last processor finish comput respons time serial version run one node worth data th total databas run serial algorithm entir data enough disk space avail obtain similar result node configur dataset size experi candid distribut repartit done fourth pass test choic yield best perform result encourag count candid distribut algorithm respons time close serial algorithm especi true count overhead count less compar serial version run n data one third overhead spend wait processor synchron among parallel algorithm data distribut fare well two expect data inde abl better exploit aggreg memori multiprocessor make fewer pass case dataset larg averag transact frequent itemset length see tabl howev respons time candid data count serial n data figur rel perform algorithm respons time normal commun figur commun cost data distribut name serial count data candid tabl number data pass requir perform turn markedli lower two reason extra commun fact everi node system must process everi singl databas transact commun worst two problem show figur even machin sp fast commun point label normal correspond respons time normal data distribut algorithm node configur mb data replic node point label no commun correspond modifi version data distribut algorithm where instead receiv data node node simpli process local data time sinc node exact data yield exact result differ time spent commun manag three six dataset discov fulli half time taken data distribut commun algorithm also almost entir cpubound make io save due data make fewer pass practic neglig hope better result candid distribut algorithm consid one exploit problemspecif semant sinc candid algorithm must also commun entir dataset redistribut pass suffer problem data candid howev perform redistribut onc also unlik data processor may select filter transact send processor depend upon depend graph partit greatli reduc amount data travel network unfortun even singl pass filter data redistribut costli question whether subsequ pass processor run complet independ smaller candid set compens cost perform result show redistribut simpli cost much also unlik data distribut candid algorithm unabl capit optim use aggreg memori larg candid set forc count multipl subpass occur candid take redistribut pass candid thu make mani data pass count insuffici gain coupl high redistribut cost allow count small overhead emerg overal winner although experi show count overhead fairli small synchron cost becom quit larg data distribut skew node equal capabl differ memori size processor speed io bandwidth capac investig issu broad topic futur plan howev one think sever altern ad load balanc count distribut algorithm requir redistribut complet databas case candid distribut algorithm extrapol result studi sens count distribut algorithm embellish appropri load balanc strategi like continu domin sensit analysi examin scaleup sizeup speedup characterist count distribut algorithm report result data candid distribut algorithm inferior perform scaleup see well count distribut algorithm handl larger problem set processor avail perform scaleup experi increas size databas direct proport number node system use dataset dkti dkti dkti previou experi except number transact increas decreas depend upon multiprocessor size databas size singl node configur shown tabl mb per node three dataset rang mb singl node case almost gb node case figur show perform result three dataset addit absolut respons time number processor increas also plot scaleup respons time normal respect respons time singl processor clearli count algorithm scale well abl keep respons time almost constant databas multiprocessor size increas slight increas respons time due entir processor involv commun sinc itemset found algorithm chang databas size increas number candid whose support must sum commun phase remain constant sizeup experi fix size multiprocessor node grow databas mb per node mb per node plot respons time sizeup figur sizeup respons time normal respect respons time mb per node result show sublinear perform count algorithm program actual effici databas size increas sinc result chang databas size increas neither amount cost commun increas size databas simpli make noncommun portion code take time due io transact process result reduc percentag overal time spent commun sinc io cpu process scale perfectli sizeup get sublinear perform scaleup rel scaleup respons time number processor scaleup number processor sizeup rel sizeup respons time amount data per node mb sizeup amount data per node mb speedup rel speedup respons time number processor number processor figur perform count distribut respons time hash filter count figur effect hash filter speedup last set experi kept databas constant vari number processor constraint avail disk space size three databas fix mb figur show result run count algorithm configur processor run larger configur amount data node becom small speedup figur respons time normal respect respons time singl processor graph show count good speedup perform perform howev begin fall short ideal processor artifact small amount data node process mb per node commun time becom signific percentag overal respons time easili predict sizeup experi notic data node process less signific becom commun time give us better perform simpli see opposit effect here larger dataset would shown even better speedup characterist effect hash filter recent park chen yu propos use hash filter reduc cost apriori particularli second pass reduc size c basic idea build hash filter tupl read first pass everi itemset present tupl count increment correspond hash bucket thu end pass upperbound support count everi itemset present databas gener c use l candid itemset hash candid whose support count hash tabl less minimum support delet figur compar combin respons time pass count algorithm hash filter algorithm time remain pass ident count algorithm beat hash filter count never explicitli form c rather use special version hashtre done sinc noth c prune apriori candid gener algorithm equal l theta l c thu repres simpl twodimension count array drastic reduc memori requir function call overhead save use hash filter prune c lost due cost construct hash filter use regular hashtre store count c parallel version hash filter algorithm call pdm present along perform result simul studi use parallel techniqu similar count except entir candid set exchang rather candid count expens commun cpu cost focu pdm effici construct hashfilt use serial algorithm speed pass two howev serial algorithm hashfilt actual hurt perform result doubl perform hit pdm conclus consid problem mine associ rule sharednoth multiprocessor data partit across node present three parallel algorithm task base upon apriori best serial algorithm mine associ rule design algorithm repres spectrum tradeoff comput commun memori usag synchron use problemspecif inform count distribut algorithm attempt minim commun replic candid set processor memori processor work local data commun count data distribut algorithm take counter approach processor work entir dataset portion candid set maxim use aggreg memori requir high commun broadcast data again minim commun may best approach workstat cluster environ necessarili true sp lastli candid algorithm incorpor domainknowledg partit data candid allow processor work uniqu set candid without repeatedli broadcast entir dataset maxim use aggreg memori limit heavi commun singl redistribut pass also complet elimin synchron cost count data must pay end everi pass studi tradeoff evalu rel perform three algorithm implement node sp parallel machin count distribut emerg algorithm choic exhibit linear scaleup excel speedup sizeup behavior use n processor overhead less compar respons time serial algorithm execut n amount data data distribut algorithm lost cost broadcast local data processor everi processor result show even highbandwidthlowlat system sp data redistribut still costli candid distribut algorithm similarli edg cost data redistribut gain processor work independ differ subset problem could make singl pass redistribut may dishearten learn care design algorithm candid beaten rel simpler algorithm like count least illumin fact problem requir intric parallel explor variou possibl shown true mine associ rule acknowledg mauric houtsma implement parallel version associationrul mine algorithm present earlier version ibm powerparallel system call sp node diskless data funnel master node although could use implement chang architectur commun librari basic algorithm benefit experi howard ho provid us earli prototyp implement mpi commun librari get us go ramakrishnan srikant patient explain mani nuanc serial apriori implement discuss mike carey influenti initi stage work final sever sp organ particularli hieronym sharon selzo bob walkup wonder help arrang sp cycl test r mine associ rule set item larg databas parallel mine associ rule design fast algorithm mine associ rule messag pass interfac forum discoveri multiplelevel associ rule larg databas scalabl powerparallel system effici algorithm discov associ rule effect hash base algorithm mine associ rule effici parallel data mine associ rule effici algorithm mine associ rule larg databas mine gener associ rule tr ctr hongjun lu ling feng jiawei han beyond intratransact associ analysi mine multidimension intertransact associ rule acm transact inform system toi v n p oct moham j zaki neal lesh mitsunori ogihara planmin predict plan failur use sequenc mine artifici intellig review v n p decemb canasai kruengkrai chuleerat jaruskulchai parallel learn algorithm text classif proceed eighth acm sigkdd intern confer knowledg discoveri data mine juli edmonton alberta canada takahiko shintani masaru kitsuregawa parallel mine algorithm gener associ rule classif hierarchi acm sigmod record v n p june robert grossman yike guo data mine task method parallel method scale data mine algorithm larg data set handbook data mine knowledg discoveri oxford univers press inc new york ny assaf schuster ran wolff communicationeffici distribut mine associ rule data mine knowledg discoveri v n p march dora souliou ari pagourtzi nikolao drosino panayioti tsanaka comput frequent itemset parallel use partial support tree journal system softwar v n p decemb min song ilyeol song xiaohua hu robert b allen integr associ rule ontolog semant queri expans data knowledg engin v n p octob assaf schuster ran wolff communicationeffici distribut mine associ rule acm sigmod record v n p june moham j zaki srinivasan parthasarathi mitsunori ogihara wei li parallel algorithm discoveri associ rule data mine knowledg discoveri v n p decemb valeri guralnik georg karypi parallel treeprojectionbas sequenc mine algorithm parallel comput v n p april riedel christo faloutso gregori r ganger david f nagl data mine oltp system nearli free acm sigmod record v n p june raymond t ng lak v s lakshmanan jiawei han alex pang exploratori mine prune optim constrain associ rule acm sigmod record v n p june masaru kitsuregawa masashi toyoda iko pramudiono web commun mine web log mine commod cluster base execut australian comput scienc commun v n p januaryfebruari massimo coppola marco vanneschi parallel distribut data mine parallel skeleton distribut object data mine opportun challeng idea group publish hershey pa steve c chiu weikeng liao alok n choudhari mahmut t kandemir processorembed distribut smart disk iointens workload architectur perform model evalu journal parallel distribut comput v n p march shichao zhang chengqi zhang jeffrey xu yu effici strategi mine except multidatabas inform scienc intern journal v n p septemb asif jave ashfaq khokhar frequent pattern mine messag pass multiprocessor system distribut parallel databas v n p novemb wenchih peng mingsyan chen develop data alloc scheme increment mine user move pattern mobil comput system ieee transact knowledg data engin v n p januari ning x sean wang sushil jajodia discov calendarbas tempor associ rule data knowledg engin v n p februari ruom jin ge yang gagan agraw share memori parallel data mine algorithm techniqu program interfac perform ieee transact knowledg data engin v n p januari jiawei han yongjian fu mine multiplelevel associ rule larg databas ieee transact knowledg data engin v n p septemb steve c chiu weikeng liao alok n choudhari mahmut t kandemir processorembed distribut smart disk iointens workload architectur perform model evalu journal parallel distribut comput v n p april shengnan cong jiawei han jay hoefling david padua samplingbas framework parallel data mine proceed tenth acm sigplan symposium principl practic parallel program june chicago il usa steve c chiu weikeng liao alok n choudhari distribut smart disk iointens workload switch interconnect futur gener comput system v n p april gregori buehrer yenkuang chen srinivasan parthasarathi anthoni nguyen amol ghote daehyun kim effici pattern mine share memori system implic chip multiprocessor architectur proceed workshop memori system perform correct octob san jose california gregori buehrer srinivasan parthasarathi shirish tatikonda tahsin kurc joel saltz toward terabyt pattern mine architectureconsci solut proceed th acm sigplan symposium principl practic parallel program march san jose california usa assaf schuster ran wolff dan trock highperform distribut algorithm mine associ rule knowledg inform system v n p may christoph r lumb jiri schindler gregori r ganger david f nagl erik riedel toward higher disk head util extract free bandwidth busi disk drive proceed th confer symposium oper system design implement p octob san diego california wei li ari moze comput frequent itemset insid oracl g proceed thirtieth intern confer larg data base p august septemb toronto canada lak v s lakshmanan carson kaisang leung raymond t ng segment support map scalabl mine frequent itemset acm sigkdd explor newslett v n p dec amol ghote gregori buehrer srinivasan parthasarathi daehyun kim anthoni nguyen yenkuang chen pradeep dubey cacheconsci frequent pattern mine modern emerg processor vldb journal intern journal larg data base v n p januari fran coenen paul leng partit strategi distribut associ rule mine knowledg engin review v n p march carson kaisang leung quamrul i khan boyu hao distribut mine constrain pattern wireless sensor data proceed ieeewicacm intern confer web intellig intellig agent technolog p decemb masahisa tamura masaru kitsuregawa dynam load balanc parallel associ rule mine heterogen pc cluster system proceed th intern confer larg data base p septemb david w cheung yongqiao xiao effect data distribut parallel mine associ data mine knowledg discoveri v n p septemb euihong han georg karypi vipin kumar scalabl parallel data mine associ rule acm sigmod record v n p june riedel garth a gibson christo faloutso activ storag largescal data mine multimedia proceed rd intern confer larg data base p august flip korn alexandro labrinidi yanni kotidi christo faloutso ratio rule new paradigm fast quantifi data mine proceed rd intern confer larg data base p august ling feng jeffrey xu yu hongjun lu jiawei han templat model multidimension intertransact associ rule vldb journal intern journal larg data base v n p octob h ravi sankar m m naidu innov algorithm mine multilevel associ rule proceed th confer proceed th iast intern multiconfer artifici intellig applic p februari innsbruck austria john d holt soon m chung parallel mine associ rule text databas journal supercomput v n p march congnan luo anil l pereira soon m chung distribut mine maxim frequent itemset data grid system journal supercomput v n p juli r j kuo s y lin c w shih mine associ rule integr cluster analysi ant coloni system health insur databas taiwan expert system applic intern journal v n p octob distribut higher order associ rule mine use inform extract textual data acm sigkdd explor newslett v n p june moham j zaki scalabl algorithm associ mine ieee transact knowledg data engin v n p may tahsin kurc mustafa uysal hyeonsang eom jeff hollingsworth joel saltz alan sussman effici perform predict largescal dataintens applic intern journal high perform comput applic v n p august david w cheung kan hu shaowei xia adapt algorithm mine associ rule sharedmemori parallel machin distribut parallel databas v n p march moham jave zaki srinivasan parthasarathi wei li local algorithm parallel associ mine proceed ninth annual acm symposium parallel algorithm architectur p june newport rhode island unit state yenliang chen shihsheng chen pingyu hsu mine hybrid sequenti pattern sequenti rule inform system v n p juli david w cheung kan hu shaowei xia asynchron parallel algorithm mine associ rule sharedmemori multiprocessor proceed tenth annual acm symposium parallel algorithm architectur p june juli puerto vallarta mexico jian tang use increment prune increas effici dynam itemset count mine associ rule proceed seventh intern confer inform knowledg manag p novemb bethesda maryland unit state y sung zhao li chew l tan peter a ng forecast associ rule use exist data set ieee transact knowledg data engin v n p novemb sunita sarawagi shibi thoma rakesh agraw integr associ rule mine relat databas system altern implic acm sigmod record v n p june qing li ling feng allan wong intratransact gener intertransact landscap multidimension context associ rule mine inform sciencesinformat comput scienc intern journal v n p june jianchao han nick cercon xiaohua hu interact visual system mine associ rule data mine rough set granular comput physicaverlag gmbh heidelberg germani antonin rozsyp miroslav kubat associ mine timevari domain intellig data analysi v n p may ferenc kovc sndor juhsz perform evalu distribut associ rule mine algorithm proceed th wsea intern confer softwar engin parallel distribut system p februari salzburg austria xindong wu shichao zhang synthes highfrequ rule differ data sourc ieee transact knowledg data engin v n p februari sunita sarawagi shibi thoma rakesh agraw integr associ rule mine relat databas system altern implic data mine knowledg discoveri v n p juli d i lin z m kedem effici algorithm discov maximum frequent set ieee transact knowledg data engin v n p may edward r omiecinski altern interest measur mine associ databas ieee transact knowledg data engin v n p januari ron kohavi llew mason rajesh parekh zijian zheng lesson challeng mine retail ecommerc data machin learn v n p octobernovemb ruom jin gagan agraw methodolog detail perform model reduct comput smp machin perform evalu v n p may kubat search highsupport itemset itemset tree intellig data analysi v n p march caiyan jia xiep gao multisc sampl adapt sampl method discov approxim associ rule journal comput scienc technolog v n p may lak v s lakshmanan carson kaisang leung raymond t ng effici dynam mine constrain frequent set acm transact databas system tod v n p decemb miroslav kubat alaaeldin hafez vijay v raghavan jayakrishna r lekkala wei kian chen itemset tree target associ queri ieee transact knowledg data engin v n p novemb euihong sam han georg karypi vipin kumar scalabl parallel data mine associ rule ieee transact knowledg data engin v n p may mara c fernndezbaizn ernestina menasalva ruiz juan fransisco martnez sarra reduct discrimin rule base frequent item set calcul new learn paradigm soft comput physicaverlag gmbh heidelberg germani a maniatti moham j zaki system support scalabl data mine acm sigkdd explor newslett v n p dec peiyi tang li ning ningn wu domain data partit parallel mine frequent close itemset proceed rd annual southeast region confer march kennesaw georgia moham j zaki parallel distribut associ mine survey ieee concurr v n p octob dejiang jin sotirio g ziavra superprogram approach mine associ rule parallel pc cluster ieee transact parallel distribut system v n p septemb jihy kim sihui zhao steffen heber find associ rule cisregulatori element involv altern splice proceed th annual southeast region confer march winstonsalem north carolina jack dongarra ian foster geoffrey fox william gropp ken kennedi linda torczon andi white refer sourcebook parallel comput morgan kaufmann publish inc san francisco ca p deepa shenoy k g srinivasa k r venugop lalit m patnaik dynam associ rule mine use genet algorithm intellig data analysi v n p septemb claudio silvestri salvator orlando distribut approxim mine frequent pattern proceed acm symposium appli comput march santa fe new mexico massimo coppola marco vanneschi highperform data mine skeletonbas structur parallel program parallel comput v n p may mohammad elhajj osmar r zaan parallel bifold largescal parallel pattern mine constraint distribut parallel databas v n p novemb vipin kumar moham zaki high perform data mine tutori pm tutori note sixth acm sigkdd intern confer knowledg discoveri data mine p august boston massachusett unit state xun yi yanchun zhang privacypreserv distribut associ rule mine via semitrust mixer data knowledg engin v n p novemb