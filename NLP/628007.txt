t volum leas consist largescal system a abstractthi articl introduc volum leas mechan provid serverdriven cach consist largescal geograph distribut network volum leas retain good perform fault toler server scalabl semant weaker clientdriven protocol use web volum leas variat object leas origin design distribut file system howev wherea tradit object leas amort overhead long leas period volum leas exploit spatial local amort overhead across multipl object volum approach allow system maintain good write perform even presenc failur use tracedriven simul compar three volum leas algorithm four exist cach consist algorithm show new algorithm provid strong consist maintain scalabl faulttoler tracebas workload web access find volum reduc messag traffic server percent compar standard leas algorithm volum consider reduc peak load server popular object modifi b introduct fulfil promis environ essenti human knowledg avail set server distribut across wide area network data infrastructur must evolv protocol optim one applicationbrowsersto protocol support rang demand applic futur expect dataintens applic extend beyond humandriven browser includ programdriven agent robot distribut databas data miner place new demand datadistribut infrastructur new applic requir aggress cach accept perform toler cach inconsist browser unfortun current cach consist protocol scale larg system web poor perform weak consist guarante poor fault toler articl appear ieee transact knowledg data engin special issu web technolog work fund part nsf cise grant cda gift novel sun microsystem darpaspawar grant number n dahlin alvisi support nsf career award ccr ccr respect cach consist achiev either clientdriven protocol client send messag server determin cach object current serverdriven protocol server notifi client data chang either case challeng guarante client read alway return result latest complet write protocol achiev said strongli consist clientdriven protocol forc cach make difficult choic must either poll server access cach data risk suppli incorrect data first option poll read increas load server latenc cach request effect signific larg scale system server support mani client poll latenc high option period poll relax consist semant allow cach suppli incorrect data exampl web browser account weak consist humanbas errorcorrect protocol user manual press reload button detect stale data weak consist semant may mere annoy human caus parallel distribut program comput incorrect result complic use aggress cach replic hierarchi replic transpar applic serverdriven protocol introduc three challeng own first strong consist difficult maintain face network process failur modifi object server use protocol must contact client cach object mani cach copi like least one client unreach case server cannot complet write without violat consist guarante second server may requir signific amount memori track client cach object third send cach invalid messag may entail larg burst server activ popular object modifi distribut file system problem server driven protocol address use leas specifi length time server notifi client modif cach data leas timeout expir client must renew leas send messag server client may access cach object leas maintain strong consist allow server make progress even failur occur server cannot contact client server delay write unreach client leas expir time becom client respons contact server furthermor leas free server notifi idl client modifi object reduc size server state load sustain server read write bursti although leas provid signific benefit file system workload may less effect wide area network wan amort cost renew leas across multipl read leas long enough common case cach access without renew request unfortun least browser workload repeat access object often spread minut more leas length shorter time read leas reduc client poll hand longer leas length reduc three origin advantag leas articl show volum leas restor benefit leas wan work load volum leas combin short leas group file volum long leas individu file volum leas algorithm client may access cach object hold valid leas object object volum combin provid faulttoler short leas client becom unreach server may modifi object short volum leas expir time cost maintain leas modest volum leas amort cost leas renew larg number object examin three variat volum leas volum leas volum leas delay in valid best effort volum leas delay invalid algorithm server defer send object invalid messag client whose volum leas expir optim reduc peak server load reduc overal load batch invalid messag elimin messag entir case client never renew volum leas third variat motiv observ workload requir strict consist prefer client observ fresh data exampl import event occur news servic would like invalid stale cach copi front page quickli may want begin distribut new front page immedi rather wait notifi custom old page invalid best effort variat volum leas use relax consist satisfi applic find approach improv perform allow server util longer volum leas timeout articl evalu perform volum leas use tracebas simul compar volum algorithm three tradit consist algorithm client poll server invalid server invalid leas simul demonstr benefit volum leas exampl volum leas delay invalid ensur client never see stale data server never wait second perform write use number messag standard invalid protocol stall server write indefinit compar standard object leas algorithm also bound server write delay second volum algorithm reduc messag traffic rest articl organ follow section describ tradit algorithm provid consist cach data section describ new volum leas algorithm section discuss experiment methodolog section present experiment result discuss relat work section section summar conclus tradit consist algorithm section review four tradit cach consist algorithm first twopol read pollr client poll remain algorithmscallback leasear base server invalid describ algorithm refer tabl summar key characterist algorithm discuss paper includ three new algorithm also refer figur defin sever paramet algorithm tabl summar cost maintain consist object use algorithm column correspond key figur merit expect stale time indic long client expect read stale data modifi assum random read random updat failur worst stale time indic long cach stale assum load immedi modifi network failur prevent server contact client cach o read cost show expect fraction cach read requir messag server write cost indic mani messag server expect send notifi client write acknowledg wait delay indic long server wait write cannot invalid cach server state column indic mani client server read write state expect worst read write acknowledg server stale time stale time cost cost wait delay state second second messag messag second byte poll read volum leasest v ro rdeltat co mint v vol delay invalt v d rdeltat cv mint v delay invalt v d tabl summari algorithm perform variabl mean timeout object timeout volum server store state inact client r frequenc object read v number activ object per volum c tot number client copi object number client leas object c v number client leas volum v c number client whose volum leas expir less second ago byte server state support x client figur definit paramet tabl expect track object poll read poll read simplest consist algorithm access cach object client ask object server object valid so server respond affirm not server send current version algorithm equival alway client read data server optim unchang data resent thu client never see stale data write server alway proceed immedi network failur occur client unabl contact server guarante valid cach object cope network failur client take applicationdepend action signal error return cach data along warn may stale primari disadvantag algorithm poor read perform read delay roundtrip messag client server addit messag may impos signific load server poll poll base poll read assum cach object remain valid least timeout period second client valid data henc equival poll read choos appropri valu present tradeoff one hand long timeout improv perform reduc number read wait valid particular client access data rate r read per second timeout long enough span sever read rdeltat client read requir network messag see tabl hand long timeout increas likelihood cach suppli stale data applic gwertzman seltzer show web browser workload even timeout ten day server load significantli higher callback algorithm describ below studi find adapt timeout scheme work better static timeout algorithm paramet set make adapt timeout algorithm impos server load callback client read receiv stale data server predict certainti object modifi poll ideal case server tell client use cach copi object time next modif studi assum server inform futur callback callback algorithm server keep track client cach object modifi object server notifi client copi object proceed modif receiv acknowledg client shown tabl callback read cost low client guarante cach object valid told otherwis howev write cost high object modifi server invalid cach object may requir c tot messag furthermor client crash network partit separ server client write may delay indefinit leas address limit callback gray cheriton propos leas read object client first acquir leas associ timeout t client may read cach copi leas expir object modifi object server invalid cach object client whose leas expir read object leas expir client first contact server renew leas leas allow server make progress maintain strong consist despit failur client network failur prevent server invalid client cach server need wait leas expir perform write contrast callback may forc write wait indefinit leas also improv scalabl write rather contact client ever read object server need contact recent activ client hold leas object leas thu reduc amount state server maintain track client well cost send invalid messag server may also choos invalid cach simpli wait outstand leas expir rather send messag larg number client explor option studi leas present tradeoff similar one offer poll long leas reduc cost read amort leas renew r delta read hand short leas reduc delay write failur occur poll client unabl contact server renew leas know hold potenti stale data client may take applicationspecif action signal error return suspect data along warn howev unlik poll leas never let client believ stale object valid volum leas tradit leas provid good perform cost renew leas amort mani read unfortun mani wan workload read object may spread second minut requir long leas order amort cost renew make leas practic workload algorithm use combin object leas associ individu data object volum leas associ collect relat object server scheme client read data cach object volum leas data valid server modifi data soon either leas expir make object leas long volum short overcom limit tradit leas long object leas low overhead short volum leas allow server modifi data without long delay furthermor spatial local within volum overhead renew short leas volum amort across mani object section first describ volum leas algorithm examin variat call volum leas delay invalid end section examin best effort volum leas support applic time updat desir requir basic algorithm figur show data structur use volum leas algorithm server side algorithm client side algorithm respect basic algorithm simpl ffl read data client read cach data hold valid object volum leas correspond object expir leas renew contact appropri server grant leas object client c modifi sinc last time c held valid leas server piggyback current data leas renew ffl write data modifi object server send invalid messag client hold valid leas object server delay write receiv acknowledg client volum object leas expir modifi object server increment object version number handl unreach client client crash network partit make client temporarili unreach may caus problem consid case unreach client whose volum leas expir still hold valid leas object client becom reachabl attempt renew volum leas server must invalid modifi object client hold valid object leas algorithm thu maintain server unreach set record client acknowledgedwithin timeout periodon server invalid messag receiv read request leas renew request client unreach set server remov client unreach set renew client volum leas notifi client renew leas current cach object belong volum client respond send list object along version number server repli messag contain vector object identifi messag renew leas object modifi client unreach invalid leas object whose version number chang client unreach data structur volum volum v follow attribut set object v number increment server reboot time current leas v expir set hclient expirei valid leas v set client whose volum leas expir may miss object invalid messag object object follow attribut data object data time current leas expir set hclient expirei valid leas figur data structur volum leas algorithm handl server failur server fail assum state use maintain cach consist lost lan system server often reconstruct state poll client approach impract wan protocol allow server increment construct valid view object leas state reli volum leas expir prevent client use leas grant fail server recov crash server first invalid volum leas wait expir invalid done two way server save stabl storag latest expir time volum leas then upon recoveri read timestamp delay write expir time altern server save stabl storag durat longest possibl volum leas upon recoveri server delay write durat pass sinc object leas inform lost server crash server effect invalid object leas treat client unreach set maintain volum epoch number increment reboot thu client request server write object hclient expirei oat expir currenttim client ovolumeunreach contact contact client sendinv alid oid client contact receiveack inv alid oid c contact contact contact gamma f c g ovolumeunreach overs server renew client leas receiverenew leas reqvolid volepoch objid clientv ersion c let v volum vid volid let object vepoch volepoch vunreach recoverunreachableclientc v see c vunreach vexpir vat old leas client vat oexpir oat old leas client oat els recoverunreachableclientcli c volum v sendmust renew all vid c renewrecvd fals t f currenttim renewrecvd receiverenew obj leasesvolid leaseset c rewnewrecvd true renewrecvd return client still unreach hobjid objv ersioni leaseset let object renewlist renewlist hoid overs oexpirei sendinv alidateinvallist renew renewlist receiv ack inv alid c vunreach figur volum leas protocol server side client read object renewleaseovolumeo read local copi renewleasevolum v object o epoch maxvepoch gamma vnum maxovers gamma sendrenew leas req vid epoch oid vnum note reciev time out abort read receivemust renew all vid server renewallv note reciev time out abort read receiverenew leas respvid vexpir vepoch overs oexpir odata server renewallvolum v object ovolum v validleaseo sendrenew obj leasesvid leaseset server note reciev time out abort read receiv inv alidateinvallist renew renewlist server objid invallist let object hobjid version expirei renewlist let object oexpir expir sendack inv alidatevid server validleaseleas l lexpir currenttim return true els return fals client receiv object invalid messag object receiveinv alid objid server let object sendack inv alid oid server figur volum leas protocol client side renew volum must also indic last epoch number known client epoch number current volum leas renew proce normal epoch number old server treat client client volum unreach set also possibl store cach consist inform stabl storag approach reduc recoveri time cost increas overhead normal leas renew investig approach paper cost volum leas analyz volum leas assum server grant leas length v volum length object typic volum leas much shorter object leas client access multipl object volum short amount time volum leas like valid access read cost column tabl indic cost typic read measur messag per read rdeltat first term reflect fact volum leas must renew everi v second renew amort object volum assum object read r time per second second term standard cost renew object leas ack wait delay column indic client network failur prevent server contact client write object must delay mint v ie either leas expir write cost server state column indic server track client hold valid object leas notifi object modifi final stale time column indic volum leas never suppli stale data client protocol verif verifi correct consist algorithm implement variat volum leas algorithm describ figur use teapot system teapot version algorithm differ one describ figur two way first teapot version use simplifi reconnect protocol unreach client rather restor client set object leas teapot version clear client object leas unreach client reconnect second differ teapot version everi network request includ sequenc number repeat correspond repli sequenc number allow protocol match repli request teapot allow us describ consist state machin conveni syntax gener murphi code mechan verif murphi system search protocol state space deadlock case system correc invari violat although murphi exhaust search state space exponenti algorithm allow us verifi small model system practic approach find mani bug difficult locat hand give us confid correct algorithm murphi verifi follow two invari hold server write object client valid object leas valid volum leas object client read object current version object system verifi contain one volum two object it includ one client one server commun network client server crash time network layer lose messag time cannot deliv messag order network layer also report messag lost are fact deliv test portion state space larger model larger model exhaust test machin gb memori entir state space examin volum leas delay invalid perform volum leas improv recogn volum leas expir client cannot use object leas volum without first contact server thu rather invalid object leas immedi client whose volum leas expir server send invalid messag and if client renew volum leas particular volum leas delay invalid algorithm modifi volum leas follow server modifi object client hold valid object leas expir volum leas server move client pervolum inact set server append object invalid inact client perinactivecli pend messag list inact client renew volum server send pend messag client wait client acknowledg renew volum client inact second server move client inact set unreach set discard client pend messag list thu limit amount state store server small valu reduc server state increas cost reestablish volum leas unreach client becom reconnect tabl indic write occur server must contact c v client hold valid volum leas rather c client hold valid object leas delay invalid provid three advantag volum leas first server write proceed faster mani invalid messag delay omit second server batch sever object invalid messag client singl network messag client renew volum leas therebi reduc network overhead third client renew volum long period time server avoid send object invalid messag move client unreach set use reconnect protocol client ever return besteffort volum leas applic requir strong consist want deliv time updat client exampl import event occur news servic would like invalid stale copi front page quickli rather wait custom know old page invalid thu interest consid besteffort algorithm best effort algorithm alway allow write proceed immedi notifi client write delay write volum algorithm may convert best effort algorithm send invalid parallel write tabl summar characterist best effort version delay invalid algorithm send invalid parallel write algorithm limit expect stale read time notifyc v the time take server send messageswithout delay write note best effort algorithm volum leas serv differ purpos origin volum algorithm limit time client see stale data wherea strong consist algorithm gener set volum leas time longest period will delay write longer factor best effort algorithm instead algorithm set v longest time allow disconnect client unknowingli see stale data sinc disconnect client affect long v valu may allow larger valu v befor exampl news servic use strong consist might want block dissemin news updat second may will allow disconnect client see old news sever minut thu system might use second strong consist might use minut best effort algorithm origin volum algorithm combin short volum leas long object leas allow leas short amort renew cost mani object examin algorithm perform simul algorithm discuss tabl workload base web trace data simul simul set server modifi file provid file client set client read file simul accept timestamp read modifi event input file updat cach state simul record size number messag sent server client well size cach consist state maintain server valid simul two way first obtain gwertzman seltzer simul one trace compar simul result algorithm common two studi second use simul examin algorithm simpl synthet workload could analyt comput expect result case simul result match expect result limit simul simul make sever simplifi assumpt first simul concurrencyit complet process trace event process next one simplif allow us ignor detail mutual exclus intern data structur race condit deadlock although could chang messag sent if instanc file read time written believ simul detail would significantli affect perform result second assum infinit larg cach simul server disk access effect reduc potenti signific sourc work across algorithm thu result magnifi differ among algorithm final assum system maintain cach consist entir file rather finer granular chose examin wholefil consist current common approach wan workload finegrain consist may reduc amount data traffic also increas number control messag requir consist algorithm thu finegrain cach consist would like increas rel differ among algorithm workload use workload base trace http access boston univers trace span four month januari may includ http access mosaic browsersinclud local cach hitsfor sparcstat although trace contain detail inform client read indic file modifi therefor synthes write object use simpl model base two studi write pattern web page bestavro examin trace boston univers web server gwertzman seltzer examin write pattern three univers web server studi conclud file chang rapidli global popular file less like chang file exampl gwertzman seltzer studi found file mutabl each file greater chanc chang given day file mutabl had greater chanc chang hour period base studi synthet write workload divid file trace four group give referenc file low averag number random write per day we use poisson distribut expect number write per day randomli place remain file three set first set includ file trace mutabl expect number write per day second set file trace mutabl expect number write per day remain file expect number write per day section examin sensit result paramet simul frequent access server subset server account access trace workload consist read differ file plu artifici gener write file file workload group volum correspond server leav sophist group futur work simul result section present simul result compar volum algorithm consist scheme interpret result rememb trace workload track activ rel small number client realiti server would access mani client absolut valu report server network load lower server would actual experi instead focus absolut number experi focu rel perform algorithm workload servernetwork load figur show perform algorithm xaxi use logarithm scale give object timeout length second t use algorithm yaxi give number messag sent client server volum leas refer object leas timeout volum leas timeout use differ curv show differ volum leas timeout indic volum leas time second paramet label timeout second volumet delay volumet callback volumet delay volumet client pollt object leaset number messag figur number messag vs timeout length delay volum line assum infinit acknowledg wait delay d signifi third paramet mean server never move idl client unreach list line callback flat callback invalid cach copi regardless t leas basic volum leas line declin reach second rise slightli shape come two compet influenc rise number leas renew client declin number invalid sent client hold valid leas increas workload client held object second like server modifi object client read it leas shorter reduc system load increas client poll delay invalid send strictli fewer messag client poll never send invalid messag delay invalid avoid send invalid client longer access volum even client hold valid object leas note timeout second client poll result client access stale data read timeout valu second algorithm result client access stale copi read separ leaset volumet line show addit overhead maintain volum leas shorter volum timeout increas overhead leas thought limit case infinitelength volum leas although volum leas impos signific overhead compar leas given valu t applic care fault toler achiev better perform volum leas without exampl triangl figur highlight best perform achiev system allow write delay second leaset messag exchang timeout second delay volumet delay volumet delay volumet delay volumet figur number messag vs timeout length volum leas delay invalid volum leas length vari send fewer messag send fewer messag similarli indic squar figur applic delay write second volum leas outperform leas delay invalid outperform leas algorithm although provid strong consist expens poll algorithm cost appear toler mani applic exampl use fewer messag delay suppli stale data client read even extrem case client see stale data read delay invalid use less twice mani messag poll algorithm also examin network byte sent algorithm server cpu load impos algorithm metric differ cost provid strong consist compar poll smaller differ metric network messag rel differ among leas algorithm also smaller metric network messag metric reason key advantag best effort volum leas applic permit relax consist algorithm may enabl longer volum leas timeout thu may reduc consist over head strict consist algorithm set volum timeout v longest toler write delay best effort algorithm set v longest time disconnect client server state byte timeout second object leaset delay volumet delay volumet delay volumet delay volumet callback figur state popular server vs timeout allow unknowingli access stale data may allow larger valu v servic use best effort figur show effect vari volum leas timeout number messag sent server state figur show amount server memori requir implement algorithm first show requir trace heavili load server second show demand trace tenth heavili load server xaxi show timeout second use log scale yaxi given byte repres averag number byte memori use server maintain consist state charg server byte store object volum leas callback record messag queu delay algorithm also charg byte short timeout leas algorithm use less memori callback algorithm leas algorithm discard callback inact client compar standard leas volum leas increas amount state need server increas small volum leas short server gener maintain activ volum leas delay algorithm never move client unreach set may store messag destin inact client long time use memori algorithm convers delay use short paramet move client inact set unreach set discard pend messag callback delay use less state leas callback server state byte timeout second callback delay volumet delay volumet object leaset delay volumet delay volumet figur state th popular server vs timeout algorithm note run delay short discard time increas server load number consist messag yet quantifi effect depend implement detail reconnect protocol burst load figur show cumul histogram valu shown log scale count number second period load server least x messag sent receiv per second three group line client poll object leas use short timeout client read group object server algorithm send group object renew messag server callback volum use long object leas period read traffic put less load server write result burst load popular object modifi workload peak load correspond burst one messag per client final delay use long object leas reduc burst read traffic client access group object delay send invalid messag reduc burst traffic write occur combin reduc peak load server workload experi describ previou paragraph client poll object leas period higher load callback volum two reason first system show perform modest number client larger number client would increas peak invalid load callback volum client poll object leas increas number client would increas peak server load less dramat read request addit client would period least load messag per second client object callback delay volumex figur period heavi server load default workload heavili load server spread time second reason callback volum advantag experi trace client read data server burst write volum bursti write one object volum make like anoth object volum soon modifi convers figur show bursti write workload one object modifi select k object volum modifi time graph comput k random exponenti variabl mean workload significantli increas burst invalid traffic volum callback sensit workload util trace read event gener write event synthet subsect examin differ assumpt write frequenc affect result figur show perform algorithm repres paramet vari write frequenc default workload give referenc file perday chang probabl file perday chang probabl file probabl file perday chang probabl point graph multipli perday probabl valu indic xaxi note workload gener convert perday chang probabl persecond chang probabl perday probabl greater possibl examin leas algorithm might parameter system never wish delay write second compar poll algorithm second timeout period least load messag per second delay volumex client object callback figur period heavi server load bursti write workload heavili load server callback algorithm infinit timeout result indic client littl affect chang write rate object timeout short write unlik caus mani invalid even frequenc increas fold volum leas algorithm callback cost write frequenc increas cost callback increas quickli cost delay first two algorithm long object callback period thu send invalid messag client done read pair write delay volum rise slowli send object invalid volum leas expir relat work studi build effort assess cost strong consist wide area network gwertzman seltzer compar cach consist approach simul conclud protocol provid weak consist suitabl weblik environ particular find adapt version pollt exert lower server load invalid protocol poll algorithm allow return stale data time arriv differ conclus particular observ much appar advantag weak consist strong consist term network traffic come client read stale data also use volum leas address mani challeng strong consist messag exchang write multipli delay volumex callback figur messag sent differ write frequenc xaxi repres multipli write frequenc compar default workload also build work liu cao use prototyp server invalid system evalu overhead maintain consist server compar client poll also studi way reduc server state via perobject leas studi workload base trace read request syntheticallygener write request work differ primarili treatment fault toler issu particular server recov algorithm use volum timeout notifi client must contact server renew leas liu cao algorithm requir server send messag client might cach object server also volum leas provid grace way handl network partit network failur occur liu cao algorithm must period retransmit invalid messag guarante strong consist case cach consist protocol long studi distribut file system sever aspect coda consist protocol reflect algorithm particular notion volum similar use coda howev differ two key respect first coda associ volum leas reli instead method determin server client becom disconnect combin short volum leas long object leas one main contribut second coda design differ workload design tradeoff differ exampl coda expect client commun small number server regard disconnect common occurr coda aggress attempt set volum callback server hoard environ client associ larger univers server renew volum leas client activ access server also algorithm object modifi server send volum invalid messag client hold volum leas object leas object question thu avoid fals share problem mummert warn best effort leas algorithm provid similar semant inspir coda optimist concurr protocol bayou rover also implement optimist con currenc detect react gener type conflict coda worrel studi invalidationbas protocol hierarch cach system conclud serverdriven consist practic web plan explor way add hierarchi algorithm futur cach consist protocol long studi distribut file system howard et al reach somewhat counterintuit conclus serverdriven consist gener impos less load server client poll even though serverdriven algorithm provid stronger guarante client server enough inform know exactli messag need sent mogul draft propos http includ notion group file volum reduc overhead http pollingbas consist protocol awar implement idea final note volum leas set object provid server thought provid framework heartbeat messag use mani distribut state system conclus taken three cach consist algorithm previous appli file system quantit evalu context web workload particular compar timeoutbas client poll algorithm callback algorithm server invalid write gray cheriton leas algorithm leas algorithm present tradeoff similar one offer client poll one hand long leas reduc cost read amort leas renew mani read hand short leas reduc delay write failur occur solv problem introduc volum leas volum leas delay invalid best effort volum leas algorithm allow server perform write minim delay minim number messag necessari maintain consist simul confirm benefit algorithm acknowledg work describ appear earlier paper thank jame gwertzman margo seltzer make simul avail us could valid simul thank carlo cunha azer bestavro mark crovella make bu web trace avail us work fund part nsf cise grant cda gift novel sun microsystem darpaspawar grant number n dahlin alvisi support nsf career award ccr ccr respect r hypertext transfer protocol http specul data dissemin servic reduc server load experi languag write coher protocol teapot languag support write memori coher protocol rio file cach surviv oper system crash characterist www trace protocol verif hardwar design aid effici faulttoler mechan distribut file cach consist note data base oper system scale perform distribut file system toolkit mobil inform access disconnect oper coda file system maintain strong cach consist worldwid web design cach http preliminari draft larg granular cach coher intermitt connect cach sprite network file system design implement sun network filesystem sprite nf experi cach consist protocol manag updat conflict bayou invalid larg scale network object cach use leas support serverdriven consist largescal system tr ctr xianjun geng ram d gopal r ramesh andrew b whinston scale web servic capac provis network comput v n p novemb venkata duvvuri prashant shenoy renu tewari adapt leas strong consist mechan world wide web ieee transact knowledg data engin v n p septemb randal c burn robert m ree darrel d e long effici data distribut web server farm ieee internet comput v n p juli rajeev gupta ashish puri krithi ramamritham execut incoher bound continu queri web data aggreg proceed th intern confer world wide web may chiba japan l y cao m t zsu evalu strong consist web cach techniqu world wide web v n p yuguang fang yibe lin strongli consist access algorithm wireless data network wireless network v n p may mohammad s raunak prashant shenoy pawan goyal krithi ramamritham implic proxi cach provis network server acm sigmetr perform evalu review v n p june randal c burn robert m ree darrel d e long effici data distribut web server farm ieee internet comput v n p juli edith cohen haim kaplan refresh polici web content cach comput network intern journal comput telecommun network v n p april chihung chi hongguang wang gener model character content modif dynam web object web content cach distribut proceed th intern workshop kluwer academ publish norwel ma anoop ninan purushottam kulkarni prashant shenoy krithi ramamritham renu tewari cooper leas scalabl consist mainten content distribut network proceed th intern confer world wide web may honolulu hawaii usa jian yin lorenzo alvisi mike dahlin arun iyengar engin serverdriven consist larg scale dynam web servic proceed th intern confer world wide web p may hong kong hong kong randal c burn robert m ree larri j stockmey darrel d e long scalabl session lock distribut file system cluster comput v n p octob magnu e bjornsson liuba shrira buddycach highperform object storag collabor strongconsist applic wan acm sigplan notic v n novemb purushottam kulkarni prashant shenoy weibo gong scalabl techniqu memoryeffici cdn simul proceed th intern confer world wide web may budapest hungari jian yin lorenzo alvisi mike dahlin arun iyengar engin web cach consist acm transact internet technolog toit v n p august amol nayat mike dahlin arun iyengar transpar inform dissemin proceed th acmifipusenix intern confer middlewar octob toronto canada arun iyengar daniela rosu architect web site high perform scientif program v n p januari mingkuan liu feiyu wang daniel dajun zeng web cach way improv web qo journal comput scienc technolog v n p march