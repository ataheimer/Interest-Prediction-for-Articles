t requirementbas data cube schema design a onlin analyt process olap requir effici process complex decis support queri larg databas well accept precomput data cube help reduc respons time queri dramat import design issu effici olap system therefor choic right data cube materi call problem data cube schema design problem paper show problem find optim data cube schema olap system limit memori nphard comput effici altern propos greedi approxim algorithm cmp variant algorithm cmp consist two phase first phase initi schema consist cube requir effici answer user queri form second phase cube initi schema select merg satisfi memori constraint show cmp effect prune search space optim schema lead highli effici algorithm report effici effect cmp via empir studi use tpcd benchmark result show data cube schema gener cmp enabl effici olap queri process b introduct wide accept data wareh tech nolog corpor build decis support system dss larg data warehous mani dsss onlin characterist term onlin analyt process olap system differ convent databas applic dss usual need analyz accumul inform often system need scan almost entir databas comput queri answer result poor respons time convent databas techniqu simpli fast enough today corpor decis process data cube technolog becom core compon mani olap system data cube precomput multidimension view data data warehous advantag data cube system data cube built answer decis support queri retriev cube realtim olap system model threelevel architectur consist of queri client data cube engin data warehous server bottom level olap system data warehous built top dbm data warehous come sourc oper databas in simplest case data warehous could dbm it self warehous need support fast aggrega tion exampl mean differ index techniqu bitmap indic join indic middl level olap system set data cube gener data warehous cube call base data cube base cube defin set attribut taken warehous schema contain aggreg select set at tribut aggreg comput base cube set base data cube togeth defin data cube schema olap system top level olap system queri client client besid support dss queri allow user brows data cach data cube therefor queri could complic dss queri simpl slice dice request queri submit queri client check data cube schema direct cube level answer data cube there otherwis queri pass warehous result comput sinc data cube store precomput result servic queri cube much faster warehous variou develop research studi made design three level olap sy tem mani commerci product also avail abl exampl queri client includ seagat info worksheet microsoft pivott servic current queri client product mainli provid brows report gener servic cach data gener unless answer alreadi cach complex dss queri submit client modul compil access data cube warehous warehous data cube level product like microsoft sql olap servic hyperion essbas olap server ibm db olap server warehous level mani vendor enhanc dbm product improv perform data aggreg data cube level research studi focu two issu comput aggreg base cube effici data structur use repres cube debat relat olap rolap multidimension olap molap mention olap system would abl support realtim respons cube level intercept or answer queri unfortun materi possibl cube possibl queri answer cube clearli impract due high storag mainten cost instead one care choos right combin cube queri respons time optim subject constraint system capac such storag space call set materi base cube data cube schema olap system also call problem select data cube schema data cube schema design problem key design queryeffici olap system thu lie design good data cube schema particular two import question one need address are basi shall design schema schema deriv from claim data cube schema base sole databas schema warehous instead practic approach cube design problem base user queri re quirement exampl tpcd benchmark requir answer dss queri specifi benchmark effici queri presum driven applic use data warehous often given user queri requir ie set frequent ask queri set system capac constraint eg storag limit goal deriv data cube schema optim queri respons time without violat system capac constraint see section prove optim problem nphard find optim data cube schema thu comput expens altern propos effici greedi approxim algorithm cmp requirementbas data cube schema design problem algorithm consist two phase defin initi schema first phase deriv initi set data cube call initi schema applic re quirement studi assum requir captur set frequentlyask queri faq initi schema select faq answer directli effici tpcd exampl defin cube answer one dss queri exampl th queri tpcd benchmark involv three at tribut supp nation cust nation shipdat yr schema optim second phase modifi initi schema queri respons time optim subject sy tem capac constraint data cube deriv initi schema may lot redund caus overlap attribut total size cube may exceed storag memori limit system mani cube would alway induc larg mainten cost data underli warehous chang therefor may costeffect merg cube cube merg may result fewer perhap larger cube term queri respons time queri process use merg cube gener slower use origin cube henc tradeoff queri perform cube mainten schema optim determin set data cube replac cube initi schema queri perform result cube optim constraint total size result cube within accept system limit set data cube obtain optim process call optim schema olap system rest paper organ follow section present formal definit schema optim problem section introduc greedi algorithm cmp schema optim perform studi cmp present section use data tpcd benchmark studi final conclud paper section lack space detail omit reader refer reason correl mainten cost total size cube schema inform optim search space optim schema paper assum requir olap system captur set frequent queri use q denot initi schema data cube deriv queri second phase cube design process refin set q mainten cost such storag cube set within capac system consid refin optim problem set possibl cube set search space simplifi problem assum databas data warehous repres star schema attribut queri come field dimens fact tabl usual number dimens fact tabl larg howev may mani attribut one tabl exam ple tabl part includ attribut p partkey etc dimens fact multihierarch dimens shown figur addit star schema p_brand p_contain p_partkey p_size p_type figur multihierarch structur part dimens tpcd attribut store directli fact tabl exampl attribut l shipdat l commitd l receiptd fact tabl lineitem at tribut result number attribut dimen sion need consid data cube design much number dimens tabl tpcd attribut need consid notion composit lattic use integr multihierarch dimens lattic aggreg data cube assum g set attribut queri post subset use dimens attribut construct data cube composit lattic pa oe lattic data cube construct subset a pa power set a cube associ set root lattic l two differ cube c c l deriv relationship c oe c hold c deriv c aggreg exampl cube deriv c custom date lattic l search space optim problem mention n larg tpcd search space l optim problem enorm schema optim given initi data cube schema q search space l mainten cost bound lim schema optim problem defin tabl object find c ae l costq c minim constraint q q c c q oe c mc c lim tabl schema optim problem object find cube set c cost answer frequent queri costq c smallest constraint state frequent queri q answer cube c c total mainten cost mc c cube set smaller system limit lim discuss variou measur cost mc shortli simplic assum frequent queri equal probabl sinc cube initi schema q deriv one distinct frequent queri use symbol q denot cube initi schema associ frequent queri sinc want make assumpt implement cube structur queri good measur costq c linear cost model suggest model q oe c cost comput answer queri q use cube c linearli proport number data point c use sc denot number data point c queri q q use fc q denot smallest cube c answer q formal fc q cube c q oe fc q x c q oe x sfc q sx defin maintain data cube requir disk storag cpu comput without assum implement method two measur use estim mainten cost mc c cube set ie number cube c cc sc ie total number data point cube estim total disk storag requir relat work best knowledg paper first explor data cube schema design problem sever paper publish data cube implementa tion cube select algorithm propos cube select algorithm assum one root base cube c encompass attribut queri also assum queri associ root base cube c therefor c q differ schema optim problem select alway includ c answer ie c c howev gener dss tpcd anticip mani frequent queri involv attribut henc cube schema design problem gener cube select algorithm start base cube determin cube deduc implement queri aggreg base cube answer effici tackl differ problem cube schema design tri merg cube initi schema bottomup gener set cube provid optim queri perfor manc system capac constraint satisfi search space design problem gener much larger larg number attribut present initi schema short cube select algorithm cube implement cube schema design interest question whether possibl modifi select algorithm solv schema design problem one solut appli select algorithm maxim cube q ie cannot deduc cube q gen eral one maxim cube q order adopt select algorithm includ maxim cube answer set c initi member expand c appli select algorithm them expans stop total size exce storag bound lim howev solut undesir problem first maxim cube alon alreadi exceed mainten bound cube select algorithm fail second maxim cube highli correl eg mani overlap attribut merg could benefici sometim even necessari select algorithm howev never merg cube exampl given lattic suppos cube abcd bcde maxim sabcd use select algo rithm abcd bcde select how ever replac cube abcd decreas mainten cost without increas queri cost henc select algorithm alway applic cube schema design problem complex optim problem schema optim problem comput difficult here summar complex follow theorem proof theorem found theorem given initi schema q search space l bound lim problem find subset c ae l c contain root l everi q q deriv c c given perform ratio r r find algorithm schema optim problem defin tabl whose perform bound r time optim perform nphard theorem tell us optim problem difficult one theori imposs find even effici approxim algorithm give perform guarante next section discuss greedi approxim algorithm discuss heurist use prune vast search space look good solut effici effect algorithm studi section algorithm cmp develop greedi algorithm call cmp cube merg prune outlin cmp shown figur ffc da maximum return c figur algorithm cmp iter loop line algorithm cmp select two cube set a cube remov c cube ad c cube set select cube q still answer new c algorithm termin mainten cost cube set longer exce limit lim select cube set govern evalu function ff evalu function defin reduct mainten cost larg increment queri cost small algorithm use follow ff function increaseinquerycost new c numer formula save mainten cost we use mc formula result rest paper unless state explicitli also valid denomin increment queri cost f c t smallest ancestor c properti evalu function ff cmp search space enorm subsect show properti evalu function use prune search space effect theorem suppos l ff defin abov c set cube cmp enter iter suppos select base c maxim valu ff c one combin give maximum valu combin fewest cube must follow properti jd follow true a smallest common ancestor b b accord theorem determin case ff attain maximum valu also contain smallest common ancestor remov cube significantli reduc search space furthermor item b theorem make evalu mani combin unnecessari corollari true corollari tell us need consid contain cube deriv anoth cube d d corollari impli ff valu maximum develop procedur selectcub use result prune candid search space cmp build direct acycl graph dag cube c edg deriv relationship oe among cube c partit graph disjoint path partit dag travers graph maxim node ancestor toward bottom node descend visit node and associ edg remov repeat procedur remain node node remov node path derivedfrom relationship accord corollari two node path pick togeth d henc pick one node path practic number path larg prune significantli reduc number possibl candid henc possibl combin follow theorem pathbas process deriv anoth prune techniqu reduct search space corollari assum c partit p path let k k deltadeltadeltak p m sa k set cube t ff cannot attain maximum valu use d corollari suggest organ se lectcub procedur start bottom path compos candid node select procedur reach candid combin satisfi condit corollari yettobeevalu candid abov current combin lattic hierarchi ig nore illustr prune process exampl shown figur cube set c partit path contain node respec tive select combin bottom node path b b b suppos evalu combin sfc b true accord corollari remain combin includ b need evalu prune combin are g combin cube fb eleven combin prune case figur exampl prune cmp input lsearch space ca set cube r size restrict outputdcub remov a new cube ad procedur selectcubesinput l c partit c p total path path add pathi rbuf call procedur iter procrbuf re remov pathi rbuf return result re procedur iter procrbuf re rbufpath select path pathicurnodeth select cube ith path rbufa smallest common ancestor condid cube combin re buffer content result point restrict candid size start first path select yet f srbufa sfc pcurnod need iter rbufnopath r start p total f add path rbuf add pathi rbuf call procedur iter procrbuf re remov pathi rbuf figur procedur selectcub rmp rmp algorithm even though mani combin prune cmp search optim ff valu may still need consid larg number combin involv node multipl path reduc complex one option restrict number node candid combin remark theorem still hold even size restrict call search algorithm rmp candid size larger certain constant r r consid perform studi show rmp could good approxim unrestrict cmp obvious good depend valu r p number path c rmp becom cmp list procedur selectcub rmp figur first step procedur selectcub c partit number path loop line line evalu possibl combin travers path via recurs procedur iter proc set cube remov d cube ad a attain maximum valu ff return line sequenc node travers construct follow two iter loop ffl combin path construct loop line line loop line line insid recurs procedur figur show exampl suppos size restrict r set sequenc path combin consid selectcub fp g ffl travers node path perform line procedur iter proc call line iter loop line line figur first combin travers sequenc delta travers result corollari use prune combin cannot attain maximum valu evalu line follow two condit check relationship rmp mp although prune method introduc effect rmp complex still high r larg thu interest see mp perform compar gener rmp theorem suppos c state rmpr enter iter identifi new set a assum mainten cost function mc if possibl ds cannot prune away either corollari satisfi follow da pair select rmpr mp ident theorem show suffici condit rmpr mp equival tri algorithm real data set result obtain mp close rmp even larg valu r restrict effici rmp algorithm with small r thu viabl choic mani occas perform studi carri perform studi algorithm sun enterpris run solari first goal studi good schema gener cmp mp second goal studi effici two algorithm prune effect use tpcd benchmark data studi databas gener scale factor size databas gb queri benchmark frequent queri model good schema gener first experi compar costq c output c cmp mp result also compar random select algorithm la bele rand randomli merg pair cube iter mainten cost limit exceed use mc c number cube c comput mainten cost simplicityeeee rand figur queri cost schema gener figur show result greph show cmp mp significantli better random se lection particular cost limit small combin algorithm make wise pick experi queri cost cmp mp except curv cmp gap one point reduc schema cube next reduct cube select replac one cube henc size c becom contrast step mp replac cube anoth effici cmp second goal studi effici cmp particular interest studi effect prune search space optim problem effect first prune method newli ad cube determin combin evid therefor consid two prune method base corollari measur effect averag prune rate defin percentag prune combin number possibl combin close two curv cmp mp due extrem low correl queri cube tpcd result shown figur from figur see averag prune rate higher case prune rate becom smaller mainten cost limit decreas becaus small limit cmp forc merg cube higher level lattic hierarchi figur henc chanc prune becom smaller fact due design purpos benchmark correl among initi set cube tpcd quit low high prune rate experi show cmp effect even notsofavor situat mani gener applic expect frequent ask dss queri high corr lation prune rate cmp even better shown experi prune figur averag prune rate cmp respons timeesec figur respons time cmp mp final compar effici cmp mp measur respons time figur show mp least two order magnitud faster cmp consid also effect mp fig ure result show mp effect effici approxim solut data cube schema design problem discuss conclus basi phase schema design approach set cube extract queri requir valid approach observ vendor alreadi someth similar exampl microsoft sql olap server allow user option log queri submit fine tune set cube log frequent queri identifi group similar type thu feasibl identifi cube initi schema frequent queri current gener practition design cube schema adhoc way like far optim problem becom seriou data cube requir built larg data warehous retail giant internet ecommerc shop databas contain larg number attribut formul second phase design problem optim problem develop effici greedi algorithm solv it data cube schema defin immin problem follow queri process given dss queri submit queri client queri client modul need determin whether queri process data cube level warehous level queri answer cube one need determin cube use multipl solut exist one need determin best choic cube propos twophas approach deal design problem data cube system initi schema deriv user queri requir final schema deriv initi schema optim process greedi algorithm cmp propos optim effect prune search space optim solut variant cmp studi reduc search cost experi real data tpcd perform investig behavior cmp result observ perform studi confirm cmp effici algorithm r comput multidimension aggreg overview data wareh olap technolog httpwww ibm db olap server implement data cube effici microsoft sql olap servic pivott ser vice improv queri performac variant index materi view select multidimension dataset transact process perform council arraybas algorithm simultan multidimension aggreg tr multit join bitmap join indic implement data cube effici overview data wareh olap technolog improv queri perform variant index arraybas algorithm simultan multidimension aggreg data cube materi view select multidimension dataset aggregatequeri process data wareh environ comput multidimension aggreg ctr tapio niemi jyrki nummenmaa peter thanisch construct olap cube base queri proceed th acm intern workshop data wareh olap p novemb atlanta georgia usa edward hung david w cheung ben kao optim data cube system design journal intellig inform system v n p juli