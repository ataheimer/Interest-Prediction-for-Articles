t singl machin schedul releas date a consid schedul problem minim averag weight complet time n job releas date singl machin first studi two linear program relax problem one base timeindex formul completiontim formul show equival prove on log n greedi algorithm lead optim solut relax proof reli notion mean busi time job concept enhanc understand lp relax base greedi solut describ two simpl random approxim algorithm guarante deliv feasibl schedul expect object function valu within factor respect optimum base concept common independ alphapoint respect analysi impli particular worstcas rel error lp relax provid instanc show least ee approx algorithm may derandom determinist version run on time random algorithm also appli onlin set job arriv dynam time one must decid job process without knowledg job releas afterward b introduct studi singlemachin schedul problem releas date object minim weight sum complet time dene follow set ng n job schedul singl disjunct machin job j process time releas time r j assum releas date process time integr complet time job j schedul denot c j goal nd nonpreempt schedul minim w j s given posit weight mit depart mathemat room massachusett avenu cambridg usa univers british columbia faculti commerc busi administr vancouv bc canada vt z email mauricequeyrannecommerceubcca z mit sloan school manag room e massachusett avenu cambridg usa x technisch universitat berlin fakultat ii mathematik und naturwissenschaften institut fur mathematik strae de juni berlin germani email skutellamathtuberlind peoplesoft inc san mateo ca usa email yaoguang wangpeoplesoftcom classic schedul notat problem denot j r strongli nphard even w one key ingredi design analysi approxim algorithm well design implicit enumer method choic bound optim valu sever linear program base well combinatori lower bound propos well studi schedul problem see exampl dyer wolsey queyrann queyrann schulz well belouadah posner pott lp relax involv varieti dierent type variabl which e g either express whether job j complet time nonpreempt timeindex relax whether process time preemptiv timeindex relax job j complet complet time relax ation dyer wolsey show nonpreempt timeindex relax stronger preemptiv timeindex relax show latter relax equival complet time relax make use socal shift parallel inequ fact turn polyhedron dene inequ supermodular henc one optim use greedi algorithm similar situat aris greedi solut may actual interpret term follow preemptiv schedul call lp schedul point time schedul among avail job one largest ratio weight process time uma wein point valu lp solut coincid one combinatori bound belouadah posner pott base idea allow job split smaller piec schedul individu show optim valu j r j j time lower bound given three equival relax preemptiv timeindex relax complet time relax combinatori relax prove result qualiti relax convert preemptiv lp schedul nonpreempt schedul techniqu lead approxim algorithm j r j j recal approxim algorithm polynomialtim algorithm guarante deliv solut cost time optim valu random approxim algorithm polynomialtim algorithm produc feasibl solut whose expect object function valu within factor optim valu techniqu convert preemptiv schedul nonpreempt schedul design approxim algorithm introduc phillip stein wein specic show list schedul order complet time given preemptiv schedul produc nonpreempt schedul increas total weight complet time factor paper also introduc concept point notion also use hall shmoy wein connect nonpreempt timeindex relax dyer wolsey design approxim algorithm variou schedul environ purpos point job j given preemptiv schedul rst point time fraction j complet one choos dierent valu sequenc order nondecreas point preemptiv schedul may lead dierent nonpreempt schedul increas exibl led improv approxim algorithm chekuri motwani natarajan stein goeman j r chose random analyz expect perform result random algorithm show that use common valu job appropri probabl distribut sequenc order point lp schedul expect perform wors time optim preemptiv timeindex lp valu also prove select separ valu j job j one improv bound factor algorithm inspir partli resembl algorithm hall et al chekuri et al contrast hall et al refer andor olin onlin type schedul determinist random determinist phillip et al hall et al schulz hall et al chakrabarti et al combin schedul tabl summari approxim bound j r j schedul obtain sequenc job order nondecreas point lp schedul use jobdepend j s yield schedul result discuss paper second doubl line subsequ anderson pott gave determinist competit algorithm unitweight problem j r j rst constantfactor approxim algorithm due phillip stein wein perform ratio also work onlin determinist competit algorithm given stougi hoogeveen vestjen algorithm optim determinist onlin algorithm chekuri motwani natarajan stein gave random ee approxim algorithm optim random onlin algorithm exploit preemptiv timeindex lp relax which one hand provid us highli structur optim solut and hand enabl us work mean busi time also use random point algorithm chekuri et al start arbitrari preemptiv schedul make use random point relat valu result schedul given preemptiv schedul underli lp relax approach give better approxim j r insight limit power preemption link lp schedul preemptiv timeindex lp relax help us obtain good approxim total weight complet time variant algorithm also work onlin job arriv dynam time and point time one decid job process without knowledg job releas afterward even onlin set compar valu comput schedul optim olin schedul deriv bound competit ratio o line set see tabl account evolut olin onlin approxim result singl machin problem consider main ingredi obtain result present paper exploit structur lp schedul surprisingli lp schedul solv strongli nphard preemptiv version problem j r howev show lp schedul solv optim preemptiv problem relat object function j mean busi time job j i e averag point time machin busi process j observ that although j r equival optim problem nonpreempt case sinc c consid preemptiv schedul approxim techniqu present paper also prove use gener schedul problem problem preced constraint j r sequenc job order random point base optim solut timeindex relax lead approxim algorithm approxim algorithm ident parallel machin schedul given result base timeindex lp relax optim solut interpret preemptiv schedul fast singl machin job assign randomli machin sequenc order random j point preemptiv schedul correspond schedul problem unrel parallel machin r j r j j perform guarante obtain random round base convex quadrat program relax inspir timeindex lp relax like one discuss herein refer detail discuss use point machin schedul problem signic progress recent made understand approxim schedul problem averag weight complet time object skutella woeging develop polynomialtim approxim scheme schedul ident parallel machin absenc releas date subsequ sever research group found polynomialtim approxim scheme problem releas date see result joint confer proceed public detail brie discuss practic consequ work savelsbergh uma wein uma wein perform experiment studi evalu part qualiti lp relax approxim algorithm studi herein j r relat schedul problem rst author report that except instanc deliber construct hard approach present formul algorithm deliv surprisingli strong experiment perform also note the idea led improv approxim algorithm also lead heurist quit eectiv empir experi furthermor extend give improv heurist complex problem aris practic author followup studi report coupl local improv lpbase heurist gener produc best solut also nd simpl heurist often outperform lpbase heurist whenev machin becom idl heurist start nonpreempt process avail job largest w j p j ratio analyz dierenc lp schedul heurist schedul chou queyrann simchilevi subsequ shown asymptot optim onlin heurist class instanc bound job weight bound process time content paper follow section concern lp relax relationship begin present discuss lp schedul section review timeindex formul introduc dyer wolsey show solv optim lp schedul section present mean busi time relax or complet time relax prove among properti equival timeindex formul section explor polyhedr consequ particular fact mean busi time relax up scale job process time supermodular linear program jobbas method construct lp schedul equival correspond greedi algorithm section deal approxim algorithm deriv lp relax section present method construct j schedul allow us analyz bound job complet time result schedul section deriv simpl bound schedul j schedul use determinist common uniformli distribut random j s use appropri probabl distribut improv approxim bound valu schedul section valu j schedul section also indic algorithm derandom on time construct determinist schedul perform guarante section show random approxim also appli onlin set and section present class bad instanc ratio optim object function valu lp bound arbitrarili close e constant dene lower bound approxim result obtain present approach conclud section discuss relat problem open question relax section present two linear program relax j r j j show equival discuss polyhedr consequ relax follow preemptiv schedul play crucial role point time schedul preemptiv avail job highest w j p j ratio assum throughout paper job index order nonincreas ratio w wn pn tie broken accord order therefor whenev job releas job process if ani preempt releas job smaller index refer preemptiv schedul lp schedul see figur exampl lp schedul figur lp schedul job instanc given r r higher rectangl repres job larger weight process time ratio time shown horizont axi notic lp schedul gener minim preemptiv schedul surpris sinc preemptiv problem j r strongli nphard shown howev total weight complet time lp schedul alway within factor optim valu j r bound tight see lp schedul construct on log n time see thi describ implement may seen dynam eventori or use terminolog machinebas even execut onlin job dynam arriv time algorithm keep prioriti queue current avail job yet complet process ratio w j p j key anoth eld indic remain process time schedul decis made two type event job releas job complet process former case releas job ad prioriti queue latter case complet job remov prioriti queue then either case top element prioriti queue the one highest w ratio process queue empti move next job releas none job process lp schedul complet implement result total on prioriti queue oper sinc oper implement olog n time algorithm run on log n time lp schedul also dene somewhat dierent manner may seen static jobbas consid job one time order nonincreas w j p j schedul job j earli possibl start r j preempt whenev machin busi process anoth job that thu came earlier w j p j order pointofview lead altern on log n construct lp schedul see timeindex relax dyer wolsey investig sever type relax j r j j strongest one timeindex consid weaker two timeindex formul call formul d use two type variabl process time interv zero otherwis j repres start time job j simplic add p j j replac result express c j give equival relax subject d upper bound makespan optim schedul for exampl refer relax preemptiv timeindex relax express c j given correspond correct valu complet time job j preempt interpret term mean busi time given next section case preemption observ number variabl formul pseudo polynomi elimin c j relax use obtain transport problem and result j assum integr lemma exist optim solut d j f g j indic d solv on log n time actual one deriv feasibl solut d lp schedul let lp j equal job j process theorem solut lp deriv lp schedul optim solut d proof proof base interchang argument consid optim solut d exist j k r j replac j j k obtain anoth feasibl solut increas object function valu result solut must therefor also optim repeat interchang argument deriv exist optim solut exist j k r j impli solut must correspond lp schedul particular despit pseudopolynomi number variabl lp relax d optim solut obtain ecient make use fact well special structur lp schedul design analysi approxim algorithm see section note spite nice properti preemptiv timeindex lp relax d solv neither j r former case process job lp solut may fail consecut latter case equat necessarili dene complet time job preemptiv lp schedul shown next lemma mean busi time relax given preemptiv schedul let j indic function process job j time t i e j t machin process j time otherwis avoid patholog situat requir that preemptiv schedul machin start process job posit amount time given preemptiv schedul dene mean busi time j job j averag time machin process j i e instanc exampl given figur use throughout paper mean busi time job rst establish import properti j next two lemma lemma preemptiv schedul let c j j denot complet mean busi time respect job j job j job j preempt proof job j process without preemption j process interv total length l time c r j t must process time interv total length l c j p j therefor proof complet let n denot set job dene let t js j t sinc machin capac constraint t f g t may view indic function job set s thu dene mean busi time set r dt note j t so unlik start complet time mean busi time job set simpl weight averag mean busi time element one consequ observ valid shift parallel inequ see eg below lemma set job preemptiv schedul mean busi time vector equal hold job schedul without interrupt r min s r min s proof note r r min s t dt t r min s r r min s t minim uniqu minim among feasibl preemptiv schedul job continu process r min s r min s ps minimum valu psr min s ps lower bound feasibl preemptiv schedul result lemma follow linear program provid lower bound optim valu j r henc j r j j subject r proof follow theorem later develop use notion canon decomposit set job consid schedul process job earli possibl say order releas date schedul induc partit machin busi process job exactli disjoint refer partit canon decomposit s set canon ident canon decomposit i e canon decomposit fsg thu set canon feasibl schedul job time interv r min s r min sp note set exampl canon wherea subset f g not decomposit ffg f gg let canon decomposit n lemma impli valid inequ mean busi time vector preemptiv schedul word relax r may written as min theorem let lp j mean busi time job j lp schedul lp optim solut r proof lemma lp feasibl solut r prove optim lp construct lower bound optim valu r show equal object function valu lp recal job index nonincreas order w ki denot canon decomposit i observ vector let w n p n therefor express nonneg combin express set construct lp schedul job canon set continu process r min s r min s lp schedul thu feasibl solut r canon set r min s last equat follow lemma combin deriv lower bound feasibl solut r lower bound attain lp schedul from theorem deriv valu two relax d r equal corollari lp relax d r yield optim object function valu i e weight w valu comput on log n time proof equival lower bound note mean busi time lp j job j lp schedul express lp lp solut d deriv lp schedul result follow directli theorem shown earlier lp schedul construct on log n time although lp schedul necessarili minim preemptiv sched ule theorem impli minim preemptiv schedul addit lemma lp schedul also optim preemptiv nonpreempt problem preempt job exampl case process time equal job releas date thu lp schedul provid optim solut problem j r alreadi known latter case coincid smith ratio rule see queyrann schulz former case polyhedr consequ consid polyhedr consequ preced result let p feasibl region dene constraint relax d addit denot pr fm r polyhedron dene constraint relax r theorem i polyhedron pr convex hull mean busi time vector preemptiv sched ule moreov everi vertex pr mean busi time vector lp schedul ii polyhedron pr also imag p space mvariabl linear map dene j n proof i lemma impli convex hull mean busi time vector feasibl preemptiv schedul contain pr show revers inclus suce show a everi extrem point pr correspond preemptiv schedul b everi extrem ray pr direct recess convex hull mean busi time vector properti a second part statement i follow theorem fact everi extrem point pr uniqu minim note extrem ray pr n unit vector r n immedi extens preemptiv schedul mean busi time result bala impli unit vector r n direct recess convex hull mean busi time vector complet proof i ii rst show imag mp contain pr thi let vector p n canon decomposit g denit my j r min s inequ follow constraint dene p interchang argument alreadi use proof theorem show my pr thu mp show revers inclus use observ proof part i pr repres sum convex hull mean busi time vector lp schedul nonneg orthant sinc equat mean busi time vector lp lp schedul project correspond vector lp remain show everi unit vector e j direct recess mp thi x lp schedul let lp denot associ yvector mean busi time vector respect job j n real need show lp let max argmaxfi lp ng choos lp choos integ k otherwis associ preemptiv schedul process job j done interv postpon time unit interv therefor mean busi time vector k k j let p j vector lp e j convex combin correspond convex combin lp sinc p convex and sinc map linear lp view earlier result singl machin schedul ident releas date well parallel machin schedul unit process time integ releas date interest note feasibl set pr mean busi time relax is scale job process time supermodular polyhedron proposit set function h dene supermodular proof consid two element subset n n fj kg may construct lp schedul minim use jobbas method consid rst job job k note consid job sequenc lead schedul minim job weight process time object function denit result mean busi time lp satisfi note job k schedul earlier releas date rst p k unit idl time left insert job s thu lp k mean p k time unit similarli may construct lp schedul whose mean busi time vector denot f consid rst job s f f job k f insert subset schedul job k cannot use idl time interv earlier use former schedul lp and previous avail idl time may occupi job j caus delay mean busi time job k thu f k therefor f suce establish h supermodular altern proof supermodular h deriv fact observ dyer wolsey alreadi mention abov relax d becom transport problem elimin c j s inde interpret nemhaus wolsey fisher result shapley follow valu transport problem function supermodular one consequ proposit jobbas method construct lp schedul manifest greedi algorithm minim supermodular polyhedron pr nalli note separ problem polyhedron pr solv combina torial one separ famili inequ tri possibl valu r min s of n appli on log n separ routin queyrann problem without releas date overal separ routin implement on time observ bottleneck step queyrann algorithm sort mean busi time job need done whole job set provabl good schedul lp relax section deriv approxim algorithm j r j j base convert preemptiv lp schedul feasibl nonpreempt schedul whose valu bound term optim lp valu yield result qualiti comput schedul lp relax consider sinc valu comput schedul upper bound optim lp valu lower bound valu optim schedul section below describ famili instanc ratio optim valu j r problem lower bound zr zd arbitrarili close e lower bound e e set target design approxim algorithm base lp relax order convert preemptiv lp schedul nonpreempt schedul make use socal point job point j job j rst point time fraction job j complet lp schedul i e j process p j time unit particular j equal complet time dene start time job j notic that denit mean busi time lp j job j lp schedul averag point also use follow notat xed job j denot fraction job k complet lp schedul time j k particular j amount idl time occur time start job j lp schedul denot idl note k idl implicitli depend xed job j construct idl time start complet job j lp schedul therefor express js point given dene schedul schedul job process nonpreempt earli possibl order nondecreas point denot complet time job j schedul c idea schedul nonpreempt order point preemptiv schedul introduc phillip stein wein use mani subsequ result area idea extend individu i e jobdepend j point denot vector consist j s then j schedul construct process job earli possibl nondecreas order j point complet time job j j schedul denot c figur compar schedul j schedul deriv lp schedul figur sequel present sever result qualiti schedul j schedul result also impli bound qualiti lp relax previou section main result construct random j schedul whose expect valu factor optim lp valu therefor lp relax d r deliv lower bound least time optim valu correspond random algorithm implement onlin competit ratio run time on log n also derandom run olin on time also investig case singl common show best schedul alway within factor optimum figur nonpreempt schedul for j schedul shown lp schedul respect notic common valu would lead latter schedul bound complet time j schedul analyz complet time job j schedul consid nonpreempt schedul similar structur are howev construct slightli dierent convers routin call j convers consid job j n order nonincreas j point iter chang preemptiv lp schedul nonpreempt schedul appli follow step i remov j p j unit job j process j leav machin idl correspond time interv say idl time caus job j ii delay whole process done later iii remov remain j fraction job j machin shrink correspond time interv shrink time interv mean discard interv move earlier correspond amount process occur later iv process job j releas time interv figur contain exampl illustr action j convers start lp schedul figur observ result schedul job process nondecreas order j point job j start time latter properti use analysi onlin j schedul figur illustr individu iter j convers lemma complet time job j schedul construct equal proof consid schedul construct convers complet time job j equal idl time start plu sum process time job start later j sinc job process nondecreas order j point amount process complet job j idl time start job j written sum idl time idl alreadi exist lp schedul js start plu idl time start job j caus step i j convers notic step iii creat addit idl time sinc shrink aect time interv job k start later j i e k unit idl time job k contribut unit idl time result total idl time start job j written complet time job j schedul construct equal sum express result follow equat follow lemma complet time c j job j nonpreempt schedul construct henc feasibl schedul sinc j schedul process job earli possibl order j convers schedul obtain follow corollari corollari complet time job j j schedul bound bound schedul j schedul start result qualiti schedul xed common valu theorem xed i valu schedul within factor max optim lp valu particular bound simultan ii length schedul within factor optim makespan proof proof ii immedi consequ corollari follow proof theorem i sucient prove that canon set s inde use lemma would follow prove result consid canon set let us assum that renumb job order necessarili anymor nonincreas order w j p j fix job j s corollari deriv k k repres fraction job k process lp schedul j let r denot set job k k r min s and thu k sinc canon set job process continu lp schedul r min s therefor everi job k k either r observ impli pr r min s thu simplifi sinc job schedul gap r min s r min s ps combin deriv multipli p j sum s get impli sequel compar complet time c j everi job j complet time lp schedul howev xed common valu exist instanc show type jobbyjob analysi give bound better one also show that given valu exist instanc object function valu schedul bad twice lp lower bound view result advantag use sever valu appear instanc simultan bad choic fact point develop full power combin random i e common even jobdepend j s chosen randomli accord appropri densiti function also motiv equat relat expect point job uniform distribut lp variabl lp random valu j analyz expect valu result schedul compar optim lp valu notic bound expect valu prove exist vector j correspond j schedul meet bound moreov result alway comput j polynomi time derandom algorithm standard method see proposit although current best known bound achiev j schedul jobdepend j s investig schedul singl common well one hand help better understand potenti advantag j schedul hand random algorithm reli singl admit natur derandom fact easili comput schedul least object function valu refer schedul bestschedul proposit below show n dierent schedul bestschedul construct on time evalu dierent schedul warmup exercis kind analysi use start prove bound expect worstcas perform ratio uniformli gener j schedul follow theorem result improv use intric probabl distribut take advantag addit insight structur lp schedul theorem let random variabl j pairwis independ uniformli drawn then expect valu result j schedul within factor optim lp valu proof rememb optim lp valu given get claim result prove eu c denot expect function f random variabl latter uniformli distribut overal perform follow jobbyjob bound linear expect consid arbitrari xed job j n analyz expect complet time j rst keep j xed consid condit expect eu c random variabl j k independ k j corollari equat yield eu c obtain uncondit expect eu c integr possibl choic eu c z eu c last equat follow turn deriv improv result start analysi structur lp schedul consid job j assum that lp schedul j preempt time process resum time s job process smaller index result job complet process time t thu lp schedul start time complet time job j machin constantli busi altern process portion j complet process group job smaller index convers job preempt wait least job j complet process resum captur structur partit xed job j set job n n fjg two subset n denot set job process start complet job j remain job put subset n notic function k constant job k n simplifi notat write k k j job k n fraction job j process start job k function k given rewrit equat plug equat yield corollari rewritten where k n use fact k k j equival j k express ect structur insight need prove stronger bound j schedul schedul sequel mention abov second ingredi improv bound sophist probabl distribut random variabl j view bound c given cope two contrari phenomena one hand small valu k keep term form righthand side small hand choos larger valu decreas number term rst sum righthand side balanc two eect contribut reduc bound expect valu c improv bound schedul subsect prove follow theorem theorem let uniqu solut equat satisfi dene c e chosen accord densiti function expect valu result random schedul bound c time optim lp valu prove theorem state two properti densiti function f crucial analysi correspond random schedul lemma function f given theorem densiti function follow properti properti i use bound delay job j caus job n correspond rst summat righthand side second summat ect delay caus job n bound properti ii proof lemma short comput show function f densiti function sinc z e order prove properti i observ therefor get properti ii hold sinc lefthand side case e complet proof lemma proof theorem lemma i denot expect valu random variabl distribut accord densiti f given theorem thu use inequ lemma deriv c last inequ follow denit n k last equal follow notic densiti function satisfi properti i ii lemma valu c directli lead jobbyjob bound e f c correspond random schedul easi see unit function satis lemma c establish follow variant theorem corollari let random variabl uniformli drawn then expect valu result schedul within factor optim lp valu use exponenti densiti function motiv rst properti lemma notic function c e satis equal hand exponenti function truncat order reduc term second properti fact truncat exponenti function f theorem shown minim c therefor optim analysi addit exist class instanc ratio expect cost schedul determin use densiti function cost optim lp valu arbitrarili close show preced analysi essenti tight conjunct truncat exponenti function theorem impli bestschedul valu zr follow proposit show random algorithm yield schedul easili derandom sampl space small proposit n dierent schedul comput on time proof goe schedul chang whenev point say reach time job j preempt thu total number chang schedul bound total number preemption sinc preemption occur lp schedul whenev job releas total number preemption n number schedul n sinc schedul comput on time result run time follow improv bound j schedul subsect prove follow theorem theorem let uniqu solut equat e satisfi dene let s chosen pairwis independ probabl distribut densiti function then expect valu result random j schedul bound c time optim lp valu bound theorem yield also bound qualiti lp relax corollari lp relax d r deliv on log n time lower bound least time object function valu optim schedul follow line last subsect state two properti densiti function g crucial analysi correspond random j schedul lemma function g given theorem densiti function follow properti denot expect valu random variabl distribut accord g notic similar lemma lemma last subsect again properti i ii use bound delay job j caus job n n respect righthand side inequ properti i yield e g c proof lemma short comput show thu follow argument proof lemma g densiti function properti i hold order prove properti ii rst comput z e properti ii certainli hold get e e e e complet proof lemma proof theorem analysi expect complet time job j random schedul follow line argument develop proof theorem first consid xed choic j bound correspond condit expect e g c second step bound uncondit expect e g c integr product interv xed job j xed valu j bound lemma i yield last inequ follow use properti ii equat yield result follow linear expect total number possibl order job log n show follow lemma maximum number j schedul n use follow observ let q j denot number dierent piec job j lp schedul thu q j repres number time job j preempt plu sinc n preemption lemma maximum number j schedul n bound attain proof number j schedul given note q preempt lp schedul thu mean inequ furthermor bound attain q achiev exampl instanc therefor contrast case random schedul cannot aord derandom random approxim algorithm enumer j schedul instead use method condit probabl from inequ obtain everi vector upper bound object function valu correspond j schedul denot righthand side inequ take expect use theorem alreadi shown c job j n let g denot set interv j correspond q j piec job j lp schedul consid job one one arbitrari order say assum that step j derandom algorithm identi interv q use condit expect lefthand side inequ sinc exist least one interv q j q j therefor suce identifi interv q satisfi may conclud determin way interv q j everi job note schedul q q q n now determinist object function valu j schedul desir everi check whether interv q amount evalu on term may comput constant time sinc observ lemma total follow derandom algorithm run on time proposit random approxim algorithm derandom result determinist algorithm run on time perform guarante well construct provabl good schedul onlin subsect show random approxim result also appli onlin set sever dierent onlin paradigm studi area schedul refer survey consid set job continu arriv time and time t must construct schedul time without knowledg job arriv afterward particular characterist job i e process time weight becom known releas date alreadi shown section lp schedul construct onlin unfortun given vector j correspond j schedul cannot construct onlin learn posit job k sequenc dene nondecreas point time k k therefor cannot start job k earlier point time onlin set hand howev start time k j schedul earlier k point k k although j schedul cannot construct onlin discuss reveal follow variant call onlin j schedul construct onlin given vector j process job earli possibl order j point addit constraint job k may start time k k see figur exampl note idea delay start job sucient inform good decis avail set introduc phillip stein wein notic nonpreempt schedul construct straint valu therefor upper bound valu onlin j schedul analysi last subsect reli bound given corollari also hold schedul construct yield follow result theorem instanc schedul problem j r j j a choos construct onlineschedul yield determinist onlin algorithm competit ratio run time on log n b choos j s randomli pairwis independ accord densiti function g theorem construct onlin j schedul yield random onlin algorithm competit ratio run time on log n competit ratio theorem beat determinist onlin lower bound unitweight problem j r problem stougi vestjen prove lower bound e random onlin algorithm figur onlin schedul previous consid instanc j point lp schedul shown comparison bad instanc lp relax subsect describ famili instanc ratio optim valu j r j j problem lower bound zr zd arbitrarili close e instanc n n job follow one larg job denot job n small job denot larg job process time releas date r n small job j zero process time weight releas date r throughout paper assum process time nonzero order satisfi assumpt could impos process time k small job multipli process time releas date k make data integr let k tend inniti simplic howev let process time small job lp solut job n start time preempt small job henc mean busi time are lp object function valu notic complet time job j fact equal lp actual valu preemptiv schedul equal zr consid optim nonpreempt schedul c let c n k number small job process job n optim process small job releas date start process job n date r job k also optim process remain job k job n let c k denot result schedul is c k otherwis object function valu nn therefor optim schedul c n object function valu n grow larg lp object function valu approach e optim nonpreempt cost approach e even though polynomialtim approxim scheme discov problem algorithm develop variant them like superior practic experiment studi savelsbergh et al uma wein indic lpbase relax schedul order j point power tool varieti schedul problem sever intrigu question remain open regard qualiti linear program relax would interest close gap upper lower bound qualiti relax consid paper point situat strongli nphard problem j r similar shown complet time relax worst case least factor factor optimum latter bound achiev schedul preemptiv lpbase random point chekuri et al prove optim nonpreempt valu ee time optim preemptiv valu exampl section show bound tight dyer wolsey propos also nonpreempt timeindex relax stronger preemptiv version studi here relax involv variabl job time repres whether job complet rather simpli process time relax least strong preemptiv version worstcas ratio known strictli better random onlin algorithm also gap known upper lower bound competit ratio given end section determinist onlin algorithm competitv algorithm anderson pott optim acknowledg research rst author perform partli author core louvain laneuv belgium support part nsf contract ccr research second author support part research grant nserc the natur scienc research council canada uniturim spa societa per luniversita nel rimines whose support grate acknowledg research third author perform partli depart mathemat technisch universitat berlin germani fourth author support part donet within frame tmr programm contract number erb fmrxct stay core louvainlaneuv belgium academ year fth author support research fellowship maxplanck institut comput scienc saarbrucken germani also grate anonym refere whose comment help improv present paper r introduct algorithm rinnooy kan rinnooy kan rinnooy kan p random algorithm mathemat program extend abstract appear titl schedul job arriv time r burkard cite person commun tr ctr jairo r montoyatorr competit analysi better onlin algorithm minim total complet time singlemachin journal global optim v n p septemb leah epstein rob van stee lower bound onlin singlemachin schedul theoret comput scienc v n p r n uma joel wein david p williamson relationship combinatori lpbase lower bound nphard schedul problem theoret comput scienc v n p septemb martin w p savelsbergh r n uma joel wein experiment studi lpbase approxim algorithm schedul problem inform journal comput v n p winter martin skutella convex quadrat semidefinit program relax schedul journal acm jacm v n p march f afrati i mili design ptass minsum schedul problem discret appli mathemat v n p march rolf h mhring andrea s schulz frederik stork marc uetz solv project schedul problem minimum cut comput manag scienc v n p march