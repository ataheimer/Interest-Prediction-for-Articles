t edgeconnect augment preserv simplic a given simpl graph gve goal find smallest set f new edg gvecup f kedgeconnect simpl recent problem shown npcomplet paper prove opt_pk high enoughdepend k onlythen opt _sk opt_pk hold opt_sk opt_pk size optim solut augment problem without simplicitypreserv requir respect furthermor opt_sk opt _pkleq gk hold certain quadrat function k base fact algorithm given comput optim solut time on fix k result extend case nonuniform demand well b introduct last decad sever graph augment problem investig especi connect augment problem attract consider attent due variou connect socal network design problem model surviv problem telephon comput etc network problem graph or digraph g target connect number k given goal find smallest set f new edg make g kedgeconnect is augment graph kedgeconnect jf j small possibl sometim goal increas vertexconnec g paper consid edgeconnect problem unless state otherwis note set f new edg may contain parallel edg edg parallel edg g well edgeconnect augment problem number extens solv effici sever polynomi algorithm develop see depart mathemat comput scienc odens univers campusvej dk odens denmark second author support danish natur scienc research council grant no also mention import result for survey area see howev sever version connect augment problem remain open sometim goal increas connect mainta certain properti start graph g depend properti one obtain problem differ natur exampl kant bodlaend consid problem goal increas vertexconnect planar g preserv and prove version npcomplet hsu kao want maintain bipartit increas variant vertexconnect graph and show done polynomi time recent gabow szigeti author prove edgeconnect optim increas polynomi time preserv bipartit or gener lpartit paper deal anoth properti preserv simplic g mention it import open problem find algorithm add parallel edg partial result direct obtain frank chou naor et al taoka et al watanab yamakado detail given complex gener problem still open recent second author prove simplic preserv kedgeconnect augment problem np complet even start graph alreadi edgeconnect howev shall prove problem becom polynomi solvabl target connect k fix shall give on algorithm variant e ledgeconnect simpl graph jv j simplic preserv kedgeconnect augment problem find smallest set f new edg make g kedgeconnect without creat parallel edg is must kedgeconnect simpl graph subject jf j must minim f call optim simpl augment g with respect k first paper deal similar problem due frank chou solv simplic preserv edgeconnect augment problem special case start graph g edg target connect may nonuniform is edgeconnect requir may differ differ pair vertic besid solut version fact construct problem rather augment problem recent result deal small target connect valu k solv special case gener k let us denot size smallest kedgeconnect kedgeconnect simpl augment graph g opt k g respect obvious opt k k graph g check easili lineartim edgeconnect augment algorithm eswaran tarjan creat parallel edg thu solv simplic preserv version too prove opt k p hold well show polynomi algorithm solv edgeconnect augment problem optim without creat parallel edg figur opt case gener observ alreadi opt k may hold k see figur hand also shown moreov special case observ opt k minimum degre g least k besid construct polynomi algorithm fix k goal paper show exist function f n opt k opt k p g opt k graph g result present section special proof case l give simpler proof extens of result section section indic main result extend case local edgeconnect demand must satisfi terminolog basic result section first introduc basic notat definit list theorem algorithm mostli frank paper shall use proof shall assum reader familiar result e undirect graph two disjoint subset x v number denot number edg x defin degre subset x dx set consist singl vertex v simpli denot v thu dv stand degre v degreefunct graph g denot edg connect vertic x denot xy sometim xy refer arbitrari copi parallel edg x caus confus ad delet edg e graph g often denot g e respect ad or delet set vertic set x vertic denot x respect set f edg denot set endvertic edg f subgraph g induc subset x vertic denot gx let deltag denot maximum degre graph g vertex v use nv denot set vertic adjac v subpartit v collect pairwis disjoint subset v oper split pair vs st edg v t vertex mean replac edg vs st new edg vt complet split vertex with even degre sequenc ds split pair edg incid s graph e kedgeconnect edgeconnect g largest integ k g kedgeconnect local edgeconnect u v two vertic u v maximum number pairwis edgedisjoint path recal follow wellknown equal proposit let e graph xy v s e graph special vertex hold is edgeconnect g within v least k say pair edg vs st admiss pair split vs st condit still hold otherwis vs st form nonadmiss pair easi see vs st nonadmiss exist set v x ae v dx k set call danger follow result lovasz problem theorem a import tool formul kind extens well part b theorem use argument proof follow easili proof part a given pp theorem suppos hold e ds even a everi edg st exist edg su pair st su admiss b everi edg st number edg nonadmiss st k proof prove part b follow frank proof part a observ everi edg sv st sv nonadmiss pair vertex v either contain uniqu maxim danger set contain t contain one two maxim danger set xy whose intersect contain t sinc edg sv contribut figur graph g show success augment properti hold g edg uniqu optim augment respect degre or degre x obtain former case k edg nonadmiss respect st latter case use a get impli dx ds x result paper base frank algorithm solv augment problem without simplic requir use split oper main tool note algorithm find intermedi optim augment optim kedgeconnect augment previous mention algorithm either use onebyon augment approach like base frank algorithm say success augment properti hold certain augment problem increas sequenc targetconnect exist increas sequenc f ae ae f k solut f optim respect k exampl properti hold edgeconnect augment problem graph digraph with uniform demand see sinc success augment properti hold simpl augment see figur use frank algorithm seem promis attack gener case describ frank algorithm give optim solut given not necessarili simpl graph e target connect k provid simplicitypreserv requir frank algorithm phase add new vertex v set f new edg vertic v hold g f minim wrt inclus subject remark easi see f exist shown there exist subpartit v jf odd g add new parallel edg v s v remark frank origin algorithm extra edg make v even ad v v howev small modif phase essenti algorithm admiss pair edg incid arbitrari order maintain becom isol delet s remark third phase everi edg split theorem a result graph optim kedgeconnect augment g sinc second phase simplic preserv augment uniform demand idea modifi third phase frank algorithm introduc addit rule determin order split certain case everi admiss pair allow chosen shall see make possibl avoid creation parallel edg henc maintain simplic provid s high enough begin third phase clearli preserv simplic phase result augment set optim simplicitypreserv version too one want maintain simplic use frank algorithm admiss pair st su may split u adjac origin graph new edg u that is pair st su chosen yet anoth edg st anoth su call admiss pair legal say complet split feasibl result graph simpl kedgeconnect e start graph let k targetconnect theorem let g graph end second phase frank algorithm suppos hold exist feasibl complet split s proof let denot set neighbour s claim subgraph induc vertex k neighbour see let us consid edg st f sinc f obtain minim set f satisfi gamma ad one edg e parallel edg f exist set x ae v x edg vertex gamma x contribut degre x neighbour x contribut degre x least one exist edg sy thu condit impli jsj k sinc deltah k exist see easi exercis problem subset ae jt independ h proof exist feasibl complet split follow analysi follow algorithm modifi version third phase frank algorithm goal split legal pair becom isol split step updat h follow split pair st su first edg tu ad h then edg st or su last copi edg between u respect delet u h well thu current graph h next split mean graph forbidden edg updat way clearli alway find pair legal current h obtain feasibl complet split algorithm four part execut follow order split legal pair edg st su form u parallel edg vertex but keep one copi edg st split legal pair edg sv su form v u long possibl split edg su u edg st st su legal pair remain edg st su of form t let us prove algorithm termin complet feasibl split first observ proof theorem b combin proof impli follow statement let st edg let w subset vertic current h t st su legal pair inequ impli alway find legal pair split follow rule part show part execut claim obtain end phase size current k thu phase kk must split suffici maintain feasibl claim sinc phase also execut current h induc independ set arbitrari split h alway remain independ sinc phase delet parallel edg vertic thu phase allow split admiss pair arbitrari order yield feasibl complet split theorem a pi thu obtain follow corollari show exist function fk exist optim solut kedgeconnect augment problem without simplicityrequir preserv simplic provid optimum valu least fk theorem opt k k small possibl sharpen previou rough bound fk use precis analysi even obtain sharp valu special case found alreadi use differ approach detail given section theorem opt k start graph g target connect k sinc jv j exist kedgeconnect simpl graph almost kregular obvious eh contain set edg make g kedgeconnect preserv simplic thu may assum jv gj k gamma proof base version frank algorithm last phase certain edg split pair replac one two new edg use oper first two phase same begin phase set f new edg incid opt k hold phase first let us split legal pair long possibl claim number neighbour legal pair found point one edg f delet without violat edg let us delet it rest procedur instead split pair edg tri replac everi edg incid one two edg v maintain preserv simplic edg current g critic e respect impli exist set x us call set xtight former case stight latter case g uniqu minim xtight set x uniqu minim set respect fix edg st furthermor hold g edg e proof let x minim xtight set x xtight set contain x case b obtain contradict prove x uniqu uniqu prove similarli two vertic e edg suppos hold g violat w xtight g w must also hold follow stight set g contain contradict prove claim pi clearli x gamma size least k exist two vertic x nonadjac g replac sx e maintain preserv simplic suppos x gamma size k gamma adjac x vertex gamma s sinc vertex contribut degre x gamma s sinc assum jv exist vertex w adjac x vertex replac e xw wy preserv simplic easi see maintain well thu substitut remain kk incid g edg obtain solut size jf graph k defin disjoint union two complet graph k k k k connect k independ edg show biggest possibl gap opt k opt k p inde quadrat function k it easi check opt k henc differ question k also note follow algorithm part proof previou theorem one obtain approxim algorithm that is algorithm give solut size opt k g simplicitypreserv kedgeconnect augment problem provid k n it run time polynomi even k fix idea algorithm augment problem simplic requir follow opt k p larg enough simpli follow algorithm proof theorem give solut size opt k creat parallel edg thu obvious optim simpl augment opt k p small trivial way find optim solut check everi possibl augment set size less opt k howev although number set polynomi function n fix k expon still depend k avoid thi prove check possibl augment set may restrict set possibl endvertic augment edg set size hk appropri function h k fix advanc constant time fix k set x ae v defici e with respect targetconnect k set v cover defici set everi defici set x follow correct frank algorithm also claim everi cover v exist optim solut f v problem without simplic requir impli optimum valu m easili find set vertic g cover s form endvertic new edg end phase frank algorithm size m exist optim solut f v although simplicitypreserv version cover properti gener consid graph figur find rel small subset case too exist optim solut f v see thi let g start graph let cover defici set g vertex g let us fix set ly ny vertic minfjnyj kg vertex defin subset vertic v follow vertex belong dt k gamma vertex x exist xtpath p length k dv everi v lv it hard see claim set requir properti note hold jt j jsjhk the exist set size jsjh k follow immedi previou result howev construct effici algorithm need find set advanc without know optim solut theorem exist optim simplicitypreserv solut f v proof let us choos optim simplicitypreserv solut f jv small possibl number zero done not exist edg least one endvertic without loss gener assum subdivid e new vertex appli claim observ g f gamma e precis two disjoint minim defici set a b b b edg e kedgeconnect thu enough prove exist vertex adjac gf prove vertex exist suffici see sinc dgf replac e e would yield optim simpl augment set f jv contradict choic f first let us prove c everi compon c subgraph gb sinc b defici g e defici g well thu sinc cover defici set compon c gb set c defici g thu sinc edg c contribut db obtain let vertex compon gb contain b let p the set vertic of tbpath gb let b vertex p closest p includ let p denot subpath p endvertic b k done sinc jt bj k follow assum jp definit b exist z dz k former case let z t obtain least k vertic lz belong b otherwis dg contradict henc proof previou three theorem lead algorithm whose run time on provid targetconnect k fix let us scetch algorithm estim run time input graph e first add new vertex construct set f new edg comput opt k frank algorithm done time on appli method nagamochi ibaraki see proceed describ case ii below otherwis case i opt g theorem case identifi set vertic theorem algorithm point view done comput restrict bfstree vertex s the set s consist neighbour s size k case thu number step need find depend k onli last phase case seri kedgeconnect test check possibl set new edg f size and v simpl kedgeconnect choos smallest good augment clearli number possibl function k theorem find least one good augment set number step one test on let us analyz case ii theorem opt k hold first identifi set vertic independ gs size k done greedi search linear time follow four part algorithm proof theorem first split pair edg incid use socal sbase connect algorithm subroutin test whether pair legal not one test requir time onm log n total number test first part depend k onli second part split pair whose endvertic gamma long possibl requir kk sbase connect test there k edg vertex v k test find legal pair sv ani remain two part consist sbase conect test split pair within calcul impli follow theorem theorem simplicitypreserv kedgeconnect augment problem solv on fix k pi augment section give full solut special case g edgeconnect want make edgeconnect remark smallest target valu opt p opt may differ goal find exact valu function f g case proof impli algorithm use seri edgeconnect test like case algorithm gener case main result section theorem alreadi obtain taoka et al proof omit use differ approach seem work arbitrari valu target connect includ section show method provid fairli easi complet proof result set x vertic graph g edgeconnect k call critic hold follow easi lemma left reader lemma let g simpl edgeconnect kedgeconnect everi minim critic set size one least k pi lemma show x two disjoint critic set exist two vertic nonadjac unless x singleton suggest goal increas connect one without creat new parallel edg minim critic set import role singleton follow lemma make possibl assum everi minim critic singleton lemma let e simpl graph edgeconnect kedgeconnect exist edgeconnect simpl graph g everi minim critic set g singleton ie size one proof first note minim critic set x critic set either hold proposit impli minim critic set g pairwis disjoint suppos g contain minim critic set singleton let x minim critic set g singleton lemma x size least k form new graph g g ad new vertex x join edg differ vertic x claim g easili seen connect properti abov everi critic set g contain minim critic set ad new vertex x origin nonsingleton minim critic set new x critic g henc follow minim critic set g precis origin singleton critic set plu vertic x prove impli first two phase frank algorithm number new edg ad g g give let us consid optim simpl kedgeconnect augment f g let us form set f new edg f replac everi edg connect two set x x j x x j everi edg e enter y easi see graph g simpl kedgeconnect give opt k g prove inequ first observ follow fact x size least k u edg optim simpl augment f g g least one vertex x nonadjac u similarli edg f find vertic uv edg g defin follow set new edg f ad g let f contain edg f connect vertic v furthermor edg contain edg u nonneighbour u edg type x contain edg uv uv e claim g kedgeconnect impli opt k by construct f contain edg parallel edg e easi see f contain parallel edg prove inequ enough observ delet one copi two parallel edg f destroy kedgeconnect suppos let w set whose degre g w critic g well w u minim critic set u in none edg f leav w obtain g set obtain ad w vertic x x w degre contradict prove pi next four lemma consid graph g obtain appli first second phase frank algorithm start simpl graph e least five vertic g edgeconnect but edgeconnect goal find opt g optim augment set lemma assum neighbour g degre g ie form singleton critic set set x ae v critic set x call danger hold note sinc g alreadi edgeconnect everi danger set x s x fact use sever time sequel lemma follow hold everi x s dh x everi nonneighbour u x h pair sx su legal split one maxim danger set among contain x least one neighbour s particular one nonneighbour x h pair sx sy legal split either dh sx two pair sx su sx sv legal split type type ii type iii figur except case three type everi nonempti subset l degre least proof suppos dh x x danger set contain x eh g set x gamma x degre contradict fact g edgeconnect prove prove suppos x contain two maxim danger set b follow proposit g difficult check pariti argument equal cannot hold time contradict show x contain one maxim danger set final observ follow easili pi lemma exist feasibl complet split s unless g type iii iii figur proof everi admiss complet split involv ad edg uv uw u vertex two edg s henc theorem feasibl complet split exist dh easili seen case g type iii iii figur thu assum theorem may assum jehj suppos first dh v v h let uv eh let w z remain vertic s follow lemma least one pair su sw su sz legal split sinc remain pair vertic h adjac lead feasibl complet split s may assum h contain edg uv uw let z fourth vertex s follow lemma pair su sz legal split henc sinc v w adjac feasibl complet split s pi lemma exist legal split unless g type ii figur proof easili lemma exist legal split henc may assum suppos first follow lemma legal split x degre h let u v w remain vertic s sinc g edgeconnect least five vertic may assum wlog u v adjac either u v adjac w su sv legal lemma henc assum h star center x lemma least one pair su sv su sw legal split first note x vertex two edg s danger set contain x neighbour s henc follow legal split involv x xy xz eh case g type ii figur pi lemma made edgeconnect preserv simplic ad two edg proof two remain neighbour u v nonadjac uv make g edgeconnect thu assum uv e assumpt hold g contain vertex adjac u v ad edg ua av get new graph simpl edgeconnect vertex exist jv must hold easi see ad pair edg join u nonneighbour u v nonneighbour v make graph edgeconnect pi theorem everi edgeconnect graph g least five vertic follow hold ii opt proof let g graph return phase frank algorithm note abl perform sequenc legal split effect ad set edg f g preserv simplic follow theorem fact end phase frank algorithm opt follow hold henc show opt follow opt g use observ sever time below first prove i lemma may assum minim critic set g singleton lemma may also assum use lemma perform legal split current g point must hold lemma either exist feasibl complet split g type iii iii figur difficult see latter case opt observ get g henc may assum follow lemma still find one legal split point appli lemma obtain opt suffici thu case get opt prove i prove ii suppos opt g k for clearli lemma remark begin proof follow suffici prove opt let g graph return phase two frank algorithm lemma may assum minim critic set g singleton remark assum graph g regular connect thu sinc exclud k prism that is complement cycl length six desir equal trivial hold suppos least vertic v sinc g edgeconnect neighbour degre g follow jehj must least edg case shall argu alway find legal split properti make split two edg remain new graph h lemma impli exist feasibl complet split henc g two vertic u v degre and lemma legal split edg su recpect sv everi edg sw w non neighbour u respect v henc may assum u v adjac otherwis elimin six edg perform one legal split sinc g edg connect u v cannot two common neighbour x sinc degre set would two g u v common neighbour easi check legal split involv one edg su sv two edg remain h afterward su sv split edg two neighbour v u assum u v precis one neighbour x common easi check use lemma alway find legal split elimin least five edg h either vertic h degre follow lemma desir legal split exist vertex u degre h sinc g edgeconnect cannot edg h insid graph induc u neighbour henc again lemma desir legal split exist vertex degre easi see find legal split elimin two edg h final vertex degre h everi legal split desir properti case follow end phase frank algorithm two parallel edg vertex v s let wg sinc start edgeconnect graph g vertic fx all which assumpt degre g induc k henc follow lemma legal split involv two vertic set fx say wlog z w remain neighbour s fv x yg induc graph edg sinc g edgeconnect vertic degre g now lemma either feasibl complet split actual g g type i ii iii figur case argu proof i henc remark begin proof shown opt g pi verifi analyz algorithm say simpl graph g optim simpl edgeconnect augment g opt thi result section show conjectur start graph alreadi edgeconnect function theorem replac linear function k perhap would do nonuniform demand augment problem without simplicitypreserv requir solvabl polynomi time even target connect uniform given symmetr pair vertic start graph e and goal find smallest set f new edg g local edgeconnect u v least ru v pair u v vertic gener version also solv frank everi subset x v let us defin g for simplic avoid socal margin compon assum ru v pair u v v menger theorem extend graph or augment graph satisfi requir hold like uniformdemand case frank use splittingoff idea proof fact algorithm gave ident algorithm uniform case except ad k parallel edg new vertex vetex v delet part phase one must maintain instead split phase local edgeconnect must preserv everywher pair vertic v for detail refer correspond phase done follow theorem due mader say two edg st su form admiss pair e split st su local edgeconnect remain vertic v note split never increas local edgeconnect theorem let s e connect undirect graph ds cutedg incid s admiss pair st su edg section goal prove counterpart theorem show case simplicitypreserv version nonuniform augment problem exist similar function f k g k like fk gk uniform case problem solvabl polynomi time k fix shall use similar approach use uniform case fact crucial part gener prove similar statement lemma below correspond theorem b hold case too ensur number edg nonadmiss respect fix edg st bound function k howev prove must modifi concept admiss also phase frank algorithm in nonuniform case reason although goal satisfi onli solut given frank algorithm guarante more maintain local edgeconnect extend graph construct phase hand extra properti solut easi see certain optim augment obtain frank algorithm exampl let g disjoint union two star k m let ru pair u v vertic optim solut must set independ edg two star although set independ edg leav would good augment set provid least two edg connect two star moreov simplicitypreserv version sometim minimum number new edg ad satisfi requir first two phase frank algorithm given local edgeconnect g optimum valu respect origin demand given function r exampl first two phase frank algorithm appli graph figur add edg sx sy sv sz then although exist proper augment set size two xy vz legal split phase sinc a must also maintain z figur rx one want preserv simplic well phase better work follow less restrict definit admiss s e graph hold function r defin nonuniform requir befor say two edg st su form radmiss pair or admiss pair r clear context split st su violat set x ae v tight hold say x danger let sx rx easi see st su admiss pair danger set x t u x list result shall use proposit everi pair xy v least one follow inequ hold easi check proof claim work way use definit admiss thu obtain three similar statement first one give x danger set with respect edg st ds x state lemma correspond claim need one definit the third claim get mention proof below contract subset x vertic graph e mean delet x replac new vertex vx add dg v x new parallel edg result graph denot gx contract subset x defin new requir function r gx expect r v x correspond function r subset defin r lemma let tight set pair st su edg radmiss g correspond pair edg r admiss gt pi readi prove lemma need lemma suppos s e edgeconnect everi edg st number edg su pair st su nonadmiss k proof let denot set neighbour let w ae denot neighbour u st su form nonadmiss pair one previou remark mean exist famili f danger set contain t cover everi vertex w let us fix famili jf j minim subject maxim shall prove jf j hold note claim two danger set cannot cover whole s first claim everi danger set induc connect subgraph see assum x danger two compon x x without loss gener rx attain pair u edgeconnect contradict let us consid tigh set danger set contain t two set b cannot hold sinc otherwis proposit contradict we use exist edg st thu a must hold proposit impli sm follow also tight tight note m v anoth consequ f must hold otherwis would follow choic f observ impli exist tight set contain exist uniqu maxim tight set contain t moreov tight set exist subset everi member f ds m hold lemma contract tight set decreas number edg nonadmiss respect st thu rest proof shall assum everi tight set singleton say pair xy member f apair a hold x otherwis pair bpair xy f apair get sinc choic f show intersect must tight therefor must hold apair xy suppos xy bpair y z apair claim xz must bpair suppos xz apair disjoint x furthermor precis one edg edg st x inequ follow edg z gamma henc z connect contradict fact everi danger set induc connect graph henc f partit subfamili f f r xy bpair x differ subfamili suppos one subfamili f size least k sinc member subfamili connect x gammam y gammam differ member xy f least k differ neighbour v sinc connect s well k contradict thu subfamili partit size k gamma impli jf must three set xyz f pairwis bpair sinc bpair xy set tight henc singleton minim f impli exist set n hold use b give edg leav n g st contradict henc obtain jf sinc ds x f ds t k number edg nonadmiss respect st kk gamma lemma follow proof idea theorem one obtain correspond result nonuniform version is exist function below detail similar omit remark must ad first all modifi frank nonuniform algorithm way except last part small number edg present phase split edg form admiss pair sens defin necessari sinc otherwis lemma valid see exampl two star begin section furthermor point need involv argument extens claim exist simpl graph maximum degre satisfi nonuniform demand in latter case result refer to also note assumpt r impli edgeconnect condit lemma fulfil theorem let graph end second phase frank nonuniform algorithm hold exist feasibl complet split s feasibl meant respect pi theorem opt k hold pi theorem opt k start graph g nonuniform demand vg pi far proof counterpart theorem would improv effici algorithm like theorem uniform case remark last section remark made relat possibl extens simplic preserv edgeconnect augment problem subsetproblem goal find simplicitypreserv augment make subset x ae v kedgeconnect mention next open problem studi at least observ special case nonuniform demand version on hand subsetproblem solv slightli modifi proof uniform case well direct version problem similar function fk like theorem exist famili g k digraph shown k opt k argument appli vertexcost version simplicitypreserv augment problem without simplic requir solv frank algorithm see consequ small modif made phase algorithm consid star k m odd weight uniformli except center v star whose weight result valid gener case start graph g simpl augment set f must contain parallel edg edg parallel edg g detail omit final remark version augment set f must contain parallel edg new edg may parallel edg start graph remain open r parallel fast sequenti algorithm undirect edg augment success edgeconnect augment problem comput theorem mader augment graph meet edgeconnect requir connect augment problem network design connect consider design surviv net work applic poset represent edgeconnect graph rigid optim augment bipartit componentwis biconnect linear time augment direct graph preserv simplic planar graph augment problem reduct method edgeconnect graph fast algorithm optim increas edgeconnect simplic preserv augment edgeconnect graph linear time algorithm smallest augment edgeconnect graph journal comput system scienc tr ctr hiroshi nagamochi toshihid ibaraki graph connect augment applic order discret appli mathemat v n p novemb