t byzantin quorum system a quorum system wellknown tool ensur consist avail replic data despit benign failur data repositori paper consid arbitrari byzantin failur data repositori present first studi quorum system requir construct ensur data avail consist despit failur also consid load associ quorum system ie minim access probabl busiest server servic subject arbitrari failur demonstr quorum system ini server load ioiini thu meet lower bound load benignli faulttoler quorum system explor sever variat quorum system extend construct cope arbitrari client failur b introduct well known way enhanc avail perform replic servic use quorum quorum system univers server collect subset server pair intersect intuit quorum oper behalf system thu increas avail perform intersect properti guarante oper done distinct quorum preserv consist paper consid arbitrari byzantin failur client server initi studi quorum system model intuit quorum system toler byzantin failur collect subset server pair intersect set contain suffici mani correct server guarante consist replic data seen client provid follow contribut defin class mask quorum system data consist replic way resili arbitrari failur data repositori present sever exampl construct system show necessari suffici condit exist mask quorum system differ failur assumpt explor two variat mask quorum system first call dissemin quorum system suit servic receiv distribut selfverifi inform correct client eg digit sign valu faulti server fail redistribut cannot undetect alter second variat call opaqu mask quorum system similar regular mask quorum make assumpt selfverifi data differ client need know failur scenario servic design somewhat simplifi client protocol and case failur malici induc reveal less inform client could guid adversari attempt compromis system explor load type quorum system load quorum system minim access probabl busiest server minim strategi pick quorum present mask quorum system properti load total n server o therebi meet lower bound load benignlyfaulttoler quorum system ad contribut also provid proof lower bound benignlyfaulttoler quorum systemsand fortiori byzantin quorum systemsthat much simpler previou proof opaqu mask quorum system prove lower bound load present construct meet lower bound prove tight servic use mask quorum opaqu not show deal faulti client addit faulti server primari challeng rais client failur guarante client updat quorum accord specifi protocol thu faulti client could leav servic inconsist irrecover state develop two updat protocol client access replic servic prevent client leav servic inconsist state protocol desir properti involv quorum access attempt provid systemwid consist properti treatment express assumpt possibl failur system form failpron system server b contain faulti server formul includ typic failur assumpt threshold f server fail eg set could set f server also gener allow less uniform failur scenario motiv explor gener stem experi construct secur distribut servic rei mr ie distribut servic toler malici corrupt typic threshold number of compon server attack critic assum simpl threshold corrupt server server penetr may independ exampl server physic proxim administr domain may exhibit correl probabl captur server ident hardwar softwar platform may correl probabl electron penetr exploit correl ie knowledg collect b design quorum system effect mask faulti server quorum system use conjunct appropri protocol synchron mechan use implement wide rang data semant paper howev choos demonstr variabl support read write oper rel weak semant order maintain focu quorum construct semant impli safe variabl lam case singl reader singl writer set correct client use build abstract eg atom multiwrit multiread regist lam is ltv concurr timestamp system ds il lexclus dg adgm atom snapshot scan adgm and quorum construct also directli exploit algorithm employ uniform quorum fault toler either explicitli implicitli by involv threshold process order toler nonuniform failur scenario exampl includ algorithm share memori emul abd random byzantin agreement tou reliabl byzantin multicast bt rei mr secur replic data ht rest paper structur follow begin section descript relat work section present system model definit present quorum system replic arbitrari data subject arbitrari server failur section section present two variat system detail access protocol replic servic toler faulti client addit faulti server section conclud section relat work work influenc substanti bodi literatur quorum system benign failur applic make use them eg gif tho mae gb her et caa ae nw pw particular grid construct section influenc gridlik construct benign failur eg caa borrow definit domin load gb nw respect quorum system previous employ implement secur mechan naor wool nw describ method construct accesscontrol servic use quorum construct use cryptograph techniqu ensur outofd but correct server cannot grant access unauthor user agraw el abbadi ae mukkamala muk consid confidenti replic data despit disclosur content threshold otherwis correct repositori construct use quorum increas intersec tion combin rabin dispers scheme rab enhanc confidenti avail data despit server crash content observ work differ consid arbitrarili faulti server accommod failur scenario beyond simpl threshold server herlihi tygar ht appli quorum increas intersect problem protect confidenti integr replic data threshold arbitrarili faulti server construct replic data store encrypt key share among server use threshold secretshar scheme sha client access threshold number server reconstruct key prior perform encrypt read write construct exhibit one approach make replic data selfverifi via encrypt consequ quorum system develop special case dissemin quorum system ie threshold faulti server techniqu propos construct distribut servic toler arbitrari failur compon server eg see sch mar rb techniqu awar typic requir server receiv process client access thu exhibit high load mani case techniqu could use effici mask arbitrari failur preliminari system model assum univers u server ju arbitrari number client distinct server quorum system q u set subset u pair intersect call quorum server and client obey specif correct faulti server howev may deviat specif arbitrarili failpron system b u set subset u none contain anoth contain faulti server failpron system repres assumpt character failur scenario occur could express typic assumpt threshold server fail well less uniform assumpt remaind section throughout section assum client behav correctli section relax assumpt and explicit so assum two correct process client server commun au thentic reliabl channel is correct process receiv messag anoth correct process correct process sent it howev assum known bound messag transmiss time ie commun asynchron access protocol consid problem client perform read write oper variabl x replic server univers u purpos paper defin correct variabl follow formal treatment concept found lam say read write oper op preced oper op op termin in real time client initi it op start in real time client initi it op preced op op preced op call concurr given set oper serial oper total order extend preced order among them then correct condit requir read concurr write return last valu written serial preced write case singleread singlewrit variabl immedi impli safe semant lam copi variabl x store server along timestamp valu t timestamp assign client replica variabl client write replica protocol requir differ client choos differ timestamp thu client c choos timestamp set c intersect c client c timestamp c form eg integ append name c loword bit read write oper implement follow write client c write valu v queri server quorum q obtain set valuetimestamp pair choos timestamp c greater highest timestamp valu greater timestamp chosen past updat x associ timestamp server q v t respect read client read x queri server quorum q obtain set client appli determinist function result obtain result resulta read oper case write oper server updat local variabl timestamp receiv valu v t greater timestamp current associ variabl two point descript deserv discuss first natur quorum set q function result intent left unspecifi clarif point paper second descript intend requir client obtain set contain valuetimestamp pair everi server quorum q is client unabl gather complet set quorum eg server quorum appear unrespons client must tri perform oper differ quorum requir stem lack synchroni assumpt network gener way client know access everi correct server quorum appar success access everi server quorum framework guarante avail quorum moment thu attempt oper multipl quorum client eventu make progress case client achiev progress increment access server obtain respons quorum them load measur inher perform quorum system load naor wool nw defin load quorum system probabl access busiest server best case precis given quorum system q access strategi w probabl distribut element q ie wq probabl quorum q chosen servic access load defin follow definit let strategi w given quorum system univers u element u u load induc w u l w load induc strategi w quorum system q system load quorum system q minimum taken strategi reiter load best case definit load quorum system achiev optim access strategi use case failur occur strength definit load properti quorum system protocol use it comparison definit load seemingli plausibl definit given nw also explor relat notion capac quorum system rate system handl quorum access prove capac invers load size domin anoth natur measur perform quorum system size quorum intu itiv size quorum repres cost incur client access it thu gener smaller quorum desir special interest quorum system cannot reduc size ie quorum system reduc size quorum system call nondomin precis let coteri quorum system q properti q q q two coteri q everi q exist q q domin exist coteri q domin it nondomin coteri exist paper consid coteri although construct domin mask quorum system section introduc mask quorum system use mask arbitrarili faulti behavior data repositori motiv definit suppos replic variabl x written quorum q subsequ x read use quorum q b set arbitrarili faulti server q q nb set correct server possess latest valu x order client obtain valu client must abl locat valuetimestamp pair return set server could faulti addit avail requir set faulti server disabl quorum definit quorum system q mask quorum system failpron system b follow properti satisfi it difficult verifi mask quorum system enabl client obtain correct answer servic write oper implement describ section read oper becom read client read variabl x queri server quorum q obtain set valuetimestamp pair client comput set client choos pair v t highest timestamp choos v result read oper empti client return a null valu lemma read oper concurr write oper return valu written last preced write oper serial preced write oper proof let w denot set write oper preced read read oper return valu written write oper w highest timestamp sinc construct mask quorum system valuetimestamp pair appear highest timestamp ani pair higher timestamp return server b so suffic argu serial write w oper appear last word write oper preced write oper w immedi howev preced anoth write oper w write oper would higher timestamp lemma impli protocol implement singlewrit singleread safe variabl lam these multiwrit multiread atom variabl built use wellknown construct lam is ltv necessari suffici condit exist mask quorum system and construct one exist given failpron system b given follow theorem theorem let b failpron system univers u exist mask quorum system b iff bg mask quorum system b proof obvious q mask quorum system b one exist show convers assum q mask quorum sinc hold q construct exist b construct q know mask quorum system b must contain quorum q howev q case also sinc q violat m therefor exist mask quorum system b assumpt q mask quorum system b corollari let b failpron system univers u exist mask quorum system b iff particular suppos fg then exist mask quorum system b iff n f proof theorem mask quorum b iff bg mask quorum b construct q mask quorum iff hold q ie iff prove nw benignfailur quorum system hold mask quorum well as result m let cq denot size smallest quorum q theorem q quorum system univers n element lq maxf cq g proof theorem nw employ rather complex method present simpler proof theorem proof let w strategi quorum system q fix sum load induc w element q obtain l w therefor exist element q suffer load least cq similarli sum total load induc w element univers get uu l w uu here inequ result minim cq therefor exist element u suffer load least cq sinc mask quorum system quorum system have fortiori corollari q mask quorum system univers n element lq cq n g thu lq n give sever exampl mask quorum system describ properti refer system nondomin mean within class mask quorum system given failpron system b exampl threshold suppos note correspond usual threshold assumpt f server may fail then quorum system mask quorum system b satisfi q intersect least f element hold nfe system nondomin strategi assign equal probabl quorum induc load e system corollari load fact load system follow exampl interest sinc load decreas function n sinc demonstr method ensur systemwid consist face byzantin failur requir involv fewer major correct server exampl grid quorum suppos univers server size integ k n arrang univers n theta grid shown figur denot row column grid r c respect n then quorum system ii mask quorum system b hold sinc everi pair quorum intersect least f element the column one quorum intersect f row other hold sinc choic f faulti element grid f full row column remain avail strategi assign equal probabl quorum induc load f n corollari load system note choos exampl abov result construct load o asymptot meet bound given corollari grid construct domin eg column element top row quorum remov and quorum system remain domin grid construct would work nonsquar grid well eg triangular grid lov cwlog grid pw that contain row length each squar grid alreadi possess load within constant factor optim pursu construct further figur grid construct k theta exampl partit suppos partit u b choic b could aris exampl wide area network compos multipl local cluster contain b express assumpt time one cluster faulti then collect nonempti set thought superel univers m threshold assumpt therefor follow mask quorum system b ii satisfi intersect two quorum contain element least three set b hold sinc intersect quorum q nondomin iff strategi assign equal probabl quorum induc load e system regardless size corollari impli load system effici construct achiev form grid construct exampl super element f achiev load variat dissemin quorum system special case servic may employ quorum byzantin environ consid applic servic repositori selfverifi inform ie inform client creat client detect attempt modif faulti server natur exampl databas public key certif found mani public key distribut system eg ccit ta labw ken public key certif structur contain name user public key repres assert indic public key use authent messag indic user structur digit sign eg rsa certif author anyon public key author verifi assert and provid trust author use indic public key authent indic user due signatur possibl faulti server undetect modifi certif store howev faulti server undetect suppress chang propag client simpli ignor updat certif author could effect eg suppress revoc key compromis expect use digit signatur verifi data improv cost access replic data support servic employ dissemin quorum system weaker requir mask quorum nevertheless ensur applic like abov selfverifi write propag subsequ read oper despit arbitrari failur server achiev thi suffic intersect everi two quorum contain set potenti faulti server so written valu propag read and suppos oper requir continu face failur quorum faulti set cannot disabl definit quorum system q dissemin quorum system failpron system b follow properti satisfi dissemin quorum system suffic propag selfverifi inform applic describ abov write oper implement describ section read oper becom read client read variabl x queri server quorum q obtain set valuetimestamp pair client discard pair verifi eg use appropri digit signatur verif algorithm choos remain pair pair v t largest timestamp v result read oper import note timestamp must includ part selfverifi infor mation cannot undetect alter faulti server case applic describ abov exist standard public key certif eg ccit alreadi requir realtim timestamp certif follow two lemmata prove correct protocol use dissemin quorum system lemma read oper concurr write oper return valu written last preced write oper serial preced write oper proof let w denot set write oper preced read read oper return valu written write oper w highest timestamp sinc quorum write complet intersect quorum read occur least one correct server so suffic argu serial write w write oper appear last word write oper preced write oper w immedi howev preced anoth write oper w write oper would higher timestamp case also prove follow properti lemma read oper concurr one write oper return either valu written last preced write oper serial preced write oper valu written concurr write oper proof due assumpt selfverifi data read oper must return valu written preced concurr write oper read oper return valu written concurr write oper must return valu written last preced write oper serial preced write oper argument similar lemma lemmata impli protocol implement singlewrit singleread regular variabl lam theorem analog one given mask quorum system easili deriv dissemin quorum below list result without proof theorem let b failpron system univers u exist dissemin quorum system b iff bg dissemin quorum system b corollari let b failpron system univers u exist dissemin quorum system b iff particular suppos fg then exist dissemin quorum system b iff n f corollari q dissemin quorum system univers n element lq cq n g thu also n below provid sever exampl construct dissemin quorum system exampl threshold suppos note correspond usual threshold assumpt f server may fail then quorum system dissemin quorum system b satisfi q intersect least f element hold nfe system nondomin strategi assign equal probabl quorum induc load e system corollari load fact load system exampl grid let univers arrang grid exampl abov let n then quorum system ii dissemin quorum system b hold sinc everi pair quorum intersect least hold sinc choic f faulti element grid f column remain avail strategi assign equal probabl quorum induc load f n corollari load system exampl partit suppos partit u exampl abov then collect nonempti set follow dissemin quorum system b ii satisfi intersect two quorum contain element least two set b hold sinc intersect quorum q nondomin iff j strategi assign equal probabl quorum induc load k system regardless size impli load system improv dissemin quorum system achiev form grid construct exampl superel f achiev load k opaqu mask quorum system mask quorum impos requir client know failpron system b may reason client requir know thi first somewhat complic client read protocol second reveal failur scenario system design system also reveal failur scenario vulner could exploit attack guid activ attack system reveal failpron system client inde give client small fraction possibl quorum system somewhat obscur though perhap secur formal sens failur scenario vulner especi absenc client collus section describ one way modifi mask quorum definit section opaqu ie elimin need client know b absenc client know b method awar client reduc set repli server singl repli servic via vote ie choos repli occur often order repli correct one howev must strengthen requir quorum system specif suppos variabl x written quorum q subsequ x read quorum q b set arbitrarili faulti server set correct server possess latest valu x see figur order client obtain valu vote set must larger set faulti server allow respond ie sinc faulti server team up outofd correct server effort suppress write oper number correct uptod server repli must less number faulti outofd server repli ie definit quorum system q opaqu mask quorum system failpron system b follow properti satisfi o figur note admit possibl equal size q q nb q bq nq equal suffici sinc case faulti server team up correct out ofdat server q valu return q higher timestamp return q therefor case tie reader choos valu higher timestamp interest note strong inequ would permit correct implement singleread singerwrit safe variabl use timestamp by take major valu read oper difficult verifi opaqu mask quorum system enabl client obtain correct answer servic write oper implement describ section read oper becom read client read variabl x queri server quorum q obtain set valuetimestamp pair client choos pair v t appear often a multipl valu one highest timestamp valu v result read oper opaqu mask quorum system combin access protocol describ previous provid semant regular mask quorum system proof almost ident regular mask quorum lemma read oper concurr write oper return valu written last preced write oper serial preced write oper give sever exampl opaqu mask quorum system or opaqu quorum system describ properti refer system nondomin mean within class opaqu quorum system given failpron system b exampl threshold suppos quorum system opaqu quorum system b satisfi q l nfm l ngammafm similarli satisfi hold sinc nfe q nondomin strategi assign equal probabl quorum induc load nfe system corollari impli load fact load system next theorem prove resili bound opaqu quorum system theorem suppos fg exist opaqu quorum system proof n f suffici alreadi prove exampl abov suppos q opaqu quorum system b fix q exist o note exist o therefor b o therefor n f exampl partit suppos partit u b i k choos collect set fix constant c then ii opaqu quorum system b satisfi sinc q similarli satisfi sinc final satisfi sinc quorum q nondomin iff strategi assign equal probabl quorum induc load k system regardless valu c corollari consid singl element univers size k impli load system unlik case regular mask quorum system open problem find techniqu test whether given failpron system b exist opaqu quorum system b other exhaust search subset u construct exampl result quorum system exhibit load best constant function n case mask quorum system abl exhibit quorum system whose load decreas function n name grid quorum natur question whether exist opaqu quorum system failpron system b load decreas function n section answer question neg show lower bound load opaqu quorum system construct regardless failpron system theorem load opaqu quorum system least proof impli q let w strategi quorum system q fix q q then total load induc w element q is l w must server q suffer load least present gener construct opaqu quorum system increasingli larg univers size n load tend n grow give construct primarili show lower bound tight due requir construct practic use cope byzantin failur exampl suppos univers server fg consid n theta n hadamard matrix h construct recurs h properti hh n theta n ident matrix use wellknown induct argument hal ch shown i first row column consist entir gamma ii ith row ith column s n posit and similarli gamma iii two row and two column nposit ie s ncommon posit gamma ncommon posit treat row h indic subset u is let set defin ith row n note q u includ q claim system opaqu quorum system b use properti jq nfor u exactli set q these requir quickli verifi load nngamma achiev eg strategi assign equal probabl quorum faulti client far concern provid consist servic set correct client section extend treatment address faulti client addit faulti server would requir server allow act or behalf of client sinc updat may gener faulti client make assumpt selfverifi data thu use mask construct slightli improv similar idea suggest us andrew odlyzko common form hadamard matric gamma time form use howev relev characterist hadamard matric invari multipl gamma quorum system section read write protocol focu ensur consist data store replic servic seen correct client onli sinc faulti client may complet write oper quorum server may even write differ valu differ server section modifi write protocol includ updat protocol implement server prevent client leav servic inconsist state updat protocol could implement use wellknown agreement protocol eg lsp bt given failpron system b properti b b size less ju j involv server system describ two protocol correct failpron system b mask quorum exist involv quorum correct server complet updat oper explicitli treat load section latter properti essenti load measur defin use write protocol section describ protocol client write variabl x replic server replac write oper section follow procedur write client c write valu v queri server quorum q obtain set valuetimestamp pair choos timestamp c greater highest timestamp valu greater timestamp chosen past perform initiateupdateq v t note write pair v t quorum q perform execut oper initiateupdateq v t server execut correspond event deliverupdatec v t c client correct server execut deliverupdatec v t c greater timestamp current store variabl server updat valu variabl timestamp v t respect regardless whether updat variabl send acknowledg messag c correct protocol depend follow relationship among initiateupd execut client deliverupd event server implement initiateupd deliverupd primit satisfi relationship topic section c correct correct server execut deliverupdatec v t c execut agreement correct server execut deliverupdatec v t correct server execut propag correct server execut deliverupdatec v t eventu exist quorum everi correct server q execut deliverupdatec v t valid correct client c execut initiateupdateq v t server q correct eventu correct server execut deliverupdatec v t note valid correct client execut initiateupdateq v t q contain faulti server guarante deliverupdatec v t occur correct server ie write oper may effect correct server acknowledg deliverupdatec v t execut describ inform c deliverupdatec v t inde execut client receiv acknowledg set b server b certain write appli correct server quorum q by propag client receiv acknowledg set b server must attempt oper differ quorum m quorum correct server exist moment thu repeatedli tri client eventu make progress case client achiev progress increment access server obtain acknowledg quorum them order argu correct protocol adapt definit oper preced allow behavior faulti client reason unclear defin oper faulti client start or case read termin client behav outsid specif protocol simpli say write oper write v timestamp c termin correct server quorum execut write oper op oper read write execut correct client say op preced op op termin start in real time correct client otherwis op preced op op eventu termin op concurr op note definit oper preced oper involv faulti client everi oper faulti client either preced concurr everi oper given chang definit proof similar lemma suffic prove follow lemma correct process read oper concurr write oper return valu written last preced write oper serial preced write oper updat oper without signatur remain protocol describ updat protocol mask quorum system satisfi integr agreement propag valid first present updat protocol use digit signatur protocol shown figur lemma integr c correct correct server execut deliverupdatec v t c execut initiateupdateq v t q proof first readi q c v t messag correct server sent receiv echo q c v t member q moreov correct member send echo q c v t receiv updat q v t q c authent channel ie c execut initiateupdateq v t lemma agreement correct server execut deliverupdatec v t correct server execut proof argu previou lemma correct server execut deliverupdatec v must sent server q similarli echo q must sent server q sinc everi two quorum intersect at least one correct member sinc correct server send echo c v t one valu v v must ident lemma q mask quorum system univers u respect failpron system b q q client execut initiateupdateq v t send updat q v t member q server receiv updat q v t client c server previous receiv c messag updat q t server send echo q c v t member q server receiv ident echo messag echo q c v t everi server q send readi q c v t member q server receiv ident readi messag readi q c v t set b server b send readi q c v t everi member q done alreadi server receiv ident readi messag readi q c v t set q gamma server b b figur updat protocol use signatur proof assum otherwis contradict ie m exist q thu contradict m lemma propag correct server execut deliverupdatec v t eventu exist quorum q q everi correct server q execut deliverupdatec v t proof accord protocol correct server execut deliverupdatec v t receiv messag readi q c v t server member correct everi correct member q receiv t member by lemma readi messag b caus correct member q send readi messag consequ deliverupdatec v t execut correct member q lemma valid correct client c execut initiateupdateq v t server q correct eventu correct server execut deliverupdatec v t proof sinc client member q correct updat q v t receiv echo everi member q consequ server q send readi q c v t messag member q eventu execut deliverupdatec v t updat oper signatur updat protocol describ section requir server abl digit sign messag parti reliabl authent messag origin server even messag receiv via untrust intermediari digit signatur algorithm wellknown eg rsa remaind section use u denot messag sign server u use digit signatur result updat protocol exchang significantli less messag protocol figur protocol shown figur client execut initiateupdateq v t send updat q v t member q server u receiv updat q v t client c u previous receiv c messag updat q echo q c v t u c client c receiv echo q c v t u everi member q send fecho q c v t u g uq member q server u q receiv fecho q c v t u g uq execut deliverupdatec v t send fecho q c v t u g uq member q alreadi done so figur updat protocol use signatur lemma integr c correct correct server execut deliverupdatec v t c execut initiateupdateq v t q proof correct server execut deliverupdatec v t must receiv fecho q c v t u g uq quorum q correct server u q send echo q c v t u receiv updat q v t c on authent channel ie c execut initiateupdateq v tlemma agreement correct server execut deliverupdatec v t correct server execut proof argu previou lemma correct server execut deliverupdatec v must sent u q similarli echo q must sent u q sinc everi two quorum intersect at least one correct member sinc correct server u send echo c v t u one valu v v must ident v lemma propag correct server execut deliverupdatec v t eventu exist quorum q q everi correct server q execut deliverupdatec v t proof correct server execut deliverupdatec v t receiv fecho q c v t u g uq quorum q forward server q step protocol caus correct server q execut deliverupdatec v t lemma valid correct client c execut initiateupdateq v t server q correct eventu correct server execut deliverupdatec v t proof sinc client member q correct updat q v t receiv echo everi member q client forward echo member q henc member q execut deliverupdatec v t conclus literatur contain abund protocol use quorum access replic data approach appeal construct replic servic allow increas avail effici servic maintain consist work extend success approach environ server client servic may deviat prescrib behavior arbitrari way introduc new class quorum system name mask quorum system devis protocol use quorum enhanc avail system prone byzantin failur also explor two variat quorum system name dissemin opaqu mask quorum class quorum provid variou construct analyz load impos system work leav number intrigu open challeng direct futur work one character averag perform quorum construct load lessthanid scenario eg failur occur gener work describ quorum system uniform sens quorum possibl read write oper practic may benefici employ quorum system distinguish read quorum write quorum consist requir impos pair consist least one write quorum although seem improv lower bound overal load achiev may allow greater flexibl trade avail read write acknowledg grate andrew odlyzko suggest use hadamard matric construct opaqu mask quorum system asymptot load also thank yehuda afek michael merritt help discuss rebecca wright mani help comment earlier version paper insight comment rida bazzi led substanti improv previou version paper r atom snapshot share memori bound firstin firstenabledsolut lexclus problem integr secur faulttoler distribut databas effici faulttoler solut distribut mutual exclus composit regist share memori robustli messagepass system concurr control recoveri databas system asynchron consensu broadcast protocol grid protocol high perform scheme maintain replic data toward nonatom era lexclus test case bound concurr timestamp system construct maintain avail partit replic databas assign vote distribut system weight vote replic data quorumconsensu replic method abstract data type make replic data secur bound timestamp internet privaci enhanc mail hierarch quorum consensu new algorithm manag replic data optim multiwrit multiread atom regist byzantin gener problem authent distribut system theori practic interprocess commun part ii algorithm cover color hypergraph share concurr waitfre variabl p n algorithm mutual exclus decentr system toler failur continuousvalu sensor storag effici secur replic distribut databas load access control signatur via quorum secret share crumbl wall class high avail quorum system effici dispers inform secur secur agreement protocol reliabl atom group multicast rampart distribut trust rampart toolkit secur replic servic method obtain digit signatur publickey cryp tosystem share secret implement faulttoler servic use state machin approach tutori spx global authent use public key certif major consensu approach concurr control multipl copi databas random byzantin agreement tr assign vote distribut system quorumconsensu replic method abstract data type effici dispers inform secur load balanc fault toler toward nonatom era lexclus test case maintain avail partit replic databas bound concurrr timestamp system construct integr secur faulttoler distribut databas effici faulttoler solut distribut mutual exclus bound firstin firsten solut exclus problem optim multiwrit multiread atom regist authent distribut system atom snapshot share memori inlineequ f radrcdnrcdradf inlineequ algorithm mutual exclus decentr system share concurr waitfre variabl access control signatur via quorum secret share byzantin quorum system load avail byzantin quorum system synchron byzantin quorum system probabilist quorum system probabilist byzantin quorum system load capac avail quorum system combinatori theori nd ed major consensu approach concurr control multipl copi databas share secret method obtain digit signatur publickey cryptosystem storag effici secur replic distribut databas grid protocol make replic data secur weight vote replic data surviv consensu object secur scalabl replic phalanx ctr evelyn pierc lorenzo alvisi framework semant reason byzantin quorum system proceed twentieth annual acm symposium principl distribut comput p august newport rhode island unit state rodrigo rodrigu barbara liskov brief announc reconfigur byzantinefaulttoler atom memori proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada tatsuhiro tsuchiya tohru kikuno byzantin quorum system maximum availabililti inform process letter v n p juli yuanbo guo jianfeng ma practic secret share scheme realiz gener adversari structur journal comput scienc technolog v n p juli ittai abraham gregori chockler idit keidar dahlia malkhi waitfre regular storag byzantin compon inform process letter v n p januari rida a bazzi access cost asynchron byzantin quorum system distribut comput v n p januari dahlia malkhi michael merritt ohad rodeh secur reliabl multicast protocol wan distribut comput v n p januari rida a bazzi synchron byzantin quorum system distribut comput v n p januari thoma moscibroda stefan schmid roger wattenhof selfish meet evil byzantin player viru inocul game proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa fred b schneider lidong zhou implement trustworthi servic use replic state machin ieee secur privaci v n p septemb alysson neve bessani joni da silva fraga lau cheuk lung bt byzantin faulttoler tupl space proceed acm symposium appli comput april dijon franc lorenzo alvisi dahlia malkhi evelyn pierc michael k reiter fault detect byzantin quorum system ieee transact parallel distribut system v n p septemb rachid guerraoui marko vukoli fast robust read be proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa dahlia malkhi yishay mansour michael k reiter diffus without fals rumor propag updat byzantin environ theoret comput scienc v n p bryan parno mema roussopoulo defend pp digit preserv system ieee transact depend secur comput v n p octob hyunyoung lee jennif l welch random regist iter algorithm distribut comput v n p march petro maniati david s h rosenth mema roussopoulo mari baker tj giuli yanto muliadi preserv peer replica ratelimit sampl vote proceed nineteenth acm symposium oper system principl octob bolton land ny usa lidong zhou fred b schneider robbert van reness apss proactiv secret share asynchron system acm transact inform system secur tissec v n p august michael abdelmalek gregori r ganger garth r goodson michael k reiter jay j wyli faultscal byzantin faulttoler servic acm sigop oper system review v n decemb dahlia malkhi michael k reiter architectur surviv coordin larg distribut system ieee transact knowledg data engin v n p march ittai abraham dahlia malkhi probabilist quorum dynam system distribut comput v n p decemb petro maniati mema roussopoulo t j giuli david s h rosenth mari baker lockss peertop digit preserv system acm transact comput system toc v n p februari michael a marsh fred b schneider codex robust secur secret distribut system ieee transact depend secur comput v n p januari t j giuli petro maniati mari baker david s h rosenth mema roussopoulo attrit defens peertop digit preserv system proceed usenix annual technic confer usenix annual technic confer p april anaheim ca miguel correia nuno ferreira neve lau cheuk lung paulo verssimo wormit wormholebas intrusiontoler group commun system journal system softwar v n p februari dahlia malkhi michael k reiter avishai wool rebecca n wright probabilist quorum system inform comput v n p novemb meng yu peng liu wanyu zang specifi use intrus mask model process distribut oper journal comput secur v n p juli jian yin jeanphilipp martin arun venkataramani lorenzo alvisi mike dahlin separ agreement execut byzantin fault toler servic proceed nineteenth acm symposium oper system principl octob bolton land ny usa amitanand s aiyer lorenzo alvisi allen clement mike dahlin jeanphilipp martin carl porth bar fault toler cooper servic acm sigop oper system review v n decemb miguel castro barbara liskov practic byzantin fault toler proactiv recoveri acm transact comput system toc v n p novemb lidong zhou fred b schneider robbert van reness coca secur distribut onlin certif author acm transact comput system toc v n p novemb