t decis tree approxim boolean function a decis tree popular represent boolean function show that given altern represent boolean function f say readonc branch program one find decis tree approxim f desir amount accuraci moreov size decis tree smallest decis tree repres f construct obtain quasipolynomi time also extend result case one access sourc random evalu boolean function f instead complet represent case show similar approxim obtain specifi amount confid as oppos absolut certainti former case latter result impli proper paclearn decis tree uniform distribut without use membership queri b introduct decis tree popular represent boolean func tion form basic infer engin wellknown machin learn program c q q boolean decis tree also use problem perform reliabl comput presenc faulti compon kk medic diagnosi popular decis tree repres boolean function may attribut follow reason univers decis tree repres boolean function amen manipul mani use oper boolean function perform effici time polynomi size decis tree rep resent contrast oper intract popular represent tabl give comparison decis tree dnf formula readonc branch program support nsf grant advantag decis tree represent motiv follow problem given arbitrari represent boolean function f find equival represent f decis tree small size be immedi evid problem bound hard state polynomi time solvabl problem would impli satisfi cnf formula decid polynomi time imposs unless pnp therefor consid slightli differ problem let us say g approxim f fraction assign g f differ evalu given arbitrari represent boolean function f find approxim f decis tree small size be order fall trap befor interest solv problem effici reali tical is may use time polynomi follow paramet size given represent f size smallest decis tree represent f given invers desir error toler ie approxim would use applic small amount error toler return gain would accru decis tree rep resent inde case applic machin learn data mine exampl one could postprocess hypothesi output learn program convert decis tree ensur much error introduc choos suitabl small note one may use knowledg special properti represent scheme hypothesi construct decis tree approxim note one may even construct decis tree approxim decis tree hypothesi would use conjunct program like c output decis tree make special effort ensur output tree provabl smallest desir error toler expens sacrif littl error one could achiev desir minim case tabl complex oper differ represent scheme readonc branch decis tree program univers represent polynomi time polynomi time polynomi time represent polynomi time polynomi time polynomi time complement represent exponenti time polynomi time polynomi time decid satisfi polynomi time polynomi time polynomi time decid unsatisfi np complet b polynomi time polynomi time decid monoton conp complet b open polynomi time c decid equival conp complet b corp polynomi time e decid symmetri conp complet b polynomi time c polynomi time c decid relev conp complet b open polynomi time e variabl count number pcomplet f polynomi time c polynomi time c satisfi assign make represent np hard b corp polynomi time e irredund make represent np hard b open nphard g minimum truthtabl np hard h open polynomi time minim straightforward definit represent scheme easi reduct cnfsatisfi c prove paper result or follow one bcw e folk theorem prove decis tree testabl equival polynomi time result follow thi f prove s prove zb h result masek cite garey johnson book gj prove glr first show case wellknown represent scheme small approxim decis tree obtain quasipolynomi time polynomi factor first paramet list multipli factor involv expon logarithm second third paramet scheme are decis tree order binari decis diagram readonc branch program olog nheight branch program satj dnf formula constant j boolean formula third item gener first two result first two follow third quasipolynomi time algorithm actual hold gener class roughli speak represent scheme number satisfi assign input function small project comput efficientlya properti call satcount paperwould come techniqu employ here inde present algorithm gener way argu requir properti hold scheme worth emphas although time taken algorithm quasipolynomi size decis tree approxim not fact output decis tree smallest size decis tree height level approxim have sens optim certainli size larger smallest decis tree repres boolean function approxim also consid situat evalu boolean function f avail given sampl evalu show previou algorithm modifi slightli give quasipolynomi time algorithm produc small approxim decis tree sampl s is decis tree may disagre f evalu jsj assign s given argu latter result impli proper quasipolynomi time paclearn decis tree uniform distribut inform learn result may interpret follow compar absolut certainti approxim first result learn result say given access sourc random evalu f instead complet represent f output algorithm approxim decis tree much confid desir absolut certainti may way obtain decis tree approxim represent scheme like dnf formula count number satisfi assign pcomplet gj novel featur learn algorithm occam algorithm behw unlik one known learn theori algorithm may actual make error even train sampl use consequ analysi sampl complex gener one normal use may independ interest learn result compar similar one learn theori bshouti monoton theori base algorithm b deploy learn decis tree arbitrari fix distribut polynomi time follow drawback comparison algo rithm algorithm use membership queri output decis tree depth formula similarli bshouti mansour algorithm bm output decis tree ehrenfeucht haussler eh show decis tree rank r learnabl time n or distribu tion rank decis tree height largest complet binari tree embed sinc decis tree node rank log m first glanc result would seem improv learn result paper sinc one could learn node decis tree quasipolynomi time distribut differ thi learn node decis tree n variabl algorithm would alway produc decis tree size larger use sampl size polynomi invers error confid paramet contrast algorithm ehrenfeucht haussler may output tree size n olog m use sampl size quasipolynomi n polynomi invers error confid paramet rest paper organ follow section contain definit lemma use remain sec tion section algorithm find approx imat decis tree given satcount represent section contain result approxim decis tree given sourc random evalu boolean function conclud open problem section preliminari let f boolean function set n variabl total assign obtain set n variabl either assign may repres nbit vector f g n natur way satisfi assign f one number satisfi assign f denot f partial assign obtain subset variabl v assign valu partial assign may repres vector length n whose element either vector element correspond variabl assign valu thu total number partial assign n number partial assign k variabl assign valu n size partial vector denot jj number element assign empti partial vector denot one variabl assign project f partial assign denot f function obtain hardwir valu variabl includ precis given total assign partial assign let denot total assign obtain set variabl whose valu valu variabl whose valu valu then f defin interest projectionclos represent class boolean function ie one given represent boolean function f partial vector boolean function f also repres class and moreov represent comput polynomi time say projectionclos represent class polynomialtim satcount given represent f valu f comput time polynomi size represent n total number variabl represent function f use jdj denot size d context assur ambigu treat represent synonym boolean function repres error errf f f respect anoth boolean function f defin set n variabl total number assign f f moreov f approxim f consid follow projectionclos represent class boolean function paper decis tree decis tree binari tree leav label either intern node label variabl given assign evalu start root iter appli follow rule leaf reach let variabl current node x valu posit branch right otherwis branch left leaf reach label resp size decis tree number node branch program bp branch program direct acycl graph uniqu node indegre call root two node outdegre call leav one label label nonleaf node graph contain variabl outdegre exactli two everi variabl appear rootleaf path branch program call readonc robp note decis tree effect consid robp assig evalu follow rule decis tree height bp length longest path root leaf node order binari decis diagram obdd robp addit properti variabl appear order path root leaf satj dnf formula dnf formula everi assign satisfi j term formula formula boolean formula everi variabl occur onc proposit decis tree obdd robp bp sat j dnf formula formula projectionclos proof bp project partial vector comput follow redirect incom edg vertex label variabl assign valu left respect right child vertex variabl assign valu respect recurs delet vertic incom edg use depthfirst search step achiev linear time note bp decis tree obdd robp h height bp project also belong class sat jdnf formula project obtain substitut valu assign variabl dnf term result delet term wherea result delet variabl term formula appropri boolean algebra rule appli elimin s s obtain accomplish linear time case proposit robp olog nheight bp satcount abl proof number satisfi assign robp f comput follow travers node f revers topolog order let fx denot subrobp root node x consist vertic reach x edg join them node x visit fraction x x assign fx satisfi assign comput follow x leaf x valu leaf node otherwis x intern node x yz z left right children x simpl induct argument show complet r r root robp fraction satisfi assign f consequ n number variabl f next let b olog n height bp repres boolean function f first construct decis tree equival f spread out b creat separ copi node whenev need rather share subfunct branch program decis tree may immedi satisfi readonc properti easili convert one elimin subtre duplic variabl along path total number node result decis tree olog final comput number satisfi assign decis tree describ robp next two proposit use paper prove simpli order complet tabl proposit decis tree test monoton polynomi time proof let given decis tree n variabl conveni extend partial order defin boolean lattic set partial vector by i impli partial vector say everi total vector leaf node x determin partial vector px base assign variabl path root leaf node let us say x counterexampl monoton partial vector px x valu essenti observ monoton leaf counterexampl monoton easi test monoton use observ leaf node x assign valu let partial vector obtain set variabl px assign leav remain variabl project p x ident x counterexampl monoton demonstr path project boolean function fv permut v proposit robp test symmetri polynomi time proof proof inspir central idea bcw let f boolean function set variabl denot set assign f evalu first gener f realvalu function treat v set real variabl precis redefin f by variabl v assum valu valu redefinit coincid valu boolean true gener shown bcw given robp represent boolean function f valu real function real vector v comput linear time visit robp topolog order next let tabl system linear equat calcul jr k jb set assign f precis k one then x comput valu g mention use robp represent f treat jr k j variabl lead system linear equat tabl easili shown rank coeffici matrix therefor system admit uniqu solut final observ boolean function f symmetr jr k j either n valu k k n proof follow decid symmetri obdd decis tree also polynomi time proposit sat jdnf formula satcount proof let us say two term conflict contain liter l contain liter l consensu two nonconflict term denot tt term obtain union liter conflict consensu definit satj dnf formula f impli everi set term formula must least two conflict term therefor use principl inclus exclus here term k liter t simpli n k comment abov sum need consid consensu j term f constant j total time comput polynomi proposit formula satcount proof let f formula set n variabl f constant f constant term contain singl liter written either f f formula disjoint set n n variabl respect then easi argu recurs applic rule ensur f comput find decis tree approxim main result section algorithm construct decis tree approxim boolean function f repres projectionclos satcount class heart algorithm procedur find gener dynam program method use glr truthtabl minim decis tree find work follow given f boolean function n variabl height paramet h size paramet m build precis one tree set k partial vector size h eac h k k m here k set decis tree represent function f size k height h jj minimum error respect f among tree minimum size desir approxim therefor tree construct set w g algorithm employ twodimension array p k hold tree k tree p array repres tripl form root left subtre right sub tree unless contain singl leaf node case repres leaf valu partial vector notat v v respect denot partial vector obtain extend set variabl v respect lemma algorithm find correct ie given satcount abl represent boolean function f height paramet h size paramet m find output decis tree height h size among decis tree errt f minimum one decis tree minimum error minimum size among tree proof show induct l p k tree k jj h foreach jj h f els p foreach foreach p foreach variabl v use k errp k f errv els errp k f jp v k figur algorithm find mg tree must leaf valu depend valu yield minimum error rel f line algorithm find examin hypercub correspond f determin whether major assign also true l l assum p k correctli comput l l k minf hjj also assum p k correctli comput k k show find caus tree k place p k size tree k less k then induct hypoth si p k initi tree k line line cannot modifi p k algorithm cor rect therefor let size tree k exactli k let opt tree k let v root v must variabl assign valu let size opt left right subtre k respect observ k k one examin line let let induct hypoth errright subtre opt f sinc error tree sum error two subtre algorithm find tree p k error opt size opt lemma follow lemma let pjf j n denot time complex comput number satisfi assign arbitrari project given satcount function f time complex find on oh proof sinc f satcount represent time requir line opjf j nn number partial vector examin line h line take opjf j nn oh time line caus on oh partial vector examin variabl line take valu n possibl v possibl combin k k line complex line domin o error comput decis tree p satcount function f error comput implement follow leaf node x partial vector correspond evalu path lead x contribut total error partial vector either f leaf x valu njjjj f valu total error errt obtain sum error comput fashion leaf complex comput bound opjf j nm line henc algorithm find bound on oh pjf j n common dynam program algorithm memoiz help reduc overal complex observ complex error comput reduc maintain second twodimension array e whose element contain error correspond element array p first e comput opjf j n time line remain e ks comput everi time p k updat o time simpli sum error left right subtre p k timesav modif time complex becom opjf lemma let mnode decis tree exist decis tree height node approxim proof restrict height h convert node x level h either depend whether s s respect hypercub defin path lead x call tree clearli node error confin hypercub convert node x level h origin tree sinc dme node error node n h follow approxim substitut yield desir result theorem given satcount boolean function represent f whose smallest decis tree represent node error paramet find decis tree node approxim f time polynomi jf j n log m proof given f use standard doubl trick determin olog iter algorithm least valu findf logm return decis tree approxim f lemma m size smallest decis tree repres f correct time complex follow lemma respect learn decis tree uniform distribut show algorithm previou section extend learn decis tree uniform distribut remark introduct mean that given access uniformli distribut sampl evalu boolean function f error paramet confid paramet algorithm output decis tree node least number node need repres f decis tree approxim f confid least algorithm take time polynomi n logm log ie quasipolynomi time algorithm howev sampl complex algorithm modest polynomi paramet m log n log log use follow addit terminolog prove result section let mhn denot class decis tree n variabl height h size m decis tree let h tree height h obtain convert nonleaf node depth h leaf node classif depend whether major assign correspond hypercub f classifi respect recal two boolean function f f n denot number assign f f extens sampl classifi exampl form h bi assign number exampl form h bi f b need follow wellknown inequ proposit chernoff bound let outcom r ident independ bernoulli trial prob x pr probr p given sampl classifi exampl boolean function form h bi assign b f g height paramet h size paramet m decis tree height h size comput among decis tree errd s minimum among minimum error tree minimum size comput requir on oh proof let denot assign extend partial assign given comput ojsjn time modifi condit line algorithm find number assign whose valu compar modifi line take ojsjn time refer f line replac error comput carri describ proof lemma error comput take ojsjm time sinc rest algorithm unchang complex obtain replac pjf j n jsj note also true modifi algorithm propos proof lemma correct follow lemma theorem given uniformli distribut sampl size exampl mnode decis tree n variabl error paramet confid paramet find decis tree mhn time orm n oh confid least error approxim ie proof execut algorithm find modifi deal sampl describ lemma paramet h abov let call decis tree mhn bad errt fix bad decis tree output mhn least error sampl s here last inequ follow chernoff bound appli number error tree probabl p find output bad tree mhn certainli jt mhn j e r number binari tree node number decis tree node also upper bound mhn con sequent choic r proposit and littl bit arithmet probabl p turn conclus given satcount represent boolean function uniformli distribut sampl evalu boolean function paper present quasipolynomi algorithm comput decis tree smallest size approxim function possibl achiev polynomi time fail thi possibl obtain decis tree whose size within polynomi factor smallest approxim decis tree polynomi time find decis tree smallest size equival given one nphard zb open question whether least polynomi approxim smallest equival decis tree possibl polynomi time idea paper seem enough answer que tion hope combin idea result ehrenfeucht haussler eh work matter fact result alreadi use give quasipolynomi approxim smallest decis tree equival projectionclos represent allow test tautolog satisfi polynomi time quasipolynomi time done follow way consid sampl ehrenfeucht haussler algorithm n assign howev avoid use time polynomi sampl size note oper sampl algorithm consist of check assign evalu either comput new sampl obtain project given variabl oper time polynomi given represent convert algorithm one whose complex ad factor form on or r smallest rank equival decis tree sinc r cannot exceed olog m size smallest equival decis tree get desir quasipolynomi approxim final idea paper combin ehrenfeucht haussler properli learn decis tree arbitrari distribut without membership queri acknowledg thank anonym refere suggest sharper bound mhn led improv sampl complex theorem r occam razor equival free boolean graph decid probabilist polynomi time exact learn boolean function via monoton theori simpl learn algorithm decis tree multivari polynomi learn decis tree random exampl comput intract exact learn irrelev variabl abound construct optim binari decis tree npcomplet boolean decis tree faulti node induct decis tree learn decis tree classi fier central problem comput complex find small equival decis tree hard tr occam razor learn decis tree random exampl need learn exact learn boolean function via monoton theori learn decis tree classifi partial occam razor applic exact learn irrelev variabl abound comput intract induct decis tree simpl learn algorithm decis tree multivari polynomi central problem comput complex