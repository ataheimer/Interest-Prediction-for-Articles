t effici solut cach thrash problem caus true data share a abstractwhen parallel program execut multiprocessor privat cach set data may repeatedli use modifi differ thread data share often result cach thrash degrad memori perform paper present evalu loop restructur method reduc even elimin cach thrash caus true data share nest parallel loop method use compil analysi appli linear algebra theori number subscript express array refer due method simplic effici implement parallel compil experiment result show quit signific perform improv exist static dynam schedul method b introduct parallel process system memori hierarchi becom quit common today commonli multiprocessor system local cach processor bridg speed gap processor main memori system use multilevel cach often copyback snoopi cach protocol employ maintain cach coher multiprocessor system certain supercomput also use local memori view programcontrol cach program nest parallel loop execut parallel process system import assign parallel loop iter processor way unnecessari data movement differ cach minim conveni paper call iter parallel loop thread follow loop nest exampl i k enddo enddo exampl loop j parallel loop becaus valu fix statement loopcarri depend j vari loop j execut time loop nest creat iter thread total thread address element array a mani array element repeatedli access thread shown tabl figur ij denot thread correspond loop index valu denot set thread creat index valu i shown figur exist list thread t t thread modifi reus array element access neighbor thread list thread list assign differ processor data array unnecessarili move back forth differ cach system caus cach thrash problem due true data share nest loop construct shown exampl quit common parallel code use scientif comput j fang m lu studi larg number program includ linpack benchmark perfect club benchmark program mechan cae comput chemistri imag signal process petroleum applic report almost timeconsum loop nest contain least three loop level contain least one parallel loop even use loop interchang move parallel loop outward legal still found parallel loop enclos sequenti loop loop nest includ case parallel loop appear outermost loop level subroutin subroutin call callstat contain sequenti loop loop nest perfectli nest ie exist statement right inner loop fang lu propos thread align algorithm solv cach thrash problem may creat multinest loop algorithm howev assign thread processor either solv linear equat run time store precomput numer solut equat processor memori sinc store numer solut requir quit larg memori space sinc exact number thread often cannot determin static due unknown loop bound favor onlin comput approach paper present method reduc runtim overhead fang lu algorithm use thorough compil analysi array refer deriv closedform formula solv thread assign equat thread assign becom highli effici run time previous present preliminari algorithm deal simpl case datadepend array refer use linear function subscript experiment data given paper extend work cover multipl linear function clarifi underli theori report experiment result use silicon graphic sgi multiprocessor tabl element access thread method compil analyz data depend thread use inform restructur nest loop perfectli nest otherwis order reduc even elimin true data share caus cach thrash method effici implement parallel compil experiment result show quit signific improv exist static dynam schedul method follow first address relat work introduc basic concept assumpt that present solut cach thrash problem due true data share lastli show experiment result conduct sgi multiprocessor system relat work extens research regard effici memori hierarchi report literatur abusufah kuck lawri use loop block improv page perform improv local refer wolf propos iter space tile way improv data reus cach local memori gallivan jalbi gannon defin refer window depend variabl referenc sourc sink depend execut sourc depend save associ refer window cach sink also t figur element access differ thread execut may increas number cach hit carr callahan kennedi discuss option compil control uniprocessor memori hierarchi wolf lam develop algorithm estim tempor spatial reus given loop permut optim attempt maxim reus cach data singl processor also secondari effect improv multiprocessor perform reduc bandwidth requir processor therebi reduc content memori system contrast work consid multiprocessor environ processor local cach local memori differ processor may share data work peir cytron shang fort dholland share common goal partit index set independ execut subset correspond loop iter execut differ processor without interprocessor commun method appli specif type loop nest call uniform recurr uniform depend algorithm loop perfectli nest loop bound constant loopcarri depend constant distanc array subscript form loop index c integ constant hudak abraham develop static partit approach call adapt data partit adp reduc interprocessor commun iter dataparallel loop also assum perfectli nest loop loop bodi restrict updat singl data point ai twodimension global matrix a subscript express righthand side array refer restrict sum parallel loop index small constant subscript express lefthand array refer restrict contain parallel loop indic onli tomko abraham t t figur list thread access similar array element develop iter partit techniqu dataparallel applic program assum one pair data access function loop index variabl appear one dimens array subscript express agarw kranz natarajan propos framework automat partit parallel loop minim cach coher traffic sharedmemori multiprocessor restrict discuss perfectli nest doall loop assum rectangular iter space unlik previou work work consid nest loop necessarili perfectli nest loop bound variabl array subscript express much gener mani research studi cach fals share problem cach thrash occur differ processor share cach line multipl word although processor share word mani algorithm propos reduc fals share better memori alloc better thread schedul program transform work consid cach thrash due true share data word work close relat research done fang lu work iter space partit set equival class processor use formula determin iter belong equival class execut time processor execut correspond iter reduc elimin cach thrash iter solut vector linear integ system fang lu work vector may either comput run time may precomput later retriev run time loop bound known execut approach requir addit execut time processor fetch next iter unlik fang lu approach solv thrash problem compil time reduc runtim overhead achiev effect reduc cach thrash new method restructur loop compil time base thorough analysi relationship array element access loop indic nest loop perform experi commerci multiprocessor name silicon graphic challeng cluster therebi obtain real data regard cach thrash reduct contrast previou data mainli simul basic concept assumpt data depend statement defin statement use result anoth statement flowdepend safe store result fetch old data store locat antidepend overwrit result outputdepend depend within iter loop call loopindepend depend depend across iter loop call loopcarri depend cach thrash due true data share outermost loop parallel data depend cross thread therefor paper consid loop nest whose outermost loop sequenti simplifi discuss make follow assumpt program pattern function repres array subscript express linear loop construct consid consist sequenti loop embrac one sever singlelevel parallel loop exist multilevel parallel loop one level parallel commerci sharedmemori multiprocessor system henc shown below loop nest model three level parallel loop immedi enclos sequenti loop immedi enclos sequenti loop enddo enddo figur loop nest model linear map iter space n theta n theta n domain space theta a express as array k loop exampl necessarili perfectli nest restructur techniqu present later assum arbitrari loop bound although show lower bound simplic notat multipl array variabl multipl linear subscript function may exist nest loop sinc consid cach thrash due true data share ie due data depend thread also write loop nest figur as enddo enddo fl m array name appear loop bodi h m linear map iter space n theta n theta n domain space fl theta fl fl m potenti depend refer pair number pair fang lu report array involv nest loop usual twodimension threedimension smallsiz third dimens latter treat small number twodimension array nest loop parallel loop innermost level degener case loop nest figur therefor loop nest model seem quit gener method also appli loop nest contain sever separ parallel loop middl level parallel loop may restructur accord refer pattern thread differ instanc parallel loop align current align thread creat differ parallel inner loop program complic loop nest patternmatch techniqu use identifi loop subnest match nest shown figur outer inner loop part subnest ignor long loop indic appear array subscript compil analysi base simpl multiprocessor model cach memori follow characterist local processor use copyback snoopi coher strategi line size one word transform code howev execut correctli machin multiword cach line multilevel cach furthermor experiment result show perform transform code quit good realist machin analysi also extend incorpor machin paramet cach line size solut section analyz relationship linear function array subscript base analysi restructur given loop nest reduc elimin cach thrash due true data share consid nest loop necessarili perfectli nest may variabl loop bound clariti present section first discuss deal depend refer pair subscript function use refer pair differ pair may use differ subscript function later section discuss deal gener case use simpl affin transform fit model basic model subsect assum pair depend refer subscript function use refer assumpt extract subscript function h fl i j k pair depend refer model nest loop pair depend refer illustr follow code segment enddo enddo without loss gener suppos linear subscript function differ assum function h m rank form h fl i j take follow exampl enddo enddo figur nest loop multipl linear subscript function exampl data depend exist within loop j howev two data depend exist whole loop nest one refer a b two linear function consid one depend iter subspac n theta n call reduc iter space omit k loop order find iter reduc iter space may access common memori locat within correspond thread defin set element array fl access within thread use subscript function h fl definit given iter i reduc iter space element fl f fl i access within thread denot j g definit suppos ij j two thread correspond i ji reduc iter space given loop nest ij m say depend h fl denot ij definit exist fl fl m ij sinc f fl g fl linear term i j k follow lemma obviou lemma program pattern describ abov exist fl fl m two iter iter space n theta n theta n i j constant n seri iter space i satisfi follow equat follow lemma two theorem establish relationship loop index correspond two interdepend thread use index relationship stagger loop iter space interdepend thread assign processor lemma let ij j two thread ij exist k k theorem let b fl exist k k b fl fl gamma fl b fl fl c fl gamma fl c fl b fl fl gamma fl b fl proof lemma theorem obviou definit consid case b fl fl gamma fl b assum loop bound n n larg enough satisfi c fl assumpt almost alway true practic true parallel loop small import assumpt follow theorem theorem let b fl fl gamma fl b fact j loop middl level loop guarante ij fl i fl i order find thread data depend relat thread ij make follow definit definit given iter i j reduc iter space let ij denot follow set iter space r r l fl l fl l fl fl m defin as gcd fl equal gcdb fl c fl gammac fl b fl fl c fl gammaa fl c fl b fl fl gammaa fl b fl equal gammagcd b fl c fl c fl b fl fl c fl a fl c fl b fl fl a fl b fl guarante l fl l gcd fl equal gcda fl b fl equal gammagcda fl b fl guarante l fl l gcd fl equal gcda fl b fl equal gammagcda fl b fl guarante l fl call stagger paramet correspond linear function h fl exist data depend given pair refer defin stagger paramet l fl l fl stagger paramet exampl figur calcul be l l l l accord definit follow theorem deriv theorem definit state use stagger paramet uniqu partit thread independ set theorem ij defin satisfi i theorem indic ij includ iter whose correspond thread data depend relat ij call ij equival class reduc iter space order elimin true data share thread equival class assign processor want restructur reduc iter space thread equival class appear column stagger paramet l comput depend refer pair tell us stagger i row reduc iter space column right l left rel ith thread involv depend pair align column differ stagger paramet may requir stagger iter space differ way howev stagger paramet proport stagger unifi stagger paramet defin satisfi requir simultan definit given stagger paramet l call g l unifi stagger paramet lemma condit l k m definit true a iter i belong two differ equival class b iter belong two differ equival class theorem condit l k m definit true reduc iter space must stagger accord unifi stagger paramet g l l g order reduc elimin data share among thread ie i gth row reduc iter space must stagger j l l gj column right l left l rel ith row given loop nest satisfi condit l k m definit then accord theorem abov reduc iter space transform stagger reduc iter space sri leav first g row unchang stagger remain row use unifi stagger paramet data depend differ column sri howev stagger paramet proport ie exist j k longer obtain uniqu unifi stagger paramet moreov stagger alon longer suffici elimin data depend differ column restructur iter space thread equival class still differ column perform procedur call compact stack column onto other discuss stagger first definit given stagger paramet l l l l m suppos exist j k accord theori number exist integ satisfi fl l fl call g g unifi stagger paramet note sinc mtupl a necessarili uniqu g g may uniqu either definit unifi stagger paramet g g exampl figur found stagger use unifi stagger paramet g g result sri four possibl shape shown figur b gamma e figur a show detail one shape figur a b show reduc iter space exampl figur stagger unifi stagger paramet next comput compact paramet use algorithm present shortli partit sri n chunk total number column sri devid compact paramet figur d gamma e dwide chunk stack onto form compact iter space width d shown figur explain later thread differ column compact sri independ moreov product g equal number equival class sri shown figur b exampl transform compact form shown figur follow algorithm comput compact paramet d algorithm input set stagger paramet l output compact paramet d step element subset fl i l j g fl l l m g comput hl i l j i step jelement subset fl pick element say a g g d g g e g g figur sri outlin use euclidean algorithm comput integ b appli algorithm find nonzero integ r r j r a origin reduc iter space figur reduc iter space rearrang let r step j m comput step establish later uniqu regardless choic l step calcul compact paramet d nonzero integ r need found algorithm integ coeffici b comput euclidean algorithm algorithm therefor invok deriv group nonzero integ coeffici group integ coeffici linear express algorithm input nonzero posit integ output nonzero integ even number zero coeffici k p among d d d d d d d d d d d figur compact sri step odd number zero coeffici obvious nonzero integ comput algorithm satisfi exampl figur sinc two linear function loop nest step step algorithm use calcul compact paramet d is next need establish two import fact first compact d thread differ column independ second compact paramet comput algorithm figur reduc iter space compact largest number independ column possibl result compact sri constant valu first fact establish theorem theorem corollari so introduc follow definit definit given iter i j reduc iter space stagger paramet unifi stagger paramet g g integ satisfi set iter ij construct follow integ r iter i space belong exist integ r zero integ r iter i space r r follow three lemma theorem show ij equival class ij process construct ij immedi follow lemma lemma given iter i reduc iter space unifi stagger paramet g g exist integ r lemma given iter i reduc iter space exist integ r zero r fl l fl r lemma given iter i reduc iter space i theorem given stagger paramet l iter i j reduc iter space next establish ij result stagger g g follow compact d state corollari below lemma given stagger paramet l integ satisfi r exist integ r satisfi integ r satisfi r exist integ k r theorem compact paramet determin algorithm r fl l fl integ zero satisfi r exist integ k corollari set ij definit satisfi k r integ g g unifi stagger paramet definit compact paramet comput algorithm result thread differ column compact sri ind pendent next establish theorem two column column apart comput algorithm depend that therefor largest possibl number independ column result compact sri constant number theorem given i j ij proof accord comput algorithm exist integ r definit simplifi process stagger compact reduc iter space follow theorem use replac multipl stagger paramet proport singl stagger paramet theorem given stagger paramet l m stagger paramet satisfi exist integ r satisfi estim time need compil comput stagger paramet unifi stagger paramet compact paramet suppos refer pair complex determin stagger paramet om unifi stagger paramet stagger paramet determin om euclidean algorithm let number group stagger paramet paramet group proport small practic accord theorem need consid one repres group complex algorithm comput compact paramet c lastli show result restructur origin loop nest base stagger compact note stagger paramet proport compact unnecessari data depend elimin howev improv load balanc compact sri compact factor d equal number avail processor restructur code parameter loop bound number avail processor obtain system call runtim need recompil differ number avail processor given loop nest perfectli nest result code stagger compact shown code segment list below code segment the result restructur perfectli nest loop multipl linear enddo enddo enddo given loop nest perfectli nest result code two variant one g show code g list the code similar code segment lb lb lower bound j ub ub upper bound two loop g g unifi stagger paramet compact paramet respect determin abov psi psj local variabl processor use determin first iter j loop j execut it variabl j offset also local processor psi psj processor modifi everi g iter loop i accord stagger compact paramet valu psi psj initi differ processor lb respect defin function mod x mod code segment the restructur code case g endif endif enddo enddo enddo extend model theori develop previou subsect extend gener case subscript function pair refer necessari same suppos follow two linear function belong pair refer order determin iter reduc iter space depend due refer pair consid affin transform linear function h express denot order use previou result section let ident impli c c c appli algorithm section yield stagger paramet say given iter i iter i must depend i affin transform iter i depend i transform denot distanc i l calcul as l constant mean iter cannot align constant stagger paramet common practic sinc loop j doall loop nest model two linear function coffici loop index variabl j impli ff paper consid case ff defin l two constant given stagger paramet case equat uniqu solut uniqu stagger paramet l hand exist multipl solut follow theorem show certain condit l determin differ proport theorem assum ff stagger paramet l subscript function affin transform solut equat l equal fi l proport solut fi equat proport prove proport l suppos everi solut equat written solut homogen system associ equat is so b gamma b b b gamma b b c b gamma b suppos c accord definit c case b theorem have therefor accord definit also proport proport proport condit theorem met choos l stagger paramet refer pair tabl show exampl stagger paramet differ subscript function appear depend refer pair loop index variabl list order outermost loop level innermost simultan consid two refer pair ai j bi j thread ij share array element ai thread ij array element bi j thread ij use theorem stagger paramet l two pair respect unifi stagger paramet compact paramet calcul g g tabl exampl differ function depend refer pair loop nest depend refer pair experiment result thread align techniqu describ paper implement backend optim kdparpro knowledgebas parallel tool perform intra interprocedur data depend analysi larg number parallel transform includ loop interchang loop distribut loop skew strip mine fortran program evalu effect thread align techniqu perform multiprocessor memori hierarchi experi three program linpack benchmark sgi challeng cluster configur contain twenti mip processor first program parallel optim use kdparpro reduc elimin cach thrash due true data share tool recogn nest loop may caus thrash appli techniqu describ previou section analyz restructur loop nest parallel program compil use sgi f compil optim option o sequenti version program compil machin use optim option f output binari code execut variou configur differ number processor dedic time mip processor kbyte primari data cach mbyte secondari cach cach block size byte primari data cach byte secondari cach fast wide split transact bu powerpath use coher interconnect cach coher maintain snoopi writeinvalid strategi compar result obtain use algorithm align thread obtain use four differ loop schedul strategi provid sgi system softwar name simpl interleav dynam gss simpl method divid iter number processor assign chunk consecut iter one processor interleav schedul method divid iter chunk size specifi chunk option execut chunk static interleav among process dynam schedul iter also divid chunksiz chunk process finish chunk howev enter critic section grab next avail chunk gss schedul chunk size vari depend number iter remain none sgiprovid method consid task align speedup parallel execut share memori machin like sgi cluster affect mani factor includ program parallel data local schedul overhead load balanc usual gss dynam interleav schedul small chunk size suppos show better load balanc simpl schedul hand tend incur schedul overhead simpl furthermor simpl captur data local case schedul do program select linpack sgefa spodi ssifa sgefa factor doubl precis matrix gaussian elimin main loop structur program consist three imperfectli nest loop innermost loop insid subroutin saxpi multipli vector constant add result anoth vector order show array access pattern insid loop bodi inlin saxpi code section given below howev kept subroutin call appli techniqu program enddo enddo sri stagger iter reduc iter space k j shown figur program consid linear function i j stagger paramet accord definit number processor use determin compact factor figur sri sgefa spodi comput determin invers certain doubl precis symmetr positivedefinit matrix two main loop nest program shown below restructur loop nest sgefa innermost loop contain subroutin saxpi first loop nest enddo enddo second loop nest enddo enddo sriss stagger iter reduc iter space k j j k two loop nest respect shown figur ab linear function consid are i j i k respect stagger paramet accord definit a loop nest b loop nest figur sriss spodi ssifa factor doubl precis symmetr matrix elimin main loop nest program shown below view backward goto loop outermost sequenti loop within valu kstep may chang differ iter base input matrix depend valu kstep one two parallel loop nest insid outermost sequenti loop execut iter outermost loop index step outermost loop equal ie gamma gamma array access pattern two kstep valu slightli differ innermost loop insid saxpi subroutin continu k eq enddo enddo enddo continu sriss stagger iter reduc iter space k jj two differ kstep shown figur clariti use c kstep denot valu kstep current k iter use p kstep valu previou k iter thread align well properli align thread creat current k iter previou k iter need consid four possibl case depend one two refer anoth two refer ai third ai k gamma jj ai last ai k gamma case stagger paramet l a figur sriss ssifa problem size use experi n perform parallel code transform techniqu compar perform achiev schedul method provid sgi shown figur sgefa ssifa may requir pivot nonpositivedefinit symmetr matric positivedefinit symmetr matric show data sgefa pivot show data without pivot ssifa pivot may potenti destroy task align number processor interleav chunk interleav chunk dynam gss simpl method a number processor interleav chunk interleav chunk dynam gss simpl method b n figur gaussian elimin sgefa number processor interleav chunk interleav chunk dynam gss simpl method a n number processor interleav chunk interleav chunk dynam gss simpl method b n figur determin invers symmetr posit matrix spodi figur show method alway outperform sgi schedul method except program sgefa program method perform almost simpl although method outperform simpl processor attribut reduct cach thrash due true data share problem tend sever processor run simpl schedul method tend get better perform dynam gss interleav method result better local less cach thrash case also incur less schedul overhead program number processor interleav chunk interleav chunk dynam gss simpl method a n number processor interleav chunk interleav chunk dynam gss simpl method b n figur factor symmetr matrix ssifa exhibit good load balanc like spodi ssifa program linpack deal symmetr matric simpl perform result degrad substanti method outperform simpl quit significantli case especi spodi figur well ssifa without pivot figur method beat simpl much abl get improv simpl program sgefa pivot much like destroy local tri keep rest program attribut perform gain simpl reduct cach thrash due true data share better load balanc although ssifa pivot believ method benefit load balanc note sgi system softwar cannot pick right schedul method automat fit particular program hand method seem capabl deliv good perform differ loop shape thrash problem becom seriou parallel system processor greater commun overhead method like even effect conclus paper present method reduc iter space rearrang accord stagger compact paramet nest loop either perfectli nest imperfectli nest restructur reduc even elimin cach thrash due true data share method effici implement parallel compil although analysi per se base simpl machin model result code execut correctli complex model experiment result show transform code perform quit well real machin extend techniqu propos paper incorpor addit machin paramet interest futur work r perform enhanc page system program analysi transform automat partit parallel loop data array distribut sharedmemori multiprocessor automat loop interchang multilevel cach hierarchi organ depend analysi supercomput improv regist alloc subscript variabl compil scientif code complex memori hierarchi partit label loop unimodular transform elimin fals share solut cach pingpong problem risc base parallel process system cach local memori thrash compil strategi parallel process system iter partit approach cach local memori thrash parallel process perform optim problem optim data transfer complex memori system strategi cach local memori manag global program transform effect program parallel stripmin transform cach perform multiprocessor compil techniqu data partit sequenti iter parallel loop reduc fals share share memori multiprocessor compiletim data transform design implement knowledgebas parallel tool effici solut cach thrash problem extend version loop restructur techniqu thrash problem loop stagger structur comput comput depend graph compil op timiz solut cach pingpong problem multiprocessor system introduct theori number minimum distanc method partit recurr multiproc sor guid selfschedul practic schedul scheme parallel supercomput time optim linear schedul algorithm uniform depend empir studi fortran program parallel compil iter partit resolv stride conflict cachecoher multiprocessor fals share spatial local multiprocessor cach data local optim algorithm iter space tile tr