t automat recognit tractabl infer relat a procedur given recogn set infer rule gener polynomi time decid infer relat procedur automat recogn tractabl infer rule underli congruenc closur recognit tractabl particular rule set constitut mechan verif theorem origin prove independ kozen shostak procedur algorithm rather heurist class automat recogniz tractabl rule set precis character seri exampl rule set whose tractabl nontrivi yet machin recogniz also given technic framework develop view first step toward gener theori tractabl infer relat b introduct certain well known algorithm view polynomi time decis procedur infer relat exampl transit closur determin whether formula form x proven given inequ transit axiom unionfind procedur determin whether equal proven given equat reflex tran sitiv symmetri axiom equal congruenc closur procedur determin whether equal proven given set equat symmetri reflex transit congruenc axiom equal algorithm view decis procedur infer relat gener certain set infer rule paper identifi gener class local rule set rule set desir properti gener infer relat polynomi time decid consid set r infer rule let r infer relat gener r ie relat sigma r phi exist deriv phi sigma use rule r rule set r call local whenev sigma r phi exist local deriv phi sigma deriv local everi proper subexpress formula deriv either proper subexpress phi proper subexpress member sigma appear subexpress infer rule r one show that rule set r one determin polynomi time size sigma phi whether exist local deriv phi sigma r local ie exist deriv ensur exist local deriv infer relat r polynomi time decid one easili show rule set consist singl transit rule local true rule set underli unionfind procedur ie reflex symmetri transit axiom equal rule set underli congruenc closur ie reflex symmetri transit substitut axiom equal also local although local rule set difficult prove addit provid theoret framework studi certain class polynomi time algorithm local infer relat provid tool construct gener purpos autom reason system sound complet set infer rule first order logic local everi local relat polynomi time decid entail relat first order logic undecid howev local infer rule use reduc proof length first order proof system done construct socrat sequent system sequent express form sigma phi sigma set formula phi formula sigma r phi say rule set r gener sequent sigma phi socrat sequent system consist two rule set local rule set set sequent rule sequent gener local set call obviou proof socrat sequent system seri sequent sequent either obviou deriv earlier sequent one sequent rule obviou sequent abbrevi long deriv proof socrat sequent system shorter proof tradit system howev rule set gener obviou sequent local correct proof still verifi polynomi time particular socrat sequent system set theori first order logic describ appear power local rule set socrat sequent system enhanc use nonstandard syntax first order logic aspect syntax english mantagu semant use construct particularli power gener purpos local rule set determin local arbitrari rule set difficult known whether local properti rule set decid main result paper certain subclass local rule set bound local rule set mechan identifi precis exist procedur that given arbitrari rule set find counterexampl local whenev rule set local construct proof rule set bound local whenev bound local fail termin case rule set local bound local rule set consist reflex symmetri transit congruenc axiom equal bound local local rule set mechan recogn procedur given here amount mechan verif theorem given sever novel exampl nontrivi bound local rule set given paper includ rule set base syntax english exampl also given rule set local bound local hope notion local describ paper first step toward gener understand tractabl rule set sever open technic problem sever direct research discuss end paper better understand tractabl infer relat hope result improv technolog construct semiautom verif system deeper understand infer gener f figur tractabl set boolean infer rule preliminari definit paper present gener procedur recogn certain case set infer rule gener comput tractabl infer rela tion first step construct procedur precis defin notion infer rule figur give basic infer rule boolean connect rule question mark front indic variabl replac differ express differ applic rule variabl infer rule call metavari distinguish variabl underli languag throughout remaind paper let b for boolean denot set infer rule given figur boolean express written term two univers connect rule set b express some all inferenti properti connect infer relat gener rule linear time decid yet infer rule augment simpl case analysi sequent rule rule becom complet boolean infer anoth exampl set infer rule consid follow rule equal rule express symmetri reflex transit properti equal respect rule express substitut equal equal well known congruenc closur provid polynomi time decis procedur infer relat gener equal rule precis notion infer rule develop gener enough allow notat use rule fortu nate howev infer problem involv function symbol two argument convert equival problem involv function symbol two argument exampl function f three argument replac two function pair f loss gener replac rule follow two rule remaind paper let e denot rule set consist rule b differ metavari differ syntact kind exampl metavari appear boolean rule set b rang formula rule set e metavari rang term metavari rang function symbol phrase formula term monad function refer particular syntact kind syntact kind either kind symbol express form oe theta oe oe syntact kind express either constant symbol metavari abl given syntact kind applic form express kind oe express kind oe latter case express kind first order predic calculu ordinari constant symbol constant kind term proposit symbol constant kind formula function symbol constant kind term predic symbol constant kind term formula boolean connect constant kind formula theta formula formula respect quantifierfre predic calculu languag gener set constant type term set constant type formula set function symbol set predic includ equal boolean connect express sometim written ffi e occasion e definit allow quantifi express paper discuss infer rule involv quantif even without quantifi set rule still gener undecid intract infer relat hand presenc quantifi necessarili prevent tractabl tractabl infer relat involv quantif discuss gener notion local need construct procedur automat recogn tractabl rule set involv quantif express kind formula call formula infer rule object form theta theta formula metavari substitut map ae metavari express that metavari x aex express kind x definit metavari substitut ae express s defin ae result replac metavari abl imag ae set express upsilon defin aeupsilon set observ metavari substitut ae express s ae express syntact kind s deriv set formula sigma infer rule r exist infer rule theta r metavari substitut ae aepsi member sigma aetheta equal phi deriv phi sigma sequenc formula psi either member sigma onestep deriv r previou element sequenc psi n formula phi exist deriv phi sigma rule set r write sigma r phi note r relat gener r standard way interest find gener properti rule set r guarante correspond infer relat r polynomi time decid one way consid restrict relat r explicitli construct polynomi time decid done use follow terminolog call label formula set expressionsomega everi proper subexpress psi member omegagamma set formula gamma rule set r defin gamma set proper subexpress formula plu close variablefre proper subexpress formula r note that finit rule set r finit formula set gamma finit howev formula constant formula metavari label formula express set impli express set infinit set label formula spite infin label formula howev restrict infer process label formula small finit set yield tractabl infer relat write sigma r phi exist deriv phi sigma rule set r psi label formula omegagamma r sigma fphig tractabl lemma finit rule set r relat r polynomi time decid set rule r call local relat r relat r tractabl lemma impli infer relat gener local rule set polynomi time decid proof refin version tractabl lemma given appendix i exampl consid problem determin whether sigma e phi phi formula sigma equat first order term e equal rule set rule b express equal symbol plu first order term appear sigma phi term omegagamma e sigma fphig equat label formula omegagamma e sigma fphig let n total size sigma fphig order n equat label formula omegagamma e sigma fphig impli one enumer polynomi time label formula omegagamma e sigma fphig deriv sigma use deriv restrict label formula definit local provid obviou way determin given rule set local local equal infer rule origin prove use differ terminolog independ kozen shostak kozen use syntact argument show sigma e phi phi proof essenti induct length deriv use establish sigma e phi shostak proof local e semant shostak observ relat e clearli sound standard semant equal furthermor sigma e phi one construct model sigma phi fals word relat e semant complet sinc e sound e least strong semant complet e impli e e semant proof use simpler model construct later given nelson oppen semant proof local compact mani case syntact proof result howev seem difficult gener semant proof techniqu point use mechan recogn wide class local rule set follow section show syntact techniqu use construct gener local recognit procedur syntact proof local finit rule set r relat r polynomi time decid rule set r local relat r relat r gener syntact approach prove local particular rule set construct use follow definit set express upsilon call subexpress close everi subexpress everi member upsilon also member upsilon r rule set sigma formula set let upsilon express set subexpress close contain subset set cr sigma upsilon defin set formula psi exist deriv psi sigma everi formula appear deriv label formula upsilon fphig say set cr sigma upsilon univers cr sigma upsilon contain label formula upsilon lemma let r fix rule set let sigma formula set let upsilon subexpress close set sigma one determin whether cr sigma upsilon univers time polynomi size upsilon cr sigma upsilon univers finit enumer time polynomi size upsilon proof lemma given similar proof refin tractabl lemma given appendix i possibl character local term closur oper cr rather infer relat r need addit terminolog one step extens subexpress close set upsilon express ff member upsilon everi proper subexpress ff member upsilon extens event rule set r fourtupl upsilon upsilon subexpress close contain one step extens upsilon psi member letter use denot extens event consid extens event ff psi sigma upsilon note formula psi may old sens psi may member cr sigma upsilon altern psi may new sens psi member cr sigma upsilon fffg member cr sigma upsilon lemma given state rule set r local if if imposs new formula label formula old set upsilon feedback event rule set r extens event ff psi sigma upsilon r psi label formula upsilon member cr sigma upsilon lemma rule set r local if if feedback event r proof first suppos exist feedback event e r compon ff psi sigma upsilon fact psi member cr sigma upsilon fffg impli sigma r psi fact e feedback event impli psi label formula upsilon member cr sigma upsilon fact psi label formula upsilon impli upsilon must member cr sigma omegagamma r sigma fpsig sigma r psi thu r r differ r local argument show r local feedback event r show convers feedback event r r local suppos feedback event r consid sigma phi sigma r phi show r local suffic show sigma r phi show sigma r phi suffic show finit subexpress close set upsilon phi phi cr sigma upsilon assumpt phi cr sigma omegagamma r sigma fphig let upsilon subexpress close set phi cr sigma upsilon onestep extens ff upsilon phi member cr sigma upsilon fffg otherwis tupl ff phi sigma upsilon would feedback event induct impli phi member cr sigma upsilon finit subexpress close set upsilon contain thu sigma r phi lemma reduc problem determin local problem determin exist feedback event local recognit procedur base gener method prove nonexist feedback event gener method best introduc use simpl exampl consid follow rule express monoton oper f let for monoton set three infer rule wish prove nonexist feedback event consid extens event ff psi sigma upsilon rule either psi old formula ie member cm sigma upsilon psi provabl old formula use infer rule possibl character way prove new formula old formula use rule specif extens event one follow four condit must hold ffl psi old formula ie member cm sigma upsilon ffl psi formula ff ff ffl ff form fs psi formula form ff cm sigma upsilon contain formula u fu ffl ff form fs psi formula form ff cm sigma upsilon contain formula fu u s extens event satisfi one condit either psi old formula the first condit psi contain ff proper subexpress the last three condit thu psi either old formula psi label formula upsilon extens event satisfi one condit feedback event problem prove nonexist feedback event reduc problem prove everi extens event satisfi one four condit done use follow definit let r rule set sigma formula set upsilon subexpress close set let ff one step extens upsilon definit set c ff r sigma upsilon defin cr sigma upsilon set c ffj r sigma upsilon defin c ffj r sigma upsilon plu label formula upsilon fffg deriv c ffj r sigma upsilon via singl applic infer rule r indepth analysi comput complex relat m given r sigma upsilon consid fix arbitrari sigma upsilon ff show nonexist feedback event suffic show everi formula psi cm sigma upsilon fffg satisfi one four condit respect sigma upsilon ff four condit view defin four differ type formula set cm sigma upsilon fffg prove everi formula cm sigma upsilon fffg one four type suffic prove induct j everi formula c ffj sigma upsilon one four type everi formula sigma upsilon old formula formula first type assum everi formula c ffj sigma upsilon one four given type assumpt one prove everi formula psi c ffj sigma upsilon one given type induct step involv case analysi proof rule use deriv element c ffj sigma upsilon type formula use anteced applic rule method describ prove local rule set gener mechan procedur recogn local local recognit procedur mechan local recognit procedur guarante recogn local rule set howev possibl precis character class rule set whose local mechan recogniz procedur precis character involv addit terminolog definit rank extens event ff psi sigma upsilon rule set r least natur number j psi element c ffj r sigma upsilon definit natur number k rule set r say r kboundedloc r local extens event r rank k less rule set r boundedloc whenev exist k r kboundedloc note r kboundedloc cr sigma upsilon fffg alway equal c ffk r sigma upsilon would seem boundedloc extrem strong condit infer rule rule set would satisfi condi tion howev exampl local infer rule discuss boundedloc rule set e boundedloc b bound local unfortun rule set local boundedloc let consist reflex rule transit rule plu rule given below rule set local boundedloc the proof left nontrivi exercis reader s t s given local although boundedloc refin tractabl lemma impli gener infer relat decid order n time the transit rule order follow two theorem main result paper first local recognit theorem rule set r bound k possibl determin whether r kbound local second local recognit theorem exist procedur which given rule set r follow ffl r local procedur termin output feedback event r ffl r boundedloc procedur termin output least k r kboundedloc plu enumer possibl type extens event ffl r local boundedloc procedur fail termin consid proof local monoton rule describ preced section proof show everi monoton extens event fall one four type extens event type feedback event mechan proof techniqu need way formal repres extens event type consid third monoton extens event type given preced section ffl ff form fs psi formula form ff cm sigma upsilon contain formula u fu extens event type character specifi form ff form psi certain formula must cr sigma upsilon gener allow formal specif extens event type also includ specif express must upsilon formal specif extens event type fourtupl ff ff psi pattern give form ff psi respect sigma set formula must includ cr sigma upsilon upsilon set express must includ upsilon pattern ff psi express contain metavari type monoton extens event character follow formal fourtupl fourtupl specifi class extens event ff form fs psi form ff t cr sigma upsilon contain four tupl note upsilon construct upsilon subexpress close set contain onestep extens upsilon fact tupl ff condit given definit extens event tupl extens event gener extens event contain metavari defin entir class instanti extens event extens event ff psi sigma upsilon let extens event say e rinstanc templat e templat e rcover extens event e exist metavari substitut ae satisfi follow condit say templat set rcover event set everi member rcover member often say cover instanc rather rcover r instanc respect rule set clear context use term event templat templat rather term exten sion event describ extens event use templat schema whole class extens event follow lemma state use properti extens event templat let e ff psi sigma upsilon let e ff instanc e virtu metavari substitut ae lemma set aec r sigma subset cr sigma upsilon proof consid formula theta cr sigma must show aetheta member cr sigma upsilon consid deriv theta sigma formula deriv label formula upsilon let a deriv deriv replac express imag substitut ae a deriv aetheta aesigma furthermor sinc aeupsilon subset upsilon everi formula a label formula upsilon sinc everi element aesigma cr sigma upsilon must aetheta also cr sigma upsilon lemma natur number j set aec ff j subset c ffj r sigma upsilon proof proof induct j previou lemma establish result assum result hold j consid j theta formula c ff j must show aetheta c ffj r sigma upsilon theta deriv via singl infer rule formula phi induct hypothesi aephi c ffj r sigma upsilon aetheta deriv aephi aetheta label formula upsilon fffg thu aetheta c ffj r sigma upsilon lemma rank e less equal rank e proof let j rank e formula psi c ff j lemma aepsi must c ffj r sigma upsilon sinc aepsi equal psi extens event e must rank j less feedback event e feedback event feedback event formula psi either member cr sigma label formula upsilon first case lemma impli aepsi henc psi member cr sigma upsilon suppos psi label formula upsilon sinc psi label formula upsilon fff g label formula upsilon express ff must proper subexpress psi impli aeff proper subexpress thu ff proper subexpress psi impli psi label formula upsilon thu e feedback event local recognit procedur take boundedloc rule set r automat construct proof local r use techniqu use prove local rule set proof local involv show everi extens event instanc one four specif templat order construct analog proof arbitrari boundedloc rule set r procedur must gener finit set extens event templat specif rule set r must show finit set extens event templat cover extens event r recognit procedur use singl process gener extens event templat prove gener templat cover extens event process start set null templat gener new templat iter pass exist templat infer rule definit null templat kind ff psi fpsig fg ff metavari kind extens event rank if if instanc null templat without loss gener consid syntact kind use infer rule need consid finit set null templat follow lift lemma state exist procedur pass templat infer rule lift lemma let r finit rule set let finit templat set cover extens event r rank less possibl comput finit templat set rt cover extens event rank less proof lift lemma procedur comput rt given appendix ii definit rule set r defin r set null templat defin j r cover everi extens event r rank j less lemma r local if if j j r contain feedback event proof suppos exist feedback event r extens event must finit rank j must cover element j r templat feedback event more effici definit state j r equal j r plu element alreadi cover element j r cover feedback event j r must contain feedback event lemma r jboundedloc if if j r contain feedback event j r cover rt j r everi member j r rank j less proof first suppos j r cover rt j r sinc cover transit impli j r cover extens event less but argument impli cover extens event rank less fact cover extens event if addit j r contain feedback event feedback event r r must local templat j r rank less then sinc templat cover extens event greater rank extens event r must rank j less suppos r jbound local sinc feedback event r j r must contain feedback event sinc everi extens event rank j less j r must cover extens event impli j r cover rt j r final sinc extens event r rank j less everi templat j r must rank j less recognit theorem follow directli lemma procedur base lemma implement claim made paper boundedloc particular rule set mechan verifi addit exampl section present addit exampl boundedloc rule set exampl intend support hypothesi boundedloc rule set natur procedur construct rt ensur everi extens event j r rank j less quit common easili construct exampl also intend support hypothesi recogn local usual difficult three exampl local rule set discuss boolean rule set b equal rule set e monoton rule set addit exampl boundedloc rule set deriv consid variou union rule set eg turn union boundedloc gener howev union local rule set need local similarli subset local rule set need local local variou combin b e determin mechan verif except rule set b boundedloc combin rule set b e boundedloc next exampl rule set base syntact structur english montagu semant rule involv express three differ syntact kind class express specifi noun phrase formula express given simpl semant class express denot set formula denot truth valu specifi noun phrase denot oper map set truth valu a second order predic exampl x denot set everi x specifi noun phrase denot second order predic true set case set x subset set formula form everi x y true case x y similarli formula form some x y true case element set x member set y ie case x nonempti binari relat r class express c let r some c r everi c class express exampl let kiss binari relat let man woman class express constant class express kiss some woman kiss everi woman formula everi man kiss some woman altern some man kiss everi woman mean express form r some c r everi c defin formula natur mean infer rule shown figur sound natur semant let n for natur set infer rule given figur run everi x x everi x y everi y z everi x z some x y some y x some x y some x x some x y everi y z some x z everi x y everi r some x r some y everi x y everi r everi y r everi x some x y everi r everi x r some y figur natur rule set rule set n local howev notion local use construct polynomi time decis procedur relat n first see n local note combin infer rule some c s n everi r everi s r some c howev deriv express some s occur proper subexpress formula deriv some s appear statement infer problem some cs n everi r everi s r some c spite fact n local local recognit procedur use show relat n polynomi time decid let n rule set construct n replac formula form everi c s some c s formula form iseveri c s issom c s respect formula phi set formula sigma similarli defin phi sigma sigma n phi if if sigma n phi suffic show n polynomi time decid one machineverifi fact n boundedloc refin tractabl lemma impli exist order n decis procedur relat n sever technic question remain unansw first although procedur show kbound local decid arbitrari rule set known whether unbound local decid anoth open question regard infer relat rather rule set infer relat call local gener local rule set possibl rule set r nonloc yet relat r gener rule set r r local relat r local even though r not given rule set r one determin relat r local say relat kboundedloc gener kboundedloc rule set one determin r kboundedloc seem like definit local improv consid natur rule set n given abov rule set local trivial syntact transform yield essenti equival boundedloc rule set n gener replac formula form p t formula form p s curri predic p transform local rule set one local fact local sensit trivial syntact chang suggest robust notion local possibl ideal definit local properti local arbitrari rule set decid local rule set guarante gener infer relat polynomi time decid class local relat close certain simpl syntact transform curri improv notion local might also lead improv refin tractabl lemma ideal one abl mechan recogn boolean infer relat linear time decid rather quadrat tractabl lemma would indic similarli singl rule transit gener relat decid linear time rather cubic exampl effici algorithm view tighter restrict forward chain infer automat construct fast congruenc closur algorithm perhap much expect fast congruenc closur simpli matter tighten restrict forward chain infer howev may reason invok special case mechan rule set includ equal rule subset hope framework present paper first step toward power gener theori tractabl infer relat i tractabl lemma tractabl lemma state finit rule set r relat r polynomi time decid statement tractabl lemma refin give use upper bound order polynomi involv refin requir addit terminolog infer rule r said order k exist express e e either metavari proper subexpress formula rule r everi metavari appear r also appear e exampl rule order two two express satisfi requir condit note rule order one equat fs proper subexpress formula rule similarli rule order one rule order two refin tractabl lemma fix finit rule set r possibl determin whether sigma r phi order n k time n total size sigma phi rule r order k less proof purpos proof rule set r call normal if everi rule r r everi metavari r appear proper subexpress formula r first reduc problem determin whether sigma r phi problem determin whether sigma r phi case r normal sigma empti infer rule r empti set anteced sigma r phi thu assum without loss gener either sigma nonempti rule r anteced consid rule r metavari psi appear r appear proper subexpress formula r place psi appear r anteced conclus psi anteced conclus r remov rule set without affect relat r psi anteced conclus comment sigma r impli rule r replac rule r anteced psi remov psi conclus r anteced r replac r rule r deriv r replac conclus psi new formula constant f let r rule set deriv r make remov replac sigma r phi case sigma r phi sigma r f furthermor r normal rule set rule r order k less now without loss gener assum r normal rule set let upsilon fix rule set r set upsilon order element sigma r phi case exist deriv phi sigma r psi label formula upsilon let r infer rule r metavari substitut ae let aer rule deriv ae replac metavari r imag ae sinc r normal need consid instanc aer ae map everi metavari r member upsilon let e set express satisfi condit definit r order j e either metavari proper subexpress formula r impli need consid instanc aer ae substitut aee member upsilon sinc everi metavari r appear e set instanc aer comput match express e element upsilon fix rule r independ size n set possibl match element upsilon comput order n j time restrict aee element upsilon guarante conclus anteced aer label formula upsilon let ir set instanc aer conclus anteced aer label formula upsilon set ir comput order n j time let ir union set ir rule r r set ir comput order n k time sigma r phi case phi deriv sigma rule ir pure proposit reason we need consid substitut rule ir equival determin given proposit symbol deriv set proposit symbol use set proposit horn claus exist deriv determin time proport total size set proposit horn claus sinc ir comput order n k time total size order n k ii lift lemma lift lemma state follow lift lemma let r finit rule set let finit templat set cover extens event r rank j less possibl comput finit templat set rt cover extens event rank less templat set rt construct r follow r set infer rule let set extens event templat individu metavari appear one rule templat the rule templat resolv apart defin rt set extens event templat gener nondeterminist follow procedur let theta theta n rule r let ff exist metavari substitut ae aetheta let ae gener substitut satisfi condit let ff express aeff ff let fs set top level proper subexpress aephi ie proper subexpress aephi proper subexpress larger proper subexpress aephi let fu disjoint set whose union exist substitut ae ae let ae gener substitut satisfi condit select express um let ff ae ff let phi ae aephi let sigma ae ae let upsilon least subexpress close set contain follow a close variablefre proper subexpress formula appear rule set r b proper subexpress sigma c set form ae aeupsilon d proper subexpress ff e express ae w ff member upsilon output ff set extens event templat r rt also set extens event templat r templat rank less templat rt less proof let ff tupl rt extens event templat extens event which may contain metavari show tupl satisfi condit extens event r step ensur upsilon subexpress close step b ensur upsilon condit step ff upsilon ensur ff one step extens upsilon step e ensur everi immedi subexpress phi either member upsilon equal ff guarante phi label formula upsilon ff must also show formula phi member c ff j templat select step procedur let ae substitut map everi express e ae aee ae ae substitut construct step re spectiv construct substitut ae ensur phi deriv ae psi singl infer rule psi psi member c ffj show ae cr sigma cr sigma theta formula cr sigma must show ae theta member cr sigma upsilon let deriv theta sigma everi formula label formula upsilon ae d deriv ae theta ae sigma furthermor sinc everi proper subexpress everi formula member upsilon everi proper subexpress everi formula ae d member upsilon thu ae theta member cr sigma subset cr sigma upsilon sinc psi member c ff j depth j deriv ae psi ae cr sigma subset cr sigma upsilon exist depth j deriv ae psi argument similar one show everi formula deriv label formula upsilon fff g thu ae psi member c ff j deriv one step ae psi thu phi must member c ff j set templat cover extens event rank less rt cover extens event rank j extens event ff phi sigma upsilon rank j the use doubl prime allow name use proof agre name use procedur definit phi member c ffj r sigma upsilon member c ffj r sigma upsilon impli exist formula c ff j infer rule r form theta theta n r allow phi deriv psi n appli substitut oe infer rule oetheta extens event ff psi extens event e rank j less thu e cover templat let cover extens event e via substitut ae respect assum metavari appear one r therefor defin substitut metavari x x appear r x equal oex x appear e x equal ae x otherwis x equal x thu theta n substitut satisfi condit given step procedur let ae gener substitut satisfi condit construct step procedur substitut ae least gener impli substitut written ae follow anoth substitut ie express e e equal aee let ff aeff defin step procedur sinc aeff ff ff equal ff express aephi equal phi equal phi thu aephi label formula upsilon fff g impli that immedi subexpress aephi equal ff member upsilon let set immedi subexpress u aephi u equal ff let set immedi subexpress w aephi w member upsilon note u thu substitut satisfi requir step let ae substitut defin step procedur ie gener substitut ae substitut ae least gener befor impli written ae follow anoth substitut ie express e e equal ae e express e defin step procedur let e tupl ff show e extens event templat cover origin extens event via substitut ff equal equal ff similarli phi equal phi furthermor case analysi step use show upsilon subset upsilon impli ff member upsilon otherwis would ff member upsilon ff would member upsilon violat origin condit ff onestep extens upsilon sinc ff member upsilon tupl e output procedur thu member rt lemma e extens event templat final must show sigma subset cr sigma upsilon set sigma equal subset cr sigma r variat common subexpress problem natur languag base infer procedur appli schubert steamrol complex finit present algebra taxonom syntax first order infer knowledg represent system mathemat comput complex taxonon infer fast decis procedur base congruenc closur algorithm reason equal tr ontic knowledg represent system mathemat taxonom syntax first order infer fast decis procedur base congruenc closur variat common subexpress problem algorithm reason equal complex finit present algebra ctr hubert comonlundh vroniqu cortier secur properti two agent suffici scienc comput program v n p march han jrgen ohlbach elimin selfresolv claus journal autom reason v n p june rakesh verma algorithm reduct rewrit problem ii inform process letter v n p novemb harald ganzing effici deduct method program analysi acm sigplan notic v n p march david basin harald ganzing autom complex analysi base order resolut journal acm jacm v n p jan stphani delaun easi intrud deduct problem homomorph inform process letter v n p march robert givan david mcallest polynomialtim comput via local infer relat acm transact comput logic tocl v n p octob david mcallest robert givan taxonom syntax first order infer journal acm jacm v n p april pascal lafourcad intrud deduct equat theori exclusiveor commut distribut encrypt electron note theoret comput scienc entc v n p juli javier esparza andrea podelski effici algorithm pre post interprocedur parallel flow graph proceed th acm sigplansigact symposium principl program languag p januari boston ma usa stphani delaun florent jacquemard decis procedur verif secur protocol explicit destructor proceed th acm confer comput commun secur octob washington dc usa harald ganzing viorica sofroniestokkerman uwe waldmann modular proof system partial function evan equal inform comput v n p octob pascal lafourcad deni lugiez ralf treinen intrud deduct equat theori abelian group distribut encrypt inform comput v n p april nanci durgin patrick lincoln john mitchel andr scedrov multiset rewrit complex bound secur protocol journal comput secur v n p may evgeni dantsin thoma eiter georg gottlob andrei voronkov complex express power logic program acm comput survey csur v n p septemb