t connector mobil program a abstractsoftwar architectur put forward concept connector express complex relationship system compon thu facilit separ coordin comput separ especi import mobil comput due dynam natur interact among particip process paper present connector pattern inspir mobil uniti describ three basic kind transient interact action inhibit action synchron messag pass connector given commun unitylik program design languag semant categori theori show categor framework use appli propos connector specif compon result architectur visual diagram show compon connector b introduct complex softwar system grow role softwar architectur increasingli seen unifi infrastructur conceptmodel analys valid overal system structur variou phase softwar life cycl consequ studi softwar architectur emerg recent year autonom disciplin requir concept formal method tool concept connector put forward express complex relationship system compon thu facilit separ coordin comput especi import mobil comput due transient natur interconnect may exist system compon paper propos architectur approach mobil encapsul dynam natur interact welldefin connector precis present connector pattern three fundament kind transient interact action inhibit action synchron messag pass pattern parameter condit express transient natur interact overal architectur obtain appli instanti connector mobil system compon illustr propos compon connector written commun program design languag base uniti ip natur connector propos paper motiv inspir mobil uniti extens uniti allow transient interact among program howev approach somewhat differ mobil uniti suggest use interact section defin coordin within system compon advoc approach base explicitli identifi connector order make architectur system explicit promot interact firstclass entiti like program moreov base approach modif superposit relat program mobil uniti introduc new special program construct lead profound chang uniti syntax comput model howev point syntact semant modif like name program action local variabl alreadi includ commun make easier interest reader compar approach mobil uniti use exampl luggag distribut system consist cart move close track transport bag loader unload along track due space limit omit mani detail which make exampl realist necessari illustr main idea paper follow approach propos give semant connector categor framework approach program object categori morphism show program superpos categori theori object character intern structur morphism ie relationship object chang definit morphism obtain differ kind relationship program without chang syntax semant program languag fact core work present remaind paper illustr principl chang program morphism small way action ramifi transient action synchron becom possibl work partial support jnict contract praxi xxi mat escola project art contract equitel sa michel wermeling departamento de informatica universidad nova de lisboa mont da caparica portug email mwdifctunlpt jose luiz fiadeiro departamento de informatica faculdad de ciencia universidad de lisboa campo grand lisboa ii mobil commun framework use consist program morphism section introduc necessari definit thorough formal treatment interest reader consult commun program basic set name guard action action name act rendezv point program synchron step one action whose guard true execut parallel action consist one assign execut simultan attribut use program either externalit valu provid environ may chang timeor localit valu initi program modifi action attribut type fix algebra data type specif set sort symbolsomega theta sindex famili function symbol phi set firstord axiom defin properti oper present specif sort predefin function use paper commun program follow structur program p read r init f g a ffl v set local attribut ie program variabl ffl r set extern attribut use program ie readonli attribut instanti local attribut compon environ ffl attribut type data sort ffl initialis condit proposit local attribut set action name one associ statement see below ffl everi action g gamma guard bg proposit attribut state necessari condit execut ffl everi action g gamma domain dg set local attribut g chang ffl everi action local attribut dg f g a term denot valu assign time g execut formal signatur program defin vocabulari ie attribut action name program signatur tupl hv r gammai set local attribut r set extern attribut set action set v r gamma finit mutual disjoint domain action set v notat program attribut sort attribut denot domain action g denot dg invers v set action chang program bodi defin initi valu local attribut also action modifi them purpos bodi use proposit term built program attribut predefin function symbol program pair h deltai program signatur program bodi ffl proposit f assign everi everi dg term sort assign everi proposit a notat dg empti f denot skip locat import aspect mobil take approach mobil uniti repres locat distinguish attribut howev framework allow us handl locat flexibl way distinguish whether program control motion move environ declar locat attribut local extern respect formal treatment locat attribut special properti abstract level work at howev implement commun handl special way chang system locat impli chang valu locat attribut viceversa assum therefor special syntact convent locat attribut compil distinguish attribut follow notat propos mobil uniti paper locat attribut start give exampl commun program present specif cart like bag unload cart uniqu identifi repres extern integ attribut cart cannot chang ident cart transport one bag time sourc loader destin unload initi cart destin loader fetch first bag unload bag must deliv depend bag identifi deliv bag loader empti cart proce next loader absenc bag denot identifi zero track divid segment divid ten unit locat cart therefor given integ cart move two differ speed slow one length unit per time unit fast two length unit cart stop reach destin action perform destin depend whether cart empti full program cart dest int read id nbag int slow dest fast dest load dest nbag k dest destnbag dest unload dest bag dest nextdest turn program morphism categor notion express relationship certain pair program previou definit commun morphism two program p p map p s attribut action p state way p compon p therefor call superposit morphism sinc captur notion superposit p underli program p transform one paper keep basic intuit introduc small although fundament chang mobil set program may synchron action differ action differ program differ time allow thi program morphism may associ action g base program p set action fg superpos program p intuit action correspond behaviour g synchron action compon p action g must preserv basic function g ad function action synchron g morphism quit gener set fg may empti case action g effect remov p put word perman inhibit guard made fals due technic reason map action p set action p formalis partial function p p howev exampl inform discuss use set version action map morphism must preserv type local domain attribut preserv local mean local attribut map local attribut preserv domain mean new action system allow chang local attribut compon definit given program signatur consist total function oe ff partial function oe notat follow indic ff fl omit denot preimag oe fl oe also x term or proposit oex term resp proposit obtain replac attribut x notic choic appropri morphism possibl state whether given compon given system coloc ie whenev one move other compon move independ within system model morphism map or not locat attribut compon locat attribut system first result signatur morphism constitut categori basic assert morphism compos word componentof relat transit and reflex cours proposit program signatur signatur morphism constitut categori sig superposit program p base program p captur morphism signatur obey follow condit ffl initi condit weaken ffl assign equival ffl guard weaken mean valid firstord sens categori signatur extend program proposit program superposit morphism constitut categori prog give exampl program morphism consid need prevent cart collid intersect achiev goal two step second present subsect ivb two cart enter two segment intersect due semant commun allow one cart move step one cart away intersect first step avoid collis forc cart move slowli word fast action inhibit notic case inhibit depend presenc anoth cart therefor second extern locat attribut need cart program thu transform inhibitedcart given diagram program cart dest int read id nbag int slow dest fast dest load dest bag unload dest bag program inhibitedcart dest int read id nbag slow dest fast dest i load dest bag dest bag inhibit condit distancetocross morphism inject fast fast etc next section show inhibitedcart program obtain composit two compon iii architectur configur system describ diagram compon channel compon program channel given signatur specifi program interconnect given program p p signatur construct follow pair attribut or action p share resp synchron signatur contain one attribut resp action b morphism p map b morphism p map b morphism signatur program signatur seen program f empti bodi categor term oper f functor ie morphism object differ categori simpl exampl consid follow diagram connect through channel repres attribut share gener cart program program initi integ attribut valu program init signatur share program cart var init program describ whole system given colimit diagram obtain comput pushout pair compon common channel program p result pushout obtain follow initi condit conjunct initi condit compon attribut p union attribut p p renam share name attribut p local local least one compon exampl result pushout repres cart identifi program cart var bag dest id int read nbag int action p basic subset pair action pair g g map action channel may appear p action p or map action channeli synchron action p resp p then appear unpair p synchron two action g g ie join singl one g take union domain conjunct guard parallel composit assign action common attribut result assign f g a guard strengthen a action incompat ie term denot differ valu a equal fals therefor synchron action never execut expect illustr pushout diagram program cart var bag dest int read id nbag int slow dest fast dest load dest bag unload dest bag signatur ifast program inhibitor read int i i skip program inhibitedcart shown previou section action fast pair togeth join guard assign notic attribut inhibitor program renam name local next result state everi finit diagram colimit proposit categori prog finit cocomplet channel ie signatur allow us express simpl static connect program express complex transient interact use connector basic concept softwar architectur connector consist glue link one role channel role constrain object connector appli to categor framework connector and therefor architectur built depend categori use repres glue role channel relationship categori possibl use three differ categori three part connector eg propos role specif written tempor logic simplic assum role glue member categori therefor adopt basic definit connect tupl hc g r fl aei channel glue role morphism prog connector finit set connect glue semant connector given colimit connect diagram definit superposit morphism object diagram colimit therefor superposit becom sens symmetr necessari properti captur interact connector appli program instanti role categor term must exist morphism role program definit correct instanti connector fhc g r set morphism prog result system colimit diagram form morphism illustr instanti connector two role diagram iv interact interact two program involv condit comput therefor cannot specifi signatur must use connector program instanc role interact glue channel state exactli part program interact distribut system may consist mani compon usual classifi rel small set differ type sinc interact pattern normal depend individu compon type necessari defin connector exist compon type obtain result system connector instanti actual compon therefor follow consid program correspond compon type luggag distribut exampl three differ program type cart loader unload program individu compon differ initi condit identifi attribut mobil set one import aspect interact temporari natur repres condit interact take place proposit true usual proposit base locat interact parti consid three kind interact inhibit action may execut synchron two action execut simultan commun valu local attribut one program pass correspond extern attribut program kind interact develop connector templat parameter interact condit mean that given interact program ie role condit interact appropri connector instanti given set compon form overal system possibl interact specifi follow ffl inhibit interact state action g program p execut whenev interact condit true ffl synchron interact state action g program p execut simultan action g program true ffl commun interact state valu local attribut the messag program p written extern attribut program p true set must compat moreov program must indic action immedi execut send resp receiv messag definit given set p program transient interact either one follow ffl transient inhibit hg ffl transient synchron hg ffl transient commun hg mp biject ffl proposit attribut p follow subsect present connector pattern correspond interact glue connector need includ attribut occur interact condit howev make formal definit easier glue pattern includ attribut role due local name attribut differ role must put togeth disjoint union oper written avoid name clash simplic assum interact condit use attribut interact program thu role present pattern case instanti connector must role provid remain attribut next subsect provid exampl a inhibit inhibit easi eleg express action execut true execut i true definit inhibit connector pattern correspond inhibit interact hg case interact program environ program p read r init g bg signatur target g program inhibitor init true g i skip illustr action inhibit exampl section ii iii achiev follow connector signatur context read int program inhibitcross read init true fast i skip signatur target read int fast fastfast program cart is program cart is again inhibit condit notic connector two role one cart whose action temporarili inhibit cart provid context inhibit occur applic connector result colimit present next subsect b synchron synchron two action g g two differ compon seen merg singl action gg system differ static mobil case latter merg done condit true gg execut correspond simultan execut g g therefor g would execut compon system fact execut gg mean also execut g viceversa sum up two action synchron either execut simultan none execut contrast approach taken mobil uniti allow two kind synchron coexecut coselect former correspond notion expos abov latter forc two action select simultan one inhibit guard fals action execut extend basic semant uniti one action select time sinc commun alreadi allow but impos simultan select multipl action believ intuit notion synchron correspond coexecut handl coselect key repres synchron two action subject condit ramifi action two one correspond execut fals one true put word action two subact one normal execut synchron execut normal subact execut condit fals inhibit true opposit happen synchron subact therefor use techniqu inhibit sinc two action synchron synchron subact must share both three instead four subact facilit understand name subact set name action part of definit synchron connector pattern correspond synchron interact hg signatur c g program synchronis read init true g i skip signatur c read program p read r init g bg program p read r init colimit action gg guard assign g g therefor either bg bg fals assign incompat gg get execut connector describ call nonexclus coexecut outsid interact period action execut normal also possibl simul exclus coexecut mean action execut synchron interact condit true end simpli elimin action g g inhibit connector shown abov keep synchron action gg continu exampl second step avoid collis cross forc nearest cart move fast whenev distant one move sinc latter move slowli nearest cart guarante pass cross first use interact condit previou section one get diagram signatur c read int fast program synchcross read init true fast i skip signatur c read int slow slowfslowfastslowg program cart is program cart is prevent collis cart cart obtain shown section iii one must consid two symmetr case depend cart nearer intersect let us assum cart nearer thu must block fast action cart inhibitor shown previou section synchron slow action fast action cart use connector abov diagram cart context inhibitcross target cart cart oo synchcross c cart follow colimit where rang abbrevi code duplic program system read nbag dest slow dest dest dest fast slow dest dest dest dest dest destnbag dest dest dest nextdest see synchron transit consid follow exampl action g synchron two action g g whenev true respect result system must provid action four combin truth valu interact condit exampl true action must occur simultan i fals subset action occur happen inde pushout two morphism g basic given pair fg g morphism oeg g put word action g ramifi action g mean whenev g would execut subset oeg execut superpos program viceversa execut g impli g execut base program therefor g ramifi two distinct way pushout combin subact occur whenev g execut pushout morphism state combin subact belong ssh ssg gggggggggggggggggggg one see combin correct action execut colimit includ combin action share name action g gg left middl pushout synchron g g g right four possibl way c commun mobil uniti commun achiev variabl share interact x c engag disengag f x k f state share condit c share initi valu variabl final valu f x f variabl oper semant state whenev program chang x get valu viceversa approach violat local principl furthermor point sever restrict impos order avoid problem like eg simultan assign differ valu share variabl also feel commun appropri concept share set consid name mobil agent engag transient interact kind network framework commun program commun seen kind share local extern attribut keep local principl say some kind cannot use mechan static case share meant map two differ attribut compon singl one system obtain colimit mobil case local attribut may share differ extern attribut differ time viceversa appli usual construct attribut would becom singl one result system clearli unintend therefor obtain effect transient share use commun perspect precis assum program p want send messag set local attribut p want receiv messag must provid extern attribut correspond number type program p produc valu store wait messag read p sinc commun program sequenti wait understood restrict sens assum p produc anoth messag previou one read ie messag lost may howev execut unrel action put anoth way produc program p expect acknowledg produc new valu attribut purpos assum p action g must execut new messag produc similarli program p must inform new messag arriv may start process it purpos assum p singl action g first action execut upon receipt new messag action may simpli start use directli may copi local attribut p sum up commun establish via one singl action program action g p wait read action g p read ie start use valu expect glue interact connector transfer valu notifi program solut explicitli model messag transmiss parallel assign messag attribut abbrevi possibl local attribut p must extern attribut glue extern attribut p must local attribut glue assign done parallel notif p moreov program may commun proposit true therefor glue contain action wait i m synchron wait action g p read action g p execut messag transmit solut anoth action read glue synchron g make sure read execut wait use boolean attribut thu inhibit new valu transfer again like block read primit except alway possibl write p way similar point process calculu port distribut system p may execut action unrel sinc receiv may get messag differ sender differ time not sever possibl assign due local principl assign attribut must singl program therefor messag type receiv might get singl glue connect possibl sender hand messag might sent differ receiv m therefor sever possibl assign associ wait action sender messag must singl glue connect sender possibl recipi sum up messag type singl glue act like demultiplex synchron sender receiv j interact condit ij true assum possibl commun pattern known advanc commun connector pattern correspond commun interact m signatur sender read wait program commun read init new j signatur receiv j read read j program p read r init program j read init read notic sever action wait ij may occur simultan particular receiv j messag sent valu distinguish messag sent differ sender even content same one add local integ attribut glue add assign action wait ij prevent two differ sender send messag simultan luggag deliveri exampl commun take place cart arriv station ie loader unload bag exchang messag loader sender unload receiv cart role bag held station store attribut type queue integ although locat station fix must repres explicitli order repres commun condit name cart station coloc sinc connector describ interact program station describ basic comput loader remov bag queue unload put bag queue loader program must separ action produc messag ie comput valu bag attribut send messag ie bag load onto cart c cart connect l loader connector c ident role each one cart program section i l ident role loader program show role respect morphism ith loader sender jth cart receiv signatur sender read load loadfwait wait ic g program load init new j nbag new j true new j fals signatur receiv read nbag int load loadread j program loader load init load initlocid newbag q load loadedfals load load load loadedtru program cart var dest bag int read id nbag int initlocid slow dest fast dest load dest bag bagnbag dest bag similarli connector u role unload c role cart ith cart sender connect jth unload receiv follow signatur sender read load loadfwait wait iu g program unload read init new j signatur receiv j read unload program cart var dest bag int read id nbag int initlocid slow dest fast dest load dest bag bagnbag dest bag program unload read unload true program obtain pushout program init of section iii x program correspond system consist two cart one loader one unload obtain comput colimit follow diagram show role instanti morphism connector which name glue compon synchcross slow fast inhibitcross fast loader load unload ggo unload synchcross fast slow inhibitcross fast __ notic binari connector deal cross symmetr distinguish cart suppos nearer cross therefor one must appli connector twice pair cart v conclud remark shown fundament kind transient interact inspir mobil uniti repres use architectur connector semant given within categor framework approach illustr unitylik program design languag argu gener benefit work within categor framework are ffl mechan interconnect compon complex system formal univers construct eg colimit ffl extralog design principl intern properti univers construct eg local name ffl differ level design eg signatur program relat functor work particular synergi softwar architectur categori theori result sever conceptu practic advantag first system construct principl way interact kind connector templat instanti actual interact condit instanti connector appli interact program thu form system architectur visual diagram program correspond overal system obtain compil ie comput colimit of diagram second separ comput coordin alreadi support softwar architectur reinforc two fact one hand glue connector use signatur interact program bodi hand superposit morphism impos local principl third captur transient interact morphism program action chang syntax semant languag remain same two way deal architectur mobil compon system limit mobil limit number differ compon type possibl interact pattern foreseen thu static architectur possibl interconnect repres system cope system greater degre mobil one must evolv architectur compon connector ad remov unpredict paper inspir mobil uniti follow first approach futur work address second approach one idea wish explor remov interact condit glue action instead associ applic whole connector diagram system architectur thu becom dynam moment includ connector whose condit true anoth possibl appli graph rewrit techniqu system diagram third venu chang again definit morphism repres notion changesto instead componentof word morphism form p p indic p may becom moment idea captur softwar architectur evolut categor set suitabl valid must investig acknowledg would like thank antonia lope mani fruit discuss anonym refere suggest improv present r special issu softwar architectur perspect emerg disciplin parallel program designa foundat semant architectur connector basic categori theori comput scientist mobil uniti reason specif mobil comput mobil uniti languag logic concurr mobil system toward gener locat servic mobil environ tr ctr michel wermeling cristvo oliveira commun workbench proceed th intern confer softwar engin may orlando florida perform evalu mobilitybas softwar architectur proceed nd intern workshop softwar perform p septemb ottawa ontario canada michel wermeling antnia lope jo luiz fiadeiro superpos connector proceed th intern workshop softwar specif design p novemb antonio brogi carlo canal ernesto pimentel semant softwar adapt scienc comput program v n p juli antnia lope jo luiz fiadeiro michel wermeling architectur primit distribut mobil proceed th acm sigsoft symposium foundat softwar engin novemb charleston south carolina usa antnia lope jo luiz fiadeiro michel wermeling architectur primit distribut mobil acm sigsoft softwar engin note v n novemb andrea bracciali antonio brogi carlo canal formal approach compon adapt journal system softwar v n p januari lu filip andrad jo luiz fiadeiro agil coordin inform system v n p septemb marco antonio barbosa lu soar barbosa orchestr dynam interconnect softwar compon electron note theoret comput scienc entc p june michel wermeling jo luiz fiadeiro graph transform approach softwar architectur reconfigur scienc comput program v n p august michel wermeling jo luiz fiadeiro algebra softwar architectur reconfigur acm sigsoft softwar engin note v n p nov antnia lope jo luiz fiadeiro ad mobil softwar architectur scienc comput program v n p juli dianxiang xu jianwen yin yi deng junhua ding formal architectur model logic agent mobil ieee transact softwar engin v n p januari