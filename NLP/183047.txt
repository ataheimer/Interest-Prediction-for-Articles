t cach interfer phenomena a impact cach interfer program perform particularli numer code heavili use memori hierarchi remain unknown gener knowledg cach interfer highli irregular term occurr intens paper differ type cach interfer occur numer loop nest identifi analyt method develop detect occurr interfer and import comput number cach miss due interfer simul experi real machin show model gener accur interfer phenomena captur experi also show cach interfer intens frequent certain paramet array base address dimens strong impact occurr interfer modifi paramet induc global execut time variat more applic model techniqu numer rang perform evalu predict enhanc data local optim techniqu b introduct three type cach miss distinguish coldstart miss compulsori capac miss interfer or conflict miss capac occur cach space unsuffici store data reus interfer miss occur two data map cach locat typi calli fullyassoci cach exhibit interfer miss work supportedbi esprit agenc dg xiii grant no apparc bra iiicapac miss numer code studi great extent rel easili predict estim studi also attempt take account impact cach line size but studi interfer miss though sever casestudi report cach interfer sever affect cach behavior also suggest provid consid interfer cach perform evalu optim cach interfer difficult predict esti mate necessari know data map cach data referenc in stanc consid address b map cach locat reus time whether refer sequenc aaabbb ababab interfer equal respect nevertheless sever reason press studi cach interfer first all cach tend perform bottleneck high network memori latenc signific perform improv obtain slight reduct cach miss besid sever onchip data cach directmap order achiev low hit time cach consid sensit interfer especi small current case onchip space constraint kbyte dec alpha mip r moreov larg cach line size induc high interfer one reason cach line size current kept small capabl detect avoid cach interfer could allow increas cach line size import all cach interfer make program perform unpredict understand work cach phenomena would allow precis perform analysi predict applic code paper particularli target toward numer code character larg work set perform highli depend memori hierarchi behavior goal paper threefold first illustr fact cach interfer occur frequent signific impact program perform section second goal introduc methodolog predict estim cach interfer directmap cach frequent occur numer loop nest section third goal illustr model accuraci sever exampl section first version framework comput cach interfer present model appli drive data copi strategi present paper provid detail comput illustr model accuraci experi exampl three type statist provid simul execut time for whole loop array estim execut time obtain model global execut time loop time hpparisc workstat execut time curv correspond simul model obtain follow techniqu sinc purpos model predict variat rather absolut execut time start point pick real execut time graph where x paramet vari graph execut time let x number simul estim cach miss paramet lat purpos statist twofold first show impact cach interfer global perform second verifi execut time variat correspond miss ratio variat notion cach interfer cach interfer oper disrupt reus data sever type reus distinguish spatial tempor reus type self depend reus one refer reus data groupdepend reus one refer use data anoth refer also distinguish see characterist hpparisc cach array element directmap cach byte whole paper array floatingpoint data dimens given array element experi array experi hp array base address vari use one larg singl array array point array modifi point locat rel base address two array vari hp system miss penalti experiment time e gamma second loop iju ku ju execut time run second real estim figur bexecut time oe oe oe cach array oe ku figur clayout cach figur influenc cach interfer frequenc interfer notion cach interfer convey rare intens phenomena like pingpong two refer such refer ai bi doloop index i start cach locat translat cach constantli compet cach line therefor prevent spatial reus howev cach interfer much divers frequent type reus di rupt gener larger reus distanc given datum higher probabl flush cach data load reus oc cur consid loop modifi version loop arcd perfect club benchmark reus distanc associ spatial reus ldak equal iter loop k unlik disrupt reus distanc associ tempor reus ldak equal ku iter loop k more like disrupt depend valu ku irregular interfer whether two data set intersect cach determin cach posit set posit gener depend two type paramet array base address lead di mension sinc paramet arbitrarili ie cacheconsci determin compil programm cach interfer occur appar random manner consid loop a cach distanc array lda ldb smaller base address array lda ldb two data set intersect assum directmap cach data belong intersect cannot reus import cach interfer loop a distanc array character one paramet effect shown vari singl paramet ldb ld figur b ffi vari gammak u theta ku perform variat case pingpong observ match estim real execut time graph strongli suggest variat due interfer phenomena note valu ffi exact number refer perform array base address modifi experi conduct paper see section show frequent signific perform loss due cach interfer exampl illustr type interfer phenomenon case shown section evalu correspond number cach miss section synthes result show comput number cach miss loop a model cach behavior section techniqu use estim number interfer miss present though method appli type reus method illustr selfdepend tempor reus frequent type reus often like victim interfer extens groupdepend reus explain exampl analyz detail section figur c illustr respect cach posit differ array one iter loop j paper length constraint extens spatial reus discuss paper see though primari goal methodolog appli comput capac miss well interfer miss though interfer miss far complex evalu consequ analyt express total miss ratio given loop deriv illustr section compulsori miss easili estim basic concept evalu miss ratio loop nest amount count refer number cach miss due disrupt local exploit so refer necessari determin reus occur ie loop level reus occur first time consid loop a reus refer j j occur loop j reus refer zj j occur loop j reus loop defin set data reus refer j j set equal fy equal refer zj cach array j reus set j interfer set interfer set interfer set interfer set reus set figur notion interferencereus set similarli loop level also defin set data refer interfer reus set refer j j in terfer set fz j cach reus see figur refer interfer set fy consid refer iter reus loop number cach miss due disrupt reus refer equal size intersect in cach line reus set interfer set consid problem way implicitli make abstract time consider ie interfer occur problem equival comput intersect size sever set sum intersect iter reus loop provid total number cach interfer miss given refer next section provid formal treatment method reus set definit assum loop perfectli nest with j n innermost loop reus loop level l refer defin exampl consid loop a reus loop level reus set within set array element reus possibl two element map cach locat element altern flush cach reus therefor count within set element effect reus necessari distinguish theoret reus set actual reus set definit array refer reus loop l theoret reus set equal g definit actual reus set arsr cach footprint theoret reus set trsr exclud cach line map conflict occur definit ktrsrk size theoret reus set r express array line ie number cach line use trsr assum infinit cach size definit karsrk size actual reus set r express cach line exampl consid loop a reus set z base address array z lead dimens array xy z case array element n array line actual reus set equal cach line correspond cach locat g assum cach size array element element word cach line actual reus set z equal n cach line n equal gamma n cach line empti n note simpl depend consid instanc reus associ refer sider frequent found depend simpl one mention floor ceil function often omit paper experi show gener signific impact precis interfer set definit set array element interfer reus set similar definit reus set definit array refer interfer reus set defin loop level l theoret interfer set equal g opposit actual reus set two element theoret interfer set map cach line line still count actual interfer set definit actual interfer set aisr exactli cach footprint theoret interfer set tisr definit reus set ktisrk kaisrk denot respect size theoret actual interfer set r exampl consid loop a reus j occur loop j correspond interfer set defin loop j interfer set g case array element n ls array line assum cach size array element word element word cach line actual interfer set z equal n cach line n equal cach line n evalu actual set consid refer want comput cach footprint loop level l ie footprint defin loop observ iter loop data layout cach assum set interv cach locat character averag size interv averag distanc oe two consecut interv assert approximationwhich aim simplifi evalu process use observ recurs process appli loop level problem assum initi regular data layout interv size separ distanc oe cach locat a layout obtain iter loop problem determin final layout ie averag size averag distanc iter loop i section skip indepth comprehens comput sought for ie distanc two consecut interv approxim constant actual interfer set problem recurs process also ap pli let oe number iter interv wrap around cach area size oe within area oe cach locat layout interv ident so studi restrict one area within one area space two consecut interv equal oe us consid recurs applic process observ recurs level k size area consid equal oe kgamma space two consecut interv one area equal oe k recurs process stop level iter loop consid overlap occur ie oe s start point possibl determin footprint within area size oe sgamma assum layout across area footprint within whole cach proposit let oe oe c b oe oe area size oe sgamma n interv size brought remain r area n brought proposit let f x cach footprint size interv equal ii oe layout interv averag size interv equal ii oe oe space interv equal oe remark oe oe k comput priori cost one applic euclid algorithm practic fact also make process nonrecurs sinc level recurs stop determin beforehand process appli loop result layout cach actual interfer set refer defin loop l actual reus set reason nearli ident actual reus set except cach line overlap occur must exclud proposit number element reus equal ii oe oe exampl applic whole process found section note process inaccur as mention abov sever approxim made error becom signific multipl applic ie multipl loop level fortun reus set defin two loop level correspond deep loop nest reus occur third loop reus set algorithm need appli except access stride equal one reus set defin three loop less common primit real code less like exploit for instanc loop block rare perform two innermost loop assum reus loop level l refer r proposit number cach miss due selfinterfer r equal intuit cach line exclud actual reus set conflict gener one cach miss time reus set referenc henc proposit exampl consid loop a correspond multipl two n theta n submatric theta matric enddo enddo enddo loop a n execut time run second matrix dimens real est figur bexecut time cach array oe oe oe figur clayout cach figur selfinterfer sinc array reus amount compulsori miss neglig spatial interfer miss neglig small spatial reus distanc spatial reus distanc larg sinc refer account small share memori access impact spatial interfer miss signific refer memori access tempor reus distanc j one order magnitud larger intuit j like respons tempor interfer miss case loop miss sinc theoret interfer set size zj equal n element theoret reus set size j equal n element effect self interfer much signific cross interfer ie crossinterfer prevent reus n element selfinterfer prevent reus n element reus set j set n interv rel distanc oe spread within interv oe cation oe k valu obtain oe oe kgamma mod oe kgamma use techniqu section n comput tabl show valu main variabl differ valu figur b illustr model precis impact selfinterfer global perform seen interfer nearli total tempor reus cannot exploit spatial reus still exploit miss ratio close theoret minimum crossinterfer yield even lower miss ratio ns szar oe miss tabl exampl valu obtain crossinterfer consid reus set refer r reus occur loop l correspond interfer set refer r definit reus interfer set defin loop l cach posit defin lemma rel cach posit interfer set r respect reus set r equal rel distanc two set equal exampl consid loop a reus j occur loop j correspond interfer set zj defin loop j posit actual reus set j oearsi j posit actual interfer set zj intern crossinterfer definit ffi independ l crossinterfer r r call intern crossinterfer proposit crossinterfer r r intern crossinterfer size intersect aisr constant iter loop note actual correspond cach posit first element set number cach miss due crossinterfer equal proposit intersect two interv size separ distanc locat equal instanc set correspond collect interv in stead one singl interv interv reus set compar interv interfer set size intersect obtain sum subcas exampl enddo enddo loop a nm execut time run second figur b execut time cach array oe oe figur clayout cach figur intern crossinterfer consid loop a tempor interfer xa xb like account interfer c breed compulsori miss role array symmetr consid array xa reus set interv locat well correspond interfer set xb rel cach distanc two set accord proposit total number intern crossinterfer miss xa equal figur illustr model precis impact intern crossinterfer global perform seen execut time decreas ffi decreas two set overlap extern crossinterfer extern crossinterfer accur approxim evalu use tradeoff accuraci complex approxim evalu describ here accur evalu describ see also exampl consid below approxim let us assum ffi the distanc reus set r interfer set variabl uniform distribut interfer averag valu ffi henc proposit proposit approxim number cach miss due extern crossinterfer r r execut loop nest equal theta function defin section exampl consid loop a correspond multipl n theta n matrix vector x reg ajj xj enddo enddo loop a averag execut time per refer in figur bexecut time cach array oe oe figur clayout cach figur extern crossinterfer assum n c ie capac miss oc approxim number extern crossinterfer miss x due equal n theta theta seen figur time per refer increas n mostli tempor reus array x disrupt array a threshold valu reach tempor reus cannot exploit all extens groupdepend reus techniqu section extend groupdepend reus opposit self depend reus set defin two refer reus data r reus loop level simpli loop level reus occur reus set defin set element referenc r reus r consequ reus set interfer set defin whole execut one sever loop subset iter one sever loop main differ selfdepend reus set as well interfer set move iter reus loop consequ formal definit interfer set re quir element theoret reus set theoret interfer set equal element load cach two refer element definit appar depend element reus set gener element within reus set behav way surpris consequ internalcross interfer disrupt group depend reus boolean way either element reus set element reus set flush cach extern crossinterfer accur evalu difficult deriv approxim evalu still use comput one element reus set extend element reus set notion illustr exampl below exampl consid loop a group depend xj disrupt xy j assum lead dimen sion refer translat cross interfer intern crossinterfer reus set defin loop j correspond g element interfer set equal g ie rel distanc interfer set intern cross interfer occur while condit selfdepend reus intuit interfer set locat reus set go sweep away element reus set reus see figur c case intern crossinterfer occur group depend reus achiev phenomenon illustr figur n vari gamma enddo enddo loop a nn exactli element reus set flush interfer set cach locat use reus set may never use interfer set even though set move cach execut time run second figur bexecut time cach array oe oe figur clayout cach figur disrupt groupdepend reus comput total number miss previou section shown predict comput number cach miss due given type interfer though major issu anoth difficult problem combin result sever refer occur loop cumul interfer set possibl simpli add number cach miss correspond refer type interfer interfer redun dant consid exampl below enddo enddo array b induc extern cross interfer array rel cach distanc actual interfer set two array equal ffi ie two actual interfer set over lap time overlap reus set b redund impact cach miss count twice order avoid redund refer consid individu definit two refer r r belong translat group rel cach distanc r r constant actual interfer set translat group union actual interfer set refer within translat group interfer due singl refer consid anymor instead interfer due translat group consid ere notion use avoid redund estim crossinterfer note that gener translat group within loop bodi select proper depend consid follow exampl enddo enddo selfdepend xj group depend xj reus distanc groupdepend iter j much shorter selfdepend n iter j so element exclud x refer exploit groupdepend reus rather selfdepend therefor interfer groupdepend instead selfdepend must consid interfer evalu depend correspond smallest depend distanc gen eral array subscript simpl enough make task tractabl redund global redund avoid follow reason determin crossinterfer actual reus set instead theoret reus set avoid redund evalu selfinterfer cross interfer ffl determin intern crossinterfer evalu extern crossinterfer updat actual reus set avoid redund evalu intern crossinterfer extern cross interfer ffl redund within extern crossinterfer ignor prove neglig case assert illustr section global algorithm global algorithm comput number cach interfer miss follow cach miss due selfinterfer comput number set r remov element victim crossinterfer updat actual reus comput number cach miss due extern crossinterfer cach miss due intern crossinterfer comput number oe oe oe oe loop bodi oe depend distanc determin shortest determin reus set translat group actual reus set refer r determin interfer set actual interfer set translat group determin interfer set actual interfer set total number cumul deriv cach miss refer r put togeth section number cach miss loop comput base techniqu present section lead dimens array f u ku mention section one paramet ffi use character distanc differ array seen figur four interv di tinguish paper length constraint interv ku gamma consid here interv correspond complex case mani interfer phenomena occur time compulsori miss ffl number compulsori miss due array ldaldbld equal ku ls refer u k i u k j belong translat group potenti reus two refer ignor therefor consid refer breed compulsori miss ku ls u k i ju thetaku ls u k j f k i f k j ffl consequ total number compulsori miss equal intern crossinterfer selfdepend reus possibl though come exampl redund extern crossinterfer signific assumpt influenc complex comput ffl actual reus set ldak set ku ls consecut cach line refer ldbk ldsk u k i f k i belong translat group ldak actual interfer set u k i f k i overlap actual reus set ldak actual interfer set ldbk overlap actual reus set ldak impact ldsk redund ldbk see figur c actual interfer set size ldbk ldsk combin equal minkuffithetaku ls overlap ku gammaffi ls where actual reus set ldak therefor intern crossinterfer ldak induc cach miss ffl ldak intern crossinterfer ls cach miss ffl ldbk actual interfer set size combin equal minkuffithetaku ls overlap thetaku gammaffi ls actual reus set ldbk therefor intern crossinterfer ldbk induc ju ls cach miss ffl actual interfer set f k i overlap ffi cach line actual reus set u k i so ju thetaku gammaffi ls cach miss due intern cross interfer u k i role u k i f k i symmetr therefor ju thetaku gammaffi ls cach miss due intern crossinterfer f k i so total number intern crossinterfer correspond selfdepend reus disrupt equal intern crossinterfer groupdepend reus consid groupdepend u k j u actual reus set u locat u lead dimens u ku actual interfer set correspond f k j start f f k inequ equival satisfi hypothes so intern crossinterfer groupdepend reus u k mention section interfer boolean none sake clariti rel distanc u lda chosen intern crossinterfer occur uk i f k i ldak ldbkldsk howev crossinterfer would difficult comput one studi paragraph ku gamma element reus set reus condit interfer occur satisfi groupdepend u consequ number cach miss due intern crossinterfer groupdepend reus equal extern crossinterfer ffl extern cross interfer groupdepend reus u due ldak ldbk ldsk f k i u k i neglig ignor ffl extern crossinterfer ldak ldbk ldsk f k i u k i due u k j f k estim updat actual reus set actual interfer set size correspond translat group u k j u k j u k j f k j equal theta ku the impact f k j redund then use function f defin section total number extern crossinterfer equal theta f total number cach miss precis evalu illustr figur b conclus futur direct main outcom work show comput number cach miss due interfer phenomena tractabl task methodolog present perform it outcom paper show interfer phenomena occur frequent intens compil need address issu cach interfer optim code reduc capac miss suffici first applic work integr miss ratio evalu techniqu compil perform evalu predict purpos implement would fulli valid possibl automat comput number cach miss would also enhanc model unveil potenti issu would show theoret studi second applic refin data local optim techniqu mainli accur evalu optim block size peak occur correspond pingpong phenomena spatial reus disrupt see section discuss here simpli identifi check rel posit differ array r supercomput perform evalu perfect benchmark strategi array manag local memori estim enhanc cach effect extend ab stract accur evalu block algorithm cach interfer comput ar chitectur quantit approach aspect cach memori instruct buffer perform cach perform block algorithm automat interact paral leliz site editor alpha architectur refer man ual cach memori cach interfer phenomena impact cach interfer usual numer dens loop nest copi copi compiletim techniqu assess data copi use elimin cach conflict data local optim algorithm empir studi array subscript data dependend tr comput architectur quantit approach data local optim algorithm mip risc architectur alpha architectur refer manual automat interact parallel copi copi supercomput perform evalu perfect benchmark cach memori concret math estim enhanc cach effect aspect cach memori instruct buffer perform ctr b b fraguela r doallo j tourio e l zapata compil tool predict memori hierarchi perform scientif code parallel comput v n p februari basilio b fraguela ramn doallo emilio l zapata probabilist miss equat evalu memori hierarchi perform ieee transact comput v n p march van der deijl gerco kanbier olivi temam elena d granston cach visual tool comput v n p juli basilio b fraguela ramn doallo emilio l zapata model set associ cach behavior irregular comput acm sigmetr perform evalu review v n p june d andrad b b fraguela r doallo analyt model code arbitrari datadepend condit structur journal system architectur euromicro journal v n p juli j s hu m kandemir n vijaykrishnan m j irwin h saputra w zhang compilerdirect cach polymorph acm sigplan notic v n juli christin fricker olivi temam william jalbi influenc crossinterfer block loop case studi matrixvector multipli acm transact program languag system topla v n p juli john s harper darren j kerbyson graham r nudd analyt model setassoci cach behavior ieee transact comput v n p octob somnath ghosh margaret martonosi sharad malik cach miss equat analyt represent cach miss proceed th intern confer supercomput p juli vienna austria min zhao bruce childer mari lou soffa predict impact optim embed system acm sigplan notic v n juli richard e ladner jame d fix anthoni lamarca cach perform analysi travers random access proceed tenth annual acmsiam symposium discret algorithm p januari baltimor maryland unit state apan qasem ken kennedi profit loop fusion tile use modeldriven empir search proceed th annual intern confer supercomput june juli cairn queensland australia gabriel rivera chauwen tseng data transform elimin conflict miss acm sigplan notic v n p may j hu m kandemir n vijaykrishnan m j irwin analyz data reus cach reconfigur acm transact embed comput system tec v n p novemb somnath ghosh margaret martonosi sharad malik autom cach optim use cme driven diagnosi proceed th intern confer supercomput p may santa fe new mexico unit state somnath ghosh margaret martonosi sharad malik precis miss analysi program transform cach arbitrari associ acm sigop oper system review v n p dec gayathri venkataraman sartaj sahni srabani mukhopadhyaya block allpair shortestpath algorithm journal experiment algorithm jea gabriel rivera chauwen tseng elimin conflict miss high perform architectur proceed th intern confer supercomput p juli melbourn australia i kadayif m kandemir n vijaykrishnan m j irwin j ramanujam morphabl cach architectur potenti benefit acm sigplan notic v n p aug gabriel rivera chauwen tseng local optim multilevel cach proceed acmiee confer supercomput cdrom pe novemb portland oregon unit state a ya kalinov a l lastovetski i n ledovskikh m a posypkin compil vector statement c languag architectur multilevel memori hierarchi program comput softwar v n p mayjun alexandr farci olivi temam improv singleprocess perform multithread processor proceed th intern confer supercomput p may philadelphia pennsylvania unit state gabriel rivera chauwen tseng tile optim scientif comput proceed acmiee confer supercomput cdrom pe novemb dalla texa unit state lakshminarayanan renganarayana sanjay rajopadhy geometr program framework optim multilevel tile proceed acmiee confer supercomput p novemb somnath ghosh margaret martonosi sharad malik cach miss equat compil framework analyz tune memori behavior acm transact program languag system topla v n p juli chunghs hsu ulrich kremer quantit analysi tile size select algorithm journal supercomput v n p march anthoni lamarca richard ladner influenc cach perform heap journal experiment algorithm jea pe kathryn s mckinley olivi temam quantit analysi loop nest local acm sigplan notic v n p sept han vandierendonck koen de bosscher highli accur effici evalu randomis set index function journal system architectur euromicro journal v n p may xavier vera nerina bermudo josep llosa antonio gonzlez fast accur framework analyz optim cach memori behavior acm transact program languag system topla v n p march johann blieberg thoma fahring bernhard scholz symbol cach analysi realtim system realtim system v n p may jingl xue xavier vera effici accur analyt model wholeprogram data cach behavior ieee transact comput v n p may ismail kadayif mahmut kandemir quasidynam layout optim improv data local ieee transact parallel distribut system v n p novemb zhiyuan li yonghong song automat tile iter stencil loop acm transact program languag system topla v n p novemb