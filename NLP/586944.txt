t determin weight finit automata a studi problem construct determinist equival nondeterminist weight finitest automaton wfa determin wfa import applic automat speech recognit asr provid first polynomialtim algorithm test twin properti determin wfa admit determinist equival also give upper bound size determinist equival bound tight case acycl wfa previous mohri present superpolynomialtim algorithm test twin properti also gave algorithm determin wfa show latter run time linear size output determinist equival exist otherwis termin bound impli upper bound run time algorithmgiven wfa expand exponenti size determin explor occur asr tend shrink determin accord asr folklor phenomenon attribut sole fact asr wfa simpl topolog particular acycl layer introduc simpl class wfa structur show expans determin depend transit weight weight caus shrink other includ random weight caus expand exponenti provid experiment evid asr wfa exhibit weight depend shrink determin therefor result favor weight addit special topolog analys observ use design new approxim wfa determin algorithm report separ paper along experiment result show achiev signific wfa size reduct neglig impact asr perform b introduct finitest machin relat ration function power seri extens studi wide appli field rang imag compress natur languag process subclass finitest machin weight finitest automata wfa recent assum new import wfa provid power method manipul model human languag automat speech recognit asr system new research direct also rais number challeng algorithm question weight finitest automaton wfa nondeterminist finit automaton nfa a alphabet symbol weight set k transit semir togeth r gener partial function string k valu accept string semir sum accept path semir product weight along accept path partial function ration power seri import exampl asr set wfa minsum semir comput accept string minimum cost accept path paper studi problem relat determin wfa deter minist sequenti wfa one transit given input symbol state ration power seri gener determinist wfa determin algorithm take input wfa produc determinist wfa gener ration power seri one exist import determin asr well establish far know mohri present first determin procedur wfa extend semin idea choffrut weber klemm regard stringtostr transduc mohri give determin procedur three phase first convert equival unambigu trim wfa use algorithm analog one nfa unambigu trim defin below mohri give algorithm tt determin twin properti also defin below twin properti determinist equival a twin properti second algorithm mohri dta appli yield determinist equival a algorithm tt run om n number transit n number state algorithm run time linear size mohri observ exponenti larger a wfa includ classic nfa give upper bound worstcas statespac expans howev due weight classic nfa upper bound appli final mohri give algorithm take determinist wfa output minimums equival determinist wfa paper present sever result relat determin wfa section give first polynomialtim algorithm test whether unambigu wfa satisfi twin properti run om n time provid worstcas time complex analysi dta number state output determinist wfa n lg nn lg jsigmaj sigma input alphabet weight ration bound becom n lg nminn lg jsigmaja ae maximum bitsiz weight input wfa acycl bound becom tight up constant factor alphabet size section studi question motiv use wfa determin asr although determin caus exponenti statespac expans worst case asr system determin wfa often smaller input wfa fortuit perform asr system depend directli wfa size studi size reduct occur folklor explan within asr commun credit special topologyth underli direct graph ignor weightsfor phenomenon asr wfa tend multipartit acycl wfa alway admit determinist equival section exhibit multipartit acycl wfa whose minimum equival determinist wfa exponenti larger section studi class wfa rg simpl multipartit acycl topolog absenc weight determinist equival smaller show rg n exist assign weight minim equival determinist wfa state use idea univers hash show similar result hold weight random ibit number call wfa weightdepend expans determin strongli determin weight examin experiment effect vari weight actual wfa asr applic section give result experi asr exampl weightdepend experiment result togeth theori develop show folklor explan insuffici asr wfa shrink determin topolog weight tend favor result help explain natur wfa algorithm point view ie weight assign transit wfa affect perform algorithm manipul it other relat directli theori weight automata definit terminolog given semir k weight finit automaton wfa tupl set state q q initi state sigma set symbol ffi q theta sigma theta k theta q set transit q f q set final state assum throughout jsigma j determinist sequenti wfa one transit wfa multipl transit pair q oe differ target state q problem examin paper motiv primarili asr applic work minsum semir furthermor algorithm consid use subtract minsum semir admit thu limit discuss minsum semir consid sequenc transit induc string string w accept q q q accept g accept w let ct weight weight w set sequenc transit accept string w weight w weight languag g set weight string accept g accept gg intuit weight transit g seen confid one take transit weight need not howev satisfi stochast constraint probabilist automata introduc rabin fix two state q q string v sigma cq v q minimum taken transit sequenc q q gener v refer cq v q optim cost gener v q q gener abus notat ffiq w repres set state reachabl state q q string w sigma extend function ffi string usual way q mean sequenc transit q q gener v topolog g topg project qthetasigma thetaq ffi ie transit g without respect weight also refer topg graph underli g wfa trim everi state appear accept path string transit weight minsum semir wfa unambigu exactli one accept path accept string determin g problem comput determinist wfa g g exist denot output algorithm dta dtag denot minim determinist wfa accept lg ming one exist say g expand dtag state andor transit g let size g n m assum transit label exactli one symbol jsigma j m recal weight g nonneg real number let c maximum weight gener case weight incommensur real number requir infinit precis integ case weight repres bit denot integr rang a b a b z integ case extend case weight ration requir ae bit assum integ ration case weight normal remov excess leastsignific zero bit analys use ram model comput follow gener case charg constant time arithmeticlog oper involv weight which real number refer model ram relev paramet analys n m jsigma j integ case also use ram except arithmeticlog oper take oae time refer model coram relev paramet analys n m jsigma j ae determin wfa algorithm test twin properti definit two state q q wfa g twin u v sigma q ffi follow hold cq v twin properti pair q q q twin is state q q reachabl q common string q q twin string induc cycl induc cycl equal optim cost note two state cycl common string twin g trim unambigu wfa g twin properti u v sigma juvj n follow hold exist two state q q i fq q g ffi q u ii q ffiq v must follow analog state choffrut in differ term weber klemm identifi necessari suffici condit stringtostr transduc admit sequenti transduc realiz ration transduct proof techniqu use wfa differ use obtain analog result stringtostr transduc howev particular effici algorithm deriv test wfa twin relat weber klemm test twin stringtostr transduc defin qq multipartit acycl label weight graph n layer follow root vertex compris layer zero correspond q q given vertic layer gamma obtain vertic layer follow let u vertex layer correspond q connect u correspond q layer two distinct transit g arc connect u u label sigma cost qq n let q q vertex correspond q q layer qq ani let set pair distinct state g reachabl q qq q q analog qq fix two distinct state q q g let q q occurr q q qq exclud q q sequenc may empti symmetr sequenc extract q q refer sequenc common cycl sequenc q q say q q satisfi local twin properti a common cycl sequenc empti b zero cost ani shortest path q q q q q lemma let g trim unambigu wfa g satisfi twin properti i rt empti ii q q local twin properti proof sketch outlin proof suffici condit nontrivi case state rt satisfi local twin properti common cycl sequenc empti let rt set assum g satisfi twin properti deriv contradict sinc rt empti set pair state i ii satisfi lemma empti sinc g satisfi twin properti must exist two state q q string i q q reach initi state g string u ii q ffiq v q loss gener assum now one show q q use fact g unambigu one show exactli one path qq root q q jvj cost local twin properti test whether trim unambigu wfa twin properti first comput qq set rt pair state q q yet process need comput qq q q respect shortest path tree theorem let g trim unambigu wfa gener case whether g satisfi twin properti check om use ram integ case bound becom oaem use coram section describ algorithm give upper bound size determinist machin produc algorithm result section show upper bound tight within polynomi factor given wfa gener classic powerset construct construct determinist wfa g follow start state g fq g form initi queue p p pop state p q g r valu encod pathlength infor mation follow oe sigma let fq g set state reachabl oetransit q minimum weight oetransit q j q plu respect g let q m add transit q oe ae q g push q onto p q new oetransit state q g determinist let tg w set sequenc transit g accept string w sigma let g w one sequenc transit g accept string mohri show ct g let set sequenc transit g state q state q induc string w again let g w one sequenc transit g induc string g w end state fq show ct g thu r remaind encod differ weight shortest path state induc w g weight path induc w g henc least one remaind state must zero analyz first bound number state dtag denot dtag theorem wfa g twin properti gener case integ or ration case dtag n lg jsigmaj g acycl independ assumpt weight acycl bound tight up constant factor alphabet proof sketch let r set remaind dtag let r set remaind r follow hold w sigma jwj two state q q j twin properti impli r r worst case istat tupl g appear dtag j itupl remaind assum thi count includ tupl without zero remaind therefor dtag gener case string length n reach pair not necessarili distinct state g therefor jrj integ case remaind r n acycl case dtag bound number string weight languag accept g bound jsigma j n discuss tight section process tupl stateremaind gener time exclud cost arithmet min oper yield follow theorem let g wfa satisfi twin properti gener case take ojsigmajn ram ration or integ case co ram acycl case take ojsigmajn m n lg jsigmaj time ram oaejsigmajn m n lg jsigmaj time coram use result gener hard instanc determin algorithm reweight function or simpli reweight f that appli wfa g preserv topolog g possibl chang weight want determin reweight f minfg exist jminfgj maxim among reweight minfg exist restrict attent integ case and without loss gener assum g trim unambigu theorem show weight affect growth dtag must ae n lg jsigma j set ae find requir reweight ing simpli consid possibl reweight g satisfi twin properti requir ae max bit ae possibl reweight take on lg nn lg jsigmaj time comput expans decid result machin cannot determin bound total time hot automata section provid famili acycl multipartit wfa hot de termin expand independ weight transit given alphabet g consid languag ie set nlength string includ symbol sigma simpl obtain acycl multipartit nfa h polyn size accept l hard show minim dfa accept l theta nlg n state furthermor construct h bound hold binari alphabet h correspond wfa arc weight ident sinc acycl wfa satisfi twin properti alway determin alter weight increas expans kintala wotschk provid set nfa produc hierarchi expans factor determin provid addit exampl hot wfa weightdepend automata section studi simpl famili wfa multipartit acycl topolog examin variou reweight affect size determin equival famili shrink without weight expans due weight studi relat spirit previou work measur nondetermin finit automata here howev nondetermin encod weight first discuss case binari alphabet gener arbitrari alphabet rail graph denot rgk klayer rail graph rgk k g arc see fig rgk partit also fix in outdegre consid string induc path either k b k languag rgk set string lrg nondeterminist choic state either top bottom rail may select henc string w accept one two path one follow top rail bottom rail fig topolog klayer rail graph technic rgk ambigu disambigu rgk ad transit k b k distinct symbol new final state result extend case clariti present discuss ambigu rail graph rail graph weightdepend section provid weight produc kvertex trivial seriesparallel graph graph k vertic transit symbol vertic i k hand section exhibit weight rail graph caus dta produc exponenti statespac expans also explor relationship magnitud weight amount expans possibl section show random weight induc behavior worstcas weight final section gener rail graph arbitrari alphabet weight rgk consid determin rgk dta set state reachabl string g given weight function c let c w denot cost accept string w top path taken ie c analog defin c b w correspond cost along bottom path let rw remaind vector w pair form c b state layer determin wfa label ft string w lead state thu two string w w ident length lead distinct state determin version rail graph rw conveni simpli write w sign rw determin two form x x remaind vector occur denot weight top rsp bottom arc label oe vertex theorem reweight f consist seriesparallel graph proof f suffic sinc case rw g particular give zero weight suffic worstcas weight rgk theorem j k z reweight f layer j dtafrgk form complet binari tree vertic proof sketch choos weight consid pair string w ident length w w weight ensur rw theorem j k z reweight f layer complet binari tree vertic theorem gener theorem show weightdepend artifact dta acycl bound theorem tight binari alphabet address sensit size expans magnitud weight argu exponenti statespac expans requir exponenti big weight rail graph thi mean size expans exponenti number state superpolynomi number bit theorem let f reweight jdtafrgkj requir encod frgk proof sketch must beomega remaind among state depth k determin wfa necessitatingomega distinct permut k bit among them thusomega k weight must similarli highord bit set corollari let f reweight jminfrgkj requir encod frgk random weight rgk theorem let g rgk weight number chosen independ uniformli random denot expect valu random variabl x theorem let g rgk weight logarithm number chosen independ uniformli random proof theorem use observ random function defin rg essenti univers hash function bound suffici low probabl remaind two distinct string equal theorem motiv fact weight asr wfa negat log probabl extend rgk arbitrari alphabet extend rail graph arbitrari alphabet defin rgr k klayer r rail graph follow rgr assum alphabet subgraph induc vertex vertic v compris rail rgr k subgraph induc vertic j compris layer j rgr k vertex compris layer rgr k thu rg k klayer rail graph rgk defin section let ci j s weight arc label vertex v theorem gener easili klayer rrail graph theorem gener rgr follow show acycl bound theorem tight arbitrari alphabet theorem j k z reweight f layer complet rari tree r j gamma vertic proof sketch choos follow weight set ci given two string w w jw j show w w must lead differ vertic determinist realiz d rgr k assum w w lead vertex d let c w cost string w d given suffix length k gamma show cw c w right hand side fix valu delta consid posit w w differ denot ith symbol string w wi consid two suffix length i observ given weight rgr forc minimum cost path string symbol oe posit j follow rail rgammao thu use show cw experiment observ asr wfa determin whether asr wfa manifest weight depend experi wfa gener att speech recogn use grammar air travel inform system ati standard test bed transit label word weight recogn negat log probabl realiz transit sourc state refer weight speech weight determin wfa speech weight zero weight weight assign independ uniformli random gamma z for could determin speech weight due comput limit omit data figur a show mani wfa expand determin differ weight figur b classifi wfa expand least one weight ing wfa took weight produc maxim expans usual bit random weight although due comput limit unabl determin wfa larg random weight xaxi indic open interv within valu lgjdtagjjgj fall util determin asr includ reduct size achiev actual speech weight sampl wfa shrank determin each comput valu lgjgjjdtagj plot result fig c fig d examin relationship valu lgjdtagjjgj number bit use random weight chose ten wfa highest final expans valu plot lgjdtagjjgj number bit use refer function plot number bit speech zerosbit rndbit rndbit rndbit rndbit rndbit rndbit rndbit rnd type weight number wfa expand a log base expans factor number wfa b log base shrinkag number wfa c number random bitslog expans factor qv d fig observ asr wfa wfa exhibit subexponenti growth number bit increas although some like qt increas time even four random bit wfa could determin speech weight slightli hot determin zeroweight variant arc origin wfa remain ninetynin wfa shrank zero weight none hot one expand due weight rather topolog figur a indic mani wfa degre weight depend figur d suggest random weight good way estim degre wfa weight depend note expans factor superlin possibl exponenti function number random bit suggest larg eg bit random weight caus expans anyth will analog experi minim determin wfa yield result qualit same although fewer wfa still expand minim henc weight depend seem fundament properti wfa rather artifact dta acknowledg thank mehryar mohri fernando pereira antonio restivo fruit discuss r network flow theori ration seri languag algorithm aspect speech recognit intro duction univers class hash function une caracteris de fonction sequentiel et de fonction sou sequentiel en tant que relat rationnel finit automata comput real function comput power weight finit automata measur nondetermin regular languag arithmet code weight finit automata amount nondetermin finit automata use sequenti transduc natur languag process speech recognit composit weight finit automata weight ration transduct applic human languag process comput geometri introduct probabilist automata att analys syntaxiqu transformationel du francai par transducteur et lexiqu grammair economi descript singlevalu transduc tr ctr mark g eramian effici simul nondeterminist weight finit automata journal automata languag combinator v n p septemb bjrn borchardt pump lemma decid problem recogniz tree seri acta cybernetica v n p julien quint equival weight finitest transduc proceed acl interact poster demonstr session pe juli barcelona spain manfr drost dietrich kusk skew infinitari formal power seri theoret comput scienc v n p novemb bjrn borchardt heiko vogler determin finit state weight tree automata journal automata languag combinator v n p manfr drost paul gastin weight automata weight logic theoret comput scienc v n p june cyril allauzen mehryar mohri effici algorithm test twin properti journal automata languag combinator v n p april ine klimann sylvain lombardi jean mairess christoph prieur decid unambigu sequenti finit ambigu maxplu automaton theoret comput scienc v n p novemb sylvain lombardi jacqu sakarovitch sequenti theoret comput scienc v n p may manfr drost heiko vogler weight tree automata weight logic theoret comput scienc v n p novemb