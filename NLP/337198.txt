t softwar evolut componentwar use requirementsassur contract a practic pure topdown refinementbas develop process suffici usual iter increment approach appli instead exist methodolog howev support evolutionari develop process well paper present basic concept overal methodolog base compon ware softwar evolut foundat methodolog novel wellfound model componentbas system model suffici power handl fundament structur behavior aspect compon ware objectorient base model abl provid clear definit softwar evolut stepdur develop evolut step impli chang appropri set develop document order model track depend document introduc concept requirementsassur contract contract recheck whenev specif compon evolv enabl us determin impact respect evolut step base propos approach develop abl track manag softwar evolut process recogn avoid failur due softwar evolut short exampl show use present concept introduc practic descript techniqu requirementsassur contract b introduct today softwar engin methodolog paper origin research project method componentbas softwar engin chair prof dr manfr broy institut fur informatik technisch universitat munchen part bayerisch forschungsverbund softwareengin forsoft support siemen ag depart zt base topdown develop process eg object model techniqu omt objectori process ration uni process rup methodolog share common basic idea system develop model system built stepwis rene renement step add addit properti desir system model last model sucient ne consist correct represent system consider may implement programm even partli gener sure process support local iter instanc rup allow iter analysi design implement howev overal process still base renement step improv specic model nalli end desir system formal approach like room focu concept renement even strict kind process model involv sever draw back initi custom often know relev requir cannot state adequ even state inconsist requir consequ mani deliv system meet custom ex pectat addit topdown develop lead system brittl respect chang requir system architectur involv compon specic adjust initi set requir sharp contrast idea build system truli reusabl com ponent process take alreadi exist compon account beyond thi softwar mainten lifecycl support extrem critic as instanc nowaday mainten take percent budget europ compani averag percent user requir obsolet within one year howev softwar evolut basic concept current well support opinion partli due lack suitabl overal componentwar methodolog respect softwar evolut methodolog least incorpor follow part common system model provid well dene conceptu framework componentwar softwar evolut requir reliabl foundat base system model set descript techniqu componentwar need develop need model document evolut singl compon whole system develop organ accord softwar evolut process includ guidelin usag descript techniqu well reason evolut step minim cost softwar evolut system base evolutionresist ar chitectur architectur contain common basic infrastructur compon like dcom corba java enterpris bean even import businessori standard architectur evolut resist last former aspect support tool contribut work seen two differ perspect viewpoint specica tion method constitut sophist basic system model solid foundat new techniqu area softwar architectur componentwar objectorient softwar engin per spectiv provid clear understand softwar evolut step evolutionari develop process moreov oer new descript techniqu call requirementsassur contract contract recheck whenev specic compon evolv allow us determin impact respect evolutionari step paper structur follow section provid basic denit model dynam componentbas system next section section specifi observ behavior entir componentbas system base former denit section provid composit techniqu enabl us determin behavior system behavior compon section complet formal model simpl concept type type describ develop document section introduc view develop document evolut step document section present concept requirementsassur contract model explicitli depend develop document section provid small exampl show use propos concept case softwar evolut short conclus end paper section elabor basic concept notion formal model componentbas system system model incorpor two level instancelevel repres individu oper unit componentbas system determin overal be havior distinguish compon interfac connect variabl instanc dene number relat condit model properti instanc typelevel contain normal abstract descript subset common instanc similar properti although model componentbas objectori system exist need improv evolutionari approach formal model like instanc focu tempor logic strongli connect renement concept cf section furthermor method contain well elabor type concept sophist descript techniqu need discuss issu softwar evolut as case evolut type descript usual evolv moreov practic formal method applic sinc formal model abstract provid realist view today componentbas system architectur descript languag like mil rapid aesop unicon other less formal approach summar introduc concept compon commun via connec tor consid behaviorrel aspect compon system componentbas system behavior limit commun pair compon also includ chang overal connect structur creation destruct instanc even introduct new type runtim context componentwar softwar evolut aspect essenti dynam chang system may happen construct designtim well execut runtim either control system initi human develop approach like prepost specic cannot specifi mandatori extern call compon must make restrict also appli meyer design contract java model languag jml although especi target componentbas develop int string int figur compon system behavior aspect reason elabor novel realist model claim present formal model power enough handl dicult aspect componentbas system cf figur dynam chang structur share global state last mandatori callback thu separ behavior componentbas system three essenti part structur behavior captur chang system structur includ creation delet instanc chang connect well aggreg structur variabl valuat repres local global data space system enabl us model share global state compon commun describ messagebas asynchron interact compo nent thu specifi mandatori callback without problem follow section rst come de nition three separ aspect behavior componentbas system compon basic build block componentbas system compon possess set local attribut set subcompon set interfac interfac may connect interfac via connect runtim basic build block creat delet order uniqu address basic element componentbas system introduc disjoint set variabl id figur show componentbas system may chang structur dynam basic element may creat delet aliv new interfac may assign compon assign interfac may connect deconnect interfac connect new subcompon may aggreg exist parentcompon parent follow denit cover structur behavior componentbas system note approach strong enough handl dynam chang connect structur system also mobil system as instanc cover mobil compon migrat one parent compon anoth parent usual state space componentbas system determin current structur also valu compon attribut cf figur valu set possibl valuat attribut paramet denot essenc map variabl attribut param ter etc valu appropri type valuat variabl belong compon character state compon alloc follow denit cover variabl valuat componentbas system later allow compon chang valu compon variabl cf section thu model share global state wellknown objectori system note elabor underli type system variabl valu here assum appropri one given compon commun base exist formal system model eg focu sequenc messag repres fundament unit commun order model messagebas commun denot set possibl messag m set arbitrari nite messag sequenc within time interv compon resp interfac receiv messag sequenc arriv interfac resp connect send messag sequenc respect environ given follow denit cf figur use messagebas commun asyn chronou like corba oneway call henc callback base asynchron oneway call explicitli speci within model one cannot model normal block callback usual objectori program languag howev observ show callback need block call often callback use make system extens layer system architectur occur call lower higher layer known upcal upcal usual realiz asynchron event cf layer pattern anoth repres applic callback asynchron event observ pattern observ may noti via asynchron event observ object chang sum up believ callback support model power enough model real componentbas system assumpt middlewar support asynchron messag exchang avail system snapshot base former denit abl character snapshot componentbas system snapshot captur current structur variabl val uation actual receiv messag let snapshot denot type possibl system snapshot connect parent alloc valuat evalu let system denot innit set possibl sy tem given snapshot snapshot snapshot system system tupl captur current activ set compon interfac connect remaind paper use shortcut whenev want assign relat x system system compon c compon say x variabl current assign interfac compon current connect structur interfac current supersubcompon relat ship current assign variabl compon current valu compon nalli current messag compon similar relat approach regard time innit chain time interv equal length use n abstract time axi denot clar iti furthermor assum time synchron model result simplic gener mean global time scale valid part model system use time stream ie nite innit sequenc element given do main repres histori conceptu entiti chang time time stream more precis stream discret time element set x element type nnfg thu time stream map time interv element x notat x use denot element valuat x x stream may use model behavior sy tem accordingli snapshot type system snapshot histori simpli type behavior relat possibl system connect parent alloc valuat evalu let snapshot snapshot behavior sy tem given snapshot histori snapshot snapshot time stream tupl captur chang snapshot snapshot obvious coupl consist condit dene formal behavior specic snapshot instanc may requir assign interfac assign activ compon assign aliv furthermor compon may connect via interfac one compon parent compon parent compon connect interfac compon also valid connect assign parent parent b imagin almost innit set consist condit full treatment beyond scope paper result formula rather lengthi deeper discuss issu found previou section present observ behavior componentbas system behavior result composit compon behavior show coher rst provid behavior descript singl compon practic transitionrel adequ behavior descript techniqu formal model use novel kind transitionrel contrast nor predecessor state successor stateth present transit relat relat certain part systemwid predecessor state certain part wish systemwid successor state let behavior c behavior behavior compon compon inform mean tupl behavior c is speci part systemwid predecessor state ts given rst snapshot compon want system systemwid successorst next step given second snapshot consequ need special runtim system collect time step compon wish successor state compos new wellden successor state whole system main goal runtim system determin system snapshot snapshot t snapshot snapshot set behavior relat behavior c compon essenc provid formula calcul system behavior initi congur snapshot behavior relat behavior c extern stimul via messag free inter interfac connect interfac thu stimul environ first calcul transitiontupl activ compon behavior aliv true behavior c now calcul transitiontupl activ compon actual system state let transit set transitiontupl could re transit come nal formula calcul system snapshot snapshot t need new oper relat oper take relat x replac tupl x tupl rst element tupl equal last abl provid complet formula determin system snapshot snapshot t snapshot t aliv t assign t connect t parent t alloc t aliv t aliv assign t assign connect t connect parent t parent alloc t alloc valuat t evalu t evalu intuit spoken next system snapshot snapshot t tupl element tupl instanc aliv t function determin simpli merg former function aliv deltafunct transit deltafunct includ wish transitionrel re basic concept relat cover previou section provid mathemat denit constitu componentbas system runtim howev order present adequ model use practic de velop introduc concept type connect type variabl type type innit set type type model common properti set instanc abstract way ty pe assign instanc compon inter face connect variabl correspond type let predic innit set predic might ever exist predic boolean expr sion type function instanc type boolean instanc compon behavior c predic type c one simplest predic imagin provid direct map typelevel instancelevel predic true arbitrari transit part compon behavior now dene function provid abstract descript exist type standard notat denot set mtupl result project relat r ariti r onto compon pa denot powerset set a softwar evolut usual develop system variou develop document creat develop document concret descript contrast abstract descript link type discuss last section develop document separ unit describ certain aspect of view system develop componentwar typic follow kind document structur document describ intern structur system compon structur compon consist subcompon connect subcompon supercompon eg aggreg inherit uml class diagram architectur descript languag interfac document describ interfac compon current interfac descript eg corba idl allow one specifi syntax compon interfac enhanc descript also captur behavior aspect use pre postcondit eg eiel java model languag protocol document describ interact set compon typic interact messag exchang call hierarchi dynam chang connect structur exampl protocol descript are sequenc diagram uml extend event trace interact interfac implement document describ implement compon program code popular kind descript also use automaton like kind greybox specic especi componentwar implement compon recurs describ set structur in terfac protocol implement document develop describ systemor exactli type systembi set docu ment let doc innit set possibl doc ument type componentbas system describ set develop document semant given set develop document simpli map set document set predic thu dene semant function assign given set document set properti character system semant map concret descript system doc doc set predic correct predic equal predic abstract descript type for malli semant map correct follow document sem doc sem doc s figur softwar evolut system develop condit hold sem describ descript t alreadi discuss section abil softwar evolv control manner one critic area softwar engin develop need support evolutionari approach base semant function sem abl formul concept evolut step figur show three typic evolut step system develop evolut step sens caus chang set develop document within certain time step given function type evolv call evolut step set document doc renement condit sem evolv doc abstract condit sem doc sem evolv doc strict evolut condit sem doc sem evolv doc sem evolv doc sem doc sem evolvedoc total chang condit sem doc sem evolv doc hold obvious pay attent strict evolut remain paper use evolut strict evolut synonym unless explicitli distinguish variou kind evolut step detail discuss dierenc evolut renement step found contract document chang via evolut step consequ document reli evolv document clear all normal develop caus evolut step check whether document still correct not concret depend document explicitli formul develop usual go detail concern document reason claim evolutionbas methodolog must abl model track depend variou develop document reach goal make depend develop document explicit cur rentli descript techniqu program languag depend dierent document model extrem rudimentari fashion instanc uml design specifi relat use document java programm use import statement specifi one document reli anoth sure sophist specic techniqu ex ist eg evolv interoper graph reus contract interact contract evolv interoper graph provid framework chang propag singl class chang graph take account syntact interfac class static structur class hierarchi system behavior depend reus contract address problem chang implement stabl abstract specic there evolut con ict scope inherit di cuss con ict compon collabor might help predict consequ evolv singl compon eect compon entir system clear all final interact contract use specifi collabor object although basic idea interact contractsto specifi behavior depend objectsseem quit good suggest approach take neither evolut componentwar sucient account interact contract strongli coupl behavior specic compon seen island behavior depend compon henc impact evolutionari step determin contract b contract contract b contract assur requir figur requirementsassur contract develop document compon type avoid drawback support evolut base develop process best propos decoupl compon island specic behavior depend specic follow two type function allow us determin behavior specic singl compon seen island intuit function requir requir calcul given set document doc pdoc set predic compon type ct compon type expect environ function assur assur calcul set predic compon type provid environ need special descript techniqu model requir assur properti certain compon explicitli within develop document descript techniqu must strongli structur least two addit part captur set requir assur properti cf figur requir requir part design specifi properti compon need environ assur assur part design describ properti compon assur environ assum requir fulll addit aspect speci formal given function requir assur design explicitli state behavior depend compon specifi compon assur guarante requir call explicit formul depend requir mentsassur contract racontract figur illustr usag contract three develop document includ addit requir white bubbl assur black bubbl part develop explicitli model depend compon racontract shown doubl arrow line formal racontract map requir properti compon assur properti compon given contract contract contract predic fulfil fulfil hold requir properti compon assur properti compon fulfil ctrequir ctdescrib ct ctdescrib ctg xdescrib xg case softwar evolut design tool recheck whether requir compon reli assur evolv compon still guarante formal tool recheck whether predic fulfil ctrequir ctevolv describ ct still hold instanc figur compon c chang time design valid whether contract b still hold exactli check whether requir compon c still satis assur compon not advantag racontract come fulli valid adequ descript techniqu specifi requir assur compon within develop document next section provid small sampl includ simpl descript techniqu prove use racontract illustr practic relev propos ra contract want discuss short exampl consid window help screen shown figur contain two compon text box list box control element content text box restrict present help topic list box whenev user chang content text boxsimpli ad singl characterth new select help topic immedi present list box compon helptext compon helplist figur short sampl window help screen simpl implement help screen may contain two compon helptext helplist collabor two compon usual follow observ pattern case ob servabl compon helptext chang part state observ compon helplist noti compon system often evolv make window help screen evolut resist one specifi help screen modular fashion thu use two dierent kind descript propos section descript behavior singl compon seen island start compon descript behavior depend compon start racontract exampl descript techniqu use keyword written capit letter compon island specic consist two part specic rst part requir part contain interfac compon need interfac requir predic syntax behavior explicitli speci second part assur part captur interfac compon provid environ ment interfac assur predic again syntax behavior explicitli describ notat semant within part equal one use interact contract languag support action send messag compon c denot c m chang valu v denot v order action explicitli given oper ifthenels construct left unspeci oper k languag also provid construct ho repetit express e separ oper variabl v satisfi c now start textual specic requir assur two compon helptext helplistth compon island spec icat compon helptext requir interfac observ method assur interfac textbox local method compon helptext requir interfac support method updatevoid note that context specic requir interfac name observ repres neither global name type requir interfac later explicitli model map variou requir assur interfac method name via propos racontract addit compon helptext assur interfac textbox two method gettextstr addtexttstringvoid addtextt call method updat invok observ correspondingli compon helplist requir interfac name observ includ method gettextstr moreov whenev return valu gettext chang updat method compon helplist call via interfac listbox basic behavior requir compon helplist need assur environ compon helplist requir interfac observ method invari assur interfac listbox local method now specifi two racontract one satisfi requir compon helplist requir compon helptext contract contain two section rst sec tion instanti declar particip contract initi congur in stanc contract helplistcontract two particip hlhelplist hthelptext instanti initi connect establish note variabl declar instanci section global identi one must abl refer current contract well contract second section predic map map requir interfac assur interfac partic ipant addit contain import part contract proof there design valid correct contract mean proof whether syntax behavior requirementsassur pair ts togeth contract helplistcontract includ proof simpli start conjunct assur predic interfac httextbox end requir predic interfac hlobserv racontract helplistcontract instanti helplist map requir hlobserv assur httextbox racontract helptextcontract instanti map requir htobserv assur hllistbox proof omit window help screen complet speci implement usual take coupl month one compon appear new improv version exampl new version compon helptext evolv new version assur addit method addcharccharvoid perform reason method guarante observ noti method invok compon helptext requir interfac observ method assur interfac textbox local method assur part specic compon helptext chang therefor design tool search racontract helptext use fulll requir compon onc contract identi correspond proof redon exampl contract helplistcontract concern design recheck whether goal ht reach premis chang obvious goal cannot deriv call addcharc chang return valu method gett ext result updat helplistwhenev text helptext chang updat calledar longer satis new compon helptext current design system may longer meet expect re quirement now design decid keep former compon use realiz workaround helplist compon howev outsid scope discuss concept conclus futur work abil softwar evolv control manner one critic area softwar engin ing therefor overal evolutionbas develop methodolog componentwar need paper outlin wellfound common system model componentwar cope difcult behavior aspect objectorient com ponentwar dynamical chang structur share global state nalli mandatori callback model present includ concept type abstract well concret descript type system develop set descript cre ate softwar evolut mean descript chang time thu need techniqu determin impact respect evolut step present requirementsassurancescontract develop explicitli model depend dierent compon whenev compon entir system chang contract show consequ compon contract help develop manag evolut complet system number addit issu remain item futur work current work rst prototyp runtim environ present system model still elabor underli type sy tem addion provid sophist graphic descript techniqu base uml ocl structur document interfac document protocol document implement document complet develop exampl show descript techniqu practic descript techniqu clear semant map system model dene addit syntax compat checker theorem prover model checker could includ run correct proof evolut step semiautomat even fullautomat fi nalli develop tool support provid set evolutionresist architectur base technic componentwar infrastructur like corba dcom java enterpris bean acknowledg grate klau bergner manfr broy ingolf kruger jan philipp bernhard rump bernhard schatz marc sihl oskar slotosch katharina spi alexand vilbig interest discuss comment earlier version paper r formal model componentwar design distribut system introduct focu interact interfac toward scienti c foundat methodolog usag messag sequenc chart java nutshel design pattern element reusabl objectori soft ware visual formal specifi behavior composit objectori sy tem uni tempor logic action preliminari design jml behavior interfac speci manag softwar evolut reus contract europa der club der innovatoren clientserv program java corba model softwar evolut evolv interoper graph execut summari softwar evolut componentwar practic approach formal methodik de entwurf verteilt ob jektorientiert system reus contract manag evolut reusabl asset tr visual formal contract specifi behavior composit objectori system objectori softwar engin objectori model design realtim objectori model tempor logic action design pattern reus contract patternori softwar architectur clientserv program java corba objectori softwar construct nd ed unifi softwar develop process softwar chang evolut use extend event trace describ commun softwar architectur interact interfac toward scientif foundat methodolog usag messag sequenc chart plea greybox compon