t incorpor specul execut schedul controlflow intens behavior descript a specul execut refer execut part comput execut condit oper decid whether need execut shown promis techniqu elimin perform bottleneck impos control flow hardwar softwar implement alik paper present techniqu incorpor specul execut finegrain manner schedul controlflow intens behavior descript demonstr fail take account inform resourc constraint branch probabl lead significantli suboptim perform also demonstr may necessari specul simultan along multipl path subject resourc constraint order minim delay overhead incur predict error occur experiment result sever benchmark show specul schedul algorithm result signific upto sevenfold improv perform measur term averag number clock cycl compar schedul without specul execut also best worst case execut time specul perform schedul better correspond valu schedul obtain without specul execut b introduct specul execut refer execut part comput known control path belong execut for exampl execut code branch statement branch condit evalu use overcom extent schedul bottleneck impos controlflow previou work specul execut area highlevel synthesi well highperform compil previou work highlevel synthesi attempt locat singl multipl path specul prior schedul ing paper present techniqu integr specul execut schedul highlevel synthesi controlflow intens design context demonstr use inform resourc constraint branch probabil work support part nsf grant no part altern system concept inc sbir contract air forc rome laboratori permiss make digitalhard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copyright notic titl public date appear notic given copi permiss acm inc copi otherwis republish post server redistribut list requir prior specif permiss andor fee dac san francisco california iti decid specul lead significantli suboptim perform also demonstr necessari perform specul execut along multipl path finegrain level cours schedul order obtain maxim benefit addit present techniqu automat manag addit specul result gener specul execut oper show incorpor specul execut gener schedul methodolog particular present result integr effici schedul wavesch experiment result variou benchmark exampl present indic upto sevenfold improv perform averag number clock cycl requir perform comput background motiv schedul tool typic work use one intermedi represent behavior descript data flow graph dfg control flow graph cfg controldata flow graph cdfg paper use cdfg intermedi represent behavior descript state transit graph stg repres schedul behavior descript explain later section addit behavior descript schedul also accept follow inform ffl constraint number resourc type avail resourc alloc constraint ffl target clock period implement constraint limit extent data control chain allow ffl profil inform indic branch probabl variou condit construct present behavior descript present motiv exampl illustr use specul execut schedul consid part behavior descript correspond cdfg fragment shown figur contain loop cdfg contain vertic correspond oper behavior descript solid line indic data depend dot line indic control depend control edg cdfg annot variabl repres result condit oper gener them ex ampl control edg fed oper mark c figur initi valu variabl use loop bodi indic parenthes besid correspond cdfg data edg let us consid task schedul cdfg shown figur suppos follow constraint use schedul k t c c figur cdfg illustr specul execut _ m_ _ _ _ _ _ _ _ _ m_ _ _ _ m_ m_c_ _ a b figur a nonspecul schedul cdfg figur b schedul incorpor specul execut ffl target clock period allow execut memori access oper one clock cycl oper requir two clock cycl addit assum oper implement use stage pipelin multipli chain allow sinc lead violat target clock period constraint in gener howev algorithm handl chain ffl aim optim perform design much possibl henc resourc constraint specifi purpos illustr exampl limit schedul algorithm handl resourc constraint describ later section schedul cdfg incorpor specul execut shown figur a schedul obtain appli either loopdirect schedul techniqu wavesch techniqu cdfg vertic stg repres schedul state directli correspond state control rtl implement state annot name cdfg oper perform state includ suffix repres symbol iter index cdfg loop oper belong to exampl consid oper cdfg encount first time schedul assign subscript result oper stg figur a gener multipl copi oper may gener schedul correspond differ condit path differ iter loop ex ampl oper stg figur a correspond execut first unrol instanc cdfg oper edg stg repres control state transit annot condit activ transit iter loop schedul cdfg requir eight clock cycl exampl data depend among oper within loop requir perform serial addit control depend comparison oper togeth interiter data depend prevent parallel comput multipl loop iter even loop unrol employ schedul cdfg figur incorpor specul execut shown stg figur b schedul deriv techniqu present later section specul execut oper annot condit oper whose result depend upon use follow tion opcond repres oper op execut assum specul condit cond evalu rue specul condit cond could gener express conjunct result variou condit oper stg exampl consid oper c state figur b specul execut oper correspond second instanc cdfg oper schedul assum result condit oper execut state s go true state repres steadi state schedul note that steadi state new iter initi everi cycl oppos eight cycl follow exampl illustr impact branch probabl resourc constraint perform specul deriv schedul make case integr specul schedul process consid exampl cdfg shown figur select oper sel select data operand l r port valu port figur show three differ schedul use specul execut gener use differ resourc constraint branch probabl stg figur a gener assum follow inform avail resourc consist one increment one adder intraiter data control depend oper correspond iter loop interiter depend oper differ eg consecut iter refer intraiter data control depend simpli data control depend c e l r figur cdfg demonstr effect resourc constraint branch probabl specul execut a b c figur three specul schedul deriv use differ resourc constraint branch probabl one compar one shifter one multipli requir one cycl also probabl comparison evalu f als higher evalu true sinc result evalu f als often schedul figur a give prefer execut oper correspond control path eg result schedul perform sole adder state s oppos even though data operand oper avail averag number clock cycl cc requir stg figur a calcul follow equat pc repres probabl result comparison evalu true stg figur b deriv inform abov except assum comparison evalu true often evalu f als henc oper given prefer oper schedul s averag number clock cycl cc b requir stg figur b given follow express suppos resourc constraint relax allow two adder specul schedul result shown figur c averag number clock cycl cc c requir stg figur c given follow express expect number cycl cc figur comparison specul schedul valu cc cc b cc c variou valu p rang plot figur expect schedul figur a outperform schedul figur b pc schedul figur b perform better moreov schedul figur c deriv use one extra adder outperform two schedul valu pc thu conclud branch probabl resourc constraint influenc tradeoff involv decid condit path specul upon make case integr specul execut schedul step inform avail follow exampl illustr necessari perform specul execut along multipl path finegrain man ner order obtain maxim perform improv schedul shown figur gener figur specul along singl path specul execut oper condit path cdfg finegrain manner allow resourc constraint purpos comparison schedul cdfg shown figur assum schedul inform assum deriv schedul figur b howev case restrict schedul allow specul execut along one path result schedul shown figur averag number clock cycl cc requir stg figur given follow express compar express cc express cc b previou exampl indic cc cc b feasibl valu pc thu exampl simultan specul along multipl path accord resourc avail result schedul provabl better one deriv specul along probabl path schedul algorithm automat decid best path specul upon given resourc constraint branch probabl algorithm section present chang need made gener schedul algorithm support specul execut gener schedul algorithm figur show pseudocod gener schedul algo rithm input schedul cdfg g sched gener schedul cdfg g alloc constraint k modul select info inf clock period clk f set unschedul oper set schedul oper junschedul operationsj schedul oper schedul oper k inf clk select oper schedul select oper must honor alloc clock cycl constraint unschedul operationsremov operationop schedul operationsremov operationop set schedul successor comput schedul successorsopfind set oper op fanout becom schedul op schedul schedul operationsappendschedul successor augment schedul oper addit oper schedul successor gg figur pseudocod gener schedul algorithm ule target clock period design alloc constraint specifi number type function unit avail modul select inform give type function unit oper map to output schedul stg describ schedul point gener schedul maintain a set unschedul oper whose data control depend satisfi therefor schedul schedul oper b set oper unschedul unschedul oper schedul process proce follow oper schedul oper select schedul given state statement select honor alloc clock cycl constraint manner select done vari one schedul algorithm anoth select oper op schedul state sinc op longer belong either schedul oper unschedul oper remov set statement also schedul op might render oper fanout schedu labl routin comput schedul successor statement identifi oper oper subsequ includ set schedul oper statement incorpor specul execut gener schedul overview provid overview chang need made incorpor specul execut framework gener schedul shown figur support specul execut gener schedul shown figur need modifi follow the detail step provid section oper schedul one need recogn schedul successor includ one r figur cdfg fragment illustr specul execut specul schedul addit specul execut oper successor need special mark clearli procedur comput schedul successor need augment consid case note that stage everi specul schedul oper ad list schedul oper howev actual schedul oper worth specul ignor eventu remov list schedul oper use procedur describ later section exampl consid cdfg fragment shown figur assum oper op schedul oper op schedul oper op op sel op unschedul output routin comput schedul successorsop must includ oper op specul execut ie operand assum result oper op op oper schedul control data depend specul execut oper resolv would potenti valid invalid specul perform oper oper valid consid normal ie need special mark longer oper unschedul oper schedul oper invalid need longer consid schedul can therefor remov set gener resolut control data depend specul perform oper creat two separ thread execut correspond success failur specul exampl consid again cdfg fragment shown figur suppos oper op op op schedul oper op unschedul oper op use operand result oper op op assum oper op schedul op evalu true execut op consid fruit operand chosen comput correct therefor op schedul schedul successor need consid condit result op anymor data structur modifi reflect fact if howev op evalu fals op use operand result oper op op thu invalid result specul there fore schedul oper whose comput influenc result comput op invalid remov set schedul oper set schedul oper oper select schedul contain oper whose execut specul ie whose result alway use ful select procedur repres routin select schedul oper statement need modifi account fact exampl oper whose execut extrem improb would make poor select candid resourc consum might better util oper whose execut proba ble also oper fall critic path would better candid select offcrit path incorpor specul execut gener schedul closer look section fill detail chang outlin section preced formal treatment concept relat specul execut schedul support specul execut work condit oper atom schedul unit normal schedul use oper therefor faninfanout relationship oper captur cdfg need defin condit oper sinc specul perform oper condit event adject specul perform appli oper impli condit event combin event mention section oper schedul schedul successor need comput r l r figur illustr schedul successor specul perform oper consid cdfg fragment shown figur assum oper op op schedul oper op op op unschedul op sched ule possibl schedul two version oper op first version op use op op operand second op use op op op condit cop cop op condit cop cop follow analysi present structur mean identifi relationship present result help deriv faninfanout relationship among specul perform oper lemma consid oper op whose fanin op op opn fanin op specul schedul op particular ith fanin opi condit c op would condit v n present detail step outlin section step step address issu deriv schedul successor schedul oper op result lemma use procedur schedul op erat satisfi follow condit sourc schedul oper condit exit oper fanout cdfg whose fanin reachabl output oper path consist exclus if all select opera tion path connect output oper opj input fanout denot pj oper pj note aj equal repres condit path pj select ie result oper op j propag path pj appropri input fanout oper fanout condit v repres express opk condit on observ use infer schedul successor oper procedur comput schedul successor call statement pseudocodeshown figur appropri augment far describ techniqu use identifi schedul successor oper accomplish tag oper condit result would valid note procedur allow us specul possibl outcom branch arbitrarili deepli nest branch integr schedul support loop unrol specul could also cross loop boundari present techniqu use valid invalid specul perform oper whose depend resolv step suppos oper op resolv condit c schedul resolut c result creation two differ thread execut i true ii fals follow procedur carri everi oper belong either set schedul oper set schedul oper let op condit true fals branch c evalu assum valu c result express new express op condit on step describ procedur employ schedul select oper schedul pool schedul oper ation schedul oper schedul oper contain oper condit differ set event ie choos differ path specul upon need decid best candid map given resourc where best mean oper whose map given resourc would minim expect number cycl schedul formal problem state follow given i partial schedul ii function unit fu iii set oper some may specul execut function unit iv typic input trace select oper which map fu would minim expect number cycl problem proven npcomplet even condit loopfre behavior descript we therefor use follow heurist whose guid principl success employ sever schedul algorithm heurist base follow premis oper cdfg feed primari output long path critic oper feed primari output short path and therefor need schedul earlier rational behind heurist oper belong short path mobil long path ie total schedul length less sensit variat schedul length path measur sum delay constitu oper datadomin descript loop condit oper longest path pair oper fix controlflow intens descript path could input depend therefor longest path pair oper must defin respect given input exampl cdfg shown figur longest path connect primari input c output depend upon valu taken oper sinc schedul algorithm gear toward minim averag execut time use expect length longest path oper primari output metric rank differ oper use notat lop denot quantiti oper op specul add new dimens problem result comput oper guarante use tabl expect number cycl number state best worstcas number cycl result circuit enc state bc wc ws sp ws sp ws sp ws sp barcod gcd findmin tabl alloc constraint exampl tabl circuit add sub mult comp eqc inc findmin oper op account effect multipli probabl oper output util lop deriv metric oper critic express mean follow equat criticalityop measur desir schedul op product probabl event op condit on lop defin abov experiment result techniqu describ paper implement program call waveschedspec written c evalu program use produc schedul sever commonli avail benchmark schedul compar produc schedul algorithm wavesch without use specul execut respect follow metric a expect number cycl b number state stg produc c smallest number cycl taken execut behavior descript d largest number cycl taken execut behavior descript gener find largest number cycl taken execut behavior descript hard problem howev exampl consid paper static analysi descript suffici find number tabl summar result obtain column label state bc wc repres respect expect number cycl number state stg produc smallest number cycl taken execut stg largest number cycl taken execut stg minor column ws produc wavesch wavesch spec respect use librari function unit consist a adder add b subtract sub c mul tiplier mult d lessthan compar comp e equal compar eqc f increment inc unlimit number singleinput logic gate or and not assum avail function unit except mult execut two cycl take one cycl execut alloc constraint exampl found look entri correspond exampl tabl exampl alloc constraint gcd two sub one comp two eqc expect number cycl final design measur simul vhdl descript schedul use synopsysvss simul input trace use simul obtain zeromean gaussian sequenc exampl barcod gcd tlc findmin borrow literatur test exampl shown figur barcod repres barcod reader gcd comput greatest common divisor input tlc repres traffic light con troller findmin return index minimum element array result obtain indic waveschedspec produc averag expect schedul length speedup schedul obtain use wavesch note wavesch report achiev averag speedup schedul produc exist schedul algorithm pathbas schedul loopdirect schedul get idea area overhead techniqu obtain bit rtl implement gcd exampl use inhous highlevel synthesi system schedul produc waveschedspec wavesch rtl circuit technologymap use msu librari area gatelevel circuit obtain area overhead circuit produc waveschedspec found also note waveschedspec number cycl shortest longest path smaller equal correspond number wavesch conclus paper present techniqu incorpor specul execut schedul controlflow intens design demonstr order fulli exploit power specul execut one need integr schedul introduc nodetag scheme identif oper specul schedul given state heurist select best oper schedul techniqu fulli integr exist schedul algorithm support implicit unrol loop function pipelin controlflow intens behavior parallel execut independ loop whose bodi share resourc experiment result demonstr present techniqu improv perform gener schedul significantli schedul produc use specul execut were averag time faster schedul produc without benefit r experi lowlevel specul comput base multipl branch predict global schedul independ control dependenciesbas condit vector combin mbpspecul comput loop pipelin highlevel synthesi trace schedul techniqu global microcod compact sentinel schedul model compilercontrol specul execut wavesch novel schedul techniqu controlflow intens behavior de scription perform analysi optim schedul condit loopintens specifica tion comput intract empir evalu highlevel synthesi schedul heurist pathbas schedul synthesi tr global schedul independ control depend base condit vector empir evalu highlevel synthesi schedul heurist sentinel schedul perform analysi optim schedul condit loopintens specif italicwaveschedital comput intract combin mbpspecul comput loop pipelin highlevel synthesi ctr sumit gupta nick savoiu sunwoo kim nikil dutt rajesh gupta alex nicolau specul techniqu high level synthesi control intens design proceed th confer design autom p june la vega nevada unit state sumit gupta nikil dutt rajesh gupta alex nicolau dynam condit branch balanc highlevel synthesi controlintens design proceed confer design autom test europ p march sumit gupta nick savoiu nikil dutt rajesh gupta alex nicolau timothi kam michael kishinevski shai rotem coordin transform highlevel synthesi high perform microprocessor block proceed th confer design autom june new orlean louisiana usa satish pillai margarida f jacom compilerdirect ilp extract cluster vliwep machin predic specul modulo schedul proceed confer design autom test europ p march sumit gupta nick savoiu nikil dutt rajesh gupta alex nicolau condit specul effect perform area highlevel snthesi proceed th intern symposium system synthesi septemb octob montral pq canada soha hassoun fine grain increment reschedul via architectur retim proceed th intern symposium system synthesi p decemb hsinchu taiwan china luiz c v do santo jochen a g jess exploit state equival fli appli code motion specul proceed confer design autom test europ pe januari munich germani darko kirovski miodrag potkonjak engin chang methodolog applic behavior system synthesi proceed th acmiee confer design autom p june new orlean louisiana unit state srivath ravi ganesh lakshminarayana niraj k jha remov memori access bottleneck schedul controlflow intens behavior descript proceed ieeeacm intern confer computeraid design p novemb san jose california unit state sumit gupta nikil dutt rajesh gupta alexandru nicolau loop shift compact highlevel synthesi design complex control flow proceed confer design autom test europ p februari