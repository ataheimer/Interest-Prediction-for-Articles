t interpol automat frege system a interpol method one main tool prove lower bound proposit proof system loos speak one prove particular proof system feasibl interpol properti gener reduct usual appli prove lower bound proof system sometim assum usual modest complexitytheoret assumpt paper show method cannot use obtain lower bound frege system even tcfrege system specif show unless factor of blum integ feasibl neither frege tcfrege feasibl interpol properti order carri argument show carri proof mani elementari axiomstheorem arithmet polynomials tcfregea corollari obtain tcfrege well proof system polynomi simul it automatiz under assumpt factor blum integ hard also show hard assumpt kprovabl problem frege system hard b introduct one import question proposit proof complex show famili proposit tautolog requir superpolynomi size proof frege extend frege proof system problem still open thu import question understand techniqu appli prove lower bound system well weaker system recent year interpol method one promis approach prove lower bound proposit proof system bound arithmet show method like work frege system weaker system basic idea behind interpol method follow depart lsi universidad politecnica de cataluna barcelona spain bonetlsiupc research partli support eu hcm network consol esprit ltr project no alcomit cicyt ticc ticc depart comput scienc univers arizona tonicsarizonaedu research support nsf grant ccr usisrael bsf grant grant intm nsf smt czech republ z depart appli math weizmann institut ranrazwisdomweizmannacil research support usisrael bsf grant begin unsatisfi statement form f x z denot vector share variabl x vector privat variabl formula respect sinc f unsatisfi follow truth assign ff z either x ff unsatisfi y ff unsatisfi interpol function associ f boolean function take assign ff input output unsatisfi unsatisfi note unsatisfi case either answer suffic hard comput interpol function given unsatisfi statement f shown among thing interpol function alway comput polynomi time unless nevertheless possibl procedur exist special case particular interest fruit question whether one find or whether exist polynomi size circuit interpol function case f short refut proof system say proof system admit feasibl interpol whenev polynomi size refut formula f as abov interpol function associ f polynomi size circuit krajicek k first make connect proof system feasibl interpol circuit complex also monoton version interpol idea name conjunct normal monoton variabl z occur posit neg case associ interpol function monoton thu interest find polynomi size monoton circuit interpol function say proof system admit monoton feasibl interpol whenev polynomi size refut monoton f monoton interpol function associ f monoton polynomi size circuit beauti connect exist circuit complex proof system feasibl interpol monoton nonmonoton case monoton case superpolynomi lower bound proven suffici strong proof system admit feasibl interpol present sequenc paper ipu bpr k first use bpr prove lower bound proposit proof system the idea also implicit razb short statement f use cliqu interpol formula g xa g y state g graph contain cliqu size k where cliqu describ x variabl state g graph color where color describ variabl pigeonhol principl formula unsatisfi howev associ monoton interpol function would take input graph g distinguish graph contain cliqu size k color circuit exponenti size thu exponenti lower bound follow proposit proof system admit feasibl monoton interpol similar idea also work case admit feasibl interpol but necessarili monoton feasibl interpol first result razb give explicit superpolynomi lower bound suffici strong proof system admit feasibl interpol cryptograph assumpt particular shown nonmonoton interpol function associ certain statement express p np comput polynomi size circuit exist pseudorandom number gener therefor lower bound follow suffici strong proposit proof system admit feasibl interpol condit cryptograph assumpt exist pseudorandom number gener also possibl prove nonexplicit superpolynomi lower bound suffici strong proof system assumpt np comput polynomi size circuit mani research use idea prove lower bound proposit proof system particular last five year lower bound shown follow system use interpol method resolut bpr cut plane ipu bpr pud ch gener cut plane bpr k k relativ bound arithmet razb hilbert nullstellensatz ps polynomi calculu ps lovasz schriver proof system pud automatiz kprovabl explain previou paragraph exist feasibl interpol particular proof system give rise lower bound feasibl interpol moreov import paradigm proof complex in gener sever reason section wish explain lack feasibl interpol particular proof system impli automatiz say proof system automatiz exist determinist procedur take input formula f return refut f if one exist time polynomi size shortest refut f automatiz crucial concept autom theorem prove proof complex mostli interest length shortest proof wherea theorem prove also essenti abl find proof seemingli power system proposit calculu such extend resolut even zfc scarc theorem prove seem difficult search effici short proof system word seem tradeoff proof simplic automatiz simpler proof system easier find proof section formal tradeoff certain sens particular show feasibl interpol automatiz first observ russel impagliazzo idea show automatiz use determinist procedur feasibl interpol theorem proof system feasibl interpol automatiz abl proof suppos automatiz suppos determinist procedur find proof moreov guarante run time n c n size shortest proof input formula let x z y z interpol statement let ff assign z want output interpol function x ff y ff first run x z y z obtain refut size next simul x ff s step return produc refut x ff chosen maximum time produc refut formula refut size thu c case work case y ff satisfi satisfi assign fl plug fl refut x ff y ff obtain refut x ff size therefor feasibl interpol ut thu feasibl interpol simpl measur formal complexitysearch trade off exist feasibl interpol impli superpolynomi lower bound sometim modulo complex assumpt wherea nonexist feasibl interpol impli proof system cannot automat concept close relat automatiz kprovabl ksymbol provabl problem particular frege system follow problem determin given proposit formula f number k whether ksymbol proof f k line provabl problem determin whether k line proof f k line provabl undecid problem firstord logic b first complex result kprovabl problem proposit logic provid buss b prove rather surpris fact ksymbol proposit provabl problem np complet particular frege system recent abmp show ksymbol k line provabl problem cannot approxim within linear factor varieti proposit proof system includ resolut frege system unless method paper show ksymbol k line provabl problem cannot solv polynomi time tc frege system frege system extend frege system assum hard factor of blum integ precis use idea abov show polynomi time algorithm solv kprovabl problem feasibl interpol suppos unsatisfi statement first run first verifi size proof f fix valu c let ff assign z abov run determin ossymbol or oslin refut x ff return accept fact proof extend easili show ksymbol k line provabl problem cannot approxim within polynomi factor proof system tc frege frege extend frege hard assumpt interpol one way function one prove certain proposit proof system admit feasibl interpol one idea due krajicek pudlak kp use one way permut follow way let h one way permut let x z y z follow formula formula th bit x formula th bit sinc h one one x z y z unsatisfi assum formul proof system exist polynomi size refut x z a y z then admit feasibl interpol follow given assign ff z exist polynomi size circuit decid whether x ff unsatisfi y ff unsatisfi obvious circuit break th bit input h sinc construct bit input h broken henc assum input h secur proof system exist polynomi size refut follow admit feasibl interpol major step toward understand feasibl interpol made krajicek pudlak kp consid formula base rsa cryptograph scheme show unless rsa secur extend frege system feasibl interpol open howev whether neg result hold frege system weaker system bound depth threshold logic bound depth frege result paper prove frege system well constantdepth threshold logic refer admit feasibl interpol unless factor blum integ comput polynomi size circuit recal blum integ integ p prime p mod result significantli extend kp weaker proof system addit cryptograph assumpt weaker prove result use variat idea kp convers moni naor observ cryptograph primit need one way permut kp gener structur bit commit formula base diffiehellman secret key exchang scheme dh simplic state formula least signific bit our argument work bit inform proposit statement dh common variabl two integ xy p g p repres number not necessarili prime length n g element group z privat variabl integ a b privat variabl integ c inform say g mod ab mod p even similarli d say g cd mod p odd statement unsatisfi sinc inform true ab mod show inform proof made formal polynomi size proof hand interpol function comput one bit secret key exchang diffiehellman procedur thu tc frege admit feasibl interpol bit secret key exchang diffiehellman procedur broken use polynomi size circuit henc diffiehellman cryptograph scheme secur note prove prime break diffiehellman cryptograph scheme harder factor p bbr see also sh mc requir quit bit work formal statement argument short proof notic want size proposit formula express diffi hellman statement polynomi bound number binari variabl addit want size proof statement also polynomi bound key idea order defin statement prove effici introduc addit common variabl proposit diffiehellman statement bulk argument involv show with aid auxillari variabl one formal proof show basic arithmet fact includ chines remaind theorem state proven effici within section descript paper organ follow section defin system section defin use proof section defin precis interpol formula base diffiehellman cryptograph scheme section show prove main theorem provid technic lemma prove fulli section section discuss open problem final section prove technic lemma requir main theorem unusu organ paper due mani technic lemma requir show result essenti correct argument everi reader might want go through section give exposit result reli complet proof technic part system clariti work specif boundeddepth threshold logic system call reason definit system also suffic system sequentcalculu logic system formula built use connect number s x least k phi x true number s x mod system essenti one introduc mp which is turn extens system ptk introduc buss clote bc section intuit famili formula f formula proof size polynomi size formula everi line proof built use connect th k phi phi connect assum unbound fanin th k interpret true number true s least k phi j interpret true number true s equal j mod formula denot logic multiset consist similarli phi j th k thu commut connect implicit proof system oper sequent set formula form intend mean conjunct s impli disjunct b j s proof sequent logic system sequenc sequent q sequent either initi sequent follow previou sequent one rule infer final sequent q size proof depth initi sequent form formula rule infer follow note logic rule defin n k first simpl structur rule weaken formula alway ad left right contract two copi formula replac one permut formula sequent reorder remain rule cut rule logic rule allow us introduc connect left side right side cut rule allow deriv gamma logic rule follow deriv negationright andleft andright orleft modleft phi gammai deriv modright deriv thresholdleft th k deriv deriv proof boundeddepth proof system polynomi size formal follow definit ng famili sequent fr famili tc proof f exist constant c follow condit hold r n valid proof gamma system i depth r n d n size r n note defin specif proof system clariti result still hold reason definit proof it shown system polynomi simul fregestyl system differ polynomi size proof system polynomi size tc proof similar differ nc tc section describ need formul refut diffiehellman formula simplic descript let us assum fix number n upper bound length number use refut diffiehellman formula number n use defin formula below see statement refut diffiehellman formula clear enough take n small polynomi length number p use diffiehellman formula addit subtract use usual carrysav ac formula add two nbit number let two number x denot follow ac formula bit z equal mod sum c x c carri bit intuit c bit posit less gener carri propag later bit posit bit formal c comput orr th bit posit gener carri p k k th bit posit propag gener carri subtract let us show comput z think x n bit number complement modulo n bit x complement n bit x denot note equal n similarli equal n know x gamma thu know thu thu comput z s n iter addit describ input number n bit long output sum x assum n main idea reduc addit number addit two number let x x in x i in binari represent let l dlog ne let l assum for simplic r integ divid x r block block l bit let ik number k th block x is l now ik l bit let l ik loword half ik let h ik high order half is denot r r then r r r henc show comput number hl let us show comput l comput h similar denot r sinc l ik length l l k length l l henc bit l bit l k s combin is comput l k s note sinc l k polys sum logarithm length number comput use polys threshold gate modular arithmet next describ comput quotient remaind number z modulo p z length n remaind input remaind quotient formula follow number z number number k r n intend valu variabl k r for n intend valu variabl p delta p suppos z assum input variabl k r take right valu formula z p output r formula div p z output k formula comput follow suppos k r p variabl satisfi p l l delta therefor comput div p z comput sum n notic k r p s formula requir comput correct valu quotient remaind give junk product iter product write x delta denot formula sum ij ij gamma x comput product two nbit number x ij gamma x j mean ij gamma x j true otherwis lastli describ comput iter product number formula basic origin formula bch articul tc formula m iter product prodz give product z z z length n assum mn bound n basic idea comput product modulo small prime use iter addit use construct chines remaind theorem construct actual product product modulo small prime let q product first prime first integ give number q length larger n sinc q q larger n well known bound distribut prime number length q j olog n q j let g j fix gener z also q j let u j q fix number properti u j mod q such number exist chines remaind theorem prodz comput follow first comput r calcul use modular arithmet describ earlier a comput ij g ij done tabl lookup b calcul c c comput r j g c j anoth tabl lookup final comput hardwir valu thu comput obtain tabl lookup comput follow iter sum follow mod q calcul equal inequ often write vector variabl formula appli convent write diffiehellman formula readi formal defin proposit statement dh dh conjunct common variabl formula be a p g repres nbit integ everi n also add common variabl g mod p b xy everi n also add common variabl x mod p mod p c also add variabl p variabl need defin arithmet modulo p see section follow common variabl mod mod conjunct follow which mean g mod everi j n mod p which mean g j modp note easi prove similar formula g b mod mod p prod ij even which mean g ab mod p even everi n formula express formula ad guarante modulo p arithmet comput correctli similarli formula d conjunct formula replac c b replac fourth item state g cd mod p odd note definit iter product prod requir prime q q as well product q number u fix length n go hardwir number q well correct valu r s k s need modulo q j arithmet one number refut dh want describ refut dh mention proof proce follow use show g ab mod use show x b mod show g cb mod use show g bc mod use show c mod show g dc mod conclud step impli g ab mod reach contradict sinc state g ab mod p even state g cd mod p odd formul g ab mod p prod ij x b mod p thu step formul prod ij on step virtual ident step follow easili formula defin g ab make symmetri obviou thu key step show step is show prove g ab mod mention abov formul follow prod ij build proof g ab mod p equal x b mod p prove mani lemma concern basic formula final lemma need follow lemma everi z z mm p tc frege proof proof lemma given section use lemma first equal point section second equal obtain prod ij prove step main goal section henc show statement short proof trivial quit complic and particular formula iter product modular arithmet order prove statement need carri lot basic arithmet go technic part tri give intuit proof main lemma built organ proof sequenc lemma show mani basic fact arithmet formul prove tc frege use formula proof lemma requir care analysi exact formula use oper proof lemma straightforward use well known proof lemma requir new trick short main lemma use proof final statement lemma follow lemma everi x p tc frege proof lemma everi z frege proof lemma everi z z tc frege proof first prove basic lemma addit subtract multipl iter sum lessthan modular arithmet among lemma lemma proof lemma cumbersom basic straightforward given basic fact modular arithmet recal iter product first comput product modulo small prime combin product get right answer use iter sum therefor mani basic fact modulo arithmet need proven advanc well basic fact iter sum done need obtain fact modulo p lemma point easier go regular product basic fact modular arithmet easier prove therefor import show tc frege prove lemma applic z z iter product show fact use chines remaind theorem first prove equal modulo small prime rel easi sinc size prime suffici small olog n basic check possibl combin done appli chines remaind theorem obtain equal modulo product prime sinc product big enough obtain desir result proof chines remaind theorem differ standard textbook one main fact need show everi j r q j tc frege proof r usual proof use basic fact divis prime would hard implement here instead prove induct method allow us work number smaller q s sinc number suffici small verifi possibl discuss open problem shown tc frege feasibl interpol assum factor blum integ effici comput impli under assumpt frege well system polynomiallysimul frege automatiz interest note proof even definit diffiehellman formula nonuniform essenti due nonuniform natur iter product formula use would interest know extent result hold uniform tc proof set recent paper bdgmp extend result prove boundeddepth frege feasibl interpol assum factor blum integ suffici hard actual assumpt stronger our consequ boundeddepth frege automatiz somewhat weaker hard assumpt import question still open whether resolut restrict form it automatiz posit answer question would import appli consequ formal proof main lemma goal section prove lemma mention earlier build proof lemma show basic fact concern arithmet multipl iter multipl modulu comput effici carri proof system begin formal present would like note give precis descript sequenc lemma suffici order carri full formal proof lemma howev sinc mani lemma mani obviou proof describ metalevel requir order formal argument tc frege rather give excess formal frege proof lemma follow x z number one denot vector n variabl formula repres number n n x respect z denot th variabl x repres th bit number x need talk three number write z z repres sequenc nbit where mn n z ij j th variabl z repres j th bit th number recal whenev say there tc frege proof actual mean say there polynomi size tc frege proof trivial properti like state here basic properti addit subtract multipl lemma everi x tc frege proof x proof lemma immedi fact addit formula defin symmetr way ut lemma everi x z tc frege proof x proof lemma definit addit formula th bit x equal phi phi carri bit go th posit add x c similarli defin carri bit go th posit add use basic properti phi definit simpl proof phi c x thu left show show prove stronger equal it verifi strongest equal possibl quantiti is assign satisfi equal actual possibl prove induct carri bit go first posit zero ident hold trivial prove equal assum hold prove equal consid mani case particular case assum fix valu follow seven quantiti subject condit c easi check number case sinc choic x choic choic z choic total c case proceed way first show comput use seven valu simpli verifi case induct hypothesi hold equal true first show requir proof along follow line x lefthand side statement true sinc posit carri also righthand side statement also true similarli x side statement fals sinc posit carri last case x viceversa case posit propag carri th carri bit exist j th posit gener carri posit carri exactli definit c thu last case side statement true c use fact also z argument show c y also comput simpl formula seven piec inform ut lemma everi x tc frege proof proof lemma comput take first n bit definit addit formula follow easili bit y y henc y henc first n bit number first n bit x ut lemma everi x proof lemma comput take first n bit x definit addit formula sinc x prove n th bit henc therefor lemma particular first n bit x lemma everi x z tc frege proof x proof lemma follow immedi lemma lemma follow everi z tc frege proof proof lemma need show everi j shown rather tediou straightforward proof follow definit formula sum iter addit name show first similarli secondli show h use definit second step difficult carri bit zero ut lemma everi z z everi fix permut ff tc frege proof that is iter sum symmetr proof lemma immedi fact formula sum defin symmetr way ut lemma everi z tc frege proof proof lemma definit iter addit formula sum straightforward prove similarli also straightforward show use definit formula everi j again carri bit zero ut lemma everi z z tc frege proof proof lemma recal sum z comput ad two number hl recal l comput first comput number l loword half k th block z first equal follow lemma similarli comput h l l comput first comput number l k l k sum comput use polys threshold gate eg use unari represent l ik therefor straightforward prove k l eg tri possibl l prove formula separ possibl consid formula sinc addit carri flow one block next one sinc bit l l block bit l k l respect conclud similar way prove abl conclud ut lemma everi z z tc frege proof proof lemma prove easili lemma lemma follow lemma everi z z everi k m tc frege proof proof lemma lemma lemma lemma proof follow repeat argument gamma k time lemma use base case ut lemma everi x tc frege proof x proof lemma immedi fact product formula defin symmetr way ut lemma everi x x power tc frege proof x proof lemma straightforward prove delta sequenc bit consist ad end s lemma easili follow ut lemma everi z z everi x x power proof proof lemma proof lemma like proof lemma use lemma instead ut lemma everi x power tc frege proof x proof lemma proof lemma ut follow three lemma gener previou three lemma lemma everi x y z tc frege proof x proof lemma definit product formula x similarli x iter applic lemma use also lemma similarli use also lemma lemma way use lemma thu prove prove prove everi trivial otherwis x use lemma lemma lemma way use also lemma ut lemma everi z z everi x tc frege proof proof lemma show everi lemma follow combin equal case proven follow first equal follow appli lemma second equal lemma gener step first equal follow lemma second equal follow lemma third equal follow lemma ut lemma everi x z tc frege proof x proof lemma show x delta y delta z equal sum ijk ijkgamma x true lemma follow definit product henc lemma two applic lemma and use freeli lemma x sinc easili verifi equal iter applic lemma use also lemma equal basic properti lessthan lemma everi x also proof lemma either bit signific bit x differ not bit equal signific bit differ x lemma everi x proof lemma lemma suppos contradict get x x which easili prove fals lemma everi x y z proof lemma proof first statement obviou otherwis suppos signific bit x x similarli suppos j signific bit j z j easi show signific bit x z x thu x z similarli j j signific bit x j z j x reason also impli second statement lemma ut lemma everi x z tc frege proof xz x also z proof lemma z clear x show induct decreas k assum z let z signific bit z base case induct show x z appli lemma suffic show x two case x equal x n x case x signific bit posit greater x one clearli exist x higher bit equal thu x induct step assum x want show x use argument base case one prove a x induct hypothesi b x appli lemma a b obtain desir ut lemma everi x y z proof lemma lemma lemma lemma everi x y z proof lemma first equal follow lemma second lemma fact lemma everi x tc frege proof proof lemma x definit also sinc bit suppos l x ut basic properti modular arithmet recal formula z p div p z take input variabl p z also variabl k formula give right output n follow theorem hypothesi valu variabl k r p correct short state hypothesi first lemma omit afterward simplic simplic also use notat k lemma use either number use dh formula fix hardwir valu eg q j one prime use iter product formula q product prime hardwir q k also hardwir henc valu correct straightforward check ie prove nonvari correct input dh formula itself requir part requir dh formula lemma z p nbit number tc frege proof proof lemma ut lemma everi z p tc frege proof also follow uniqu properti proof lemma previou lemma express z sum r let l definit modulo formula first equal follow definit formula z p div p z remain equal follow follow lemma let us prove uniqu part suppos done div p z claim bellow contradict and similar argument hold div proof claim sinc v lemma lemma lemma get therefor lemma lemma get p x ut lemma everi z k p tc frege proof proof lemma let by lemma therefor uniqu part lemma appli x z lemma everi x y z p frege proof also proof lemma lemma lemma similar argument show x lemma everi z z p tc frege proof proof lemma lemma follow easili lemma lemma ut lemma everi x p tc frege proof proof lemma first equal follow lemma next equal follow assumpt third equal follow lemma ut lemma everi x y z p frege proof proof lemma assum x follow lemma x left side equat equal to first equal follow lemma second equal follow lemma third equal follow lemma similarli shown y thu lemma follow ut lemma everi x p tc frege proof proof lemma last equal follow lemma ut lemma fix number bc everi z frege proof lemma use situat recal number q hardwir also correspond k r variabl s henc think a b c hardwir proof lemma use lemma get ut basic properti iter product lemma everi z z everi fix permut ff tc frege proof that is iter product symmetr proof lemma lemma immedi symmetr definit prod ut lemma everi z z everi k m tc frege proof proof lemma recal hardcod number u j u j mod q prime q j divid q verifi follow statement statement variablefre henc easili proven formula evalu recal k iter product number z k z calcul follow r km j comput like r j defin section use r ij way r kgammakm j calcul follow step also calcul r calcul ij g ij also j g j calcul c calcul r kgammakm j g c tablelookup therefor show henc need prove lemma show follow claim everi j tc frege proof r kgammakm first step prove follow claim proven follow r km second equal follow lemma third equal follow lemma lemma prove fourth equal need use fact u j delta r km also fact easili prove check possibl r km prove statement possibl easi statement variablefre henc easili proven formula evalu order prove fourth equal formal show sum ij u delta r km equal zero induct number term sum ut turn proof claim quantiti r m j obtain tabl lookup find valu equal g c j gamma similarli quantiti r kgammakm j obtain tabl lookup find valu equal henc enough prove c use previou lemma thu suffic show recal j valu obtain tablelookup g j claim r j turn valu obtain tablelookup equal g easi verifi tablelookup onetoon is everi x use properti with chines remaind theorem properti iter prod uct heart proof proof follow lemma give hard direct chines remaind theorem a proof direct simpler lemma let r two integ everi j r q j frege proof where fix prime use prod formula ie first prime q product proof lemma without loss gener assum r prove r otherwis defin r use lemma show everi j r sinc r conclud everi k let q k denot note number q k hardwir one easili prove follow statement these statement variablefre henc easili proven formula evalu everi proof lemma induct the number q j s lemma trivial assum therefor induct hypothesi henc denot r s lemma sinc know r q r q lemma sinc r lower q follow dr lower q henc claim therefor conclud everi i proof sinc olog n possibl therefor one check possibl prove statement possibl easi statement variablefre henc easili proven formula evalu altern one defin function domain f q g prove fx onto rang f q g then appli proposit pigeonhol principl effici provabl tc frege follow f one one ut abl prove follow lemma lemma everi z tc frege proof proof lemma recal prodz calcul follow r j comput r claim everi prodz q thu everi prodz q proof lemma follow lemma ut lemma everi z z tc frege proof proof lemma us prove everi proof lemma follow lemma two applic lemma enough prove everi recal prodz z calcul follow r j comput like r j defin section claim everi recal z r i therefor prove everi r definit r also r therefor one check possibl i i ut use previou lemma abl prove follow lemma everi z everi p tc frege proof as befor given proof lemma lemma use equal turn are lemma ut readi prove lemma everi z z mm p tc frege proof given proof lemma iter applic previou lemma ut acknowledg grate omer reingold moni naor collabor earli stage work particular suggest use diffiehellman cryptograph scheme also would like thank uri feig convers insight extend result boundeddepth frege part work done dagstuhl complex boolean function workshop r the monoton circuit complex boolean function minim proposit proof length nphard linearli approxim gener diffiehellman modulo composit weaker factor log depth circuit divis relat problem nonautomatiz boundeddepth frege proof lower bound cut plane proof small coeffici the undecid kprovabl on godel theorem length proof ii lower bound recogn k symbol provabl cut plane connect threshold logic an exponenti lower bound size monoton real circuit constant depth reduc new direct cryptographi upper lower bound treelik cut plane proof interpol theorem lower bound proof system independ result bound arithmet discret order modul firstord extens cut plane proof system threshold circuit small major depth a key distribut system equival factor a lower bound complex craig interpol sententi logic lower bound resolut cut plane proof monoton comput algebra model comput interpol algebra proof system lower bound monoton complex boolean func tion unprov lower bound circuit size certain fragment bound arithmet composit diffiehellman publickey gener system hard break tr ctr alexand razborov proposit proof complex journal acm jacm v n p januari pavel pudlk reduc symmetri disjoint np pair theoret comput scienc v n p februari olaf beyersdorff class represent disjoint nppair theoret comput scienc v n p may albert atseria conjunct queri evalu searchtre revisit theoret comput scienc v n p march samuel r buss polynomials frege resolut proof stconnect hex tautolog theoret comput scienc v n p juli paolo liberator complex result dpll resolut acm transact comput logic tocl v n p januari maria luisa bonet nicola galesi optim sizewidth tradeoff resolut comput complex v n p may albert atseria mara luisa bonet automatiz resolut relat proposit proof system inform comput v n p march juan lui esteban nicola galesi jochen messner complex resolut bound conjunct theoret comput scienc v n p august