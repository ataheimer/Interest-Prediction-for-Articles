t activ manag data cach exploit reus inform a abstracta microprocessor speed continu outpac memori subsystem speed minim averag data access time grow import multilater cach afford opportun reduc averag data access time activ manag block alloc replac decis evalu compar perform tradit cach multilater cach three activ block alloc scheme mat nt pc also compar perform nt pc multilater cach nearoptim nonimplement polici pseudoopt employ futur knowledg achiev activ alloc activ replac nt pc evalu rel pseudoopt respect miss ratio accuraci predict refer local actual usag accuraci tour length block cach result show multilater scheme outperform tradit cach manag scheme fall short pseudoopt increas predict accuraci incorpor activ replac decis would allow close approach pseudoopt perform b introduct minim averag data access time paramount import design highperform machin unfortun access time ochip memori measur processor clock cycl increas dramat dispar main memori access work done univers michigan time processor clock speed widen eect dispar compound multipleissu processor continu increas number instruct issu cycl mani approach minim averag data access time common solut incorpor multipl level cach memori onchip still alloc replac block manner essenti cach rst appear three decad ago recent studi explor better way congur manag resourc preciou rstlevel l cach activ cach manag activ block alloc replac improv perform given size cach maintain use block cach activ manag retain reus inform previou tour block use manag block alloc andor replac subsequ tour order partit alloc block within cach structur sever propos scheme incorpor addit data store within l cach structur intellig manag state result multilater cach exploit reus pattern inform structur perform activ block alloc still releg block replac decis simpl hardwar replac algorithm processor design typic design largest possibl cach still ever grow processor die multilater design shown perform well better larger singl structur cach requir less die area given die size reduc die requir attain given rate data suppli free space resourc exampl dedic space branch predict data forward instruct suppli instruct reorder buer paper evalu perform three propos cach scheme perform activ block alloc compar perform one anoth tradit singlestructur cach implement mat nt pc scheme use tour cach block time interv alloc block cach subsequ evict given memori block mani tour cach use term multilater refer level cach contain two data store disjoint content oper parallel hardwar similar possibl order fair comparison block alloc algorithm use experi show make placement decis base eectiv addressbas block reus nt scheme outperform macroblock base pcbase approach mat pc respect three scheme perform compar larger directmap cach better associ cach similar size examin perform optim nearoptim multilater cach determin perform potenti multilater scheme optim nearoptim scheme excel block replac decis block alloc decis direct consequ replac decis compar perform two implement multilater scheme nearoptim scheme determin reason perform implement scheme perform better improv need made block alloc replac choic rest paper organ follow section discuss techniqu aid reduc averag data access time section discuss activ cach manag detail present past eort perform activ block alloc section present simul methodolog section evalu perform three multilater scheme section present perform optim nearoptim multilater scheme perform nearoptim replac block compar decis made nearoptim scheme made two implement scheme conclus given section background mani techniqu reduc toler averag memori access time promin among are store buer use delay write bu idl cycl order reduc bu content nonblock cach overlap multipl load miss fulll request hit cach hardwar softwar prefetch methodolog attempt preload data memori cach need cach improv perform direct map cach addit small fulli associ cach l cach next level hierarchi scheme contribut reduc averag data access time paper approach problem premis averag data access time reduc exploit reus pattern inform activ manag state l cach approach use techniqu reduc averag data access time further activ cach manag activ cach manag use improv perform given size cach structur control data placement manag cach keep activ work set resid even presenc transient refer activ manag cach consist two part alloc block within cach structur demand miss replac block current resid cach structur block alloc today cach passiv straightforward block demand fetch place correspond set within cach structur howev decis take consider block use usag characterist examin past histori given block one method aid futur alloc block decis rang simpli cach target block bypass place block particular portion cach structur hope make best use target cach block block remain cach simpl block replac polici use choos block evict today cach choic often suboptim multilater cach alloc replac problem coupl particular block avail replac direct consequ alloc demandmiss block recent sever approach ecient manag l data cach via block alloc decis block load demand miss eg prefetch block stream buer scheme propos bypass scheme consid here howev scheme make proper bypass decis alloc decis prefetch data improv upon perform scheme evalu herein consid writealloc cach paper write noalloc cach follow subset rule write subject alloc decis alloc decis emerg literatur nt mat dualselect pc howev none approach make sophist block replac decis instead releg decis respect cach substructur nt model nt nontempor stream cach locationsensit cach manag scheme use hardwar dynam partit cach block two group tempor t nontempor nt base reus behavior past tour block consid nt tour l word block reus block classi nt subsequ alloc separ small cach place parallel main l cach block those mark prior inform avail handl main cach data placement decid use reus inform associ eectiv address request block eectiv nt reduc miss ratio memori trac averag access penalti demonstr primarili mostli numer program mat model mat memori address tabl cach anoth scheme base use eectiv address howev dynam partit cach data block two group base frequenc reus block becom tag either frequent infrequ access memori address tabl use keep track reus inform granular group macroblock dene contigu group memori block consid usag pattern characterist block determin infrequ access alloc separ small cach scheme shown signic speedup gener cach due improv miss ratio reduc bu trac result reduct averag data access latenc dual cacheselect cach model dual cach two independ cach structur spatial cach tempor cach cach block dynam tag either tempor spatial local predict tabl use maintain inform recent execut loadstor instruct block tag neither spatial tempor nd place cach bypass cach method use handl vector oper random access pattern larg stride introduc self interfer howev two cach necessarili maintain disjoint content tempor cach design smaller line size compar spatial cach requir data found cach read tempor cach written parallel order overcom replic coher problem author propos simpli version dual cach call select cach select cach one memori unit like convent cach incur hardwar cost due local predict tabl dual cach data exhibit spatial local tempor local selfinterf cach benchmark studi scheme shown perform better convent cach size select cach improv bypass cach reli compil hint decid whether block cach bypass pc model pc program counter select cach multilater cach design evolv cna cach scheme pc cach decid data placement block base program counter valu memori instruct caus current miss rather eectiv address block nt cach thu pc tour perform block recent brought cach memori access instruct rather recent tour perform current block brought cach use determin placement block perform pc best program refer behavior given datum wellcorrel memori referenc instruct bring block cach multilater cach scheme sever cach scheme consid multilater cach assist cach use hp pa victim cach howev neither scheme activ manag cach structur use reus inform obtain dynam program execut assist cach use small data store stage area data enter l potenti prevent data enter l indic compil hint victim cach excel perform major cach miss con ict miss result limit associ main cach buer victim scheme serv dynam increas associ hot spot typic directmap main cach scheme shown perform well requir costli data path two data store perform data migrat requir without intercach data path present scheme cannot oper use previou tour inform activ decid data store alloc block to victim cach shown perform well rel activelymanag scheme main cach directmap paper evalu multilater scheme use dynam inform alloc data among two data store direct data path them simul methodolog simul set benchmark program use compar perform multilater cach strategi section describ dynam superscalar processor memori simul use evalu cach memori structur system congur use method metric benchmark constitut simul environ processor memori subsystem processor model studi modic simoutord simul simplescalar toolset simul perform outoford ooo issu execut complet deriv mip instruct set architectur schemat diagram target processor memori subsystem shown figur summari chosen paramet architectur assumpt memori subsystem model mlcach tool discuss below consist separ instruct data cach perfect secondari data cach main memori instruct cach perfect respond singl cycl data cach model fetch mechan fetch instruct program order per cycl branch predictor perfect branch predict issu mechan outoford issu oper per cycl entri instruct reorder buffer ruu entri loadstor queue load may execut prior store address known function unit multdiv fp multdiv ls unit f u latenc int alu int mult int fp div ls instruct cach perfect cach cycl latenc data cach multilater l writealloc latenc latenc nonblock ing memori port processor cach data cach secondari cach main memori figur processor memori subsystem characterist convent data cach split two subcach disjoint content place parallel within l multilater cach subcach uniqu congur size setassoci replac polici etc b cach probe parallel equidist cpu b nonblock byte line singl cycl access time standard singlestructur data cach model would simpli congur cach desir paramet set b cach size zero l cach access latenc bu l l bytescycl data bandwidth l l access fulli pipelin miss request sent ll bu everi cycl pend request l cach model perfect cach order focu studi manag strategi l mlcach simul tool mlcach eventdriven timingsensit cach simul base latenc eect le cach time model discuss depth easili congur model variou singl multilater cach structur use librari cach state data movement routin interact model librari routin user write support routin descript check_for_cache_hit check see access block present cach updat place access block cach move_ov move access block one cach anoth do_swap move access block cach cach move evict block cach do_swap_with_inclus place access block cach cach move evict block cach cach do_save_evict move block evict cach cach find_and_remov remov block cach check_for_reus determin block exhibit tempor behavior word reus tabl basic support routin provid mlcach simul user call routin congur le control cach state interact manag routin call simul tool easili join wide rang eventdriven processor simul describ abov processor model work base simplescalar toolset togeth combin processorand cach simul simplescalarmlcach provid detail evalu multipl cach design run target workload propos processorcach congur mlcach easili retarget due provis librari routin user choos perform action take place cach situat routin access singl c le name congc user simpli modi congc describ desir interact cach processor memori user also control action occur via delay updat mechan built cach simul delay updat use allow behavior cach simul dineroiii account latenc latenc latencyad eect use delay updat caus eect access ie access placement cach remov replac block etc occur calcul latenc access pass tabl show routin provid brief descript each interact need these addit librari routin ad howev brief exampl easi see modular librarybas simul alreadi allow signic rang cach congur examin evalu perform three multilater scheme mat nt pc compar perform three tradit singlestructur cach k directmap cach k way associ cach k directmap cach cong urat evalu cach shown tabl simul cach scheme perform realist comparison among program counter eectiv address scheme requir detail memori simul mat nt pc cach manag scheme describ abov chose omit select cach block alloc decis similar made pc pc hardwar implement simpler ensur fair comparison evalu place manag scheme platform within uniform multilater environ use mlcach tool congur includ entri structur store reus inform describ scheme follow subsect describ implement mat nt pc cach manag scheme main cach label cach a auxiliari buer label cach b cach place equidist cpu three scheme congur similar possibl one anoth perform dierenc attribut primarili dierenc among block alloc decis make structur oper nt cach nt cach use model adapt scheme propos activ alloc data within l base block usag characterist particular block known exhibit nontempor reus place b other presum tempor block sent a done hope allow tempor data remain larger cach longer period time shorter lifetim nontempor data short quickli access small associ b cach memori access desir data found either b data return processor ad latenc block remain cach singl mat nt pc cach b b b size kkk k k k k k k associ full full full replac polici lru lru lru lru latenc next level tabl characterist four congur studi timeslat cycl found miss block enter l check see entri detect unit du du contain tempor inform block recent evict l manag follow entri du describ one block contain block address for match tnt bit to indic tempor recent tour evict block check see exhibit tempor reus ie word block referenc least twice justcomplet tour l cach structur tnt bit set accordingli du correspond du entri found evict block new du entri creat made mru du structur miss new miss block address match entri du tnt bit entri check block place indic tempor b not du entri made mru du better chanc remain du futur alloc predict thu creation access entri du treat use du with entri simul maintain lru replac match du entri found miss block assum tempor place a structur oper pc cach pc cach decid data placement base program counter valu memori instruct caus current miss rather eectiv address block nt cach thu perform block miss individu memori access instruct rather individu data block determin placement data pc scheme pc cach structur model similar nt cach du index memori access instruct program counter updat manner similar nt scheme block replac tempor bit entri associ pc memori access instruct brought block cach begin tour set accord block reus characterist justcomplet tour cach du entri match pc valu one creat replac lru entri du instruct subsequ miss load block place b instruct pc hit du predict bit indic nt otherwis block place a instruct miss du data place a structur oper mat cach mat cach structur memori address tabl mat keep track reus inform guid data block placement b cach l structur implement mat entri fulli associ structur like du nt pc note howev origin implement mat report use k entri direct map tabl mat entri consist macroblock address nbit satur counter bit counter kb macroblock size use here origin studi memori access cach b check parallel request data time counter correspond mat entri access block increment correspond entri one creat counter set lru entri mat replac counter serv indic use given macroblock use decid whether block macroblock place b cach next tour cach miss macroblock address incom block use index mat entri exist counter valu increment compar decrement counter macroblock correspond block would replac incom block place cach counter decrement ensur data eventu replac counter resid data continu decreas reaccess often enough continu con ict recent access block counter valu incom block higher con ict block current cach a incom block replac block cach situat indic incom block macroblock shown use earlier tour macroblock con ict block resid thu given higher prioriti resid larger main cach counter valu incom block less current resid block incom block place smaller b cach final entri correspond incom block block place cach default new entri creat mat counter initi zero entri correspond con ict block current cach a counter valu assum permit new block replac easili entri found mat resid block cach a anoth macroblock map set mat must access recent current block therefor less like use near futur nt pc scheme direct data path b cach unlik scheme howev mat structur updat everi access cach instead replac benchmark tabl show integ oat point program spec benchmark suit use studi program vari memori requir simul done use train data set program run complet with except perl termin rst billion instruct rel cach eect ratio import metric evalu cach manag scheme cach hitmiss ratio howev ooo processor multiport nonblock cach eectiv memori latenc as seen processor vari accord number outstand miss request sinc main focu studi evalu eectiv l cach instruct count memori refer million perfect memori perform program million load store cycl count million ipc spec integ benchmark compress gcc go perl float point benchmark hydrod sucor tabl eight benchmark memori characterist structur use special manag techniqu rel cach eect ratio rcr develop rcr given processor run cach congur x rel cach congur base given by cyclecount base cyclecount p erfectcach cyclecount p erfectcach total number cycl need execut program processor perfect cach congur rcr normal metric base cach perfect cach base cach congur perfect cach congur cach congur perform better base rcr lower rcr better cach congur perform wors base rcr rcr give indic nite cach penalti reduct obtain use given cach congur rcr mirror perform indic speedup number isol cach penalti cycl total run time rescal fraction penalti tradit base cach thu give direct indic well memori subsystem perform rel ideal perfect cach addit overal perform speedup metric use measur rel perform gain cach manag approach section block tour reus concept eectiv cach manag scheme also measur abil minim cumul number block tour program run individu cach block tour monitor classi base reus pattern exhibit tour see reus word block consid dynam tempor tour see word reus dynam nontempor dynam tempor dynam nontempor tour classi either spatial when one word use nonspati when one word use allow us classifi tour one four data reus group nontempor nonspati ntn nontempor spatial nt nonspati tn manag scheme result fewer longer tour consequ higher percentag data refer block make ts tour ntn nt tour problemat frequent refer data like caus cach pollut minim impact bad tour good multilater cach manag scheme util accur block behavior predict mechan data alloc decis experiment result miss ratio often use rank perform benet particular cach scheme howev miss ratio weakli correl perform latencymask processor nonblock cach furthermor fail captur latencyad eect delay hit overal perform delay hit discuss access data current return cach behalf earlier miss cach block delay hit incur latenc larger cach hit gener less full cach miss request data alreadi transit next level memori two program exhibit similar miss ratio may thu quit dierent overal execut time due dier number delay hit extent latenc mask shown avoid oversimplifi cach scheme impact overal perform instead concentr two metric timingsensit experi overal speedup rel compress gcc go hydrod li perl sucor swim tabl miss ratio cach scheme run benchmark base cach rel cach eect ratio present abov miss ratio tabl show miss ratio six cach congur run eight benchmark figur show correspond speedup rel k directmap cach naiv might assum compar two congur particular applic higher miss ratio would impli lower speedup sinc cach stall account portion run time rel speedup would less rel miss ratio howev comparison tabl figur show assumpt valid compress exampl miss ratio pc x nt run time x longer gcc k directmap cach actual higher miss ratio less run time k way associ cach swim nt higher miss ratio less run time mat k k directmap k way cach thu rel miss ratio alon inadequ indic rel perform latenc mask miss latenc overlap delay hit must incorpor time model get accur perform assess therefor concentr perform analysi latencysensit metric speedup rcr speedup speedup achiev scheme program shown figur singl directmap kw cach taken base overal speedup obtain use multilater cach scheme rang virtual none hydrod go nt clearli benchmark test benet improv oer cach scheme evalu ie better manag l compress gcc go hydrod li perl sucor swim nt pc figur overal execut time speedup evalu cach scheme rel singl directmap data store multilater scheme increas associ singl cach kw larger cach kw benchmark appreci perform gain base cach multilater scheme often perform well better either higherassoci singl cach larger directmap cach compress gcc benchmark larger work set benet larger overal cach space provid directmap structur although even benchmark multilater scheme abl obtain signic part perform boost via better manag cach despit smaller size multilater cach gener perform well compar larger directmap cach gener faster way associ cach multilater scheme larger directmap cach oer fast access smaller associ b cach still access quickli due small size experi show use way associ b cach instead fulli associ b cach would reduc perform less among multilater scheme see nt scheme provid greatest speedup benchmark except li where mat perform best sucor swim where pc perform best best multilater cach speedup order three benchmark mat pc scheme perform well group block exhibit similar reus behavior consecut tour cach nt scheme may howev fail detect reus pattern correl reus inform individu cach block oppos macroblock memori region mat memori access instruct pc thu mat pc scheme perform well program exhibit simd singleinstruct multipledata behavior refer behavior nearbi memori block block referenc memori access instruct may better indic reus behavior usag individu block last tour howev nt scheme still competit three benchmark thu give best overal perform scheme full suit benchmark rcr perform figur show rcr perform mat nt pc two singlestructur cach k directmap cach serv base comparison see nt pc elimin nite cach penalti experienc go perl compress gcc li k singlestructur directmap cach perform best howev dierenc rcr bestperform multilater scheme larg except li reduc nite cach penalti twice much mat best multilater scheme benchmark none cach show signic improv rcr remain three benchmark hydrod sucor swim instanc multilater scheme experi poor perform eg mat perl benchmark rel multilater scheme block alloc scheme mat well match characterist perl benchmark mani block shortliv frequent access block place smaller fullyassoci cach behavior continu mani block contend space smaller k fulli associ cach larger k cach badli underutil phenomenon occur multilater cach scheme extrem multilater scheme perform may degrad b cach itself compress gcc go hydrod li perl sucor swim rcr nt pc figur rcr perform evalu congur run eight benchmark rcr near perform similar base k directmap cach rcr closer approach perform perfect cach perform degrad address improv block alloc mechan discuss section perform dierenc caus though mat nt make block alloc decis base eectiv address block access perform dier mat may make poor alloc decis either miss block block would replac cach markedli dierent desir perceiv desir macroblock resid dispar desir occur blockbas desir mechan use nt perform better tabl present tour analysi go sucor perform nt rel mat well demonstr go nt appear manag tour program better actual reduc number tour mat experi case sucor perform dierenc mat nt small in term rcr clear applic much nontempor spatial data neither scheme reduc tour seen kb directmap cach tour analysi two singlestructur cach also shown two wide dispar benchmark analys use compar mat nt also use compar multilater cach singlestructur cach go k directmap cach manag scheme total tour reduct tour total percentag refer tour group cach manag scheme total tour reduct tour total percentag refer tour group tabl tour analysi go top sucor bottom cach best singlestructur cach perform though slightli lower percentag ts tour nt cach substanti overal tour thu wors overal perform mat nt sucor way associ directmap cach fail signicantli improv perform base cach due high percentag nt data access nt perform better pc overal speedup rcr dierent basi decis make use pc nt pc eectiv address respect result dierent perform pc scheme may place block suboptim cach sinc placement uenc block previous referenc request pc exampl set block may brought cach one instruct begin larg routin block may reus dierent way dierent part program execut eg tempor initi phase nontempor main program execut block usag characterist may attribut singl entri du tie pc instruct brought block cach tour end instruct entri du updat particular tour behavior directli aect placement next block request instruct eect alloc decis pc uenc recent replac block associ load instruct question characterist recent replac block persist discuss section alloc decis made pc load instruct vari often potenti degrad perform howev program counter manag scheme may good given instruct load data whose usag strongli bias one direct ie tour almost tempor almost nontempor case accur behavior predict futur tour result good block placement instruct howev data block load instruct dier usag characterist ie weakli bias placement decis block poor block usag histori tnt kept singl bit nt pc macroblock access frequenc kept nbit counter mat reduc counter size mat gener lead decreas perform howev keep tour histori use bit counter nt pc show virtual perform benet bit scheme use reus inform data cach manag multilater scheme oper assumpt reus inform use activ manag cach section assess valu reus inform make placement decis multilater l cach structur rst examin optim cach structur determin exploit reus inform cach manag outlin experi perform valid use reus inform compar perform multilater scheme perform nearoptim manag cach size optim nearoptim manag cach beladi min optim replac algorithm singlestructur cach ie result fewest miss interest see reus inform use note consid time model section min optim algorithm manag singl cach interest determin optim replac algorithm multilater cach make replac decis reus inform might best exploit howev direct extens min multilater cach known except b cach multilater congur fulli associ block free move two cach necessari order retain use block cach structur multilater cach is howev degener reduc singl fulli associ cach size equal total cach plu cach b case min use optim manag hardwarepartit fulli associ singl cach refer beladi min algorithm appli dual associ cach opt opt give upper bound perform multilater cach given size associ compar opt implement scheme yield direct comparison replac decis base reus inform sinc multilater cach typic cach b dier associ perform dierenc implement scheme opt may due replac decis also map restrict place implement scheme limit associ would instead like compar perform implement scheme optim manag multilater congur b cach dier associ order better attribut dierenc placement replac decis manag polici itself rather associ congur pseudoopt multilater cach manag scheme congur associ greater b congur opt free movement block b allow scheme provid content b disjoint manag adapt beladi min algorithm follow miss incom block ll empti slot correspond set cach cach b one exist empti slot exist set cach a extend set block dene consist block cach cach b map set cach a refer b c f b e f c hitmiss figur exampl show pseudoopt suboptim extend set includ block current resid cach b ie set whose extend set larger associ cach a block extend set whose next refer farthest futur found block current resid cach b swap one cach b block extend set incom block place cach block set next referenc farthest futur move cach b overl one block cach b block next referenc farthest futur replac choic optim case illustr follow exampl refer pattern figur consid design directmap cach size block set one block cach b refer shown gure block address upper case letter map set lower case letter map set cach a gure show content set set cach cach b memori access use pseudoopt incur miss rst compulsori miss empti block replac c time sinc c next referenc futur f b time replac b replac f rather d final f c miss howev minimum possibl number miss achiev replac f in set cach instead c in cach b time e replac b time swap b c nalli f miss c hit case b cach fulli associ pseudoopt reduc opt although pseudoopt also implement polici perform seen tabl close opt furthermor pseudoopt perform much better implement multilater scheme perform perform dierenc implement scheme opt thu due nonoptim alloc replac decis small portion perform dierenc no dierenc opt pseudoopt due restrict associ implement scheme therefor use pseudoopt comparison implement scheme order elimin associ dierenc evalu give better idea realiz perform limitedassoci multilater cach dierenc placement replac decis seen implement scheme provid insight perform rel nearoptim scheme simul environ evalu opt pseudoopt scheme collect memori refer trace gener simplescalar processor environ trace entri contain eectiv address access type access load store program counter instruct respons access skip rst million instruct to avoid initi eect analyz subsequ million memori refer limit number memori refer evalu due space process time requir perform opt pseudoopt cach evalu experi use spec integ benchmark compress gcc go li perl sinc sampl small portion oat point program like gener refer form part regular loop result low miss rate howev sampl trace integ program reason mirror actual memori refer behavior complet program execut shown section trace annot includ inform necessari perform opt pseudoopt replac decis counter mani use statist includ outcom access hit miss would occur optpseudoopt congur usag inform block tour as seen scheme number block reus categori cach instant time ie number ntn nt tn ts block resid cach statist gather inform regard perform opt pseudoopt manag scheme compar perform implement scheme optim scheme accessbyaccess basi due smaller size input set section compar full program execut perform section chose directmap kb cach fulli as soci kb b cach b blocksiz pseudoopt congur opt congur simpli k fulli associ cach use larger k cach section evalu would use determin scheme perform spec benchmark alreadi small moder size work set rel short trace would show littl perform benet activ manag larg cach wherea benet activ manag highlight use smaller cach mlcach simul use section deal cach memori processor without processor eect time littl signic mlcach use behaviorallevel simul result analysi opt vs pseudoopt analyz annot trace produc opt pseudoopt run determin rel perform base miss ratio measur block usag inform particular count number tour show reus pattern number type block resid cach given instant often block prior reus characterist chang usag pattern subsequ tour miss ratio miss ratio tabl show perform pseudoopt rel close opt except go note miss ratio experi straightforward perform metric simul behavior includ access latenc processor latencymask eect go perform dispar opt pseudoopt due limit associ cach possibl also compress gcc go li perl pseudoopt tabl miss ratio kb kb cach congur trace input pon pseudoopt noswap scheme suboptim replac polici pseudoopt replac number swap done opt rearrang cach content least desir cach block replac howev pseudoopt movement choic limit map requir directmap cach one block map set b associ incom block need swap replac despit limit choic block replac perform pseudoopt still close opt except go dierenc perform pseudoopt opt alway much smaller dierenc implement congur pseudoopt actual perform implement scheme discuss section addit advantag futur knowledg pseudoopt dier implement scheme freeli allow block move b cach order obtain best block replac howev movement actual account littl perform dierenc seen pseudoopt implement scheme verifi claim creat version pseudoopt call pon pseudoopt no swap disallow data movement cach manag scheme use pon pseudoopt except block swap cach b time incom block replac block b set next referenc farthest futur pon thu possibl replac block cach b referenc sooner futur block set extend set cach b could replac swap allow howev see tabl miss ratio pseudoopt pon actual compressopt compresspo gccopt gccpo goopt gopo liopt lipo perlopt perlpo benchmarkschem block cach by ts tn nt ntn figur dynam cach block occup opt pseudoopt denot po group ntn nt tn ts usag pattern close indic omiss intercach data movement small eect nearoptimum perform particular perform dierenc pseudoopt pon much smaller dierenc pseudoopt implement scheme show major advantag pseudoopt come manag use futur knowledg oppos abil move block cach sinc multilater scheme allow data movement b cach use pseudoopt basi comparison implement multilater cach scheme cach block local analysi examin local cach block resid cach structur given time count number block categori time miss take averag durat program local cach block opt pseudoopt congur shown figur opt pseudoopt manag cach expect data exhibit tempor reus occupi larg portion cach space nontempor data occupi cach compress pseudoopt furthermor vast major block l tempor spatial though block rel small size byte nd spatial reus exploit well cach manag properli expect pseudoopt congur vs opt congur gener hold fewer ts block compress gcc go li perl compress gcc go li perl tour opt pseudoopt persist persist figur usag persist within opt pseudoopt cach due pseudoopt congur limit placement option suboptim replac decis howev perl except observ opt pseudoopt perl data cach spatial ts nt seen figur keep nt block cach long enough obtain ts statu done pseudo opt slightli increas miss ratio perl benchmark opt indic maxim number ts block cach alway best polici block usag persist presenc certain type block cach show potenti benet manag cach reus inform manag base inform straightforward block dierent usag characterist dierent portion program execut make block usag hard predict predict particular block usag pattern similar branch predict problem howev branch outcom easier predict optim block usag characterist aid placement decis assess valu reus inform examin persist cach block behavior opt pseudoopt scheme ie block exhibit given usag characterist current tour like maintain characterist next tour high correl past futur use ie block usag characterist persist predict futur usag behavior easier block persist term notsam therefor analog samedirect terminolog use branch predict studi predict path specic branch take given behavior histori instead determin block persist term four usag pattern ntn nt tn ts decid examin persist nt pattern coarser granular group directli relev placement decis unit cach structur figur present data block usag persist success tour gener block exhibit nt usag behavior prior tour strong likelihood exhibit nt behavior futur tour opt scheme likelihood rang perl compress evalu benchmark howev pseudoopt scheme show somewhat less persist rang go compress nt block over all persist nt block opt pseudoopt scheme well block exhibit usag behavior less persist thu less predict block persist opt scheme rang go li similar pseudoopt compress li li skew number somewhat regardless type usag characterist block exhibit tour next tour highli like exhibit tempor reus tempor block persist li much less persist three benchmark compress gcc go perl repres wider rang program execut li alon see futur tour tempor block harder predict nontempor block ie tempor tag block weakli bias toward exhibit usag pattern next tour multilater scheme perform given perform reus inform opt pseudoopt congur determin implement scheme perform result restrict evalu implement scheme nt pc two multilater congur activ place data within l base individu block reus inform miss ratio perform nt pc compar pseudoopt congur use congur nt pc structur kb directmap cach kb fulli associ lrumanag cach b block size entri detect unit du miss ratio perform two congur shown tabl along perform opt pseudoopt pon directmap kb singl structur cach concurr result earlier analys multilater congur nt pc cach perform well directmap cach nearli twice size howev perform pseudoopt indic still room improv predict accuraci nt make placement decis base given block usag recent past block exhibit nontempor reus place smaller b cach next tour otherwis place cach pc make placement decis base reus block load memori access instruct recent replac block load particular pc exhibit nontempor reus next block load pc predict place smaller b cach otherwis place larger cach scheme access block match entri du place cach default accuraci predict determin base actual usag block pseudoopt scheme instanc predict behavior block classi correct actual usag block pseudoopt scheme t note section annot trace fed tracedriven cach simul modi version mlcach contain actual block usag inform tour seen pseudoopt scheme simul provid inform select scheme block predict actual usag accuraci given inform easi determin well congur predict block usag consequ whether properli place within tour predict accuraci actual usag accuraci nt pc nt pc compress total total go total total perl total tabl tour predict actual usag accuraci nt pc broken nt t overal total accuraci accuraci rel actual block usag pseudoopt l cach structur tabl show predict accuraci nt pc benchmark examin gener ignor li due excess high tempor reus predict accuraci rel low rang compress nt go pc despit larger granular block type two categori nt rather complet four categori breakdown nt pc scheme show poor predict accuraci directli impact block alloc decis result overal perform improv block usag predict scheme may result better block placement higher perform actual usag accuraci regardless predict accuraci given block exhibit reus characterist base durat time tour cach examin actual usag block evict cach implement scheme see usag compar block usag pseudoopt scheme comparison shed light eect elimin movement block cach l tour compress gcc go li perl pseudoopt nt pc kw tabl averag tour length pseudoopt nt pc directmap singl cach tour length measur number access handl block cach tour broken nt t see tabl rel low predict accuraci saw section actual usag block cach closer actual usag block pseudo opt thu despit placement decis block still exhibit reus behavior akin seen pseudoopt congur furthermor although nt exhibit lower tour predict accuraci pc in benchmark except li exhibit higher actual usag accuraci in benchmark except perl tour length accuraci interest block tour length implement scheme directli relat tour length pseudoopt scheme pseudoopt elabor replac polici dispar tour length aect comparison two way first tour shorter pseudoopt congur implement scheme implement scheme may keep block l longer necessari permit exhibit seemingli beneci usag pattern ie tn ts make particular block seem use longer presenc block l implement scheme may unduli shorten tour signic number block lead misclass preclud optim placement convers tour longer pseudoopt implement scheme correspond block implement scheme may replac exhibit optim usag characterist caus poor usag accuraci poor predict accuraci poor placement small b cach henc shorter tour length tabl show averag tour length block show nt usag characterist expect nt tour much shorter tour tour pseudoopt averag much longer tour either nt pc due futur knowledg greater exibl manag data enter l cach structur nt pc block place l remain cach replac thu subject replac polici inher correspond cach instanc block deem either nt pc place directmap cach subsequ block map set also mark t earlier evict possibl exhibit optimum usag characterist pseudoopt deem desir time block would simpli move b cach result tour length block would tend much longer pseudoopt nt pc see clear gap averag tour length block pseudoopt vs implement scheme dierenc tour length is howev much larger dierenc miss ratio implement vs pseudoopt scheme perform dierenc much smaller averag tour length pseudoopt increas greatli tour length con ict block may help much better manag scheme block may chosen remain cach nearli entir program execut access regularli though necessarili frequent would thu long tour length longliv block greatli increas averag tour length seen benchmark though may reduc overal number miss small amount studi see improv upon predict usag characterist block manag block place l cach structur might improv perform nt pc scheme reduc perform gap exist scheme pseudoopt see tabl multilater scheme increas tour length rel singl directmap cach structur nearli size indic scheme make decis improv data usag perform rel convent cach conclus paper evalu three dierent implement methodolog mat nt pc manag onchip data cach base activ block alloc via captur exploit reus inform gener activ manag cach structur signi cantli improv upon perform tradit passivelymanag cach structur similar size compet one nearli twice size further individu eec tive address reus histori scheme use nt gener give better perform macroblock eectiv addressbas mat pcbase pc approach compar perform pc nt scheme perform nearoptim manag cach structur pseudoopt dierenc perform block usag predict actual block usag tour length implement scheme pseudoopt show much room improv activelymanag cach thu multilater cach structur activ place data within cach show promis improv cach space usag howev predict strategi use current scheme simpl improv predict algorithm well activ manag block place l cach structur activ replac help improv perform implement scheme may enabl approach optim cach space usag acknowledg research support nation scienc foundat grant mip gift ibm simul facil provid intel technolog educ grant r studi replac algorithm virtual storag comput evalu futur microprocessor simplescalar tool set prefetch memori system behavior spec benchmark suit reduc memori latenc via nonblock prefetch cach improv cach perform select cach bypass data cach multipl cach strategi tune di document improv directmap cach perform addit small fulli associ cach prefetch buer reduc con ict directmap cach temporalitybas design util reus inform data cach manag improv perform l cach associ bu earli design cycl time simul cach mlcach exibl multilater cach simul tr ctr prabhat jain sriniva devada daniel engel larri rudolph softwareassist cach replac mechan embed system proceed ieeeacm intern confer computeraid design novemb san jose california salvador petit julio sahuquillo jose m david kaeli exploit tempor local drowsi cach polici proceed nd confer comput frontier may ischia itali mark brehob richard enbodi eric torng stephen wagner onlin restrict cach journal schedul v n p marchapril mark brehob stephen wagner eric torng richard enbodi optim replac nphardfor nonstandard cach ieee transact comput v n p januari mark brehob richard enbodi eric torng stephen wagner onlin restrict cach proceed twelfth annual acmsiam symposium discret algorithm p januari washington dc unit state wang nelson passo improv cach hit ratio extend referenc cach line journal comput scienc colleg v n p april martin kamp per stenstrom michel duboi selfcorrect lru replac polici proceed st confer comput frontier april ischia itali j sahuquillo s petit a pont v milutinovi explor perform split data cach scheme superscalar processor symmetr multiprocessor journal system architectur euromicro journal v n p august zhigang hu stefano kaxira margaret martonosi timekeep memori system predict optim memori behavior acm sigarch comput architectur new v n may youfeng wu ryan rakvic lile chen chyichang miao georg chryso jess fang compil manag microcach bypass high perform epic processor proceed th annual acmiee intern symposium microarchitectur novemb istanbul turkey