t dynam verif c gener algorithm a abstractdynam verif new approach formal verif applic gener algorithm found standard templat librari stl part draft ansiiso c standard librari use behavior abstract symbol execut techniqu verif carri abstract level result use varieti instanc gener algorithm without repeat proof achiev substitut type paramet gener algorithm special data type model gener concept accept symbol input deduc output use infer method itself symbol execut techniqu support test program symbol valu abstract level formal verif also need gener multipl program execut path use assert to handl loop exampl show achiev via direct convent debugg program analysi databas assert must still suppli packag separ evalu need appropri transfer control orchestr via debugg unlik previou verif method dynam verif method thu work without transform sourc code process special interpret includ exampl formal verif stl gener algorithm b introduct present new approach formal verif program call dynam verif applic c templatebas gener algorithm wherea previou verif method transform sourc code process special interpret verif condit gener dynam verif method abl work directli origin sourc code compil convent compil method depend two key insight first rather view type paramet gener algorithm complic turn advantag substitut special data type call runtim analysi oracl rao work symbol input comput output use infer method itself techniqu form symbol execut support test symbol valu therebi cover larg infinit set input individu test set data type cover rao also infinit includ data type nonisomorph such one type oper commut anoth type oper noncommut someth need howev formal verificationth abil control program execut path use assert such function pre postcondit loop invari bring us second key insight behind dynam verif achiev necessari control via direct convent debug system assert must still suppli packag separ symbol execut need appropri transfer control achiev set breakpoint similarli use debugg command help analysi databas caus program execut multipl execut path need case analysi induct proof method briefli describ metalevel program analysi system mela support dynam verif method c templatebas gener algorithm mela extend convent debug system addit command formal verif symbol test rapidprototyp use execut specif sinc mela extens debug tool mani programm alreadi familiar with appli select small program segment help achiev widespread use symbol execut formal verif technolog mela still develop preliminari version suffici capabl formal verifi simpl gener algorithm taken directli ansiiso c standard templat librari stl give one exampl paper relat experi exampl mani aspect dynam verif method base part previou work execut formal specif abstract data type gener concept axiomat treatment imper program languag case adapt previou method make possibl use without transform sourc code organ part symbol execut method deal type librari rao rao two distinct level call interfac level infer level structur similar larch specif major differ larch specif execut requir dynam verif logic foundat way dynam verif deal imper program construct eg assign condit loop statement base axiom infer rule similar spirit hoar axiomat approach differ import detail use hoar tripl forwardassign axiom justifi way symbol execut proce program statement normal forward order as oppos backward order necessari usual assign axiom hoar system also treat loop differ hoar approach instead use loop invari assert use prepost condit infer rule akin subgoal induct method detail formal foundat found algorithm gener algorithm call gener express term type function paramet instanti mani differ way produc differ version algorithm simpl exampleon take detail laterconsid algorithm algorithm copi sequenc valu data structur locat anoth data structur rang locat copi indic stl object call iter gener c pointer discuss actual stl algorithm later moment let us simplifi matter somewhat consid version use pointer sourc sequenc indic use two pointer first last point first locat one beyond last locat copi destin indic singl pointer result point first locat valu copi copi oper might code templat function c templat class t class u although use symbol execut softwar verif goe back earliest program verif system forward assign axiom sometim mention literatur eg see p awar axiomat system approach basi u copyt first t last u r f last return result instanc algorithm creat use type u assign with oper defin right hand side type left hand side type u exampl int a doubl b code initi array call copi array array b call shift aa left one posit copya call shift bb left ten posit call copi aa aa base call three differ instanc copi algorithm creat c compil type signatur doubl copyint int doubl int copyint int int doubl copydoubl doubl doubl first instanc use call second call third call instanc legal c defin assign int doubl viceversa follow call might legal declar class name x array object type x would allow assign type int valu type x variabl defin definit copi work paramet mani differ type actual definit copi use hewlettpackard implement stl even gener templat class inputiter class outputiter outputiter copyinputiter first inputiter last outputiter result first last return result instead pointer type t u algorithm written term type call inputiter outputiter version work must abl obtain inputiter oper first version t name disequ predic increment dereferenc similarli outputiter must abl obtain oper u name increment dereferenc moreov oper must certain semant properti similar pointer type order algorithm work correctli pointer type requir properti all exampl call previous given still work version mani possibl way defin type satisfi iter type requir exampl stl defin list iter follow link linkedlist represent increment copi list array exampl thu second version copi much gener first next section show formal captur repres semant properti common data type use replac type paramet such inputiter outputiter gener algorithm overview tecton concept specif tecton specif languag describ use abstract concept formal softwar develop hardwar design one main goal tecton reduc need proof tecton achiev goal support behavior abstract data abstract well use behavior abstract softwar hardwar compon purpos partial specifi omit irrelev properti thu singl tecton specif cover broad categori compon share set properti one proof abstract level tecton specif use varieti instanc without repeat proof basic unit tecton specif tecton concept descript tecton concept descript determin concept defin set manysort algebra manysort algebra pair hs fi ffl index famili set map collect sort name collect set ffl f index famili function f map collect function descript collect function constraint pair ffi f f ffi domain sort rang sort r f function domain ss tecton concept describ seri statement definit abbrevi extens realiz lemma statement introduc refer concept name call subject concept definit concept descript conceptnam refinesclaus usesclaus refinesclaus list previouslydefin concept definit extend new sort oper properti usesclaus list previouslydefin concept use definit without intent extend them introducesclaus list sort andor function introduc definit generatesclaus limit set correspond sort contain element gener function list claus obeysclaus list properti must satisfi algebra concept five claus option least one must present exampl tecton concept definit are introduc bool true bool fals bool gener bool freeli use true fals use boolean introduc domain domain domain bool introduc domain domain domain obey for x y z domain x refin use claus empti definit call simpl concept definit algebra hs fi belong concept denot simpl concept definit sort introduc belong domain s function descript introduc belong domain f properti obey list true statement set function f gener claus ani satisfi concept descript inherit sort function properti concept descript list refin use claus formal let c concept list refin use claus concept descript d algebra fi belong ds concept c x member intersect c requir regard simpl concept definit explan kind tecton statement see abstract implement unless contain generatesclaus tecton concept definit necessarili defin singl abstract data type even set isomorph abstract data type exampl concept definit associativebinaryop oper fulli defin algebra oper defin obey associ properti includ concept includ algebra integ usual oper algebra charact string defin concaten string algebra isomorph sinc first oper commut second not thu imposs implement tecton concept descript program languag use convent abstract data type definit mechan normal c class without lose gener allow gener algorithm dynam verifi need construct special data type possess follow properti ffl use compil like normal data type replac type paramet gener algorithm ffl compil program execut convent program execut environ ment ffl valu type repres symbol relat comput infer mechan provid data type develop new implement method call abstract implement abstract implement tecton concept descript consist two layer interfac data type written program languag set rule repres tecton concept call former runtim analysi oracl rao latter infer engin ie current implement rao repres c class ie implement prolog program a set rule deriv concept descript rao i loos connect messagepass mechan infer engin infer engin ie comput system deriv result input use logic reason maintain semant symbol valu base construct execut specif consist set axiom infer rule i use paper deriv way similar describ set tecton concept specif necessarili construct ie usual consist sever part interfac set function receiv queri command client send result back client command usual translat databas access function access fact databas fact databas store manag knowledg symbol valu form set constraint b b symbol valu knowledg fact databas dynam enhanc chang client updat command fact databas also access infer rule deriv new fact old infer rule separ client interfac may complex would obtain straightforward translat properti tecton specif exampl consid follow tecton definit specifi properti equal oper equal refin set obey for x y z domain unlimit use last properti transit result infinit loop break cycl correspond prolog rule express use auxiliari list symbol alreadi seen auxiliari function member check membership list memberx x memberx y memberx y equal infer rule express prolog follow note oper mean logic mean not repres true equaldx y equaldi x equaldx y equaldi x memberi t enough inform repres unknown possibl outcom the rule shown allow deriv outcom possibl addit rule disequ runtim analysi oracl infer engin cannot use directli data type instanti c gener algorithm formal rule i use c gener algorithm develop mechan call runtim analysi oracl rao bind i c gener algorithm verifi rao c class interfac data repres symbol valu function oper symbol valu reli formal rulebas i stateindepend symbol comput make represent gener easi manipul repres data string instanc data rao total order concept implement follow class totalord string v public totalorderconst string semant symbol valu defin infer rule constraint valu or fact store fact databas ie rao function usual partial defin basi formal rule i rao translat function call queri i combin answer back result function call exampl follow definit oper total order rao comparison two object rao translat ie answer queri ie total order concept bool operatorconst totalord x const totalord y return ieanswerx y ls ml ie answer also translat result ie back bool return valu oper sinc data rao symbol valu semant interpret fact infer rule see section mean data easili chang alter set fact i symbol valu weaker constraint cover larger state space program thu pose weak initi constraint symbol input algorithm analysi wide rang execut path cover howev also mean branch point execut path tree i find enough fact fact databas answer queri handl situat rao must abl determin ie enough fact answer queri not must obtain new fact process queri fact obtain must ad databas later use two sourc rao get addit fact first rao dynam ask user decid answer second answer queri separ gener case analysi approach keep track possibl miss fact analysi databas specif techniqu dynam verif section describ specif techniqu develop dynam verif allow specif defin set highlevel formal rule yet also directli evalu execut environ program verifi dynam verif system program segment specifi describ precondit state postcondit state like larch specif specif dynam verif twotier interfac specif consist assert program state make one tier abstract concept specif defin semant symbol valu primit concept assert depend constitut tier major differ specif method dynam verif larch goal larch mainli use system develop static program analysi use specif support dynam program analysi thu specif system execut larch not make specif execut interfac specif use construct target languag c whole specif templat function packag templat class call specif class contain list variabl call save list three function precondit function postcondit function updat function mani case postcondit must refer state execut specifi statement state afterward save list specif class hold variabl prior state postcondit refer precondit function two thing call first save current symbol valu variabl save list second evalu precondit specif postcondit function evalu postcondit updat function key techniqu induct verif also use fastprototyp specif updat state execut specif instead origin program segment note specif class written c one part entir specif templat function primit concept relat symbol valu state assert reli defin formal infer rule i link specif class rao exampl consid interfac specif stl gener copi algorithm discuss introductori section call copyfirst last result copi sequenc valu rang locat determin iter first point first element last point one posit past last element rang begin locat result point let rangefirst last denot sequenc iter first first last extend cc dereferenc oper rangefirst last mean first first last rangeiter t rao whose symbol valu rang iter derefer valu type t similarli rangevaliter t rao correspond type sequenc valu iter valu refer iter paramet instanti rao distanc function use specif defin axiom i convent write specif class copi follow includ rangesh includ rangevalh templat class inputiter class outputiter class t class copyspec rangevalt ssv inputiter firstsv lastsv outputiter resultsv public bool precondinputiter first inputiter last outputiter result tmp tmp return true els return fals outputiter postupdateinputiter first inputiter last outputiter result outputiter resultitrplusdistancefirst last return result bool postcondinputiter first inputiter last outputiter result outputiter resultsvitrplusdistancefirstsv lastsv return isequalresult tmp rangeresultsv tmp ssv mela system mela metalevel integr analysi system develop analysi c templatebas gener algorithm allow user verifi test fast prototyp c gener program metalevel directli differ analysi method even integr use analysi session one part program analyz one method anoth part analyz anoth method mela consist control infrastructur coordin analysi activ implement top gnu cc debug system gdb databas manag analysi data control coverag analysi path commun infrastructur link i rao verif test gener algorithm carri fulli automat manual automat analysi gener algorithm control gdb command script determin process analysi check specif dynam verifi gener algorithm mela need emb main function compil convent compil execut run debug system main function gener algorithm call object suitabl rao exampl verifi stl copi algorithm creat follow main function includ prologagencyh includ dbagenth includ inputitrh rao input iter properti includ outputitrh rao output iter properti includ equalityh rao equalitydisequ properti includ copyspech specif stl gener copi algorithm ityp rao input iter outputitrequ otyp otyp rao output iter copyspecityp otyp equal a b instanti copyspec creat b use proof dbagent db databas agent give access analysi databas includ stlalgobaseh definit stl gener copi algorithm int main ityp ff otyp rr rptr program f l r rao object symbol valu f f d r respect b object copi spec specif class copi algorithm we discuss usag section object db allow mela access analysi databas note templat algorithm analysi copi need process transform includ main function directli librari prepost condit function defin copi spec insert call copi sourc code compil link environ main function call verif system via debugg verif carri actual verif gener algorithm mela carri follow process first start execut program mela weak constraint input or initi constraint choos limit set execut path next mela stop execut first line algorithm call precondit function save valu later use postcondit check condit true fals verif attempt termin true mela resum execut stop last line algorithm mela call postcondit function see postcondit true so particular path taken algorithm verifi otherwis not one execut path within algorithm mela go everi path user choos analyz algorithm verifi path verifi analyz multipl path databas system use organ assumpt along path assert queri sent infer engin ie return unknown current path split two one branch take assert new assumpt anoth take negat assert new assumpt time user forc program execut particular point along path flush exist assumpt load assumpt made along path point rerun program descript gener detail depend concret languag construct use program segment exampl consid verif process loop other construct gener easier deal with mela loop verifi induct induct rule split verif basi case induct case case verifi loop verifi detail follow start mela load analysi databas gener algorithm verifica tion check databas see path wait verifi not exit mela execut program initi assumpt load fact databas stop first line statement call aprecond save prestat whole loop evalu precondit fals verif attempt fail true continu execut unknown answer rao yesno question make assumpt make precondit true usual one specif object enough save state variabl induct verif two object specif class need b evalu whileloop condit rao may ask user case analysi control input complet evalu differ input may lead differ path case fals whileloop condit exit loop check apostcond fals loop verifi true pass control case analysi control check databas anoth path wait verif path verifi run program go back begin loop evalu whileloop condit step true execut bodi loop stop first line loop check bprecond save prestat valu updat function specif call bpost updat use valu save updat state program correspond appli induct hypothesi check apostcond fals loop verifi true loop verifi verif copi algorithm follow transcript fulli automat verif stl gener copi algorithm given end section recal algorithm taken directli hewlettpackard implement stl four kind prompt use mela msg iter rao gdb text mela msg contain inform hint analysi system follow iter rao yesno question ask rao direct mela prompt gdb user input gdb command start verif call gdb initi file copygdbinit command script set breakpoint copi copi spec sourc code avscsrpiedu gdb aout x copygdbinit q welcom melasgdb object b use avoid overwrit prestat save a breakpoint file copyc line breakpoint file fsgradswangcstlalgobaseh line breakpoint file fsgradswangcstlalgobaseh line breakpoint file fsgradswangcstlalgobaseh line breakpoint file fsgradswangcstlalgobaseh line gdb run start program fsgradswangccopyaout breakpoint main copyc mela alway stop execut first line program allow user set analysi method breakpoint pleas specifi name databas usual main part sourc file name current analysi mode verif test debug set automanu mode final type start continu t d default d gdb start automat verif chosen command start load analysi databas read file studentsgradswangcrosedbdirectoryros read standard format done read file studentsgradswangcrosedbdirectoryros write design directori file studentsgradswangcrosedbdirectoryros read file studentsgradswangcrosedbassumptionsros read standard format done read file studentsgradswangcrosedbassumptionsros databas success load gdb command cont resum execut program gdb cont continu mela msg stop first line bodi copi mela msg check precondit copi call mela msg set paprecondfirst last result mela msg precondit true mela check precondit mela msg continu next state input iter rao assum f fd mela resum execut make assumpt symbol valu automat case assum f fd f fd f symbol iter valu symbol integ valu mean sourc rang copi algorithm empti thu basi case mela msg check postcondit basi case mela msg set psapostcondfirst last result mela msg postcondit true mela check postcondit basi case induct verif begin verif next path mela msg begin analyz next path mela msg stop first line bodi copi mela msg check precondit copi call mela msg set paprecondfirst last result mela msg precondit true mela msg continu next state input iter rao assum f fd mela msg check precondit induct step inner mela msg set pbprecondfirst last result mela msg precondit induct step true mela check precondit induct step save state specif object b mela msg appli lemma induct step call mela msg call bpostupdatefirst last result mela call post updat function state save b mela msg check postcondit induct step call mela msg set psapostcondfirst last result mela msg postcondit true unanalyz path mela check postcondit check analysi databas analysi path left thu induct verif algorithm complet conclus present new approach formal verif call dynam verif applic c templatebas gener algorithm method employ hoarestyl prepostcondit specif symbol execut base forward assign axiom rather usual backward substitut whileloop infer rule base subgoal induct symbol execut mechan includ multipl runtim analysi oracl consist provid c interfac one rulebas infer engin briefli describ mela system support dynam verif method mela extend convent debug system addit command formal veri ficat normal symbol test rapidprototyp use execut specif sinc mela extens debug tool mani programm alreadi familiar with appli select small program segment assist achiev widespread use symbol execut formal verif technolog mela still develop preliminari version suffici capabl formal verifi simpl gener algorithm taken directli ansiiso c standard templat librari one exampl gener copi algorithm discuss paper anoth stl gener adjacentfind algorithm search sequenc first pair adjac equal element interest point adjacentfind correct origin specifi origin specif said adjacentfind could use input iter input iter properti necessari correct algorithm need forward iter input iter addit properti error notic correct later version attempt use mela verifi origin version fail revis specif abl complet proof third complex exampl verifi mela stl merg algorithm contain loop ifthenels statement also make two call copi algorithm one nest argument list other practic use one gener algorithm program anoth typic stl lead reduc overal effort verifi algorithm exampl proof merg call copi dealt use postupd function copi spec make proof simpler copi written line loop would requir specif induct proof loop r selecta formal system test debug program symbol execut lclint tool use specif check code use assert declar oper model autom debug specif prefer execut scienc program et al larch languag tool formal spec ific an axiomat basi comput program tecton framework specifi verifi gener system compon tecton languag manipul gener object an overview tecton proof system a new approach program test the applic symbol mathemat system program verif twodimension pinpoint debug formal specif construct autom test oracl effort produc reliabl softwar program verif subgoal induct ada gener librari linear list process packag basi formal specif verif gener algorithm c program verif base denot semant tao test analysi oracl support a practic approach program assert pv specif languag pv proof checker refer manual draft specifi test softwar compon use adl standard templat librari integr tool method rigor analysi c dynam verif c gener compo nent practic method support system tr ctr dougla gregor sibyl schupp stllint lift static check languag librari softwarepractic experi v n p march stephen h edward murali sitaraman bruce w weid joseph hollingsworth contractcheck wrapper c class ieee transact softwar engin v n p novemb antoy dick hamlet automat check implement formal specif ieee transact softwar engin v n p januari