t implement construct synchron program poli a design tool embed reactiv system commonli use model comput employ synchron asynchron commun style form junction two implement synchron languag circuit esterel asynchron network poli implement fact propag key concept synchron construct semant asynchron nondeterminist network poli node cfsm save state local deduc fact network global propag fact them result correct implement synchron inputoutput behavior program model composit thu permit implement variou level granular one cfsm per circuit gate one cfsm per circuit allow one explor variou tradeoff synchron asynchron implement b introduct purpos reduc gap two distinct model concurr fundament embed system framework synchron asynchron model applic system written esterel synchron program languag implement poli system develop uc berkeley cadenc synchron zerodelay model use circuit design synchron program languag esterel lustr signal syncchart a synchron version statechart see global overview model bookkeep action control transmiss signal broadcast conceptu perform zero time explicit delay take time thu conceptu global clock control precis statement simultan comput exchang messag model make possibl base design determinist concurr much easier deal classic nondeterminist concurr compil optim verifi program done use power boolean comput techniqu see synchron model wellsuit direct specic implement compar compact program protocol control humanmachin interfac driver glue logic case one build global clock slow enough react possibl environment input asynchron model process exchang inform messag nonzero travel time asynchron model wellsuit networkbas distribut system speci cation hardwaresoftwar codesign rel speed compon may vari work begun rst author visit cadenc berkeley laboratori august wide mani asynchron formal vari commun polici ex ampl csp process commun rendezv dataaeow process exchang data queue buoeer poli mix synchronousasynchron model develop uc berkeley cadenc primari focu codesign global asynchron local synchron gal model synchron node call cfsm codesign finit state machin arrang asynchron network commun use nonblock place buoeer synthes realtim oper system rto softwar part cfsm program concurr synchron languag esterel thu take maxim advantag synchron model node level model eoecient simul implement hardwar andor softwar notic place buoeer much simpler implement fifo especi hardwaresoftwar boundari howev poli network much less intrins semant safeti fifobas dataaeow kahn network behavior determinist behavior must care control particular buoeer overwrit poli lead nondeterminist behavior hard analyz prove correct here show behavior synchron circuit program nice implement poli network cours one implement synchron program singl cfsm node straightforward way here interest distribut implement synchron behavior split asynchron commun unit without global clock practic use applic behavior natur synchron execut architectur distribut possibl heterogen physic input output link dioeerent comput unit retain synchron philosophi specifi applic benet aeexibl eoecienc cfsm network implement propos solut cfsm granular chosen will part synchron program implement singl synchron cfsm make possibl partit program accord architectur constraint best synchronyasynchroni compromis author propos distribut implement synchron program asynchron network see exampl draw much work howev implement take maxim advantag semant object deal present dioeerent trivial correct proof technic speak present poli implement construct synchron circuit class wellbehav cyclic circuit gener usual class acycl circuit sinc esterel program translat construct circuit implement handl esterel well key implement synchron program realiz conceptu zerodelay reaction input assign distribut asynchron network must done seri messag exchang implement messag cfsm event carri proven fact synchron circuit wire express valu fact exactli logic inform quanta construct semant base cfsm node gener output fact input fact accord semant deduct rule done seri comput sinc conceptu simultan fact arriv dioeerent time singl reaction program number event uniformli bound buoeer overwrit occur network although intern behavior nondeterminist overal behavior respect synchron semant origin program thu de terminist true independ schedul employ rto addit execut success synchron reaction pipelin final implement take full advantag mathemat properti construct semant particular composition properti make possibl arbitrarili group elementari circuit gate cfsm node allow level granular one singl cfsm program one extrem one cfsm per individu gate other clearli mani applic use synchron formal spec icat level make sens case result directli applic nevertheless think show appar distanc synchroni control asyn ijyxfigur circuit c chroni reduc hope technolog present serv basi futur mixedmod languag develop start section present logic semant electr view construct circuit section brieaey present poli cfsm network model comput implement construct circuit model present section discuss possibl applic synchronyasynchroni tradeoo section conclud section construct circuit construct circuit iwellbehavedj possibl cyclic circuit gener class acycl circuit acycl circuit view two dioeerent way ffl boolean equat system dene boolean function associ output valu assign input valu assign ffl electr devic made wire gate propag voltag certain delay input kept electr stabl long enough one two binari voltag say v v output stabil one binari voltag relat boolean electr approach easi acycl circuit output electr stabil take voltag correspond result boolean inputoutput function construct circuit exactli characterist even presenc cycl behavior cyclic circuit circuit input output intern wire latter also call local variabl exampl use letter j input xy output local make precis output necessari output local variabl dene equat express built use variabl oper negat conjunct disjunct simplic assum express e either variabl negat variabl singl nari oper appli variabl negat variabl circuit put form ad enough auxiliari variabl circuit also consid network gate pictur figur wire singl sourc multipl target gate correspond oper run exampl shall consid follow circuit c output x ae notic c cyclic appear equat x convers circuit boolean equat boolean view tri solv circuit equat use boolean valu input assign associ input variabl input assign complet associ valu input variabl complet assign i boolean solut circuit assign valu variabl satis equat acycl circuit exactli one boolean solut complet input assign cyclic circuit may zero one sever solut given complet input assign exampl consid case input one output x solut uniqu solut two solut uniqu solut solut equat reduc two solut circuit electr devic electr view one prefer use graphic present vocabulari wire associ variabl carri two dioeerent voltag also call simplic logic gate implement boolean oper wire gate propag delay shall accur delay technic delay model refer upbound inerti delay model describ complet input assign realiz keep input wire stabl time appropri voltag voltag propag circuit wire accord law electr properti interest wire voltag stabil bound time noninput wire assum initi unstabl output acycl circuit alway stabil output cyclic circuit may may stabi lize exampl output stabil output remain unstabl wire stabil valu alway satisfi equat stabil may depend delay exampl hamlet circuit dene output x stabil delay stabil other see stabil may also depend input assign c output stabil right boolean valu unless behavior delaydepend stabil delay construct boolean logic notic perfect match boolean electr solut lost cyclic circuit hamlet boolean output function wellden yield electr stabil may occur hamlet uniqu boolean solut happen solut not find solut involv propag noncaus inform cannot done nonsoothsay electron wire fortun boolean logic weaken construct boolean logic solut hamlet reject therebi render boolean electr result same solut exist construct boolean logic precis model electr behavior fact proof construct boolean logic deal fact proof fact form e boolean express input fact input variabl input assign set input fact fact deduc fact deduct rule deduct rule type gate one rule handl equat rule conjunct oper think x be land rand band fact horizont bar premis fact bar conclus rule band read follow fact rule orgat dual rule negat are notic x behav x y classic boolean logic rule circuit equat b either proof sequenc fact start fact input assign fact deduc previou fact use rule follow consist lemma show sound proof system easili shown induct length proof lemma exist proof fact proof proof exampl give proof exampl c present annot proof form write step deduc fact premis appli deduct rule annot proof complet input assign land band dual proof land band notic deduct order x rst next p revers order rst x next p main dioeerenc acycl construct circuit acycl circuit one nd dataindepend variabl order valid input assign construct circuit order exist input assign may datadepend exampl nonprov circuit circuit reject output proof reason way start proof notic exist nonexist boolean solut relev circuit exampl two boolean solut howev verifi either solut one would rst make assumpt solut verifi valid assumpt construct proof must propag fact allow make assumpt construct boolean logic reject hamlet circuit output fact proven abov way start proof without make assumpt law exclud middl x hold construct logic unless x alreadi prove output proof complet proof output proof proof prove fact output variabl complet proof proof prove fact variabl circuit output construct wrt complet input assign output proof start fact i circuit complet construct wrt complet proof start fact i dioeerenc fact need intermedi variabl output proof variabl need prove output fact even allow fact variabl prove consid exampl x output fact prove circuit output construct complet construct input assign although output construct seem gener shall deal complet construc tive sequel sinc much easier handl complet construct also requir semant esterel construct logic match delay independ construct boolean logic exactli repres delay independ given complet input as signment circuit electr stabil output wire resp wire gate wire delay output construct resp complet construct fundament result shown use techniqu origin develop asynchron circuit analysi notic given fact sever proof delay assign actual select proof consid output two proof rst one deduc second one deduc fact deduc electr speak rst proof occur propag xs gate second proof occur long delay input wire long enough propag xs gate scott fixpoint semant classic model boolean logic binari variabl take valu g construct boolean logic natur ternari semant model ternari model ternari domain g unden valu read bottom repres absenc nonprov inform domain partial order scott inform order total valu incompar tupl partial order componentwis x ioe x k k k function requir monoton must fx fy b n composit monoton function monoton function partial order f g fixpoint theorem key result scott semant xpoint theorem state simpl case monoton let xpoint f element x b n x theorem state f least xpoint lfpf nite limit increas sequenc function lfp associ least xpoint lfpf f monoton basic ternari oper boolean oper extend follow ternari logic choic negat must monoton dene choos parallel extens least monoton function close correspond electr gate behavior proof rule extens disjunct dual possibl extens strict extens left sequenti extens symmetr right sequenti extens denabl parallel extens construct logic hint express xx valu x denedse complet discuss extens interest note parallel extens cannot dene sequenti languag c requir parallel interpret mechan henc name circuit fixpoint oper circuit input vector variabl vector x dene equat form kth compon f given righthandsid equat x k given input assign i let us write f b n itself call solut circuit wrt least xpoint lfpf f exampl circuit c least xpoint input least xpoint next theorem show construct deduc fact exactli correspond xpoint solut theorem given circuit c dene function f input assign i fact construct provabl xcompon least xpoint f valu b unfortun author use f mean thing proof standard left reader use induct term size proof length notic theorem requir input assign complet also valid input then fact input use deduct conclud theori construct circuit electr stabil delayindepend way provabl construct boolean logic non valu least xpoint algorithm circuit construct algorithm detect whether circuit construct given input assign complet input assign here present lineartim algorithm work one complet input assign use esterel v compil interpret mode option i algorithm check construct input input class much complex bddbase algorithm use esterel v compil option causal present consid here interpret algorithm run data structur algorithm compos two set fact call todo array pred integ valu index noninput variabl name todo set initi contain input fact done set initi empti array entri predx initi number predecessor x number variabl occurr denit equat x also call fanin number electr present algorithm success take fact todo put done propag construct consequ may add new fact todo decrement predecessor count propag consequ fact work follow ffl variabl refer v denit decrement predecessor count accord number occurr v denit immedi determin fact ad todo occur dene conjunct v appear posit case disjunct v appear neg case symmetr fact propag rule correspond deduct rule land rand possibl combin not not ffl predecessor count variabl w fall valu w yet determin new fact ad todo c ident denit oper w ie correspond rule band execut exampl input start follow state remov todo put done decrement predecessor count x immedi impli add fact todo process consequ number predecessor decrement sinc determin itself process fact directli determin valu exhaust predecessor list deduc valu sinc empti conjunct add fact todo comput fact need howev use perform last step bring us back nice clean state process put fact done decrement xs predecessor count sinc build proof result algorithm depend order pick fact todo input run output valu comput faster cleanup longer nonconstruct input rapidli reach deadlock remain fact todo yet fact establish x predecessor count posit follow result show algorithm correct complet theorem let c circuit n variabl complet input assign circuit output construct wrt algorithm start comput fact output variabl circuit complet construct wrt algorithm termin predecessor count complet construct circuit algorithm alway take number step sum fanin count poli cfsm model recal goal implement synchron circuit within poli system poli softwar tool develop uc berkeley synthesi controldomin reactiv system target mix hardwaresoftwar implement primari featur poli underli cfsm model comput within model implement synchron circuit overview model comput consist network commun codesign finit state machin cfsm commun style call gal global asynchron local syn chronou node level cfsm synchron semant run cfsm read input comput write output instantan network level cfsm commun asynchron commun done via data transmiss buoeer assumpt made rel delay comput perform cfsm delay data transmiss cfsm commun cfsm set input output cfsm connect net net associ output one cfsm input cfsm inform transmit cfsm compos statu valu store place commun buoeer net one associ valu buoeer multipl statu buoeer one attach cfsm input thu cfsm local copi statu input valu store share buoeer cfsm input buoeer compos local statu buoeer share valu buoeer statu buoeer store either repres presenc absenc valid data valu buoeer cfsm input assign set valu store input buoeer cfsm equival circuit input assign given section cfsm input assign may complet partial captur input assign correspond status valu actual read buoeer cfsm run cfsm comput cfsm comput call cfsm execut cfsm run cfsm execut read input make comput write output reset consum input input read cfsm atom read reset statu buoeer simultan read statu buoeer set readi arriv new input subsequ read valu present input determin captur input assign comput cfsm use captur input assign make comput comput output next state base valu given state transit tabl comput done synchron mean cfsm react precis captur input assign regardless whether input chang cfsm comput output write output cfsm write valu buoeer subsequ atom set statu buoeer associ cfsm input cfsmevent consist output emit data correspond input statu buoeer set cfsm network comput network comput call network execut network run correspond sever cfsm execut cfsm network associ schedul schedul continu read current input assign determin cfsm runnabl choos order note word event use statu alon statusvalu pair poli cfsm may empti execut mean react current input case current input save input receiv cfsm determin empti reaction ad input assign restor thu read next run use featur here atom read write expens sinc requir implement guarante action happen simultan decis made poli make statu buoeer read write atom valuebuo read write atom read write short bit string implement eoecient guarante certain desir behavior properti system run them cfsm runnabl least one input statu buoeer set cfsm run schedul sometim runnabl typic input assign given network schedul run cfsm accord schedul chang commun buoeer call complet network execut time eoeectiv pass control return schedul thu instantan commun cfsm modul possibl implement construct circuit cfsm network section explain realiz synchron behavior circuit cfsm network facilit exposit restrict extrem case one cfsm per gate realist level granular handl section section present algorithm comput behavior circuit given circuit input assign essenti ingredi set todo fact propag set done establish fact predecessor counter variabl basic idea cfsm network implement present distribut similar algorithm network cfsm associ cfsm circuit gate equat start studi reaction singl input assign present variou way chain reaction handl circuit input assign sequenc obtain cyclic behavior characterist synchron system fact propag cfsm network implement gate cfsm read write fact encod poli cfsmevent sent one gate fanout arriv fact gate make gate runnabl and run provabl output fact fact receiv far gate cfsm output it fact propag gate directli perform underli poli schedul cfsmevent broadcast mechan poli execut schedul thu precis proof fact propag order fact arriv sequenti gate cfsm therefor combin circuit gate must implement sequenti cfsm rememb fact receiv far sequenti state gate cfsm encod number predecessor interpret algorithm section basic gate cfsm eas exposit write gate cfsm esterel make gate specic aeexibl use next section preliminari knowledg esterel requir handl run exampl suoec describ andnot gate gate similar esterel program andnot follow interfac modul andnot here a b c esterel signal type boolean valu call true fals esterel signal like poli buoeer addit notat event booleanvalu signal two compon binari presenc statu compon also written a take valu present absent valu compon type boolean written a choos encod fact present valu true resp poli schedul automat synthes paramet type schedul algorithm given user fals notic use two piec inform statu valu repres fact ie stabl valu wire present statu compon indic stabil ie fact propag point valu compon repres boolean valu fact like poli captur input assign esterel input assign dene presenc statu input signal valu present signal instanc andnot atruebfals esterel input assign present valu true b present valu fals encod fact input assign present valu fals b absent encod fact like cfsm esterel program repeatedli react extern provid input assign gener output assign process input assign also call reaction instant poli run esterel cfsm trigger exactli one reaction esterel program input assign unlik poli commun esterel instantan signal emit statement instantan receiv statement listen it similarli control propag instantan exampl sequenc p q q immedi start p termin statement break aeow control explicit delay iawait sj wait next occurr signal s final esterel signal presenc statu memor reaction reaction valu valu esterel express a reaction absent one previou reaction notic valu signal may chang signal present rst attempt write esterel bodi andnot is await a a emit cfals end b emit cfals end a b emit ctrue end program read follow first start two parallel thread rst thread wait presenc a second thread wait presenc b rst input assign present b present an empti assign neither b present would leav program state assign permit esterel never gener poli schedul absent rst thread continu wait present rst thread immedi check as valu a immedi output cfals a fals thu mimick land deduct rule thread termin immedi either case second thread behav symmetr check truth b emit cfals b present thread evolv simultan esterel parallel construct termin immedi branch termi nate therefor parallel statement termin exactli b receiv either simultan success input assign instant ctrue emit possibl memor valu a b respect true fals mimick band deduct rule negat second argument avoid doubl output gate cfsm almost work quit sinc cfals emit twice possibl dioeerent instant a fals b true gate output c onc correct problem use auxiliari boolean signal caux equival encod consid one exampl use pair pure signal variabl one presenc one valu encod use make clear dioeerenc avail valu sd figur partial state transit graph modul andnot signal caux combin boolean await a a emit cauxfals end b emit cauxfals end a b emit cauxtru end await caux emit ccaux signal rst branch outermost parallel behav emit caux instead c second branch wait caux emit c valu immedi termin caux emit twice success rst branch second emiss simpli unus sinc iawait cauxj statement alreadi termin icombin boolean andj declar smoothli handl simultan doubl emiss also call collis exampl collis occur afals btrue occur simultan case iemit cfalsej statement simultan execut combin declar speci result valu caux conjunct separ emit valu here could well use disjunct fals valu combin gate cfsm state graph gate cfsm state transit graph stg partial shown figur transit shown case receiv b case b arriv rst b arriv simultan similar pictur partial stg shown help visual sequenti state travers familiar syntax practic input mechan reactiv modul compar esterel languag exampl modul wait n signal concurr n state esterel descript size n note also c aux signal shown output list visual purpos intern signal seen modul gate cfsm execut exampl becom familiar esterel semant let us run andnot program two dioeerent input assign sequenc start state wait input b intern caux pictur underlin activ await statement signal caux combin boolean await a a emit cauxfals end b emit cauxfals end not a b emit cauxtru end await caux emit ccaux signal assum rst gate input assign atru b absent then iawait aj termin execut test inot aj sinc test fail rst parallel branch termin without emit caux reach state continu wait b caux signal caux combin boolean await a a emit cauxfals end b emit cauxfals end a b emit cauxtru end await caux emit ccaux signal input bfals execut b test also fail sinc second parallel branch termin parallel statement termin immedi execut ia bj test succe emit cauxtru make iawait cauxj statement instantan termin output ctrue emit sinc reach dead state signal await assum rst gate input assign afals b absent then start execut rst test succe emit cauxfals iawait cauxj statement immedi termin cfals emit continu wait b follow signal caux combin boolean await a a emit cauxfals end b emit cauxfals end a b emit cauxtru end await caux emit ccaux signal then b occur later input assign iawait bj statement termin program reach dead state b true emiss cauxfals perform unus last step wait b mimic last cleanup step propag algorithm section essenti chain cycl section b occur togeth rst input assign andnot immedi emit c appropri valu transit directli state dead state notic number predecessor wait algorithm section exactli number underlin statement among iawait aj await bj schedul figur cfsm network circuit c perform singl reaction network gate given circuit c cfsm network c obtain creat input buoeer input signal c output buoeer output signal gate cfsm equat c gate cfsm output broadcast gate cfsm use them speci circuit equat run network given circuit input assign i suoec put input valu dene network input buoeer then gate cfsm directli connect input becom runnabl soon gate comput result put output buoeer result valu automat transfer fanout cfsm input buoeer network cfsm becom runnabl execut exampl consid network c pictur figur cfsm x call cx cy rectangular buoeer place buoeer use commun cfsmevent modul note two inform storag mechan work execut circuit cfsmgate implement esterel modul intern store signal receiv thu still wait use implicit state cfsmnetwork implement poli store copi cfsmevent one fanout event use place buoeer consid input assign rst put fals is buoeer true js buoeer cfsm cx cy becom runnabl assum cx run rst captur partial input assign afals b absent encod cx cfsm output cfals encod goe state fals event made visibl cy b input buoeer time ffl assum rst cy run arriv cx output cy captur partial input assign atru b absent encod fact cy cfsm emit output continu wait b input state xs fals valu written cy b input buoeer cy made runnabl run captur input assign absent bfals emit ctrue encod goe dead state ffl assum instead cx fals output written cy input buoeer b cy run then cy later run captur complet input assign atruebfals encod fact emit ctrue goe directli dead state cy emit output ctrue true valu written cx input buoeer b cx made runnabl again then cx run input assign btrue absent encod goe dead state correct cfsm implement cfsm network comput proof way interpret algorithm section dynam concurr schedul fact propag build new fact equival gener cfsmevent propag fact equival broadcast cfsmevent fanout run fanout cfsm exactli network automat provid follow theorem summar result theorem let c circuit let n number output local variabl fanout let f number variabl occurr righthandsid cs equat fanin let circuit input assign run network associ c initi i follow hold number creat cfsmevent bound n number cfsm run bound f buoeer overwrit occur if complet network execut sequenc exactli n cfsmevent creat implement circuit complet construct wrt i output gate cfsm gener event encod output valu c wrt i complet execut sequenc give result independ schedul gate cfsm termin dead state cfsmevent process if complet run less n cfsmevent creat true run c complet construct wrt i output construct circuit handl slight modic result loos nice fact gate cfsm termin dead state use chain reaction demonstr next section chain reaction synchron circuit program meant use sequenti user rto provid sequenc input assign read sequenc output assign poli implement user altern write circuit input assign network input buoeer read comput circuit output assign network output buoeer sinc poli use place buoeer commun must make sure buoeer overwrit occur network particular cannot let user overwrit input buoeer valu complet process gate connect it four possibl userlevel protocol ffl wait given amount time techniqu use singleclock electr circuit sinc number oper perform uniformli bound underli machineri cpu network etc predict perform figur circuit c guarante reaction complet maxim predict time buoeer overwrit occur solut often use cycledbas control system implement softwar programm logic control plc protocol realiz implement addit perform estim order comput frequenc new input fed synchron circuit ffl comput return termin signal circuit complet construct wrt input know comput nish gate cfsm read input ie network process given number cfsmevent either modifi schedul report complet user build explicit termin signal gate output separ cfsmevent process input cfsmevent gather auxiliari gate gener termin event user input arriv central solut spirit distribut system ffl implement local aeow control protocol gate cfsm much natur solut distribut set make possibl pipelin execut input user may enter new valu soon aeowcontrol protocol say so without wait reaction complet protocol must ensur input conceptu synchron cycl never interfer valu cycl ffl queue input event solut use impli user alway write new input never block implement aeow control problem simpli push insid network sinc cfsm commun use queue present aeowcontrol protocol support pipelin reaction remain global wellord requir synchron model nth valu input process conceptu synchron cycl nth valu input j howev pipelin intern network cfsm schedul cfsmevent gener occur intric order make gate reusabl suoec emb bodi esterel iloopendj innit loop then instead go dead state gate cfsm return initi state much easier handl complet proof deal gener output proof add complic gate reset mechan reset automat perform complet proof thank aeexibl esterel code protocol requir slight modic basic gate code addit new modul correspond cfsm network shown figur consid output x cfsm m read exampl two cfsm n p x n resp p associ signal xfreen resp xfreep written n resp p x associ signal xfreem read written auxiliari modul xcfsm consum xfreen xfreep write xfreem xfreen xfreep receiv valu buoeer figur signal use poli actual inform determin signal x free written contain implicit state xcfsm new modul written follow modul xcfsm input xfreen xfreep output xfreem loop await xfreen await xfreep emit xfreem loop modul similarli network input broadcast n p gener network output buoeer ifre lled auxiliari cfsm read ifreen ifreep network output network input buoeer ofre lled user readi accept new valu o requir write x output xfreem hold consum valu requir n resp p write xfreen resp xfreep read local copi input x andnot cfsm modi follow modul andnot output afre bfree input cfree loop signal caux combin boolean await a emit afre a emit cauxfals end emit bfree b emit cauxfals end a b emit cauxtru end await caux await cfree emit ccaux signal loop output c emit last caux cfree receiv gate cfsm instanti node m afre bfree cfree buoeer must appropri renam afreem bfreem cfreem avoid name clash aeowcontrol mechan act two way first prevent buoeer overwrit second make pipelin possibl given circuit input assign n cycl n new valu circuit input cycl written is network input buoeer soon ifre full therefor necessari wait global end cycl local start new one last technic problem solv assum andnot gate cfsm start circuit cycl n assum gate cfsm receiv input event say afals b absent gate send back afre on gate receiv two input ffl b input event hold bs valu cycl n input process normal sinc gate cfsm current process cycl n ffl outoford input event hold as valu cycl n process input defer b process current poli network model cfsm made runnabl soon receiv input event therefor gate made runnabl input cycl still process cycl n point gate either intern memor as valu rewrit buoeer leav case afre aeow control buoeer empti nish cycl n solut expens somewhat ugli suggest slight modic poli schedul polici cfsm tell schedul input buoeer current interest in schedul make cfsm runnabl none buoeer hold event cfsm run captur input assign contain event buoeer cfsm explicitli wait for leav rest input buoeer exampl gate cfsm tell schedul wait b new valu come in cfsm made runnabl b occur gate made runnabl run input b onli gate process b tell schedul wait b sinc alreadi there gate immedi made runnabl again nal version gate cfsm involv auxiliari wait signal sent schedul implement mechan modul andnot output afre bfree output await bwait input cfree output cfreewait loop signal caux combin boolean abort sustain await a emit afre a emit cauxfals end abort sustain bwait b emit bfree b emit cauxfals end a b emit cauxtru end await caux abort sustain cfreewait cfree emit ccaux signal loop iawait aj statement becom iabort sustain await aj isustain awaitj statement emit await clock cycl iabort p aj abort bodi p right away occur execut p abort time therefor await emit receiv instant exclud mix synchronousasynchron implement two dioeerent level granular implement esterel program poli compil program singl cfsm node build separ cfsm gate program circuit rst support distribut second clearli ineoeci associ overhead unaccept larg program sinc involv schedul individu gate cfsm multipl time brieaey explain deal mani implement choic dioeer ent level granular use composit increment charact construct semant so retain full synchron semant program trade ooe synchroni asynchroni implement idea one move larger granular implement partit set gate gate cluster g cluster g k group gate singl cfsm cluster connect poli network befor partit arbitrari chosen match local perform constraint fact process synchron asynchron proof deriv synchron construct semant particular synchron fact process done within cluster use algorithm section singl cfsm one comput cfsm asynchron fact process done across network thu cfsm fact synchron asynchron process eg output gate g input anoth gate g cluster g g anoth cluster g make possibl abil central distribut algorithm deal partial deduct given partial input assign i algorithm gener fact deduc i new fact ad i algorithm increment deduc consequ therefor matter whether fact handl synchron gate cluster asynchron poli cluster network consid exampl follow circuit c obtain ad output z c consid rst cluster g fzg assum receiv fact deduc output fact g make local transit reach state wait also intern rememb local state lost predecessor thu synchron propag cluster asynchron propag z cluster anoth call cfsm receiv send fact g output input sequenc consid cluster g g receiv instantan gener fact determin synchron fact asynchron propag g network g s cfsm transit state wait j occur cfsm output fact propag g s cfsm goe back initi state optim solut problem determin set cluster beyond scope paper number cluster algorithm exist literatur design may enter partit fashion lead natur cluster well case cluster accord sourc code modul structur obviou candid cluster heurist well cluster accord frequenc use signal like clock lu tre here simpli point algorithm semant behind permit level granular individu gate implement separ cfsm entir synchron program implement singl cfsm thu tradeoo synchron asynchron implement synchron program fulli explor conclus futur work describ method implement synchron esterel program circuit global asynchron local synchron gal poli network method base fact propag algorithm directli implement construct semant synchron program develop aeowcontrol techniqu automat ensur poli buoeer overwritten make pipelin possibl initi associ poli cfsm circuit gate unrealist practic howev method fulli composit fact propag perform either synchron node asynchron node make possibl cluster gate bigger synchron node explor tradeoo synchron asynchron implement simplic dealt pure fragment esterel signal carri valu extens full valuepass esterel construct rais particular dioeculti complet implement current develop r domain lambdacalculi construct semant esterel foundat esterel esterel synchron program languag design asynchron circuit distribut automata asynchron network processor distribut reactiv system program realtim applic signal synchron program reactiv system synchron dataaeow program languag lustr visual approach complex system commun sequenti process semant simpl languag parallel program lcf program languag formal analysi cyclic circuit construct analysi cyclic circuit analys construct et optimis tr commun sequenti process statechart visual formal complex system esterel synchron program languag formal verif embed system base cfsm network hardwaresoftwar codesign embed system domain lambdacalculi foundat esterel synchron program reactiv system construct analysi cyclic circuit formal analysi synchron circuit ctr gerald lttgen michael mendler intuition behind statechart step acm transact comput logic tocl v n p januari mohammad reza mousavi paul le guernic jeanpierr talpin sandeep kumar shukla twan basten model valid global asynchron design synchron framework proceed confer design autom test europ p februari stephen a edward olivi tardieu shim determinist model heterogen embed system proceed th acm intern confer embed softwar septemb jersey citi nj usa stephen a edward edward a lee semant execut synchron blockdiagram languag scienc comput program v n p juli