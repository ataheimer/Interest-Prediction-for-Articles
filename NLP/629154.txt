t effici heurist permut packet rout mesh low buffer requir a even though exact algorithm exist permut routin nsup messag ann mesh processor requir constant size queue constant largeand algorithm complic implement novel simpl heurist problem present use constant small size queue size simul run randomli gener data number rout step requir algorithm almost equal maximum distanc packet travel patholog case demonstr rout take optim iti prove upper bound number requir step onsup furthermor shown heurist rout optim time invers transpositionand rotat three special rout problem appear often design ofparallel algorithm b introduct import task design parallel comput develop effici parallel data transfer algorithm two fundament perform measur are number parallel step requir complet messag packet transfer addit buffer queue size need queue processor studi packet rout problem ie problem of given interconnect network processor rout right data packet right processor fast rout effici processor must abl commun fast size queue buffer creat processor must constant small requir small constant buffer area processor import make parallel architectur scalabl paper present novel techniqu packet rout mesh n theta n array processor techniqu built well known oddeven transposit method main contribut techniqu use small queue buffer area exactli packet need algorithm simpl requir complex oper mainten buffer so good candid hardwar implement furthermor experiment result show number step requir complet rout almost equal maximum distanc packet travel sinc data experi obtain random number gener suggest algorithm perform optim high probabl chosen mesh parallel architectur simpl regular interconnect pattern make especi suit vlsi implement addit sinc euclidean distanc neighbor process element constant mesh time need commun pair connect element also constant furthermor although mesh larg diamet n gamma n theta n mesh topolog well match mani problem previou work packet rout includ determinist probabilist approach trivial greedi algorithm rout packet correct column correct row n gamma step size queue howev bad on nontrivi solut given problem base parallel sort algorithm kund first use parallel sort obtain determinist algorithm complet rout n onfn step queue size ofn later on leighton makedon tolli deriv determinist algorithm complet rout n gamma step use constant size queue first probabilist algorithm deriv valiant brebner complet rout n use olog n size queue later on krizanc rajasekaran tsantila deriv probabilist algorithm rout packet n olog n step use constant size queue probabilist algorithm rout packet correctli high probabl import note that although two alreadi known algorithm use constants queue size constant larg and author admit the constant bound result queuesiz practic even moder valu n say n thu effici heurist need one propos practic applic design parallel comput preliminari nthetan mesh processor defin graph edg belong e n theta n mesh illustr figur one step processor commun neighbor use bidirect link call channel defin distanc two processor p neighbor conveni descript algorithm talk east west north south neighbor given processor formal processor defin east neighbor processor west neighbor processor north neighbor processor p figur dimension mesh south neighbor processor p processor said boundari mesh processor boundari mesh four neighbor defin processor assum work synchron mimd model permut problem processor one packet transmit anoth processor end processor receiv exactli one packet rout problem rout packet destin fast without use larg addit storag area buffer processor origin oddeven transposit method use sort element linear array method work follow odd time instanc processor odd array posit compar content content east neighbor decis made whether exchang content occur even time instanc comparison possibl exchang occur processor even posit array east neighbor figur show comparison perform time array element figur comparison perform oddeven transposit method time instanc t t array element rout algorithm rout algorithm alway tri reduc summat distanc packet travel let dt dt respect total distanc packet travel time instanc dt trivial true that equal hold then time instanc guarante eventu packet reach destin time t let processor p p i contain packet p p i let distanc packet travel t i t respect say distribut packet processor p p i time normal exchang content processor reduc total distanc dt also maxd t distanc packet travel exchang exampl normal distanc shown figur call packet whose content compar compar packet figur exampl normal algorithm rout high level descript ffl assum processor row mesh form linear array oddeven transposit take place ffl perform oddeven transposit row mesh describ section distanc compar packet travel alway normal packet move horizont ffl packet reach processor lie column destin and packet processor want move vertic direct south north start vertic movement figur otherwis packet go column move vertic while packet particip oddeven transposit take place row figur figur uninterrupt vertic movement packet figur interrupt vertic movement packet theorem algorithm rout need buffer area exactli packet proof consid situat queue creat two packet enter given node one move vertic and move horizont must chang direct movement reach column destin want move vertic direct one must wait thu queue creat rout algorithm happen algorithm properti that two packet move horizont opposit direct cannot enter processor time properti come applic oddeven transposit two packet want travel vertic direct one go chosen other instead place queue particip oddeven transposit far use buffer area one packet the area packet initi processor remain show commun neighbor processor implement rememb that step processor commun horizont direct neighbor east west both consid two neighbor processor commun current step algorithm one transmit content and time keep copi origin packet packet receiv processor comput distanc two packet still travel exchang distanc normal exchang previou content packet discard distanc exchang normal exchang ignor observ neighbor processor exactli comput data thu reach compat result also observ use describ scheme buffer area one extra packet need complet proof perform section present simul result algorithm base random rout problem theta mesh connect array present case algorithm take tabl experiment result random rout problem n step and prove algorithm complet rout within on step experiment result simul algorithm use random rout input data theta theta theta mesh connect array data gener help random number gener function drand sun workstat experi set start differ point random sequenc gener function run hundr experi got near optim perform off rout step tabl show result simul theta mesh connect array second column tabl contain maximum distanc packet travel specif experi distanc alway less equal sinc work theta mesh fact entri column mean data correspond experi ident destin packet experi total differ third column tabl contain number rout step need complet rout note that number figur permut packet result nonoptim rout time almost off maximum distanc correspond experi impli perform heurist near optim low perform packet rout problem spite good experiment behavior algorithm rout exist permut packet result rout time optim section present initi set packet assum destin packet n theta n mesh shown figur ffl packet first row column trough destin southeast p n theta n corner mesh initi posit destin processor posit observ that packet initi locat west packet p travel p so oddeven transposit first row packet p move west sinc alway tri normal distanc packet travel reach tabl experiment result number delay packet random rout problem nonoptim solut forc occur processor posit start move east reach column move vertic arriv destin total movement packet p take n rout step mention although exist case requir rout time optim case produc random number gener indic tabl requir number step problem bad situat forc occur depend distanc bad packet p travel furthermor indic tabl small portion packet receiv optim time delay packet specif experi packet initi load packet delay packet trace packet back origin found origin first row mesh obviou conclus experi that perform rout algorithm bad situat occur seem depend packet constitut bad situat again remind reader tabl contain entri small portion simul tabl experiment result random rout problem nonoptim solut forc occur upper bound given low perform rout problem describ previou section natur ask upper bound number rout step requir algorithm rout order solv permut rout problem trivial see algorithm rout cannot take on rout step rout permut rout problem at rout step least one packet approach destin total distanc packet travel reduc least maximum total distanc packet travel on impli that on rout step packet reach destin howev prove algorithm rout complet rout within on step proceed proof need follow definit lemmata definit packet given time instant particip oddeven transposit said row mesh said empti time time instant packet typeh row assum row mesh n packet typeh also assum packet cross row order reach destin then n step row empti proof observ packet want cross row north south packet particip oddeven transposit one origin row anoth obviou observ imposs two packet switch previou time instant compar switch again impli packet move n step away destin then n step everi packet reach column destin leav row assum row mesh n packet typeh also assum k packet want cross row order reach destin then n step row empti proof similar lemma theorem algorithm rout complet rout permut problem on rout step proof prove theorem show everi row mesh empti on step then n step packet reach destin sinc move vertic collis happen lemma impli row empti n step use lemma obtain gener statement consid row k packet want cross row k order reach destin lemma know row k empti rout step express get maximum valu prove theorem theorem provid upper bound number rout step requir algorithm rout howev abl construct rout problem take on step complet algorithm rout conjectur algorithm rout solv permut rout problem within n rout step true then analysi tight sinc construct complic rout problem need n step complet also first rout algorithm mesh requir on rout step base sort submesh exist algorithm open problem interest properti section prove properti algorithm rout concern way total distanc packet travel reduc cours algorithm explor similar properti might key tool effort prove nonsort base algorithm termin on step theorem let it denot set packet row time t ds it l denot total distanc packet set it still travel time l l then everi row proof consid packet row time t constitut set it packet divid two categori packet particip oddeven transposit alreadi defin typeh packet move vertic to north south call typev consid two case case it contain packet type v first assum two compar packet want travel opposit direct then exchang ds next step packet may continu horizont movement start move vertic move all case total distanc decreas thu assum compar packet want move direct even exchang take place total distanc packet travel remain same two possibl pair compar packet direct two pair want travel opposit direct pair travel direct must less n packet row n packet and say move left leftmost one must correct column must type v assum packet exist so less n packet row impli exist gap and packet must adjac it next step packet adjac gap occupi it thu get ds second possibl case two pair packet want move opposit direct then next step adjac packet compar exchang occur thu ds adjac must gap case ds case least one packet type v let p packet p move vertic time t have ds now consid happen next step packet p stay correct column next step then ds assum now that next step forc move away destin then might ds it row k k show ds kt fact packet p forc move away destin impli two thing first all anoth packet row k destin column packet p is and addit go further packet forc p particip oddeven transposit secondli anoth packet forc p move column destin thu two packet set kt reduc distanc one step so ds kt rout problem solv optim section consid special form permut rout problem algorithm perform optim prove permut problem rotat invers transposit n step requir proc examin problem prove two use lemma concern permut rout chain processor permut rout chain processor lemma permut rout problem chain n processor solv n step use oddeven transposit method proof way solv permut rout problem sort packet accord destin address sinc oddeven transposit method use sort linear array time requir sort also enough rout but know order n element linear array size n need exactli n step oddeven transposit method use lemma permut rout problem chain processor solv r rout step r maximum distanc packet travel proof achiev number step state lemma packet start motion time and alway travel toward destin then noth delay packet sinc step everi packet approach destin packet travel distanc r r rout step rotat permut packet rout problem n theta n mesh call l mrotat packet initi posit i j destin posit i horizont rotat vertic rotat diagon rotat next theorem show kind rotat algorithm rout optim theorem given n theta n mesh processor algorithm rout need nmaxln gamma step order complet rout permut problem l mrotat proof moment assum algorithm rout rout packet two consecut time disjoint phase first phase rout packet horizont reach column destin second rout phase start packet reach column destin packet rout final destin along column array observ now second phase start processor column exactli one packet rout vertic so begin rout packet row destin differ column thu phase algorithm permut problem solv sinc use oddeven transposit method order rout packet first phase know lemma n step enough second phase rout done describ lemma so need exactli step order complet rout thu total step requir analysi assum packet rout two time disjoint phase assumpt true howev analysi still valid see whi observ that packet destin column reach column step thu packet destin column start column rout time synchon permit us treat movement packet two separ phase horizont vertic one complet proof invers permut packet rout problem n theta n mesh call invers packet initi posit i j destin posit n theorem show algorithm rout perform optim rout problem invers theorem given n theta n mesh processor algorithm rout need exactli order complet rout invers packet rout problem proof packet destin column initi locat column j sinc movement packet column similar packet destin column reach column step so proof theorem assum analysi rout done two time disjoint phase lemma know first phase need exactli n rout step maximum distanc packet travel second phase n gamma becaus packet initi locat first row mesh destin last row mesh appli lemma conclud second phase take exactli step thu algorithm rout solv invers packet rout problem exactli n gamma step transposit permut packet rout problem n theta n mesh call transposit packet initi posit i j destin posit j i theorem given n theta n mesh processor algorithm rout need exactli rout step order solv transposit rout problem proof without loss gener consid packet p initi locat posit i j j case j treat similarli packet p destin locat j i observ that packet left also destin column i but travel greater distanc specif packet k posit left travel k step p so p trap packet left result move left hit left boundari mesh move uninterrupt right reach column destin final move vertic destin figur illustr motion packet p note interact packet occur vertic rout packet left column want move upward right want move downward travel packet p initi posit i take total rout step impli packet reach destin step sinc maximum valu take n gamma conclus work present effici heurist rout messag packet mesh connect parallel comput main advantag algorithm use buffer area exactli packet per processorfurthermor algorithm simpl experiment behavior indic perform optim random rout problem first time accord knowledg heurist report surprisingli good experiment result make import interest problem would prove algorithm work figur motion packet p rout transposit optim high probabl howev fact movement packet depend destin neighbor packet time instanc make problem difficult challeng one anoth interest problem provid tighter analysi algorithm rout gap upper bound on rout step n perform worst case rout problem abl construct r the toru rout chip art comput program optim rout algorithm meshconnect processor array rout sort meshconnect array packet rout grid processor a rout n theta n array constant size queue an optim sort algorithm mesh connect comput sort meshconnect parallel comput a scheme fast parallel commun tr optim sort algorithm mesh connect comput optim rout algorithm meshconnect processor array extend abstract rout sort meshconnect array extend abstract ini step algorithm rout inxni array constant size queue art comput program volum sort meshconnect parallel comput ctr antonio symvoni jonathon tidswel empir studi offlin permut packet rout twodimension mesh base multistag rout method ieee transact comput v n p may