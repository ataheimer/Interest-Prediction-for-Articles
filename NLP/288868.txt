t rank graph a vertex edg color phivrightarrow ldot t phierightarrow ldot t graph gve vertex edg trank if two vertic edg color everi path contain vertex edg larger color em vertex rank number chi_rg em edg rank number chi_rg smallest valu g vertex edg trank paper studi algorithm complex sc vertex rank sc edg rank problem shown chi_rg comput polynomi time restrict graph treewidth k fix k character graph vertex rank number chi_r chromat number chi coincid induc subgraph show chi_rgchi g impli chi gomega g largest cliqu size give formula chi_rk_n b introduct paper consid vertex rank edg rank graph vertex rank problem also call order color problem receiv much attent late grow number applic applic schedul problem assembl step manufactur system eg edg rank tree use model parallel assembl product compon quit natur manner depart comput scienc utrecht univers po box netherland email hansbcsruunl author partial support esprit basic research action ec contract project alcom ii depart comput scienc engin univers nebraska lincoln lincoln ne usa author partial support offic naval research grant no nj z institut fr informatik tu munchen munchen germani leav univ sitat trier germani x depart mathemat comput scienc eindhoven univers technolog pobox mb eindhoven netherland irisa campu universitair de beaulieu renn cedex franc leav friedrichschilleruniversitt jena author partial support deutsch kr k fakultt fr mathematik und informatik friedrichschilleruniversitt universitt hochhau jena germani comput autom institut hungarian academi scienc h budapest kend u hungari author partial support otka research fund hungarian academi scienc grant no furthermor problem find optim vertex rank equival problem find minimumheight elimin tree graph measur import parallel choleski factor matric yet applic lie field vlsilayout vertex rank problem given graph g posit integ t decid whether r g npcomplet even restrict cobipartit graph sinc pothen shown equival minimum elimin tree height problem remain npcomplet cobipartit graph short proof npcomplet vertex rank given section much work done find optim rank tree tree lineartim algorithm find optim vertex rank close relat edg rank problem tree on algorithm given recent zhou nishizeki obtain on log n algorithm optim edg rank tree see also effici vertex rank algorithm permut trapezoid interv circulararc circular permut graph cocompara biliti graph bound dimens present moreov vertex rank problem trivial split graph solvabl linear time cograph typic graph theoret question known color theori graph investig also lead o n bound vertex rank number planar graph author describ polynomialtim algorithm find vertex rank planar graph use o n color graph gener approxim algorithm perform ratio olog n vertex rank number also shown one plu pathwidth graph lower bound vertex rank number graph henc planar graph pathwidth o n also shown use differ method goal extend known result algorithm graph theoret direct paper organ follow section necessari notion preliminari result given studi algorithm complex determin whether graph g fulfil r g respect section section character graph vertex rank number chromat number coincid everi induc subgraph graph turn precis contain path cycl four vertic induc subgraph henc obtain character trivial perfect graph term rank moreov show impli chromat number g equal largest cliqu size section give recurr relat allow us comput edg rank number complet graph preliminari consid finit undirect simpl graph e throughout paper n denot cardin vertex set v denot edg set e graph e graphtheoret concept definit properti graph class given refer e graph subset u v independ pair vertic nonadjac graph e bipartit partit v two independ set b complement graph e graph g vertex set v edg set ffv wg j v eg w v denot gw subgraph e induc vertic w x e write gx graph edg set x e graph let posit integ vertex trank call rank short ambigu color everi pair vertic x everi path x vertex z path cz cx vertex rank number g r g smallest valu graph g admit trank definit adjac vertic differ color trank thu t rank proper tcolor henc r g bound chromat number g vertex r grank g said optim vertex rank g edg rank problem close relat vertex rank problem e graph let posit integ edg trank edg color c everi pair edg e f c everi path e f edg g path c g c e edg rank number r g smallest valu g edg trank remark onetoon correspond edg trank graph g vertex trank line graph lg henc edg trank graph g particular proper edg color g henc r g bound chromat index g edg r grank g said optim edg rank g shown vertex rank number connect graph equal minimum elimin tree height plu one thu vertex separ edg separ conveni tool investig rank graph subset graph e said separ gv n s disconnect subset r e graph e said edg separ or edg cut ge n r disconnect paper use separ tree studi vertex rank concept close relat elimin tree cf definit given vertex trank connect graph e assign root tree c induct construct separ certain induc subgraph g assign intern node c vertic set assign leaf c differ color color occur g c consist singl vertex r call root assign vertex set g otherwis let largest color assign one vertex c separ g creat root r c assign r the induc subgraph g correspond subtre root r g itself assum separ tree alreadi defin connect compon g graph gv n s children r c vertic r subtre c root r c root tree c said separ tree g notic vertic g assign node c path leaf root differ color unbound rank still unknown whether edg rank problem given graph g posit integ t decid whether remark problem equival vertex rank problem given graph g posit integ t decid whether r g restrict line graph hand consequ npcomplet minimum elimin tree height problem shown pothen equival problem vertex rank problem latter npcomplet even restrict graph complement bipartit graph socal cobipartit graph reason selfcontained start short proof npcomplet vertex rank restrict cobipartit graph follow problem call balanc complet bipartit subgraph abbr viat bcb npcomplet problem gt instanc bipartit graph e posit integ k question two disjoint subset u impli theorem vertex rank npcomplet cobipartit graph proof clearli problem np nphard shown reduct bcb let bipartit graph e posit integ k given let g complement g thu g cobipartit graph claim g balanc complet bipartit subgraph delta k vertic g n gamma krank suppos set w u construct k rank g write w ngammadeltak g defin vertex rank c g follow cv one easili observ c vertex n gamma krank next let c ngammakrank g sinc g cobipartit graph color two vertic color one lie v v therefor k pair v cv assum w show subgraph induc set w w form balanc complet bipartit subgraph g show thi prove pair vertic adjac g suppos v adjac g then color vertic must differ furthermor assum wlog cv path v cv contradict fact c rank henc subgraph induc w w inde balanc complet bipartit subgraph prove claim npcomplet vertex rank show analog result hold bipartit graph well theorem vertex rank remain npcomplet bipartit graph proof transform vertex rank arbitrari graph without isol vertic given graph g construct graph g clearli construct graph g bipartit graph show g trank g t rank suppos g trank tg construct color c g follow way vertic vertic c rank g hand let g t rank g show cv everi vertex suppos let v vertex v wg edg incid v g henc v adjac e rank l l l l impli path e assumpt c rank prove cv hold everi vertex consequ edg vertex ce rank g defin color c trank g sinc exist path two vertic v w g cw inner vertic smaller color impli exist path v w g cw inner vertic smaller color contradict fact c rank g bound rank show bound rank problem given graph g decid whether solvabl linear time fix t done verifi correspond graph class close certain oper definit edg contract oper graph g replac two adjac vertic u v g vertex adjac vertic adjac u v edg lift oper graph g replac two adjac edg fv wg fu wg g one edg fu vg definit graph h minor graph g h obtain g seri follow oper vertex delet edg delet edg contract graph class g minor close everi minor h everi graph g g also belong g lemma class graph satisfi r g minor close fix t proof sinc vertexedg delet cannot creat new path monochromat pair vertic show edg contract increas rank number let e graph t assum obtain g contract edg new vertex c uv suppos c trank g construct h follow uv suppos c trank h path c trank g vertex c uv must occur path depend neighbor p decontract c uv path p u v get path p g violat rank condit contradict choic c corollari fix t class graph satisfi r g recogn linear time proof use result robertson seymour shown everi minor close class graph contain planar graph linear time recognit algorithm result follow directli lemma regard edg rank simpl argument yield much stronger assert follow theorem fix t class connect graph satisfi recogn constant time proof fix t finit number connect graph g t necessari condit maximum degre g t diamet g bound gamma certainli theorem immedi impli graph g satisfi recogn linear time inspect connect compon separ result might also obtain via involv method use result robertson seymour graph immers similarli one show fix d class connect graph r g maximum vertex degre recogn constant time definit graph h immers graph g h obtain g seri follow oper vertex delet edg delet edg lift graph class g immers close everi immers h graph g g also belong g proof follow lemma similar one lemma therefor omit lemma class graph satisfi close fix t lineartim recogniz class graph satisfi also follow lemma result robertson seymour fact graph treewidth comput vertex rank number graph bound treewidth section show one comput r g graph g treewidth k polynomi time fix k graph also call partial ktree result impli polynomi time comput vertex rank number class graph uniform upper bound treewidth eg outerplanar graph seriesparallel graph halin graph notion treewidth introduc robertson seymour see eg definit treedecomposit graph e pair fx collect subset v tree ffl edg fv wg e v w ffl path k width treedecomposit fx treewidth graph e minimum width treedecomposit g often abbrevi fx treewidth e bound constant k one find on time treedecomposit x width k on root binari tree denot root r say x root binari treedecomposit definit termin graph tripl v e z v e undirect graph z v subset vertic call termin node root binari treedecomposit x graph e associ termin graph g descend ig g shorthand notat write pv w g c ff iff path g v w intern vertic color smaller ff color c g c ff denot p v w g c ff set path g v w intern vertic color use color function c smaller ff follow suppos given termin graph let c vertex trank v e characterist c c quadrupl cj z ffl cj z function c restrict domain z defin true vertex x v g c i defin vertex x v g c i g c i t g defin by f v w smallest integ pv w g c path v w g definit set characterist vertex trank termin graph g full set characterist vertex trank g in short full set g everi vertex trank c g c s set c vertex trank termin graph g exampl set vertex trank g in short exampl set g everi vertex trank c g c c set characterist element c form full set characterist vertex trank g full set characterist vertex trank with jzj polynomi v olog k n possibl valu cj z ok log n possibl valu f log n possibl valu f olog kk n possibl valu f follow lemma given show ensur properti graph treewidth k fix k lemma treewidth e k r log n let x root binari treedecomposit g suppos j descend suppos c vertex trank g restrict c g j function cj g j defin v clearli cj g j vertex trank g j c anoth vertex trank g j defin function rc c lemma let x root binari treedecomposit e let j descend i let c vertex trank g c vertex trank g j cj g j vertex trank g proof breviti write c write cj g j start prove two claim proof let v w w suppos path consid part path p part g p ff ff r path vertic w p path g j each path collect success edg ie last vertex path first vertex next path write v ff first vertex path ff w ff last vertex path p note also exist path p in word exist path v w g j color intern vertic smaller use color c or equival cj g j cj g j c characterist also exist path use color function c now path form sequenc p path g v w color intern vertic smaller henc pv w g show pv w g shown way exist vertex exist vertex w w claim pv w g x last vertex path belong w write last vertex p first vertex p p exist path q use equal characterist cj g j c exist vertex path v w g intern vertic color under color function c smaller henc pv w revers implic claim shown similar way show c vertex trank or equival consid four case v w c vertex rank contradict exist c vertex rank contradict w similar case v w vertic p belong w p path g j henc c vertex rank g j contradict so exist vertic p belong w let x first vertex p belong w must exist vertic path v w intern vertic color with color function c less henc c vertex rank contradict remain show suppos follow directli consid v w vertex true x x j let last vertex x j p similarli write impli f y z true henc vertex x path also lemma path p use path p v x path p w x follow almost ident argument show final follow directli claim g describ algorithm root binari treedecomposit e found in linear time algorithm comput full set exampl set everi node i bottomup order clearli full set root node determin whether g vertex trank check whether full set root nonempti so element exampl set root node give us vertex trank g remain show comput node full set exampl set given full set exampl set children i straightforward case leaf node enumer function c function c test whether vertex trank g so put c exampl set c full set characterist next suppos two children j j if one child add anoth child j leaf exampl set comput full set exampl set q g follow way initi take q empti tripl element q c element arbitrari function c ffl check whether v not skip follow step proceed next tripl ffl comput function c defin follow ffl check whether c vertex trank g not skip follow step proceed next tripl ffl c s put c put c q claim result set q form full set exampl set g consid arbitrari vertex trank c g let c q vertex trank characterist c definit exampl set c must exist similarli let c defin c algorithm process tripl first test hold suppos c function comput second test note henc lemma c vertex trank characterist c henc contain c q contain vertex trank g characterist c c size full set henc exampl set graph g polynomi follow comput full set exampl set set associ children node done polynomi time there polynomi number tripl tripl comput given cost polynomi time linear number node treedecomposit comput whether exist vertex trank cost polynomi time assum test applic valu see lemma exist vertex trank g obtain follow result theorem fix k exist polynomi time algorithm determin vertex rank number graph g treewidth k find optim vertex rank g equal section consid question relat equal chromat number vertex rank number graph theorem r hold graph g g also satisfi proof suppos e vertex trank g go consid separ tree c t rank recal c root tree everi intern node c assign subset vertex set g separ correspond subgraph g name one compon aris subset path node root delet graph furthermor vertic assign node path leaf root c pairwis differ color goal follow recolor procedur show either g recolor g obtain proper color smaller number color howev latter contradict choic grank c label node tree c accord follow mark rule mark node c union us vertex set assign node path root cliqu g also mark leaf l c union ul vertex set assign node path l root cliqu g julj t case unmark leaf l ul cliqu henc case unmark leaf show would enabl us recolor g save one color contradict choic c sinc everi leaf c mark everi path leaf root consist mark node eventu follow unmark node consequ collect mark branch c ie subtre c induc one node descend node mark father highest node branch unmark highest node root c itself root c mark exactli one mark branch name c itself then definit separ assign root cliqu howev none color use rank vertic simpli color separ fewer j j color produc color g fewer g color contradict root unmark work collect b mark branch b notic color vertic g assign leav c leaf c belong mark branch b go recolor graph g recolor mark branch one one new color g use color let us consid mark branch b let h highest node c sh set assign h sinc h mark root unmark must exist vertex x sh vertex belong uh nonadjac cx cy sinc vertic uh pairwis differ color assum leaf c henc x y respect color vertex g assign node b simpli recolor x maxcx cy final consid case cx cy color vertic subgraph g correspond b recolor cx x recolor cy construct c influenc part graph sinc separ vertex set higher color done oper everi mark branch eventu get new color assign g still proper color though usual rank sinc leav c mark intern node c contain color vertic color elimin g contradict assumpt r consequ case cannot occur impli complet proof impli g perfect graph trivial counterexampl form arbitrari imperfect graph hand requir equal induc subgraph remain rel small class graph also call trivial perfect literatur cf theorem graph e satisfi r neither p c induc subgraph g proof condit necessari sinc r p let g p free c free graph graph induc precis everi connect induc subgraph h contain domin vertex w ie w adjac vertic h henc follow effici algorithm produc optim rank graph assign color h domin vertex w clearli hv easili seen r hv thu induct appli hand h disconnect optim rank gener compon separ edg rank complet graph obvious r k n easi give close formula edg rank number complet graph conveni way determin r k n seem introduc function gn rule term gn follow statement prove theorem everi posit integ n r k n proof assert obvious true larger valu n go appli induct similarli vertex trank follow properti hold everi edg trank graph largest color occur onc edg color form edg separ g moreov appropri relabel color get new edg trank g properti color j edg color form edg separ g minim inclus show best way choos edg separ r respect edg rank complet graph make two compon ge n r equals possibl let us consid k n number vertic compon henc correspond edg separ size n n everi edg rank start separ least r k n r k r k maxfn n g color inde one use exactli mani color defin repeat argument n on eventu get sequenc posit integ s ij j s notic least last two term sequenc equal easi see number color edg rank repres equal ij j consequ r k n ij i subject condit sinc decreas sort sequenc maintain may assum thu valu ij j attain precis uniqu sequenc satisfi ij j c particular obtain r k n r k dne appli recurs difficult verifi that inde r k n written form function defin abov observ g n obtain follow interest result corollari conclus studi algorithm graphtheoret properti rank graph mani special class graph algorithm complex vertex rank known howev algorithm complex vertex rank restrict chordal graph circl graph still unknown furthermor even known whether edg rank problem npcomplet start graphtheoret studi vertex rank edg rank particular kind proper vertex color proper edg color respec tive much research done direct particular interest wellknown problem theori vertex color edg color also worth studi vertex rank edg rank r linear time algorithm find treedecomposit small treewidth tourist guid treewidth approxim treewidth graph theori applic edg rank tree multifront solut indefinit spars symmetr linear equat comput intract guid theori npcomplet algorithm graph theori perfect graph optim node rank tree parallel assembl modular productsan analysi edg rank problem tree graph order colour area effici graph layout vlsi role elimin tree spars factor concurr design product process complex optim elimin tree graph minor graph minor graph minor node rank search graph abstract graph partit problem applic vlsi layout compar graph tree find optim edgerank tree effici algorithm edgerank tree tr ctr tak wah lam fung ling yue optim edg rank tree linear time proceed ninth annual acmsiam symposium discret algorithm p januari san francisco california unit state kazuhisa makino yushi uno toshihid ibaraki minimum edg rank span tree split graph discret appli mathemat v n p novemb shinichi nakayama shigeru masuyama polynomi time algorithm obtain minimum edg rank twoconnect outerplanar graph inform process letter v n p septemb keizo miyata shigeru masuyama shinichi nakayama liang zhao nphard proof approxim algorithm minimum vertex rank span tree problem discret appli mathemat v n p novemb md abul kashem m ziaur rahman optim parallel algorithm cvertexrank tree inform process letter v n p novemb dariusz dereniowski adam nadolski vertex rank chordal graph weight tree inform process letter v n p may chunghsien hsu shenglung peng chonghui shi construct minimum height elimin tree tree linear time inform scienc intern journal v n p june