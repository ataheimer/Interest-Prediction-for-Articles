t boolean satisfi transit constraint a consid variant boolean satisfi problem subset epsiv proposit variabl appear formula fsat encod symmetr transit binari relat n element relat variabl eij j n express whether relat hold element j task either find satisfi assign fsat also satisfi transit constraint relat variabl eg e wedg e e prove assign exist solv satisfi problem final difficult step decis procedur logic equal uninterpret function procedur form core tool verifi pipelin microprocessorsto use convent boolean satisfi checker augment set claus express fsat claus express transit constraint consid method reduc number claus base spars structur relat variablesto use order binari decis diagram obdd show set epsiv obdd represent transit constraint exponenti size possibl variabl order consid relat variabl occur obdd represent fsat experi show readili construct obdd represent relev transit constraint thu solv constrain satisfi problem b introduct consid follow variant boolean satisfi problem given boolean formula f sat set variabl v subset symbol encod binari relat n element reflex symmetr transit relat variabl whether relat hold element j typic e spars contain much fewer nn gamma possibl variabl note e ij e valu j impli relat hold element j simpli indic f sat directli depend relat element j transit constraint formula form denot set transit constraint form relat variabl task find assign v f g satisfi f sat well everi constraint trans goel et al gsza shown problem nphard even f sat given order binari decis diagram obdd bri normal boolean satisfi trivial given obdd represent formula motiv solv problem part tool verifi pipelin microprocessor vb tool abstract oper datapath set uninterpret function uninterpret predic oper symbol data prove pipelin processor behavior match unpipelin refer model use symbol flush techniqu develop burch dill bd major comput task decid valid formula fver logic equal uninterpret function bgva bgvb decis procedur transform fver first replac function applic term term set domain variabl fv j ng similarli predic applic replac formula set newlygener proposit variabl result formula f ver contain equat form v equat encod introduc relat variabl e ij similar method propos goel et al gsza result translat proposit formula encf ver express verif condit relat variabl proposit variabl appear f ver let f sat denot encf ver complement formula express translat verif condit captur transit equal eg v transit constraint form e ij e jk e ik find satisfi assign f sat also satisfi transit constraint give us counterexampl origin verif condit fver hand prove assign prove fver univers valid consid three method gener boolean formula f tran encod transit constraint direct method enumer set chordfre cycl undirect graph edg i relat variabl e method avoid introduc addit relat variabl lead formula exponenti size dens method use relat variabl e ij possibl valu j axiomat transit form constraint form e ij e jk e ik distinct valu i j k yield formula cubic n spars method augment e addit relat variabl form set variabl result graph chordal rose requir transit constraint form e ij e jk e ik spars method guarante gener smaller formula dens method use convent boolean satisfi sat procedur solv constrain satisfi problem run checker set claus encod f sat f tran latest version fgrasp sat checker m abl complet benchmark although run time increas significantli transit constraint enforc use order binari decis diagram evalu satisfi could gener obdd represent f sat f tran use appli algorithm comput obdd represent conjunct obdd find satisfi solut would trivial show approach feasibl gener obdd represent f tran intract is set relat variabl obdd represent transit constraint formula f tran exponenti size regardless variabl order npcomplet result goel et al show obdd represent f tran may exponenti size use order previous select repres f sat obdd leav open possibl could variabl order would yield effici obdd represent f sat f tran result show transit constraint intrins intract repres obdd independ structur f sat present experiment result complex construct obdd transit constraint aris actual microprocessor verif result show obdd inde quit larg consid two techniqu avoid construct obdd represent transit constraint first these propos goel et al gsza gener implic cube f sat reject violat transit constraint although method suffic small benchmark find number implic gener larger benchmark grow unaccept larg second method determin relat variabl actual occur obdd represent f sat appli one three techniqu encod transit constraint order gener boolean formula transit constraint reduc set relat variabl obdd represent formula gener tractabl even larger benchmark benchmark benchmark vb base appli verifi set highlevel microprocessor design base dlx risc processor describ hennessi patterson hp thetadlxc singleissu fivestag pipelin capabl fetch one new instruct everi clock cycl implement six instruct type registerregist registerimmedi circuit domain proposit equat variabl variabl buggi min thetadlxcc avg max tabl microprocessor verif benchmark benchmark suffix t modifi requir enforc transit load store branch jump pipelin stage are fetch decod execut memori writeback interlock caus instruct follow load stall one cycl requir load result branch jump predict nottaken instruct squash mispredict exampl compar dlx exampl first verifi burch dill bd thetadlxca complet first pipelin capabl execut six instruct type second pipelin capabl execut arithmet instruct new instruct issu cycl depend type sourc regist well type destin regist preced instruct exampl compar one verifi burch bur thetadlxcc two complet pipelin ie execut six instruct type four load interlocksbetween load execut either pipelin instruct decod either pipelin cycl instruct issu exampl domain variabl v n f ver encod regist identifi describ bgva bgvb encod symbol term repres program data address distinct valu avoid need equat among variabl equat aris model read write oper regist file bypass logic implement data forward load interlock pipelin issu logic origin processor benchmark verifi without enforc transit con straint unconstrain formula f sat unsatisfi everi case nonetheless motiv studi problem constrain satisfi two reason first processor design might reli transit eg due sophist issu logic second aid design debug pipelin essenti gener counterexampl satisfi transit constraint otherwis design unabl determin whether counterexampl repres true bug weak verifi creat challeng benchmark gener variant circuit requir enforc transit verif exampl normal forward logic execut stage thetadlxc must determin whether forward result memori stage instruct either one operand execut stage instruct compar two sourc regist esrc esrc instruct execut stage destin regist mdest instruct memori stage modifi circuit chang bypass condit esrcmdest esrcmdest esrcesrcesrcmdest given transit two express equival pipelin introduc four modif forward logic differ combin sourc destin regist modifi circuit name thetadlxct thetadlxcat thetadlxcct studi problem counterexampl gener buggi circuit gener variant thetadlxcc contain small modif control logic these found function correct eg modif caus processor stall un necessarili yield total benchmark circuit counterexampl gener tabl give statist benchmark number domain variabl n rang number equat rang verif condit formula f ver also contain proposit variabl express oper control logic variabl plu relat variabl compris set variabl v proposit formula f sat circuit modif requir enforc transit yield formula contain addit equat final three line summar complex buggi variant thetadlxcc appli number simplif gener formula f sat henc small chang circuit yield signific variat formula complex graph formul definit trans equat place restrict length form transit constraint henc infinit number show construct graph represent relat variabl identifi reduc set transit constraint that satisfi guarante possibl transit constraint satisfi introduc relat variabl alter graph structur reduc number transit constraint must consid variabl set e defin undirect graph ge contain vertex edg i variabl e assign boolean valu relat variabl defin label graph ge graph ge edg i label edg e ij edg e ij path sequenc vertic edg success element is element p sequenc p success pair element form edg i consid edg also part path cycl path form i proposit assign variabl e violat transit cycl ge contain exactli one edg proof if suppos cycl let vertex one end edg trace around cycl give sequenc vertic vertex end edg assign e i j i j henc violat equat if suppos assign violat transit constraint given equat then construct cycl i vertic edg i path i said acycl said simpl prefix i proposit assign variabl e violat transit simpl cycl ge contain exactli one edg proof if portion proof cover proposit onli if portion prove induct number variabl anteced transit constraint equat is assum transit constraint contain k variabl anteced violat violat constraint least k variabl anteced valu p q cycl i valu p q exist form transit constraint transit constraint contain fewer k variabl anteced also violat contradict assumpt violat transit constraint fewer k variabl anteced defin chord simpl cycl edg connect two vertic adjac cycl precis simpl cycl i chord edg i ge cycl said chordfre simpl chord proposit assign variabl e violat transit chord contain exactli one edg proof if portion proof cover proposit onli if portion prove induct number variabl anteced transit constraint equat assum transit constraint k variabl violat transit constraint fewer variabl anteced violat valu p q variabl e i p i q correspond cycl chordfre valu p q exist consid two case illustr figur edg shown dash line edg shown solid line wavi line edg edg figur case analysi proposit edg shown dash line cycl repres transit violat contain chord find smaller cycl also repres transit violat repres sequenc edg case edg i edg shown left transit constraint violat fewer k variabl anteced case edg i edg shown right transit constraint violat fewer k variabl case contradict assumpt violat transit constraint fewer k variabl anteced length k cycl i given follow claus claus deriv express equat disjunct set relat variabl e defin f tran e conjunct transit constraint chordfre cycl graph ge theorem assign relat variabl e satisfi transit constraint given equat satisfi f tran e theorem follow directli proposit encod given equat enumer chordfre cycl enumer chordfre cycl graph exploit follow properti acycl path said chord edg i classifi chordfre path termin i ge extens otherwis proposit path i chordfre termin cycl i chordfre follow note condit impos chordfre path ident chordfre cycl except latter includ close edg i proper prefix path i proposit everi proper prefix chordfre path chordfre extens clearli prefix chordfre path also chordfre prefix i termin attempt add edg i would yield either simpl cycl when path i chord given properti enumer set chordfre path breadth first expan sion enumer path also gener c set chordfre cycl defin p k set extens chordfre path k vertic k n initi given set p k gener set p k add cycl length k c path i consid path edg i classifi path cyclic edg i classifi path chord edg i add cycl c otherwis add path p k gener path use set c gener set chordfre cycl termin chordfre cycl k vertic k member c k edg cycl serv close edg cycl travers close edg either direct gener set claus given equat simpli need choos one element c close edg eg consid cycl i figur indic exponenti number chordfre cycl graph particular figur illustr famili graph n vertic consid cycl pass n diamondshap face well edg along bottom diamondshap face f cycl pass either upper vertex lower vertex thu n cycl addit edg form perimet face f creat chordfre cycl give total cycl column label direct tabl show result enumer chordfre cycl benchmark correct microprocessor two graph one transit constraint play role verif one indic t end name modifi requir enforc transit constraint summar result transit oe ae figur class graph mani chordfre cycl graph n diamondshap face cycl circuit direct dens spars edg cycl claus edg cycl claus edg cycl claus thetadlxct thetadlxcct full min buggi avg tabl cycl origin augment benchmark graph result given three differ method encod transit constraint constraint buggi variant thetadlxcc term minimum averag maximum measur also show result five synthet benchmark consist n theta n planar mesh n n rang mesh figur circuit benchmark number cycl although larg appear manag moreov cycl edg synthet benchmark hand demonstr exponenti growth predict worst case behavior number cycl grow quickli mesh grow larger furthermor cycl much longer caus number claus grow even rapidli ad relat variabl enumer transit constraint base variabl e run risk gener boolean formula exponenti size guarante polynomi growth consid larger set relat variabl gener let e set relat variabl let f tran transit constraint formula gener enumer chordfre cycl graph ge theorem e set relat variabl f sat f tran e satisfi f sat f tran introduc seri lemma prove theorem proposit formula f set variabl assign f g defin valuat f denot result evalu formula f accord assign first prove extend assign set relat variabl one superset variabl yield ident valuat transist constraint formula lemma set relat variabl e e assign g f tran assign f tran proof consid case g gener statement proposit hold induct je assign be graph ge path edg node node j consid two case e ij cycl ge must contain edg e ij henc ad edg introduc transit violat e ij must path p edg node j order introduct edg e ij creat transit violat must also path p node j ge exactli one edg could concaten path p p form cycl ge exactli one edg impli f tran conclud therefor ad edg e ij introduc transit violationslemma assign f tran also f tran proof note cycl ge must present ge edg label thu ge cycl singl edg neither ge return proof theorem proof suppos f sat f tran e satisfi ie assign f sat lemma find assign f tran furthermor sinc construct lemma preserv valu assign variabl e relat variabl occur f sat conclud f sat suppos hand f sat f tran assign f sat henc f sat f tran e satisfi goal add relat variabl possibl order reduc size transit formula continu use path enumer algorithm gener transit formula dens enumer dens enumer method let en denot set variabl e ij valu j graph gen complet undirect graph graph cycl length greater three must chord henc algorithm enumer transit constraint form e ij e jk e ik distinct valu i j k graph yield total column label dens tabl show complex method benchmark circuit smaller graph thetadlxc thetadlxct method yield claus direct enumer cycl origin graph larger graph howev yield fewer claus advantag dens method evid mesh graph cubic complex far superior exponenti spars enumer improv method exploit spars structur ge like dens method want introduc addit relat variabl give set variabl result graph is graph properti everi cycl length greater three chord chordal graph studi extens context spars gaussian elimin fact problem find minimum set addit variabl add set ident problem find elimin order gaussian elimin minim amount fillin although problem npcomplet yan good heurist solut satisfi sec satisfi sec full min buggi avg tabl perform fgrasp benchmark circuit result given without transit constraint particular implement proce seri elimin step step remov vertex graph everi pair distinct unelimin vertic j k graph contain edg i j i k add edg j alreadi exist origin graph plu ad edg form chordal graph choos vertex elimin given step implement use simpl heurist choos vertex minimum degre one vertex minimum degre choos one minim number new edg ad column tabl label spars show effect make benchmark graph chordal method observ method give superior result either two method implement therefor use spars method gener transit constraint formula satbas decis procedur boolean satisfi sat checker take input formula express clausal form claus set liter liter either variabl complement claus denot disjunct liter task checker either find assign variabl satisfi claus determin assign exist solv constrain satisfi problem use convent sat checker gener set claus c tran repres f tran set claus c sat repres formula f sat run checker combin claus set c sat c tran find satisfi solut experi number boolean satisfi checker found fgrasp ms best overal perform recent version direct period restart search use randomlygener variabl assign m first sat checker test complet benchmark experi conduct mhz sun ultrasparc ii gb primari memori indic tabl ran fgrasp claus set c sat c tran c sat ie without transit constraint benchmark thetadlxc thetadlxca thetadlxcc formula f sat unsatisfi seen includ transit constraint increas run time significantli benchmark thetadlxct thetadlxcat thetadlxcct formula f sat satisfi transit enforc add claus f tran formula becom unsatisfi buggi circuit run time c sat rang second minut run time c tran c sat rang less one second hour case ad transit constraint actual decreas time by much factor case cpu time increas by much factor averag use geometr mean ad transit constraint increas time factor therefor conclud satisfi check transit constraint difficult convent satisfi check ad complex overwhelm obddbas decis procedur simplemind approach solv satisfi transit constraint use obdd would gener separ obdd represent f tran f sat could use appli oper gener obdd f tran f sat either find satisfi assign determin function unsatisfi show set relat variabl e obdd represent f tran e larg repres manipul experi use cudd obdd packag dynam variabl reorder sift lower bound obdd represent f tran e prove set e obdd represent f tran e may exponenti size possibl variabl order mention earlier npcomplet result prove goel et al gsza implic complex repres f tran e obdd show given obdd g sat repres formula f sat task find satisfi assign f sat also satisfi transit constraint trans npcomplet size g sat thi assum p np infer obdd represent f tran e may exponenti size use variabl order use g sat result extend lower bound arbitrari variabl order independ vs np problem let n denot planar mesh consist squar array n theta n vertic exampl figur show graph planar graph edg partit plane face shown figur label f ij total n face one see set edg form border face form chordfre cycl n shown tabl mani cycl also chordfre eg perimet rectangular region height width greater consid cycl f f f f f f f f f f f f f f f f f f f f figur mesh graph correspond singl face nthetan set relat variabl correspond edg n f tran e nthetan encod transit constraint variabl theorem obdd represent f tran e nthetan must vertic prove theorem consid order variabl repres edg n let denot first half order b denot second half classifi face accord four edg form border a a b b c a other b call split face observ cannot type face adjac type b face sinc share edg cannot b therefor must split face separ region type face region type b face exampl figur show three possibl partit edg result classif face let a b c denot number face respect type see alway c particular minimum valu c achiev partit edg correspond partit graph region type face region type b face nearli equal size split face form boundari two region c figur partit edg set solid b dash face classifi type all solid b all dash c mix lemma partit edg mesh graph n equallys set b must least n gamma split face note lower bound somewhat weakit seem clear must c n gamma howev weaker bound suffic prove exponenti lower bound obdd size proof proof adapt proof leighton lei theorem n bisect bandwidth least n is one would remov least n edg split graph two part equal size observ n n vertic nn gamma edg edg split nn gamma nn gamma b let n denot planar dual n is contain vertex u ij face f ij n edg pair vertic correspond face n common edg fact one readili see graph isomorph ngamma partit vertic n set u u b u c accord type correspond face let a b c denot number element set face n four border edg edg border two face thu upper bound a must nn gamma give nn gamma similarli b addit sinc face type cannot adjac n one type b vertex u adjac one u b consid complet direct bipartit graph edg set u theta u b u b theta u ie total ab edg given bound minimum valu ab achiev either give lower bound emb bipartit graph n form path vertex u ij vertex either u ij u u viceversa convent use path first follow vertic edg u j follow horizont edg u j must least one vertex u c along path therefor remov vertic u c would cut ab path vertex u ij u c bound total number path pass separ consid path enter bottom top left right enter bottom vertic in gamma destin vertic give in path quantiti maxim give upper bound n gamma similar argument show n gamma path enter top vertex path enter left j vertic n gamma destin give j gamma n path quantiti maxim give upper bound n gamma bound also hold path enter right thu remov singl vertex would cut n gamma path combin lower bound number path ab upper bound number path cut remov singl vertex fact remov c vertic have rewrit valu n have set face said edg independ two member set share edg lemma partit edg mesh graph n equallys set b must edgeindepend set split face contain least n gamma element proof classifi pariti face f ij even even odd otherwis observ two face pariti common edg divid set split face two subset even pariti odd subset edg independ one must least element set split face complet proof theorem proof suppos edgeindepend set k split face split face choos one edg one edg b border face valu y f g k defin assign ff y respect fi y variabl repres edg resp b follow edg e part k split face defin ff y edg e part split face one one chosen special let ff edg e chosen variabl face i let ff y give us assign ff y delta fi y variabl evalu is independ split face f two edg cycl graph least two edg hand y z f g k y z assign ff y delta fi z caus evalu face z one edg assign valu thu set assign fff y jy f g k g form obdd fool set defin bri impli obdd must least k ngamma seen ad relat variabl reduc number cycl therefor simplifi transit constraint formula rais question ad relat variabl affect bdd represent transit constraint unfortun exponenti lower bound still hold corollari set relat variabl e e nthetan e obdd represent f tran e must vertic extra edg e introduc complic creat cycl contain edg differ face result lower bound weaker defin set face vertex independ two member share vertex lemma partit edg mesh graph n equals set b must vertexindepend set split face contain least n gamma element proof partit set split face four set ee eo oe oo face f ij assign set accord valu j ee j even eo even j odd oe odd j even oo j odd set vertex independ least one set must contain least element sinc least n gamma split face one set must contain least vertexindepend split face prove corollari proof order variabl e partit two set b come b number variabl e nthetan equal split b suppos vertexindepend set k split face valu y f g k defin assign ff y variabl fi y variabl b assign defin proof theorem addit variabl e ij nthetan assign valu consid set assign ff y delta fi z valu y z f g k cycl ge ff y delta fi z less two edg correspond perimet split face proof theorem set fff y jy f g k g form obdd fool set defin bri impli obdd must least k ngamma lower bound fairli weak reflect difficulti prove lower bound found practic obdd represent transit constraint function aris benchmark tend larg rel encount evalu f sat exampl although obdd represent f tran thetadlxct node a function variabl unabl construct obdd represent function either thetadlxcat variabl thetadlxcct variabl despit run hour enumer elimin violat goel et al gsza propos method gener implic cube function f sat obdd represent implic examin discard violat transit constraint experi found approach work well normal correctli design pipelin ie circuit thetadlxc thetadlxca thetadlxcc sinc formula f sat unsatisfi henc implic buggi circuit first implic gener contain transit violat henc valid counterexampl circuit requir enforc transit constraint found approach im practic exampl verifi thetadlxct mean gener implic requir total second cpu time vs second thetadlxc benchmark thetadlxcat thetadlxcct program ran hour without gener implic contrast circuit thetadlxca thetadlxcc verifi second respect implement could improv make sure gener implic irredund prime gener howev believ verifi gener individu implic robust complex control logic pipelin lead formula f sat contain larg number implic even transit play minor role correct design enforc reduc set transit constraint one advantag obdd represent boolean function readili determin true support function ie set variabl function depend lead strategi comput obdd represent f sat intersect support e give set relat variabl could potenti lead transit violat augment variabl make graph chordal yield set variabl circuit vert direct dens spars edg cycl claus edg cycl claus edg cycl claus thetadlxct reduc min buggi avg thetadlxcc max tabl graph reduc transit constraint result given three differ method encod transit constraint base variabl true support f sat circuit obdd node cpu reduc min buggi avg thetadlxcc max tabl obddbas verif transit constraint gener reduc set variabl gener obdd represent f tran satisfi gener counterexampl tabl show complex graph gener method benchmark cir cuit compar full graph shown tabl see typic reduc number relat vertic ie edg factor benchmark modifi requir transit even greater factor buggi circuit benchmark result graph also spars exampl see direct spars method encod transit constraint greatli outperform dens method tabl show complex appli obddbas method bench mark origin circuit thetadlxc thetadlxca thetadlxcc yield formula f sat unsatisfi henc transit constraint requir modifi circuit thetadlxct thetadlxcat thetadlxcct interest reduct number relat variabl make feasibl gener obdd represent transit constraint compar benchmark thetadlxc thetadlxca thetadlxcc see signific although toler increas comput requir verifi modifi circuit attribut complex control logic need appli transit constraint buggi variant thetadlxcc f sat depend relat variabl averag yield obdd f tran rang node averag obdd f sat f tran rang node averag show ad transit constraint significantli increas complex obdd represent howev one obdd end sequenc obdd oper worst case impos transit constraint increas total cpu time factor averag increas memori requir gener f sat rang mb averag even worst case total memori requir increas conclus formul graphic interpret relat variabl shown gener set claus express transit constraint exploit spars structur relat ad relat variabl make graph chordal elimin theoret possibl exponenti number claus also work well practic convent sat checker solv constrain satisfi problem although run time increas significantli compar unconstrain satisfi best result obtain use obdd consid relat variabl true support f sat enforc transit constraint small increas cpu time r graphbas algorithm boolean function manipul on complex vlsi implement graph represent boolean function applic integ multipl exploit posit equal logic equal uninterpret function processor verif use effici reduct logic uninterpret function proposit logic autom verif pipelin microprocessor control techniqu verifi superscalar microprocessor bdd base procedur theori equal uninterpret function comput architectur quantit ap proach introduct parallel algorithm architectur array grasp search algorithm proposit satisfi the impact branch heurist proposit satisfi algorithm triangul graph elimin process superscalar processor verif use effici reduct logic equal uninterpret function comput minimum fillin npcomplet tr graphbas algorithm boolean function manipul complex vlsi implement graph represent boolean function applic integ multipl introduct parallel algorithm architectur techniqu verifi superscalar microprocessor comput architectur nd ed grasp processor verif use effici reduct logic uninterpret function proposit logic effect use boolean satisfi procedur formal verif superscalar vliw chaff impact branch heurist proposit satisfi algorithm superscalar processor verif use effici reduct logic equal uninterpret function proposit logic bdd base procedur theori equal uninterpret function automat verif pipelin microprocessor control exploit posit equal logic equal uninterpret function ctr miroslav n velev effici formal verif pipelin processor instruct queue proceed th acm great lake symposium vlsi april boston ma usa miroslav n velev use posit equal prove live pipelin microprocessor proceed confer asia south pacif design autom electron design solut fair p januari yokohama japan miroslav n velev use abstract effici formal verif pipelin processor valu predict proceed th intern symposium qualiti electron design p march miroslav n velev effici translat boolean formula cnf formal verif microprocessor proceed confer asia south pacif design autom electron design solut fair p januari yokohama japan miroslav n velev randal e bryant effect use boolean satisfi procedur formal verif superscalar vliw microprocessor journal symbol comput v n p februari miroslav n velev exploit signal unobserv effici translat cnf formal verif microprocessor proceed confer design autom test europ p februari robert nieuwenhui albert olivera cesar tinelli solv sat sat modulo theori abstract davisputnamlogemannloveland procedur dpllt journal acm jacm v n p novemb