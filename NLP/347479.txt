t speed power clairvoy a introduc resourc augment method analyz onlin schedul problem resourc augment analysi onlin schedul given resourc say faster processor processor adversari appli analysi two wellknown onlin schedul problem classic uniprocessor cpu schedul problem ri pmtnsgr fi besteffort firm realtim schedul problem ri pmtn sgr wi ui known constant competit nonclairvoy onlin algorithm problem show simpl onlin schedul algorithm problem constant competit onlin schedul equip slightli faster processor adversari thu moder increas processor speed effect give onlin schedul power clairvoy furthermor onlin schedul constant competit input close correl processor speed also show perform onlin schedul besteffort real time schedul significantli improv system design way laxiti everi job proport length b introduct consid sever well known nonclairvoy schedul problem includ problem minim averag respons time besteffort firm realtim schedul we postpon formal defin problem next section nonclairvoy schedul relev inform eg job arriv futur avail schedul algorithm a standard way measur advers effect lack knowledg competit ratio opti ai denot cost schedul produc onlin algorithm input i opti denot cost optim schedul competi support part nsf grant ccr kalyancspittedu httpwwwcspittedukalyan support part nsf grant ccr tive ratio problem min opti min onlin algorithm standard way interpret competit ratio payoff game play onlin algorithm allpow malevol adversari specifi input i one primari goal analysi identifi work well practic competit analysi critic often yield ratio unrealist high normal input result fail identifi class onlin algorithm work well schedul problem consid good exampl phenomenon competit ratio unbound simpl nonclairvoy algorithm perform reason well practic explain phenomenon adopt call weak adversari model assum speed processor use nonclairvoy schedul speed processor use clairvoy ad versari ffl defin fflweak competit ratio problem be min subscript denot speed processor use correspond algorithm origin motiv standard competit ratio use diverg onlin al gorithm output optim measur advers effect nonclairvoy fflweak competit ratio give us anoth measur also suggest practic way combat advers effect nonclairvoy problem small ffl competit ratio moder ffl mean moder increas processor speed effect buy power clairvoy therefor weak adversari model give system design practic way increas speed processor improv perform system normal input one would intuit expect offlin perform system would degrad drastic speed processor increas slightli algorithm bound ffl competit ratio bound competit ratio input opt ioptffl i bound thu algorithm bound fflweak competit ratio bound competit ratio input fall formul normal give algorithm schedul problem fflweak competit ratio sole function ffl input i furthermor ffl increas fflweak competit ratio quickli approach one previou current result gener schedul problem consist collect jng independ job run singl processor while result extend multiprocessor set restrict attent singl processor simplic job j releas time r length x j run time r time requir complet j x divid speed processor assum onlinenonclairvoy schedul awar j consid preemptiv schedul is job alway restart point last execut assum context switch requir time problem minim averag respons time job well known wide studi problem oper system schedul see exampl assum nonclairvoy schedul learn x time r gen eral deduc x run j com pletion complet time c job j time j alloc enough time finish execut similarli respons time w idl time speed processor w problem minim averag respons determinist competit ratio omegagamma n random competit ratio n easili shown algorithm unnecessarili idl processor competit ratio on surprisingli best known upper bound competit ra tio even allow random competit ratio commonli use round robin algorithm section first consid queue size function time defin qa t s set job releas time t finish algorithm time assum use speed processor show everi non clairvoy schedul algorithm input time jqa t jjq opt t set cardin give onlin algorithm balanc b short guarante time jqb t ffl jqopt t j impli balanc fflweak competit ratio ffl problem minim averag respons time contrast show fflweak competit ratio round robin omegagamma n gammaffl assum nonclairvoy ant schedul equip unit speed processor ffl speed processor instead ffl speed pro cessor here assum ffl case give nonclairvoy schedul algorithm balanc averag respons time ffl time averag respons time adversari mean nonclairvoy schedul supercomput old pc constant competit clairvoy schedul supercomput fi nalli demonstr balanc fair everi job see prove maximum idl time balanc quit compar offlin besteffort firm realtim schedul job j deadlin benefit b addit releas time execut time also use defin valu densiti job j laxiti j speed processor maximum amount j delay complet sinc realtim system embed system schedul gener awar advanc job may re ceiv thu standard assumpt time r schedul learn x b j finish time algorithm receiv benefit b otherwis benefit gain job goal schedul maxim total benefit job complet sinc maxim problem competit ratio definit introduct modifi invert ratio exampl competit ratio problem min opti determinist competit ratio problem thetaphi random competit ratio thetaminlog phi log delta import ratio phi ratio maximum valu densiti job minimum valu densiti job delta ratio length longest job length shortest job competit ratio unbound even special case section first assum nonclair voyant schedul adversari unit speed processor laxiti job j least fflx upper bound standard competit ratio laxiti assumpt also upper bound fflweak competit ratio sinc job j laxiti least fflx speed processor cant finish unit speed pro cessor formul also ad advantag show effect laxiti laxiti as sumption give algorithm slacker competit ratio function ffl approach three ffl increas result show realtim system design everi job laxiti reason fraction execut time job result competit ratio reason small effect laxiti competit ratio special case show fflweak competit ratio slacker approach one ffl increas weak adversari model compar onlin algorithm less power knowledg adversari consid queryrespons problem kserver problem special case eg onlin weight match case adversari handicap fewer server one argu weak competit ratio essenti call compar ratio howev result realli differ flavor primarili concern effect partial clairvoy anc method suggest address limit competit analysi method includ restrict input distribut satisfi special properti eg compar cost solut produc onlin algorithm input worstcas optim cost input size averag respons time follow well known lemma explain first consid queue size lemma schedul algorithm speed processor total respons time lemma everi nonclairvoy schedul algorithm input time proof job arriv time one job arriv time adversari set job length onlin finish job time one show adversari alway run shorter job alway two activ job key point note time sum remain unfinish length two job adversari queue satisfi give onlin algorithm balanc guarante queue size much optim weak adversari scenario algorithm balanc job j time defin amount time balanc execut j time t time t balanc split process time equal among job j minimum analysi balanc base follow lemma lemma let b algorithm balanc point time jqb t ffl jqopt t j proof lemma follow ensu chain reason let ub set job unfinish balanc ua set job unfinish adversari time mention lemma intuit adversari use time balanc spent job ua finish job ub gammau need show weak adversari assumpt mean order borrow enough time finish job ub gamma ua must case ua reason larg say job j immedi borrow anoth job j j denot balanc ran j j time satisfi time adversari could execut balanc execut j j borrow relat denot j transit closur immedi borrow relat defin g intuit adversari transfer time j j ua j lemma let j job balanc saw complet time t job j proof suppos job j mani job j j select one reach j shortest path p direct unweight graph induc relat immedi borrow let j k job p immedi j j j k j j definit p x last time j j run time t notic must case c k x j k would j j s predecessor p henc definit balanc j k j j k henc deduc reach contradict sinc pg sinc adversari complet job ub gammau total time spent balanc job ua must least partit time balanc spent job cumul time ith class least ffl note could collect time interv call partit good job x ua portion time spent balanc x includ kxk kj k lemma alway exist good partit proof earliest releas time job bx let ub gamma index j definit relat immedi borrow must case job execut balanc time interv tj t must member bj also observ rang must run finish job bj interv tj t therefor p must case cumul amount time spent balanc job bj must least observ consequ induct i time spent job ua balanc distribut job ub gamma ua job j get ffl unit time job bj u result follow sinc lemma kxk kj k proof lemma intuit suggest that adversari go finish job need rais ffl k j k unit time job j know suggest analyz follow problem get lower bound number job ub politician problem n politician tri rais money contributor ith politician must rais ffl dollar j contributor c j dollar contribut elect rule say jth contributor contribut ith politician c j politician rais money mani contributor contributor give money sever politician lemma solut politician problem ffln m proof contribut j contributor politician sinc fraction ffl ith politician got j contributor sinc everi politician success case that elect rule fraction c j j contributor gave ith politician proof appli lemma know job j must find ffl unit time job j lemma appli lemma case get jua j follow theorem follow lemma theorem fflweak competit ratio balanc respect averag respons time ffl show commonli use algorithm round robin constant fflweak competit ratio small ffl round robin split process time evenli among unfinish job lemma problem minim averag respons time fflweak competit ratio round robin proof divid time stage let ith stage start time let ffl two job length ffl releas time one job releas time length si exactli length round robin left previou job guarante adversari finish job releas time time get recurr expand get total respons time adversari theta theta total respons time round robin theta follow theorem show balanc overli delay job improv perform averag respons time theorem fflweak competit ratio balanc respect maximum idl time ffl proof time balanc complet job j idl time maxi mum shorten unfinish job let us assum balanc complet job time t let idl time experienc use balanc lemma amount time spent balanc job r due differ speed must case adversari finish job j j time fflt balanc run j j d hand balanc ran j j r therefor gamma d notic j j must arriv tgamma therefor idl time incur adversari j j must least assum nonclairvoy schedul equip unit speed processor ffl speed processor almost competit equip speed processor assum ffl assum simplic ffl integ algorithm balanc run job j run least unit speed processor run job j run least ffl speed processor analysi balanc follow line analysi balanc modifi definit immedi borrow follow way job j immedi borrow time anoth job j j run j j either balanc run run j processor slower processor j j run on defin ua ub borrow bj befor defin initi length j execut time balanc lemma let j job balanc saw complet time t job j modifi politician problem n politician origin contributor let must refund least ffl i dollar contributor jth contributor requir c j dollar refund elect rule say ith politician refund money jth contributor c j lemma solut modifi politician problem ffln gamma proof assum without loss gener assum refund c j refund c j situat swap transit refund c j refund c j easi see assum without loss gener solut modifi politician problem without swap let us multipli refund politician factor ffl simultan also increas pool potenti contributor factor ffl replac origin contributor ffl ident contributor repeat previou assign ffl time politician still success refund money prove induct i least contributor among mffl contributor get refund politician i contributor get refund politician assum get refund first politician swap assumpt otherwis c cannot accept refund politician assum hypothesi hold show hypothesi also hold i induct hypothesi contributor get refund ith politician let c ffi highest contributor got refund ith politician c ffi i c ffi cannot get refund politician hand c ffi i contributor get refund politician swap assumpt lemma let b algorithm balanc point time jqb t ffl jqopt t j proof go reduc modifi politician problem member ua contributor member ub gamma ua politician let ub gamma j job order increas order releas time sinc least two job unfinish time interv r must case balanc run processor throughout period assum balanc run two job j j b time time r ffi t claim j g neither j j b j ffigamma bj ffigamma definit otherwis say j execut round robin fashion claim follow notic assum length job j ffi exactli best case adver sari balanc adversari execut length job ub gamma ua henc extra fflt gamma r ff work the refund done balanc must go job ua consid might distribut must case extra work must period r must distribut job think j ffigamma give refund job bj ffigamma elect rule satisfi lemma appli modifi politician lemma rest argument befor theorem averag respons time bal anc unit speed processor ffl speed processor ffl time averag respons time adversari given unit speed processor proof theorem follow appli lemma note adversari must run job durat ffl even balanc complet job time realtim schedul describ algorithm slacker need introduc definit notat recal first assum nonclairvoy schedul clairvoy adversari unit speed processor laxiti job j least fflx notat conveni let job j viabl time schedul algorithm finish j is run j least x unit time defin slack job j time t job fresh time otherwis say job stale time t let c constant defin later defin densiti class job j blog c v c assum normal smallest valu densiti one densiti class rang blog c phic x set job let kxk denot total benefit job x let opt set job finish adversari algorithm slacker time r slacker switch j j higher densiti class job j j slacker current run happen j j save repres job densiti class blog c v j c slacker finish job j time t let ff largest integ current fresh job densiti class ff viabl repres job class ff viabl repres job j densiti class ff slacker resum execut j otherwis slacker start execut arbitrari fresh job densiti class ff let set job complet slacker r set job run slacker may proper subset r sinc slacker may finish everi job start lemma let j arbitrari repres job densiti class ff slacker com plete period least unit time r slacker run job densiti class ff lemma assum densiti job integr power c proof imagin job j r account associ it account job initi start b point account start zero point redistribut point account job account job r gamma s argument revers induct densiti class first note slacker finish everi job densiti class blog c phic begin assum consid job densiti class ff let j job repres job densiti class ff time slacker ran job j j densiti class fi ff unit time transfer j j s account j s account lemma j borrow total time least ffi x henc borrow least c ff x point thu account contain least b point need examin much account job j densiti class ff deplet job lower densiti class repres job densiti class ff take c fi x ffi point account j henc number point remain account j least lemma assum densiti job integr power c koptk ffi proof assum adversari ran job densiti c ff unit time credit adversari point regardless whether finish job not defin job dens densiti c ff greater show total amount time adversari spent run dens job time time slacker run dens job divid time follow way let oe first point time slacker start run dens job let first point time oe slacker run dens job let oe first point time igamma slacker begin run dens job note dens job arriv oe i consid longest dens job j j arriv oe slacker run j stale time henc mean time adversari run dens job slacker run ffi time time slacker run dens job must add one ratio job adversari slacker ran lemma follow revers induct ff theorem assumpt everi job j laxiti least fflx competit ratio slacker proof appli lemma lemma remov condit densiti job integr power c one verifi let get bound competit ratio ffi competit ratio goe three ffi increas go back assum slacker speed processor show fflweak competit ratio approach one modifi lemma follow proof similar proof lemma lemma assum densiti job integr power c slacker speed processor conclus believ weak adversari model use identifi onlin algorithm work well practic type problem import weaken adversari done way correspond strengthen onlin algorithm achiev practic worth mention problem consid paper increas speed onlin processor way weaken adver sari exampl case realtim schedul suffic design realtim system way laxiti condit satisfi final would like mention weak adversari model use recent show natur greedi algorithm work reason well practic almost optim onlin weight match tradit competit analysi show bound theta wherea weak adversari analysi yield bound thetalog m size graph acknowledg second author would like thank daniel moss rege colwel richard su choza dimitri zorin mani help discuss realtim schedul r on improv perform guarante use slack time onlin schedul maxim task complet on competit onlin realtim task schedul onlin schedul presenc overload a new measur studi onlin algorithm onlin realtim schedul laxiti oper system concept fault toler realtim schedul the onlin transport problem beyond competit analysi d an optim onlin schedul algorithm overload realtim system moca multiprocessor onlin competit algorithm realtim system schedul oper system concept design non clairvoy schedul a statist adversari onlin algorithm amort effici list updat page rule onlin schedul job fix start end time the kserver dual loos competit page tr amort effici list updat page rule oper system concept rd ed onlin schedul presenc overload oper system concept design competit onlin realtim task schedul moca onlin schedul job fix start end time nonclairvoy schedul approxim algorithm schedul optim timecrit schedul via resourc augment extend abstract art comput program volum rd ed schedul overload realtim system onlin comput competit analysi schedul dark page replac gener cach problem tradeoff speed processor harddeadlin schedul schedul algorithm speed power claivoy competit analysi round robin algorithm onlin schedul onlin transport problem faulttoler realtim schedul maxim job complet onlin minim flow time nonclairvoyantli jitter control qo network ctr moham eid hussein uwe schwiegelshohn util nonclairvoy onlin schedul theoret comput scienc v n p octob jaehoon kim kyungyong chwa onlin deadlin schedul faster machin inform process letter v n p januari leah epstein rob van stee optim onlin flow time resourc augment discret appli mathemat v n p march marek chrobak leah epstein john noga ji sgall rob van stee tom tich nodari vakhania preemptiv schedul overload system journal comput system scienc v n p august thoma erlebach alexand hall nphard broadcast schedul inapproxim singlesourc unsplitt mincost flow proceed thirteenth annual acmsiam symposium discret algorithm p januari san francisco california thoma erlebach alexand hall nphard broadcast schedul inapproxim singlesourc unsplitt mincost flow journal schedul v n p mayjun holeung chan takwah lam karkeung to nonmigratori onlin deadlin schedul multiprocessor proceed fifteenth annual acmsiam symposium discret algorithm januari new orlean louisiana luca becchetti stefano leonardi alberto marchettispaccamela kirk pruh semiclairvoy schedul theoret comput scienc v n p septemb franci y l chin stanley p y fung improv competit algorithm onlin schedul partial job valu theoret comput scienc v n p octob jaehoon kim kyungyong chwa nonclairvoy schedul weight flow time inform process letter v n p juli guido schfer naveen sivadasan topolog matter smooth competit metric task system theoret comput scienc v n p septemb jason mccullough eric torng srpt optim util faster machin minim flow time proceed fifteenth annual acmsiam symposium discret algorithm januari new orlean louisiana bala kalyanasundaram kirk r pruh maxim job complet onlin journal algorithm v n p octob jeff edmond kirk pruh broadcast schedul fair fine proceed thirteenth annual acmsiam symposium discret algorithm p januari san francisco california n bansal k dhamdher minim weight flow time proceed fourteenth annual acmsiam symposium discret algorithm januari baltimor maryland bala kalyanasundaram kirk r pruh minim flow time nonclairvoyantli journal acm jacm v n p juli chiuyuen koo takwah lam tsuenwan ngan kunihiko sadakan karkeung to onlin schedul tight deadlin theoret comput scienc v n p februari anupam gupta bruce m magg florian oprea michael k reiter quorum placement network minim access delay proceed twentyfourth annual acm symposium principl distribut comput juli la vega nv usa chiuyuen koo takwah lam tsuenwan ngan karkeung to competit deadlin schedul via addit faster processor journal schedul v n p marchapril takwah lam tsuenwan johnni ngan karkeung to perform guarante edf overload journal algorithm v n p august chiuyuen koo takwah lam tsuenwan ngan karkeung to extra processor versu futur inform optim deadlin schedul proceed fourteenth annual acm symposium parallel algorithm architectur august winnipeg manitoba canada jeff edmond kirk pruh maiden analysi longest wait first proceed fifteenth annual acmsiam symposium discret algorithm januari new orlean louisiana michael h goldwass patienc virtu effect slack competit admiss control journal schedul v n p marchapril c greg plaxton yu sun mitul tiwari harrick vin reconfigur resourc schedul proceed eighteenth annual acm symposium parallel algorithm architectur juli august cambridg massachusett usa ryan porter mechan design onlin realtim schedul proceed th acm confer electron commerc may new york ny usa jeff edmond suprakash datta patrick dymond tcp competit limit adversari proceed fifteenth annual acm symposium parallel algorithm architectur june san diego california usa jeff edmond kirk pruh maiden analysi longest wait first acm transact algorithm talg v n p juli kirk pruh competit onlin schedul server system acm sigmetr perform evalu review v n march wuntat chan takwah lam kinsh liu prudenc w h wong new resourc augment analysi total stretch srpt sjf multiprocessor schedul theoret comput scienc v n p august chandra chekuri ashish goel sanjeev khanna amit kumar multiprocessor schedul minim flow time resourc augment proceed thirtysixth annual acm symposium theori comput june chicago il usa holeung chan takwah lam kinsh liu extra unitspe machin almost power speedi machin competit flow time schedul proceed seventeenth annual acmsiam symposium discret algorithm p januari miami florida joan boyar lene m favrholdt kim s larsen rel worst order ratio appli page proceed sixteenth annual acmsiam symposium discret algorithm januari vancouv british columbia nikhil bansal kirk pruh server schedul lp norm rise tide lift boat proceed thirtyfifth annual acm symposium theori comput june san diego ca usa joan boyar lene m favrholdt kim s larsen rel worstord ratio appli page journal comput system scienc v n p august sandi irani kirk r pruh algorithm problem power manag acm sigact new v n june roughgarden va tardo bad selfish rout journal acm jacm v n p march