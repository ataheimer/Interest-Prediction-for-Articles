t simplifi failureinduc input a given test case program fail part test case respons particular failur show delta debug algorithm gener simplifi fail input minim test case produc failurein case studi mozilla web browser crash user action prototyp implement automat simplifi input relev user action likewis simplifi line html singl line caus failur case studi requir autom test run minut mhz pc b introduct often peopl encount bug spend lot time investig chang input file make bug go away chang affect it richard stallman use port gnu cc mozilla engin face immin doom juli open bug report store bug data base readi simplifi simplifi meant turn bug report minim test case everi part input would signific reproduc failur overwhelm work engin sent mozilla bugathon call volunt would help process bug report bug report simpli fie volunt would reward invit launch would earn tshirt sign grate engin decompos specif bug report simpl test case troubl engin mozilla netscap open sourc web browser project problem aris gener conflict issu bug report must specif possibl engin recreat context program fail hand test case must simpl possibl minim test case impli gener context thu minim test case allow short problem descript valuabl problem insight also subsum sever current futur bug report strike thing test case simplif one far thought autom task sever textbook guid debug avail tell use binari search order isol problembas assumpt test carri manual too autom test howev also autom test case simplif describ paper delta debug algorithm ddmin fed test case simplifi success test ddmin stop minim test case reach remov singl input entiti would caus failur disappear gener ddmin requir time on given input n en titi wellstructur input lead better perform best case singl input entiti caus failur ddmin requir logarithm time find entiti ddmin tailor languagespecif knowledg begin discuss problem basic ddmin algorithm use number reallif failur show ddmin algorithm detect failureinduc input test case isol simplifi close discuss relat futur work configur test ian hickson stay am simplifi bug first night bugathon mozilla bugathon call let us begin basic definit first all minim test case mean everi program smallest possibl input induc welldefin behavior qualifi failur typic empti input someth close exampl c compil accept empti translat unit empti c file smallest possibl input given empti input www browser suppos produc defin error messag given empti input file l e x typeset system suppos produc error messag note smallest possibl input necessarili smallest valid input even invalid input possibl long program fail let us view failureinduc input c result appli number chang n minim possibl input way gradual transit minim possibl input chang appli c chang appli deliber give formal definit chang here gener stand chang circumst influenc execut program previou work instanc model chang program code paper search failureinduc circumst program input henc chang oper appli input import thing appli chang result failureinduc set c case studi present paper alway chosen chang lexic decomposit failureinduc input is stand lexic entiti present the chang appli the chang appli ex ampl consid minim possibl input empti failureinduc input consist n line text chang would add th line empti input appli chang result full set line model chang lexic decomposit easiest approach model easili extend notion chang still treat chang given entiti let us formal defin test test case describ test case minim possibl input c configur chang test case let set chang chang set c c call test case test case construct appli chang minim possibl input possibl input empti test case call minim possibl input impos constraint chang may com bine particular assum chang order worst case n possibl test case n chang determin whether test case induc failur assum test function accord posix standard test framework distinguish three outcom definit section adapt previou work see section discuss test succe pass written test produc failur intend captur test produc indetermin result unresolv written definit test function test determin test case c c whether given failur occur whether test unresolv practic test would construct test case appli given chang minim possibl input feed test case program return outcom let us model initi scenario minim possibl input work fine test case fail axiom fail test case follow hold fail test case goal simplifi fail test case cthat is minim it test case c minim mean subset c caus test fail formal definit minim test case test case c c minim hold want minim test case c part signific produc failurenoth remov without make failur disappear minim test case simplifi test case mean simplest possibl web page still reproduc bug remov charact file simplifi test case longer see bug mozilla bugathon call one actual determin minim test case come bad news let test case c consist c chang charact line function insert minim input reli test alon determin minim requir test c true subset c obvious exponenti complex determin howev approximationfor in stanc test case everi part still signific produc failur check whether remov sever part might make test case even smaller for malli defin properti minim nminim defin as list untest unsupport outcom relev here precis axiom tell us result test subset need test help much minim debug algorithm minim delta debug algorithm ddminc reduc subset reduc complement c otherwis done c c pairwis disjoint c c cn well recurs invari and thu precondit ddmin figur minim delta debug algorithm definit nminim test case test case c c nminim hold fail test case c compos c line would thu minim remov singl line would caus failur disappear likewis would minim remov combin three less line would make work again c cminim c minim sens definit definit give first idea aim at how ever given say line test case cannot simpli remov individu line order minim it thu need effect algorithm reduc test case effici minim algorithm proce binari search throw away half input see output still wrong not go back previou state discard half input brian kernighan rob pike practic program human order minim test case use binari search c contain one chang c minim definit otherwis partit c two subset c c similar size test them give us three possibl outcom reduc c test c failsc smaller test case reduc c test c failsc smaller test case ignor test pass unresolvedneith c c qualifi possibl simplif first two case simpli continu search fail subset illustr tabl line diagram show configur number stand includ chang dot stand exclud chang chang minim fail test caseand isol step given suffici knowledg natur input certainli partit test case two subset least one fail test knowledg insuffici present all let us begin worst case split c subset test pass unresolvedignor complet know c whole fail increas chanc get fail subset test larger subset c increas chanc test failsth differ c smaller hand smaller differ mean slower progressionth test case halv reduc smaller amount test smaller subset c get faster progress case test fail hand chanc test fail smaller specif method combin partit c larger number subset test small c well larg complement c until subset contain one chang give us best chanc get fail test case disad vantag cours subset mean test happen let n number subset c c n test c complement possibl outcom figur reduc subset test c fail c smaller test case continu reduc c subset configur test tabl quick minim test case configur test test c c increas granular test c c test complement reduc test carri earlier step test complement reduc increas granular test c c c test complement reduc c test c c test complement tabl minim test case increas granular reduct rule result classic divid conquer approach one identifi smaller part test case failureinduc own rule help narrow test case effici reduc complement test c smaller test case continu reduc continu n two subset here split subset mean subset c ident subset c cin word everi subset c eventu get test continu two subset from say would work way would next subset c test increas granular otherwis that is test fail tri n subset should n c hold tri c subset instead contain one chang result twice mani test increas chanc failur process repeat granular longer increas that is next n would larger c case alreadi tri remov everi singl chang individu without failur result chang set minim exampl consid tabl minim test case consist chang test case includ subset chang result unresolv test outcom test case includ none chang pass test begin partit total set chang two halv none pass test continu granular increas subset step test complement set remov chang continu split c three subset next three test step alreadi carri need repeat mark test elimin increas granular subset test step last complement elimin chang chang remain step show none chang elimin minim test case total differ test requir close formal properti ddmin first ddmin eventu return minim test case proposit ddmin minim c c ddminc minim sens definit proof accord ddmin definit figur ddminc return c n c test subset c c c c c n test condit definit appli c minim worst case ddmin take c proposit ddmin complex worst case number test carri ddminc c worst case proof worst case divid two phase first everi test inconsist test last complement result failur hold first phase everi test inconsist result reinvoc ddmin doubl number subset number test carri second phase worst case test last complement c n fail ddmin reinvok ddmin result c call ddmin two test per call c overal number test thu cc practic howev unlik ncharact input requir test divid conquer rule ddmin take care quickli narrow failureinduc part input proposit ddmin complex best case one failureinduc chang c test case includ caus failur well number test limit proof given condit must alway either c c whose test fail thu overal complex binari search whether best case effici appli depend abil break input smaller chunk result determin or better fail test outcom consequ knowledg structur input have better identifi possibl failureinduc subset better overal perform ddmin surpris thing howev even knowledg input structur all ddmin algorithm suffici per formanceat least case studi examin illustr follow three section case studi gcc get fatal signal none us time studi larg program figur would work compil correctli much less line compil wrong richard stallman use port gnu cc let us turn reallif input c program figur demonstr particular nasti aspect languag also caus gnu c compil gcc crashat least use version intellinux optim enabl crash gcc grab avail memori stack process may run resourc die latter prevent limit stack memori avail gcc effect remain author deni liabil damag caus repeat experi defin size doubl multdoubl z int n int return zn void copydoubl to doubl from int count int switch count case case case case case case case case n return multto int mainint argc char argv doubl xsize ysize doubl px x return copyy x size figur bugc program crash gnu cc gcc intern compil error program cc got fatal signal gcc error messag and result core dump help gcc maintain onli ordinari user must narrow failureinduc input bugcand minim bugc order file bug report case gcc minim test input empti input sake simplic model chang insert singl charact mean chang c becom th charact bugc c becom entir failureinduc input bugc partit c mean partit input part made exploit syntact semant knowledg c program consequ expect larg number input size test execut tcmin log bugc figur minim gcc input bugc test case invalid c program minim bugc implement ddmin algorithm figur wynot prototyp test procedur would creat appropri subset bugc feed gcc return iff gcc crash otherwis result wynot run shown figur first two test wynot alreadi reduc input size charact charact respectivelyth test case contain mult function reduc mult how ever take time test and second get test case minim further charact left tdoubl zint nint return zn test case minimalno singl charact remov without remov failur even everi singl superflu whitespac remov function name shrunk mult singl at least know neither whitespac function name failureinduc figur show excerpt bugc test log the charact indic omit charact regard minim in put see ddmin algorithm tri remov everi singl chang charact order minim input even further everi test result syntact invalid program tdoubl zint nint i j tdoubl zint nint i j tdoubl zint nint i j tdoubl zint nint i j tdoubl zint nint i j tdoubl zint nint i j tdoubl zint nint i j figur excerpt bugc test log gcc user file minim bug report gcc failur actual occur alreadi know work yesterday today time measur linux pc mhz pentium iii processor time given cpu user time wynot prototyp measur unix kernel includ spawn child process such gcc run exampl option test execut tcmin log gcc option figur minim gcc option failur associ optim could possibl influenc optim way failur disappear gcc document list option use influenc optim linux shown tabl turn appli option caus failur disappear fnodeferpop fstrictalias bugc mean option list prevent failur use test case minim order find prevent op tion time c stand gcc option tabl sinc want find option prevent failur test outcom invert test return gcc crash gcc work fine wynot run straightforward divid conquer search shown figur test and less second singl option ffastmath found prevent failur unfortun ffastmath option bad candid work around failur may alter semant program remov ffastmath list option make anoth wynot run test turn option fforceaddr also prevent failur ffloatstor fnodefaultinlin fnodeferpop fforcemem fforceaddr fomitframepoint fnoinlin finlinefunct fkeepinlinefunct fkeepstaticconst fnofunctioncs ffastmath fstrengthreduc fthreadjump fcsefollowjump fcseskipblock freruncseafterloop frerunloopopt fgcse fexpensiveoptim fscheduleinsn ffunctionsect fdatasect fcallersav funrollloop funrollallloop fmoveallmov freduceallgiv fnopeephol fstrictalias tabl gcc optim option input size test execut tcmin log flex figur minim flex fuzz input option prevent failur run gcc remain option show failur still there seem identifi failureprev option send gcc maintain minim test case the failur occur optim ffastmath fforceaddr prevent failur still cannot identifi place gcc code caus problem hand identifi mani failur circumst can practic program maintain easili enhanc autom regress test suit failur circumst automat simplifi fail test case case studi minim fuzz understand context problem occur like solv problem complet rather one aspect it steve mcconnel code complet classic experi bart miller team examin robust unix util servic send fuzz inputa larg number random charact studi show that worst case basic program crash went infinit loop fed fuzz input want know well ddmin algorithm perform minim fuzz input sequenc examin subset unix util list miller paper nroff format document display troff format document typesett flex fast lexic analyz gener crtplot graphic filter variou plotter ul underlin filter unit convert quantiti set differ fuzz input differ size charact content whether charact printabl charact includ whether nul charact includ not shown tabl miller result still applyat least sun solari oper system test run util crash time input size test execut tcmin log crtplot test figur minim crtplot fuzz input appli wynot tool case minim failur induc fuzz input tabl show result input size tabl list number test requir depend crash caus program could partit two group first group program show obviou buffer overrun problem flex robust util crash sequenc nonnewlin nonnul charact ul crash sequenc printabl non newlin charact t t t unit crash sequenc bit charact figur show first test wynot run flex test remain size charact alreadi close final size howev take test elimin one charact second group program appear vulner random command nroff troff crash malform command like djf bit input n troff crtplot crash onelett input t wynot run crtplot shown figur take test minim fuzz input charact singl failureinduc charact again test run and been entir autom allow massiv autom stochast test program fed fuzz input order reveal defect soon failur detect input minim gener larg fuzz input minim bug report tabl also includ repeat test carri earlier step averag number actual nonrep test smaller input shown c string notat test pass tabl test outcom unix util subject fuzz input name charact rang printabl printabl nul charact ye ye tabl size minim failureinduc fuzz input case studi mozilla cannot print cut away much html css javascript can cut away caus bug disappear done mozilla bugathon call last case studi want simplifi realworld mozilla test case thu contribut mozilla bugathon search bugzilla mozilla bug databas show us bug report anantkyahoocom ok follow oper caus mozilla crash consist machin go bugzillamozillaorg select search bug print file set bottom right margin use file vartmpnetscapep done print exact thing file vartmpnetscapep caus browser crash segfault case mozilla input consist two item sequenc input eventsthat is success mous motion press key click buttonsand html code erron www page use xlab capturereplay tool run mozilla captur user action log file could easili reproduc error creat xlab log record x event wynot tool would use xlab replay log feed mozilla record user action thu autom mozilla execut first run want know whether action bug report actual necessari thu subject log test case minim order find failureinduc minimum user action x event relat user actionsthat is move mous pointer press releas mous button press releas key keyboard user action subject minim result run shown figur test run or user action left press p key alt modifi key held invok print dialog press mous button print button without modifi arm print button releas mous button start print user action remov includ move mous pointer select print file option alter default file name set print margin releas p key click printal irrelev produc failur sinc user action hardli gener turn attent anoth input sourceth failureinduc html code origin search bug page length charact line order minim html code chose hierarch first run want minim number line that is c identifi line later run want minim failureinduc line accord singl charact relev though mous button press releas tabl number requir test run number line test execut tcmin log queryhtml figur minim mozilla html input result line run shown figur test run ddmin algorithm minim origin line line input html input caus mozilla crash print gcc exampl section actual failur induc input small minim reveal attribut select tag relev reproduc failur either singl input alreadi suffic reproduc failur overal obtain follow selfcontain minim bug report creat html page contain load page print use altp print browser crash segment fault long bug report reproduc minim procedur easili repeat automat bug list bugzilla databas one need html input sequenc user action observ failureand littl time let comput simplifi failureinduc input minim done hand apolog feb number xevent test execut tcmin log mn event remov figur minim mozilla user action relat work two compet theori make exactli predict one simpler better state introduct unawar techniqu would automat simplifi test case determin failur induc input one import except simplif test case artifici produc slutz describ stresstest databas gener sql state ment failur produc test case simplifiedaft all fail line sql statement would taken serious databas vendor line statement would simplif realiz simpli undo earlier product step test whether failur still occur gener delta debug determin circumst relev produc failur in case part program in put field autom debug failureinduc circumst almost exclus understood failur induc statement program execut signific method determin statement relev failur program slicingeith static form obtain program analysi dynam form appli specif run program strength analysi sever potenti failur caus elimin due lack data control depend suffic though check whether remain potenti caus relev produc given failur experi that is test prove circumst relevantbi show alter circumst make failur disappear come concret failur program analysi test complementari analysi disprov causal test prove it would nice see far systemat test program analysi could work togeth whether delta debug could use determin failureinduc statement well determin part input relev produc failur debug could determin failurerelev statement program critic slice relat approach testbas like delta debug addit data flow analysi use elimin circumstanti posit ddmin algorithm present paper altern origin delta debug algorithm dd present like take set chang minim accord given test chang affect program code obtain compar two program version main differ ddmin dd are dd determin minim differ fail nonfail configur ddmin minim differ fail empti configur dd wellsuit failur induc larg combin chang particular dd guarante minim subset suit minim test case dd assum monotoni is whenev hold everi subset c well assumpt found use chang program code gave dd better perform test produc determin result recommend ddmin gener replac dd exploit monotoni ddmin one make testc return whenev superset c alreadi pass test futur work get way groupsign tshirt qualifi stuf anim well more mozilla bugathon call futur work concentr follow topic domainspecif simplif method knowledg input structur much enhanc perform ddmin algorithm instanc valid program input frequent describ grammar would nice reli grammar order exclud syntact invalid input right start also formal input descrip tion one could replac input smaller altern input rather simpli cut away gcc exampl one could tri replac arithmet express constant program block noop html input could reduc accord html structur rule optim gener abstract descript ddmin algorithm leav lot flexibl actual implement thu provid hook sever domainspecif optim implement choos partit c subset c place knowledg structur input come handi implement choos subset test first subset may like caus failur other implement choos whether handl multipl independ failureinduc input is case sever subset c option includ continu first fail subset continu smallest fail one simplifi individu fail subset implement current goe first fail subset thu report one subset reason economi wiser fix first failur check similar failur program analysi far treat test program black box refer sourc code all howev sever program analysi method avail help relat input specif failur simpli tell us part input relat and thu chang one run other not simpl dynam slice fail test case tell us input actual influenc program input never did combin inputcent executioncent debug method remain explor maxim pass test case right now ddmin make distinct pass unresolv test sever set howev distinct may use ful could minim differ pass fail testnot minim failur induc input also maxim pass input expect twofold approach pinpoint failur faster precis failureinduc circumst chang input program one mean influenc execut state section stand chang circumst influenc execut program thu research whether delta debug applic failureinduc circumst execut statement control predic thread schedul conclus debug still matter trial error henri lieberman debug scandal shown ddmin algorithm simplifi failureinduc input base autom test procedur method and been appli number set find failur induc part program invoc gcc option program input gcc fuzz mozilla input sequenc user interact mozilla user action recommend autom test case simplif integr part autom test time test fail delta debug could use simplifi circumst fail ure given suffici test resourc reason choic chang influenc program execut ddmin algorithm present paper provid simplif straightforward easi implement practic test debug typic come pair how ever debug research test play minor role surpris retest program chang circumst common debug approach delta debug noth autom process eventu expect sever debug task fact state search minim problem base autom testingand thu solv automat detail case studi list paper found inform delta debug includ full wynot implement avail httpwwwfmiunipassaudestdd acknowledg mirko streckenbach provid help insight unix intern tom truscott point us gcc error holger cleve jen krink gregor snelt provid valuabl comment earlier revis paper special thank go anonym review construct comment r dynam program slice critic slice softwar fault local minimierung fehlerverursachend eingaben empir studi reliabl unix util fuzz revist reexamin reliabl unix util servic mozilla web site mozilla web site gecko bugathon massiv stochast test sql survey program slice techniqu programm use slice debug tr dynam program slice empir studi reliabl unix util critic slice softwar fault local foundat softwar engin yesterday program work today not whi effici relev slice method debug programm use slice debug massiv stochast test sql ctr simon carter malcolm graham paul strooper zhiguo yuan mutat analysi verifi featur matric isol error simul model proceed twentysixth australasian confer comput scienc research practic inform technolog p februari adelaid australia zhang neelam gupta rajiv gupta locat fault autom predic switch proceed th intern confer softwar engin may shanghai china zhang haifeng neelam gupta rajiv gupta experiment evalu use dynam slice fault locat proceed sixth intern symposium autom analysisdriven debug p septemb monterey california usa andi podgurski david leon patrick franci we masri melinda minch jiayang sun bin wang autom support classifi softwar failur report proceed th intern confer softwar engin may portland oregon kaihui chang v bertacco i l markov simulationbas bug trace minim bmcbase refin proceed ieeeacm intern confer computeraid design p novemb san jose ca zhang neelam gupta rajiv gupta studi effect dynam slice locat real fault empir softwar engin v n p april zhang neelam gupta rajiv gupta prune dynam slice confid acm sigplan notic v n june gregg rothermel sebastian elbaum alexey malishevski praveen kallakuri brian davia impact test suit granular costeffect regress test proceed th intern confer softwar engin may orlando florida zhang neelam gupta rajiv gupta locat faulti code multipl point slice softwarepractic experi v n p juli test malwar detector acm sigsoft softwar engin note v n juli mark last menahem friedman abraham kandel data mine approach autom softwar test proceed ninth acm sigkdd intern confer knowledg discoveri data mine august washington dc sebastian elbaum hui nee chin matthew b dwyer jonathan dokulil carv differenti unit test case system test case proceed th acm sigsoft intern symposium foundat softwar engin novemb portland oregon usa gregg rothermel sebastian elbaum alexey g malishevski praveen kallakuri xuemei qiu test suit composit costeffect regress test acm transact softwar engin methodolog tosem v n p juli