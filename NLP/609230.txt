t formal analysi class load java a sinc java secur reli typesafeti jvm mani formal approach taken order prove sound jvm paper present new formal jvm prove sound first model employ dynam link bytecod verif analyz load constraint scheme java key concept requir prove sound new model augment valu type defin ordinari valu type combin load constraint scheme prove sound model shown problem insid current refer implement jvm respect model also analyz findclass scheme newli introduc java analysi also show applet cannot exploit typespoof vulner report saraswat led introduct load constraint scheme b introduct unlik predecessor c java support platformindepend bytecod compil sourc program written java sent network mobil code execut java virtual machin run within local applic web browser jvm link bytecod sent network typesaf manner whose mean follow guarante link bytecod type inform consist themselv destroy consist jvm state type inform follow requir also satis current jvm state consist type inform next execut step still consist java way typesaf languag two requir satis note consist broken jvm incorrectli interpret content point inner pointer refer type safeti jvm guarante memori safeti jvm thu play primari role java secur order show type safeti properti jvm akihiko tozawa masami hagiya graduat school scienc univers tokyo japan suggest comment articl appreci pleas send email fmile hagiyagissutokyoacjp number studi made far brie summari next subsect paper give anoth formal jvm prove sound bytecod run insid jvm structur class separatedli load link jvm object call class loader respons load link class support varieti class loader jvm achiev exibl class load howev exibl caus problem respect mention typesafeti java rst contribut work develop new model jvm describ section paper detail model sever improv dene previou studi first all includ class loader java class loader instanc userden class whose primari function map class name class object are howev close relat jvm intern build class environ word class environ jvm static given lazili built dynam evalu class loader model give dynam environ repres intern heap jvm seem best approach model lazi link semant jvm class loader sinc consid static languag environ construct model practic one faith ect jvm implement sun microsystem releas version java develop kit jdk base newli propos design principl call java come rewritten specic jvm java virtual machin specic nd edit import featur introduc new specic load constraint scheme origin introduc liang bracha scheme x saraswat problem relat uniqu design java class loader formal also includ scheme second contribut work found three problem insid current ocial implement jvm respect scheme problem trivial one requir care analysi scheme done work formal describ section third contribut work prove sound model given section key notion requir sound proof augment valu type dene ordinari valu type combin load constraint scheme new type shown consist subtyp relat exist load constraint scheme note consist crucial sound model problem found insid current ocial implement jvm due violat consist anoth new featur java findclass implement class load technic speak load constraint scheme findclass scheme give constraint dynam class load java constraint restrict happen futur complic lazi link semant java exampl problem found load constraint scheme sensit time introduc con straint fact ect subtleti semant constraint analysi findclass scheme section fourth contribut analysi also answer old question applet cannot caus saraswat problem relat work sinc java secur deepli reli jvm typesafeti give formal model jvm recent one major research issu network secur stata abadi gave jvm model includ bytecod veric tri grasp jvm type system bytecod veric type rule wherebi correct jvm prove form sound theorem work lay concept model bytecod verier stata abadi work word extend model cope class loader freund mitchel work specic problem relat object initi work also base stata abadi qian rst succeed model larg part jvm formal cover wider rang jvm but without proof given goldberg jensen et al particular jensen et al dealt saraswat bug model class load oper semant saraswat gave formal explan problem dean also gave formal model class load howev cannot explain type spoong problem lazi semant class loader yet fulli model far know think someth studi modular work cardelli machin veric also appli prove type sound java organ rest paper structur follow section give basic formal model jvm also sound proof model section mainli explain problem implement jvm section give discuss relat findclass scheme formal answer old question applet cannot caus saraswat problem section also discov new method implement load constraint scheme ecient model sound formal model jvm present paper follow new featur compar previou studi model lazi class load jvm dene load constraint modifi valu type statement give rigor denit environ enough model featur particular lazi class load jvm rst model studi note also last featur necessari dene wellformed type type option none type env f stringstr listt class cl ifac string list class instruct list lvar tvalu list list type verifyrecord f lvar string list stack string list invokevirtu string string string areturn figur type denit environ turn dene term wellformed variou compon section rst explain sever basic denit section give denit load constraint scheme main sound theorem describ section environ denit environ environ repres intern heap jvm basic data structur formal cours everi compon heap cannot model instead give wellden set compon mathemat examin possibl repres type env see denit type figur environ ie element env record consist four subset class loader tvalu method set loc locat map c w r mean subset clear index note end section type env consid depend type sinc map r arrow type construct use subset t class loader tvalu method type member m c v map locat appropri denit ie return denit store e refer member w repres class load r repres method resolut two map explain later use notat em extract member environ e figur abbrevi insid judgment type option denot type compos constructor none valu wrap constructor some exampl valu ewln either none form c type list denot type nite list list ith element x denot xi length lenx note classdeft denot tupl consist class loader tvalu method dene class classdeft separ two kind ident class situat happen valu method usual identifi object refer state ie element statet either exept denot error state record consist four element pc method lvar stack element verifyrecord give type local variabl stack state use bytecod veric type instruct instruct dene complet sake studi assum invokevirtu instruct areturn instruct type theori use type repres type env tupl consid element index set index dene follow use refer ie element loc access compon en viron cours dierent way dene identifi compon studi class identi tupl class name class loader two class name loader insid singl jvm model give low level abstract ect practic jvm im plement implement class ident properti one variou properti implicitli satis intern structur heap practic two class name loader class loader synchron two thread start load class loader time properti would easili violat go implement jvm alway satis properti instead extract set properti essenti sound model call wellformed en viron given assumpt modic updat environ must preserv wellformed wellformed environ denot wf e compos follow properti properti relat class insid environ properti relat method insid environ properti state method static veriabl ie gone bytecod veric bridg safeti properti relat load constraint scheme properti denot wf class wf method e veried bridg safe describ section respect object class loader section give basic denit object class class loader class java actual object instanc javalangclass class loader javalangclassload unlik object play essenti role jvm architectur refer automat implicitli therefor appropri dene object class class loader separ class let us rst explain denit class figur class denit ie element classdeft tupl consist class name direct super class name class loader note assum c class refer compon cs denit simpli written insid judgement cname csuper ccl respect two compon c method dispatch tabl cmt implement interfac class cifac discuss later class loader java object instanti javalangclassload privat member declar hashtabl map name class class object themselv model map ew follow denit subtyp denit widen cl denit normal valu type denit wellformed figur predic relat class class name resolut n l ewln result c name n associ certain class c class loader l none not also say n resolv c l sens class loader name space therefor class loader also call context class c dene class loader ccl wherebi everi class name resolut relat c done sens ccl context c throughout paper use word context class loader synonym figur show valu uniqu refer class thu class loader say valu v creat context vclasscl method execut context mcccl subtyp subtyp class dene figur model predic sub repres relat class c parent class name csuper resolv c context ccl c direct subtyp c indirect subtyp dene exiv transit closur direct subtyp wellformed class actual class loader jvm resolv class one follow two way class loader l dene class c whose name n set ccl l resolv n c class loader l deleg class load anoth class loader resolv n c whose ccl equal l actual class loader therefor satisfi follow statement wellformed class dene figur sinc class dene rst process set n l class c et class cname resolv c context ccl note statement immedi impli class ident properti describ section object valu state jvm state stateet error state except follow compon method denot method jvm process pc program counter point certain instruct methodi lvar stack repres list valu store content local variabl local stack respect state environ repres intern data structur jvm transit respect distinct independ model valu found insid lvar stack object object valu v record one member vclass repres type class valu practic java object valu may also refer array valu ie eld valu diculti extend model repres eld sinc alreadi valu heap add veld repres list valu refer model omit eld java getputeld instruct larg part similar invokevirtu also easier handl predic respect subtyp valu type introduc two predic respect subtyp one repres widen convers repres type judgment valu formal given figur widen convers dene quasiord class name order two name dene resolv cl except case two name equal order follow subclass relat class name resolv normal valu type type judgment denot type valu v subtyp n context cl also dene n alreadi resolv cl note predic depend context cl method section simpli describ specic invokevirtu practic method invoc jvm involv diculti problem remain problem explain section instruct dene figur jvm model includ two instruct invokevirtu areturn instruct invokevirtu fundament non java null valu repres uniniti object valu model simplic accord denit sub cl satisfi transit antisymmetri cours practic trivial instruct jvm use three argument follow judgement mean current jvm state process invokevirtu call certain instanc method string name name method string list desc descriptor repres type signatur method argument type ie class name method desc return valu type string classnam name symbol referenc class instruct areturn one return instruct jvm return caller hold one object valu return valu method invoc execut invokevirtu consist follow three process method resolut look method accord three argument invokevirtu method found process call symbol referenc method denot srmethod method select look method access class object top local stack method invoc call method found method select process assum invokevirtu insid method whose class c whose context l ccl method resolut process model follow look method srmethod alreadi regist en viron er cf section given name descriptor name desc srclass symbol referenc class result resolv classnam l rememb name desc srclass l abbrevi erlnam desc srclass denit given end section also section practic jvm rememb whether symbol refer alreadi resolv not never resolv refer twice model ect behavior method select process dene section section assum process result uniqu valu denot method write judgement e left hand side assum srmethod method insid right hand side denot symbol referenc method select method respect srmethod method although dention valu method left blank discuss implement later examin sound jvm ie implement intern class represent attach ag resolv constant pool entri rememb whether entri resolv not also rememb result resolut correct new load constraint scheme cf section provid assum lemma describ section valu srmethod ident valu variabl appear predic invv ok e dene below denit invokevirtu ok predic mean jvm execut invokevirtu method resolut normal succeed ie rais except unlik speci method resolut invv ok e hold ie method resolut succe jvm model ensur method select method invoc also succeed method alway dene case formal name desc classnam srclass srmethod objectref denit invv ok e existenti quanti howev situat assum invv ok e refer judgement leak denit invv ok e ie variabl assum satisfi invv ok e oper semant denit describ state transit semant invokevirtu dene accord specic three process invokevir tual note denot list concaten rst tri resolv method cannot resolv method resolv gener new state whose method select one local variabl store proper valu valu argument origin store stack must transit form point instruct areturn return instruct jvm mean invok method safe execut last stack return valu top push onto denot transit closur onestep transit transit instruct given paper see except denit oper semant invokevirtu execept lvar objectref arg methodi retval retvalrest state refer method cc figur subtyp relat relat invokevirtu invoc correct respect srmethod method follow lemma con sider lemma examin section follow sever section lemma assum hold correct invokevirtu let e environ jvm state method overrid srmethod word lemma correct invokevirtu guarante jvm execut invokevirtu jvm safe state method whose dene class superclass class objectref invok furthermor jvm safe state method overrid symbol referenc method invok second premis lemma subtyp relat objectref class srclass properti invariantli satis safe execut jvm cf section rst consequ lemma subtyp relat objectref class method cc deriv method select algorithm describ section see figur method overrid relat overrid yet dene certain reason one reason although term overrid often use specic jvm accur mean dene interpret depend implement paper dene predic overrid section conjunct predic select predic overrid satisfi follow condit lemma implement sun jdk inconsist lemma expos new aw explain section relat environ dene section wellformed method follow wellformed properti method requir mainli discuss section select srmethod predic select model method select process denit found denit section class rt rr new rr figur saraswat bug code predic select equival descriptor also hold lemma bridg safeti bridg safeti jvm notion origin introduc saraswat report typespoong jdk insist applet loader never suer bug never break properti sheng bracha devis x saraswat bug implement jdk forc jvm check bridg safeti runtim typespoong jdk see sourc code figur reveal bug typespoong jdk code noth suspici exist two context l l the code run l deleg class load rr dene invoc rspeakup would result seriou violat type system jvm express rspeakup compli follow instruct jvm v dierent notat method descriptor repres method take argument return noth respect invokevirtu objectref valu top local stack equal valu r come context l via invoc rrgetr l symbol referenc class srclass class current context l resolv r the third string invokevirtu l code caus problem r l dierent r l invokevirtu correctli execut subtyp relat denit load constraint method overrid method resolut cl mdesci mcccl re exiv cl n cl cl n cl cl cl n cl cl n cl cl n cl absolut necessari of cours objectref class srclass suce recal subtyp relat second premis lemma word method section complet unrel srmethod accur bug result incompat dispatch tabl two class appli method index obtain srclass onto complet unrel method tabl objectref class jdk would thu either invok method argument valu incompat type core dump method dispatch tabl exclud sun specic therefor model implement techniqu method select algorithm cf section load constraint go back exampl section suppos jvm alreadi notic invoc rrgetr method brought valu type r context l l case check beforehand ow valu accept not may simpli tri check follow l attempt fail sinc method resolut speakup r l cannot evalu ie environ e r must consid altern ie load constraint scheme case new scheme introduc follow load constraint r jvm rememb constraint r l allow resolv dierent class r l method resolut process jvm notic possibl valu ow easi un derstand relat lemma exist constraint describ later section here give rule introduc load constraint method m overrid follow constraint introduc respect class name n appear descriptor method resolut nd srmethod follow constraint introduc for class name n appear descriptor srmethod srmethod cl relat n dene transit exiv symmetr equival relat also minim relat among satisfi condit denit formal describ predic induct denit shown later section relat invari ie relat environ subsum n enabl jvm increment construct relat n resolv method refer invokevirtu link class whose method overrid anoth method reason load constraint scheme lightweight actual adopt among mani solut histori saraswat problem solut describ bridg safeti predic denit dene predic bridg safe follow environ e class loader e made resolut class contradict load constraint exist insid e predic forbid environ modic ie class load method link violat constraint jdk do augment valu type augment valu type cl n dene follow anoth context cl v type n normal sens cl n also exist follow constraint cl n cl intent denit may obviou roughli mean valu v creat ie instanti n context cl transfer current context cl predic call dynam conform previou paper note introduct crucial prove type sound load constraint scheme denit one contribut studi respect predic follow lemma import cl invari augment type denit bridg safeti bridg safe def cl cl n cl cl cl cl denit augment valu type cl cl n cl cl n list cl ns string list cl nsi let e environ n n class name cl class loader bridg cl n cl cl proof follow fact prove examin def def def bridg cl n n cl none cl n assum rst line lemma def def def cl n v cl appli e cl n cl def lemma prove lemma state augment type invariantli satis widen convers describ section import statement relat runtim type static type ie bytecod veric proof lemma requir denit widen convers cl n forc addit load n cl n cl case n n found two inconsist denit cl bytecod veric jdk exploit these still entir escap addit check newli impos see section detail note rel easi show augment type also invari use later sound proof constraint exist lemma exist constraint state jvm safe state execut invokevirtu alreadi exist load constraint class name appear descriptor invokevirtu current context context invok method assum lemma correct invokevirtu note e cl desc cl abbrevi cl desci cl denit veric rule rule rule invokevirtu istack mcl cname rule areturn lemma exist constraint let e environ jvm state methoddesc method cl assum rst line lemma defmethod overrid symmetri lemma srmethod cl methoddesc method cl defmethod rosolut def appli lemma deftransit yield lemma sound section follow framework sound proof stata abadi one dierenc introduct environ anoth treatment invokevirtu instruct exist model bytecod veric one uniqu underli languag design java found bytecod veric idea guarante runtim welltyped static veric allow minimum type check runtim see denit type verifyrecord repres imaginari store static class name inform local variabl local stack map store element verifyrecord instruct method bytecod veric problem nding consist veri method m denit ktransit execept kn denit welltyped veri method cl pclvar cl pcstack veri content satisfi mcl relat impos veric rule model consist repres predic veri predic veried state method e alreadi veri welltyped predic e wt mean state safe insid environ e lvar stack valu type class name record veri method state except repres error state alway welltyp note lvar cl pclvar abbrevi cl pclvarsi interest work yelland implement bytecod verier base type infer haskel sound theorem main theorem theorem sound environ state theorem state execut step jvm preserv welltyped intuit mean invari trivial sucient guarante correct invokevirtu second premis lemma instruct model paper also preserv invari wherebi correct behavior instruct guarante theorem divid two lemma follow section denit subenviron relat string list et class sound environ updat denit describ environ updat jvm dynam link object class etc dene subenviron relat two environ follow rst lemma need prove main sound theorem lemma state modic environ preserv well typed proof follow rememb assum lemma rst assum guarante compon e compat e therefor def def also have def def cl cl n say relat sub cl invari furthermor lemma def guarante follow fact respect impli relat n also invari minim among satisfi denit therefor augment cl also invari dene def follow cl cl n cl def lemma prove sound state transit follow second lemma sound theorem lemma state everi state transit xed environ e preserv welltyped examin lemma reden state transit describ add depth k transit obvious note denot state transit except transit instruct invokevirtu dene paper proof lemma follow rst note follow fact hold cl cl n cl cl express n invari augment type easili prove examin def deftransit transit follow fact sucient condit lemma prove induct k base case induct follow proof omit here see detail remain subgoal show case k induct hypothesi assum rst line iii state transit rule dene dene def induct hypothesi hold here exist satis follow condit cl pcstack appli defrul invokevirtu lemma obtain x n denot sublist x xn n length desc assum invv ok e lemma use here impli methodcl method ccname togeth wf class hand lemma impli togeth wf method use lemma i obtain methodcl method desc n therefor lemma defrul impli methodcl lvar satis veri method method final def impli lvar stack n therefor induct hypothesi iv areturn lemma lead methodcl method desc similarli abov use lemma i obtain final defrul invokevirtu lemma def def impli denit predic select analysi implement anoth main topic paper analysi sun jvm implement latter half section describ sever aw found jdk respect saraswat bug load constraint scheme describ aw let us examin lemma correct invokevirtu correct invokevirtu method select section dene method invoc process partial section denit formal recurs procedur employ method resolut select dene predic select pair key class key c select method whose key equal key found lookup subtyp tree c superclass denit key denot pair name desc key m mkey denot pair mname mdesc desc c select m follow latter condit lemma requir predic also invari denit denit select select process termin method m found insid c matter whether anoth method found insid superclass c not howev case ie make invis c say class c method mkey c select m direct superclass c select dierent method key mkey dene predic overrid dene exiv transit closur predic overrid faith follow sun specic srmethod method simpli dene follow method resolut process nd srmethod satis follow select srmethod method select process nd method satis follow select method see below two denit deriv lemma correct invokevirtu simpli appli premis lemma objectref class sub srclass dention overrid denit lemma method desc hold matter whether method overrid exist not specic explicitli use desc select method howev implement dier specici employ method dispatch tabl class select method long descriptor equival hold jvm never fall error state coredump even though state may badlytyp reason dicult specic explain typespoong problem figur describ problem graphic proof lemma paper show lemma respect specic though must prove exist implement rst show exist method sinc model method select process alway succeed assum invv ok e impli e srmethod key srclass select srmethod also assum denit impli exist method sat ise alreadi note relat select hold objectref class method cc obtain rst consequ lemma second consequ follow method overrid srmethod prove induct sub overrid reexiv transit closur overrid objectref class sub srclass hold either method srmethod method overrid srmethod method dispatch tabl method dispatch tabl list method satis follow condit method select class c method insid method dispatch tabl class cmt overrid method index overridden one ie class c superclass c c index less length c mt jvm increment build tabl structur class satis condit refer tabl direct superclass alreadi built here suppos alreadi method dispatch tabl class sinc srclassmt collect method select srclass method resolut process jdk search insid srclass mt method resolut threfor dierenc specic implement method dispatch tabl cannot seen outsid hand method select process implement remark dier specic otim procedur rather recurs procedur repres predic select method select process follow index satis srclass select srmethod select method method select process also sound also satis lemma correct ness invokevirtu proof lemma sub relat necessarili use implement equival descriptor desc method desc even exist method depend sub relat without relat index srclass mt mean insid method mt exploit inconsist desc method desc one falsifi integ valu object valu vice vasa method exist jvm coredump bytecod verier load constraint problem respect widen convers go back saraswat bug code figur section suppos modic describ appli origin bug code origin code modi code new r r load l r l insid method resolut load jdk r l r r l load violat violat jdk spec execut rspeakup case method even method unexpect execut continu posibl method desc desc wors case method may exist type confus coredump figur type spoong chart class rr public r getr return new r origin new r assum l load class rr l load class rt invok rrgetr also rspeakup also assum l resolv r dierent l method invoc r rrgetr call method insid class rr return valu type r type r insid context l r subtyp r recal check widen convers r l alreadi resolv therefor constraint r check invoc rspeakup r l resolv assum convers r l resolv yet even though class r l resolv though constraint inde exist constraint never check figur describ happen case fact jdk sometim resolv r l although resolut role bytecod verier two inconsist found two inconsist bytecod verier jdk model still enabl type spoong inconsist follow widen convers n cl n correctli check n resolv system class veri runtim bug brie explain exampl code let us emphas signic work problem concern augment type altern natur dene type sinc bytecod veric seem unrel saraswat bug design jdk modifi bytecod veric jdk howev jvm requir lemma cl invari well relat welltyped invari bytecod veric base widen convers model make point clear visibl interfac load constraint addit problem bytecod verier one aw insid jdk implement found analysi invokeinterfac instruct exclud model far invokeinterfac instruct order discuss problem invokeinterfac extend model abl deal interfac java thing allow class multipl parent class throughout section class c list name implement interfac cifac reden subtyp relat c sub c ie c direct subtyp introduc new predic classc true c pure class ie c interfac though class singl direct supertyp previou section fact use throughout sound proof thu requir chang invokeinterfac instruct similarli resolv select method exactli semant invokevirtu modic must consid predic select pure class c declar method requir key predic select method insid implement interfac c insid pure superclass c therefor reden second rule denit follow classc classc problem respect constraint exist question may rais code figur dgetr overrid igetr not accept denit overrid answer ye even though subtyp relat declar class two method sinc class select dgetr key repres r getr one direct supertyp i also select igetr conclud dgetr overrid igetr denit overrid fact follow code invok method insid class safe interfac r getr class r getr class c extend implement figur problem invokeinterfac sinc jdk fail recogn complex method overrid relat code figur bring anoth problem load constraint scheme overrid relat dgetr igetr recogn may constraint loader dene respect name return type r findclass scheme formal findclass scheme also one new featur java ie implement class load findclass java recommend implement class loader findclass rather old loadclass method though loadclass also accept backward compat findclass scheme dene tree structur among class loader deleg class load follow tree structur old version java applet loader implement similar manner findclass scheme also known applet never caus saraswat problem though never prove complet lead follow question findclass scheme replac load constraint scheme last theorem theorem trust environ prove section give neg answer even follow findclass scheme class load may violat constraint unless deleg allow system loader theorem state also saraswat correctli mention applet loader safe sinc deleg system loader howev describ rst half class loader recent increas varieti applic consid applet loader deleg anoth applet loader although loader seem safe glanc theorem correctli state possibl violat constraint parent loader follow denit incorpor findclass scheme model denit parent loader true l vp parentdef l l vp l direct parent loader loader l parent loader assum p l induct dene predic l vp l denot l one indirect parent l denit correct deleg parent loader denit formal follow deleg strategi java loader l direct parent loader l class load l rst deleg l class load l l cannot resolv class name otherwis l return class l return denit express load deleg follow parent loader relat express two loader parent loader relat correctli deleg class load accord strategi second condit impli ccl vp l l alreadi resolv cname therefor wf parent p hold loader e consid resolv class so word e repres environ possibl class load complet ordinari environ thu consid subenviron environ therefor use dient font e environ note wf parent p impli wf class parent environ dene relat envirno repres extens environ deleg parent loader denit parent environ second line denit e method load loader e alreadi exist e third line state deleg allow direct parent loader e trust environ theorem trust environ state even follow ndclass scheme jvm never violat constraint parent loader system loader st dene system environ denit system environ predic dene condit system environ satisfi is system class load class name appear method descriptor resolv theorem trust environ follow proposit satis call trust environ satis consequ theorem theorem state e trust environ e not exampl applet loader insid certain e applet never violat constraint prior proof theorem introduc addit relat l mean onestep constraint l l allow method resolut method overrid symmetri deni tion ignor symmetri two case e l n l hold assum wf method section now method resolut l rememb l context resolv classnam impli wf parent p srclasscl vp l note also hold wf method e def gener onestep subtyp relat hold p wf parent p def def consequ subtyp relat sub also impli vp therefor wf parent p hold otherwis overrid relat case accord section class c select m superclass c select fact impli follow one therefor def loader two dierent indirect direct parent load er one direct parent other case follow result respect n l l vp l _ l vp l i furthermor easili show follow case note l p l abbrevi l vp l result theorem trust environ prove follow proof assum given e assum l l l also l p l def impli l system loader therefor ii impli note method dene system loader system method cf def def next goal prove follow fact prove induct deriv load con straint l n l suppos follow onestep constraint append l n l gener l n l transit l assum induct hypothesi show l vp l _ l left case disjunct l vp l easi sinc vp transi tive therefor assum l p l case iii say exist c e t class satis togeth def lead induct hypothesi impli impli c l deriv e c cl vp l lemma iv natur lead bridg easi show bridg safe hold make counter exampl violat con straint exampl e follow loader loader dene class c class c method signatur x satisfi system assum class x never resolv loader ie method resolv loader mcl addit loader loader dene class d class call method class c signatur x loader dene class x loader deleg loader class loader loader dene class d class extend c class method signatur x loader dene class x loader deleg loader class assum c class c dene loader obvious loader overrid m therefor denit howev x loader x dierent therefor bridg hold conclus present new model jvm explain variou uniqu featur jvm also speci sever condit implement particular model includ load constraint scheme ndclass scheme new featur jdk formal could analyz extrem subtl relationship load constraint scheme bytecod veric believ analysi possibl rigor formal sound proof howev model exclud mani featur jvm primit type eld member array type member modier thread instruct etc sever idea incorpor model exampl model easili express object class naliz jvm sound theorem section state environ updat larger environ welltyped invari preserv there fore introduc reduc environ also preserv invari sound naliz guarante ndclass scheme show work load constraint scheme howev also obtain method allow load constraint omit cooper ndclass scheme result includ paper think best solut expect scheme improv futur r link modur formal aspect mobil code secur web brower beyond type system object initi java bytecod languag speci secur dynam class load java formalis new method data ow analysi java virtual machin subroutin dynam class load java virtual ma chine java virtual machin speci java light typesaf de nite prove sound java bytecod veri formal speci java typesaf nicht veri type system java bytecod subroutin care analysi type spoo composit account java virtual machin tr ctr model multipl class loader calculu dynam link proceed acm symposium appli comput march nicosia cypru