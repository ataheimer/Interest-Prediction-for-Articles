t answer set program plan gener a idea answer set program repres given comput problem logic program whose answer set correspond solut use answer set solver smodel dlv find answer set program applic method plan relat line research frame problem start invent formal nonmonoton reason b introduct kautz selman propos approach problem plan gener reduc problem nding satisfi interpret set proposit formula method known satis plan use sever planner paper discuss relat idea due subrahmanian zaniolo reduc plan problem problem nding answer set stabl model logic program advantag answer set program approach plan represent properti action easier logic program use instead axiomat classic logic view nonmonoton charact negat failur two best known answer set solver system comput answer set avail today smodel dlv result comput experi use smodel plan report latest system kind creat inventor satis planninghttpwwwtcshutfisoftwaresmodel httpwwwdbaituwienacatprojdlv paper base earlier report applic answer set program plan discuss perspect research frame problem nonmonoton reason done ai sinc specic relat line work start invent default logic the nonmonoton formal turn particularli close relat logic program public yale shoot scenario wide believ solut frame problem outlin inadequ sever altern propos turn out howev approach complet satisfactori rest default theori set correctli is fact gener discuss section below see descript action style use basi plan use answer set solver next section review concept answer set dene relat default logic describ comput possibl answer set solver section answer set program method appli graphtheoret search problem section section turn use answer set solver plan gener section describ relat work research action plan answer set logic program begin set proposit symbol call atom liter express form a atom we call classic negat distinguish symbol use negat failur rule element express form l l l liter rule order pair head bodi head bodi nite set rule element rule constraint disjunct cardin head greater write drop bodi rule empti program set rule denit dier tradit descript syntax logic program sever way first rule proposit atom assum form predic symbol constant variabl input le given answer set solver usual contain schemat rule variabl schemat rule treat abbrevi set rule obtain ground result ground proposit object like set claus would given input satis solver hand way gener rule found tradit logic program l may contain classic negat symbol tradit logic program use one kind negationneg failur head may contain sever rule element tradit head rule singl atom negat failur symbol allow occur head rule bodi tradit logic program see later addit express given syntact featur inde use denit answer set notion answer set dene rst program contain negat failur l k everi rule program let program let x consist set liter say x close if everi rule head x bodi x say x answer set x minim among set close rel set inclus instanc program two answer set add constraint get program whose answer set rst set hand add rule get program whose answer set fp q rg extend denit answer set program negat failur take arbitrari program let x consist set liter reduct x rel x set rule rule x contain liter l contain lm thu x program without negat failur say x answer set x answer set x consid instanc program q q r r let x fp rg reduct rel set consist two rule sinc x answer set reduct answer set easi check program answer set exampl illustr origin motiv denit answer setprovid declar semant negat failur implement exist prolog system given program prolog system respond ye queri queri p r say queri belong answer set sens role answer set similar role concept complet provid altern explan behavior prolog p r entail program complet comparison default logic let program head everi rule singl liter transform proposit default theori sens turn rule default simpl correspond answer set extens default theori dt x answer set deduct closur x consist extens dt convers everi consist extens dt deduct closur answer set instanc default theori correspond program r extens default theori deduct closur program answer set fp rg correspond rule without negat failur repres default without justic say infer rule facta rule empti bodycorrespond default neither prerequisit justic is axiom normal counterpart rule q p q logic program dene gener default rule may sever element head element may includ negat failur hand default gener may contain arbitrari proposit formula liter conjunct liter connect interest note one technic issu relat yale shoot controversi whether eect action describ axiom load infer rule load accord formul better choic languag logic program would written aliveresultshoot s load s formula hand correspond rule sens logic program paradox limit languag logic program play posit role case elimin bad represent choic avail properti action describ default logic gener elimin answer set perspect answer set program two kind rule play special role gener multipl answer set use elimin answer set program one way write program mani answer set use disjunct rule sever atom a program consist n rule form n answer set instanc program answer set observ rule equival replac program two nondisjunct rule a a notat default logic rule written altern program mani answer set form use rule form l l liter rule two answer set flg program consist n rule form n answer setsal subset set liter occur rule instanc answer set program q q subset fp qg rule use elimin undesir answer set constraintsrul empti head saw section append constraint q program elimin one two answer set eect ad constraint program alway mono tonic collect answer set extend program part collect answer set origin program precis say set x liter violat constraint program obtain program ad constraint set x liter answer set x answer x violat constraint instanc second answer set program violat constraint q rst doesnt accordingli ad constraint elimin second program answer set see rule kindsthos gener answer set elimin themcan work togeth consid follow translat proposit theori logic program let set claus let program consist rule atom occur constraint l claus l _ _ l n by l denot liter complementari l answer set correspond truth assign satisfi everi truth assign repres set liter assign valu true answer set solver system dlv comput answer set nite program without negat failur head rule l k everi rule program instanc given input le r p return answer set program given input le p q q r r s return answer set program system smodel requir addit input program contain disjunct rule limit mitig two circumst first input languag smodel allow us express exclus disjunct rule is disjunct rule accompani constraint combin repres second smodel allow us repres import disjunct combin head rule enclos l brace f l g list rule form conveni repres smodel input le one line instanc rule written simpli pq dlv smodel allow user specifi larg program compact fashion use rule schemat variabl abbrevia tion system employ sophist ground algorithm work fast simplifi program process ground joinedxi edgexi joinedxi edgeyx inx ini xy joinedxi vertexx vertexi hide show inx figur search larg cliqu answer set program idea answer set program repres given comput problem program whose answer set correspond solut use answer set solver nd solut exampl show method use nd larg cliqu is subset v vertic given graph everi two vertic v join edg cardin v less given constant j figur show smodel input le use nd larg cliqu determin exist le suppos accompani le describ graph speci valu j one shown figur possibl valu variabl x figur restrict domain predic vertex edg case graph describ figur predic vertex hold numer const j vertex edg edg edg edg edg edg edg edg figur test cliqu program predic edg hold pair vertic accordingli express begin figur the set atom inx x vertexx mean in in in in in in last express understood abbrevi set rule form discuss section answer set set rule arbitrari set form atom symbol j begin rule restrict answer set whose cardin least j instanc cardin construct avail smodel allow user bound abov number atom certain form includ answer set lower bound place left express brace exampl upper bound would place right main part program figur two label gener test former dene larg collect answer setspotenti solut latter consist constraint weed out answer set correspond solut discuss abov potenti solut subset vertic whose cardin least j constraint elimin subset cliqu similar use gener elimin rule section part label defin contain denit auxiliari predic join part label display tell smodel element answer set includ output instruct system hide liter encod cliqu case problem shown figur part answer set display smodel discuss exampl term gener set potenti solut test element illustr declar mean program understood descript actual happen oper answer set solver system smodel process program shown produc answer set gener part check whether satisfi constraint test part reason satis solver search model given set claus gener possibl truth assign check whether claus satis search procedur employ system smodel dlv use sophist search strategi somewhat similar use ecient satis solver answer set program found applic sever practic import comput problem one problem plan plan exampl code figur allow us use smodel solv plan problem block world imagin block move robot sever gripper block move simultan howev robot unabl move block onto block move time usual block world plan assum block move block top it three domain predic exampl time block locat locat block tabl constant lasttim upper bound length plan consid to nd shortest plan one use minim featur smodel discuss paper gener section dene potenti solut arbitrari set move action execut prior lasttim that everi t number action execut time exceed number gripper rule label defin describ sequenc state correspond execut given potenti plan sequenc state repres complet set liter defin rule figur specifi posit liter describ initi posit block rst two defin rule figur specifi posit liter describ po timelasttim locationb blockb locationt timet tlasttim effect move block blockb locationl timet tlasttim onblt onblt locationl blockb timet tlasttim uniqu locat blockb locationl locationl timet figur plan block world part two block cannot top block blockb timet block cant move unless clear blockb blockb locationl timet tlasttim block cant move onto block move also blockb blockb locationl timet tlasttim hide show moveblt figur plan block world part const gripper const lasttim block initi state goal on ontabl on ontabl on ontabl onlasttim onlasttim ontablelasttim onlasttim onlasttim ontablelasttim figur test plan program sition block time t term posit time t uniqu locat rule speci neg liter includ answer set term posit liter answer set note second defin rule figur smodel represent normal default if consist assum time t block b locat time inde locat see section default interest compar solut frame problem propos reiter section take relat r on tupl argument x b l express turn dierenc default rst describ chang term passag time t becom latter term state transit s becom fb l s consid three constraint label test figur role rst constraint prohibit indirectli action would creat physic imposs congur block move two block onto block b two constraint express robot limit mention begin section ad constraint program elimin answer set correspond sequenc action execut given initi state extend program ad test section figur elimin addit sequenc action lead goal state answer set program correspond solut given plan problem display section instruct smodel hide liter except begin move part answer set display smodel list action includ plan stabl model movet movet move true durat discuss descript block world domain figur sophist sever way shoot exampl seem dicult formal first version block world includ concurr execut action second eect move block describ indirectli shoot domain eect action speci explicitli told action load aect uent load action shoot aect uent aliv descript block world given dierent block locat top block move onto tabl action aect two uent on tabl becom true on becom fals rst two eect describ explicitli rst defin rule figur descript second eect indirect uniqu locat rule allow us conclud block top block anymor fact block tabl ramic problemth problem describ indirect eect actionsi address classic action represent formal strip adl final execut action describ exampl indirectli well discuss abov imposs move two block b b onto block b implicit descript block world execut action would creat congur block prohibit one constraint figur strip adl execut action describ explicitli list action precondit usual descript block world assert instanc move one block top anoth execut target locat clear descript applic howev sever block move simultan initi state shown figur block move onto block block move time fortun answer set approach describ action adopt specifi action precondit explicitli unnecessari use indirect descript action domain applic ai demonstr recent report model reaction control system rc space shuttl system consist sever fuel tank oxid tank helium tank maneuv jet pipe valv compon behavior rc aect ip one switch accord action one direct eect trivial chang posit switch caus switch new posit also postul assert that valv function stuck close switch control open or close posit valv open or close two fact togeth tell us that certain condit ip switch indirectli aect correspond valv furthermor helium talk correct pressur open path propuls tank path leak propuls tank correct pressur also use postul conclud that certain condit ip switch aect pressur propuls tank on multilevel approach describ eect action lead wellstructur easi understand formal descript oper rc answer set program approach handl multilevel descript quit easili relat action languag satis plan recent work repres properti action formul term highlevel action languag c descript action languag concis logic program represent exampl counterpart rst two defin rule figur languag c moveb l caus onb l inerti onb l design languag c base system causal logic propos larg class action descript c equival translat logic program notat dene possibl translat illustr express power action represent method use paper note introduct answer set program approach plan relat satis plan is fact formal connect two method program without classic negat positiveorderconsist tight answer set character collect proposit formula the formula obtain appli complet process program translat languag c describ happen produc tight program describ plan problem program like thi translat program proposit logic and nalli invok satis solver nd plan form satis plan view also answer set program without answer set solver essenti plan perform causal calcul conclus answer set program solut combinatori search problem repres answer set plan gener domain involv action indirect eect promis applic area program method system smodel dlv allow us solv nontrivi plan problem even absenc domainspec control inform larger problem howev inform becom necess possibl encod domainspec control knowledg use answer set solver crucial progress area possibl use control knowledg proposit solver crucial progress satis plan topic futur work acknowledg use comment preliminari version paper provid mauric bruynoogh marc deneck esra erdem selim erdogan paolo ferrari michael gelfond joohyung lee nicola leon victor marek norman mccain ilkka niemela aarati parmar teodor przymusinski miro law truszczynski hudson turner work partial support nation scienc foundat grant ii r fage theorem answer set program minim subsum default negat failur encod plan problem nonmonoton logic program transform logic program relat causal plan strip new approach applic theorem prove problem solv autoepistem logic formal commonsens reason stabl model semant logic program logic program classic negat repres action chang logic program action languag action languag base causal explan preliminari report nonmonoton logic tempor project simpl causal minim tempor persist project use logic program stabl model semant solv deadlock reachabl problem safe petri net control knowledg plan bene logic persist plan sati pointwis circumscript preliminari report formal theori action preliminari report action languag answer set plan repres transit system logic program answer set gener nonmonoton reason preliminari report victor marek miro law truszczi victor marek miro law truszczi causal theori action chang anomal extens problem default reason ilkka niemel ilkka niemel adl explor middl ground strip situat calculu logic default reason chronolog ignor time timo soininen ilkka niemel relat stabl model ai plan domain repres action logic program default theori situat calculu approach applic action theori space shuttl tr nonmonoton logic tempor project anomal extens problem default reason autoepistem logic formal commonsens reason preliminari report logic program classic negat adl plan satisfi action languag base causal explan control knowledg plan answer set plan extend implement stabl model semant logic program stabl model semant constraint program paradigm develop declar rule languag applic product configur applic action theori space shuttl repres transit system logic program transform logic program relat causal plan use logic program stabl model semant solv deadlock reachabl problem safe petri net encod plan problem nonmonoton logic program ctr esra erdem vladimir lifschitz tight logic program theori practic logic program v n p juli m de vo d vermeir extend answer set logic program agent annal mathemat artifici intellig v n p septemb enrico giunchiglia joohyung lee vladimir lifschitz norman mccain hudson turner nonmonoton causal theori artifici intellig v n p march josefina sierrasantibez heurist plan declar approach base strategi action select artifici intellig v n p march chiaki sakama induct answer set nonmonoton logic program acm transact comput logic tocl v n p april ernest davi leora morgenstern introduct progress formal commonsens reason artifici intellig v n p march thoma eiter axel poller toward autom integr guess check program answer set program metainterpret applic theori practic logic program v n p januari davi van nieuwenborgh dirk vermeir prefer answer set order logic program theori practic logic program v n p januari tran cao son chitta baral nam tran sheila mcilraith domaindepend knowledg answer set plan acm transact comput logic tocl v n p octob pascal hitzler matthia wendt uniform approach logic program semant theori practic logic program v n p januari marcello balduccini enrico pontelli omar elkhatib hung le issu parallel execut nonmonoton reason system parallel comput v n p june chiaki sakama katsumi inou abduct framework comput knowledg base updat theori practic logic program v n p novemb nicola leon gerald pfeifer wolfgang faber thoma eiter georg gottlob simona perri francesco scarcello dlv system knowledg represent reason acm transact comput logic tocl v n p juli logic program knowledg representationth aprolog perspect artifici intellig v n p june