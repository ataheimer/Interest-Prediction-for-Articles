t bfg updat skip vari memori a give condit limitedmemori quasinewton method exact line search termin n step minim ndimension quadrat function show although broyden famili method termin n step fullmemori version bfg limitedmemori addit show fullmemori broyden famili method exact line search termin n step p matrix updat skip introduc new limitedmemori bfg variant test nonquadrat minim problem b introduct quasinewton famili algorithm remain standard workhors minim mani method share properti finit termin strictli convex quadrat function linear superlinear rate converg gener convex function need store evalu second deriv matrix gener approxim second deriv matrix built accumul result earlier step descript mani quasinewton algorithm found book luenberg denni schnabel golub van loan although infinit number quasinewton method one method surpass other popular bfg algorithm broyden fletcher goldfarb shanno see eg denni schnabel method exhibit robust behavior rel mani attempt made explain robust complet understand yet obtain one result work paper small step toward understand sinc investig question much inform drop bfg quasinewton method without destroy properti quadrat termin answer question context exact line search method find minim onedimension subspac everi iter in practic inexact line search satisfi side condit propos wolf see x substitut exact line search focu modif wellknown quasinewton algorithm result limit memori either discard result earli step x skip updat second deriv approxim x give condit quasinewton method termin n step minim quadrat function n variabl although broyden famili method see x termin n step fullmemori version show bfg nstep termin limitedmemori also show method broyden famili termin n step even p updat skip termin lost skip updat limit memori appli mathemat program univers maryland colleg park md gibsonmathumdedu work support part nation physic scienc con sortium nation secur agenc univers maryland z depart comput scienc institut advanc comput studi univers maryland colleg park md olearycsumdedu work support nation scienc foundat grant nsf x depart pure appli mathemat washington state univers pullman wa nazarethamathwashingtonedu t gibson d p oleari l nazareth x report result experi new limitedmemori bfg variant problem taken cute test set show save time achiev notat matric vector denot boldfac uppercas lowercas letter respect scalar denot greek roman letter superscript t denot transpos subscript denot iter number product alway taken left right notat spanfx denot subspac span vector x whenev refer ndimension strictli convex quadrat function assum form posit definit n theta n matrix b nvector limitedmemori variat quasinewton algorithm section character fullmemori limitedmemori method termin n iter ndimension strictli convex quadrat minim problem use exact line search fullmemori version method discuss known termin n iter limitedmemori bfg lbfg shown noced termin n step precondit conjug gradient method cast limitedmemori quasinewton method also known termin n iter see eg luenberg littl els known termin limitedmemori method let fx denot strictli convex quadrat function minim let gx denot gradient f defin kth iter let denot chang current iter denot chang gradient let x start point let h initi invers hessian approxim comput choos ff k fx k set set x comput choos h k fig gener quasinewton method present gener result character quasinewton method see figur termin n iter restrict method updat form mk here lbfg variat h n theta n symmetr posit definit matrix remain constant k fl k nonzero scalar thought iter rescal p k n theta n matrix product project matric form n theta n matrix product project matric form u nvector k nonneg integ w ik nvector z ik vector spanf g refer form gener form gener form fit mani known quasinewton method includ broyden famili limitedmemori bfg method assum quasinewton method satisfi secant condit h k posit definit symmetr symmetr posit definit updat desir sinc guarante quasinewton method produc descent direct note updat posit definit may produc k case choos ff k neg ff rather posit ff exampl method steepest descent fit gener form k defin note neither w z vector specifi sinc exampl st updat conjug gradient method precondition fit gener form exampl lbfg updat see noced limitedmemori constant written kgammam kk lbfg fit gener form iter k choos t gibson d p oleari l nazareth observ p k q k z ik obey constraint impos construct bfg relat lbfg follow way use everi s y pair format updat ie unlimit memori would creat updat bfg practic howev one would never would take memori store bfg matrix exampl defin limitedmemori dfp ldfp definit consist definit limitedmemori bfg given noced let mg order defin ldfp updat need creat sequenc auxiliari matric u dfp h s ss matrix k result appli dfp updat k time matrix h k recent s y pair thu st ldfp matrix given simplifi descript note k rewritten kgammam ki kgammam ki kgammam ki kgammam ki kgammam ki kgammam kj kgammam kj kgammam kj kgammam kl kgammam kl thu h k written mk ik kgammam ki kgammam ki kgammam ki mk kgammam kj h j gamma kgammam kj h j gamma lbfg variat equat look much like gener form given ldfp fit gener form follow choic kgammam ki kgammam ki z except choic p k trivial verifi choic satisfi gener form prove p k satisfi requir need show proposit limitedmemori dfp follow two condit hold valu k proof prove via induct suppos recal spanf g trivial equal spanfh g g furthermor conclud base case hold assum use induct show st case use induct assumpt induct k get t gibson d p oleari l nazareth assum induct assumpt i next valu map vector v use induct assumpt k get continu induct i henc induct complet prove k st case consid mk kgammam ki kgammam ki use structur v jk see henc also hold k st case exampl broyden class broyden famili class quasinewton method whose matric linear combin dfp bfg matric see eg luenberg chap paramet oe usual restrict valu guarante produc posit definit updat although recent work sr broyden class method khalfan byrd schnabel may chang practic restrict oe necessari develop theori broyden class updat express variat sketch explan fullmemori version fit gener form given limitedmemori case similar rewrit broyden class updat follow henc hi left reader show h k k spanf thu broyden class updat fit form termin limitedmemori method section show method fit gener form produc conjug search direct the orem termin n iter corollari p k map spanfi spanfi n furthermor condit p k satisfi k use format corollari theorem suppos appli quasinewton method figur updat form minim ndimension strictli convex quadrat function k termin ie g k proof assum hold prove induct sinc line search exact g orthogon use fact p t gibson d p oleari l nazareth fact z spanf g impli g see conjug sinc z w lastli spanf g base case establish assum claim hold also hold vector g k orthogon k sinc line search exact use induct hypothes g k orthogon fs conjug g see henc hold prove note suffici prove g use follow fact k sinc v project use form q k k orthogon span sinc z k spanf orthogon span iii sinc assum hold true exist express p iv orthogon h g k orthogon spanf thu variat thu hold k lastli use i ii abov map vector v spanfv construct exist henc show equal set show h g k linearli independ g we alreadi know basi fh linearli independ sinc span space linearli independ set fs number element suppos h g k linearli indepen dent exist oe k zero recal g k orthogon fs g induct assumpt impli g k also orthogon fh g thu j k posit definit g j nonzero conclud oe j must zero sinc true everi j zero k contradict thu set fh linearli independ henc hold k assum hold k g k hold ie exist j k g k j k t gibson d p oleari l nazareth lead contradict construct p k exist assumpt k must nonzero follow g use fact i ii iv befor get mk z ik w ik mk thu sinc neither fl k k zero must contradict sinc h posit definit g k assum nonzero method produc conjug search direct say someth termin corollari suppos method type describ theorem satisfi suppos h j scheme reproduc iter conjug gradient method precondition h termin n iter proof let k nonzero h method type describ theorem satisfi condit hold claim k st subspac search direct spanf equival st krylov subspac g know spanf g show via induct spanfh g base case trivial assum lbfg variat induct hypothesi impli henc search direct span krylov subspac sinc search direct conjug span krylov subspac iter produc conjug gradient precondition h sinc produc iter conjug gradient method conjug gradient method wellknown termin within n iter conclud scheme termin n iter note requir h j g j nonzero whenev g j nonzero requir necessari sinc method produc posit definit updat possibl construct updat map g j zero happen would breakdown method next corollari defin role latest inform s k k play format kth hupdat corollari suppos method type describ theorem satisfi suppos kth iter p k compos p project form least one project must singl project p v must form proof consid case p kg assum scalar oe ae exist t gibson d p oleari l nazareth set fs conjug thu linearli independ sinc work quadrat i sinc symmetr posit definit set fy also linearli independ coeffici k lefthand side must match righthand side thu henc k must make nontrivi contribut p k next show ae assum j j j j j nonzero posit definit ae j nonzero coeffici u nonzero k must make nontrivi contribut p k j impli g contradict henc ae show ae k consid p k k suppos ae k contradict p k k spanfi must nonzero discuss p case label ucompon p project scalar fl fl p know lbfg variat thu sinc u conclud least one u must nontrivi contribut k exampl method reproduc cg iter specif exampl method fit gener form satisfi condit theorem thu termin n iter exampl conjug gradient method precondition h see satisfi condit theorem sinc exampl limitedmemori bfg see satisfi condit theorem sinc ae exampl dfp with full memori see satisfi condit theorem consid p k full memori case fullmemori dfp h use fact one easili verifi p k therefor fullmemori dfp satisfi condit theorem reason appli limitedmemori case shall show x next corollari give idea method relat lbfg termin n iter strictli convex quadrat corollari lbfg method termin n iter ndimension strictli convex quadrat function even combin follow modif made updat vari limitedmemori constant keep k form project use v k recent along set pair fs form project use v k recent along linear combin pair fs iter rescal h proof variant show method fit gener form satisfi condit theorem henc termin corollari let valu may chang iter iter defin t gibson d p oleari l nazareth choos choic fit gener form furthermor variat satisfi condit theorem special case next variant iter k let i i k denot ith choic linear combin span set let m i choos choic satisfi gener form furthermor ae k i henc variat satisfi condit theorem let fl k scale constant choos vector matric lbfg combin variant left reader remark part previou corollari show accumul step method gill murray termin quadrat remark part previou corollari show scale affect termin lbfg fact method fit gener form easi see scale affect termin quadrat exampl method reproduc cg iter discuss sever method fit gener form given satisfi condit theorem lbfg variat exampl steepest descent see satisfi condit theorem thu produc conjug search direct fact well known see eg luenberg exampl limitedmemori dfp see satisfi condit p k k method produc conjug direct exampl suppos convex quadrat use limitedmemori constant exact arithmet seen iter termin within first iter limitedmemori dfp i mapl notebook file use comput exampl avail world wide web remark use exampl easili see limitedmemori broyden class method except limitedmemori bfg termin within first n iter updateskip variat broyden class quasinewton algo rithm previou section discuss limitedmemori method behav like conjug gradient ndimension strictli convex quadrat function sec tion concern method skip updat order reduc memori demand establish condit finit termin preserv delay broyden class termin updat skip shown powel skip everi updat take direct predict step ie step length one broyden class method procedur termin n iter ndimension strictli convex quadrat function altern proof result given nazareth prove relat result suppos exact line search use broyden class quasinewton method strictli convex quadrat function decid skip p updat h ie choos h occas then algorithm termin n iter contrast powel result matter updat skip multipl updat skip row theorem suppos broyden class method use exact line search appli ndimension strictli convex quadrat function p updat skip let updat iter j skippedg furthermor method termin n iter exact minim proof use induct k show t gibson d p oleari l nazareth follow easili sinc j jk least valu k jk nonempti ie jk g g k orthogon k sinc line search exact h k sinc member broyden famili satisfi secant condit henc base case true assum hold valu show also hold case i suppos k j k h k j j j k j case ii suppos k j k h k satisfi secant condit kg g k orthogon k sinc line search exact orthogon older j argument secant condit guarante h k k j j either case induct result follow suppos skip p updat set jn cardin n without loss gener assum set fs g ijngammap zero element vector linearli independ gnp must zero impli xnp exact minim f lbfg variat loss termin updat skip limitedmemori unfortun updat use limitedmemori repeat updateskip produc n conjug search direct ndimension strictli convex qua dratic termin properti lost show simpl exampl limitedmemori skip everi updat note accord corollari would still guarante termin use recent inform updat exampl suppos convex quadrat appli limitedmemori bfg limitedmemori constant skip everyoth updat h use exact arithmet mapl observ process termin even iter experiment result result x x lead number idea new method unconstrain optim section motiv de velop test idea describ collect test problem x test environ describ x section outlin implement lbfg method our base comparison xx describ varia tion pseudocod lbfg variat given appendix b complet numer result mani graph numer result origin fortran code avail motiv far given result convex quadrat func tion termin quadrat beauti theori necessarili yield insight method practic present new result relat converg algorithm gener function howev mani shown converg use converg analysi present x liu noced show limitedmemori bfg method implement line search satisfi strong wolf condit see x definit rlinearli converg convex function satisfi modest condit test problem test problem use constrain unconstrain test environ cute bongartz conn gould toint packag document obtain via world wide web via ftp packag contain larg collect test problem well interfac necessari use problem test problem store sif file chose collect unconstrain problem problem rang size variabl took lbfg limitedmemori constant least iter solv tabl enumer problem give sif file name dimens n descript problem cute packag also provid start point test environ use fortran code sgi indigo run algorithm fortran bla routin netlib use compil default optim level figur outlin gener quasinewton implement follow line search use routin cvsrch cstep written jorg j more t gibson d p oleari l nazareth no sif name n descript refer extend rosenbrock function nonsepar version problem problem problem tointgor toint oper research problem tointpsp toint psp oper research problem chnrosnb chain rosenbrock function errinro nonlinear problem similar chnrosnb fletchbv fletcher boundari valu problem problem fletchcr fletcher chain rosenbrock function problem penalti second penalti problem problem problem bdqrtic quartic band hessian band diagon variant broyden tridiagon system band away diagon first penalti problem problem power power problem oren msqrtal dens matrix squar root problem noced liu case seen nonlinear equat problem problem msqrtbl dens matrix squar root problem noced liu case seen nonlinear equat problem problem cragglvi extend cragg levi problem problem test problem problem powellsg extend powel singular function problem anoth function nontrivi group repetiti element tridiagon matrix squar root problem problem tridia shanno tridia quadrat tridiagon problem problem tabl test problem collect problem chosen cute packag david thuent version minpack line search routin find ff meet strong wolf condit see eg noced use except first iter alway attempt step length first use altern valu satisfi wolf condit first iter initi tri step length equal kg remain line search paramet detail appendix a gener matrix h k either limitedmemori updat one variat describ x store matrix implicitli order save memori comput time termin iter follow condit met iter lbfg variat k inequ satisfi line search fail number iter exce say iter converg first condit satisfi otherwis method fail lbfg variat tri number variat standard lbfg algorithm lbfg variat describ subsect summar tabl lbfg algorithm limitedmemori bfg updat given describ fulli byrd noced schnabel implement follow descript come essenti let h symmetr posit definit assum k pair satisfi let posit integ assum h iter rescal constant fl k commonli done practic then matrix h k obtain k applic limitedmemori bfg updat express gammau u k k k theta k matric given ae describ comput k case k let x k current iter let given matric vector updat n theta kgamma matric kgamma kgamma get n theta k matric use kgamma comput k vector comput k vector use fact alreadi know compon k g kgamma kgamma g kgamma likewis need comput subtract t gibson d p oleari l nazareth no refer brief descript x lbfg option allow vari iter base choic kgk allow decreas allow vari iter base choic kgk allow decreas allow vari iter base choic kgxk allow decreas allow vari iter base choic kgxk allow decreas x dispos old inform step length greater one x variat backup current iter odd x variat backup current iter even x variat backup step length use last iter x variat backup kg k k kg backup step length use last iter backup last iter backup last iter neither two vector merg result merg nd rd recent step taken length x variat merg merg last iter least two old vector merg x variat skip updat odd iter updat even iter alg alg dispos old inform backup next iter step length greater one alg alg merg merg last iter least two old vector merg allow vari iter base choic kgk allow decreas alg alg merg merg last iter least two old vector merg allow vari iter base choic kgxk allow decreas alg alg merg merg last iter least two old vector merg allow vari iter base choic kgk allow decreas alg alg merg merg last iter least two old vector merg allow vari iter base choic kgxk allow decreas tabl descript numer algorithm comput k rather recomput u k updat matrix previou iter delet leftmost column topmost row append new column right new row bottom let ae s m lower right submatrix u let s upper lbfg variat note alreadi comput assembl alreadi comput compon updat k use kgamma comput note comput two intermedi valu comput storag cost low order reconstruct h k need store diagon matrix mvector requir mn assum n much less storag n storag requir typic implement bfg step oper count tabl oper count comput h k g k step oper shown comput hg take omn oper assum n m see tabl much less on normal need comput hg whole matrix h store use lbfg basi comparison inform perform lbfg see liu noced nash noced vari iter algorithm typic implement lbfg fix throughout iter updat accumul updat alway use consid possibl vari iter preserv finit termin convex quadrat use argument similar present also prove algorithm linear rate converg convex function satisfi modest condit tri four differ variat theme base follow linear formula scale relat size kgk let k number iter save kth iter here think maximum allow valu k let converg test given kg k kkx k k ffl formula k iter k ae log oe t gibson d p oleari l nazareth alg no tabl number failur algorithm test problem algorithm said fail particular problem line search fail maximum allow number iter case exceed two choic ffi k choic whether allow k decreas well increas four variat use four valu m algorithm result summar tabl extens result obtain tabl show algorithm roughli number failur lbfg tabl compar algorithm lbfg term function evalu algorithm valu m number time algorithm use fewer function evalu lbfg list rel total number admiss problem problem admiss least one two method solv it observ three case algorithm use fewer function evalu lbfg half test problem tabl compar algorithm lbfg term time entri similar tabl observ algorithm well term time well better lbfg nearli everi case problem algorithm comput ratio number function evalu algorithm number function evalu l bfg tabl list mean ratio mean impli algorithm better lbfg averag averag better algorithm case first four algorithm observ howev mean close one lbfg variat alg no m tabl function evalu comparison first number entri number time algorithm well better normal lbfg term function evalu second number total number problem solv least one two method the algorithm andor lbfg experi save term time first four algorithm algorithm tend save fewer vector lbfg sinc k typic less m less work done comput h k g k algorithm tabl give mean ratio time solv valu algorithm note ratio far one case variat particularli well problem see inform dispos old inform algorithm may decid store much old inform stop use it exampl may choos throw away everyth except recent inform whenev take big step sinc old inform may relev new neighborhood use follow test last step length bigger dispos old inform algorithm perform nearli lbfg substanti deviat one two problem valu m seem evenli divid term better wors tabl see algorithm success converg everi problem tabl show almost alway well better lbfg term function evalu howev tabl show differ minor term time observ algorithm gener faster lbfg tabl again consid mean ratio time tabl differ minor method also particularli well problem back updat h algorithm discuss x alway use recent updat preserv quadrat termin regardless older valu use t gibson d p oleari l nazareth alg no tabl time comparison first number entri number time algorithm well better normal lbfg term time second number total number problem solv least one two method the algorithm andor lbfg use idea creat algorithm certain condit discard next recent valu h although still use recent vector vector save previou iter call back up backup next recent valu y algorithm use follow four test trigger back up current iter odd current iter even step length use last iter kg k k kg two addit algorithm vari situat allow backup backup perform previou iter back strategi seem robust term failur variat algorithm failur all see tabl inform interest observ back odd iter algorithm back even iter algorithm caus differ result back odd iter seem almost effect number function evalu tabl littl effect time tabl howev back even iter caus much differ behavior lbfg wors lbfg problem better few algorithm two variat idea back previou step length one wipe data previou iter use one updat show improv lbfg term function evalu fact two algorithm best function evalu ratio case tabl unfortun algorithm compet lbfg term time tabl littl differ lbfg variat alg no m tabl mean function evalu ratio algorithm compar lbfg problem either method fail use mean algorithm probabl rare mani step length one row algorithm also two variat idea backup iter norm g k bigger norm g k larger differ result term function evalu ratio tabl algorithm better indic may wise backup twice row poorli term time compar lbfg tabl merg inform updat algorithm yet anoth idea merg data take less storag comput time merg mean form linear combin variou vector vector would merg correspondingli corollari show long recent use without merg old vector may replac linear combin old vector lbfg use idea follow way certain criteria met replac second third newest vector collect sum similarli vector use variou test determin would merg neither two vector merg result merg second third recent step taken length merg last iter least two old vector merg first variat algorithm perform almost ident lbfg especi term time tabl occasion wors term time tabl observ also reflect result tabl tabl like vector merg second variat algorithm make gain term time especi t gibson d p oleari l nazareth alg no tabl mean time ratio algorithm compar lbfg problem either method fail use mean larger valu tabl tabl unfortun reflect save amount linear algebra requir number function evalu gener larger algorithm lbfg tabl tabl skip updat h algorithm everi updat h skip step length one alway chosen bfg termin n iter strictli convex quadrat function hold true exact line search see x unfortun neither properti hold limitedmemori case will howev tri algorithm motiv idea idea that everi often use current updat h instead use old h three variat theme skip updat odd iter skip updat even iter skip updat kg kk kg k k algorithm backup result skip odd even iter quit differ skip odd updat algorithm extrem well everi valu two problem otherwis badli skip even updat algorithm perform somewhat better extrem well problem problem also better lbfg term time occas algorithm tabl neither well term function evalu mean ratio function evalu tabl time tabl usual far greater one skip updat norm g increas algorithm well all better term function evalu one problem valu tabl rare better term time tabl ratio bad function evalu tabl time tabl lbfg variat combin method algorithm experiment combin method describ previou section algorithm combin algorithm dispos old inform backup next iter step length greater one essenti assum step region model quasinewton matrix take long step thu rid quasinewton matrix inform algorithm well term function evalu mean ratio less one three valu tabl well term time algorithm combin merg vari m algorithm well term time larger tabl term function evalu tabl conclus spectrum quasinewton method rang requir storag n theta n approxim hessian eg broyden fam ili requir storag vector eg conjug gradient limitedmemori quasinewton method fall extrem term perform storag method fall middl ground exampl conjug gradient method propos shanno nazareth truncatednewton method partit quasinewton method character limitedmemori quasinewton method fit gener form properti produc conjug search direct convex quadrat shown limitedmemori bfg broyden famili member limitedmemori analog properti also consid updateskip someth may seem attract parallel environ show updat skip quadrat problem accept fullmemori broyden class member delay termin lose properti finit termin limit memori skip updat also introduc simpletoimpl modif standard limitedmemorybfg algorithm seem behav well practic problem appendix a line search paramet tabl a give line search paramet use code note first iter initi steplength rather variabl valu descript stp step length tri first gamma valu wolf condit gtol valu wolf condit rel width interv uncertainti maximum number function evalu tabl a line search paramet appendix b pseudocod b lbfg algorithm pseudocod comput gammah k g k iter k lbfg given figur b updat h also handl implicitli comput t gibson d p oleari l nazareth sze els need step overwrit stg ytg fig b matlab pseudocod comput hg lbfg sze number vector avail updat iter oldsz number vector avail previou iter lbfg sze chosen minimum oldsz the limitedmemori constant b vari iter algorithm suppos k denot number s y pair use kth updat simpli chose sze minimum oldsz comput k b dispos old inform algorithm dispos criterion met iter k set oldsz zero sze one comput k b back updat h algorithm backup iter k set oldsz one less previou valu sze set sze minimum oldsz m usual b merg inform updat algorithm merg complic variat handl determin newest sze comput k execut pseudocod given figur b set oldsz one less previou valu sze set sze minimum oldsz m usual assum iter k variat newest valu yet ad y execut choos new valu sze comput fig b matlab pseudocod merg variat fix valu compon use comput k b skip updat h algorithm skip updat iter k set sze oldsz comput stg ytg step skip step continu r ftpthale test function unconstrain minim perform multifront scheme partial separ optim numer method unconstrain optim nonlinear equat optim posit definit updat spars hessian matric httpwww matrix comput privat commun author partit variabl metric updat larg structur optim problem theoret experiment studi symmetr rank one updat limit memori bfg method larg scale optim linear nonlinear program numer studi limit memori bfg method truncatednewton method larg scale optim relationship bfg conjug gradient algorithm implic new algorithm updat quasinewton matric limit storag discret newton algorithm minim function mani variabl quadrat termin properti minim algorithm i conjug gradient method inexact line search error specifi problem chnrosnb tr ctr sun linp updat selfscal symmetr rank one algorithm limit memori largescal unconstrain optim comput optim applic v n p januari adi ditkowski gadi fibich nir gavish effici solut a use a journal scientif comput v n p juli m albaali extraupd criterion limit memori bfg algorithm larg scale nonlinear optim journal complex v n p june