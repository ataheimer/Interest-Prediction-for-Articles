t least greatest fix point intuitionist natur deduct a paper compar studi number intensionalsemant distinct least greatest fix point oper naturaldeduct proof system intuitionist logic extend prooftheoret defend way eight pair oper analys exposit centr around cubeshap classif node stand axiomat one pair oper logic constant intend proof reduct rule arc proof reductionpreserv encod one pair term anoth three dimens cube reflect three orthogon binari option conventionalstyl vs mendlerstyl basic coiter vs enhanc primitivecorecurs simpl vs courseofvalu coinduct axiomat encod well known other howev novel classif cube also new differ least fix point oper consid illustr exampl correspond natur number type b introduct paper compar studi number least greatest xed point oper induct coinduct denit oper natur deduct nd proof system intuitionist logic type lambda calculi product sum type extend logic constant typelanguag constant either axiomat intend proof reduct rule implicit denit proof reductionpreserv encod term logic constant alreadi present explicit deni tion one reason logic typelanguag constant interest lie use program interpret induct type behav data type introduct data constructor elimin recursor coinduct type may view codata type introduct corecursor elimin codata destructor literatur fairli larg number axiomat encod particular coinduct dene type gener coinduct denit oper found see eg paper grew wish better understand individu properti relat other contribut paper consist coordin analysi eight intensionalsemant distinct pair coinduct denit oper arrang cubeshap taxonomi result attempt variou known axiomat encod singl pictur nd ller hole node cube stand axiomat proof reduct rule one pair logic constant arc proof reductionpreserv encod one pair term anoth axiomat encod reli presenc system certain logic constant the standard proposit connect ndorder quantier retract recurs denit oper three dimens cube ect three orthogon binari choic conventionalstyl vs mendlerstyl basic coiter vs enhanc primitivecorecurs simpl vs courseofvalu coinduct cube look follow q with option superscript conventionalstyl induct coinduct denit oper n with option superscript mendler style oper superscript q mark enhanc featur superscript indic courseofvalu featur distinct basic enhanc simpl courseofvalu coin duction distinct essenti dierent form coinduct dierent associ scheme total corecurs basic coinduct give coiter enhanc coinduct give full primit corecurs axiomat encod found literatur deal simpl form coinduct axiomat encod cours ofvalu coinduct paper our think dierenc convent mendlerstyl coinduct name mendler technic harder spell inform shallow conventionalstyl coinduct denit oper appli propositionfunct posit associ reduct rule refer proof monoton all posit propositionfunct monoton wrt preorder inclus mendlerstyl oper appli propositionfunct axiomat enhanc courseof valu conventionalstyl oper reli presenc system logic constant mendlerstyl oper not thu one sens mendlerstyl oper uniform conventionalstyl oper resort program jargon one might instanc want say mendlerstyl oper gener wherea convent style one polytyp uniform featur price proof rule mendlerstyl oper involv implicit extern ndorder quantic level premiss throughout paper semant keep mind intension consid reduct convers remark order regard technic machineri use natur deduct mean proof system style instead axiom involv implic univers quantic systemat prefer proof rule involv hypothet schemat judgement exter naliz implic univers quantic sharp contrast hilbert style proof system us therefor natur deduct realli extend natur deduct schroederheist allow proof rule order higher two may conclus premiss premiss turn even latter may hypo thetic choic make axiomat dierent logic constant compact expens certain ad complex encod term logic constant order compactifi notat get around technic relat convers substitut use simpl metasyntax higherod abstract syntax deriv logic framework de bruijn autpi autq martinlof system ariti chapter harper honsel plotkin lf denot schemat wrt x denot instanti schemat instanti stipul satisfi follow rule free s made eort make paper selfcontain omit detail refer uustalu preliminari report present work appear also refer matth indepth studi extens system f constructor basic enhanc convent mendlerstyl induct type regard claric relationship convent mendlerstyl induct build partli upon work paper organ follow section lay start point given system denot ni ni nd proof system st ndorder intuitionist proposit logic option extend retract recurs denit oper then section rst present basic coinduct oper convent mendler style continu encod term ndorder quan tier other section describ enhanc coinduct courseofvalu coinduct oper respect encod via oper basic kind section give survey relat work induct coinduct type final section conclud mention direct futur work preliminari principl coinduct denit oper describ ad nd proof system intuitionist proposit logic they also admit straightforward gener predic logic natur base system extens howev ni standard nd proof system full storder intuitionist proposit logic logic constant ni conjuct _ disjunct verum falsum implic proposit connect axiomat proof reduct rule list figur to save space reduct rule given proof untyp term code proof reduct rule proof easi recov reduct relat term satis subject reduct i _i l e c e ce figur proof reduct rule standard proposit connect anoth import base system ni nd proof system ndorder intuitionist proposit logic system extend ni standard ndorder quantier proof rule present figur encod enhanc coinduct term basic coinduct shall need logic constant retract recurs denit oper ator propositionvalu oper propositionfunct posit proof reduct rule appear figur introduct elimin rule behav embeddingretract pair c c ec ec figur proof reduct rule extens ni ni denot ni ni import us fact ni strongli normal ie everi proof ni strongli normal consult mendler urzyczyn figur proof reduct rule syntact concept posit neg propositionfunct systemdepend particular system concept dene mutual structur induct propositionfunct denabl sy tem ni extens consid paper propositionfunct xf dene posit neg everi occurr x f appear within even odd number anteced implic also particular system similar induct explicit denit given deriv proof rule establish posit neg ativ propositionfunct monoton antimonoton wrt preorder proposit inclus proof rule appear figur f f posit f neg figur deriv proof rule exampl shall consid propositionfunct n dene set n obvious posit correspond monoton wit map n dene follow basic coinduct logic constant two lower front node cube provid fundament form coinduct denit proposit viz basic in word coiter form convent mendlerstyl coinduct denit oper conventionalstyl induct coinduct appli posit propositionfunct mendlerstyl counterpart applic without restrict propositionfunct proof reduct rule given figur proof rule n complex reduct rule compens simpler uniform righthand side refer proof rule e cata f cata f wrap f c e emap f cata f e e open open f ana f c e map f figur proof reduct rule e e figur proof reduct rule n algebra semant point view f least prex point f wrt inclus preorder proposit prex point f by irul lower bound set prex point f by erul recal r said prex point f f r less r f dualli greatest postx point f sinc least prex postx point monoton function also least xed point f f also least greatest xed point f similar fashion mf thought least robustli prex point f robustli prex point f lower bound robustli prex point f here r consid robustli prex point f f r less r f y less r s less r mf also least ordinari prex point function send r supremum set f y s less r f e which alway posit appear least monoton major f wrt pointwis lift inclus preorder proposit preorder propositionfunct f monoton f f e equival pointwis dualiz obviou nf greatest robustli postx point f greatest ordinari postx point function f f r y ry f y send r inmum set f y s greater r program interpret f data type wrap f data constructor cata f iter f codata type ana f coiter open f codata destructor standard sens mf mapwrap iter nf coit mapopen mendlerstyl version thing best explain exampl type standard natur number nat zero succ constant zero successor function natcata iter normal axiomat follow type reduct rule essenti noth els note that preorder also heyt algebra may turn monoton function least greatest prex postx point henc allow appli posit f lead inconsist the encod term demonstr case inde convent basic induct n underli propositionfunct inde make follow denit ensur requir type reduct properti nat n zero wrap n inlhi succc wrap n inrc suggest similar special mendlerstyl basic induct n follow denit nat mn mapzerod mapwrapinlhi d d mapwrapinrc d type nat mendlerstyl natur number mapzero mapsucc natit mendlerstyl constant zero successor function iter obey follow type reduct rule here may help think q chosen type represent natur method convert represent type natur natur henc construct noth represent for predecessor togeth method convert represent natur use nat q standard constructor natur denabl follow zero mapzero succc mapsuccc natcata natit iter iter simpl form total re cursion result iter given natur depend result predecessor straightforward denit function follow complex form recurs denit iter get clumsi factori given natur instanc depend factori predecessor also predecessor itself iter denit factori dene factori ident function in parallel project factori compon out zero zero exactli trick tupl also need program fibonacci function fibonacci given natur number depend fibonacci predecessor also fibonacci prepredecessor iter denit fibonacci dene fibonacci one stepbehind fibonacci in parallel boc fstnatcatac zero case snd boc fstnatiterc zero case snd exampl show form recurs captur iter use tupl model without drawback howev first transpar dene function use nativ form re cursion second intension behavior iter denit alway satisfactori well known instanc predecessor function program use iter program take linear time comput and work desir numer ie close natur number term predc cata n c predc iterc complex form induct consid follow section remedi problem oer advanc form recurs basic coinduct vs ndorder quantier m n encod term proof reduct preserv manner proposit follow proof reductionpreserv encod term f c map cata f ana f open f c map f fstc sndc hfstc i encod proof theori recapitul knastertarski xed point theorem state inmum supremum set prex postx point monoton function least greatest prex postx point gener form encod seem piec folk lore special case polynomi propositionfunct such n essenti encod rst given bohm berarducci leivant natur encod special follow nat zero natcata in bohm berarducci encod nat zero c e z e proposit follow proof reductionpreserv encod m n term iter coit mapopen encod build follow robust analog knastertarski xed point theorem inmum supremum set robustli prex postx point function monoton not least greatest robustli prex postx point corollari ni and also fragment includ ni extend oper m n strongli normal con uent mendlerstyl vs convent coinduct also possibl encod term m n vice versa encod latter direct avail proposit follow proof reductionpreserv encod term m n f c mapwrapc cata ana f e open f c mapopenc proposit follow proof reductionpreserv encod m n term presenc iter f r y ry f y coit mapopen d open f ac d encod m n term prooftheoret version observ least greatest prex postx point f e f least greatest robustli prex postx point f enhanc coinduct logic constant two upper front node cube captur enhanc in word primitivecorecurs form convent mendlerstyl coinduct denit q q oper enhanc induct coinduct q n q mendlerstyl counterpart proof reduct rule given figur ad q q proof system presuppos presenc _ correspond restrict govern addit q n q q e para f wrap q para f fst e e r _ q open q open q figur proof reduct rule q q algebra semant pointofview q f least recurs prex point given necessarili monoton f ie least element set rs f r q f less r note recurr occurr q f here q f greatest recurs postx point f least recurs robustli prex point given f ie least element set rs f y less r s less r also q f note circular n q f dualli greatest recurs robustli postx point f program q f recurs data type wrap q f recurs data constructor para f primit recursor q f recurs codata type apo f primit corecursor open q f recurs codata e recmapwrap q c d i e ec recd e i e mapopen q c d mapopen q corc e d i ec dcor e i figur proof reduct rule q n q destructor q f mapwrap q rec n q f cor mapopen q mendlerstyl equival return run exampl natur special enhanc induct n yield type nat q recurs natur number zero q succ q natpara recurs constant zero recurs successor function primit recursor nat q q n zero q wrap q succ q c wrap q type reduct rule nat q follow note nonzero recurs natur construct pair natur reduct rule rst use argument recurr applic function dene second one use directli principl two natur unrel normal usag construct second natur equal rst the predecessor standard successor function recov duplic argument zero zero q succc succ q hc ci type nat q recurs mendlerstyl natur dene follow nat mapzero q d i mapwrap q inlhi d i nat q obey follow type reduct rule mapzero q d e z natrecmapzero q d i e z nonzero recurs mendlerstyl natur construct represent for predecessor method convert represent natur anoth function represent natur normal usag construct second method also convers method choos nat q type represent standard constructor obtain follow zero mapzero q succc mapsucc q c recurs natur construct use standard constructor natpara natrec captur standard primit recurs factori function instanc program follow degener applic primit recurs use direct access predecessor nonzero natur give fast constant time program predecessor function predc natparac inlhi predc natrecc inlhi enhanc vs basic coinduct m n encod term q q q n q convers also true retract recurs denit oper avail proposit follow proof reductionpreserv encod term q f c wrap q f f cata f f ana f f open f c map f open q proposit follow proof reductionpreserv encod m n term q d mapwrap q c d d iter coit mapopen d mapopen q c d d proposit follow proof reductionpreserv encod q q term presenc q f q r f r q f c iwrap f q f q para f cata f q q f q r f r _ q apo f open q f q open f q oc i proposit follow proof reductionpreserv encod q n q term m n presenc f q r rm q mapwrap q rec f q r n q cor last two encod would realli like dene q cannot becaus circular resort way overcom obstacl result follow use necess one cannot possibl without it rst encod implicit also appear second seem new and also fragment includ ni extend oper q q q n q strongli normal con uent courseofvalu coinduct logic constant two lower rear node cube captur courseofvalu form convent mendlerstyl coinduct deni tion oper courseofvalu induct coinduct n mendlerstyl counterpart proof reduct rule given figur ad proof system presuppos presenc _ correspond restrict govern addit r f p f e cvcata f cvcata f wrap cvcata f fstopen f sndopen f r e open open f cvana f c e f cata f wrap f case figur proof reduct rule e e mapopen c d mapopen cvcoitc e d figur proof reduct rule n algebra semant pointofview f least courseofvalu prex point given necessarili monoton f ie least element set rs f zr f z less r f greatest courseofvalu postx point f least courseofvalu robustli prex point given f ie least element set rs f y less r s less r also f y dualli greatest courseofvalu robustli postx point f program f courseofvalu data type wrap f cours ofvalu data constructor cvcata f courseofvalu iter f courseofvalu codata type cvana f courseofvalu iter open f courseofvalu codata destructor f mapwrap cviter n f cvcoit mapopen mendlerstyl equival special courseofvalu induct n yield type nat courseof valu natur number zero succ natcvit courseofvalu version constant zero successor function iter respect nat n zero wrap special type reduct rule constant follow similarli recurs case nonzero courseofvalu natur construct singl preced natur argument courseof valu successor function colistlik structur natur coiter reduct rule appli function dene recurr everi element colist principl again natur colist unrel normal usag howev tail colist ancestr head the predecessor natur construct by ancestr natur mean colist lesser natur descend order standard successor function natur therefor easili recov courseofvalu successor function rst coiter appli predecessor function argument zero zero h pred predecessor function howev admit straightforward definit thi problem vanish case courseofvalu primit recurs denabl term ancestr function denabl courseofvalu iter way predecessor function denabl simpl iter predc pred c fstopen pred c cvcata n c special courseofvalu mendlerstyl induct n yield nat courseofvalu mendlerstyl natur nat mapzero d deriv type reduct rule aboveden constant follow e z nonzero courseofvalu mendlerstyl natur construct three compon rst two case simpl mendler style natur represent natur the predecessor method convert represent natur addit third compon give method convert represent for natur noth anoth represent normal predecessor natur so use nat type represent obtain standard constructor natur follow zero mapzero pred succc mapsucc c pred dene predecessor function need also ancestr function predc pred c fstopen pred c cviterc courseofvalu natur construct use standard constructor natcvcata natcvit captur standard courseofvalu iter fibonacci function instanc program use natcvcata follow boc natcvcatac zero case sndopen use natcvit denit fibonacci function becom even straightforward as instead manipul intermedi colist valu fibonacci return roll back input it boc natcviterc zero courseofvalu vs basic coinduct encod m n term n similar encod constant term q q q n q also encod opposit direct analog and fact even simpler as need proposit follow proof reductionpreserv encod term f c wrap f cata case fstopen f ana f f open f c map proposit follow proof reductionpreserv encod m n term iter coit mapopen proposit follow proof reductionpreserv encod term f wrap f c cvcata f c e cata f c e cvana f f open f c proposit follow proof reductionpreserv encod n term m n mapwrap c d cviter cvcoit mapopen c d corollari ni and also fragment includ ni extend oper strongli normal con uent relat work rst author extend intuitionist nd system basic convent style induct dene predic uniformli axiomat martin lof theori iter induct denit bohm berarducci leivant rst author describ encod polynomi basic conventionalstyl induct type nd order simpli type lambda calculu girard reynold system f nd proof system fragment ndorder intuitionist proposit logic method often refer impred encod induct type keep mind basic conventionalstyl induct mendler describ extens axiomat ndorder simpli type lambda calculu enhanc induct coinduct type style mendler discuss similar system basic mendlerstyl induct coinduct type extens nd proof system ndorder intuitionist predic logic constructor basic convent mendlerstyl induct predic describ leivant paper extract program extens of storder simpli type lambda calculu proof extens of nd proof system ndorder intuitionist predic logic parigot work realizabilitybas program proof bear connect leivant mendler work greiner howard chapter consid program extens storder simpli type lambda calculu axiomat constructor conventionalstyl coinduct type coiter data destruct codata construct motiv hagino categorytheoret work cite studi thu bare reduct even convers driven denit semant consider howard implement system program languag lemon geuver carri compar studi basic vs enhanc convent vs mendler style induct coinduct type extens ndorder simpli type lambda calculu spirit leivant paulinmohr extract program girard f proof coquand huet cc calculu construct mileston paper induct type famili extens cc luo ecc extend calculu construct combin cc martinlof type theori pfen paulinmohr coquand paulinmohr ore paulinmohr formul calculu induct construct extend cc induct type famili primit recurs axiomat coq proof develop system develop inriarocqencourt enslyon implement last system categori theori basic conventionalstyl induct coinduct type model initi algebra termin coalgebra covari functor hagino design type function languag cpl base distribut categori initi algebra termin coalgebra strong covari functor implement chariti languag cockett et al similar program languag program calcul commun root birdmeerten formal squiggol which origin equat theori program parametr data type list malcolm made commun awar hagino work studi program calcul base bicartesian close categori initi algebra termin coalgebra cocontinu resp continu covari functor meerten rst author give treatment primitiverecurs set classic refer area fokkinga sheard fegara conclus futur work paper studi least greatest xed point oper intuitionist nd system extend with describ eight pair oper whose elimin introduct behav recursor corecursor meaning kind intend continu research studi perspect util intuitionist nd system least greatest xed point oper program construct specic concern specic methodolog comput assist synthesi also start studi relat categor deduct system type combinatori logic la curien util program calcul relev categor theori also intend nd detail appar close relationship enhanc courseofvalu mendlerstyl corecurs gimenez new formul guard corecurs for system sub supertyp quantic upper lower bound radic dierent older syntact formul acknowledg thank anonym refere number help comment suggest especi regard matter present proof gure diagram appear paper typeset use proofsti makoto tatsuta xypic gener kristoer c rose respect r introduct theori list yellow seri report induct de survey project automath law order algorithm induct coinduct type iter recurs categor program languag framework de fix point extension type function program languag reason function program complex class associ type disciplin contract proof program data structur program transform extens system f iter primit recurs monoton induct type recurs type type constraint secondord lambda calculu induct type type constraint secondord lambda calculu extend calculu construct ecc induct type second order type theori recurs program proof mohr extract f mohr induct de mohr induct de fold season natur extens natur deduct gener rule quanti latticetheoret xpoint theorem applic posit recurs type assign natur deduct intuitionist least greatest cube proof system intuitionist predic primit corecurs courseofvalu coiter code recurs tr introduct theori list extract myampersandohgr program proof calculu construct induct defin type program martinlomyampersandumlf type theori introduct data structur program transform induct defin type calculu construct recurs program proof framework defin logic extend calculu construct ecc induct type fold season fix point extension type function program languag type fixpoint program proof posit recurs type assign induct definit system coq rule properti structur recurs definit type theori codifi guard definit recurs scheme mendlerstyl induct type categor program induct coinduct type categor program languag ctr gill barth tarmo uustalu cp translat induct coinduct type acm sigplan notic v n p march g barth m j frade e gimnez l pinto t uustalu typebas termin recurs definit mathemat structur comput scienc v n p februari