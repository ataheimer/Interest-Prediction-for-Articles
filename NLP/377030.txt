t framework integr data align distribut redistribut distribut memori multiprocessor a abstractparallel architectur physic distribut memori provid costeffect scalabl solv mani larg scale scientif problem howev system difficult program tune system choic good data map parallel strategi dramat improv effici result program paper present framework automat data map context distribut memori multiprocessor system framework base new approach allow align distribut redistribut problem solv togeth use singl graph represent commun parallel graph cpg structur hold symbol inform potenti data movement parallel inher whole program cpg particular given problem size target system use find minim cost path graph use gener purpos linear integ program solver data layout strategi gener optim accord current cost compil model b introduct increas avail massiv parallel comput compos larg number process node far match avail program model softwar tool enabl user get high level perform system prolifer small mediums parallel system such desktop multiprocessor pc workstat processor system modest number processor share memori broaden use parallel comput scientif engin environ user need consid underli system characterist get reason perform case eas program portabl main aspect consid favor popular sharedmemori program model thorough understand complex target parallel system requir scale applic run larg system compos hundr processor numa interconnect although avail program model high perform fortran offer signific step toward make system truli usabl programm forc design parallel data map strategi heavili depend underli system characterist combin hpf sharedmemori paradigm common target multipl level parallel offer current system compos smp node necessarili reduc complex problem strategi design find balanc minim data movement maxim exploit parallel use strategi compil gener singl program multipl data spmd program execut target machin softwarecoher numa architectur compil translat global refer hpf local nonloc refer satisfi appropri messagepass statement usual respect ownercomput rule ie processor own piec data respons perform comput updat it best choic data map depend program structur characterist underli system number processor optim perform support compil system problem size crucial aspect data movement parallel load balanc taken consider unifi way effici solv data map problem automat data distribut tool may play import role make massiv parallel system truli usabl usual offer sourcetosourc tool annot origin program data map direct execut statement offer dataparallel extens current sharedmemori program model automat data distribut map array onto distributedmemori node system accord array access pattern parallel comput done applic applic consid automat optim solv regular problem ie use dens array main data structur problem allow comput commun requir deriv compil time tradit method automat data map method split static data map problem two main independ step align distribut align step attempt relat dimens differ array minim overal overhead interprocessor data movement author prove align problem npcomplet distribut step decid align dimens distribut number processor assign them distribut pattern usual array distribut either block cyclic fashion although tool also consid blockcycl distribut assign block consecut element processor roundrobin fashion good distribut maxim potenti parallel applic balanc comput load offer possibl reduc data movement serial howev two step independ tradeoff minim data movement exploit parallel singl layout whole program map said static howev complex problem remap action code block improv effici solut case map said dynam note dynam data map requir data movement reorgan data layout code block order solv dynam data map problem approach consid set reason good solut align distribut code block and addit step one solut select code block maxim global behavior again note approach may discard solut phase could lead global optim solut kremer demonstr optim select map phase npcomplet anderson lam show dynam data map problem presenc control flow statement phase nphard propos paper propos new framework automat determin data map parallel strategi fortran program context parallel environ dmm system main interest develop approach find optim solut data map problem given characterist target architectur assum predetermin compil model compar previou approach algorithm combin data distribut dynam redistribut parallel inform singl graph represent communicationparallel graph cpg cpg contain inform data movement parallel within phase possibl data movement due remap them inform weight time unit repres data movement comput cost allow align distribut redistribut problem solv togeth use cpg model data map problem minim cost path problem set addit constraint ensur correct solut gener purpos linear integ program techniqu guarante optim solut provid use solv minim cost path problem techniqu proven effect solv varieti compil problem data map strategi consid static dynam one twodimension block cyclic distribut pattern effect control flow statement phase consid framework cost model base profil inform obtain previou serial execut addit paramet target system number processor parallel thread creation overhead commun latenc bandwidth provid gener data map strategi use annot origin fortran program use hpf data map loop parallel direct note consid strategi base hpf model therefor optim solut condit capabl target hpf compil accuraci cost model current implement handl commun optim pipelin comput therefor assum hpf compil gener spmd code accord ownercomput rule loop transform commun optim perform compil rest paper organ follow section use motiv exampl describ relat work order simplifi present cpg section describ inform requir model onedimension data map model extend section support twodimension data map section describ formul minim cost path problem use find optim data map sever experi perform valid accuraci feasibl model present section final conclud remark summar section relat work motiv larg number research address problem automat data distribut context regular applic due complex problem relat work split global problem sever independ step usual align distribut remap addit also perform second level simplif use heurist algorithm solv step final anoth common differ propos method cost model adopt sever step although data map specifi mean three attribut align distribut remap automat data map framework solv independ let us first motiv coupl align distribut sub problem solv independ li chen gupta et al kremer kennedi chatterje et al ayguad et al align step may impos constraint term parallel exploit distribut step instanc assum simpl exampl shown figur loop includ two statement bodi assign matrix b matrix a assign matrix b transpos matrix c align algorithm easili determin perfect align array b transposit array c solut commun free howev align forc distribut step partit differ loop nest statement bodi follow ownercomput rule lead loop parallel unless loop distribut appli may possibl statement caus conflict involv data depend cycl result align distribut step previous referenc propos end set candid static map phase candid map input final independ step evalu use dy figur simpl exampl align distribut namic map instanc figur show excerpt adi integr kernel code consist two phase sequenc sweep along row first phase follow sweep column second phase phase analyz isol row layout best perform first phase column layout best perform second phase note solut one phase lead sequenti phase sequenti paralleliz phase far consid best strategi phase isol therefor remap step propos dynam transposit array two phase requir data reorgan propos export set solut phase rest phase case remap step would consid possibl appli static row column layout whole sequenc phase depend characterist target system for instanc low bandwidth could better global solut even one phase sequenti howev propos consid solut part initi set candid solut phase may lead situat which instanc static twodimension distribut row column phase which may skip perform isol phase best global solut fact later relat work also claim simultan align distribut step order preserv parallel minim data movement ci ci figur simpl exampl dynam map howev still propos addit step solv dynam data map problem algorithm align problem proven npcomplet reason li chen and author work modif initi work propos heurist algorithm solv problem research propos use algorithm base dynam program howev find optim solut align problem use integ program techniqu order solv distribut problem exhaust search usual perform author describ model exhaust explor distribut option base pattern match refer pattern assign statement predefin set commun primit use constraintbas approach assum default distribut furthermor author combin mathemat graphbas problem represent find communicationfre align use heurist elimin largest potenti commun cost still maintain suffici parallel dynam data map problem npcomplet solv use divideandconqu approach author use dynamicprogram techniqu start static solut recurs decompos employ cost model dynamicprogram algorithm also use determin best combin candid layout sequenc phase control exhaust search consid find solut problem final author formul dynam data partit problem anoth integ program problem select singl candid data layout predetermin set layout candid cost model approach need cost model make decis step perform estim precis enough abl distinguish consid search space possibl data map communicationno commun cheapexpens cost model quit simpl obtain reliabl solut complex program anoth option estim perform symbol analysi code how ever array data size known compil time well number loop iter probabl condit statement inform provid user obtain profil contrast train set obtain good perform estim set report program although difficult build train set gener enough guarante possibl sourc program consid gener difficult optim tool make best guess compil time incomplet inform thu run program serial first obtain profil inform common strategi adopt mani commerci optim especi qualiti solut depend heavili characterist sourc program although attempt made add interact three step solut propos paper improv relat work two main aspect i present unifi represent allow compil explor solut would obtain isol analysi ii use linear integ program techniqu find optim solut whole problem obvious improv trade comput time requir get optim solut howev expens techniqu import tool compil appli select case optim solut expect result signific perform gain onedimension data map valid data map strategi onedimension data map case distribut most one dimens array onedimension grid processor either block cyclic fashion distribut deriv may static dynam number processor n target architectur assum known compil time sequenti execut origin fortran program must profil order obtain problemspecif paramet array size loop bound execut time probabl condit statement communicationparallel graph framework defin singl data structur repres effect data map strategi allow model name data structur communicationparallel graph cpg core approach cpg undirect graph gv e h contain inform data movement parallel program analysi creat analysi assign statement within loop refer least one array set v node repres distribut array dimens set e edg repres data movement constraint set h hyperedg repres parallel constraint edg hyperedg label symbol inform later use obtain weight follow particular cost model program initi decompos comput intens code block name phase phase static data map strategi realign redistribut action occur phase approach adopt follow definit phase made phase loop nest induct variabl occur subscript posit array refer loop bodi phase contain surround loop defin induct variabl oper definit allow overlap nest phase node node g organ column column v g associ array phase one array use sever phase column phase array appear column contain mani node maxim dimension array program v j denot j fdg th dimens array i thu node repres distribut array dimens one array dimension d array embed onto ddimension templat case addit node d gamma dimens use repres data map array distribut edg edg g reflect possibl align choic pair array dimens edg connect dimens differ array edg connect dimens j array hyperedg gener edg connect two node dimens j array say edg repres effect term data movement align distribut dimens phase p program data movement inform obtain perform analysi refer pattern pair array within scope p refer pattern defin repres collect depend array side assign statement refer pattern theta edg ad connect node v node v set edg repres behavior align altern dimens array selfrefer pattern selfedg ad v one node edg label data movement primit repres type data movement perform correspond array dimens distribut data movement primit consid framework includ to ton nto nton primit defin data movement one processor anoth processor shift copi similarli ton primit defin data movement one processor sever processor broadcast nto primit defin data movement sever processor one processor reduct final nton primit defin data movement sever processor sever processor multicast remap inform impact data movement includ g term data movement edg phase data flow analysi detect whether array phase p name use later phase say p case theta edg ad connect node column associ array phase p one associ array phase p label assign edg repres data movement perform a remap correspond dimens distribut dynam model describ control flow statement phase consid perform data flow analysi entri exit point condit iter statement modifi execut flow program therefor caus sequenc phase program differ lexicograph order control flow analysi use weight cost as explain cost model remap edg set analysi describ hyperedg hyperedg g reflect opportun parallel candid parallel loop k hyperedg h k g connect array dimens distribut loop parallel distribut memori machin loop fulli parallel carri data flow depend datadepend analysi detect set loop candid parallel accord ownercomput rule processor own datum respons perform comput updat it therefor candid parallel loop parallel lefthand side array dimens insid loop subscript loop control variabl distribut mean hyperedg h k link node v j that array updat loop bodi enclos loop k ie appear lefthand side assign statement induct variabl loop k use subscript express dimens j case hyperedg h k label inform associ correspond candid parallel loop cyclic inform cyclic distribut use balanc comput load triangular iter space howev neighbor commun pattern appear code cyclic distribut incur excess data movement framework assum block distribut default mean edg hyperedg label cpg assign assum block distribut howev code contain triangular loop contain neighbor commun cyclic distribut assum mean label cpg assign assum cyclic distribut event conflict altern consid duplic cpg label first cpg copi assign assum block di tribut label second cpg copi assign assum cyclic distribut note cost model describ section differ accord whether distribut block cyclic case data movement edg connect cpg copi ad order allow array chang distribut pattern phase detail model fulli describ exampl figur show simpl code use work exampl throughout paper code consist two loop nest that follow assum definit phase identifi phase ai figur sampl code maximum dimension array code therefor column remap phase phase loop j loop remap figur cpg sampl code g two node first phase four column say correspond array a b c d similarli second phase three column say correspond array c d e seen figur note although array e onedimension correspond column v two node first assign statement first phase one refer pattern array b identifi refer pattern indic first dimens array distribut data movement need each processor send last row follow processor howev second dimens array distribut array access requir data movement addit first dimens array second dimens array b or vice versa align distribut nton data movement necessari thi transposit ie processor send block array processor similar analysi perform refer pattern phase program inform shown figur dot edg repres data movement remap edg connect use array differ phase instanc column figur repres array c differ phase edg connect dimens column mean distribut hold phase and therefor data movement requir edg connect differ dimens column repres effect chang distribut array ie remap final data depend analysi detect j loop first phase loop second phase candid parallel j loop parallel second dimens array a b distribut first phase therefor hyperedg connect node insert g label inform loop similarli hyperedg connect first dimens array c second phase insert case hyperedg label inform loop seen figur data map cpg cpg contain inform requir model estim perform effect program differ map strategi valid data map strategi onedimension case includ one node v j column v g set node determin array dimens j array distribut phase note select set node distribut align implicitli specifi perform effect select data map strategi estim set edg hyperedg remain insid select set node edg repres data movement action hyperedg repres loop effect parallel instanc figur show valid data map strategi second dimens array a b c align distribut first phase first dimens array c d e align distribut second phase effect data map strategi first phase nton data movement array c j loop parallel similarli second phase nton data movement array e loop parallel addit array c remap two phase remap phase phase i loop j loop remap figur valid dynam map cpg sampl code cost model order select appropri data map strategi cost function label edg hyperedg cpg replac constant weight note accuraci cost model orthogon issu respect framework present paper cpg could weight either simpl binari cost function cheap expens perform complex perform predict analysi perform estim machin depend therefor aim specif architectur framework configur file paramet target system number processor data movement latenc bandwidth parallel thread creation overhead addit cost model base profil inform provid array data size sequenti comput time loop cost assign data movement edg comput function number byte interchang remot memori access machin specif latenc bandwidth refer pattern match set predefin data movement routin defin routin consid framework introduc previou section to ton nto nton accord ownercomput rule processor own data lefthand side assign statement respons comput statement therefor data move nonloc data righthand side statement given data movement routin number processor distribut pattern block cyclic estim block size data move therefor data movement time hyperedg associ candid parallel loop weight comput time save loop effect parallel given sequenti comput time loop shape iter space number processor parallel thread creation overhead given distribut pattern time easili estim instanc order estim execut time first phase sampl code data map strategi illustr figur distribut second dimens array block fashion assum number element array dimens size bit float point per element sequenti comput time j loop time seq addit consid target system np processor data movement latenc lt second bandwidth bw bytessecond parallel thread creation overhead pt second nton data movement array c therefor block size bs data move comput in byte as size theta accord featur target system data movement time estim as second addit j loop phase parallel therefor comput time estim as total estim time is thu move time plu comp time note cost weight cpg express time unit uniform cost represent allow estim tradeoff data movement parallel gain estim cpg use main data structur either perform estim tool automat data map tool detail cost model found twodimension data map section describ extend cpg order support twodimension distribut believ scientif program restrict number distribut dimens singl array two lead loss effect parallel even higherdimension array show parallel dimens restrict number distribut dimens necessarili limit amount parallel exploit number avail processor n known compil time assum number power ie twodimension processor topolog defin grid n theta n processor data map strategi twodimension data map model distribut one two dimens array twodimension grid processor distribut may static dynam processor topolog may chang accord prefer program simplic explan initi assum n theta n processor topolog fix known compil time singl topolog although realist case allow us introduc gener case multipl processor topolog consid singl topolog first case assum processor topolog twodimension static known compil time therefor valid data map strategi twodimension data map case singl topolog distribut two dimens array fix n theta n grid processor end cpg made two undirect graph copi ident except weight first copi name g weight comput assum processor likewis second copi name g weight comput assum processor one g b copi for b f g therefor repres effect distribut array dimens b th dimens grid processor order distribut dimens j array across first dimens grid processor g node select g say v j altern distribut dimens j array across second dimens grid processor g node v j select g say v j allow array dimens map dimens grid processor accord model valid data map strategi twodimension distribut singl topolog problem contain one node v b j column v b copi addit restrict one dimens j select v differ dimens j select v data movement parallel effect select twodimension data map strategi estim set edg hyperedg remain insid select set node figur exampl valid data map first dimens array distribut along first dimens n theta n grid processor second dimens array distribut along second dimens grid processor accord data map note j loop first phase parallel n processor loop second phase parallel n processor note also onedimension array e distribut along first dimens grid processor reason replic consid framework ton data movement satisfi assign statement array e array second phase loop loop j figur solut twodimension cpg n theta n topolog cost function twodimension model modifi respect onedimension case data movement cost cpg copi estim assum two array dimens distribut order estim comput time nest loop edg connect cpg copi insert modif fulli describ multipl topolog order consid twodimension topolog model idea build cpg mani twodimension g copi topolog may consid symbol inform contain copi ident weight comput accord number processor assum correspond topolog regular onedimension data map model twodimension n theta grid processor assum g ab graph copi correspond b th dimens th topolog valid data map strategi gener twodimension distribut problem select one node v ab j column v ab g ab copi within singl twodimension topolog previou model dimens j select v differ dimens j select v j topolog select one phase array phase howev topolog may chang phase necessari one chang distribut topolog array requir redistribut therefor addit data movement edg insert cpg allow kind remap estim effect correspond data movement primit current implement limit two differ topolog onedimension n theta topolog squar twodimension n theta n topolog odd number n set theta n extens two topolog straightforward detail found instanc figur contain valid gener twodimension data map strategi case second dimens array phase p align distribut onedimension grid processor n processor array c redistribut first dimens array phase p align distribut first dimens n theta n grid processor second dimens array align distribut second dimens twodimension grid processor note node select phase p belong singl topolog copi the onedimension topolog node select phase p belong anoth topolog copi the twodimension one mean distribut first phase onedimension distribut second phase twodimension loop j g proc loop g g phase figur valid solut gener twodimension cpg minim cost path problem formul given valid data map strategi summat weight edg remain insid select set node data movement time estim summat weight hyperedg remain insid select set node estim comput time save due parallel total execut time parallel program estim sequenti execut time plu data movement time minu comput time save due parallel optim data map strategi problem minim estim parallel execut time order find optim data map strategi accord model translat data map problem minim cost path problem constraint ad guarante valid solut section describ formul data map problem minim cost path problem set addit constraint guarante valid solut linear program lp provid set techniqu studi optim problem object function constraint linear function optim involv maxim minim function usual mani variabl subject set inequ equal constraint linear pure integ program problem lp variabl subject integr restrict addit sever model integ variabl use repres binari choic therefor constrain equal case model said linear program problem framework model whole data map problem linear integ program problem integ variabl associ edg hyperedg final valu binari variabl indic whether correspond edg hyperedg belong optim solut object function minim specifi estim execut time parallel version origin program problem pure minim cost path problem sever addit restrict ad path select variabl assum g ab graph copi correspond b th dimens th topol ogi let e ab pq denot set variabl g ab associ edg connect node column p node column q note accord current implement g set e ab pq contain theta element let e ab pq i j variabl g ab associ edg connect node column p node j column q valu one correspond edg belong path zero otherwis note that graph undirect e ab pq i j equival e ab qp j i redistribut edg behav like regular data movement edg howev connect differ g ab copi set integ variabl associ redistribut edg call r simplic notat subscript therefor let r ab pq i j variabl associ redistribut edg connect node column p g ab node j column q g b denot altern topolog final index k assign hyperedg h ab k denot integ variabl g ab associ k th hyperedg similarli valu one node link belong path zero otherwis model assum ddimension data map problem differ topolog dimension d valid solut problem includ node array one column restrict node select within phase belong singl topolog point note g go detail linear integ program model ffl pair edg connect two node replac singl edg weight equal addit weight origin one ffl path pair column g set column connect set analyz independ assign differ data distribut strategi order guarante valid solut minim cost path problem formul constraint specifi constraint organ follow set solut set path node select path distinct path within singl phase select node differ dimens singl topolog path visit one node column connect select node includ solut connect select node includ solut set constraint c guarante path g copi connect thu column q connect one column p r one edg lead node q select set e ab pq or set r b pq exist one edg leav node must select set e ab qr or set r ab qr exist term variabl valu state g ab copi node column q connect one column p r sum valu variabl associ edg connect node column p must equal sum valu variabl associ edg connect node column r e ab e ab set constraint c guarante path node common word array dimens distribut onc achiev ensur number select edg connect node g ab copi column lower equal one term variabl valu node column p connect anoth column q e ab r ab pq summat valu variabl associ edg connect node column q g ab copi lower equal onex e ab set constraint c forc select path belong differ dimens topolog model topolog a ensur number select edg one dimens b topolog equal number select edg altern dimens b topolog term variabl valu set edg e ab pq topolog a summat valu variabl associ edg g ab must equal summat valu variabl associ edg g ab e ab e ab set constraint c c specifi togeth model forc one edg select dimens singl topolog state term variabl valu assum summat set edg e ab pq r ab pq equal one dimens b topolog ax e ab final set constraint c ensur one hyperedg select node connect select accord model node column p select g ab one edg e ab pq i j r ab pq i j connect column q select assum hyperedg h ab connect n node g ab say node column respect state term variabl valu that must accomplish hyperedg k g ab copi exampl instanc assum first phase onedimension cpg shown figur four column say in figur a b c respect three set connect column addit one hyperedg say onedimension case b equal and therefor redistribut edg cpg copi requir set constraint c guarante path cpg connect column c connect one column one constraint ad column set constraint c c guarante compat differ path multidimension cpg therefor necessari exampl set constraint c c specifi togeth forc select one edg set edg set constraint c ensur correct select hyperedg note graph undirect third constraint could also specifi as experiment result sever experi perform order valid differ aspect framework first all show complex term comput time spent find optim solut set program differ benchmark suit secondli accuraci predict illustr demonstr valid model complex approach program select evalu complex model altern direct implicit adi integr kernel erlebach program develop thoma eidson icas program shallow tomcatv x xhpf benchmark set routin rh appsp na benchmark set purpos evalu program erlebach shallow baro inlin ie call replac actual code routin rh transform singl program tabl includ inform number code line total number loop number loop candid parallel number phase program number differ array dimension number differ refer pattern array characterist paramet determin complex final optim problem tabl show number integ variabl number constraint requir accord model describ section formul minim cost path problem onedimension data map last column show total cpu time in second requir find optim solut cpu time obtain use sun ultrasparc model built assum multiprocessor system xhpf avail anonym ftp ftpinfomallorg directori tenantsapribenchmark program line loop paral phase array dim patt rh tomcatv baro shallow tabl characterist select program processor bandwidth mbyte per second program edg hyper constr time erlebach rh baro shallow tabl characterist onedimension model timeconsum applic baro second shallow er lebach x need second respect program need half second optim twodimension data map problem assum singl topolog number cpg copi duplic well number integ variabl howev number constraint requir model problem doubl addit constraint ad relat two cpg copi tabl show number edg hyperedg constraint total comput time spent find optim solut program baro erlebach requir two minut reach solut shallow x rh requir second tomcatv adi need two one second respect program edg hyper constr time erlebach rh tomcatv baro shallow tabl characterist twodimension model constant topolog final tabl number edg hyperedg constraint gener twodimension model shown togeth comput time requir find optim solut program edg hyper constr time erlebach rh x baro shallow tabl characterist gener twodimension model select program model structur minim cost path problem harder solv program baro requir almost two hour program erlebach x shallow need half hour one hour program rh need minut program requir second discuss accord experi second requir solv onedimension data map problem howev twodimension case comput time requir greater note decid align distribut parallel loop dynam chang strategi phase routin program togeth step number data map candid consid becom baro number candid erlebach becom although longest comput time requir find optim data map observ two hour must consid tool provid optim solut therefor comput time invest consid paid within program run order reduc comput time note longest time usual program inlin ie program baro shallow erlebach complex inlin program becom greater routin consid togeth analyz routin program isol one routin program baro requir two minut routin need less half minut analysi routin program shallow requir second routin program erlebach need less one half minut result encourag us consid interprocedur analysi way reduc current complex final also observ linear integ program solver tend find optim solut least nearoptim solut begin search although requir mani iter explor whole search space number iter perform solver provid user paramet limit search space obtain suboptim solut baro erlebach x shallow less minut estim perform solut higher optim estim perform accuraci predict order test accuraci predict given model solut predict compar actual execut parallel program silicon graphic origin processor origin cachecoher nonuniform memori access multiprocessor physic distribut memori high capac mbyte cach memori processor distribut array across cach cach might act first level distribut memori case cach memori access higher latenc program select experi adi integr kernel erlebach program shallow benchmark routin rh befor purpos evalu program erlebach shallow inlin routin rh transform program profil inform obtain execut sequenti code singl processor origin system predict assum bandwidth mbyte per second perform sever experi tri differ data map strategi chang number processor framework implement part anoth automat data distribut tool ddt gener file linear integ program problem input gener purpos solver output solver manual gener parallel code order control schedul loop iter accord ownercomput rule stripmin distribut loop detail loop transform found parallel code compil use nativ mipspro f compil compil parallel optim disabl avoid chang parallel strategi order gener model data movement cost estim assum cach effect ie data transfer cach line first experi compar optim solut suggest tool set select program actual execut origin system tri differ data map strategi differ number processor program experi intend show propos solut actual yield best result among execut strategi predict close actual measur execut adi program defin twodimension data space consist sequenc initi loop follow iter loop with phase perform com putat loop iter forward backward sweep along row column done sequenc solut suggest tool dynam onedimension data map distribut array row first comput flow column second comput flow result predict parallel time optim solut use processor seen dot line figur solid line show measur execut time static onedimension row column distribut dynam onedimension strategi predict parallel time perform use profil sequenti execut time second time figur express second note predict within actual measur execut time dynam strategi except execut processor code fall fals share array distribut row number processor execut time measur st dim measur nd dim measur dynam predict figur predict measur execut time adi erlebach program tridiagon solver base adi integr kernel inlin program consist phase perform symmetr forward backward comput along dimens four main threedimension array author point best perform achiev program obtain static twodimension distribut pipelin comput howev pipelin comput consid model therefor parallel strategi suggest tool distribut third dimens array first second comput flow redistribut third comput flow leav second dimens array distribut dot line figur show predict parallel time use processor predict parallel time problem size theta theta perform use profil sequenti execut time second solid line show measur parallel time static distribut first second third dimens dynam parallel strategi note actual measur execut time dynam strategi within predict time number processor execut time sec measur st dim measur nd dim measur rd dim measur dynam predict figur predict measur execut time erlebach shallow water equat model defin set theta size array inlin program consist phase within iter loop ncycl iter optim data map strategi suggest tool static onedimension column distribut array result predict parallel time optim data distribut strategi seen figur togeth measur parallel time static row column data distribut predict parallel time comput use profil sequenti execut time second note predict time exampl within actual measur execut time although execut obtain similar perform number processor execut time measur st dim measur nd dim predict figur predict measur execut time shallow rh routin defin set theta theta theta fourdimension array consist four phase loop perform flux differ second third fourth di rection solut suggest tool dynam onedimension data map array distribut fourth dimens first three phase third dimens fourth phase predict parallel time optim solut togeth measur time static distribut second third fourth dimens dynam strategi shown figur predict parallel time comput use profil sequenti execut time second last experi forc tool gener fix strategi adi code order analyz perform predict differ data distribut strategi tabl predict measur execut time in second sever strategi list row col correspond static onedimension row column number processor execut time sec measur nd dim measur rd dim measur th dim measur dynam predict figur predict measur execut time rh distribut respect dyn dynam onedimension strategi d squar static twodimension data distribut strategi implement predict execut differ number processor rang predict row measur predict col measur predict dyn measur predict measur tabl comparison measur predict execut time row column dynam twodimension data map adi code predict perform use profil sequenti time adi code second note predict data map strategi within actual measur parallel execut time except code fall fals share fals share occur execut processor array distribut row one conclus automat data distribut tool context distribut memori multiprocessor system usual decompos parallel problem three independ step align distribut remap howev step realli independ addit algorithm use solv step base heurist work present paper repres first automat data map parallel prototyp provid optim solut accord cost compil model contribut propos respect previou work are ffl definit model repres whole data map problem allow align distribut remap problem solv within singl step ffl formul minim cost path problem provid solut model use linear integ program techniqu guarante solut provid optim framework base definit singl data structur name communicationparallel graph cpg integr data movement parallel relat inform inher phase program plu addit inform denot remap possibl them data map consid framework one twodimension static dynam block cyclic take account effect control flow statement phase cost model base profil inform obtain previou serial execut experi show cost model fairli accur usual within predict perform differ data map strategi addit shown complex approach term comput time spent find optim dimension row distribut dynam distribut phase array distribut row solut although onedimension case time requir find optim solut benchmark set matter second gener twodimension case time increas two hour trade qualiti solut comput time analysi howev shown time dramat reduc nearoptim solut accept case model succumb problem previou work sinc data map would miss search space summari integr suffici inform solv automat data map singl graph ambiti howev expens techniqu import tool appli select larg number addit aspect consid model definit order extend capabl framework consequ qualiti solut gener part futur work plan includ model inform reflect data movement optim detect elimin redund commun overlap commun comput inform estim cach effect data distribut addit thi develop interprocedur analysi modul may reduc comput time requir find optim solut set solut consid model current limit gener either parallel sequenti loop shown better solut obtain handl pipelin comput featur could model framework appropri weight hyperedg r automat comput data decomposit multiprocessor global optim parallel local scalabl parallel machin data distribut loop parallel sharedmemori multiprocessor tool techniqu automat data layout case studi static perform estim guid data partit decis alignmentdistribut graph array distribut dataparallel program toward compil support scalabl parallel use multipartit automat data decomposit messagepass machin automat data distribut massiv parallel processor dynam data distribut control flow analysi framework automat dynam data map automat data partit distribut memori multicomput program parallel automat data layout high perform fortran high perform fortran handbook automat data layout distribut memori machin optim nearoptim solut hard compil problem fortran red retarget environ automat data layout effici algorithm data distribut distribut memori parallel comput index domain align minim cost crossreferenc distribut array compil communicationeffici program massiv parallel machin john wiley automat select dynam partit scheme distributedmemori multicomput optim fortran compil distributedmemori machin tr ctr minyi guo yi pan zhen liu symbol commun set gener irregular parallel applic journal supercomput v n p juli skew data partit align techniqu compil program distribut memori multicomput journal supercomput v n p februari bjorn frank michael f p oboyl complet compil approach autoparallel c program multidsp system ieee transact parallel distribut system v n p march