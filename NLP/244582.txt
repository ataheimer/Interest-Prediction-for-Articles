t strict time lower bound optim schedul parallel prefix resourc constraint a abstractprefix comput basic oper core mani import applic eg grand challeng problem circuit design digit signal process graph optim comput geometri paper present new strict timeoptim parallel schedul prefix comput resourc constraint concurrentreadexclusivewrit crew parallel random access machin pram model prefix n element p processor p independ n n pp deriv harmon schedul achiev strict optim time step leftlceil left n right mathordleft vphantom left n right left p right right kernnulldelimiterspac left p right rightrceil also deriv pipelin schedul better programspac effici harmon schedul yet requir small constant number step optim time achiev harmon schedul harmon schedul pipelin schedul simpl easi implement prefix n element p processor p independ n npp harmon schedul timeoptim case establish optim method determin key paramet timeoptim schedul base connect structur parallel prefix pascal triangl use deriv paramet devis algorithm construct schedul restrict class valu n p prove construct schedul strictli timeoptim also give strong empir evid algorithm construct strict timeoptim schedul case npp b introduct given comput evalu ffi associ oper ffi prefix sum or firstord linear recurr coeffici special case prefix comput state simpl loop refer problem interchang recurr prefix sum prefix comput sinc result prefix sum readili appli prefix comput associ oper prefix comput fundament oper core mani key applic grand challeng problem circuit design digit signal process graph optim comput geometri addit also import tool loop parallel tradit automat loop parallel techniqu respect loopcarri depend thu unabl gener scalabl parallel code loop contain loopcarri depend understand parallel loop loopcarri depend beyond techniqu essenti understand simplest case loop loopcarri depend name prefix sum optim schedul techniqu use deriv paper could appliedwith extens parallel mani sequenti algorithm contain loop carri depend sinc practic applic amount resourc ie function unit processor fix priori independ problem size desir devis scheme perform prefix comput optim time given set resourc constraint sinc interest extend techniqu handl gener form loop loopcarri true depend also concern properti optim schedul clariti simplic implement extend prefix n element p processor p independ n n pp deriv harmon schedul achiev strict optim time step e also deriv pipelin schedul better programspac effici harmon schedul yet take small constant number step optim time achiev harmon schedul harmon schedul pipelin schedul simpl thu easi implement prefix n element p processor p independ n n pp exist kind structur parallel prefix comput n pp establish optim method determin key paramet timeoptim schedul base connect structur parallel prefix pascal triangl use paramet devis algorithm construct schedul restrict class case term n p deriv strict timeoptim schedul subject optim condit case give strong empir evid algorithm construct strict timeoptim schedul conjectur schedul n pp achiev strict optim time paper organ follow section present assumpt definit section review relat work section present harmon schedul n pp show strict time optim harmon schedul properti section give pipelin schedul section establish optim method determin key paramet timeoptim schedul n pp give algorithm construct schedul n pp strict timeoptim schedul within optim restrict class case term n p provid strong empir evid algorithm construct strict timeoptim schedul case result assum parallel random access machin pram concurrentreadconcurrentread crew model analysi pram consist p autonom processor execut synchron access global share memori processor comput oper one time step or unit schedul timeoptim term number parallel time step result comput crew model multipl processor may read simultan memori locat ie broadcast data exclus access requir write memori locat facilit studi comput complex comparison previou work area previou result pram crew assum memori access data transfer commun take zero time step defin term frequent use paper schedul use perform comput denot time ie number time step run schedul machin p a p unambigu p refer number processor machin refer p interchang time time step step time comput sequenti denot a speedup machin p processor uniprocessor schedul a denot simpli unambigu let p number oper execut comput use p processor defin oper redund r sinc oper assum take one time step each number oper sequenti program defin run time final defin util u maximum number oper p processor perform p step three type datadepend defin literatur purpos need concern true flow depend defin follow oper use result anoth oper said true flow depend simpli depend unambigu loopcarri depend type true depend loop oper iter use valu produc previou iter depend oper repres direct arc depend graph consist set node repres oper input valu depend arc connect them binari depend graph depend graph oper take two operand operand may either input valu valu output oper depend graph prefix comput schedul use treeheight reduct thr refer thr graph final valu prefix sum valu comput definit prefix sum final oper prefix sum oper assign final valu redund oper or auxiliari intermedi oper oper comput auxiliari valu effort speed final valu comput redund valu or auxiliari intermedi valu refer auxiliari valu comput redund oper figur show depend graph sequenti schedul parallel schedul prefix comput eight input illustr two graph node final oper top fring node redund oper inner one identifi squar insid node given valu one without incom arc place bottom note depend graph sequenti schedul prefix sum tree one parallel schedul not defin j particular ah prefix sum first j element note distinguish algorithm schedul our algorithm use produc schedulefor given prefix comput which run pram execut actual prefix comput relat work result parallel prefix comput divid two categori resourc constraint usual number processor p function problem size n resourc constraint p independ n comprehens survey parallel comput use prefix problem given special form prefix circuit previous known ofman earli whose carri circuit form carri circuit later discuss ladner fischer muraoka show simplest linear recurr comput log n n processor use name treeheight reduct techniqu kogg stone recurs doubl firstord linear recurr essenti equival treeheight reduct appli prefix problem chen kuck show linear recurr comput log n p n ladner fischer found class circuit prefix size assum enough processor avail unlimit resourc fich gave upper bound lower bound circuit size ie number gate oper prefix circuit n input depth log n d dlog ne extra depth case unbound bound fanout fich construct circuit use complex recurs procedur ladner fischer unbound fanout lower bound prefix circuit input n upper bound fanout bound f also obtain final lower bound fanout two k bilgori gajski gave differ algorithm gener suffixth term use solut minimum cost given length n depth d initi valu avail e fanout f cost defin minimum number oper node along pair correspond input output lower bound cost therefor maximum number node path input correspond output instead circuit size chose cost measur fit better consider silicon layout cole vishkin gave algorithm solv prefix sum problem olog n log log n use log log n log n processor provid ai repres olog n bit differ problem address resourc constraint wellknown algorithm describ comput prefix problem np log p time given p processor algorithm divid problem p partit conquer local comput partit one processor combin result algorithm take npp step optim time snir gave algorithm dynam construct parallel prefix circuit fix number processor crew machin depth result circuit p processor np o close strict timeoptim depth given problem size n snir algorithm work find right partit problem minim depth result schedul must recomput partit time new n given overhead associ problem size n either compil time run time n known run time frequent is overhead incur find right partit impact perform parallel prefix comput also studi erew pram model kruskal rudolph snir shown prefix n element comput use p processor np step egecioglu koc studi tradeoff parallel arithmet step requir perform associ oper parallel rout step requir transfer operand one processor anoth prefix comput present prefix algorithm use p rout step harmon schedul x x x sequenti full thr i in i figur sequenti schedul vs full treeheight reduct thr prefix sum given prefix problem size n shown figur number oper sequenti schedul cannot reduc definit requir output left draw figur give comput tree sequenti schedul prefix sum size tree height ie depend distanc critic path tree sequenti schedul equal n gamma minimum number time step comput problem sequenti way parallel comput use associ oper reduc tree height time draw right figur give full treeheight reduct thr schedul prefix sum size shown use associ comput redund valu ahead final valu comput comput multipl final valu parallel thu trade multipl processor redund oper speedup parallel speed prefix schedul thought measur by averag number final valu produc step given fix number processor want introduc mani redund oper reduc averag number result produc per step exampl fix number processor full thr shown figur slow comput farther away optim problem size n increas order produc mani final result possibl given fix number processor schedul redund oper possibl howev one cannot reduc number redund oper certain threshold would leav processor idl slow comput exampl remov redund oper schedul would degener sequenti schedul shown figur one processor would stay idl therefor fastest parallel schedul fix number processor would use minimum number redund oper simultan achiev full processor util idea harmon schedul remaind section describ detail deriv properti harmon schedul shall prove next section harmon schedul inde timeoptim exampl figur illustr iter harmon schedul processor node top fring figur repres final valu prefix comput final oper inner node repres redund valu comput redund oper bottom end vertic line repres given element prefix sum first step iter one final oper oper second step two final oper redund oper kth step k final oper redund oper step one final oper one fewer redund oper immedi preced step p processor full util p step iter ieloop bodi final redund comput meet end iter end iter redund valu use comput final valu anoth nice properti number oper iter sum final oper redund oper sp henc call schedul harmon schedul number correspond step loop bodi comput redund oper top node final valu comput final oper inner node output redund valu figur iter schedul h processor schedul harmon schedul let multipl sp all case discuss shortli harmon schedul comput prefix sum n element p processor denot h decrib below recal ahi ji repres partial sum element ai throught aj refer section translat schedul one use array an gamma straightforwardli shown figur i k f li gthe inner loop k harmon schedul consist p iter iter inner loop execut singl parallel step parallel step consist p oper shown inner loop bodi execut p processor parallel first group p gamma oper comput look ahead redund valu prefix valu second group k oper comput final valu refer inner loop period comput harmon schedul also easili verifi schedul h memori locat written multipl oper simultan schedul instanti given number processor compil neglig time note unlik runtim schedul overhead sinc full instanti schedul depend p depend n array subscript calcul instanti h schedul ie actual valu p becom simpl reduc addit use strength reduct step parallel processor ai ai ai figur instanti schedul h processor illustr instanti harmon schedul processor figur inner node height l figur comput oper lth step instanti schedul figur note oper step execut parallel use array store redund valu distinguish redund valu final valu given element size array reduc sp gamma sinc content produc iter use iter thu reus iter theorem prefix sum size processor harmon schedul comput given prefix sum comput final valu yield speedup p processor util u p proof prove correct harmon schedul suffic show produc correst result first period sp element plu start element sinc period ident comput structur note period harmon schedul correspond iter program templat observ harmon schedul comput prefix sum sp element p parallel time step follow schedul comput k th step use induct number parallel step assum end k th step first sk prefix sum ah i ah well avail end p th step harmon schedul comput number time step taken schedul h comput msp final valu iter determin follow number iter n elementsnumb time step per iter shown schedul h comput msp final valu multipl p step next show perform state theorem also true n pp subject ceil effect theorem extend harmon schedul schedul h extend comput prefix sum size n sp time e yield speedup proof previou theorem prove statement suffic show statement true n sp n msp proof proce two case case sp last q element call trail element final oper comput q trail element call trail final oper redund oper whose valu use trail final oper call trail redund oper without loss gener let us look exampl figur a m p new delay op step use delay slot step comput intermedi valu use idl slot step comput figur amort scheme extend schedul h odd p mp th step want comput p final oper p gamma redund oper it given redund tree height take exactli step comput solut m p comput intermedi valu use delay oper slot idl slot delay op step use idl slot step comput new figur amort scheme extend schedul h even p amort comput ie delay final oper step m use freed processor time slot comput redund tree incur q step comput delay oper idl processor slot step mp exampl figur redund tree use step comput step caus three final oper one step delay then three idl slot step use comput three delay oper step question whether feasibl amort scheme delay oper idl processor time slot ie whether alway enough delay oper match tail redund oper fashion note final oper iter delay oper depend them henc enough delay oper match trail redund oper similar fashion alway find feasibl amort scheme step mp m p gamma argument true odd p therefor extend schedul h comput prefix sum size n sp time processor case p even let n case amort scheme shown figur note even p height trail local tree turn bp subject number trail element odd p height local tree alway p subject number trail element rest proof similar case henc extend schedul h comput prefix sum size n sp time theorem construct extend part schedul h follow unwind last iter minimum number step number nonredundantli schedul element number redund tree schedul need least step complet nonredundantli schedul element redundantli schedul element redund tree redund tree redund tree figur redund tree redundantli schedul element nonredundantli schedul element schedul unextend schedul h use amort scheme delay oper last iter idl processor slot q step thu obtain gener extend schedul h epilogu handl length trail step q p note although precis q depend n gener extend schedul h precomput instal librari routin q known run time correspond epilogu chosen run optim harmon schedul section show schedul h comput strict optim time step prefix sum size n sp processor lemma present lower bound time parallel schedul p processor lemma show schedul r a r h p a h given number processor p theorem prove optim schedul h consid element given prefix problem store array a call element array redundantli schedul element use redund oper otherwis call nonredundantli schedul element nonredundantli schedul element particip redund oper directli use final oper ie direct arc nonredundantli schedul element final oper figur element nonredundantli schedul element redundantli schedul set redund oper said form redund comput cluster redund cluster short iff depend oper form connect graph remov final oper depend graph use result produc redund oper without consid directed result graph redund cluster provid redund lookahead valu use final oper parallel step schedul shown figur note depend graph redund cluster schedul restrict tree nonleaf node redund cluster redund valu produc redund oper cluster leav redund cluster redundantli schedul element cluster redund cluster cover redundantli schedul element leav ie use comput redund valu lemma schedul comput prefix sum number nonredundantli schedul element number redund cluster proof singl parallel step one nonredundantli schedul element alon redund valu one redund cluster alon use comput final valu particular schedul prefix sum redund cluster take least completelemma parallel schedul prefix sum size n number redundantli schedul element smaller equal sum number redund oper number redund cluster ie number redundantli schedul element a r anumb redund cluster proof redund cluster c r c redund oper use h redundantli schedul element array least c number redund cluster schedul a note also redund cluster disconnect ie depend pair redund cluster thu number redundantli schedul element number redundantli schedul element redund cluster c j r anumb redund cluster alemma prefix sum size multipl p schedul r a r h tp a schedul comput given prefix fewer step schedul h proof lemma the number nonredundantli schedul element array sizegammanumb redundantli schedul element anumb redund cluster a lemma number redund cluster number nonredundantli schedul element gamma number redund cluster anumb redund cluster a r theorem p r two statement given r a r h r tt time step p number processor n array size figur maximum size n prefix sum done time use p processor theorem optim schedul h given p processor prefix problem size schedul must time proof number final oper schedul comput prefix sum size n n gamma henc suffic show schedul redund oper h cannot comput prefix size n fewer step h schedul redund oper h cannot comput prefix size n fewer step h statement true schedul h maximum possibl processor util p step schedul redund oper h step produc fewer final result h regardless redund oper arrang assum fulli util p processor statement hold lemma corollari optim extend schedul h given p processor prefix problem size strict optim time p proof theorem prove statement multipl sp multipl sp theorem state schedul h achiev time p e amort scheme optim time shown similar way proof theorem corollari ratio timeoptim schedul prefix sum ratio final redund oper p multipl p proof follow theorem theorem corollari use deriv simpler concis programspac effici optim schedul illustr figur show maximum size n prefix sum comput time processor number diagon equal sp start number diagon p larger preced number diagon impli optimalitygiven one step p final valu comput row odd p start increas p increas one row even p start increas one n increas turn bp e n increas averag p pipelin schedul schedul h strict timeoptim prefix sum size n sp schedul p iter inner loop bodi wonder whether simpler shorter schedul compar perform exist corollari ratio final redund oper optim schedul p h achiev ratio everi iter p step schedul achiev ratio fewer step p smaller loop bodi h still optim appli idea softwar pipelin inde deriv simpler concis programspac effici schedul h call pipelin schedul schedul p schedul p loop bodi singl parallel step p final p gamma redund oper yield speedup schedul h except small constant number step startup odd p achiev ratio p singl parallel step even p amort need achiev ratio remaind section give complet schedul p odd number processor p schedul p even number processor p deriv similarli prefix sum size n comput pipelin schedul odd number processor p first p step schedul set actual iter iter step comput final valuesus preced final valu previous comput redund valu redund valu futur iter array subscript instanti schedul p simplifi compil time p given note oper loop bodi singl step thu execut parallel schedul the pipelin schedulep step parallel p processor forin iter p final valu array comput first p express p valu comput last p comparison schedul h schedul p choos proper epilogu either compil run time also schedul p may extend handl loop multipl statement easili schedul h initi step iter step figur pipelin schedul iter step initi step figur pipelin schedul exampl let us instanti schedul p schedul given illustr figur oper step done parallel one processor step step parallel p processor figur illustr schedul deriv gener schedul obtain even number processor p amort schedul odd iter comput bpc final dp gamma e redund oper even iter comput dp final bp gamma c redund oper theorem prefix sum size n comput schedul p p processor time dnp schedul p speedup util u infin proof proof straightforward formul strict timeoptim schedul deriv strict timeoptim schedul prefix sum size n sp schedul n sp use parallel loop contain loopcarri depend schedul n sp equal use design highspe circuit section present new formul find strict timeoptim schedul term combinatori optim unifi singl framework optim schedul prefix problem n sp sp thu new approach yield gener scheme optim schedul prefix sum n p establish connect structur prefix comput pascal triangl thu formul problem find strict timeoptim schedul solv system inequ base algorithm construct optim schedul deriv first give intuit solut character differ cost final result full thr graph final find minimum cost produc n final result p processor particular form foundat algorithm present next section build timeoptim schedul prefix problem size n p processor next section strict time lower bound n sp schedul a given n sp p find optim p equival find maximum size n prefix sum comput p step shall find optim schedul n sp follow line think lemma optim schedul step cluster thu processor optim schedul must comput maximum number final valu cluster way make redund cluster produc within maximum allow height mani redund result possibl use comput final result is want make redund cluster cover mani element array possibl within maximum allow height maximum allow height redund cluster determin rel posit cluster among redund cluster nonredundantli schedul element graph redund cluster exce maximum allow height critic path comput lengthen neither height redund cluster lower would make redund cluster cover fewer origin element ie produc fewer final result could otherwis comput tree height k maximum number origin element cover k enough processor redund cluster schedul grow full binari depend graph schedul satur ie final result comput processor step basic idea tri achiev dual goal maximum util processor minimum number redund oper howev n sp harmon schedul section longer applic intuit enough prefix element make singl periodth minimum number prefix element make singl period spthe period length plu start element henc given regular pattern comput exist n sp difficulti lie determin mani redund oper use redund cluster organ dual goal accomplish definit node n binari depend graph said right depend node n iff n use second operand valu produc n given valu repres n node n said right depend figur rightdepend comput tree node n k distanc k iff exist distinct node n right depend k concept left depend left depend distanc k defin similarli notat cost vector let top fring oper comput graph height cost vector j rightdepend distanc oper aj m valu j cost vector equal number oper jth partial sum graph right depend on thu sum j s j m equal number oper whole graph shown figur cost vector graph from left right respect total number oper graph equal respect shall see soon depend graph construct cost vector determin theorem corollari character differ cost final valu full thr graph show relev properti help us minim total cost problem size number processor given theorem full graph height k number node top fring rightdepend distanc j proof prove theorem induct height k full graph base graph height one node top fring rightdepend distanc show one case facilit understand graph height two node top fring rightdepend distanc respect illustr figur left leaf graph height also node top fring rightdepend distanc root node top fring rightdepend distanc thu induct assumpt assum theorem hold show theorem hold intuit shown figur number node rightdepend distanc j top fring full graph height k sum number height k height k height height full graph full graph full graph full graph height k full graph figur number node top fring graph height k rightdepend distanc topfring oper node first subgraph height k rightdepend distanc j number topfring oper node second subgraph height k rightdepend distanc sinc new layer oper node top second subgraph height k preced argument induct assumpt corollari total number oper node top fring full graph height k k given n full graph height sum number oper node top fring rightdepend distanc j total number oper node top fring n full graph height equal n gamma proof claim true total number oper top fring full graph height k equal sum number oper top fring rightdepend distanc j ie sum g kj s k theorem note truth claim also found observ number array element cover full graph proof claim by requir claim by theorem g g g g g figur correspond theorem corollari pascal triangl follow claim sum g k figur show correspond theorem corollari pascal triangl corollari cost vector full thr graph let idimension vector element equal let dimc dimens vector c cost vector c k full graph height k determin recurs follow proof proof straightforward figur cost vector full graph height given follow recurs sequenc follow tri find minimum cost depend graph prefix size n p processor theorem give system inequ determin minimum time step requir comput prefix problem use p processor theorem lower bound time requir comput prefix problem size n processor determin use follow system inequ number topfring oper ie number final result rightdepend distanc k equal l k maximum rightdepend distanc use schedul proof theorem delta number oper ie number final result top fring graph rightdepend distanc iwhich seen cost i full graph height number final oper rightdepend distanc k full graph height goal choos use schedul final oper minimum sum cost ie right depend distanc simultan maxim util p processor solv first inequ k mean find minimum graph height minimum rightdepend distanc k given prefix comput time final oper rightdepend distanc k sinc number processor p involv first inequ may multipl pair solut t k ie pair k give minimum number oper use comput prefix respect particular number processor given number processor p uniqu pair k determin comput result given prefix minimum number oper second inequ use choos k respect p ie pair k choos enabl us construct schedul p processor maxim util second inequ equal number oper requir redund cluster height mean suffici mani processor slot step p processor comput oper requir cluster cover n prefix element pt gamma mean minimum number step produc final result p processor thu second inequ state lower bound time give suffici mani processor slot comput minimum number oper requir produc prefix result p processor solut inequ impli width schedul ensur timeoptim goal achiev minimum cost number oper maximum resourc util simultan width schedul prefix comput paper defin maximum number oper comput singl step schedul mani case width schedul must larger number resourc p order ensur exist legal schedul given resourc shown exampl restrict width schedul equal number processor p could way lead find strict timeoptim schedul schedul n sp theorem suggest construct schedul start full thr graph the minimum number smaller n cut expens column graph optim produc precis harmon schedul proven strictli timeoptim exampl illustr deriv n sp prove optim gener construct strict timeoptim schedul need prove legal schedul devis use optim n p n sp schedul strictli timeoptim show next section class n p n sp optim enabl us deriv legal schedul optim schedul follow theorem subject condit mention schedul deriv full thr graph cut expens column devis schedul n sp base theorem construct schedul comput prefix n element p processor use algorithm given below algorithm input prefix comput n element number processor p output depend graph make parallel schedul perform prefix comput construct schedul ppcn p f find min time min pn p find min cost vectort k l construct graphc tn gwe describ three procedur algorithm remaind section complet section exampl built depend graph parallel schedul given prefix complet alloc oper graph p processor shall discuss processor alloc end section procedur find min time input prefix size n number processor p output procedur find min time min pn p solv inequ theorem minimum time minimum number processor p requir maximum rightdepend distanc k result schedul number final result l rightdepend distanc k given p greater deriv p procedur complet result schedul construct use sinc remain processor would use achiev minimum time given p smaller deriv p procedur find min time pn p continu search minimum time n p procedur sped start better k one outer loop procedur optim omit favor readabl find min timen p f find min time min pn p find min time min pn p f for ffind p pt gamma p els return g g g find min time pn p f return t k lg gprocedur construct cost vector cut scheme procedur take input solut l procedur gener output cost vector comput graph evalu given prefix construct dimens result vector equal size n given prefix cost vector full graph deriv use techniqu given corollari construct cost vectort k l f deriv cost vector c full thr graph height remov c element greater k remov c l them equal k follow where group mean group consecut element equal k c point rightmost group let i remov last element group point to shift pointer group left point rightmost group leftmost group oper on ie pointer move clockwis circular fashion return result cost vector c gnote scheme choos c l element equal k chose use simpl scheme state step facilit understand cut scheme discuss procedur construct graph procedur establish depend arc node depend graph place matrix tn describ next matrix encod depend graph evalu given prefix problem size n p processor store oper graph theta n spars matrix tn call construct matrix graph organ use cost vector c follow element given prefix problem store th row tn j oper jth partial sum graph right depend on store jth column oper rightdepend distanc place ith four field associ oper oi j tn left sourc right sourc right dep distanc number depend field oi jleft sourc oi jright sourc point left right sourc node respect field oi jright dep distanc store rightdepend distanc node field oi jnumber depend number node node oi j depend on includ oi j itself construct oi jright dep distanc oi jright sourceright dep distanc column left sourcej gamma oi jright sourcenumb depend row left sourc column left sourc gamma d oi jleft sourc orow left sourc column left sourc jnumber depend sourcenumb depend oi jright sourcenumb depend gexampl find minimum time optim schedul prefix size processor procedur find min time min p determin result comput processor step ie depend graph height result rightdepend distanc procedur construct cost vector gener cost vector cost vector procedur construct graph construct schedul shown figur theorem fact valid schedul construct use cost vector schedul figur achiev strict optim time prefix size processorsexampl find minimum time optim schedul prefix size processor exampl show procedur produc full treeheightreduct schedul n power given enough processor procedur find min time min p determin result comput processor step ie depend graph height rightdepend distanc obtain full thr schedul height procedur construct cost vector gener cost vector c procedur construct graph construct schedul shown figur well known strict timeoptim schedul prefix processor cost vector figur optim schedul prefix input size p processor determin procedur cost vector figur procedur gener full treeheight reduct schedul find minimum time optim schedul prefix size processor exampl illustr procedur produc precis harmon schedul procedur find min time min p decid minimum time requir comput prefix sum step minimum number processor accomplish p find min time p therefor continu find minimum time requir comput prefix sum processor step is result comput processor step ie depend graph height result rightdepend distanc procedur construct cost vector gener cost vector construct graph creat precis comput graph harmon schedul one shown figur shown achiev strict optim time section algorithm construct depend graph comput prefix n element p processor now whether depend graph would make valid schedul depend sole exist legal processor alloc onto comput graph arbitrari n p n sp turn difficult prove exist sinc one would need character certain properti depend graph n p n sp abl character class depend graph show exist legal processor alloc them ie exist class strict timeoptim schedul becaus theorem time impli depend graph lower bound theorem column oper node m show that alloc exist ie strict timeoptim schedul n p found follow lemma say number processor slot ie number oper node depend graph alway multipl n lemma proof observ thu delta integ theorem prefix n element comput step p processor is class n p strict optim time step comput prefix n element p processor proof consid set column exactli s number s row set equal consid set column k s number s row set which correspond number oper node time step equal total number processor slot requir comput prefix lemma thu prefix n element comput step p processor sinc depend graph n p character theorem also construct use algorithm theorem on algorithm base strict optim time prefix size n p processor depend graph class n p theorem nice structur exactli p oper node time step thu p minimum number processor requir carri comput step gener valu n p n sp depend graph seem much less appar clean character class n p theorem thu exist legal processor alloc depend graph n p n sp consid theorem remain open strict timeoptim theorem subject optim condit impli theorem schedul n sp construct full thr graph cut expens column howev conjectur optim construct strictli timpoptim schedul n p n sp subject optim condit support fact algorithm construct precis harmon schedul proven strictli timeoptim prefix problem n sp construct strict timeoptim schedul use algorithm conclus present strictli timeoptim schedul parallel prefix comput resourc constraint divid parallel schedul prefix comput size n two area accord number processor p schedul n sp n sp prefix schedul n sp use parallel loop contain loopcarri depend schedul n sp equal use design highspe circuit prefix n element p processor p independ n n sp pp deriv harmon schedul show harmon schedul achiev strict optim time step dn gamma harmon schedul prefix comput also construct use algorithm e also deriv pipelin schedul optim schedul time take constant overhead dp gamma e time step strict optim time harmon schedul pipelin schedul express program templat parameter number processor p ie gener neglig time compil time p known harmon schedul pipelin schedul exhibit simpl nice pattern loop structur make easi implement main advantag pipelin schedul harmon schedul former singl parallel step loop bodi ie small program size prefix n element p processor p independ n n sp harmon schedul timeoptim n larg enough accommod repeat pattern n sp case establish optim method theorem determin key paramet timeoptim schedul base connect theorem corallari depend graph parallel prefix pascal triangl found use deriv paramet devis algorithm construct schedul restrict class case term n p prove construct schedul strictli timeoptim subject optim condit discuss end section also give strong empir evid conjectur algorithm construct strict timeoptim schedul case fact optim method also appli deriv strict timeoptim schedul shown exampl exist legal schedul n p n sp optim strict timeoptim schedul n p n sp remain open except open end conclud search strict optim time schedul achiev strict optim time parallel prefix comput resourc constraint crew pram model acknowledg author wish thank anonym review valuabl comment earlier draft paper r comput fluid dynam parallel processor compilersprincipl techniqu tool chapter automat program parallel a heurist suffix solut faster optim parallel prefix sum list rank parallel prefix comput processor chapter new bound parallel prefix circuit the power parallel prefix the structur comput comput a parallel algorithm effici solut gener class recurr equat parallel prefix comput parallel comput use prefix problem introduct parallel algorithm architectur arraystreeshypercub parallel exposur exploit program optim schedul parallel prefix comput bound resourc on algorithm complex discret function depthsiz tradeoff parallel prefix comput parallel program contain loopcarri depend resourc constraint tr ctr sukanya suranauwarat hideo taniguchi design implement initi evalu advanc knowledgebas process schedul acm sigop oper system review v n p octob yenchun lin chaocheng shih new class depthsiz optim parallel prefix circuit journal supercomput v n p juli armita peymandoust giovanni de mich symbol algebra time driven dataflow synthesi proceed ieeeacm intern confer computeraid design novemb san jose california yenchun lin yaohsien hsu chunkeng liu construct h fast depthsiz optim parallel prefix circuit journal supercomput v n p march yenchun lin jiannan chen z new depthsiz optim parallel prefix circuit small depth neural parallel scientif comput v n p septemb yenchun lin junwei hsiao new approach construct optim parallel prefix circuit small depth journal parallel distribut comput v n p januari jin hwan park h k dai reconfigur hardwar solut parallel prefix comput journal supercomput v n p januari yenchun lin chinyu su faster optim parallel prefix circuit new algorithm construct journal parallel distribut comput v n p decemb