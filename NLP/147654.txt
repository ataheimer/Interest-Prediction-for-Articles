t program verifi realtim system mean synchron dataflow languag lustr a benefit use synchron dataflow languag program critic realtim system investig benefit concern ergonomi sinc dataflow approach meet tradit descript tool use domain abil support formal design verif method shown use simpl exampl languag lustr associ verif tool lesar use design program specifi critic properti verifi properti languag lustr use alreadi discuss sever paper emphasi put program verif b introduct useless repeat realtim program among error dramat consequ thu program constitut domain special need rigor design method advoc languag approach problem argu program languag use direct influenc qualiti softwar sever point view i languag allow natur descript problem solv particular close tradit tool use applic field ii languag formal sound order support formal verif method iii languag simpl enough minim risk misunderstand program mean main goal design languag lustr meet criterion i start tradit descript tool use design process control system higher level tool consist mathemat formal differenti equat boolean lower level peopl often use dataflow net blockdiagram analog schema switch gate network two class tool close relat instanc work partial support esprit basic research action spec contract merlin gerin differenti equat finit differ equat boolean equat straightforwardli translat respect analog schema blockdiagram gate network least class high level tool also meet criterion ii sinc deriv mathemat languag author eg claim declar formal simpler cleaner usual imper languag assign sideeffect alias paramet pass mechan unnatur phenomena difficult understand manag agre claim therefor consid declar formal constitut good basi design program languag meet criterion iii lustr synchron dataflow languag initi inspir lucid lucid lustr variabl express consid repres sequenc valu take whole execut program lustr oper consid oper global sequenc synchron natur languag consist assum variabl express program take nth valu respect sequenc time concret program intend cyclic behavior execut cycl consist comput nth valu variabl express basic program set equat write equat xe x variabl e express mean sequenc valu associ x e ident it actual equat mathemat sens equival cycl program x e take valu time synchroni real time capabl languag deriv synchron interpret like synchron languag consid follow logic notion time soon specifi order simultan relat event occur insid outsid program express time constraint behavior program instanc constraint like ani occurr danger situat must follow emiss alarm within delay second express after occurr event danger situat must occurr event alarm nd next occurr event second exampl show that synchron program real physic time consid extern event here second privileg natur multiform time point view time may count second well meter sinc conceptu differ two follow requir train must stop within second train must stop within meter synchron languag constraint express similar way contrast languag like ada real time handl special statement lustr event model boolean variabl whose valu true whenev event occur synchron interpret abstract point view consid program reaction time neglig respect reaction time environ advantag abstract point concern semant clean fact reconcil concurr determin particular argu synchron languag particularli wellsuit program reactiv kernel realtim system complex system gener requir combin asynchron synchron modul claim therefor synchron languag gener purpos languag rather special tool design kernel one may wonder realism synchron hypothesi sinc assum machin instantli react input event fact assum reaction time short enough accur distinguish order incom event practic check measur maximum reaction time program synchron languag implement particularli effici measur way follow techniqu develop esterel two version lustr compil written use techniqu object code structur finit automaton transit correspond reaction program code correspond transit linear loopfre maxim execut time accur bound given machin therefor valid synchroni hypothesi check realtim issu synchron approach design verif perform reli check section briefli present languag whose use illustr section small exampl adapt actual subway devic specif verif remaind paper devot program verif said befor synchron approach limit time verif check valid synchroni hypothesi so kind verif mind similar standard verif transit system noth method model like eg take account program execut time alway assum zero synchron model moreov goal prove correct program respect complet specif rather express verifi critic properti instanc aircraft flight control system error speed comput slight cons quenc wherea critic undercarriag lock land claim critic properti usual simpl verifi mean avail automat techniqu main reason claim experi show properti safeti properti state given situat never occur given statement alway hold contrast live properti state given situat eventu occur futur instanc relev question train eventu stop never cross red light import remark proof techniqu safeti properti known much simpler live properti ffl safeti properti check program abstract intuit one simplifi given program p abstract program p more behavior p p satisfi safeti properti p abstract techniqu valuabl experi show consid critic properti seldom depend numer compil techniqu specif synchron languag sinc asynchron languag non determinist interleav asynchron action would involv immedi combinatori explos automaton size matter fact live properti often introduc abstract respons time constraint must taken fulli account realtim system relat comput often logic depend event proof often handl finit state abstract program ffl safeti properti check program state rather execut path approach propos verif problem amount prove program never output valu fals finit state case verif done simpl travers state graph without keep track path graph effici method propos travers ffl safeti properti modularli verifi process composit oper one easili associ oper that two process p p respect satisfi safeti properti oe oe composit verif problem decompos simpler one so ambit rather modest sinc restrict check safeti properti finit state abstract of program hope get effici tool tackl mani reallif case view discuss propos method specifi check simpl safeti properti lustr program section show take advantag declar natur lustr express properti languag shown safeti properti program express invari boolean lustr express due fact lustr view execut tempor logic concern ergonom obviou advantag use full program languag instead tempor logic particular user defin tempor oper thu reduc complex properti express moreov lustr provid mean express assumpt program environ ment essenti featur sinc interact realtim program environ particularli import gener properti realtim program intend hold assumpt behavior environ assumpt quit complex so verif process deal three entiti program properti express invari assumpt properti intend hold also express invari section illustr propos approach exampl verif sec tion perform finit state abstract program model behavior boolean variabl verif tool call lesar avail appli two verif techniqu ffl former exhaust enumer state abstract the program similar standard model check ffl later symbol construct set state satisfi properti analog symbol model check techniqu appli exampl introduc section final section outlin method modular verif take advantag fact program properti express languag use prove properti subprogram verif full program techniqu reduc complex verif power mechan macronot offer specif languag languag lustr give detail present languag lustr found elsewher recal element necessari understand paper lustr program specifi relat input output variabl variabl express intend function time time assimil set natur number variabl defin mean equat one one equat variabl input said befor equat xe e lustr express specifi variabl x alway equal e express made variabl identifi constant consid constant function usual arithmet boolean condit oper consid pointwis appli func tion two specif oper previou oper followedbi oper ffl e express denot function nen pree express denot function n nil nil undefin valu two express type respect denot function nen nfn e f express denot function n addit equat lustr program contain assert form assert e e boolean express mean e assum alway true execut program instanc assert noton off express input event never occur time assert introduc order express known properti environ optim purpos play import role program verif lustr program structur node node subprogram specifi relat input output paramet relat express unord set equat assert possibl involv local variabl declar node may function use express basic oper instanc follow declar defin node gener usag return true whenev boolean paramet rais fals true node edgex bool return edg bool let prex tel now express edgenot c true whenev variabl c fall edg exampl program let us introduc exampl adapt subway devic end subway line special uturn section allow train switch one track other go back opposit direct see fig uturn section compos three track a b c switch s assum enter track exit track c train switch c must first wait connect b transit b wait connect c go back c consid sever train move along track switch safe devic two kind accid may occur within section ffl sever train allow access section togeth may collid ffl switch well posit train derail therefor clear control uturn section highli critic task automat uturn section manag system later call um must drive switch manag train movement along section avoid accid system typic reactiv upon receipt inform switch statu train posit insid section deliv posit request switch access grant train four kind event model follow signal ffl ack ab ack bc indic whether switch actual connect b b c none signal activ train must take switch ffl a b c three sensor one track section activ long train track observ ffl ab bc request switch connect b b c ffl grant access grant exit grant train move along section correspond traffic light first one allow train access section empti switch connect b second one allow train exit b switch connect b c overview system environ given fig let us implement um lustr sequel assum initi train section let us defin equat switch posit request switch request connect b time section empti connect b c time train arriv b request remain activ switch right posit lustr directli get equat figur subway uturn section ack ab ack b um c grant access grant exit ab figur um system environ ackab emptysect ackbc onlyonb here empti section state train section b state train section b equat variabl follow onb onc notona onc now write equat defin movement grant mention befor access section grant empti switch connect b therefor get follow equat emptysect ackab train grant exit section switch connect b c train section b so get final get whole lustr program um system shown fig simpl exampl intend show lustr wellsuit program system equat written program straightforwardli deduc inform specif uturn section fact equat written order encourag progress translat specif requir express turn possibl involv introduct auxiliari variabl notic introduc auxiliari variabl like empti section name express influenc program semant increas readabl node umson aon bon cack aback bc bool return grant accessgr exit abdo bc bool var empti section b bool let grant access empti section ack ab grant b ack bc ack ab empti section ack bc b empti section noton b c b b noton c tel figur lustr program um system express critic properti let us consid express critic properti program mani formal propos that inspir either tempor logic process algebra howev order reduc user effort look formal close possibl program languag so propos express properti invari boolean lustr express express properti p program pi write boolean express b p satisfi b alway true execut pi shown elsewher lustr view subset linear tempor logic safeti properti express way experi critic properti requir realtim system almost alway fall class matter fact nobodi care whether alarm eventu follow danger situat rather whether occur within given delay let us show use non trivial tempor oper express lustr node consid follow properti ani occurr critic situat caus alarm must sustain within five second delay properti relat three event occurr critic situat alarm deadlin gener pattern properti follow one ani occurr event must caus condit b true next occurr event c howev formul directli translat lustr refer happen futur follow occurr lustr allow refer past respect current instant first translat equival past ani time occur past either b continu true c occur least onc sinc last occurr a let us defin node take three boolean input paramet a b c return boolean output x x alway true properti hold node alwaysfromtobac bool return x bool let tel equat defin x use four auxiliari node ffl node impli implement ordinari logic implic node impliesa b bool return aimpliesb bool let b tel ffl node return valu fals first time input true return true ever node aftera bool return aftera bool let tel ffl node alway sinc two input return true first input continu true sinc last time second input true node alwayssinceba bool return alwaysbsincea bool let els aftera b prealwaysbsincea els true tel ffl final node sinc two input return true first input least true sinc last time second input true node oncesinceca bool return oncecsincea bool let els aftera c preoncecsincea els true tel node use exampl cours oper could defin way see critic properti exampl let us express lustr set safeti properti requir uturn manag system mention befor system must alway avoid occurr two danger situat first one concern train collis check train may enter section one empti lustr properti express invari boolean variabl collis defin follow equat defin grant access properti obvious true so assum train enter section track c possibl consid one train section time check train enter section track alway leav track c derail possibl lead verifi switch driven first clear switch posit request never activ time simpli express invari follow lustr express switch also connect b instant train allow enter section arriv track b lead follow properti similarli switch alway connect b c instant train allow leav section actual left it notic properti true train cannot leav section track a final global properti prove express follow lustr equat nocollis exclusivereq noderailab noderailbc model environ next step verif process consist run verif tool check whether safeti properti preserv um howev point import crucial task provid descript environ system behav actual environ obey rule restrict possibl behavior instanc uturn section train assum stop traffic light red verif tool would certainli achiev check system without awar inform therefor necessari defin assumpt behavior environ lustr done use assert mechan said befor lustr assert express boolean express assum alway true let us describ way import featur uturn section environ make follow assumpt ffl switch cannot connect b b c assert notackab ackbc ffl given posit switch remain stabl unless request move opposit posit assert alwaysfromtoackabackabdobc alwaysfromtoackbcackbcdoab train movement insid section make follow assumpt ffl initi train section assert emptysect true rememb empti section true equal empti section initi instant true forev assert restrict initi valu empti section train obey traffic light so train enter leav section correspond traffic light green instant befor therefor get use node edg defin section assert true impliesedgenot emptysect pre grantaccess assert true impliesedgeonc pre grantexit ffl train leav a b train leav b either c assert impliesedgenot onaonb assert impliesedgenot onb ona onc exampl experi show specifi environ behavior program requir import effort work undoubtli add complex verif task howev give precis specif assumpt made environ behavior certainli use task design critic system moreov notic assumpt dynam check execut program a compil option produc correspond code use also test phase choos valid testcas program verif consid verif problem given program pi properti p express boolean express b must invariantli true assumpt express assert a build new program pi put togeth pi comput b assert assert a consid result b output pi see fig problem thu reduc prove boolean output pi alway true execut program perman satisfi assert assert a assert ok figur build verif program verif perform finit state abstract program numer comput deliber ignor boolean express depend numer variabl eg comparison consid non determinist howev assert use restrict non determin instanc test condit xy yz xz appear program assert impliesxi yz xz prevent prover consid absurd case correspond xyz xz so consid pure boolean non determinist program pi approxim pi sens it behavior execut trace pi also execut trace pi therefor output pi alway true output pi notic that properti depend valu numer variabl tool may fail prove it now sinc pi contain boolean variabl repres finit state machin verif problem decid prove output alway true amount enumer finit set state check that state belong path start initi state assert alway true input vector output evalu true two verif engin implement integr verif tool call ffl first one explicitli enumer reachabl state done standard model check er main limit approach obvious number state consid present version tool deal program state reason time less hour ffl second engin proce symbol start boolean formula f character set state output true in lustr formula express properti iter comput sequenc f character set state belong f necessarili lead in one execut step f soon initi state satisfi f one conclud properti satisfi sinc exist execut path lead state output fals otherwis sinc state space finit sequenc formula converg finit number step formula f character set state possibl reach state violat properti tool perform comput formula use binari decis diagram bdd compact canon encod boolean formula approach sometim call symbol model check two approach complementari case enum method cheaper symbol one convers main limit enum method number reachabl state must consid wherea symbol method limit complex boolean formula the size bdd encod it now complex node um verifon aon bon c ack aback bc bool returnsproperti bool var grant accessgr exit bool abdo bc bool collisionexclus req bool derail abno derail bc bool empti section b bool let empti section noton b c b b noton c assert notack ab ack bc assert alway toack aback abdo bc alway toack bcack bcdo ab assert empti section true assert true impliesedgenot empti section pre grant access assert true impliesedgeon c pre grant exit assert impliesedgenot aon b assert impliesedgenot b c grant accessgr exitdo abdo umson aon bon cack aback bc exclus bc derail alway toack ab grant access b derail alway toack bc grant exit empti section collis exclus req derail ab derail bc tel figur verif program boolean formula relat number state character formula true repres billion state program provid lesar deal exampl list fig time in sec sun need prove properti separ global use method gather tabl below properti state enum symb collis exclus req derail ab derail properti cours exampl simpl result hardli meaning howev treat signific program particular experi driven deal real nuclear plant control system critic properti requir system express so safeti properti verifi use lesar spite fact exampl involv lot realvalu variabl matter fact variabl appear properti mean threshold comparison handl use assert modular verif fact program properti express languag togeth assert mechan provid also method modular verif inform given program pi compound n subprogram pi prove satisfi safeti properti p one prove pi satisfi safeti properti p prove combin p impli p formal note pi fact program pi satisfi safeti properti p jj denot parallel composit done lustr follow way let pi program use node pi fig a assum pi prove satisfi properti p express invari a b figur modular verif figur full subway track boolean express b now prove pi satisfi properti p one consid pi part environ pi replac assert b alway true fig b formal note b properti b alway true cours properti p which must found intuit may weak allow proof p decomposit may drastic reduc complex verif instanc prove properti um system could use verifi control whole subway track fig inform let linear trackx lustr program control singl track x umsxi control um input track x output track structur whole program would linear tracka jj um ac jj linear trackc jj um ca instead consid whole program one could tri verifi follow hope simpler one bxi denot boolean express prove invariantli true program umsxi moreov approach extend allow induct verif regular network ident process modular verif also allow verif partial develop program use approach slightli differ way verifi properti program pi write subprogram pi use specif pi conclus futur work tri highlight advantag use synchron dataflow languag design realtim program advantag twofold one hand languag meet tradit tool use field hand sinc view execut tempor logic allow express specif smooth merg program properti synchron hypothesi releg realtim problem evalu program reaction time hypothesi program model standard transit system consequ approach program verif quit standard even rather restrict sinc deal check safeti properti finit state program abstract restrict introduc order tackl reallif problem argu meet mani practic case notic that contrast mani verif tool deal model program tool appli directli program themselv thu meet g berri wypiwy principl prove execut manual transform program verifi code execut cours program verif reli synchron hypothesi hypothesi must check fine result valid howev check consist evalu maximum execut time linear piec code the reaction therefor easi work pursu least two direct ffl restrict boolean abstract strong limit deal properti bound integ would certainli worthwhil particular integ variabl often use lustr count delay now tool awar delay second shorter one second recent work time graph analysi could adapt that ffl lot work remain done around modular verif program synthesi approach propos x specif subprogram must provid intuit would appeal synthes automat specif use verif tool assum program pi call subprogram pi requir satisfi properti p ie invari boolean express b first remov pi pi consid unknown part pi environ result program satisfi p pi noth p otherwis symbol verifi exhibit formula f character set state program b fals role pi avoid state idea extract f specif pi moreov sinc approach specif program one wonder possibl synthes pi specif r model check realtim system lucid dataflow program languag synchron approach reactiv realtim system real time program special purpos gener purpos languag synchron program reactiv system esterel synchron program languag design verif safeti properti esterel languag symbol model check ing state beyond lustr declar languag program synchron system automat verif finitest concurr system use tempor logic specif languag composit specif verif finit state hardwar control verif synchron sequenti machin base symbol execut verifi tempor properti sequenti machin without build state diagram time assumpt verif finit state concurr system verif de propriet de programm flot de donne synchron synchron dataflow program languag lustr experi prove regular network process modular model check gener effici code dataflow pro gram visual approach complex system limit possibl autom protocol analysi semant simpl languag parallel program program real time applic signal glori past autom verif time transit system specif verif concurr system cesar program verifi critic system mean synchron dataflow program languag lustr verif xesar slide window protocol tr lucid dataflow program languag automat verif finitest concurr system use tempor logic specif graphbas algorithm boolean function manipul statechart visual formal complex system lustr declar languag realtim program synchron program reactiv system introduct esterel time assumpt verif finitest concurr system verif synchron sequenti machin base symbol execut program verifi critic system mean synchron dataflow languag lustr limit possibl autom protocol analysi verif xesar slide window protocol autom verif time transit model specif verif concurr system cesar verifi tempor properti sequenti machin without build state diagram glori past ctr bruno dausbourg synthtis iintent dun pilot pour dfinir de nouveaux quipement de bord proceed th frenchspeak confer humancomput interact confrenc francophon sur linteract hommemachin p novemb poitier franc paul amblard fabienn lagnier michel levi introduct formal processor verif logic level case studi proceed workshop comput architectur educ held conjunct st intern symposium comput architectur june munich germani vere gafni robot realtim system architectur style acm sigsoft softwar engin note v n p nov dominiqu lher philipp le parc lionel marc prove sequenti function chart program use time automata theoret comput scienc v n p abdesselam lakeh ioanni parissi autom measur structur coverag lustr program case studi proceed second intern workshop autom softwar test p may tarvo raudver ingo sander axel jantsch synchron algorithm local tempor refin perfectli synchron model nest feedback loop proceed th great lake symposium great lake symposium vlsi march stresalago maggior itali y aitameur g bel f boniol s pairault v wiel robust analysi avion embed system acm sigplan notic v n juli tarvo raudver ingo sander ashish kumar singh axel jantsch verif design decis forsyd proceed st ieeeacmifip intern confer hardwaresoftwar codesign system synthesi octob newport beach ca usa ioanni parissi farid ouabdesselam specificationbas test synchron softwar acm sigsoft softwar engin note v n p nov florenc maraninchi yann rmond modeautomata new domainspecif construct develop safe critic system scienc comput program v n p march k altisen f maraninchi d stauch aspectori program reactiv system larissa propos synchron framework scienc comput program v n p decemb ralph d jefford constanc l heitmey strategi effici verifi requir acm sigsoft softwar engin note v n septemb axel poign matthew morley olivi maff leszek holenderski reinhard budd synchron approach design reactiv system formal method system design v n p march hahnsang kim thierri turletti amar bouali epspectra formal toolkit develop dsp softwar applic theori practic logic program v n p juli bruno dausbourg christel seguin guy durrieu pierr roch help autom valid process user interfac system proceed th intern confer softwar engin p april kyoto japan ludov samper florenc maraninchi laurent mounier loui mandel glonemo global accur formal model analysi adhoc sensor network proceed first intern confer integr internet ad hoc sensor network may nice franc mari sheeran gunnar stlmarck tutori stlmarck proof procedur propositionallog formal method system design v n p jan angelo gargantini angelo morzenti autom deduct requir analysi critic system acm transact softwar engin methodolog tosem v n p juli paul caspi alain girault daniel pilaud automat distribut reactiv system asynchron network processor ieee transact softwar engin v n p may u buy r h sloan automat realtim analysi reactiv system part toolset autom softwar engin v n p august alberto coenporisini carlo ghezzi richard a kemmer specif realtim system use astral ieee transact softwar engin v n p septemb