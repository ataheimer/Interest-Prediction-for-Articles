t embed complet binari tree butterfli network a author present embed complet binari tree butterfli network without wraparound connect let even integ qmlog m author show emb sup qnode complet binari tree tq msup mnode wraparound butterfli bsub wm dilat emb tq msup mnode wraparound butterfli bsub wm optim dilat also present embed wraparound butterfli bsub wm msup mnode nowraparound butterfli bm dilat use embed shown tq embed nowrap butterfli bm resp bm dilat resp b introduct import issu parallel process paper studi relationship complet binari tree network butterfli network b present embed b let q q gamma node complet binari tree even integ let bw m resp bm node resp m butterfli resp without wraparound connect bhatt et al show emb q bw m dilat embed constant expans use butterfli time mani node necessari paper first present two improv embed q one emb q bw m dilat anoth one emb q optim dilat two embed one present use wraparound connect butterfli heavili show butterfli wraparound connect up constant factor power one without wraparound connect precis show emb bw m wraparound butterfli network bm dilat use embed abl emb q bm dilat bm dilat next give definit notat use throughout paper embed f g b defin biject map f node node b togeth map g map everi edg onto path ge connect fv fw refer f assign two commonli extens studi cost measur embed dilat expans dilat defin maximum distanc b two adjac node expans defin ratio number node b number node t let q complet binari tree q number q let bw m butterfli network simplic omit lower order term wraparound connect consist level number level node everi node bw m identifi l indic level node resid in fi fi fi mgamma pwl posi tion within level string node bw m connect follow node connect straight edg node l cross edg node l l fi node level connect node level repres wraparound edg let bm butterfli wraparound connect differ bm bw m bm contain addit level level m wraparound edg level level bw m replac edg level gamma level m section describ embed tree q butterfli bw m dilat embed achiev dilat one expans versu expans note straight forward modifi embed use bw m instead bw m section contain embed q bw m dilat respect dilat embed optim sinc embed o expans achiev dilat less section show emb bw m bm dilat use result obtain embed q butterfli wraparound connect embed section use gener approach describ precis also use notion signatori serial number pwl string concept ensur two node q assign node butterfli embed well embed present crucial point node level q assign differ level butterfli achiev embed describ section subtre grow upward downward butterfli vari number level result dilat embed describ section use differ techniqu achiev assign node level tree differ level butterfli thu achiev dilat embed q b w m section describ emb q bw m dilat embed view finetun strategi use embed present tree q embed three stage first stage emb level log second stage emb level log mlog third stage emb remain level q order avoid collis among embed three stage stage simpli embed differ copi bw m embed use bit posit way differ stage embed share subbutterfli network much possibl left half bw m b right half bw m shown figur clariti reason henceforth refer node q pe process element node butterfli node emb q bw m four stage stage emb first log level q dilat pe level log assign node level use oddnumb level k th tree root pe level log emb first dilat pe level k m remain assign node stage pe level m k m assign node level b stage use oddnumb level b addit even level even level b last m level k m embed two stage stage assign next k level k m dilat pe level m assign node level use oddnumb level b stage assign remain k m dilat stage use evennumb level b b use level summar tabl embed assign two pe node bw m two adjac pe distanc apart level use b level use b stage oddnumb level level stage oddnumb stage evennumb evennumb tabl use level four stage descript embed given next assum power two result hold howev even describ necessari chang end section unarystraight branch branch node level l node level use straight edg unarycross branch branch node level l node level l use cross edg final binari branch branch node level l two node level l use straight cross edg stage embed first log level q assign root q node use unarystraight binari branch assign two pe level q two node note binari branch gener pwl string unarystraight branch keep is continu fashion assign pe level q node thu m pe level log assign node figur show first step embed stage easi see two pe assign node ie collis occurr x ff occurr x ff denot wild card charact indic stage embed level log m alreadi defin k m k th tree root pe level log assign pe level m pe level assign oddnumb level b pe level m gamma m assign evennumb level treat differ order keep dilat embed level m goal stage assign pe level m k m node m lambda posit pwl string call signatori purpos keep node pe k m assign differ node pe leftmost rightmost pwl string head resp tail pwl string consid node get pe assign stage head consist altern s s tail consist altern s s addit rightmost posit tree k m posit head pwl string observ posit signatori alreadi contain tree k m posit tail pwl string at begin stage posit contain first describ embed signatori posit head stage assign root k m node use two unarystraight branch binari branch assign two pe level k m two node result dilat pe level level k m assign l pe level l k m l node level l gamma b use unari cross binari branch except occur pe level k m where order keep signatori use unarystraight instead string k string k k k denot binari represent k k r th posit left k k k k posit r k k k level k m node bw m l l tabl assign stage section k log unarycross branch figur show first step handl bit head pwl string use unarystraight which keep s binari branch assign level place pe level node level chang strategi remain two level follow unarystraight binari unarystraight branch assign pe level m gamma node level final binari unarystraight unarycross to level b unarystraight branch to level assign pe level m k m node level strategi result dilat level l l dilat tabl show assign pe k m k log gamma first line tabl state posit root second line cover level point posit signatori encount line cover remain posit head line cover tail exclud last two level handl differ given line obvious line meaning situat correspond last posit head line thu meaningless line meaningless case pe level assign node level use line pe level assign node level use line branch done somewhat differ dilat next consid case signatori posit tail overal strategi befor tabl show assign one briefli discuss tabl line state posit root line cover assign pe bit head pwl string chang line cover tail posit chang signatori line cover remain assign includ level b assign last two level state line again line meaning line cover level level line meaningless sinc bit set two final level line cover level level tabl show assign tree order consist tabl show s tabl howev everi correspond situat tree m similar situat describ tree whose assign given tabl pe level assign node level use line tabl pe level assign node level use line next show collis within stage obvious node get two pe assign must come differ k ms let x k x j two pe k m j m respect assign node level r let k j pwl string node respect show k loss gener j k consid two case depend valu k case k log case pwl string k j differ tail pwl string k k rightmost log rightmost log case differ signatori pwl string k posit pwl string j posit case case case similar case level k m node bw m l l tabl assign stage section level m node bw m l l tabl assign stage section case pwl string k j log differ least one rightmost blog kc bit case m pwl string k posit posit pwl string j complet discuss stage show collis stage stage cannot collis sinc use evennumb level stage henc assum r level b pe assign stage stage sinc stage place root level largest oddnumb level use stage pwl string node contain pe stage start ie contain posit node assign pe stage start either lambda lambda lambda thu cannot collis stage stage occur level case stage handl four tree name tree pwl string node level get pe k k assign stage form lambda k k henc cannot collis pwl string node level get pe assign stage form lambda assign one pe name root q level assign node pwl string henc collis possibl complet descript stage embed level m k m embed last m level k m similar stage howev purpos divid embed last m level k m two stage name stage emb level m k m respect divis show precis use right half full bw m stage respect stage embed level m th subtre height root pe level m k m shown figur subtre consist one pe pe alreadi assign stage henc stage emb ks k stage root k assign node m refer posit fi fi fi serial number k emb k stage serial number signatori remain fix serial number help keep subtre k help keep k emb first dke level k grow upward ie toward lower number level b right half bw m b emb remain level k leav k place node upward downward use everi fourth level b henc embed incur dilat precis process embed k describ next assign pe level l k node level root k assign stage node m use binari two unarystraight branch assign pe level k two node success use unarystraight binari two unari straight branch assign l pe level l k l node k odd assign dke pe level dke k use unarystraight binari branch node except occur leav level assign level make binari branch node level m denot depend binari represent i grow k downward assign l pe level l node dilat root k two pe level it dilat remain level k except occur level bkc dke k odd level bkc bkc even case dilat sinc signatori chang stage argument similar one stage combin observ serial number kept fix stage show collis within stage stage use oddnumb level b sinc stage use oddnumb level b even level level collis among stage complet descript stage describ stage briefli explain last two level k m embed stage ie level m gamma m handl differ level stage place pe level place pe level m order keep dilat pe level place level pe level m place level b result differ strategi last two level k m stage addit place pe level allow us set signatori correctli m stage embed level m subtre k m root root k m height m let r k forest form k shown figur stage emb tree r k dilat use even level b b everi tree r k m gamma k level need embed recal root tree ie leav k assign k stage node stage node make necessari branch need posit pwl string stage use posit contain and left signatori rightmost posit which start with stage assign pe first level tree r k node done unarystraight binari branch k simpli binari branch tree r success use unarystraight binari branch emb remain level r k thu pe level l r k assign node sinc serial number signatori remain fix stage easi see collis within stage stage use evennumb level sinc stage use oddnumb level collis stage stage see tabl note level use stage b stage use level m henc possibl collis stage stage occur level stage leav m assign level thu pwl string node pe assign level string node level pe assign stage lambda posit stage posit stage collis possibl complet stage henc embed q bw m conclud section show modifi embed even power recal stage emb first blog mc level q assign root q node embed befor everi occurr log replac blog mc stage m pe embed level three stage emb remain level q stage emb next m level which level blog mc m emb final m level q sinc tree k m root pe level blog mc gamma q rang k blog reflect chang throughout stage use blog mc instead log m obtain desir embed q bw m argument correct carri straightforward way proof collis differ stage must consid interact stage stage case howev case stage use level wherea stage use level collis occur embed q b w m section describ emb q bw m dilat natur question aris whether exist embed achiev smaller dilat yet know emb q bw m dilat less next show emb q bw m dilat embed achiev optim dilat sinc embed o expans achiev dilat less purpos descript assum power two result hold howev even integ necessari chang describ end section th quarter bw m shown figur emb q bw m three stage stage use emb first log level q pe level log assign node level m k th tree root pe level log emb level m pe level m assign node either level stage emb remain level k m b main differ embed one describ previou section stage previou embed one achiev assign pe level q differ level butterfli grow subtre upward downward vari number level embed section achiev effect differ subtre grow differ number level alreadi stage right signatori place avoid upward downward growth togeth modif allow us reduc dilat describ stage embed section detail stage embed first log level q stage could use embed stage given section howev sinc use bw m instead bw m use simpler embed similar one allow us simplifi remain stage use version stage embed section sinc would result collis stage sake clariti complet describ stage detail assign root q node use binari branch assign done l pe level l q node final use binari unarycross branch assign m pe level log node figur show step embed stage observ stage use b level m dilat level l l log straightforward see collis stage stage embed level m done section partit pwl string head tail head consist leftmost bit tail consist rightmost log pwl string section head even tail odd length either even odd reason use ds follow descript observ node pe assign stage head consist s tail consist lambda two rightmost posit goal stage assign dilat pe level m k pe level m m node tree k m k pwl string get signatori l l tabl assign stage section k log mgamma set posit set first describ embed signatori place head ie k log stage assign root k m node assign l pe level l k m node level l gamma use unarystraight binari branch place signatori make unarycross branch use binari branch assign pe level node level signatori place use binari branch assign pe level l k m node level show precis assign k m k log mgamma first line tabl show assign root second line cover assign point posit signatori encount third line cover remain posit head fourth line cover tail section line meaning situat e line meaningless case signatori correspond rightmost posit head case log odd second rightmost posit case log even embed case signatori posit tail similar order place s oddnumb posit placement signatori make unarycross unarystraight branch depend valu show assign log mgamma tabl assign tree shown tabl m stop level assign leav m node alreadi state signatori set l tabl assign stage section e level m node bw m log l b mgammalog m tabl assign stage section m posit signatori m would posit pwl string set would requir use unarycross edg level thu place pe level m m level m would result dilat sinc pe level assign level signatori set m requir stage handl m somewhat differ easi see dilat stage argument show collis within stage similar one given stage section omit stage use b level level m henc collis stage stage stage embed level m stage similar stage section howev sinc pe level m m assign node level differ let r th subtre root pe level m k first describ embed last m level m ie embed r m describ embed r recal stage assign root r m node use binari branch next assign two pe level two node m assign pe level use binari unarycross branch ie pe level place level b b use unarystraight binari branch success assign remain level r m gener l pe level l r m assign node l m leav r m thu assign level stage assign root r assign pe level r use binari unarycross branch use unarystraight binari branch assign l pe level l r leav r thu assign level show collis within stage sinc serial number denot s pwl string kept fix collis chang stage henc collis r signatori posit also avoid possibl collis r m r seen follow assum level pe r m r assign then node contain pe r signatori posit pwl string leav r place level node contain pe r m start posit chang by binari branch go level level never chang henc cannot exist node assign pe r m r final easi see collis stage stage stage use also use level b stage howev signatori s keep node level pe k m assign stage k distinct node pe m assign stage complet stage henc second embed conclud section show modifi embed section even integ power two stage emb pe level blog mc gamma q node level pe level blog assign node level everi occurr log replac blog mc stage blog mgammac pe embed level m b henc blog mgammac tree k ms rang k reflect chang throughout stage use blog mc instead log m obtain desir embed q bw m embed use wraparound previou two section describ two embed complet binari tree butterfli wraparound connect embed make heavi use wraparound connect section first show that wraparound connect conveni make butterfli power in asymptot sens precis next describ embed bw m bm dilat best knowledg use result document literatur make use result show q embed dilat resp clariti henceforth refer node bw m pe node bm node embed bw m bm achiev expans m optim sinc bm smallest butterfli wraparound consist least node embed bw m bm must achiev dilat least show thi assum sake contradict exist embed ae dilat ae everi node bm assign one pe bw m furthermor edg bm assign edg bw m sinc number node bm greater number pe bw m exist node v bm pe bw m assign it edg incid v edg bw m assign otherwis dilat would now sinc v least incid edg edg bm edg bw m assign ae sinc bw m consist m edg everi edg bm assign edg bw m ae dilat assign pe level bw m node level bm remain pe assign two pe adjac level bw m level apart bm pe level assign node level furthermor node level bm get pe assign formal let p pe assign node fl ff ff ff exampl string fi fi fi fi fi fi fi fi assign node pwl string ff level assign node level respect pe level assign node level respect easi see two pe assign node henc embed bw m bm next show dilat assum even integ the argument odd ms analog let p cross edg bw m l fi depend valu l distinguish four case case assign node v l fi fi connect v path consist cross straight edg result dilat case assign node v m fi fi assign node v connect cross edg dilat p p case assign node v pe p assign node v l fi henc v v connect path consist straight cross edg dilat case assign node v fi fi assign node v fi connect v path consist straight cross straight edg henc dilat p p embed wraparound edg one dilat level l bw m chosen edg level l l dilat complet embed bw m bm dilat next briefli describ embed q wraparound butterfli first embed q bw m dilat use embed section embed bw m dilat immedi follow q embed dilat similarli q embed dilat howev sinc wraparound edg incur dilat remain edg incur dilat better everi edg q map onto path length bw m everi path contain one wraparound edg henc dilat everi edg q similar argument use emb q bm dilat order obtain claim dilat embed q bm chang embed bw m edg level bw m dilat bm remain edg dilat edg q use edg level bw m dilat thu dilat dilat bw m incur dilat conclus paper describ two embed complet binari tree wraparound butterfli bw two embed wraparound butterfli b first embed emb q bw m dilat second one emb q bw m dilat first embed achiev expans second one achiev expans optim dilat embed optim dilat expans would emb q bw m dilat for even m feel techniqu differ one use signatori s need achiev bound third resp fourth embed emb q bm dilat resp acknowledg would like thank anonym refere help suggest comment r embed rectangular grid squar grid multidimension array processor embed grid hypercub optim simul butterfli network optim simul tree machin embed rectangular grid hypercub quotient network embed larg tree machin small one cost tradeoff graph embed optim simul mesh connect array processor preserv proxim array topolog properti hypercub tr optim simul meshconnect array processor topolog properti hypercub embed rectangular grid hypercub multidimension array processor optim simul butterfli network embed larg tree machin small one cost tradeoff graph embed applic embed grid hypercub ctr xiaojun shen weifa liang qing hu embed mesh size ieee transact comput v n p august