t time redund approach tmr failur use faultstat likelihood a failur establish major among process modul tripl modular redund tmr system call tmr failur detect use two voter disagr detector assum one modul becom perman faulti execut task reexecut task hardwar rshw upon detect tmr failur becom costeffect recoveri method tmr system mask effect one faulti modul rshw recov nonperman fault system reconfigurationreplac faulti hardwar reload restart rhwri expens time hardwar propos adapt recoveri method tmr failur optim choos either rshw rhwr base estim cost involv appli bay theorem updat likelihood possibl state tmr system vote result upon detect tmr failur expect cost rshw deriv likelihood compar rhwr rshw continu either recov tmr failur expect cost rshw becom larger rhwr number unsuccess rshw increas probabl perman fault caus tmr failur increas will turn increas cost rshw simul result show propos method outperform convent reconfigur method use rhwr variou condit b introduct fault toler gener accomplish use redund hardwar softwar time combin thereof three basic type redund hardwar softwar static dynam hybrid static redund mask fault take major result replic task dynam redund take twostep procedur detect of recoveri from fault effect method reli select suitabl number spare faultdetect scheme switch oper hybrid redund combin static dynam redund core base static hardwar redund sever spare provid toler fault redund system could provid high reliabl depend number spare use assumpt perfect coverag switch oper howev new fault may occur detect exist fault switch oper becom complex number spare increas order reduc complex switch oper enhanc reliabl low cost selfpurg shiftout scheme develop faulti modul remov replac standbi spare scheme addit oper requir select nonfaulti spare need thu make switch oper simpler difficult implement either threshold voter shiftout check unit requir compar detector collector tripl modular redund tmr one popular faulttoler scheme use spatial redund faulttoler multiprocessor ftmp comput done triplic processorsmemori connect redund common serial buse quadredund clock use bitbybit vote hardwar transact buse cvmp also tmr system trade perform reliabl switch tmr mode vote independ mode program control optim tmr structur recov transient fault shown extend significantli lifetim small system spite requir reliabl voter circuit author propos modular tmr multiprocessor increas reliabl avail use retri mechan recov transient fault switch tmr dualprocessor mode isol perman fault simpl multipleretri polici retri prespecifi number time also use discrimin perman fault employ there polici toler multipl fault treat sequenc singl fault repair fault occurr thu requir frequent vote effect fault detect tmr failur caus near ccoincid fault differ modul must also detect recov effect depend fault induc tmr failur elimin period resynchron optim time interv howev fault model includ possibl perman fault resynchron longer effect addit use spatial redund fault mask reconfigur time redund appli effect recov transient fault recoveri techniqu classifi instruct retri program rollback program reload restart modul replac sever research attempt develop optim recoveri polici use time redund mainli simplex system koren analyz instruct retri program rollback design paramet number retri intercheckpoint interv berg koren propos optim modul switch polici maxim applicationori avail prespecifi retri period lin shin deriv maximum allow retri period simultan classifi fault minim mean taskcomplet time main intent paper develop approach combin time spatial redund appli time redund tmr system note spatial redund alreadi encapsul tmr system tmr failur failur establish major due multiplemodul fault detect time vote faulti modul even effect mask identifi tmr system convent reconfigur replac three faulti modul faultfre modul tmr failur caus transient fault system reconfigur replac hardwar restart rhwr upon detect tmr failur may desir due high cost time hardwar counter problem propos to upon detect tmr failur reexecut correspond task hardwar rshw without modul replac instruct retri intrins assum almostperfect fault detect tmr system requir frequent vote therebi induc high time overhead howev probabl system crash due multiplechannel fault shown insignific gener tmr system even output comput modul infrequ vote long system free latent fault unlik simplex system program rollback adequ tmr system due associ difficulti checkpoint synchron so consid reexecut task tmr system infrequ vote exampl sinc fault known nonperman field failur caus perman fault simpl reexecut may effect mean recov tmr failur may reduc i hardwar cost result hasti elimin modul transient fault ii recoveri time would otherwis increas ie result system reconfigur note system reconfigur timeconsum requir locat replac faulti modul program data reload resum execut shall propos two rshw method determin reconfigur system instead reexecut task without modul replac first nonadapt method determin maximum number rshw allow mnr reconfigur system given task accord nomin execut time without estim system fault state somewhat similar multipleretri polici appli gener rollback recoveri scheme contrast second adapt method i estim system state likelihood possibl state ii choos better rshw rhwr base expect cost system one estim state rhwr invok either number unsuccess rshw exce mnr first method expect cost rshw get larger rhwr second method second method shall develop algorithm choos rshw rhwr upon detect tmr failur shall also show calcul likelihood possibl state updat use rshw result bay theorem paper organ follow follow section present gener methodolog handl tmr failur introduc assumpt use section deriv optim vote interv x v given nomin taskexecut time x mnr first method optim recoveri strategi second method comput given x deriv probabl densiti function pdf time first occurr tmr failur probabl possibl type fault time transit probabl vote time cost rshw rhwr problem updat likelihood system state recoveri polici unsuccess rshw section present numer result compar two recoveri method rshw rhwr paper conclud section detect recoveri tmr failur detect locat of subsequ recoveri from fault crucial correct oper tmr system tmr system fail either voter fail time vote fault manifest multipl modul execut task fault occurr rate usual small enough ignor coincid fault caus common caus noncoincid fault arriv differ modul neglig may lead tmr failur disagr detector compar valu differ voter tmr system detect singl fault may becom faulti ftmp jplstar cvmp exampl system use disagr detector ftmp detect disagr store error latch compress faultstat inform error word later identif faulti modul system reconfigur resolv ambigu locat sourc detect error repeat depend sourc error number unit connect faulti bu two fault detect strategi hard failur analysi hfa transient failur analysi tfa provid accord number persist probabl faulti unit strategi may remov unit hard failur updat fault index demerit suspect unit frequent vote requir make scheme effect faulti modul must detect recov occurr next fault anoth modul within tmr system vote tmr system mask output one faulti modul locat faulti modul one can howev use simpl scheme detect faulti modul andor voter assum probabl two faulti modul produc ident erron output neglig small output modulelevel voter becom immateri multipl modul faulti tmr failur detect use two ident voter selfcheck compar shown fig voter implement convent combin logic design compar easili made selfcheck usual simpl function exampl simpl structur made tworail compar bit util high reliabl function tmr structur also detect voter fault tmr failur voter fault occur compar detect mismatch two voter result either failur form major among three process modul voter fault note use three voter instead two would make much differ discuss processor processor processor voter voter ae oe compar phi phi phi phi phi omega omega omega omega omega omega omega oe phi phi phi phi phi j phi phi phi phi phi figur structur tmr system two voter compar focu twovot tmr structur compar indic mismatch two voter time vote appropri recoveri action must follow though rhwr wide use rshw may prove costeffect rhwr recov tmr failur explor indepth character rshw way mnr determin simplest use constant number rshw irrespect nomin taskexecut time system state defin number faulti modul fault type take account fact time overhead unsuccess rshw increas nomin taskexecut time x one determin mnr simpli base x without estim system state complex effect method decid rshw rhwr base estim system state sinc system state chang dynam decis made optim certain criterion dynam modifi addit inform obtain unsuccess rshw adapt method probabl possibl state use instead one accuratelyestim state upon detect tmr failur expect cost rshw updat compar rhwr fail task reexecut without replac modul either rshw recov correspond tmr failur expect cost rshw becom larger task execut number unsuccess rshw increas possibl perman fault caus tmr failur increas which turn increas cost rshw significantli procedur describ algorithm fig throughout paper assum arriv perman fault arriv disappear nonperman fault poisson process rate respect optim recoveri tmr failur use rshw optim vote interv n nomin taskexecut time measur cpu cycl i gamma th ith vote let x begin task first vote absenc tmrvoter failur shown fig n let taskexecut time begin task first complet ith vote possibl presenc modul failur let w ew expect execut time task upon detect tmr failur let p q probabl recoveri task rshw rhwr respect assum time overhead reconfigur constant c w n express recurs equat term w n let f t n probabl tmr failur unit time system state time j gamma th vote let f t begin task probabl recoveri attempt ie rshw rhwr success depend upon f t tmr failur detect time first vote ie occur execut task portion correspond x system tri rshw or rhwr probabl p or q recov failur process renew probabilist variabl w actual taskexecut time correspond nomin taskexecut time x thu c setup time system reconfigur let v time overhead vote practic neglig equat also renew w s n success recoveri henc defin actual taskexecut time i gamma th ith vote oe oe oe oe tmr failur vote oe figur graphic explan v w n equat follow recurs express deriv n appli recurs time get optim vote frequenc deriv minim w n respect n x subject intervot interv assum ident constant vote interv optim valu n must determin minim eq exampl n given x typic valu shown tabl vote point insert programm compil predetermin nonadapt rshw first method determin priori maximum number rshw mnr km base x without estim system state associ task reexecut km time x increas effect unsuccess rshw becom pronounc is possibl success recoveri rshw instead rhwr decreas x due increas rate tmr failur time overhead unsuccess rshw also increas x time overhead rhwr remain constant so km decreas x increas let c k x actual timecost task execut presenc k rshw task nomin execut time x express as p n probabl nth rshw becom success unsuccess probabl tmr failur x system reconfigur respect p n fact p n p n u cannot determin without knowledg system state n gamma th unsuccess rshw complic deriv priori approxim probabl use follow use properti tmr system sinc probabl perman fault caus tmr failur increas number unsuccess rshw p n monoton decreas n though rn j p n depend upon x fault paramet assum simplic p given priori constant p rn constant r n modifi term p r cost rhwr denot c x deriv use recurs equat now km determin integ minim c k x subject c exampl valu km typic valu p r shown tabl adapt rshw method system choos upon detect tmr failur rshw rhwr base expect cost rshw continu either becom success expect cost next rshw becom larger rhwr system state character likelihood possibl state one observ time tmr failur detect insuffici accur estim system state outcom one rshw regardless whether success not use updat likelihood state one call prior state rshw start possibl state upon detect tmr failur infer posterior state updat prior state use rshw result bay theorem unlik simplex model mani possibl state event analyz tmr system accur thu use simplifi markovchain model fig deriv state probabl transit probabl tmr system model consist six state distinguish number perman fault nonperman fault two three fault state merg one state due ident effect analysi fig transit bidirect horizont line result behavior nonperman fault transit unidirect vertic line caus occurr perman fault note even occurr nearcoincid fault repres sequenti occurr slightli differ interarriv time model thu includ transit neighbor state transit state due multipl fault occur two step one neighbor state fault may disappear without affect execut task happen latenc fault greater activ durat ie manifest itself note occurr error modul task execut may produc erron output task even fault induc error disappear produc final output task word transient fault may perman effect task execut optim recoveri algorithm base adapt method fig illustr follow upon detect tmr failur first step deriv probabl fact problem elimin resynchron processor transient fault detect thi howev requir frequent vote addit mechan detect error processor resynchron processor possibl state time x f evolv prior state let f time tmr system move failur state prior state x f x f time detect tmr failur ie vote time occurr tmr failur repres event t want calcul probabl possibl state vote time x f evolv prior state i actual condit probabl given observ event t calcul probabl type tmr failur f time f transit probabl pmn remain taskexecut time f probabl possibl state thu f f subscript indic prior state state time f state time x f detect tmr failur respect mention earlier vote failur may result voter fault multiplemodul fault multiplemodul fault classifi base number modul perman fault typei type ii typeiii failur repres zero one one permanentfault modul respect possibl state type list fig let sx y state x permanentfault modul nonpermanentfault modul nonfaulti modul although ten differ state need consid six merg merger state simplifi model tmr system without lose model accuraci becaus ffl modifi transit rate one make simplifi markovchain model fig repres tmr system accur ffl merger base realist assumpt simultan occurr fault differ processor modul highli unlik moreov merger chang analysi tmr failur merg state similar effect tmr failur compar origin state exampl merg state induc type tmr failur type determin number permanentfault modul four possibl state led typei failur ie s oe oe oe typeiii failur possibl state time x f typeii failur possibl state time x f typei failur possibl state time x f figur simplifi markovchain model tmr system s s time f nonperman fault might disappear induc error typeii typeiii failur three possibl state fs s s g fs s s g respect time f x f notat simplic let state j sx y y then set possibl state merg these fs set possibl fault state transit f respect may chang or f or f remain unchang due persist perman fault let path denot transit trajectori pair state sinc usual one path given pair node path assign id number simplifi model fig f minimumtim path type tmr failur let j time taken tmr failur via path j then pdf j calcul convolv pdf s subpath make path j pdf subpath two state obtain use distribut sojourn time sever exit markov chain model fig gamma repres set outgo arc j k then pdf j path j compos subpath fij must one possibl fault state sm fs g when interarriv time event fault occurr fault disappear fault latenc exponenti distribut need semimarkov chain model place markov chain model let j repres set path fault state sm likelihood fault state sm time equal f obtain by set path possibl fault state evolv ie g probabl lead typei failur comput base behavior nonperman fault ie depend whether nonperman fault induc error still activ second nonperman fault occur likewis probabl lead typeii failur comput behavior nonperman fault occur earlier perman fault intermitt fault consid fault state must divid fault activ fault benign state make problem complic tractabl numer exampl f f x mean f sever x given fig analyt result compar result obtain montecarlo simul addit f f transit probabl pmn sm n f must deriv order obtain likelihood everi possibl state time vote failur detect x f although matrix algebra use transit matrix chapmankolmogrov theorem appli give accur express use simplifi method comput effici accept small loss accuraci transit probabl f need consid subsequ error focu state use choos rshw rhwr observ occurr rate p perman fault much smaller appear disappear rate nonperman fault use observ one analyz behavior perman fault separ nonperman fault transit probabl due occurr perman fault repres persist perman fault although probabl depend upon approxim use prior probabl sourc state f approxim caus small deviat exact valu occurr rate perman fault usual small compar rate exampl consid p n n ie transit due occurr perman fault correspond transit probabl deriv model fig term pdf s subpath two state let f probabl f thu reduc gammaf t transit sourc state due occurr perman fault deriv cons quentli prior probabl transform f respect use transform prior probabl deriv transit probabl base behavior nonperman fault consid behavior nonperman fault divid model twostat model fs threestat model fs shown fig transit matrix threestat model fs deriv i use laplac transform reduc linear differenti equat three state algebra equat s ii solv algebra equat iii transform solut back time domain linear differenti equat fs effect nontransi fault laplac transform is solut requir invers a let root ff fi ij ijth element a obtain partial fraction expans c ij c ij c ij sinc c ij c ij conjug c ff effect perman fault chang initi probabl thu ith column theta transit matrix pt reduc to equat indic coeffici exponenti includ effect occurr perman fault prior probabl likewis transit matrix twostat model fs deriv as e gamma nt a e gamma nt a e gamma nt a n effect perman fault occurr transit transit matric probabl result occurr perman fault describ possibl transit simplifi model fig tmr system time x f rshw unsuccess due multipl activ fault in one modul state due disappear activ fault induc error system move recover state rshw let f f x probabl tmr failur evolv execut time x f f probabl distribut function f sinc exact knowledg system state avail estim state probabl use calcul expect cost singl rshw follow f x x ifg ifg f probabl state start one rshw upon detect tmr failur ie probabl present state becom prior state next rshw expect cost rhwr obtain similarli eq f x rshw unsuccess vote failur occur again prior state probabl updat addit inform obtain rshw use bay theorem observ inform tell us tmr failur occur current execut note tmr failur detect time current execut x f result prior probabl possibl fault state renew kth rshw k x f proba tmr failur proba tmr failur x f x f f eq one see probabl tmr system permanentfault state increas unsuccess rshw which turn increas chanc adopt rhwr rshw upon detect next tmr failur use updat state probabl get condit probabl state upon detect tmrvote failur rshw success one likewis updat probabl possibl state use guess prior state next vote interv hardwar cost high time constraint stringent one may follow sinc fault occurr rate much smaller disappear rate nonperman fault may wait certain period time call backoff time order current nonperman fault disappear task reexecut optim backoff time determin minim expect time overhead task reexecut without backoff cost one rshw equal eq reexecut start back r unit time cost chang due chang prior state f x x ifg ifg f optim backoff time obtain minim c r respect r tmr failur deriv n x comput c ye success ye updat prior prob oereconfigur reexecut continu execut figur algorithm recov tmr failur estim system state compar cost rshw rhwr tabl n vs x p tabl km vs x tabl paramet valu use simul measur hour numer result discuss system three replic process modul two voter compar simul compar propos method call method altern base rhwr call method upon detect tmr failur method decid rshw rhwr accord respect cost method howev reconfigur tmr entir new healthi tmr partial healthi spare modul follow appropri diagnosi nonperman fault disappear diagnosi treat perman fault replac new nonfaulti spare assum a unlimit number task nomin taskexecut time avail keep run modul busi simplifi descript system workload a unlimit number spare avail perform two method character overhead ratio e real execut time includ rshw andor rhwr overhead task whose nomin execut time x ran simul fault gener process paramet given tabl symbol indic paramet vari other fix order observ effect paramet ovr method sinc fault oc currencedisappear rate difficult estim onlin experiment data numer data base model reflect matur designfabr process environment effect oper condit number age compon use fig probabl tmr failur failur time comput markovchain model simul compar simul model result close other model analys prove effect determin choos rshw rhwr variou condit shown fig result obtain vari x hour plot fig ovr method optim number vote compar fig differ ovr method method increas significantli x x small ovr two method small distinguish due mainli small probabl tmr failur fig compar multivot polici with optim number vote one vote polici gener overhead tmr system infrequ vote increas significantli increas probabl tmr failur increas x eg vote task execut tmr failur mean wast entir nomin execut time x x increas ovr onevot polici increas rapidli multivot polici number rhwr repres percentag rhwr total number simul fig determin hardwar cost spare use increas percentag much larger method method sinc number tmr failur increas x method recov tmr failur rshw second comparison made vari c reset time system reconfigur hour x hour result plot fig larger reset time gener result larger ovr increas c greatli affect perform method but littl influenc ovr method sinc system recov tmr failur rshw noth c third comparison fig made vari n p n fix hr hour hour ovr method decreas n p magnitud decreas method larger method probabl tmr failur decreas p decreas n fix probabl success rshw increas n simul propos scheme unit time fault paramet tabl comparison of mean overhead ratio differ scheme fault paramet assum chang simul sinc estim system state depend upon fault paramet must estim first problem solv assum paramet timevari estim onlin certain adapt method which turn requir sampl conclus paper propos strategi recov tmr failur use two differ method determin appli rhwr method shown outperform convent method base sole reconfigur find consist fact fault nonperman simpl reexecut recov nonperman fault tmr structur mask effect one faulti modul distinct characterist propos strategi use estim state tmr system even incomplet observ system state detect tmr failur andor unsuccess rshw alway call reconfigur rhwr requir us deriv compar expect cost reconfigur one addit rshw tmr failur repres use simplifi markovchain model tmr failur time probabl anoth unsuccess rshw also analyz model one therefor conclud combin time spatial redund appropri effect handl compon failur acknowledg author would like thank allan white chuck meissner felix pitt nasa langley research center jim smith offic naval research technic financi assist r the starselftest repair comput investig theori practic faulttoler comput design on switch polici modular redund faulttoler comput system modular tmr multiprocessor sy tem reliabl analysi hybrid redund shiftout modular redund ftmpa highli reliabl faulttoler multiprocessor aircraft design dependentfailuretoler microcomput system use triplemodular redund embed triplemodular redund hypercub architectur analysi class recoveri procedur an optim retri polici base fault classif a ram architectur concurr access onchip test a highli effici redund scheme selfpurg redund the use triplemodular redund improv comput reliabl the measur analysi transient error digit comput system error detect process model design impact comput perform optim checkpoint realtim task studi faulttoler processor advanc launch system a case studi cmmp cm cvmp part experi fault toler multiprocessor system theori practic reliabl system design a watchdog processor base gener rollback techniqu multipl retri transient failur tripl modular redund system sequenti modul microcomput reliabl improv use triplemodular redun danci a new design method voter faulttoler redund multiplemodul multimicrocomput system tr analysi class recoveri procedur watchdog processor base gener rollback techniqu multipl retri switch polici modular redund faulttoler comput system optim checkpoint realtim task embed triplemodular redund hypercub architectur ram architectur concurr access chip test optim retri polici base fault classif ctr hagba kim kang g shin sequenc task minim effect nearcoincid fault tmr control comput ieee transact comput v n p novemb hagba kim kang g shin design analysi optim instructionretri polici tmr control comput ieee transact comput v n p novemb jae kwon kim byung kook kim probabilist schedul analysi harmon multitask system dualmodular tempor redund realtim system v n p march jo manuel cazeaux daniel rossi cecilia metra selfcheck voter high speed tmr system journal electron test theori applic v n p august byonghyo shim naresh r shanbhag energyeffici soft errortoler digit signal process ieee transact larg scale integr vlsi system v n p april