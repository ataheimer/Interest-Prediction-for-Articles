t find even cycl even faster a describ effici algorithm find even cycl undirect graph main result follow i everi k geq ov time algorithm decid whether undirect graph gve contain simpl cycl length k find one doe ii ov time algorithm find shortest even cycl undirect graph gve b introduct throughout work term cycl refer simpl close walk term path refer simpl nonclos walk even odd cycl cycl whose length even odd even odd path path whose length even odd problem find cycl given length find shortest shortest even shortest odd cycl undirect direct graph among basic natur algorithm graph problem problem consid mani research see survey work consid almost exclus undirect version problem direct version believ much harder problem doe given direct graph e contain direct cycl even length exampl known p known npcomplet see though shed new light direct version problem obtain surprisingli fast algorithm undirect version monien present ove algorithm find pair vertic connect path length fix integ note k part input problem nphard simpl consequ algorithm ove algorithm find cycl length k one exist omv log v algorithm obtain problem complex boolean matrix multipl algorithm effici g dens algorithm work direct well undirect graph work work support part basic research foundat administr israel academi scienc human preliminari version paper appear proceed st intern colloquium automata languag program jerusalem israel page depart comput scienc school mathemat scienc tel aviv univers tel aviv israel email address author fraphyzwickgmathtauacil show k even graph undirect bound improv obtain ov algorithm find cycl given even length undirect graph ov algorithm find quadrilater cycl length four part folklor cf case new obtain ov algorithm util combinatori theorem bondi simonovit state roughli dens enough undirect graph contain mani even cycl also prove construct version theorem ov algorithm find cycl given even length lead follow strang state affair decid whether given undirect graph contain cycl length say asymptot faster decid use known algorithm whether graph contain triangl a cycl length term asymptot stress ov bound well monien ove bound hide huge multipl factor depend exponenti k exponenti depend k probabl unavoid problem nphard k part input shortest cycl direct undirect graph e easili found ove time conduct bf breadth first search vertex itai rodeh show shortest cycl also found omv time undirect case omv log v time direct case also notic halt bf conduct vertex ove algorithm first nontre edg found thi impli ov run time bf almost shortest cycl a cycl whose length exce length shortest cycl one undirect graph found ov time monien describ sophist ov ffv algorithm find shortest even cycl selc short undirect graph n function invers ackermann function algorithm use fast unionfind data structur describ ov algorithm find selc algorithm somewhat simpler use sophist data structur heart algorithm lie combinatori lemma interest right lemma state c shortest even cycl graph exist vertex v c path cycl vertic cycl almost shortest possibl fact path length one greater distanc endpoint path path cycl v vertex u either shortest path exce length shortest path almost shortest possibl also describ simpl omv find shortest odd cycl solc short undirect graph e simpl ove algorithm find solc direct undirect graph e monien describ ove algorithm undirect case paper organ follow section present algorithm find fix length even cycl undirect graph section investig combinatori structur selc section describ algorithm find selc prove correct section describ simpl algorithm find solc direct undirect graph end section conclud remark find even cycl given length throughout section use c l denot cycl length l main result section follow theorem theorem everi k ok decid whether undirect graph e contain c k find one doe also obtain follow result algorithm version result bondi simonovit theorem let l integ let e undirect graph jej l delta jv j l g contain c k everi k l l delta jv j l furthermor c k found ok particular cycl length exactli bl delta jv j l c found ov l time interest comment relat two theorem undirect graph e k find c k one exist ok run time ov everi fix k run time exponenti howev k part input graph e dens enough ie contain c k c k found ok deltav note polynomi v k dens enough graph therefor find extrem long cycl effici graph contain exampl find ov time cycl length thetav compar fact problem decid whether undirect graph e contain cycl or even cycl first ingredi use proof theorem combinatori lemma bondi simonovit see also proof lemma nonconstruct slightli alter argument obtain construct version lemma requir proof theorem state lemma need follow definit definit color vertic undirect graph e said tperiod endpoint everi path length color color note color definit requir proper ie adjac vertic may color color state lemma bondi simonovit present algorithm proof it lemma let posit integ let e connect undirect graph color vertic g use least three distinct color tperiod furthermor g nonbipartit color vertic g use least two distinct color tperiod bipartit nonbipartit case two vertic distinct color path length connect found oe time proof begin show g contain two adjac vertic join two vertexdisjoint path length least t subgraph call thetagraph found oe time easi see g contain subgraph g whose minim degre least t subgraph easili found oe time sequenti remov g vertic whose degre less t let maxim path g ie path cannot extend path greedili construct oe time vertex v adjac least vertic path path along edg v desir thetagraph thetagraph found contain three distinct cycl respect everi vertex v thetagraph four distinct path length thetagraph start v easili check ov time whether v endpoint path color color v case done sinc found two vertic color distinct color path length connect them assum therefor thetagraph tperiod easi see one cycl l period cycl therefor thetagraph must also period let smallest integ thetagraph period follow also smallest period cycl consequ jl l get number color use color thetagraph everi vertex g connect simpl path whose length multipl vertex of say color color appear l simpl path whose endpoint color distinct color easili found ov time final note period color graph e use two color necessarili proper color graph e period color use two color must therefor bipartit second ingredi use proof theorem follow result monien lemma ok delta e time algorithm given direct undirect graph e integ k vertex v find vertic connect path length k exhibit one path v follow immedi consequ lemma corollari let e direct undirect graph let k integ ok gamma delta time algorithm given vertex v decid whether c k pass find c k one exist proof find vertic connect path length check whether one also connect edg corollari let e direct undirect graph let k integ ok e time algorithm given two disjoint subset b vertic determin whether path length k connect vertex vertex b find path one exist proof assum graph direct if not replac undirect edg two antiparallel direct edg add new vertex connect vertic a find vertic direct path length alon yuster zwick recent describ ok perform task lemma ok delta expect time algorithm task corollari depend k complex bound improv therefor k ok random extra log v factor allow readi prove theorem prove fact follow slightli stronger result theorem let k fix integ ok given undirect graph e vertex v either verifi contain c k find c k g not necessarili pass s proof algorithm start bf vertex s distanc v g let l ig set vertic level bf tree stage algorithm scan adjac list vertic l scan algorithm keep count number edg found far insid l an edg insid l endpoint l similarli keep count number edg found far l l i use i denot set vertic l i alreadi discov search search halt one follow condit hold stage k gamma complet bf end least k delta jl j edg found insid l least k delta jl sinc l s disjoint total number edg scan search halt k delta jv j henc search take ok bf vertex v l discov let v vertex l igamma discov it way shortest path tree root consist discov vertic maintain algorithm continu one three possibl way accord condit caus bf halt case bf halt stage case first k level l discov subgraph g induc but contain edg insid l k contain k delta jv j edg c k c k complet contain g corollari check whether cycl exist ok case bf halt k delta jl j edg found insid l k stage search left incomplet first alreadi complet discov consid subgraph g induc l subgraph contain least one connect compon whose vertex set u l whose number edg least k delta ju j denot subgraph compos connect compon h subgraph easili found ok delta time note ju j assum first h nonbipartit thi easili verifi okdeltav time sinc h contain okdeltav edg let c lowest common ancestor bf tree vertic u vertex c easili found okdeltau follow fcg ju j c must least two children u h let one them let x ae u descend u let color vertic x red vertic x blue lemma subgraph h cannot as nonbipartit connect color two distinct color must therefor path length red vertex blue vertex explain proof lemma find path p okdeltau time such path also found use corollari run time would okdeltav path p extend cycl length k ad disjoint path bf tree c two endpoint p length note cycl contain similar action taken h bipartit let b vertex class h ie disjoint u edg h b assum without loss gener jaj let c lowest common ancestor bf tree vertic a vertex c found use way describ abov assum c level h must least two children level h let one them let x ae descend let color vertic x red vertic x blue vertic b green lemma subgraph h cannot connect color three distinct color must therefor path p length two differ color vertic path must red vertex blue vertex path even length start green vertex also end green vertex path found ok extend cycl length k case bf halt k delta jl find connect subgraph h subgraph g induc l l vertex set u least kdeltaju j edg subgraph easili found ok deltav time note h bipartit vertex class algorithm proceed previou case one three case run time ok delta v fact run time algorithm second third case ok delta v case c k found algorithm c k pass s complet proof theorem theorem follow immedi theorem appli algorithm describ vertex turn proof theorem proof bondi simonovit actual show jej l delta jv j l k l l delta jv j l exist vertex v algorithm theorem stop complet stage k gamma immedi lead desir ok deltav theorem anoth interest consequ theorem c k undirect graph e jej k delta jv j k found expect time proof graph jv j vertic least k delta jv j k edg contain c k follow immedi number edg graph e contain c k k delta jv j k e contain least k delta jv j k edg randomli chosen edg probabl least belong c k random algorithm simpli choos random edg appli algorithm theorem one endpoint expect number applic desir c k found o expect run time ok structur shortest even length cycl let g undirect graph let c selc shortest even length cycl it suppos vertic cycl consecut label denot dx y distanc two vertic x g clearli dv c selc easili found use bf v howev path c v v v v kgammai necessarili shortest path g exampl consid k complet graph four vertic even cycl k length distanc two vertic may be therefor dv k immedi clear find c selc case main result section follow lemma state everi selc c vertex v path c vertic c almost shortest path almost shortest path path whose length exce length correspond shortest path one specif lemma let c selc g then vertic c consecut label lemma cornerston ov algorithm find selc present next section think also lemma interest right present proof lemma present follow simpl use lemma lemma p p two distinct but necessarili disjoint shortest path g x y c contain even cycl whose length dx y two distinct shortest path minim index minim index j two shortest path connect j whose inner vertic disjoint thu obtain cycl length proof lemma let h minim subgraph g with respect contain contain c dh x denot distanc x h let eh edg set h done otherwis let path p whose two endpoint b c none inner vertic c satisfi length p call b shortcut first claim p collect vertex disjoint shortcut c b x figur one cycl c c e f j figur shortcut p see thi let p connect compon p minim h impli edg p contain shortcut compon p must therefor contain b shortcut p a b c p compos sole shortcut done otherwis let x vertex incid edg e p p x may b edg e contain shortcut p shortcut p p meet x met vertex y shorter even cycl would exist lemma graph let p portion p connect x vertex c c consid cycl c shown left fig cycl size less k c follow fact show jc j k follow let c cycl compris p part c b contain c sinc jp jc p shortest path c x get jc k fact jc k follow similar argument sum length cycl k even thu one must even contradict minim c contradict show p must simpli shortcut shown set disjoint shortcut as shortcut contain two vertic c claim everi two distinct shortcut p p j must cross one anoth ie two path c endpoint p contain endpoint p j see left fig assum contradict shortcut p p j cross one anoth shown right fig length cycl c less k sum length k one must even contradict minim c shown mutual posit p p j must shown middl fig let a b c denot four segment c determin endpoint shortcut minim c impli jp odd sinc length cycl smaller k thi turn impli jp even two express length twist cycl a b consequ length least k particular third claim two vertic x cycl c exist shortest path use one shortcut consid shortest path x contain least two shortcut let p p j two consecut shortcut appear path let c portion path connect them shown middl fig get jp jdj therefor replac portion path path b c without increas length continu way obtain shortest path use one shortcut view lemma shortest path use one shortcut must connect two antipod vertic ie two vertic whose distanc k cycl conveni point fix consecut number vertic cycl c identifi vertic c number let b two endpoint shortcut p everi shortcut p attach follow interv endpoint interv integr b gamma jp j differ pariti otherwis c would selc jp subset vertic c claim v c everi vertex u c shortest path v u use shortcut p shortcut path v u along cycl c almost shortest path v u recal almost shortest path v u path whose length dv u see thi suppos v c shortest path v u use p shortcut shortest path must either go along portion e cycl c v use p go along c go along portion f cycl c v b use p go along c case shown right figur definit c impli howev path e p therefor replac path f path f p replac path e increas length one requir final task show intersect interv empti v path along c v vertic cycl almost shortest path requir c s interv enough show two intersect let c c j two interv j fact p p j cross one anoth impli show c c j intersect show first inequ equival jp length twist cycl a shown middl fig length cycl least k prove first inequ second inequ follow immedi fact shown therefor interv c c j therefor interv intersect vertex play role v statement lemma complet proof lemma selc c edg disjoint selc sharp inequ hold use show interv c everi vertex v intersect properti shortest path along cycl c v vertic fact shortest path intersect may howev empti c edg disjoint selc order c satisfi condit lemma view lemma imposs dv yield two shortest path length may assum therefor without loss gener dv call v root c dv cycl type one wrt v dv call c cycl type two wrt v everi cycl type two wrt v uniqu dv index c wrt root v final note v v kgamma order c satisfi condit lemma also order ie v k play role v ov algorithm find shortest even cycl reli lemma obtain ov algorithm find selc undirect graph e algorithm start bf everi vertex stop soon even cycl detect ensur time spent bf ov show shortest even cycl found way algorithm inde selc graph bf perform augment version standard bf capabl detect even cycl let vertex augment bf perform a call root bf record everi vertex v set four variabl first two variabl standard two use detect even cycl four variabl are distanc v a ie level v bf tree yet discov v parent v bf tree v yet discov v match v v v vertex level v v v e vertex v said match v v match v also match v set edg fv v j v g therefor match aev highest proper ancestor v bf tree match v match proper ancestor describ process vertex v pop bf queue start scan vs neighbor assum aev dv v correctli set v may may match point depend whether adjac vertex level process it action taken edg v u depend valu du v u follow way noth thi edg process befor opposit direct enqueu u bf queue bf even cycl found let c lowest common ancestor bf tree v u c v c u tree path edg v u form even cycl length dv cycl shown fig which also mean noth thi edg process befor opposit direct u zero halt bf even cycl found assum exampl c lowest common ancestor bf tree x u c x c u tree path edg x v v u form even cycl length dv cycl shown fig test whether aeu equal let v u u v equal halt bf even cycl found follow assum exampl c lowest common ancestor bf tree u c tree path follow edg y x follow path follow edg v u follow u c tree path close even cycl length dv cycl shown fig note cycl ie simpl sinc x ancestor u finish scan neighbor v rescan set aeu everi u becom child v put aeu aev unless case put aeu v complet descript algorithm theorem augment bf scan jv j edg therefor run ov time furthermor c selc length k v root it augment bf start v find even cycl length k proof bf halt either complet even cycl found edg scan bf tree edg edg match vertic these c c c x figur even cycl detect rule wm figur aev k edg form match possibl edg close even cycl jv tree edg jv edg match the root bf never match total number edg scan therefor jv j complex claim obviou scan edg entail constant number oper prove second part theorem consid augment bf start root v selc c note accord six rule bf halt scan neighbor vertex v even cycl found length dv suppos c selc type one wrt v type one type two selc defin end previou section v level bf suppos v k process v kgamma even cycl found edg v length must k it cannot shorter cours otherwis even cycl length k found use rule edg v suppos c selc type two index level bf even cycl length k found process vertex v k cycl found use rule v k process adjac two vertic level final suppos c selc type two level bf and v k level k gamma claim aev therefor even cycl found use rule edg v cycl found befor first note v kgammaj both level j edg them halt level j second note v shortest path g refer fig shortest path connect vertic whose distanc less k must uniqu shortest path vertic cf lemma path must therefor tree path ie must contain bf tree follow ancestor v k level j therefor aev k aev done otherwis proper ancestor v unmatch assum contradict aev k match ancestor ancestor v kgammaj gamma let match v let v kgammar lowest common ancestor bf tree wm v kgammaj v kgammar may v obtain follow even cycl cycl c fig g v denot tree path vertic edg match vertic tree path v may coincid initi caus problem cycl c inde cycl ie simpl compos tree path cannot interset one anoth length c contradict minim c corollari theorem get graph contain v gamma edg contain even cycl simpl exampl show bound best possibl take connect graph whose biconnect compon triangl furthermor check whether graph contain even cycl exhibit one done ov time perform one augment bf arbitrari vertex final point result section impli result section cannot afford check whether graph contain c k length smallest even cycl may larg find shortest odd cycl undirect direct graph shortest odd length cycl solc found polynomi time direct undirect graph object section describ simpl yet effici algorithm problem monien obtain simpl ove time algorithm find solc undirect graph use fast boolean matrix multipl algorithm obtain omv task algorithm effici monien algorithm dens graph theorem omv find shortest odd cycl undirect graph e proof let adjac matrix g assum g nonbipartit otherwis contain odd cycl recal k i close walk length k the multipl use obtain k assum boolean sinc close walk odd length contain odd cycl length solc g minim odd k exist k i g undirect i therefor look minim k use follow approach start comput a binari search along odd number use find k number boolean matrix multipl requir clearli olog v specif solc length k found without increas complex algorithm turn attent find shortest odd cycl direct graph unlik undirect case subpath solc necessarili shortest path therefor simpl bf everi vertex suffic let edu v length shortest even length direct walk u v similarli let odu v length shortest odd length direct walk u v odd length walk exist set odu note exist walk length edu v odu v impli exist simpl walk length edu v odu v lemma direct graph g edv proof close walk odd length contain odd cycl odd length close walk contain v whose length edv i minim c impli edv howev path length v v therefor edv i second equal statement lemma follow use similar argument given vertex s easili comput ed v od v everi v v follow construct graph g graph g direct bipartit graph contain even repres v e odd repres v everi vertex easili seen edu denot distanc u v g perform bf g e therefor find ed v od v everi assum graph contain isol vertic everi v find oe time shortest odd length close walk contain s simpli comput eg oc close walk length oc minim possibl odd length easili found trace shortest odd path vertex minimum achiev shortest odd length close walk found way must solc thu obtain follow theorem shortest odd length cycl direct graph one exist found ove time conclud remark shown interest combinatori properti even cycl undirect graph lead effici algorithm find even cycl given length find shortest even cycl note input graph given use adjac matrix ov algorithm optim seem plausibl conjectur ov best possibl bound term v problem even adjac list graph given input note ov time current best known time even find quadrilater c s base result paper alon yuster zwick recent obtain find c undirect graph gener c k found algorithm better ov present rel spars graph interest note hardest case c problem exampl graph thetav edg author would like thank noga alon mani help discuss r colorcod journal acm find count given length cycl extrem graph theori cycl even length graph find minimum circuit graph complex determin shortest cycl even length find long path effici find cycl given length even cycl direct graph graph algorithm tr ctr friedrich eisenbrand fabrizio grandoni detect direct cycl still faster inform process letter v n p juli harold n gabow shuxin nie find long direct cycl proceed fifteenth annual acmsiam symposium discret algorithm januari new orlean louisiana