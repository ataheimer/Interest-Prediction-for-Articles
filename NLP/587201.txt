t solut equal constrain quadrat program problem aris optim a consid applic conjug gradient method solut larg equal constrain quadrat program aris nonlinear optim approach base implicitli reduc linear system gener iter null space constraint instead comput basi null space choos work directli matrix constraint gradient comput project null space either normal equat augment system approach unfortun practic project result signific round error propos iter refin techniqu well adapt reformul quadrat problem greatli reduc error without incur high comput overhead numer result illustr efficaci propos approach present b introduct varieti algorithm nonlinearli constrain optim use conjug gradient cg method solv subproblem form minim x subject nonlinear optim nvector c usual repres gradient rf object function gradient lagrangian n theta n symmetr matrix h stand either hessian lagrangian approxim it solut x repres search direct equal constraint obtain linear constraint optim problem current iter assum theta n full row rank constraint constitut linearli independ equat also assum conveni h posit definit null space constraint guarante uniqu solut posit definit assumpt need trust region method discuss also valid context trust region method normal termin cg iter soon neg curvatur encount see and contrast use iter method cg attract larg scale optim becaus number variabl larg cost effect solv approxim increas accuraci solut iter optim algorithm approach minim addit properti cg method merg well requir global converg optim method see eg paper studi appli precondit cg method keep comput cost reason level ensur round error degrad perform optim algorithm quadrat program solv comput basi z null space a use basi elimin constraint appli cg method reduc problem argu howev due form precondition use practic explicit use z caus iter expens signific save achiev mean approach bypass comput z altogeth price pay altern give rise excess roundoff error slow optim iter may even prevent converg shall see error caus constraint satisfi desir accuraci describ iter refin techniqu improv accuraci solut highli illcondit problem also propos mechan redefin vector c adapt chang solut quadrat problem favor numer properti notat throughout paper k delta k stand matrix vector norm gnorm vector x defin x gx g given positivedefinit matrix denot floatingpoint unit roundoff or machin precis ffl let a denot condit number a ie nonzero singular valu a cg method linear constraint common approach solv linearli constrain problem elimin constraint solv reduc problem cf specif suppos z n theta n gamma m matrix span null space a column togeth column z span r n solut x linear equat written vector x constraint yield determin vector x substitut omit constant term constant now see x z solv reduc problem minim x z assum reduc hessian h zz posit definit equival linear system appli conjug gradient method comput approxim solut problem equival system substitut obtain approxim solut quadrat program strategi comput normal compon x exactli tangenti compon zx z inexactli compat requir mani nonlinear optim algorithm need ensur that linear constraint satisfi remain throughout remaind optim calcul cf let us consid practic applic cg method reduc system well known precondit improv rate converg cg iter cf therefor assum precondition w zz given w zz symmetr posit definit matrix dimens might chosen reduc span of cluster eigenvalu w gamma could result automat scale variabl regardless w zz defin precondit conjug gradient method appli follow see eg algorithm i precondit cg reduc system choos initi point x z comput r zz r z p gammag z repeat follow step termin test satisfi r z z zz r z gammag z z g z r z r z iter may termin exampl r z zz r z suffici small approxim solut obtain must multipli z substitut give approxim solut quadrat program altern may rewrit algorithm multipl z addit term x perform explicitli cg iter so introduc follow algorithm nvector x algorithm ii precondit cg in expand form reduc system choos initi point x satisfi comput gammag repeat follow step converg test satisfi x main algorithm studi paper sever type stop test use sinc choic depend requir optim method shall discuss here numer test report paper use quantiti r zz r z termin cg iter note vector g call precondit residu explicitli defin rang z result exact arithmet search direct gener algorithm ii also lie rang z thu iter x satisfi round error comput may caus p compon outsid rang z compon normal small caus difficulti implement project cg method algorithm ii constitut effect method comput solut success use variou algorithm larg scale optim cf main drawback need nullspac basi matrix z whose comput manipul costli sometim give rise unnecessari illcondit difficulti becom appar describ practic procedur comput z consid type precondition w zz use practic let us begin first issu comput basi null space mani possibl choic nullspac matrix z possibl best strategi choos z orthonorm column provid well condit represent null space a howev comput nullspac matrix expens number variabl larg essenti requir comput spars lq factor implicit explicit gener q alway believ rather expens compar altern describ recent research suggest fact possibl gener q product spars household matric cost may all reason experi approach howev becaus knowledg gener purpos softwar implement yet avail anoth possibl tri comput basi nullspac involv nonzero possibl although problem comput hard suboptim heurist possibl still rather expens econom altern base simpl elimin variabl defin z first group compon x basic depend variabl which simplic assum first variabl partit theta basi matrix b assum nonsingular defin gammab clearli satisfi linearli independ column practic z form explicitli instead comput store spars lu factor b comput product form zv z v mean solv use lu factor ideal would like choos basi b spars possibl whose condit number significantli wors a requir difficult achiev simpli ensur b well condit difficult task choos basi deleg spars lu factor algorithm recent code see eg design comput wellcondit basi known us extent reach object precondit potenti drawback nullspac basi suffici seriou prevent effect use algorithm ii howev consid practic choic precondit matrix w zz one expos weak approach ideal one would like choos w zz w gamma thu zz perfect precondition howev unlik z hz invers spars matric even z hz small dimens form quit costli therefor oper ideal precondition normal question paper consid precondition form zz g symmetr matrix z gz posit definit suggest choos g made two particularli simpl choic first choic appropri h domin diagon case exampl barrier method constrain optim handl bound constraint l x u ad term form gamma object function posit barrier paramet choic aris sever trust region method constrain optim precondition which deriv chang variabl thu given zz regardless choic g precondition requir oper invers matrix z gz applic z defin simpl enough structur form factor n gamma m theta n gamma m matrix z gz expens g simpl form lu factor b spars number constraint larg form z gz may rather costli even requir solut triangular system lu factor case prefer form z gz rather comput product form z solv z use cg method inner cg iter employ i effect problemsparticularli number degre freedom small fail z badli condit tend expens moreov sinc matrix z gz known explicitli difficult construct effect precondition acceler inner cg iter summari precondition form z defin mean comput precondit residu g often expens domin cost optim algorithm goal paper consid altern implement algorithm ii whose comput cost moder predict approach avoid use nullspac basi z altogeth comput project see bypass comput z let us begin consid simpl case precondition w zz given p z denot orthogon project oper onto null space a precondit residu written project perform two altern way first replac p z equival formula thu replac express solut note normal equat follow v solut least squar problem minim desir project g correspond residu approach implement use choleski factor aa second possibl express project solut augment system r system solv mean symmetr indefinit factor use theta theta pivot let us suppos precondition gener form precondit residu requir comput may express g nonsingular found solut g r whenev z gz nonsingular see eg section far appeal g gamma simpl form use gener clearli system may obtain set i perfect precondition result choic g also possibl requir z gz posit definit idea use project cg method date back least altern special case propos although unnecessarili requir g posit definit recent studi precondit project cg method hereaft shall write p project oper mention abov note make use null space matrix z requir factor matric involv a unfortun give rise signific roundoff error particularli cg iter approach solut difficulti caus fact iter proceed project vector increasingli small r not inde optim condit quadrat program state solut x satisfi lagrang multipli vector vector hx c denot r algorithm ii gener stay bound away zero indic becom increasingli closer rang word r tend becom orthogon z henc precondit residu g converg zero long smallest eigenvalu z gz bound away zero discrep magnitud caus numer difficulti appar show signific cancel digit usual take place gener harm roundoff error also appar small remain compon v remain larg sinc magnitud error gener solut govern size larg compon v vector g contain larg rel error argument made precis next section exampl appli algorithm ii solv problem cvxeqp cute collect subsequ experi use simpl precondition correspond choic use normal equat augment system approach comput project result given figur plot residu r g function iter number case cg iter termin r g becam neg indic sever error occur sinc r must positivecontinu iter past point result oscil norm gradient without signific improv iter run r order wherea project g figur also plot cosin angl precondit residu g row a precis defin ith row a note cosin zero exact arithmet increas indic cg iter leav constraint manifold sever error uncommon optim calcul see x grave concern may caus underli optim algorithm behav errat fail paper propos sever remedi one base adapt redefinit r attempt minim differ magnitud also describ sever form iter refin project oper techniqu motiv roundoff error analysi given next analysi error present error bound support argument made previou section particularli claim problemat situat occur latter stage pcg augment system iter resid co pcg normal equat iter resid co figur conjug gradient method two option project iter g converg zero r not simplic shall assum henceforth scale shall consid simplest possibl precondition oppos exact quantiti denot subscript c let us first consid normal equat approach given solv mean choleski factor aa finit precis instead exact solut v normal equat obtain v error deltav recal ffl denot unit roundoff a condit number a studi total error project vector g simplifi analysi ignor error aris comput matrixvector product v subtract given error domin error v whose magnitud estim assumpt comput project exact project bound assum error format aa ar backsolv use choleski factor reason assumpt context also note sharpen replac term possibl diagon scale d thu error project lie entir rang rel error project satisfi error signific a larg larg let us consid ratio case kr much larger project kr assumpt suppos inequ achiev give simpler interpret thu conclud error project larg either a ratio kr larg condit number a moder contribut ratio rel error normal larg enough caus failur optim calcul condit number a grow loss signific digit becom sever especi sinc a appear squar exampl mention ratio order o iter bound indic could correct digit g stage cg iter agreement test point cg iter could make progress let us consid augment system approach focu choic i precondit residu comput solv r use direct method number method strategi bunch kaufman duff reid best known exampl dens spars matric respect form ldl factor augment matrix ie matrix appear left hand side l unit lower triangular block diagon theta theta block approach usual but alway stabl normal equat ap proach improv stabil method bjorck suggest introduc paramet ff solv equival system r error analysi show j depend n growth factor factor oe nonzero singular valu a import notic aand aenter bound ff oe a method give solut never much wors obtain tight perturb analysi therefor consid stabl practic purpos approxim oe a difficult common simpli use case concern us most kg converg zero kv term insid last squar bracket approxim kv k obtain assum ff interest compar bound see ratio play crucial role analysi augment system approach like give accur solut method normal equat case cannot state categor howev sinc size factor j difficult predict residu updat strategi describ x aim minim contribut ratio see highli benefici effect algorithm ii present it discuss variou iter refin techniqu design improv accuraci project oper iter refin iter refin known effect procedur improv accuraci solut obtain method backward stabl consid use context normal equat augment system approach normal equat approach let us suppos choos comput project p r normal equat approach appeal idea tri improv accuraci comput appli project repeatedli therefor rather comput let project appli mani time necessari keep error small motiv multipl project techniqu stem fact comput project small compon consist entir round error outsid null space a describ therefor appli project p first project c give improv estim ratio much smaller repeat process may hope obtain improv accuraci multipl project techniqu may simpli describ set g perform follow step solv ll set l choleski factor aa note method appropri although simpl variant possibl g diagon exampl solv problem given exampl use multipl project everi cg iter measur cosin angl g column a cosin greater gamma multipl project appli cosin less valu result given figur show residu r g reduc much plane cg iter figur inde ratio final initi valu r g gamma satisfactori straightforward analyz multipl project strategi provid that befor make simplifi assumpt round error make form l solv obtain follow result prove induct simpl consequ assumpt norm one thu error converg rlinearli zero rate cours rate sustain indefinit error ignor becom import nonetheless one would expect reflect true behaviour kg small multipl unit roundoff ffl iter residu figur cg method use multipl project normal equat approach stress howev approach still limit fact condit number appear squar improv guarante also note multipl project almost ident form numer properti fix precis iter refin least squar problem p fix precis iter refin appropri approach chosen comput project stabl see thi compar perturb analysi least squar problem theorem give depend condit number linearnot quadrat moreov sinc multipli kg small effect condit number much smaller mention two iter refin techniqu one might consid either effect practic context first use fixedprecis iter refin section attempt improv solut v normal equat thi howev gener unsuccess fixedprecis iter refin improv measur backward stabil p choleski factor alreadi backward stabl method perform numer test found improv strategi howev well known iter refin often succeed extendedprecis use evalu residu could therefor consid use extend precis iter refin improv solut v normal equat long residu smaller one norm expect error solut decreas factor ffl ma reach offl sinc optim algorithm normal use doubl precis arithmet comput extend precis may simpl effici strategi suitabl gener purpos softwar reason consid use extend precis iter refin least squar problem augment system approach appli fix precis iter refin solut obtain augment system give follow iter comput solv g deltag ae g ae v updat note method applic gener precondition g appropri valu ff hand incorpor iter describ gener analysi higham theorem indic that condit number larg expect high accuraci v good accuraci g case exampl solv problem given exampl use iter refin techniqu case multipl project discuss exampl measur angl g column everi cg iter iter refin appli long cosin angl greater gamma result given figur observ residu r g decreas almost much multipl project approach attain accept small valu point out howev residu increas reach valu gamma cg iter continu hundr iter residu exhibit larg oscil return x experi iter refin step normal enough provid good accu raci encount case step benefici residu updat strategi seen signific roundoff error occur comput project residu vector much smaller residu r describ procedur iter residu figur cg method use iter refin augment system approach redefin r norm closer g dramat reduc roundoff error project oper begin note algorithm ii theoret unaffect if immedi comput r redefin equival due condit fact r use follow redefin r mean either normal equat approach augment system approach result would theori unaffect freedom redefin r seek valu minim g symmetr matrix z gz posit definit g gamma gener invers g vector solv obtain give rise follow modif cg iter algorithm iii precondit cg residu updat choos initi point x satisfi comput find vector minim krgammaa y comput set gammag repeat follow step converg test satisfi x procedur work well practic improv ad iter refin project oper case iter refin step use notic simpl interpret step first obtain solv indic requir valu may rewritten g thu obtain g step instead found solv advantag use compar solut latter may domin larg compon v former g larg componentsof cours float point arithmet zero compon solut instead tini round valu provid solv stabl fashion view way see step actual limit form iter refin comput v comput g discard use refin solut iter semirefin use context anoth interest interpret reset r r gamma perform start algorithm iii parlanc optim c gradient object function r gamma gradient lagrangian problem vector comput call least squar lagrang multipli estim it common alway case optim algorithm set comput multipli thu algorithm iii propos initi residu set current valu gradient lagrangian oppos gradient object function one could ask whether suffici reset r begin algorithm iii omit step subsequ iter comput experi show that even though initi reset r reduc magnitud suffici avoid error first cg iter subsequ valu r grow round error may reappear strategi propos algorithm iii safe ensur r small everi iter one think variou altern one monitor norm r appli residu updat seem grow case particularli effici implement residu updat strategi i note precis object least squar problem occur comput via normal equat approach therefor desir valu noth vector v furthermor first block equat show r therefor case replac r word appli project oper twice special case multipl project approach describ previou section base observ propos follow variat algorithm iii requir one project per iter note written rather perform project defin r g project residu comput previou iter result iter given algorithm iii follow two chang omit replac g g r strategi perform well numer experi avoid extra storag comput requir algorithm iii show mathemat equival algorithm iii turn mathemat equival algorithm ii argument follow make use fact that first iter clearli algorithm iii except valu store r last step r us consid effect next iter numer definit ff becom g equal r p g thu formula ff theoret unchang advantag never neg case round error domin project oper next step differ valu calcul algorithm iii step omit new variant algorithm iii project residu calcul p p r ffhp mathemat equival valu pp r ffhp calcul algorithm iii recal written new strategi appli doubl project r final let us consid numer new variant given wherea algorithm iii given expand express see formula fi mathemat equival case new variant project appli select exampl solv problem given exampl use residu updat strategi i result given figur show normal equat augment system approach equal effect case plot cosin angl precondit residu column small approach tend grow iter progress normal equat approach cosin order gamma throughout cg iter augment system approach order gamma note obtain higher accuraci iter refin strategi describ previou section compar figur augment system iter residu normal equat iter residu figur conjug gradient method residu updat strategi obtain highli reliabl algorithm case combin residu updat strategi describ iter refin project oper give rise follow iter use numer test report x algorithm iv residu updat iter refin choos initi point x satisfi comput project comput normal equat augment system approach set gammag choos toler max repeat follow step converg test satisfi x appli iter refin p r less conclud discuss elabor point made exampl concern comput steplength paramet ff note formula prefer sinc cannot give rise cancel similarli stop test base g g rather g r residu updat implement algorithm iv chang automat believ express recommend implement cg iter provid precondition base test thi repeat comput report exampl use augment system approach see figur chang algorithm ii use new ff stop test cg iter abl continu past iter abl reach valu also repeat calcul made exampl residu reach level larg oscil residu mention exampl longer took place thu case altern express ff stop test benefici gener g also improv upon effici algorithm iii gener g use slightli outdat inform idea simpli use obtain comput g suitabl rather wait follow step obtain slightli uptod version result iter given algorithm iii follow two chang omit replac g g r r obtain biproduct notic howev gener g extra matrixvector product v requir sinc longer relationship exploit although experi idea here prove benefici other similar circumst numer result test efficaci techniqu propos paper collect quadrat program form problem gener last iter interior point method nonlinear program describ method appli set test problem cute collect appli cg method precondition ie solv quadrat program use augment system normal equat approach comput project compar standard cg iter stand iter refin ir techniqu describ x residu updat strategi combin iter refin updat given algorithm iv result given tabl first column give problem name second dimens quadrat program test reliabl techniqu propos paper use demand stop test cg iter termin experi includ sever stop test cg iter typic use trust region method optim termin number iter exce n gamma m denot dimens reduc system superscript tabl indic limit reach cg iter also stop length solut vector greater trust region radiu set optim method see us superscript indic safeguard activ note problem excess round error trigger it final termin p hp indic r g indic note standard cg iter abl meet stop test problem tabl iter refin updat residu success case tabl report cpu time problem tabl note time standard cg approach stand interpret caution sinc problem termin prematur includ time standard cg iter show iter refin residu updat strategi greatli increas cost cg iter next report problem stop test could met variant three problem tabl provid least residu norm attain strategi final indirect test techniqu propos paper report result obtain interior point nonlinear optim code describ nonlinear program problem cute collect code appli cg method solv quadrat program iter use augment system augment system normal equat problem dim stand ir updat stand ir updat corkscrw coshfun optctrl tabl number cg iter differ approach indic iter limit reach indic termin trust region bound indic neg curvatur detect indic r augment system normal equat problem dim stand ir updat stand ir updat coshfun optctrl tabl cpu time second indic iter limit reach indic termin trust region bound indic neg curvatur detect indic r augment system normal equat problem dim stand ir updat stand ir updat obstcla d d d d d d tabl least residu norm r g attain option normal equat approach comput project strategi tri standard cg iter stand residu updat strategi updat iter refin describ algorithm iv result given tabl feval denot total number evalu object function nonlinear problem project repres total number time project oper perform optim indic optim algorithm unabl locat solut note total number function evalu roughli strategi case differ cg iter caus algorithm follow differ path solut expect solv nonlinear problem note augment system approach residu updat strategi chang number project significantli problem improv substanti hand observ normal equat approach which sensit condit number a residu updat strategi give substanti reduct number project half problem interest residu updat perform augment system normal equat approach similar conclus studi properti project cg method solv quadrat program problem form due form precondition use nonlinear program algorithm opt comput basi z null space constraint instead project cg iter use normal equat augment system approach given exampl show either case signific roundoff error occur present explan thi propos sever remedi one use iter refin augment system normal equat approach altern updat residu everi iter cg iter describ x latter implement particularli effici precondition given numer experi indic updat residu almost alway suffic keep error toler level iter refin techniqu effect updat residu use conjunct it numer result report paper indic combin strategi econom accur acknowledg author would like thank andi conn philipp toint help input earli stage research augment system normal equat f eval project f eval project problem n stand updat stand updat stand updat stand updat corkscrw coshfun gausselm hager obstcla optcntrl optctrl tabl number function evalu project requir optim method differ implement cg iter r iter solut method cute constrain unconstrain test environ stabl method calcul inertia solv symmetr linear equat linear least squar solut houshold transfor mation primal primaldu method nonlinear program linearli constrain optim project precondit conjug gradient null space problem i complex null space problem ii algorithm precondit conjug gradient approach linear equal constrain minim global converg theori gener trustregion base algorithm equal constrain optim direct method spars matric multifront solut indefinit spars symmetr linear equat design practic method optim comput spars basi nullspac snopt sqp algorithm largescal constrain optim practic optim matrix comput iter method illcondit linear system optimiza tion solv trustregion subproblem use lanczo method spars orthogon scheme structur optim use forc method method conjug gradient solv linear system iter refin lapack implicit nullspac iter method constrain least squar problem implement algorithm largescal equal constrain optim multifront comput orthogon factor spars matric indefinit precondit inexact newton method larg spars equal constrain nonlinear program problem precondit reduc matric substructur method comput null space equilibrium matric conjug gradient method extrem problem qr factor larg spars overdetermin squar matric multifront method multiprocess environ conjug gradient method trust region larg scale optimiza tion nest dissect spars nullspac base toward effici sparsiti exploit newton method minim largescal nonlinear network optim tr ctr luca bergamaschi jacek gondzio manolo venturin giovanni zilli inexact constraint precondition linear system aris interior point method comput optim applic v n p april h s dollar n i gould w h schilder a j wathen use constraint precondition regular saddlepoint problem comput optim applic v n p april luca bergamaschi jacek gondzio giovanni zilli precondit indefinit system interior point method optim comput optim applic v n p juli s bocanegra f f campo a r oliveira use hybrid precondition solv largescal linear system aris interior point method comput optim applic v n p april nichola i m gould dominiqu orban philipp l toint galahad librari threadsaf fortran packag largescal nonlinear optim acm transact mathemat softwar tom v n p decemb s cafieri m dapuzzo v simon d serafino iter solut kkt system potenti reduct softwar largescal quadrat problem comput optim applic v n p septemb nichola i m gould philipp l toint iter workingset method largescal nonconvex quadrat program appli numer mathemat v n p octob meizhong dai david p schmidt adapt tetrahedr mesh freesurfac flow journal comput physic v n p septemb silvia bonettini emanuel galligani valeria ruggiero inner solver interior point method larg scale nonlinear program comput optim applic v n p may