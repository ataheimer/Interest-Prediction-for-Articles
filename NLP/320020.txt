t updat view mainten soft realtim databas system a databas system contain base data item record model physic real world environ better decis support base data item summar correl deriv view base data view access applic transact gener ultim action taken system environ chang updat appli base data subsequ trigger view recomput thu three type activ base data updat view recomput transact execut realtim system two time constrain need enforc requir transact meet deadlin transact timeli read fresh data data timeli paper defin concept absolut rel tempor consist perspect transact address import issu transact schedul among three type activ two time requir met also discuss realtim databas system design enforc differ level tempor consist b introduct realtim databas system rtdb often employ dynam environ monitor statu realworld object discov occurr interest event exampl program trade applic monitor price variou stock financi instrument currenc look trade opportun typic transact might compar price german mark london price new york signific differ system rapidli perform trade state dynam environ often model captur set base data item within system chang environ repres updat base data exampl financi databas refresh state stock market receiv ticker tape stream price quot updat stock exchang better support decis make larg number base data item often summa applic transact item dynam environ monitor updat recomput data view base figur real time databas system rize view exampl view financi databas includ composit indic eg sp dow jone industri averag sector subindic timeseri data eg day move averag theoret financi option price etc better perform view materi base data item updat reflect certain extern activ relat materi view need updat recomput well besid base item updat view recomput applic transact execut gener ultim action taken system transact read base data view make decis instanc applic transact may request purchas stock perform trend analysi signal alert even trigger execut transact applic transact may also read static data knowledg base captur expert rule figur show relationship among variou activ realtim databas system notic updat base data recomput deriv data may also run transact eg acid properti case refer updat transact recomput transact use term transact alon refer applic transact applic transact associ one two type time requir transact timeli data timeli transact timeli refer fast system respond transact request data timeli refer fresh data read is close time data read transact model environ stale data consid less use due dynam natur data satisfi two timeli properti pose major challeng design schedul algorithm databas system time requir pose conflict demand system resourc keep data fresh updat base data appli promptli also whenev valu base data item chang affect deriv view recomput accordingli comput load appli base updat perform recomput extrem high caus critic delay transact either enough cpu cycl them delay wait fresh data consequ applic transact may high probabl miss deadlin paper studi intric balanc schedul three type activ updat recomput applic transact satisfi two time requir data transact goal are ffl defin tempor correct perspect transact ffl investig perform variou transact schedul polici meet two time requir transact differ correct criteria ffl address design issu rtdb tempor correct enforc make right decis applic transact need read fresh data faith reflect current state environ desir situat data item read transact fresh transact commit requir howev could difficult meet simpl exampl transact whose execut time second requir data item updat everi second transact hold read lock data item extens period time new updat acquir write lock instal data item stale throughout transact execut transact cannot commit without use outdat data stringent data time requir also hurt chanc meet transact deadlin let us consid simpl exampl again suppos data updat interv chang second second scenario even though possibl transact complet without read stale data chanc new updat data arriv transact execut insist nostaleread system transact abort restart delay suffer transact due abort restart subsequ wast system resourc cpu data lock seriou problem definit data timeli thu need relax accommod difficult situat eg allow transact read slightli outdat data probabl within predefin toler level discuss number option relax data time requir paper given correct criterion need suitabl transact schedul polici enforc it exampl simpl way ensur data timeli give updat recomput higher prioriti applic transact abort transact engag data conflict updat recomput polici ensur transact commit use old data howev give applic transact low prioriti sever lower chanc meet deadlin especi true updat and thu recomput arriv high rate investig transact schedul balanc contrari requir data transact timeli rest paper organ follow section discuss relat work section discuss properti updat recomput applic transact particular discuss implic properti design transact schedul concurr control section propos three tempor correct criteria section list option transact schedul concurr control support differ correct criteria section defin simul model evalu perform schedul polici result present section conclud paper section relat work load balanc issu updat transact realtim databas system studi system model updat come high rate transact must commit deadlin author propos sever heurist examin effect maintain data fresh sacrif transact timeli point ondemand strategi updat appli requir transact give best overal perform balanc problem deriv data view updat transact studi note recomput often come burst obey principl updat local author propos forc delay approach delay trigger recomput short period recomput view object batch singl comput studi show batch significantli improv perform rtdb two studi report close relat former studi updat transact latter studi recomput transact howev consid case updat recomput transact present also studi report like tempor consist maintain differ schedul polici discuss enforc consist constraint paper consid variou schedul polici enforc tempor consist rtdb updat recomput transact coexist song liu discuss data tempor consist realtim system execut period task model task either sensor writeonli transact readonli transact updat readandwrit transact transact must read tempor consist data absolut rel order deliv correct result sinc multivers databas shown offer signific perform gain singlevers one author propos evalu two multivers concurr control algorithm lockbas optimist studi paper use term view deriv item interchang multivers lock concurr control twophas lock use serial readwrit oper updat transact timestamp use locat appropri version read readonli transact multivers optimist concurr control updat goe three phase read phase valid phase possibl phase read phase transact read write recent version data workspac without lock data readi commit transact enter valid phase conflict updat transact found immedi abort restart transact pass valid phase enter write phase new version object transact local workspac becom perman system readonli transact read recent commit version data go one phase read phase use multivers techniqu algorithm serv common purpos elimin conflict readonli updat transact readonli transact alway read commit version without contend resourc write oper henc readonli transact never restart cost concurr control restart significantli reduc updat recomput transact section take closer look properti updat recomput applic transact discuss properti affect design realtim databas system particular discuss concept updat local high faninfanout recomput time requir transact properti common mani realtim databas system program stock trade mani realtim databas applic manag data input stream appli correspond databas updat repres nontrivi load system exampl financi databas program trade applic need keep track three hundr thousand financi instrument handl us market alon system need process updat per second updat usual affect singl base data item plu number relat view high volum updat special properti such writeonli append warrant special treatment rtdb particular execut full transact support updat treat separ transact number transact larg system handl recal financi databas may need process updat per second applic transact also advers affect resourc conflict updat propos better approach appli updat stream use singl updat process depend schedul polici employ updat process instal updat specif order could linear firstcomefirstserv manner ondemand upon applic transact request base data item updat view depend base item updat recomput well system load due view recomput even higher requir instal updat updat involv simpl write oper recomput view may requir read larg number base data item high fanin complex oper also updat trigger multipl recomput updat base item use deriv number view high fanout one way reduc load due updat recomput avoid useless work updat use valu write read transact updat done inplac updat base item b need execut transact request b anoth updat b arriv similarli recomput view need execut transact read view view recomput again save howev realiz success updat recomput data view occur close time call properti updat local fortun mani applic deal deriv data exhibit properti local occur two form time space updat exhibit time local updat item occur burst space local refer phenomenon base item b affect deriv item d updat like relat set base item affect d updat soon exampl chang bank stock price may indic certain event such interest rate hike affect bank stock occur thu like bank stock price chang too updat could trigger recomput say financ sector index exampl updat local found real financi data report updat local impli recomput deriv data occur burst recomput affect deriv data everi singl updat probabl wast deriv data recomput soon often applic transact chanc read deriv data use work instead recomput immedi better strategi defer recomput certain amount time batch coalesc recomput request singl comput call techniqu recomput batch applic transact may read base data deriv view one import design issu rtdb system whether guarante consist base data view achiev consist recomput deriv data fold trigger updat unfortun run updat recomput coupl transact desir high perform realtim environ make updat run longer block transact need access data inde show transact respons time much improv event action in case updat recomput exampl sp index deriv set stock summari stock price onehour interv could involv hundr data point exampl comput theoret valu financi option price requir comput cumul distribut decoupl separ transact thu assum recomput decoupl updat discuss consist maintain section besid consist constraint applic transact associ deadlin assum firm realtim system is miss transact deadlin make transact useless detriment system arbitrag trade exampl better commit tardi transact sinc shortliv price discrep trigger trade action disappear quickli today effici market occasion loss opportun catastroph system import perform metric thu fraction deadlin rtdb meet section studi number schedul polici section evalu perform meet deadlin tempor correct one requir rtdb system transact read fresh consist data tempor consist refer well data maintain rtdb model actual state environ tempor consist consist two compon absolut consist or extern consist rel consist data item absolut consist time reflect state extern object data item model set data item rel consist valu reflect state extern object time instant one option defin absolut consist opp stale compar current time updat arriv time a timestamp indic snapshot extern object updat repres data item consid stale differ last updat timestamp current time larger predefin maximum age the valu also call absolut valid interv call definit maximum age ma notic ma even data object chang valu must still period updat els becom stale thu make sens applic data item continu chang time anoth option optimist assum data object alway fresh unless updat receiv system yet appli data refer definit unappli updat uu uu suitabl discret data object chang discret point time continu exampl program trade stock price updat trade made period context age less mean sinc price quot could old still correct uu gener ma sinc arriv time updat assum known advanc figur illustr two stale model base data item updat associ view recomput yet databas rel consist clear absolut consist databas must also rel uu updat becom stale commit becom stale new updat request receiv new updat commit item fresh ma updat commit maximum age reach time time item fresh item fresh figur maximum age ma unappli updat uu ativ consist howev convers true exampl rel consist databas never instal updat remain rel consist even though data stale ideal system perform updat recomput instantan would guarante absolut rel consist howev argu improv per formanc updat recomput decoupl recomput batch henc real system often rel inconsist state fortun inconsist data harm transact read them henc need extend concept tempor consist perspect transact here formal defin notion transact tempor consist start definit ideal system first base correct consist real system measur definit instantan system is instantan system appli base data updat perform necessari recomput soon updat arriv take zero time it definit absolut consist system ac absolut consist system applic transact commit time readset r given valu object r set valu found instantan system time t last definit state absolut consist system data never stale inconsist state transact read stale inconsist data clear transact given lower execut prioriti compar updat recomput exampl updat or recomput trigger conflict transact certain data item transact abort maintain absolut consist system may thu compromis transact timeli better chanc meet transact deadlin need upgrad prioriti transact prioriti upgrad two way respect access data cpu former transact abort updat due data conflict latter transact alway schedul execut updat recomput start time time time commit figur figur illustr differ ac weak ac rc suppos transact read object execut maximum stale delta let j th version object ac set object read must o set valu found commit time weak ac object version read o found time earlier start time rc object version avail o found time earlier definit weak absolut consist system weak ac weak absolut consist system applic transact start time readset r given valu object r set valu found instantan system t weak ac similar ac transact system read rel consist data major differ weak ac data transact read need fresh point transact read them transact commit as ac implic transact success readlock set rel consist data need abort later updat due data conflict transact thu better chanc finish deadlin relax requir data fresh allow transact read slightli stale data although desir respect use inform read transact improv probabl meet transact deadlin definit rel consist system rc rel consist system maximum stale delta applic transact start time readset r given valu object r set valu found instantan system time essenti rc allow updat recomput withheld benefit expedit transact execut data absolut consist compromis rel consist maintain note consid weak ac special case rc zero delta figur illustr three correct criteria name ac weak ac rc transact schedul consist enforc section discuss differ polici schedul updat recomput applic transact meet differ level tempor consist requir argu data timeli best maintain updat recomput given higher prioriti applic transact call schedul polici urt for updat first recomput second transact last hand ondemand od strategi updat recomput execut upon transact request better protect transact timeli therefor focu two schedul polici compar perform differ tempor consist requir later on discuss urt od combin odh polici simpl term od h switch urt od depend whether applic transact run system show odh perform better urt od section polici assum rel prioriti among applic transact set use tradit earliestdeadlinefirst prioriti assign start brief remind characterist three type activ updat assum updat arriv singl stream urt polici one updat process system execut updat fcf manner od could multipl updat activ run concurr one arriv new updat other trigger applic transact distinguish latter former label ondemand updat or odupd short recomput updat arriv spawn recomput urt assum recomput batch employ reduc system workload batch trigger recomput goe sleep short newli trigger instanc recomput ignor od recomput execut upon transact request henc batch appli ensur tempor consist howev recomput induc updat may perform bookkeep process even though real recomput process execut immedi ate distinguish recomput trigger ondemand transact bookkeep recomput activ label ondemand recomput or odrecom short applic transact final assum applic transact associ firm deadlin tardi transact useless thu abort system schedul involv priorit three activ respect access cpu data assum data access control lock manag employ hppl protocol high prioriti two phase lock hppl lock holder abort conflict lock request higher prioriti holder cpu schedul complic due variou batchingondemand polici employ discuss schedul procedur activ four scenario scenario correspond use urtod polici acsrc we consid wac special case rc henc explicitli discuss section polici ensur absolut consist defin last section ac system requir item read transact fresh rel consist transact commit time toughest consist requir data timeli urt ensur absolut consist urt repres simpliest case among four sce nario sinc updat process recomput higher prioriti applic transact gener transact execut unless outstand updat recomput done except occur recomput forceddelay for batch case view updat recomput temporarili outdat ensur transact read outdat view recomput issu write lock view spawn goe sleep sinc transact given lowest prioriti hppl lock manag suffici ensur transact restart and thu cannot commit data item base data view transact read set invalid arriv new updat recomput od idea ondemand defer work updat recomput applic transact get bigger share cpu cycl implement od system need ondemand manag odm keep track unappli updat recom putat conceptu odm maintain set data item x base view unappli updat recomput exist we call set unappli set x odm associ unappli updaterecomput od bit signifi whether odupdateodrecom x current execut five type activ od system name updat arriv recomput arriv odupd odrecom applic transact list procedur handl type event follow ffl updat recomput arriv newli arriv updat recomput highest prioriti system updaterecomput p baseview item x first sent od manag odm check x unappli set not x ad set p associ it write lock x request newli arriv updat recomput handl fcf manner write lock set ensur ac sinc run transact read an outdat x restart due lock conflict otherwis od bit check od bit off odm simpli associ p x essenti replac old unappli updaterecomput p od bit on mean odupdateodrecom x current execut od manag abort run odupdateodrecom releas p execut case updat arriv view base x correspond recomput spawn new arriv ffl applic transact read request transact read data item x read request first sent od manag odm check x unappli set so od bit on ie odupdateodrecom run transact wait otherwis odm set od bit on releas od updateodrecom associ x odupdateodrecom inherit prioriti read transact ffl releas odupdateodrecom odupdateodrecom execut usual updat recomput transact finish howev od manag notifi remov updat item unappli set polici ensur rel consist major difficulti ac applic transact easili restart updaterecomput conflict transact rc amelior difficulti allow transact read slightli outdat but rel consist data rc thu meaning maintain multipl version data item version record data valu valid within window time it valid interv notat conveni use numer subscript enumer version data item exampl x repres th version data item x defin valid interv item version x vi stand lower time bound upper time bound valid interv respect given set item version d defin valid interv vi dg is set valu valid throughout entir interv vi d also denot arriv time updat u tsu final recomput applic transact defin valid interv vi t time interv valu read must valid within vi t rc need version manag vm handl multipl version data item function version manag twofold first retriev given item x valid interv valu version x valid within note multipl updat x interv version manag would choic valid version defer discuss version select issu later second vm keep track valid interv transact data version read vm respons chang transact valid interv valid interv data version read transact chang discuss vi manag shortli final note sinc everi write base item view gener new version lock need set item access discuss veryold version prune away keep multivers databas small end section urt similar ac three type activ urt rc ffl updat arriv mention version data item rc associ valid interv updat u data item version x arriv valid interv vi set tsu also utb previou version x igamma set tsu signifi previou version valid till arriv time new updat version manag check see run transact read version x igamma so set utbvi t ffl recomput arriv updat u spawn recomput r view item whose latest version v j system first set utb v j tsu is version v j longer valid tsu onward similar case updat arriv vm updat valid interv run transact read v j batch recomput r put sleep recomput ignor new version v j comput r wake up execut r use newest version data read set valid interv r vi r new view version vi v j equal intersect valid interv data item read r ffl run applic transact given transact whose start time tst first set valid interv tst read data item x consult version manag vm would select version x vi is version x rel consist data alreadi read updat vi vm cannot find consist version ie vi abort note wider vi t is like vm abl find version x consist alreadi read henc studi alway pick version x whose valid interv biggest overlap od appli ondemand rc requir od manag version manag odm vm serv similar purpos describ previous follow modif recal delta maximum stale toler refer transact start time multipl version data maintain od manag keep base item x unappli set list unappli updat x ffl ac singl version databas unappli recomput view item v record odm transact read v know current databas version v invalid howev rc multivers databas valid interv data item alreadi serv purpos identifi right version version found databas system know odrecom trigger therefor odm rc maintain unappli recomput ffl ac od bit data item x set odupdateodrecom current execut updat x od bit use new updaterecomput arriv immedi abort useless odupdateodrecom rc sinc multipl version data kept necessari abort old use odupdateod recom henc od bit use differ version data item appear databas well unappli list version manag need commun od manag retriev right version either databas trigger appropri od updat unappli list here summar key procedur handl variou activ odrc system ffl updat arriv newli arriv updat highest prioriti system handl fcf updat u base item x sent od manag unappli updat associ valid interv valid interv u set tsu previou unappli updat u x odm utb set tsu otherwis latest version x databas utb set tsu similarli view item v depend x latest version databas open utb ie utb updat tsu chang data item utb may induc chang transact valid interv version manger respons updat transact vi ffl run applic transact transact start time tst valid interv initi tst read base item x vm would select version x valid within vi t version unappli odupd trigger od manag odupd inherit prioriti read view item v vm would select version v j valid within vi t version databas found odrecom r comput v trigger odrecom inherit prioriti valid interv process system way applic transact prune multivers databas rc system requir multivers databas od manag keep multipl version updat unappli list remark necessari system keep full histori onlin one way prune away old version maintain virtual clock vc system defin vc minimum start time run transact minu delta version be databas unappli list whose utb smaller virtual clock prune version valid respect transact valid interv thu never chosen version manag virtual clock updat releas commit applic transact hybrid approach od updat recomput perform upon transact request transact load low odupd odrecom execut databas thu stale consequ applic transact may materi quit number item intend read ondemand may caus sever delay transact execut thu miss deadlin simpl modif od execut updat recomput system idl way similar urt switch od transact arriv call hybrid strategi odh simul studi perform schedul polici simul rtdb system characterist describ section section describ specif simul model proceed discuss detail model would like remark purpos simul experi studi perform specif rtdb system use urt ondemand instead aim identifi perform characterist schedul polici meet differ tempor consist requir ment practic rtdb system complex applic transact gener user extrem vari rang one short comput one thousand oper recomput simpl aggreg function one requir complex comput analys model complex result obscur mani intric factor impair understand basic tradeoff schedul polici instead chose rel simpl model captur essenti featur schedul problem observ made comprehens simul model implement necessari compon describ section includ hppl lock manag updat instal disk manag buffer manag od manag for ondemand polici version manag for rc transact manag which handl prioriti assign transact abort restart recomput batch transact schedul simul diskbas databas base item n deriv item view number view base item deriv ie fanout uniformli distribut rang f deriv item deriv random set base item averag valu fanout fanin f f respect assum system cach databas access cach hit rate p cach hit updat gener stream updat burst burst arriv model poisson process arriv rate u burst consist burst size updat valu burst size pick uniformli rang bs min bs max model local updat would probabl p sim trigger set recomput trigger previou updat urt polici recomput batch recomput delay fd second execut instanc recomput ignor applic transact gener anoth stream poisson process arriv rate transact consist number readwrit oper databas object equal probabl access oper transact perform n op databas oper transact associ deadlin given follow formula ext expect execut time transact art arriv time slack slack factor simul slack uniformli chosen rang s min s max valu simul paramet chosen reason valu typic financi applic possibl perform sensit analysi key paramet valu simul written csim simul run gener one data process updat burst tabl show paramet set baselin experi calcul multipli number oper amount io cpu time taken oper chose rel small databas base item model hot item is data item frequent updat caus recomput practic databas would mani cold item well get updat occasion trigger recomput done experi model cold item sinc result show similar conclus simpl model explicitli model cold item paper assum highend disk seagat stlc includ time perform data lock memori access cpu comput assum transact perform complex data analysi perform financi expert system descript paramet valu updat burst arriv rate sec u burst size bsmin bsmax forc delay time sec fd updat similar p sim transact arriv rate sec oper per transact n op slack factor s min s number base item n b number deriv item n fanout f disk access time ms io time per oper ms cpu io cach hit rate p cach hit maximum stale sec delta tabl baselin set result section present select result obtain simul experi compar perform variou schedul polici ac rc base well meet transact deadlin aid discuss use notat md b repres fraction miss deadlin or miss rate schedul polici appli b system exampl md ac mean transact miss deadlin od use ac also graph present below consist use solid line ac dot line rc three schedul polici urt od odh associ differ linepoint symbol absolut consist system effect transact arriv rate first experi vari transact arriv rate compar perform three schedul polici urt od odh absolut consist system figur show result figur see that larg rang urt perform worst among three miss deadlin three major factor account urt high miss rate first sinc transact lowest prioriti execut often block updat recomput in term cpu data access caus sever delay thu high miss rate transact call factor low prioriti second urt recomput batch recomput immedi execut arriv forc sleep short hold write lock deriv item say v updat transact request item v experi extend delay transact miss rate arriv rate applic transact urtac odac odhac figur miss rate vs ac transact miss rate arriv rate updat burst urtac odac odhac figur miss rate vs u ac block sleep recomput call factor batch wait third ac transact restart updat recomput whenev data item transact read get new valu restart transact lose slack risk miss deadlin similarli recomput restart updat engag data conflict restart recomput mean ad extra high prioriti workload system urt intensifi low prioriti factor caus miss deadlin call restart factor transact restart experi result observ averag restart rate transact due lock conflict recomput remark even though restart rate recomput high effect could signific sinc recomput gener numer long use ondemand approach transact given fair share cpu cycl disk servic henc od effect elimin low prioriti factor also recomput execut ondemand henc batch wait exist result smaller miss rate baselin experi figur see md ac od smaller md ac urt improv about larg good lower expect all argu od remov two three advers factor urt moreov interest see transact arriv rate small reduc transact workload ie reduc actual increas md ac od reason anomali lowerthanexpect improv pure od polici updat recomput execut transact request henc small total number ondemand request small mani databas item therefor stale transact execut quit item read outdat thu odupdatesodrecom trigger transact block wait ondemand request finish caus long respons time thu high miss rate evid figur show number odupd odrecom per transact respect see mani updat recomput trigger and transact recomput restart would precis term howev use shorter form save space no od updat per transact arriv rate applic transact odac odhac figur number odupd per transact no od recomput per transact arriv rate applic transact odac odhac figur number odrecom per transact block averag transact od polici call advers factor od wait order improv od perform databas kept fresh ondemand request issu one simpl approach appli updat recomput as urt transact present transact arriv howev up datesrecomput suspend system revert ondemand call polici odh odh thu consid hybrid od urt figur show odh greatli improv perform od particular anomali higher miss rate lower transact arriv rate exhibit od vanish odh improv attribut small number ondemand request figur effect od wait thu rel mild problem transact restart howev still exist odh appli ac effect updat arriv rate anoth experi vari updat arriv rate figur show result see larger u caus miss deadlin schedul polici updat impli higher updat load recomput directli intensifi effect low prioriti batch wait transact restart also higher updat rate caus data item becom stale faster worsen effect od wait henc polici suffer among three md ac urt increas rapidli u sinc affect three factor contrari odh suffer least sinc mainli affect transact restart onli effect slack next experi test sensit three polici transact slack figur show miss rate versu maximum slack max figur see slack tight eg od rise sharpli smax decreas recal od suffer transact run stale data case transact wait od request finish od wait thu import transact given enough slack live wait word od sensit amount slack transact have order improv od perform again key keep databas fresh possibl eg odh figur see odh maintain small miss rate rel unrattl even small slack situat transact miss rate maximum slack urtac odac odhac figur miss rate vs max ac rel consist system previou discuss illustr ac urt suffer three advers factor name low prioriti batch wait transact restart three factor lead high md ac urt switch urt od elimin low prioriti batch wait introduc od wait show hybrid approach odh greatli reduc effect od wait see figur henc culprit left tackl transact restart mention section rc use multivers databas updat recomput creat new data item version thu caus writeread conflict transact transact therefor never get restart data conflict updatesrecomput case transact abort due data access occur urt version manag could find materi data version consist vi transact request item experi observ chanc abort small eg transact abort baselin experi urt ondemand strategi would perform abort sinc data version materi ondemand result rc effect elimin problem transact restart figur show miss rate three schedul polici rc dot line comparison miss rate ac solid line also shown figur magnifi part contain curv md ac odh md rc odh clariti figur see fewer deadlin miss rc ac across board problem transact restart elimin rc among three polici urt regist biggest improv transact read deriv item choos old materi version thu never wait sleep recomput wake calcul new version item batch wait therefor exist rc henc two three detriment factor plagu urt gone lead much smaller miss rate transact miss rate arriv rate applic transact urtac odac odhac urtrc odrc odhrc figur miss rate vs ac rc transact miss rate arriv rate applic transact odhac odhrc figur miss rate vs md ac odh md rc no od updat per transact arriv rate applic transact odrc odhrc figur number odupd per transact no od recomput per transact arriv rate applic transact odrc odhrc figur number odrecom per transact rc od see improv achiev rc big case urt becaus although transact restart elimin problem od wait fix figur show number odupd odrecom per transact respect rc compar curv figur figur see that od averag transact trigger less number od request two system recal transact would issu od request attempt read notyetmateri data item ac item one the latest version transact forc issu od request latest version yet updat hand rc item multipl version transact avoid issu od request find materi version within transact valid interv theori fewer od request issu rc ac unfortun pure od polici activ perform updat recomput henc data version materi transact read them effect od wait therefor get improv discuss effect od wait strongest transact scarc figur see md rc od much higher md rc urt small last subsect explain odh reduc transact miss rate avoid three four advers factor face urt od figur show perform odh improv rc elimin transact restart essenti appli odh rc system rid advers factor discuss md rc odh close except big transact arriv rate high miss deadlin caus mainli cpu disk queue delay figur see improv md rc odh md ac odh signific exampl half deadlin miss ac salvag rc percentag save deadlin rc even mark small conclus paper defin tempor consist perspect transact absolut consist system transact cannot commit data read becom stale transact commit time show consist constraint strict often result high transact miss rate transact allow read slightli stale data howev system perform greatli improv use multivers databas defin rel consist system one transact read rel consist data item item certain threshold delta older transact start time argu rel consist system higher potenti meet transact deadlin studi three schedul polici urt od odh system three type activ updat recomput applic transact present discuss polici implement realtim databas system ensur absolut consist rel consist show ac use urt easiest implement hppl lock manag simpl static prioritydriven schedul suffic system howev could high transact miss rate improv perform two techniqu consid one perform updat recomput ondemand relax tempor consist constraint absolut rel implement techniqu add complex implement though exampl ondemand manag need od version manag need rc show pure ondemand strategi perform well system transact arriv low rate tight deadlin improv pure od polici third techniqu combin benefit urt od studi result schedul polici odh shown perform much better other carri extens simul studi perform three schedul polici ac rc identifi four major factor advers affect perform polici factor low prioriti batch wait transact restart od wait differ polici coupl differ consist system suffer differ combin factor tabl summar result perform ac rc urt od odh urt od odh low prioriti theta theta batch wait theta transact restart theta theta theta od wait theta theta tabl factor caus miss deadlin studi show odh appli rc result smallest miss rate r schedul realtim transact perform eval uation appli updat stream soft realtim databas system databas support effici maintain deriv data transact boundari activ databas perform perspect multidatabas system track retriev financi data predict consist realtim databas system ssp semanticsbas protocol realtim data access survey logic model tempor data maintain tempor consist pessimist vs optimist concurr control schedul transact tempor constraint exploit data semant tr realtim databas realtim databas predict consist realtim databas system appli updat stream soft realtim databas system tempor realtim databas maintain tempor consist databas support effici maintain deriv data schedul realtim transact multidatabas system track retriev financi data schedul transact tempor constraint ctr kamyiu lam guo hui li teiwei kuo multivers data model execut realtim transact mobil environ proceed nd acm intern workshop data engin wireless mobil access p may santa barbara california unit state ben kao kamyiu lam brad adelberg reynold cheng toni lee maintain tempor consist discret object soft realtim databas system ieee transact comput v n p march kamyiu lam teiwei kuo ben kao toni s h lee reynold cheng evalu concurr control strategi mix soft realtim databas system inform system v n p april