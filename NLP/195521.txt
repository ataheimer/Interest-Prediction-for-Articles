t trapdriven simul tapeworm ii a tapeworm ii softwarebas simul tool evalu cach tlb perform multipletask oper system intens workload tapeworm resid os kernel caus host machin hardwar drive simul kernel trap instead address trace convent done allow tapeworm quickli accur captur complet memori referenc behavior limit degrad overal system perform paper compar trapdriven simul implement tapeworm common techniqu tracedriven memori simul respect speed accuraci portabl flexibl b introduct tracedriven simul probabl popular method evalu memori system architectur consist cach tlb smith holliday techniqu work well design memori system support singletask user intens applic found spec benchmark suit gee spec howev grow bodi work show memori system tune type work trapdriven simul tapeworm ii richard uhlig david nagl trevor mudg stuart sechrest depart electr engin comput scienc univers michigan email uhligeecsumichedu bassooneecsumichedu work support defens advanc research project agenc darpaaro contract number daalc nation scienc foundat cise research instrument grant no cda digit equip corpor grant nation scienc foundat graduat fellowship load perform well interact digitalmedia appli cation distribut file system databas requir frequent interact oper system task agarw anderson chena cvetanov mogul nagl nagl uhligb ousterhout unfortun tracedriven simul tool limit singl usermod task thu cannot captur signific portion memori system activ applic tracedriven simul oscap tend reli expens hardwar monitor equip gener portabl develop softwarebas tool call tapeworm ii attempt overcom limit tapeworm simul driven trace trap oper system kernel tapeworm resid kernel trap correspond simul tlb cach miss approach three princip advantag complet speed portabil iti tapeworm simul complet trap origin user task even os kernel itself tapeworm fast simul invok uncommon case tlb cach miss final tapeworm softwar base port system provid support certain primit despit advantag method suffer certain drawback although capabl simul tlb cach differ size associ trapdriven simul gener less flexibl tracedriven approach respect simul architectur structur write buffer instruct pipelin tapeworm presenc system also introduc new form measur bia though strictli disadvantag trapdriven simul also sensit inher variat memori system perform issu gener ignor tracedriven simul studi paper present detail descript tapeworm design section use prototyp compar strength weak trapdriven simul tracedriven simul section begin discuss relat work next section relat work captur multitask os activ memori architectur studi tradit reli hardwar instrument tech appear th intern confer architectur support program languag oper system asplosvi octob san jose california niqu either attach extra hardwar run system modifi exist hardwar or microcod design architectur agarw alexand clark cvetanov flanagan nagl torrella unfortun hardwar approach costli implement usual tie singl machin overcom limit recent research extend softwareonli instrument techniqu includ multiprocess os activ mogul borg describ system task multitask workload instrument make entri systemwid trace buffer mogul amodifi oper system kernel interleav execut differ userlevel workload task accord usual schedul polici invok memori simul whenev trace buffer becom full chen extend techniqu includ annot os kernel itself thu enabl complet account system activ chenb simul avoid trace entir driven instead kernel trap tool use privileg machin oper caus underli host hardwar filter hit simul memori structur trap simul miss one exampl approach first gener tapeworm perform tlb simul nagl uhliga system intercept kernel trap softwaremanag tlb miss handler rbase decstat drive tlb simul user kernel miss intercept tapeworm abl fulli consid multitask os effect differ tlb configur talluri describ similar trapdriven tlb simul run sparcbas workstat talluri anoth exampl wisconsin wind tunnel wwt simul also base kernel trap set clear modifi errorcorrect code ecc check bit sparcbas cm reinhardt unlik tapeworm perform uniprocessor simul includ multitask kernel refer wwt design investig multiprocessor cach coher algorithm captur os activ work share properti tracedriven trapdriven simul cmelik lebeck martonosi hybrid approach annot program invok simul handler everi memori refer system simul optim call null handler memori locat known simul cach tlb paper advanc previou work two signific way first describ design secondgener tapeworm combin oscap featur origin tapeworm tlb simul wwtlike mechan set finegrain memori trap result simul capabl cach tlb simul captur multitask os kernel activ second use tapeworm prototyp investig posit neg aspect trapdriven simul gener paper primarili studi pro con trap driven simul exampl actual studi oper system architectur interact use tapeworm see nagl nagl uhligb tapeworm design tapeworm algorithm tapeworm simul algorithm best explain contrast essenti featur tradit tracedriven simul shall use term cach follow di cussion although method appli equal well tlb simul core tracedriven simul execut loop similar shown left side figur process step includ obtain next address trace search address simul cach invok replac polici event miss trace address come file creat traceextract tool might gener on fli annot workload agarw borg chenb cmelik egger holliday hsu laru laru magnusson mip mogul site smith search procedur involv index data structur repres cach then depend associ cach perform one comparison test hit though simpl oper search test must perform everi address trace tapeworm oper differ principl driven address trace trap oper system kernel tapeworm resid tapeworm begin simul set trap memori locat workload address space locat trap set repres memori locat current resid simul cach structur workload execut first refer locat caus trap kernel direct tapeworm simul trap repres simul cach miss need search data structur repres simul cach tapeworm simpli count miss clear trap requir memori locat clear trap effect cach memori locat figur tracedriven versu trapdriven simul algorithm core execut loop tracedriven trapdriven simul code abstract away mani detail actual simul treatment write assign penalti differ type miss eg criticalwordfirst cach singlepass simul usi ng stack algorithm also complex structur mattson sugumar thompson trapdriven kernel trap invok tw_missaddress tw_missaddress tracedriven address next_addresstrac searchaddress els simul cach structur subsequ refer locat trap proceed full hardwar speed tapeworm set new trap differ memori locat accord replac polici emul displac simul cach structur tapeworm design offer number advantag tracedriven simul first annot rewrit workload requir trap dynam set clear workload run second tapeworm kernel privileg allow easili set trap userlevel task well kernel itself enabl studi multitask os interact third tapeworm use underli hardwar filter hit simul cach structur provid speed advantag convent tracedriven simul see section tapeworm primit although outlin core tapeworm algorithm number import detail mechan set memori trap polici regist workload page tapeworm need clarifi tabl describ key tapeworm primit tapeworm oper set clear trap perform tw_set_trap tw_clear_trap implement mani machin use variou privileg oper intend diagnost debug see tabl exampl trap set use diagnost mode alter pariti bit given memori locat rein hardt subsequ use memori locat result memori pariti error trap trap clear restor correct pariti memori locat mechan tabl tapeworm primit detail routin descript set memori trap start pa physic address extend size byte subsequ use memori locat region trap kernel pass control tapeworm previous set memori trap start pa extend size byte subsequ use memori region workload may proceed uninterrupt tw_register_pagetid p v regist page tapeworm page ad set trap physic memori locat start page address p task id tid virtual physic page map defin pv record tapeworm enabl virtuallyindex physicallyindex cach simul tw_remove_pagetid p v remov page defin tid p v tapeworm domain page remov flush simul cach clear trap memori locat tw_attributestid simul inherit set tapeworm attribut task identifi tid tid zero signifi kernel nonzero valu simul regist task tapeworm nonzero valu inherit indic initi valu simul attribut children task tw_replacetid pa va insert miss memori locat defin pa for physicallyindex cach va for virtuallyindex cach data structur simul cach need tid use form part cach or tlb tag displac entri select basi variou simul paramet cach size line size associ return call instruct data breakpoint page valid bit work equal well support host hardwar tw_set_trap tw_clear_trap accept size paramet support rang simul paramet variou page size tlb simul variou line size cach tabl privileg oper use trapdriven simul tabl summar privileg oper use build block trapdriven memori simul common oper mani exist architectur see tabl privileg oper descript memori pariti ecc trap trap os kernel detect memorypar iti error read write oper enabl softwar chang pariti bit associ memori locat instruct break point trap os kernel breakpoint instruct encount data breakpoint trap os kernel specif data memori locat read written size support differ size page typic page size rang byte mbyte ns r uc counter count total number instruct execut processor simul actual trap mechan select underli implement routin depend size trap requir tlb simul granular larg page valid bit effect particularli machin support variabl page size memori pariti trap breakpoint perhap set cluster one best choic cach sim ulat requir granular order cach line use memori pariti ecc check bit caus kernel trap interfer intend purpos detect true memori error practic problem memori error frequent possibl distinguish true ecc error caus tapeworm experi neither condit true tapeworm inact system run log one true singlebit ecc error nearli year oper even tapeworm activ correctli detect true memori error high probabl note previous workload requir previou modif tapeworm simul trap set clear dynam task run work tapeworm requir assist os virtual memori vm system task fault first access page vm system regist page tapeworm use tw_register_pag call page mark valid vm system set trap memori locat page futur refer part page invok tapeworm cach miss handler parallel routin call tw_remove_pag use vm system remov page tapeworm domain unmap due task termin page secondari storag tw_remove_pag clear trap page flush simul cach mimic action perform vm system host machin real cach vm system map one virtual page given physic page must still regist map tapeworm use tw_register_pag situat tapeworm increment refer count physic page set new memori trap enabl new task benefit share entri brought cach anoth task would happen real system similarli tw_remove_pag decrement refer count flush page simul cach refer count reach zero minor modif tw_register_pag tw_remove_pag primit enabl tapeworm support form cach set sampl enhanc speed implement tracedriven simul set sampl use filter trace contain exactli address map certain subset cach set kessler puzak miss locat use form estim total number cach miss less trace use set sampl reduc tracedriven simul time preprocess overhead construct trace sampl rather filter address softwar obtain sampl tapeworm exploit trap framework make host hardwar perform function much lower cost accomplish modifi tw_register_pag set trap memori locat map specif cach set given sampl memori loca implement tapeworm decstat make use singleerror correct doubleerror detect ecc code trap set flip specif ecc check bit among total check bit assign bit data tapeworm detect singlebit error check data bit posit detect doublebit error know true error occur case tlb simul page valid bit may use tapeworm set trap extra bit maintain softwar indic true state page resid physic memori not tion part sampl never caus miss trap effect filter simul overhead result tapeworm slowdown decreas direct proport degre sampl addit benefit method differ sampl obtain simpli chang pattern trap regist tapeworm page tracedriven simul full trace must reprocess obtain new set sampl tapeworm support cach simul workload consist multipl task control task includ given simul assign twotapeworm attribut simul inherit store extend version os task data structur attribut set call tw_attribut task identifi specifi task assign new attribut to zero task identifi use indic os kernel itself simul zero the default valu task run system without intervent tapeworm nonzero simul indic current futur page touch task must regist tapeworm via tw_register_pag call second attribut inherit defin initi valu simul children task word task fork child task inherit tapeworm attribut parent follow childsimul parentinherit childinherit parentinherit differ set simul inherit pair use common simul situat exampl attribut set shell task workload start shell workload children regist tapeworm shell task itself howev exclud simul inherit mechan greatli simplifi simul workload complex task fork tree sdet kenbu multistag optim compil see tabl anoth common attribut use task itself children simul combin use regist kernel page tapeworm final primit tabl tw_replac direct analogu replac routin tracedriven simul maintain data structur repres simul cach insert new entri select other displac accord predefin simul paramet implement entir softwar simul configur restrict way tlb cach structur underli host hardwar exampl simul cach may either smaller larger size cach underli host machin larger simul cach simpli set fewer trap workload memori locat similar adjust use tw_replac simul differ line size associa tiviti well complex cach structur includ split unifi multilevel cach addit tw_replac access actual virtualtophys page map establish vm system simul either virtual physic cach index design summari tapeworm kernel privileg work close cooper vm system includ page task well kernel itself inherit tapeworm attribut task fork greatli simplifi problem captur activ complex multitask workload allow differ combin task cach effect simul not tapeworm attribut enabl experi measur isol task interfer effect final fulli optim common case cach hit use set sampl tapeworm fast tapeworm implement experi implement tapeworm tlb instruct cach simul mach oper system kernel run mip rbase decstat hardwar mechan select set clear trap page valid bit ecc check bit section use implement studi effect tapeworm design meet three main goal simul complet speed portabil iti also discuss difficulti encount implemen tation suggest inexpens hardwar support could increas tapeworm flexibl enhanc speed valid accuraci tapeworm result assist comput metric miss ratio use hardwar monitor system call monster base da logic analyz nagl system allow us unobtrus count total instruct stall cycl comparison tracedriven simul use cach memori simul mip driven pixiegener trace smith note pixi gener userlevel address trace singl task widespread use pixi make repres tracedriven simul environ tabl tabl summar workload use studi except spec benchmark xlisp espresso eqntott common characterist workload consist multipl task andor spend signific fraction time execut os servic speed origin implement tapeworm miss handler written entir c requir cycl exe cute similar cycl count similar oper wisconsin wind tunnel simul lebeck optim handler rewrit entir assembl code bypass usual kernel entri exit code new code requir execut stack save minim number regist care code final optim handler requir cycl handl simul miss directmap cach word line size see tabl compon time higher degre associ slightli increas time tw_replac longer cach line increas cost tw_set_trap tw_clear_trap simul differ cach size littl effect time although cycl cost kernel trap greater averag cost gen tabl workload summari benchmark compil ultrix mip c compil version level optim workload descript xlisp lisp interpret written c configur solv queen problem spec benchmark espresso boo l ean funct benchmark eqntott translat logic represent boolean equat truth tabl spec benchmark mpeg_play mpeg_play v berkeley plateau research group display frame compress video file patel jpeg_play xloadimag program written jim frost display four jpeg imag ousterhout john ousterhout benchmark suit oust erhout sdet multiprocess system perform benchmark includ program test cpu perform os perform io perfor manc spec sdm benchmark suit kenbu simul user activ researchori softwar develop environ spec sdm benchmark suit tabl workload oper system summari monster monitor system use obtain instruct count fraction time spent differ task experi perform mach kernel version mk userlevel bsd unix server version uk decstat x display server version releas run time total elaps time second user task count total number task creat not includ x bsd server execut workload workload instr run time sec kernel bsd server server user task user task count espresso mpeg_play jpeg_play ousterhout sdet kenbu erat process trace address about cycl per address cach pixi tapeworm trap occur miss tracedriven simul must consid address whether hit miss suggest rough breakeven ratio hit miss tapeworm becom slower breakeven point approxim amount process differ hit miss averag number cycl per address cach vari depend ratio hit miss tabl tapeworm miss handl time tabl show total number cycl requir handl tapeworm cach miss along compon handler number instruct time simul directmap cach word line size comparison also show averag number cycl per address hit miss cach simu lation note averag includ time gener address onthefli pixieannot workload routin name instruct kernel trap return cycl per miss tapeworm cycl per address cach cach see bottom tabl poorli perform cach exhibit miss ratio higher tapeworm typic outperform tracedriven simul cach moreov contrast tracedriven simul tapeworm work better larger cach and thu smaller miss ratio best measur overal simul speed actual time requir perform simul interest comparison onthefli simul techniqu abl measur lengthi comput therefor defin slowdown ratio simul trap or trace gener overhead run time uninstru workload overhead time ad workload run either tapeworm pixi cach normal workload run time unmodifi run host machin decstat figur show tapeworm slowdown vari cach size mpeg_play workload comparison cach simul slowdown decreas cach size increas differ reason tapeworm slowdown decreas nearli zero larger cach number trap tapeworm miss handler approach zero cach slowdown decreas slightli less manipul data structur requir hit search onli miss search replac howev cach slowdown never fall even largest cach smallest size cach figur comparison tracedriven tapeworm slowdown tapeworm slowdown compar cach simul driven pixiegener instruct address trace simul mpeg_play differ size directmap instruct cach word line bytesword pixiecach combin measur singletask workload tapeworm attribut set measur activ mpeg_play task exclud x display server bsd unix server kernel refer howev slowdown case comput use total wallclock run time workload includ time x bsd server cach size miss cach slowdown tapeworm slowdown slow cach size kbyte slowdown tapewormoverhead normal workload runtim slowdown pixi cacheoverhead normal workload runtim kbyte miss ratio tapeworm still outperform cach factor although simul cach higher associ larger cach line increas tapeworm miss handl time slightli structur typic experi fewer miss overal thu actual lead faster simul figur show tapeworm slowdown broader rang cach configur slowdown report thu far simul without sampl figur illustr speed benefit set sam pling give result smallest cach size note tapeworm slowdown larger cach suffici small avoid need sampl altogeth notic slowdown decreas direct proport fraction set sampl how ever sampl increas measur varianc examin effect addit sourc variat perform measur next section complet accuraci section examin issu simul accuraci begin illustr import includ multitask kernel refer compar rel contribut differ workload compon user server kernel overal icach miss count isol compon way also abl partial valid result compar user compon singleusertask workload pixiedriven figur tapeworm slowdown differ simul configur figur left show tapeworm slowdown cach vari degre associ line size figur top show benefit set sampl term reduc slowdown increas degre sampl notat mean half cach set sampl figur workload mpeg_play g g g g g slowdown cach size kbyte g word g g g g g slowdown cach size kbyte g way way way g g g g g slowdown cach size kbyte g sampl cach simul next studi problem measur variat due os effect set sampl use variou tapeworm featur isol measur effect remov individu contribut effect overal measur varianc final conclud comment measur bia due tapeworm presenc run system miss contribut workload compon tabl show typic icach miss count miss ratio workload kbyte cach tabl show number miss kernel bsd x server user task allow run dedic cach activ column give result workload compon share singl cach due cach interf user task mean sever task children shell workload initi lump task togeth simul use tapeworm inherit attribut server task x display server bsd server exist prior initi workload refer server task kernel system compon workload cach share multipl user task case kenbu sdet ousterhout enc among individu workload compon sum individu miss column less activ column note first spec benchmark eqntott espresso exhibit low miss count overal consist previou observ mani spec benchmark requir small icach run well gee server kernel contribut major total miss even contribut total number miss neglig workload mpeg_play jpeg_play sdet ousterhoutexhibit predomin server kernel miss much higher overal miss ratio ousterhout exampl total miss ratio mostli due system compon interfer effect simul consid usertask compon ousterhout would incorrectli estim icach miss ratio less workload suit greater fraction miss come user task xlisp which incident perform much better cach slightli larger tabl miss count miss ratio contribut differ workload compon tabl give number miss in million miss ratio in parenthes differ workload compon data collect run separ trial workload run dedic directmap cach kbyte word line whenev possibl eg singletask workload trace give miss ratio predict tracedriven simul use pixiecach activ give total miss count workload compon share cach note cach interfer effect valu column greater sum individu compon differ shown last column entitl interfer miss ratio rel total number instruct workload instruct given workload compon henc miss ratio individu compon plu interfer sum total miss ratio given activ workload trace user task server kernel activ interfer espresso jpeg_play kenbu _______ mpeg_play ousterhout _______ sdet _______ xlisp note abov compar tapeworm miss count user task compon workload pixiedriven cach simul purpos valid wherev comparison possibl ie singleusertask work load tapeworm miss count user portion workload nearli ident report cach shall see next section measur variat bia make valid tapeworm result workload compon eg server kernel inher difficult problem sourc measur variat tracedriven simul trace given workload typic use repeatedli obtain perform measur differ memori configur result tracedriven simul exhibit varianc simul given memori configur repeat howev precis sequenc trap drive tapeworm simul impossi tabl variat measur memori system perform measur includ trial apiec taken use set sampl consid activ includ kernel server simul line directmap physicallyindex cach x mean number miss standard deviat trial set number parenthesi percent mean valu rang percent differ mean valu minimum maximum workload minimum maximum rang espresso jpeg_play mpeg_play ousterhout sdet tabl variat due set sampl tabl isol degre set sampl vari cach perform measur tapeworm remov sourc variat consid activ espresso process no kernel server simul virtuallyindex cach word line directmap two set data point measur without sampl consist trial each error bar plot repres one standard deviat size kbyte sampl tabl variat due page alloc tabl show page alloc alon vari cach perform tapeworm remov sourc variat consid activ mpeg_play process no kernel server sampl two set data point physic virtuallyindex cach word line directmap data point averag trial error bar plot repres one standard deviat size kbyte physic index virtual index number cach size kbyte address cach virtual address cach averag number cach size kbyte ble reproduc run run dynam system effect exampl distribut physic page frame alloc task chang run run affect sequenc address seen physicallyindex cach kessler site thi turn caus variat cach miss ratio anoth sourc measur perform varianc caus tapeworm employ set sampl result tabl measur extent effect workload suit report statist multipl experiment trial measur simul byte physicallyindex cach use th sampl cach set note standard deviat differ measur trial rather larg rang high mean valu case minimum maximum valu differ mean much factor two isol measur variat caus set sampl remov pagealloc effect simul virtual index rather physicallyindex cach new trial perform without sampl result shown tabl exampl espresso expect result without sampl show zero varianc multipl trial experi notic result without sampl consist predict slightli higher miss count sampl measur bia discuss complet next section due increas time dilat effect increas slowdown nonsampl experi tabl show degre page alloc vari cach perform remov sampl variat simul workload mpeg_play exampl physi callyindex virtuallyindex cach virtual index cach simul exhibit zero variat sequenc refer cach independ distribut physic page frame assign os run run essenti assumpt made tracedriven cach simul notic kbyte physicallyindex cach simul result vari page size machin kbyte page alloc appear page overlap cach kbyte smaller physicallyindex cach greatest degre variat as percent mean appear cach size k byte roughli size program text use mpeg_play variat decreas larger smaller cach observ consist probabilist model cach page conflict publish kessler kessler model predict random page alloc probabl cach conflict peak size cach roughli equal address space size workload decreas larger smaller cach final notic variat due page alloc compar to larger than set sampl suggest error introduc sampl reason trade increas speed simul physicallyindex cach cours combin effect sourc varianc greater either isol forc larger number trial perform increas level confid mean valu addit page alloc observ sourc memori system perform variat due os effect exampl observ gradual but substanti increas tlb miss due kernel server memori fragment longrun system import note tapeworm sensit sourc perform variat necessit multipl experiment trial liabil perform variat due page alloc memori fragment real system effect consid necessari howev tapeworm simul configur remov effect produc measur less variat like tradit tracedriven simul exampl shown tabl sourc measur bia tapeworm presenc kernel workload oper rais question measur bia although tapeworm care avoid set trap code data never directli chang miss count indirect way tapeworm alter result first kbyte physic memori alloc tapeworm boot time remov page free memori pool result possibl increas page activ minim problem ad enough addit physic memori page avoid altogeth second sourc error caus tapeworm slowdown result system time dilat effect caus clock interrupt run workload lead increas cach conflict miss figur plot magnitud error induc time dilat notic error grow steepli slowdown level larger slowdown tapeworm slowdown bia tend amount slowdown vari workload tabl measur variat remov measur made tabl variat due sampl page alloc remov accomplish configur tapeworm simul virtuallyindex cach without set sampl workload minimum maximum rang espresso jpeg_play mpeg_play ousterhout sdet workload time dilat cannot remov simpl adjust clock interrupt frequenc done borg chenb collect time dilat curv larger set workload determin shape magnitud figur so possibl adjust simul result factor away form systemat error final sourc bia relat mask certain tapeworm memori trap decstat singlebit ecc error rais hardwar interrupt line caus kernel trap interrupt disabl kernel trap cannot occur result reduct cach miss seen tapeworm kernel run interrupt mask limit affect kernel refer further small fraction kernel code affect special code around region help tapeworm take cach effect account portabl eas portabl tapeworm care partit hardwaredepend hardwareindepend section further minim amount code actual run ker nel control system call interfac userlevel x figur error due time dilat increas cach miss due time dilat measur mpeg_play workload includ system activ kernel server run physicallyaddress kbyte directmap icach word line time dilat vari chang degre sampl dilat increas increas dilat slowdown applic see tabl hardwaredepend code consist primarili modifi kernel entri code two routin tw_set_trapandtw_clear_trap can principl implement mani machin see tabl practic unexpect interact compon memori system hinder attempt implement primit archi tectur exampl port tapeworm decstat decstat hinder due differ way dma implement two machin intent hardwar support primit could help avoid problem also reduc time set clear trap implement oper perform issu convolut sequenc control instruct mem orycontrol asic implement ecc logic piec togeth memori address ecc error ie address tapeworm cach miss also requir dozen load shift add mask instruct could support singl load believ cleaner interfac diagnost function memori asic could reduc total misshandl time cycl increas tapeworm speed anoth factor although expens direct support form trap bit memori locat could decreas cost set clear trap support would use applic debugg distribut share memori appel despit problem port tapeworm run osf mach oper system decstat s decstat s base gateway pc flexibl respect flexibl tapeworm troubl simul memori structur fit cach model exampl write buffer queue hold content short time cannot simul tapeworm algo rithm limit restrict simul writeback write polici furthermor unlik tracedriven simul easili effici extend simul architectur structur instruct pipelin trapdriven approach seem limit simul memori system hierarchi compon problem flexibl inher trapdriven simul relat specif limit host hardwar exampl decstat ecc bit check word cach line refil effect limit simul tapeworm cach line size multipl word machin attempt implement data cach simul particular machin hinder no allocateonwrit polici caus ecc trap clear without invok tapeworm miss handler machin use allocateonwrit polici data cach simul possibl reinhardt final although miss count provid similar oper perform miss handler r softwaremanag tlb requir cycl tabl tapeworm code distribut code line machinedepend kernel code machineindepend kernel code machineindepend user code tapeworm use metric right studi requir measur miss ratio miss per instruct mpi obtain instruct count use logic analyz much conveni method would onchip instruct counter case intent hardwar support trapdriven simul primit could overcom problem summari futur work develop tapeworm demonstr onthefli cach tlb simul driven kernel trap greatli simplifi problem evalu memori structur workload includ multipl task oper system load moreov measur tapeworm perform show simul perform rather small degrad overal system perform open import new area consider fast simul creat possibl examin wider rang altern configur investig variabl result repeat run workload simul driven memori refer gener actual user session tapeworm slowdown made impercept user make possibl watch interest case cannot identifi tradit batch simul use continu monitor simul open possibl use result perform realtim hardwar softwar tune futur gener simul monitor driven kernel trap would benefit better hardwar support gener trap read write particular memori locat better support result even faster flexibl simul continu develop add featur tapeworm simul current ad datacach simul capabl port tapeworm architectur includ dec alphabas workstat sparcbas machin acknowledg thank joel emer bill grundmann essenti inform decstat memorycontrol asic thank also go alessandro forin help mach tabl privileg oper modern microprocessor entri tabl taken varieti sourc includ data book text book microprocessor report mreport mreport given entri may true everi implement given processor featur memoryparityerror trap actual systemimplement depend featur affirm entri mean found least one system given microprocessor implement featur blank entri mean insuffici data avail privileg oper mip r mip r sparc dec alpha tera intel intel pentium power memori pariti ecc trap ye ye ye ye ye ye instruct breakpoint invalid page trap variabl page size instruct counter trap handler chihchieh lee implement tapeworm port r cach perform oper system multiprogram workload atum new techniqu captur address trace use micro code translat buffer perform unix environ interact architectur oper system design virtual memori primit user program gener analysi long address trace softwar method system address trac ing impact oper system structur memori system perform cach perform vax fast instructionset simul execut profil character alpha axp perform use tp spec work load techniqu effici inlin trace sharedmemori multiprocessor bach byu address collect hardwar cach perform spec benchmark suit techniqu cach memori simul use address refer trace introduct shade analysi multimegabyt secondari cpu cach memori page placement algorithm larg realindex cach abstract execut techniqu effici trace program effici program trace new abstract memori system simul design effici simul multiprocessor effect trace sampl perform debug tool evalu techniqu storag hierarchi effect context switch cach perform monster tool analyz interact oper system comput architectur design tradeoff softwaremanag tlb optim alloc onchip memori multipleapi oper system oper system get faster fast hardwar perform softwar mpeg video decod wisconsin wind tunnel virtual prototyp parallel comput er multiprocessor cach analysi atum cach memori trace pixi surpass tlb perform superpag less oper system support character cach synchron perform multiprocessor oper system design tradeoff softwaremanag tlb tr atum new techniqu captur address trace use microcod cach perform oper system multiprogram workload multiprocessor cach analysi use atum effici stack algorithm analysi writeback sector memori techniqu effici inlin trace sharedmemori multiprocessor effect context switch cach perform virtual memori primit user program interact architectur oper system design memspi analyz memori system bottleneck program page placement algorithm larg realindex cach character cach synchron perform multiprocessor oper system design tradeoff softwaremanag tlb wisconsin wind tunnel effect trace sampl perform debug tool impact oper system structur memori system perform shade fast instructionset simul execut profil kernelbas memori simul extend abstract design tradeoff softwaremanag tlb character alpha axp perform use tp spec workload optim alloc onchip memori multipleapi oper system surpass tlb perform superpag less oper system support cach memori cach perform vax translat buffer perform unix enviro effici program trace cach perform spec benchmark suit design effici simul multiprocessor ctr shubhendu s mukherje steven k reinhardt babak falsafi mike litzkow mark d hill david a wood steven husslederman jame r laru wisconsin wind tunnel ii fast portabl parallel architectur simul ieee concurr v n p octob emmett witchel mendel rosenblum embra fast flexibl machin simul acm sigmetr perform evalu review v n p may herv a jamrozik michael j feeley geoffrey m voelker jame evan ii anna r karlin henri m levi mari k vernon reduc network latenc use subpag global memori environ acm sigplan notic v n p sept alvin r lebeck david a wood activ memori new abstract memorysystem simul acm sigmetr perform evalu review v n p may fast dataloc profil nativ execut acm sigmetr perform evalu review v n june alvin r lebeck david a wood activ memori new abstract memori system simul acm transact model comput simul tomac v n p jan madhusudhan talluri mark d hill surpass tlb perform superpag less oper system support acm sigplan notic v n p nov babak falsafi david a wood model costperform parallel comput simul acm transact model comput simul tomac v n p jan richard uhlig david nagl trevor mudg stuart sechrest joel emer instruct fetch cope code bloat acm sigarch comput architectur new v n p may richard a uhlig trevor n mudg tracedriven memori simul survey acm comput survey csur v n p june