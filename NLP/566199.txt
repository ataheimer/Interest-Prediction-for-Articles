t specif verif synthesi concurr control compon a runtim error concurr program gener due wrong usag synchron primit monitor convent valid techniqu test becom ineffect concurr program sinc state space increas exponenti number concurr process paper propos approach concurr control compon concurr program formal specifi verifi automat use model check code concurr control compon automat gener use monitor synchron primit control access share resourc multipleconcurr process sinc approach decoupl concurr control compon rest implement scalabl demonstr use approach appli case studi airport ground traffic controlw use action languag specifi concurr control compon system action languag specif languag reactiv softwar system support infinitest model checker verifi system boolean enumer udbound integ variabl code gener tool automat translat verifi action languag specif java monitor translat algorithm employ symbol manipul techniqu specif notif pattern gener optim monitor class elimin context switch overhead introduc result unnecessari thread notif use count abstract show automat verifi monitor specif arbitrari number thread b introduct write concurr program error prone task concurr programm keep track possibl valu variabl program also state concurr process fail use concurr construct semaphor monitor correctli result runtim error deadlock violat safeti properti convent valid techniqu test becom ineffect concurr program sinc state space concurr program increas exponenti number variabl number concurr process it monitor program languag construct introduc eas difficult task concurr program structur program languag help programm keep track state program variabl provid abstract procedur associ scope rule local variabl access monitor similar mechan structur concurr program provid scope rule concurr sinc monitor integr part java recent concurr program use monitor gain increas attent monitor consist set variabl share among multipl process set associ procedur access them share variabl monitor access outsid procedur time one process allow activ monitor process synchron use specif oper let wait ie sleep receiv signal anoth process wait signal oper coordin use condit vari abl even though monitor provid better abstract concurr program compar construct semaphor still error prone coordin wait signal oper sever condit variabl among multipl process challeng even implement simpl algorithm paper propos new approach develop reliabl concurr program first aspect approach start specif concurr control compon program rather implement use monitor underli concurr control prim itiv present monitor model action languag action languag specif languag reactiv softwar system support synchron asynchron composit hierarch specif show monitor specifi action languag use asynchron compos modul monitor model action languag one import aspect reli condit variabl semant action languag let us get rid condit variabl with associ wait signal oper simplifi specif monitor significantli import compon approach use autom verif tool check properti monitor specif action languag support infinitest model checker verifi falsifi by produc counterexampl behavior invari live or ctl properti action languag specif paper focu verif monitor invari howev approach present paper extend univers portion tempor logic ctl infinitest system specifi action languag model check undecid henc verifi use variou heurist guarante converg produc fals posit fals neg analysi inconclus last compon approach code gener algorithm synthes monitor action languag specif goal gener complet program rather propos modular approach gener concurr control compon program manipul share resourc use case studi airport ground traffic control show effect scalabl tech niqu case studi use fairli complex airport ground network similar seattl tacoma intern air port model checker verifi safeti properti specif case studi code gener tool automat gener optim java class in term context switch overhead would incur multithread applic recent sever attempt adopt model check verif concurr program approach translat concurr java program finit model check use avail model check tool henc reli abil model checker cope state space explos problem howev date model checker power enough check implement concurr program henc recent work verif concurr program effici model construct concurr program approach provid differ direct creat reliabl concurr program sever advantag avoid implement detail program relat properti verifi model construct problem sinc specif languag use model checker associ it push verif earlier stage softwar develop to specif phase rather implement phase reduc cost fix bug howev approach unlik scale gener complet program would requir specif languag express would introduc model construct problem specif stage henc focu synthes concurr control compon correct construct integr concurr program safe anoth aspect approach differ previou work fact use infinit state model checker rather finit state techniqu use infinit state model checker verifi properti specif unbound integ variabl arbitrari number thread work review independ deng et al also present approach combin specif synthesi verif concurr program one crucial differ approach approach present appar otherwis remark similar titl approach autom verif perform specif implement henc approach shield autom verif tool implement detail rest paper organ follow section describ case studi section explain concurr control monitor implement java section use case studi discuss monitor specifi action languag also present gener templat specifi monitor action languag section section discuss monitor specif automat verifi use action languag ver ifier also show use count abstract monitor specif verifi arbitrari number thread section present algorithm automat gener java monitor class monitor specif final section state conclus direct futur work airport ground traffic control case studi present airport ground traffic control case studi demonstr techniqu propos pa per airport ground traffic control handl alloc airport ground network resourc runway taxiway gate arriv depart airplan airport ground traffic control safeti critic hull loss accid associ airport ground oper taxi takeoff land simul play import role airport safeti sinc enabl earli predict possibl runway incurs grow problem busi airport throughout world present concurr simul program model airport ground traffic control use java thread paper demonstr concurr control compon program formal spec ifi automat verifi synthes frame work use airport ground network model use shown figur similar seattletacoma intern airport two runway r l runway r use arriv airplan land land arriv airplan take one exit cc taxi cc arriv airplan need cross runway l cross l continu one taxiway b b bb reach gate park depart airplan use runway l takeoff control logic ground traffic airport must implement follow rule airplan land takeoff use r l airplan use r l moment airplan taxi one exit cc cross runway r runway l figur airport ground network similar seattl tacoma intern airport runway l airplan take moment airplan start use l take none cross exit cc occupi mo ment arriv airplan prioriti depart airplan one airplan use taxiway time give action languag specif airport ground traffic control system section section discuss use action languag verifi automat verifi properti system section show java monitor class synthes action languag specif concurr control monitor monitor synchron primit use control access share resourc multipl concurr process monitor consist set variabl procedur follow rule variabl monitor access procedur monitor execut procedur monitor time view second rule monitor mutual exclus lock process monitor lock activ monitor process call monitor procedur acquir monitor lock execut procedur releas exit synchron provid implicitli monitor semant henc programm explicitli write acquir lock releas lock oper monitor provid addit synchron oper among process base condit variabl two oper condit variabl defin wait signal process perform wait oper condit variabl sleep releas monitor lock awaken signal oper condit variabl wait process awaken reacquir monitor lock resum oper wait process signal oper ignor and forgotten ie affect process execut wait later on wait signal oper implement use one wait queue per condit variabl process execut wait oper condit variabl enter correspond wait queue signal oper condit variabl remov one process correspond wait queue resum oper af ter reacquir monitor lock signal continu semant signal oper signal process keep monitor lock exit wait differ semant addit oper also use signal signal wait semant signalal oper typic condit variabl use execut set statement guard condit becom true achiev thi condit variabl creat correspond guard condit process execut guard statement test guard condit call wait correspond condit variabl guard condit fals process execut statement chang truth valu guard condit signal process wait correspond condit variabl state monitor repres variabl set state safe monitor express monitor invari monitor invari expect hold process access monitor ie guarante hold process activ within monitor procedur monitor java java objectori program languag support concurr program via thread monitor java object mutual exclus lock monitor java implement use object lock synchron keyword block statement declar synchron use lock object synchronizedo f g block execut lock object acquir method also declar synchron equival enclos method within synchron block use object thi ie synchronizedthi f g monitor object java creat declar class privat variabl correspond share variabl monitor monitor procedur declar synchron method meet mutual exclus requir wait signal oper implement wait notifi method java howev java object one wait queue mean notifi call wait process monitor wake up one condit process wait for awaken process recheck condit wait for note that process wait differ condit awaken notifi call lost prevent use notifyal method wake wait process use singl wait queue notifyal method one safe implement monitor java howev implement effici get better effici one use object declar member monitor class condit variabl togeth synchron block object sinc object lock associ wait queue make possibl put process wait differ condit differ queue howev impli one lock use monitor in addit monitor lock one lock per condit variabl use multipl lock java monitor class prone deadlock error specif monitor although monitor provid higher level abstract concurr program compar mechan semaphor still tediou difficult im plement argu action languag use specifi monitor higher level abstract monitor specif action languag reli condit variabl sinc action languag action execut guard evalu true need condit wait figur show action languag specif airport ground traffic control case studi action languag specif consist set modul definit modul definit consist variabl declar restrict express initi express submodul definit action definit modul express semant modul correspond transit system set state set initi state transit relat variabl declar defin set state modul figur implement share resourc airport ground traffic control runway taxi way integ variabl variabl numrwr numc denot number airplan runway r taxiway c respect use enumer variabl local variabl pc submodul airplan encod state airplan arriv airplan one follow state arflow touchdown taxitoxi taxifrxi park state arflow denot airplan air approach airport state touchdown denot airplan land runway r state taxitoxi denot airplan current taxiway go cross runway x state taxifrxi denot airplan current taxiway cross runway x final state park denot airplan park gate similarli depart airplan one follow state park takeoff depflow state park denot airplan park gate state takeoff denot airplan take runway l state depflow denot airplan air depart airport action languag modular languag action languag specif defin term hierarchi modul figur modul main submodul airplan submodul airplan model arriv depart airplan correspond process type or thread class java submodul airplan one local boolean variabl pc use keep track state airplan in note that instanti modul creat differ instanti local variabl set state restrict use restrict express figur variabl numc numrwr numrwl restrict greater equal initi express defin set initi state modul instanc figur variabl numrwr numrwl numc initi initi restrict express submodul conjoin initi restrict express main modul obtain overal initi condit restrict express respect behavior modul ie transit relat defin use modul express modul express which start name modul written combin action submodul use asynchron denot andor synchron denot composit opera tor instanc modul airplan defin term asynchron composit action reqland exitrw on modul main which defin transit relat overal system defin term asynchron composit multipl instanti submodul airplan specif figur specifi system two airplan process figur asynchron composit use atom action action languag defin singl execut step action express action a prime or rang variabl rvara denot nextstat valu variabl unprim or domain variabl dvara denot currentst valu instanc action exitrw modul airplan indic arriv airplan touchdown state pctouchdown taxiway c avail numc next state runway r one less airplan numrwrnumrwr taxiway c use one airplan numcnumc airplan state pctaxitolc note airplan taxi taxiway runway l rout continu taxiway b see figur asynchron composit two action defin disjunct transit relat howev also assum action preserv valu variabl modifi itself formal extend action express expa action conjoin frame constraint exp a denot set differ similarli extend express expa exp a then defin expa asynchron composit two modul defin similarli figur monitor invari expect system satisfi written use spec invari next keyword end main modul action languag keyword invari eventu next synonym ctl oper ag af ax respect specif given figur specifi solut airport ground traffic control without specifi detail implement monitor high level specif compar monitor implement sens that introduc condit variabl wait signal oper error prone give gener templat specifi monitor action languag figur consist main modul list submodul variabl main modul denot varm defin share variabl monitor specif current avail variabl type action languag boolean enumer int ger restrict come symbol manipul modul main integ numrwr numrwl numc initi numrwr numrwl numc restrict numrwr numrwl numc modul airplan enumer pc arflow touchdown park depflow taxitolc taxitolc taxitolc taxitolc taxitolc taxitolc taxifrlb taxifrlb taxifrlb taxifrlb taxifrlb takeoff initi pcarflow pcpark reqland pcarflow numrwr pctouchdown exitrw pctouchdown numc numcnumc numrwrnumrwr pctaxitolc crossrw pctaxitolc numrwl numba pctaxifrlb numcnumc reqtakeoff pcpark numrwl numc numc numc numc numc numc pctakeoff leav pctakeoff pcdepflow airplan reqland exitrw crossrw endmodul spec invariantnumrwr numrwl spec invariantnumc spec invariantnextnumrwl notnumrwl endmodul figur action languag specif airport ground traffic control case studi capabl action languag verifi which extend discuss also allow declar parameter constant exampl declar parameter integ size would mean size unspecifi integ constant ie specif constant verifi verifi possibl valu size submodul correspond process type ie instanti submodul correspond process submodul set local variabl varm atom action actm note that monitor specif goal model behavior process relev properti monitor therefor local variabl varm submodul includ variabl relev correct mon itor transit relat submodul defin asynchron execut atom action simplifi abstract code gener algorithm present follow section restrict form action express follow given action actm expa written expa j l a r l a dsa rsa l a express unprim local variabl modul l a express prime unprim local variabl dsa express unprim share variabl varm rsa express modul m enumer parameter integ restrict restrictcondit initi initialcondit modul integ boolean enumer restrict initi endmodul modul mn endmodul spec monitorinvari endmodul figur monitor templat action languag prime unprim share variabl exampl action exitrw figur l a j pctouchdown r l a j pctaxitolc templat given figur transit relat main modul defin asynchron composit submodul defin behavior overal system verif monitor action languag verifi consist compil convert action languag specif composit symbol represent infinitest symbol model checker verifi or falsifi ctl properti action languag specif action languag compil translat action languag specif transit system consist state space s set initi state s transit relat r theta s unlik common practic model check infinit r may total ie mayb state exist s r infinit state system specifi action languag model check undecid action languag verifi use sever heurist achiev converg approxim base truncat fixpoint comput widen loopclosur approxim reachabl anal ysi sinc allow nontot transit system also fixpoint comput modifi monitor model given figur state space obtain take cartesian product domain share variabl main modul varm domain local variabl submodul varm instanti transit relat r overal system defin r ijk r ijk correspond action express action ak instanti j modul action languag parser renam local variabl submodul instanti j obtain r ijk s also explain abov action express automat transform action languag parser ad frame constraint un modifi variabl preserv valu initi state system defin ij im denot initi condit main modul m ij denot initi condit instanti j modul composit symbol librari symbol manipul use action languag verifi combin differ symbol represent use composit model check approach gener model check tool built use singl symbol represent bdd polyhedra composit model checker combin differ symbol represent improv effici express model check current implement composit symbol librari use two basic symbol represent bdd for boolean enumer variabl polyhedr represent for integ sinc composit symbol librari use objectori design action languag verifi poli morphic dynam select symbol represent provid composit symbol librari base variabl type input specif exampl integ variabl input specif action languag verifi becom bddbase model checker analyz system use composit symbol librari one specifi initi condit transit relat state space use set composit formula composit formula obtain combin integ arithmet formula integ variabl boolean variabl use logic connect enumer variabl map boolean variabl action languag parser sinc integ represent composit symbol librari current support presburg arithmet restrict arithmet oper gamma howev allow multipl constant quantif composit formula p repres disjunct normal form p denot formula basic symbol represent type ith disjunct n denot number disjunct number basic symbol represent type respect composit symbol librari implement method intersect union complement satisfi check subset test manipul composit represent form method turn call relat method basic symbol represent action languag verifi iter comput fixpoint tempor oper use symbol oper provid composit symbol librari action languag verifi use techniqu truncat fixpoint widen collaps oper comput approxim diverg fixpoint comput howev action languag verifi gener fals neg fals posit either verifi properti gener counterexampl report analysi inconclus achiev use appropri type approxim fixpoint lower upper approxima tion base tempor properti type input queri which could verifi falsifi count abstract action languag templat monitor specif figur submodul instanti fix number time mean specifi system fix number process exampl specif figur describ system specif number airplan process henc verif result obtain specif guarante system specif number airplan process section present adapt autom abstract techniqu call count abstract verif monitor specif action languag use count abstract one automat verifi properti monitor model arbitrari number process basic idea defin abstract transit system local state process abstract away number process local state count introduc new integ variabl local state abstract techniqu work need local state submodul finit exampl submodul local variabl unbound integ cannot use count abstract note that share variabl ie varm still unbound sinc abstract away consid specif figur airplan process local state note that gener case figur local state correspond valuat local variabl submodul ie set local state submodul cartesian product domain local variabl submodul given modul set possibl valuat local variabl set local state count abstract introduc nonneg integ variabl repres local state submodul ie submodul local state modul declar nonneg integ variabl exampl specif figur introduc integ variabl airplan submodul arflowc state pcarflow depflowc state pcdepflow variabl repres number process local state correspond them exampl arflowc abstract system impli process correspond state concret system pcarflow hold note that could one concret state correspond abstract state defin map state concret system abstract system next thing defin abstract transit relat ie translat action origin system action abstract system consid action exitrw figur translat action action abstract system chang part express use current next state local variabl ie pctouchdown pctaxitol part express current next state share variabl ie numc numrwrnumrwr numcnumc remain same sinc restrict local variabl fi nite without loss gener assum local variabl boolean variabl as discuss section action languag verifi translat enumer variabl boolean variabl state section assum action express form expa j l a r l a dsa rsa l a boolean logic formula local domain variabl r l a boolean logic formula local domain variabl sinc assum local variabl boolean need domain variabl r l a transform action express set equival action express form split disjunct involv local share variabl action exitrw l pctouchdown r l pctaxitol let sd set local state modul satisfi express l translat l express variabl abstract transit system gener express l j ss integ variabl repres local state s note that l indic exist process local state satisfi l exitrw formula obtain simpli touchdownc ie exist process local state pctouchdown let sr set local state modul satisfi express r l translat r l express variabl abstract transit system gener express r l j ss tsr st i first disjunct enumer possibl local current next state pair action updat counter accordingli second disjunct take account case local state process chang action exitrw obtain follow ex pression touchdownctouchdownc taxitolc taxitolc then abstract action exitrw is exitrw touchdownc numc numcnumc numrwrnumrwr touchdownctouchdownc taxitolctaxitolc gener abstract statespac abstract transit relat last compon abstract translat initi state first submodul figur declar nonneg parameter integ constant num denot number instanc modul declar constant parameter guarante verifi properti hold possibl number instanti submodul let init denot local initi express submodul let init denot set local state modul satisfi express init add follow constraint initi express abstract transit system init specif figur creat nonneg parameter integ constant numairplan use initi condit submodul airplan pcarflow pcpark obtain follow constraint taxitolcc taxitolcc replac initi constraint airplan submodul new constraint one show monitor invari verifi abstract specif gener count abstract also satisfi origin monitor specif arbitrari number process shown defin abstract function state space origin specif state space abstract specif gener count abstract submodul declar parameter integ num restrict express remov local variabl declar modul local state modul declar integ variabl restrict express replac initi express init modul set local state satisfi init action modul replac l a ss set local state satisfi l a replac r l a ss tsr st i sr set local state satisfi r l a figur algorithm count abstract experiment result tabl show perform action languag verifi airport ground traffic control monitor specif given figur first column denot total number process specif ex ampl result first row specif tabl verif result airport ground traffic control specif xa xd denot x mani arriv depart airplan process xp denot arbitrari number airplan pro cess p p p properti given figur ct vt denot transit system construct time properti verif time in second respect apd pad pad pad figur process ct denot time spent construct composit symbol represent transit relat initi state input specif includ pars time vt denot verif time properti although input infinit state system sinc numc numrwr numrwl unbound variabl verif time scale well due effici composit symbol represent bdd partit transit system elimin boolean variabl as done infinit state model checker would obtain partit class fourth instanc tabl map boolean variabl integ hand would creat integ variabl increas cost arithmet constraint manipul which like scale well bdd use count abstract verifi airport ground traffic control monitor specif arbitrari number arriv depart airplan first verifi specif fix number arriv airplan arbitrari number depart airplan use count abstract state depart airplan exampl row apd tabl denot case arriv airplan arbitrari number depart airplan although count abstract gener integ variabl local state airplan process experiment result tabl show scale well fact case state arriv depart airplan abstract papd properti verifi faster compar case possibl due fact count abstract way simplifi system abstract away inform individu process exampl abstract transit system possibl determin airplan state keep track number airplan particular state verifi larg number concurr system specif use action languag verifi includ monitor specif monitor sleep barber prob lem readerswrit problem bound buffer experiment result report synthesi monitor monitor specif given figur share variabl numrwr numc repres resourc share among multipl process submodul airplan specifi type process share resourc goal gener monitor class java monitor specif one given figur first declar share variabl monitor specif for exampl numrwr numc figur privat field monitor class henc variabl access method monitor class tri automat gener code thread use monitor would go modular principl provid monitor rather leav assumpt thread behav accord specif proof oblig gener submodul monitor specif figur specifi gener behavior correspond thread or equival specifi minimum requir correspond thread monitor execut correctli sinc specif local behavior thread gener straightforward such airplan process execut exitrw action execut reqland think would difficult concurr programm take respons meet specif gener monitor method correspond action submodul monitor specif consid action exitrw pctouchdown numc numcnumc numrwrnumrwr pctaxitol interest express local variabl pc submodul airplan discuss abov gener code monitor class access share variabl action exitrw remov express local variabl leav us express exitrw numc numcnumc implement action monitor method first check guard condit numc updat numrwr numc howev guard condit hold wait process signal condit might chang straightforward translat action monitor method would public synchron void exitrw numc reason call notifyal method end wakeup process might wait condit relat variabl numrwr numc updat action also note wait method insid loop make sure guard still hold thread wake up translat use synchron keyword establish atom note atom java establish respect method block also synchron approach work make sure share variabl modifi part program synchron establish declar share variabl privat variabl monitor class make sure method monitor class synchron use straightforward approach translat monitor specif base templat given figur java monitor class use follow rule creat monitor class privat variabl share variabl specif action sub modul creat synchron method monitor class method action start loop check dsa true wait not then put set assign updat variabl accord constraint rsa assign call notifyal method exit call translat singlelock implement monitor sinc use lock monitor class specif notif pattern singlelock implement describ correct ineffici implement airport ground traffic control monitor use scheme exitrw action would awaken airplan thread sleep howev depart airplan thread awaken number airplan runway l one taxiway cc chang when one variabl numrwl numc numc numc numc numc numc becom zero need awaken updat statu runway r when numrwr updat entranc airplan taxiway c when numc increment use differ condit variabl guard condit improv perform awaken relat thread elimin overhead incur context switch thread need awaken use separ object wait signal separ condit describ java design pattern call specif notif pattern figur show fragment java monitor automat gener code gener action languag specif airport ground traffic control monitor given figur use specif notif pat tern method action exitrw call guard exitrw method loop till return true return fals wait condit variabl exitrwcond action chang guard exitrw fals true notifi thread wait condit variabl exitrwcond use exitrwcond guard numc true guard exitrw method decrement number airplan use runway r numrwrnumrwr increment number airplan use taxiway c atom return true sinc execut exitrw chang action reqland guard fals true thread wait condit variabl reqlandcond notifi method exitrw return action leav guard ie execut depend state share variabl mon itor henc method action leav need wait decrement number airplan runway l numrwlnumrwl updat numrwl howev notifi thread wait condit variabl crossrwcond reqtakeoffcond give algorithm gener java code monitor specif action languag use specif notif pattern below state befor assum action express form expa j l a r l a dsa rsa l a express unprim local variabl modul l a express prime unprim local variabl dsa express unprim share variabl varm rsa express prime unprim share variabl sinc interest local state process use dsa rsa code gener monitor method let guarda denot java express equival dsa also assum rsa written ev express domain variabl varm let assigna denot set assign java correspond rsa use specif notif pattern translat action languag monitor specif java monitor need associ guard action lock specif action let action guard guarda let conda condit variabl associ a thread call method correspond action wait conda guarda evalu fals thread call method correspond anoth ac tion b chang truth valu guarda fals true notifi conda henc action execut thread relev updat perform action awaken algorithm given figur gener inform synchron depend among differ action need implement specif notif pattern action submodul algorithm decid whether action guard unguard check express dsa dsa true mean guard action mark unguard otherwis mark guard condit variabl conda creat action a execut unguard action depend share variabl henc need wait condit variabl next algorithm find action notifi action execut determin inform check action b a execut action dsb fals result state ds b true possibl condit variabl creat action b cond b ad notif list action a hold condit variabl must notifi action execut figur show translat guard unguard action java guard action specif notif lock conda declar one privat method one public method gener privat method guard executea synchron object guard action true method execut assign assigna return true otherwis return fals method guard w aita first get lock conda public class airportgroundtrafficcontrol privat int numc privat int numrwl numrwr privat object exitrwcond privat object reqtakeoffcond privat object reqlandcond privat object crossrwcond public airportgroundtrafficcontrol exitrwcondnew reqtakeoffcondnew reqlandcondnew crossrwcondnew privat synchron boolean guardreqland numrwr numrwrnumrwrreturn true els return fals public void reqland tri reqlandcondwait catchinterruptedexcept privat synchron boolean guardexitrw return true els return fals public void exitrw tri exitrwcondwait catchinterruptedexcept synchronizedreqlandcond reqlandcondnotifi public void leav synchronizedcrossrwcond crossrwcondnotifi synchronizedreqtakeoffcond reqtakeoffcondnotifi notif figur airportgroundtrafficcontrol class use specif notif pattern action ds a true mark guard creat condit variabl conda els mark unguard action b st b postd b expa ds b add cond b notif list figur extract synchron inform privat object new object public void guard w aita guard executea f tri f condawaitg catchinterruptedexcept e fg privat synchron boolean guard executea f els return fals a public void executea fsynchronizedthi fassigna gg b figur translat a guard b unguard action run loop till guard executea method return true bodi loop wait conda till notifi thread perform updat chang truth valu method guarda and there fore guard executea unguard action singl public method executea produc method first acquir lock object execut assign assigna correspond action exit public method guard w aita executea execut action b notif list action note shown figur automat gener java monitor class preserv verifi properti action languag spec ific shown two step show verifi properti preserv singlelock implement action languag specif show equival singlelock implement specif notif pattern implement proof correct specif notif pattern step given algorithm give figur extract necessari inform order gener java monitor class correctli implement specif notif pattern below give set assumpt monitor invari verifi action languag specif monitor preserv singlelock implement java monitor class initi condit set program state immedi constructor monitor thread execut satisfi initi express action languag specif atom observ state monitor defin program state lock monitor avail ie state thread activ monitor thread behavior local behavior thread correct respect monitor specif schedul exist enabl action enabl action execut assum condit hold claim observ state singlelock implement action languag monitor specif satisfi monitor invari verifi action languag verifi conclus futur work think approach combin specif verif synthesi present paper provid right costbenefit ratio adapt autom verif techniqu practic write monitor specif three major benefit higherlevel specif solut monitor implement sinc elimin need condit variabl wait signal oper action languag specif verifi action languag verifi verifi monitor specif action languag automat translat java monitor implement correct implement guarante construct work integr autom count abstract algorithm action languag verifi think approach applic interest realworld applic demonstr case studi approach applic wider rang sy tem would like extend techniqu system boolean integ array recurs data structur such link list work prob lem think provid analysi array use uninterpret function analyz specif recurs data structur current integr shape analysi techniqu composit symbol librari verif tool composit symbol librari action languag verifi avail at httpwwwcsucsbedubultancomposit acknowledg would like thank aysu betin help implement autom code gener algorithm r statist summari commerci jet aircraft accid automat symbol verif embed system concurr program action languag specif languag model check reactiv system action languag verifi specif notif java thread synchron automat verif parameter cach coher protocol deadlock detect tool concurr java program model check java program use java pathfind oper system structur concept librari composit symbol represent concurr program java symbol model check structur approach develop concurr program java shape analysi heurist effici manipul composit constraint model airport oper use objectori approach tr concurr program structur approach develop concurr program java deadlock detect tool concurr java program composit modelcheck action languag bandera monitor symbol model check invariantbas specif synthesi verif synchron concurr program automat symbol verif embed system librari composit symbol represent heurist effici manipul composit constraint constraintbas verif clientserv protocol automat verif parameter cach coher protocol shape analysi action languag verifi ctr robert j hall andrea zisman model interchang integr web servic acm sigsoft softwar engin note v n septemb betincan tevfik bultan mikael lindval benjamin lux stefan topp applic design verif concurr control air traffic control softwar proceed th ieeeacm intern confer autom softwar engin novemb long beach ca usa aysu betin tevfik bultan mikael lindval benjamin lux stefan topp elimin synchron fault air traffic control softwar via design verif concurr control autom softwar engin v n p june