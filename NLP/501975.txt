t complex exponenti output size problem topdown bottomup tree transduc a exponenti output size problem determin whether size output tree tree transduc grow exponenti size input tree paper complex problem studi shown nlcomplet total topdown tree transduc dexptimecomplet gener topdown tree transduc pcomplet bottomup tree tranduc copyright academ press b introduct topdown bottomup tree transduc introduc late sixti round thatcher generalis finitest transduc string main motiv provid simpl formal model syntaxdirect transform grammar mathemat linguist syntaxdirect translat compil construct for latter see recent book fulop vogler sinc time turn tree transduc use tool mani area too properti extens studi varieti author refer see eg part paper topdown tree transduc studi mention abov seen generalis finitest string transduc also call generalis sequenti machin tree like those topdown tree transduc oneway devic process input one direct use finit number state howev string transduc usual process input left right topdown tree transduc transform input tree output tree root toward leav which cours reason call topdown tree transduc roughli speak partial support ec tmr network getgrat gener theori graph transform system esprit work group appligraph univers bremen short version paper present fct context tree label order tree whose label taken rank alphabet or signatur ie term string case obtain consid monad input output tree which view vertic string although generalis quit direct one fact tree instead string consid make rather crucial differ certain respect concern exampl closur properti hold string case carri topdown tree transduc instanc infinit hierarchi obtain consid composit topdown tree transduc see anoth import differ that intuit comput topdown tree transduc usual ramifi topmost node input tree process comput proce subtre parallel fact subtre also delet copi one distinct consequ fact that contrast string case size output tree topdown tree transduc necessarili linearli bound size input tree exampl consid two rule fla a which consid term rewrit rule usual way here fl special symbol rank call state f g symbol rank respect without go detail clear rule transform monad tree height n complet binari tree height thu output size exponenti size input tree follow directli definit topdown tree transduc exponenti size output tree maximum growth achiev howev well possibl build topdown tree transduc whose maximum output size given polynomi degre k given n simpl exampl consid rule use state fl fl take fl initi state input tree size n turn output tree f tree word size output tree quadrat size input tree paper complex correspond decis problem studi given topdown tree transduc td output size os td n exponenti size n input tree turn problem effici solvabl name nlcomplet total topdown tree transduc hard name dexptimecomplet gener use known result nl respect dexptimehard two variant rel easi es tablish effort necessari order prove resourc inde suffici apart interest right result use tree transduc consid model syntaxdirect translat practic reason exponenti behaviour translat often accept exampl translat express highlevel program languag primit instruct littl practic use throughout paper complet mean logspac complet output code exponenti size close relat use tree transduc order gener tree interpret express domain see eg order estim evalu cost gener express and cost comput tree transduct itself necessari estim size output tree ie solv exponenti output size problem fact topdown tree transduc use two area often total natur reason therefor result exponenti output size problem nl class tree transduc may particular interest notion generalis syntaxdirect translat close relat total determinist topdown tree transduc aho ullman investig output size alreadi show output size generalis syntaxdirect translat either polynomi exponenti theorem result prove topdown tree transduc gener section paper corollari aho ullman also prove exponenti output size problem generalis syntaxdirect translat decid theorem howev complex issu address paper propos algorithm highli ineffici result paper yield nlalgorithm formul generalis syntaxdirect translat due close relationship total determinist topdown tree transduc bottomup tree transduc somewhat less interest comput structur simpler polynomialtim reduct one exploit result total topdown tree transduc order show exponenti output size problem bottomup tree transduc p fact use known result turn problem pcomplet interestingli case assumpt total make differenceth problem remain pcomplet even total determinist bottomup tree transduc paper structur follow next section basic notion recal section concern topdown tree transduc section definit recal auxiliari notion introduc shown exponenti output size problem reduc case total determinist topdown tree transduc monad input signatur section combinatori result tree shown use obtain characteris exponenti output size latter turn decis algorithm section main result paper present section deal complex exponenti output size problem bottomup tree transduc final section short conclus given preliminari set natur number includ denot n n denot n nfg n n n denot set ng set finit sequenc set denot empti sequenc denot length sequenc jsj concaten sequenc juxtaposit like length sequenc cardin set denot jaj canon extens function f b powerset denot f too henc a reflex transit closur binari relat r theta b denot r domain r ie set fa j a b r b bg denot domr assum reader familiar basic notion complex theori least basic experi concern estim resourc need algorithm especi respect polynomi exponenti time logarithm space function f n n said polynomi bound polynomi p fn pn n constant c r c n n fn c n said exponenti thu latter lower bound wherea former upper one finit order unlabel tree finit prefixclos subset n element call node rank node v number distinct rank maximum rank node leaf node rank node u descend node v v proper prefix u convers u ancestor v proper prefix v subtre root v tree fv j vv tg direct subtre subtre root v size jt j height ie number node longest path root leaf width denot wdt number leav label tree map unlabel tree l set label underli unlabel tree also denot n t case notion notat introduc unlabel tree carri label tree obviou way follow attribut label unlabel mostli drop speak tree gener rule unlabel tree denot capit letter usual wherea label tree denot lowercas letter usual t tree denot tree usual denot f which actual mean identifi singlenod tree label node symbol pair f n consist label f number n n call rank symbol symbol also denot f n simpli f n minor import signatur finit set sigma symbol sigma monad signatur sigma whose symbol rank arbitrari set s mon denot monad signatur ff g tree call monad form f note monad tree identifi string f signatur sigma set tree sigma denot set tree set tree sigma subtre s smallest set tree notat sigma use abbrevi sigma rest paper let us fix index set pairwis distinct symbol rank call variabl everi n n g order avoid confus set x assum disjoint signatur consider variabl x also denot x tree t denot substitut x i n precis rewrit work usual except leftlinear rule consid thu context paper rewrit rule pair ae l r tree call left righthand side respect l contain everi variabl everi variabl r occur l too rewrit rule usual denot l r deriv relat determin ae binari relat ae tree exactli onc r set rewrit rule r denot union ae ae r topdown tree transduc topdown tree transduc transform input tree output tree topdown manner use restrict type term rewrit rule special symbol rank use state which everi step consum input symbol beneath replac tree consist output symbol state process copi direct subtre consum symbol definit topdown tree transduc topdown tree transduc tupl ffl sigma sigma signatur call input signatur output signatur respect signatur state rank each disjoint sigma sigma finit set rewrit rule initi state sigma monad signatur td topdown stringtotre transduc topdown tree transduct comput td denot td well set pair s td t td denot rewrit relat r pi follow everi topdown tree transduc everi state fl gamma topdown tree transduc sigma sigma gamma r fl denot td fl convent assum variabl lefthand side rule read left right alway x n thu everi rule topdown tree transduc form fl on denot rule way alway meant impli chosen way contain everi variabl x l exactli onc carri denot deriv step flf everi assum correspond one particular occurr subtre but notic may distinct cours rule topdown tree transduc call flf rule form t thu flf rule rule process input symbol f state fl topdown tree transduc contain least one flf rule everi contain one rule everi total domtd sigma determinist comput partial function latter case one may therefor use function notat write definit output size output size topdown tree transduc td given function os td n n that n n ng where usual exponenti output size problem problem determin arbitrari topdown tree transduc td whether os td exponenti pi note technic conveni fact os td monoton function clearli one alway find c os td n c n n n follow fact rank output tree bound s t td impli maximum height righthand side rule td remaind section consist three lemma proof purpos lemma show topdown tree transduc simplifi certain way without affect output size much particular modif preserv polynomi bounded well exponenti first lemma show suffic consid topdown tree transduc whose righthand side contain exactli one output symbol each thi let theta denot set topdown tree transduc sigma h gamma r fl everi righthand side rule r element h gammax n thu standard output symbol h n use n may vari label alway h overload h essenti help reduc notat complex proof clearli standardis harmless sinc size output tree independ node label lemma everi topdown tree transduc td one construct topdown tree transduc td theta that constant n n n construct preserv determin well total carri logarithm space proof let low everi rule flf x r let r contain rule flf x let h consist symbol h l appear sodefin righthand side clearli construct carri logarithm space preserv determin total remain estim differ os td os td let maximum number node righthand side rule r label symbol sigma obviou onetoon correspond deriv td td fact everi applic rule r add exactli one output symbol correspond rule r add a consequ n n n convers everi s s t td wdt wdt notic necessarili hold respect size rule r may righthand side gammax use inequ fact htt word os td n n delta os td n n n next two lemma quit use order check exponenti output size allow restrict one attent case determinist total stringtotre transduc consider easier deal gener topdown tree transduc particular construct use follow see eg proof lemma reli assumpt everi state given topdown tree transduc determin partial function tree tree therefor shall first show logarithm space suffici order transform topdown tree transduc determinist one therebi affect output size modestli simplifi proof topdown tree transduc theta consid lemma and fact logarithm space reduct close composit restrict make differ let us first inform discuss idea underli construct get rid nondetermin while preserv output size modifi input signatur use intuit node input tree augment addit inform determin rule appli proceed f f f e e figur sampl deriv nondeterminist topdown tree transduc way potenti output tree may get lost sinc new transduc forc use rule whenev process two copi subtre state fortun matter respect output size affect maxim size output tree exampl let consist rule ae duplic ith subtre tree appli delet one sampl deriv appli rule parallel shown figur note that second step differ rule chosen process copi tree f f e e e left one process ae right one ae obtain output tree maxim size ae would chosen copi order convert td determinist topdown tree transduc td one may use two version f say f f account fact choos two possibl flf rule rule thu turn one flerul kept is note cannot provid input tree figur appropri indic order make td simul shown deriv contradictori choic rule second step how ever possibl find indic lead output tree maxim size name where dash indic irrelev indic generalis construct everi symbol origin input signatur sigma would provid mani indic state td choic rule copi process differ state must cours independ other unfortun would result exponenti number state could handl logarithm space therefor instead indic shall use addit input symbol hfl ii rank fl state td index rule intuit occurr hfl ii input tree may read if fl current state use ith flf rule td order process next input symbol f sigma encount order rememb i state form fl use lemma everi topdown tree transduc td theta one construct determinist topdown tree transduc td theta that constant n n n construct preserv total carri logarithm space proof let defin largest natur number that distinct flf rule r with contain rule fl hfl as fflg rule order defin r consid r contain least one flf rule let arbitrari order set flf rule r r contain rule rule righthand side one need order preserv total choic superscript state righthand side arbitrari could replac clear td construct logarithm space sinc requir mainli manipul fix number counter rang m furthermor td determinist construct preserv total moreov everi s t td remov symbol form hfl ii yield tree s prove os td n os td n n n order see inequ hold well one cope difficulti discuss abov name possibl deriv td counterpart td sinc latter alway appli rule copi subtre process state proof proce explicitli turn arbitrari input tree td one td yield output tree maxim size everi tree sigma everi choos arbitrari fix deriv td th js j maxim let is first rule appli deriv jth flf rule r with respect order use defin r root symbol s deriv chosen arbitrarili recal inform discuss preced lemma is fl index rule must appli fl order obtain output tree maximum size now suppos defin everi tree clearli therefor defin establish requir inequ os td na os td n follow claim prove claim let fl td deriv prove claim proceed induct structur s suppos due definit is fl assum without loss gener rule appli first step deriv fl td is flth flf rule td thu given deriv form appli induct hypothesi subderiv tree l th es k l es l td l j l prove claim by take l thu finish proof lemma intuit deriv topdown tree transduc produc larg output tree must path input tree whose node copi exponenti number time thu turn topdown tree transduc td string totre transduc st interpret input path input tree td simul correspond part deriv output size st differ output size td much follow lemma prove inde case lemma everi determinist topdown tree transduc td theta one construct total determinist stringtotre transduc st theta that constant n st n max os td a delta n n n construct carri logarithm space td total exponenti time otherwis proof let indic abov main idea construct st way input tree st correspond path input tree td comput st path produc output tree consist node td produc process symbol path technic reason leaf f end path taken account treat ffl order cope possibl nontot td state enrich second compon set state use order keep track state copi remain input process make precis auxiliari definit turn use everi f k sigma denot lstatesf set state flf rule r exist furthermor rstate denot set state righthand side flf rule fl delta intuit delta set state process copi tree f s simultan deriv step rstate delta f i set state process copi final everi set state delta gamma let dom st construct follow consid hfl deltai suppos domrstat case flf x flf rule r r contain rule note h origin flf rule rank l wherea new one rank p otherwis ie case hold r contain rule hfl deltaif furthermor rule hfl deltaiffl h r everi state hfl deltai construct st total determinist order show state inequ hold two claim prove first claim concern inequ os st n max os td a delta n claim constant n follow hold everi state hfl deltai everi deriv hfl deltai st where tree depend delta js j delta jsj fl prove maximum rank symbol sigma smallest posit natur number everi nonempti recal symbol f sigma treat ffl st therefor f f rank need appear s set dom contain tree size notic exist powerset gamma finit let us proceed induct length deriv claim certainli hold consid deriv form hfl deltai st h choos smallest tree dom delta now assum deriv hfl deltai st read st hhfl st rule appli first step one construct rule r describ definit r k tree whose subtre defin fol low j smallest tree domrstat delta f j which construct r nonempti set furthermor tree provid induct hypothesi size delta js j deriv p notic induct hypothesi yield input tree p deriv depend delta follow td td tree contain particular subtre p mean finish proof claim claim yield os st n os td a delta n everi tree mon mean os st formul second claim conveni formalis notion path tree sigma thi defin pathss mon follow let hfl deltai dom delta everi tree th td hold again proof induct length deriv deriv length assert trivial hold now assum given deriv form td td l first all notic dom becaus assumpt dom delta and definit delta set state occur fl delta uniqu tree one state would mean exist deriv thu violat assumpt domtd fl fact dom impli definit r obvious satisfi well consequ deriv step st exist and induct hypothesi j sum up get st claim choos path pathss wdst wdtwd due fact prove inequ os td nn os st n n n sinc much time take construct st clearli time consum part determin set which necessari order construct rule done standard algorithm follow defin set exist input symbol f k sigma delta lstatesf rstate delta f time suffici order determin i sinc enumer jgammaj set test whether satisfi requir follow straightforward induct furthermor definit i smallest index show comput exponenti time complet proof gener case remain consid special case td total total td mean dom therefor construct rule condit alway satisfi regardless delta consequ second compon state gamma useless one simplifi construct set rule flf figur tree branch depth branch index proof claim rule comput logarithm space complet proof lemma reader notic inequ three lemma guarante polynomi bounded exponenti preserv respect polynomi bounded clear upper bound obvious polynomi os td one exponenti preserv well os td na constant clear c os td npn p polynomi choos order get c n exponenti second factor larger suffici larg n sinc branch index output tree section shown that intuit tree whose size exponenti height must necessarili contain subtre mani ramif everi path order formalis thi branch depth branch index tree introduc definit branch depth branch index let tree branch depth smallest natur number b leaf exactli b distinct ancestor rank branch index maximum branch depth tree pi exampl shown figur branch depth tree branch depth subtre indic hollow edg latter turn branch index tree whole subtre larger branch depth reader notic everi tree contain tree rank branch depth b therefor tree definit assum rank without loss gener may furthermor instruct note one could remov node b pairwis distinct ancestor rank yield tree leav exactli b ancestor rank intuit turn tree full binari tree height b node rank disregard henc branch index one less height largest full binari tree embed follow lemma yield equival recurs descript branch index straightforward induct proof omit lemma let tree direct subtre branch index branch index branch index distinct b indic exist pi lemma state size tree polynomi bound height place upper bound branch index provid rank bound lemma let set tree rank r branch index b n polynomi p b degre b jt j p b htt tree s proof proce induct b tree branch index rank impli jt let tree branch index b k r direct subtre branch index one greater b distinct branch index j b branch index would least b therefor one direct subtre t say branch index b remain one strictli smaller branch index accord induct hypothesi polynomi p bgamma degre b sinc coeffici p bgamma assum posit therefor jt repeat argument tree size reach yield polynomi htt degre b one degre b corollari branch index cannot bound size tree set grow exponenti height corollari let set tree bound rank let size ng n n size polynomi bound upper bound branch index tree s pi let us say tree contain bifurc node v nt two distinct descend v v next lemma state everi set label tree with finit mani label unbound branch index tree contain bifurc use proof theorem order creat kind pump situat characteris stringtotre transduc exponenti output size lemma let set tree label finit set l branch index tree unbound exist tree contain bifurc proof denot set label path g mainli prove follow claim done induct n claim let n n let nt tree branch depth contain distinct node v v v v satisfi node w trivial take w node therefor let n assum claim hold tree nt branch depth bn gamma point definit may assum without loss gener rank consid tree consist node bn gamma ancestor rank thu branch depth induct hypothesi impli node v noth show choos leaf v u juj minim sinc v ancestor rank wherea v u least bn sinc branch depth least n ancestor v u v u whose rank minim assumpt juj mean set jujg least n element assumpt label twice among label node n impli exist node v v n tv v tv thu complet proof claim sinc mean now order prove lemma choos tree branch index least bjlj tree nt branch depth bjlj howev sinc cannot node w tw jlj follow claim contain bifurc decis algorithm develop next section base theorem prove next characteris class total determinist stringto tree transduc st theta exponenti output size fact theorem could generalis arbitrari topdown tree transduc would technic difficult need prove result paper order formul theorem and use well notion comput tree need intuit comput tree deriv tree state copi subtre input tree process need definit stringtotre transduc theta therefor let st sigma h gamma r comput tree deriv fl st tree label gamma defin follow deriv st h comput tree tree fl otherwis deriv must form flf s st st case comput tree flt comput tree ith subderiv st k set comput tree deriv st sigma th denot ctst theorem output size total determinist stringtotre transduc st theta exponenti tree ctst contain bifurc proof let st sigma h gamma r fl proof notic comput tree ct deriv fl st structur t ie thu make differ whether consid size output tree size comput tree due remark abov fact comput tree ct deriv fl st t size ctst n os st n n n where size ctst defin corollari corollari mean branch index tree ctst unbound thu implic follow lemma consid deriv st whose comput tree ct contain node requir type one decompos ct comput tree uniqu deriv st induct follow jct trivial sinc ctv deriv fl st s tree contain least two subtre form fl consequ comput tree ct deriv fl st st contain ct twice subtre prove jct fact ctv impli exist deriv st s tree contain subtre fl quentli comput tree deriv st st contain ct subtre mean size least st exponenti gammam constant factor m note m defin byproduct result section result similar theorem obtain output size topdown tree transduc exponenti polynomi bound in fact result slightli stronger state that case output size satisfi c c word cannot element corollari output size topdown tree transduc either polynomi bound exponenti proof let td topdown tree transduc lemma total determinist stringtotre transduc st theta os st polynomi bound exponenti td polynomi bound respect exponenti os st polynomi bound onlyif direct proof theorem remain valid show comput tree ctst contain bifurc use direct theorem follow os st exponenti mean os td exponenti main result section main result paper prove exponenti output size problem nlcomplet total topdown tree transduc dexp timecomplet gener case first shown decis algorithm obey resourc bound start total case lemma total determinist stringtotre transduc theta exponenti output size problem nl proof theorem suffic prove follow total determinist stringtotre transduc st theta decid nondeterminist ture machin logarithm space whether comput tree ctst contain bifurc sketch ture machin could work let st everi state fl gamma everi input symbol f sigma let nextfl f denot set state occur righthand side uniqu flf rule r comput consist two phase first phase start repeatedli make nondeterminist choic guess next symbol f arbitrari input string state fl i nextfl initi state st thu fl sequenc label path uniqu comput tree determin guess input string phase comput nondeterminist select one encount state say store tape step j next phase initi guess two state need distinct must correspond two distinct node righthand side respect rule formal righthand side fl j f j rule fl j distinct node v intuit place two path bifurc separ on two sequenc construct parallel alway choos f state accept st encount j sinc st total everi deriv final yield tree th therefor accept input step i comput tree ct deriv input exist obvious accept condit mean ct contain bifurc convers exist input tree lead comput tree contain bifurc clear one possibl run make suitabl nondeterminist choic order detect fact moreov requir logarithm space sinc thing must keep track current symbol f complet proof theorem exponenti output size problem nlcomplet total topdown tree transduc dexptimecomplet gener one part statement remain true determinist topdown tree transduc consid proof let td topdown tree transduc lemma one construct total determinist stringtotre transduc st theta os st exponenti os td exponenti furthermor construct perform logarithm space td total exponenti time otherwis use lemma test logarithm space in size st whether os st exponenti thu exponenti output size problem nl total topdown tree transduc dexptim gener remain prove nlhard dexptimehard respect order establish total case shown nlcomplet problem reachabl see eg also known graph access problem reduc exponenti output size problem total topdown tree transduc given direct graph g two node v v reachabl problem determin whether exist vv path g ie direct path lead v v v set node input graph g reachabl let st g r defin follow u u contain rule fl u u x edg u u g edg r contain rule node contain rule fl u ffl ffl addit r contain rule clearli work tape logarithm size suffici ture machin construct st furthermor g contain vv path rule never appli convers vv path given sequenc e target node e j rule deriv st st mean st contain pair s full binari tree height i consequ os st k delta prove os st exponenti sinc k constant final consid gener case go make use dexptim complet result seidl determinist topdown finit tree automaton determinist topdown tree transduc ta sigma sigma gamma r everi flf rule r form flf x ousli comput relat ta partial ident seidl show dexptimehard decid whether domta tree automata ta ta n given input let ta assum without loss gener set state pairwis disjoint now let given follow compon where symbol f state suppos new one r contain rule clearli td determinist domta impli comput tree transduct empti otherwis choos arbitrari tree tree deriv complet binari tree height f ffl thu output size td exponenti complet proof theorem corollari set topdown tree transduc whose output size polynomi bound complement whose output size expo nential famou result immerman szelepscenyi state nl close complement and fact hold determinist class like dexptim anyway polynomi output size problem ie determin whether os td polynomi bound turn thu nl respect dexptim corollari polynomi output size problem nl total topdown tree transduc dexptim gener one pi bottomup tree transduc section output size bottomup tree transduc consid mistak claim conclus result section true also bottomup tree transduc fact hold neither total gener case assum nl p dexptim bottomup tree transduc cannot copi subtre process individu differ state copi take place copi subtre process result consider easier empti problem make possibl appli construct similar one proof lemma use polynomi instead exponenti time hand result bottomup tree transduct may depend delet subtre becaus like copi delet take place process subtre mean that intuit delet larg subtre simul effect nontot output size consequ exponenti output size problem bottomup tree transduc becom easier restrict total bottomup tree transduc main result section state problem pcomplet case let us first recal definit bottomup tree transduc definit bottomup tree transduc bottomup tree transduc tupl definit topdown tree transduc finit set rewrit rule set final state bottomup tree transduct comput bu denot bu well set pair s bu flt bu denot rewrit relat r pi topdown case assum without loss gener variabl lefthand side rule read left right alway x appropri k n thu everi rule bottomup tree transduc form f fl x state tree sigma l l n contain everi variabl x l exactli onc x bottomup tree transduc definit determinist r contain one rule whose righthand side f fl x gamma similarli bu total least one rule whose righthand side f fl x output size bu given function os bu defin exactli case topdown tree transduc similarli definit exponenti output size problem carri bottomup case obviou way call state fl bottomup tree transduc tree sigma sigma bu flt follow problem call use use below instanc bottomup tree transduc state fl gamma question fl use state follow lemma state use pcomplet rather obviou reformul fact empti problem contextfre string languag pcomplet corollari use wellknown relationship contextfre grammar finit tree automata one hand finit tree automata bottomup tree transduc cf definit finit tree automata proof theorem sake complet explicit proof nevertheless ad below lemma state use pcomplet hold problem restrict total determinist bottomup tree transduc whose output signatur fffl g proof proof similar proof corollari let bu gamma order decid whether tree sigma bu flt appli follow standard techniqu comput which obvious done polynomi time follow straightforward induct fl use remain prove phard restrict variant corollari follow problem pcomplet finit set s binari oper delta given multipl tabl subset s element s decid whether closur delta ie whether element smallest superset b delta c obviou way everi tree sigma seen express delta constant construct deriv bu fl b ffl b valu express particular fl use requir furthermor bu comput logarithm space easi convert multipl tabl delta r complet proof similar topdown case conveni simplifi given bottomup tree transduc way righthand side contain exactli one output symbol thi let theta set bottomup tree transduc everi righthand side rule r element gammah x lemma everi bottomup tree transduc bu one construct bottomup tree transduc bu theta that constant n os bu na os bu n n construct carri logarithm space proof simpli replac everi rule f fl x r argument proof lemma satisfi claim inequ furthermor obvious done logarithm space show turn bottomup tree transduc total top stringtotre transduc use construct similar one proof lemma lemma everi bottomup tree transduc bu theta one construct total stringtotre transduc st theta that constant n os bu nn os st n max os bu a delta n n n construct carri polynomi time proof let set use state determin polynomi time obvious remain state rule appear delet without affect comput transduct therefor follow assum without loss gener gamma contain use state base assumpt let st mon sigma new state r defin follow everi rule f fl x r everi k contain rule flf number time x occur among x if contain rule form f fl x r contain rule flf x h in order account total everi rule flf contain rule fl f rule fl f gg remaind proof simplifi variant reason proof lemma claim constant n follow hold everi state everi deriv fl st where th tree bu proof let smallest natur number that everi tree size bu flt tree th defin maximum rank symbol sigma proceed induct length deriv fl st h claim hold induct step let deriv st st jt jg induct hypothesi exist tree bu tree th satisfi jt jg construct r contain rule f fl x time among x defin j k n fig comput similar correspond one proof lemma verifi inequ js j delta jsj furthermor deriv bu bu occur p time among thu get claim second claim let everi tree sigma pathss mon sigma defin follow g furthermor everi state everi tree arbitrari fix tree th maximum width fl st notic tree exist st total everi deriv bu flt hold again proof induct length deriv deriv length assert trivial case consid deriv bu bu assum tion occur p time among contain rule flf consequ wd fl f s particular yield claim claim prove inequ lemma seen follow rule r s st yield st state use claim latter impli exist pair s bu jtj thu os st st n os bu a delta n prove os st n max os bu a delta n inequ proof lemma s impli exist pair s st show os bu nn os st n n n easi prove main result section theorem exponenti output size problem bottomup tree transduc pcomplet hold total determinist bottomup tree transduc proof lemma lemma theorem exponenti output size problem bottomup tree transduc p remain prove p hard total determinist case done reduc problem state use exponenti output size problem class tree transduc lemma suffic consid total determinist bottomup tree transduc gamma state fl gamma show construct logarithm space total determinist bottomup tree transduc bu os bu exponenti fl use state bu thi let bu clearli bu total determinist construct perform logarithm space order verifi requir equival let bu flffl sigma defin f deriv f bu bu flt everi n full binari tree g ffl height thu output size bu exponenti convers fl use bu clear rule f never appli deriv bu therefor deriv hold output symbol occur remain rule thu os bu exponenti finish proof use lemma corollari extend bottomup tree transduc thu sinc p close complement corollari similar corollari obtain corollari polynomi output size problem bottomup tree transduc p pi conclus shown paper exponenti output size problem nl complet total topdown tree transduc dexptimecomplet gener one pcomplet bottomup tree transduc intuit reason huge complex gap two topdown variant that gener case solv problem requir solv empti problem topdown tree transduct sever direct futur research could interest complex exponenti output size problem composit topdown bottomup tree transduct gener class tree transduc like eg macro tree transduc seem interest open problem anoth point that mention introduct everi k n one construct topdown tree transduct whose output size bound polynomi degre k but polynomi degre k gamma fact corollari output size topdown tree transduc either bound polynomi exponenti macro tree transduc engelfriet maneth show decid whether output size linearli bound thu may interest search effici algorithm determin given topdown even macro tree transduc smallest natur number k os on k provid k exist final natur class nontot topdown tree transduc exponenti output size problem least solvabl polynomi space acknowledg thank joost engelfriet told find complet result point relat work well helmut seidl anonym refere care read manuscript help list suggest improv r translat context free complex exponenti output size problem topdown tree transduc open question recent result tree transduc tree languag three hierarchi transduc character decid mso defin macro tree transduct macro tree transduc zoltan fulop tree languag nondeterminist space close complement complet problem determinist polynomi time comput complex mathemat system theori haskel overload dexptimecomplet method forc enumer nondeterminist automata gener sequenti machin map there lot finit automata theori would thought tree automata inform survey tr method forc enumer nondeterminist automata nondeterminist space close complement haskel overload dexptimecomplet tree languag syntaxdirect semant character decid msodefin macro tree transduct exponenti output size topdown tree transduc ctr frank drew joost engelfriet branch synchron grammar nest tabl journal comput system scienc v n p may