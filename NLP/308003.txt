t time asynchron distribut system model a abstractw propos formal definit thetim asynchron distribut system model present extens measur actual messag process schedul delay hardwar clock drift measur confirm model adequ describ current distribut system network workstat also give explan practic need servic consensu leader elect implement timefre model implement time asynchron system model b introduct depend whether underli commun process manag servic provid certain com munic distribut system classifi either synchron asynchron certain commun mean time minimum number correct process messag sent correct process correct destin process receiv process destin within known amount time ie probabl receiv process time neglig author explain mean failur neglig synchron system guarante certain commun system asynchron achiev certain commun one assum frequenc failur occur system bound bound failur frequenc assumpt allow system design use space time redund mask lower level commun failur provid abstract certain commun howev almost distribut system reason assum failur frequenc bound depend system character strict stochast specif henc even one tri fix unpredict system achiev certain commun eg admiss control resourc alloc redund commun channel etc probabl commun failur might still neglig mani depend system therefor necessarili reason assum commun certain paper defin asynchron system model make much simpler assumpt synchron sy depart comput scienc uc san diego la jolla ca gamma email flaviucsucsdedu cfetzercsucsdedu short version paper appear proceed proceed th annual intern symposium faulttoler comput research support grant f f air forc offic scientif re search inform time model avail http wwwcsucsdeducfetzermodel model henc probabl one assumpt violat much smaller probabl violat assumpt synchron sy tem nevertheless asynchron system model still strong enough serv foundat construct depend applic publish research asynchron system base timefre model model character follow properti servic time free ie specif describ output state transit occur respons input without place bound time take output state transit occur interprocess commun reliabl some research relax condit ie messag sent two noncrash process eventu deliv destin process crash failur semant ie process fail crash ing process access hardwar clock timefre model process cannot distinguish noncrash but slow crash process servic import practic consensu elect membership therefor implement time asynchron distribut system model or shorter time model defin formal paper assum servic time specif prescrib output state transit occur respons input also time interv within client expect output transit occur interprocess commun via unreli datagram servic omi sionperform failur semant failur messag suffer omiss messag drop perform failur messag deliv late crashperform failur semant failur process suffer crash perform fail ure access hardwar clock proceed within linear envelop realtim bound exist frequenc commun process failur occur system feel model adequ describ exist distribut system built network workstat contrast timefre model time model allow practic need distribut servic clock synchron mem bership consensu elect atom broadcast implement sinc assum exist hardwar clock time servic timefre model may appear gener time model howev workstat current market highprecis quartz ieee transact parallel distribut system appear clock presenc clock time model practic restrict moreov true mani servic encount practic unix process udp make responsetim promis also true servic becom de facto time whenev higher level abstract depend highest level human user fix timeout decid fail therefor practic point view requir servic time process access hardwar clock make time model less gener timefre model fact failur semant interprocess commun timefre model as defin much stronger time model timefre model cannot exist system run correct process disconnect entir run time model allow run correct process perman di connect thu timefre model exclud possibl correct process partit time model allow partit natur model occurr suffici mani messag omiss perform failur characterist time model reflect situat commun partit observ hour even day real sy tem especi base wide area network like internet thu practic point view time model gener timefre one allow partit model natur assumpt servic time process access hardwar clock restrict practic point view goal paper propos formal definit time asynchron distribut system model extens measur actual messag process schedul delay clock drift confirm model adequ describ current runofthemil distribut system built network workstat give intuit explan practic import servic consensu leader elect implement timefre asynchron system model implement time model ii relat work distribut system model classifi accord assum network topolog synchroni failur model messag buffer accord taxonomi time asynchron model character follow ffl network topolog process know complet set process send messag process problem rout messag irregular topolog assum solv lower level rout protocol ffl synchroni servic time process access local hardwar clock whose drift rate realtim bound time servic specif allow definit timeout delay messag transmiss process schedul delay ffl failur model process suffer crash perform failur commun servic suffer omiss perform failur ffl messag buffer finit messag buffer nonfifo deliveri messag buffer overflow block sender result messag omiss failur import differ time model timefre model exist local hardwar clock mani distribut applic specifi use realtim constraint exampl compon fail within x time unit applic perform action hardwar clock allow one implement applic level timeout time asynchron system model introduc without name refin renam avoid confus timefre model particular introduc system stabil predic condit timeli properti captur intuit long system stabl is number failur affect system certain threshold system make progress within bound time welltun system expect altern long period stabil short period instabl failur frequenc increas beyond assum threshold formal progress assump tion progress assumpt option extens core time asynchron system model see section iv progress assumpt state unstabl period alway exist time interv given minimum length system stabl progress assumpt allow one solv problem like consensu origin specifi use uncondit termin condit defin section via oppos use condit timeli properti see section via one view progress assumpt formal way requir paramet time model the oneway timeout delay section iiib schedul timeout delay section iiic well chosen progress assumpt similar global stabil requir postul eventu system must perman stabil sens must exist time beyond messag noncrash process becom time howev progress assumpt requir infinit often exist major set process certain minimum amount time time commun time manner progress assumpt also certain similar failur detector mechan strengthen timefre model certain failur detector class provid desir behavior base observ system eventu stabil main differ model time model follow ing time model allow messag drop process recov crash time model provid process access hardwar clock model provid process access failur de tector note hardwar clock use detect cristian fetzer time asynchron distribut system model failur highlight similar differ exist synchron time asynchron system model compar properti fundament synchron asynchron servic membership atom broadcast sketch section vi certain problem implement synchron system implement time asynchron system previous author address possibl issu exampl address issu problem simul asynchron system section vi howev address simul issu exampl concern one ensur two leader point realtim interest solut two leader virtual time differ import realtim system interact extern process introduc notion failawar systemat mean transform synchron servic specif failawar specif becom implement time asynchron system idea process provid synchron prop erti long failur frequenc given bound whenev properti cannot guarante ani more detect time manner correct client depend properti claim weaken failawar specif still use implement time system failawar depend time detect messag perform failur introduc mechan allow receiv r messag detect suffer perform failur basic idea one use local hardwar clock measur transmiss delay messag roundtrip one use durat roundtrip contain upper bound tranmiss delay m introduc sever optim provid better upper bound m describ use time model failawar datagram servic fulli autom train control system quasisynchron model anoth approach defin model synchron system timefre asynchron system requir p bound known process speed p bound known messag deliveri time p bound known drift rate correct clock p bound known load pat tern p bound known deviat among local clock model allow least one properti px incomplet assumpt coverag is nonzero probabl bound postul px violat runtim comparison time asynchron system model assum coverag p coverag p p valu make assumpt load pattern deviat local clock iii model time asynchron distribut system consist finit set process p commun via datagram servic process run comput node network see figur lower level softwar node network implement datagram servic two process said remot run separ node otherwis local process p access local hardwar clock process manag servic run node use clock manag alarm clock allow local process request awaken whenev desir use o p q r denot process s t u v denot realtim s u v denot clock time m n denot messag node hardwar c lock r process networkfig process time asynchron system access local hardwar clock commun via datagram messag across network a hardwar clock process run node access node hardwar clock simplest hardwar clock consist oscil count regist increment tick oscil tick increment clock valu posit constant g call clock granular iti hardwar clock implement describ correct clock display strictli monoton increas valu denot set realtim valu rt set clock valu ct clock h p process p repres function h p realtim clocktim denot valu display clock p realtim t local process access clock remot process access differ clock thu process p q run node h due imprecis oscil temperatur chang age hardwar clock drift apart realtim intuit drift rate hardwar clock indic mani microsecond hardwar clock drift apart realtim per second exampl drift rate mean clock increas valu sec everi second assum exist constant maximum drift rate ae bound absolut valu drift rate correct clock thu drift rate correct clock least gammaa ae see figur constant ae known process correct clock measur durat time interv s t error within gammaaetgamma g g term g account error due granular clock factor ae error due drift clock defin predic correct u hp true iff ps hardwar clock h p correct time u definit base intuit h p measur durat time interv s t u absolut error correct u ae bound drift rate caus correct clock within narrow linear envelop realtim see figur r dt __ __ dt dt dt dt r __ realtim clocktimet fig point time drift rate correct hardwar clock hp within aeae note drift rate constant sinc chang time assum valu within aeae one analyz drift error clock possibl distinguish systemat drift error due imprecis oscil drift error due reason age chang environ speed calibr hardwar clock chang constant factor c reduc systemat drift error relat uncalibr clock h p calibr counterpart h calibr p express follow calibr hardwar clock calibr done automat system internet access local access extern time provid gp receiv clock extern synchron instant deviat correct clock realtim bound known constant clock intern synchron deviat two correct clock bound known constant correct clock system extern synchron known ffl clock also intern synchron ffl clock calibr done lifetim system howev account age clock make sens recalibr clock occasion intern extern clock synchron need perform period account ongo drift clock time asynchron system model requir clock calibr extern intern synchron drift rate bound ae howev advantag calibr hardwar clock sinc allow reduct maximum drift rate see below a measur common oper system provid process access realtim clock realtim clock less synchron realtim eg utc univers time gp time mani unix domain one tri maintain good synchron realtim use time servic like ntp howev process alway know good synchron realtim is might even exist upper bound drift rate realtim clock oper chang speed realtim clock recent oper system provid process access hardwar clock subject adjust ie neither softwar oper chang speed clock exampl solari provid c librari function gethrtim get highresolut realtim return clock valu express nanosecond highresolut realtim clock exampl hardwar clock provid oper system also ideal suit implement calibr hardwar clock current workstat technolog granular hardwar clock order ns s constant ae order gamma gamma measur drift rate uncalibr unsynchron hardwar clock sever sun workstat run solari period sever week figur show drift rate four hardwar clock measur drift rate use nist timeserv clock extern synchron via ntp averag drift rate four hardwar clock stay almost constant measur period comput locat aircondit room comput subject higher temperatur chang one expect higher varianc clock drift note assum clock drift constant assum clock drift within gammaa ae interv chosen larg enough account unsteadi environment condit day rate uss fig measur drift rate in four hardwar clock period day drift rate determin everi hour use extern synchron clock measur rel drift rate two calibr hardwar clock interv sever day ie mea cristian fetzer time asynchron distribut system model sure mani two calibr hardwar clock drift apart everi second calibr clock implement top highresolut realtim clock solari variat messag transmiss delay introduc error read remot clock distribut system read remot clock use failawar datagram servic calcul upper bound transmiss delay messag deliv allow us calcul lower upper bound remot clock read error bound calcul lower upper bound drift rate minim measur error measur everi minut averag rel drift rate last minut figur show lower upper bound rel drift rate two calibr hardwar clock period day summari calibr hardwar clock allow us decreas maximum drift rate two order magni tude gamma gamma exampl clock calibr allow us reduc measur averag drift one clock use protocol calibr hardwar clock use maximum drift rate ae instead ae sinc ae small quantiti ignor term ae exampl equat ae also assum clock granular g neglig time hour rel drift rate lower bound upper bound fig rel drift rate two calibr hardwar clock stay within measur a clock failur assumpt assum noncrash process access correct hardwar clock ie access hardwar clock drift rate ae assumpt simplifi applic sinc deal crash failur anyhow deal faulti clock like fast slow clock let predic crash p true iff process p crash realtim t formal express clock assumpt ca follow hp servic requir upper bound drift rate clock chose constant base measur absolut drift rate calibr clock use extern synchron clock henc circular measur practic one actual weaken assumpt follow sens hardwar clock h p fail time process p tri read clock s p crash incorrect clock valu return p sinc p read incorrect clock inform relax assumpt actual equival ca particular process determin h p fail one implement relax assumpt detect clock failur lower protocol level transpar applic process transform process crash failur two basic realtim clock implement oper system oscil increment long hardwar counter typic bit long valu realtim clock current valu hardwar counter period timer use increment softwar counter valu realtim clock first case properti clock determin physic properti oscil second case interrupt prioriti might affect properti realtim clock system timer interrupt highest prioriti system loos timer interrupt howev exist system interrupt sourc eg serial line higher prioriti timer interrupt system might loos timer interrupt ie clock go slower mani interrupt higher prioriti system one find reason ae probabl hardwar clock fail ie drift rate bound ae low whether probabl classifi neglig depend stochast requir applic see explan failur neglect probabl neglig one even detect clock fail ure howev requir applic stringent neglect probabl singl hardwar clock fail one use redund hardwar clock make sure clock failur assumpt valid show one use commerci shelf compon build faulttoler clock make clock failur neglig exampl one use two redund hardwar clock two bit counter connect separ oscil avail pc card detect singl hardwar clock failur detect or even mask clock failur least three hardwar clock use local one clock read procedur becom transpar higher level pro cess whenev process want read hardwar clock process call clock read procedur procedur read two redund clock procedur use two valu determin rel drift rate two clock within accept rang failur hardwar clock independ one detect failur clock high probabl thu stochast applic requir stringent redund clock allow detect clock failur probabl process read faulti clock becom neglig ieee transact parallel distribut system appear b datagram servic datagram servic provid primit transmit unicast see figur broadcast messag see figur primit are ffl sendmq send unicast messag process q ffl broadcastm broadcast process includ sender m initi datagram servic deliv messag sent process p time clock real time td m send mq deliv mp fig process p send unicast messag q realtim q receiv realtim t transmiss delay tdq simplifi specif datagram servic assum datagram messag uniqu identifi word two messag differ even sent process at two differ point time content let msg denot set messag use follow predic denot datagram relat event q mp datagram servic deliv messag sent p q realtim t say process q receiv t unicast messag q realtim invok primit sendmq broadcast broadcast messag realtim invok primit broadcastm time clock real time r r broadcast td td deliv deliv r fig process p send broadcast messag q receiv t r receiv u transmiss delay let messag p send see figur broadcast see figur s let q receiv t call send receiv time m denot stm rt q m respect transmiss delay td q m defin by td q m function senderm return sender m sendermp sq send mqbroadcast m destin destm messag set process sent mqbroadcast m requir datagram servic valid no duplic mindelay defin follow ffl valid datagram servic deliv p identifi q ms sender q inde sent broadcast q m ffl nodupl messag uniqu sender deliv destin process onc ffl mindelay assum messag sent two remot process p q transmiss delay least td q m ffi min mindelay requir restrict minimum transmiss delay messag n sent two local process transmiss delay n smaller ffi min intuit ffi min know minimum messag size maximum network band width one know lower bound messag transmiss delay one use ffi min improv calcul posteriori upper bound transmiss delay remot messag tighter ffi min real minimum transmiss delay tighter posteriori upper bound get see detail howev ffi min chosen big ie remot messag transmiss delay less calcul bound small sinc network configur system might chang lifetim safest choic assum datagram servic ensur exist upper bound transmiss delay messag sinc servic model time defin oneway timeout delay ffi chosen actual messag sent broadcast like deliv within ffi messag transmiss delay less ffi min call earli see figur time model assum earli messag ie ffi min well chosen see mindelay requir messag whose transmiss delay ffi ie ffi min td q m ffi call time ms transmiss delay greater ffi ie td q m ffi say suffer perform failur or late messag never deliv say suffer omiss failur or drop realt ime time late drop sdm sd fig time model messag either time late drop time model assum messag earli cristian fetzer time asynchron distribut system model b measur time model assum exist oneway timeout delay ffi use defin messag perform failur choic ffi determin frequenc messag perform failur time model put upper bound frequenc failur henc choic ffi affect correct protocol design time model describ sever techniqu allow time detect messag process perform failur abl detect certain applic properti hold anymor describ mechan allow receiv detect messag time good select ffi might system applic depend first applic choic ffi natur deriv applic re quirement exampl applic might achiev someth good within time unit protocol use implement applic achiev someth good within say kffi time unit in case failur frequenc within given bound case make sens defin ffi ffi delta k second applic might constrain ffi practic point view applic good choic ffi crucial protocol stabil speed choos small ffi increas frequenc messag perform failur henc qualiti servic might degrad often choos larg ffi might increas respons time servic sinc servic timeout take longer choic good ffi alway easi sinc messag transmiss delay increas messag size see figur network load see figur also depend messag transmiss pattern use protocol see figur determin good ffi ensur like stabil progress might requir measur protocol specif transmiss delay byte ms fig measur minimum delay roundtrip messag pair differ messag size use roundtrip measur messag size perform measur cluster sun ipx workstat connect mbit ethernet depend system laboratori ucsd seven comput run suno machin run solari measur program use differ servic provid fortress toolkit fortress use udp interprocess commun model depend messag transmiss time messag size see figur could replac constant two function increas size messag actual use function increas size messag tighter lower bound allow receiv calcul better upper bound transmiss delay receiv messag simplic howev assum time model ffi ffi min constant messag delaym kbyte kbyte kbyte fig transmiss delay messag increas network load network load kbytesec messag deliv within ms kbytesec within ms network load kbytesec less messag deliv measur distribut messag transmiss time differ network load measur use sun ipx workstat connect mbit ethernet workstat group pair two process pair sent pingpong messag size byte without udp header estim network load averag number byte workstat sent per second expect likelihood messag deliv within given time decreas network load see figur measur show minimum experienc messag transmiss delay slightli decreas increas network load explain decreas cach miss network protocol code increas network traffic demonstr transmiss delay protocol depend measur transmiss time experienc local leadership servic measur involv one process p period broadcast messag five process send immedi repli messag p receiv repli p spend time process receiv next repli henc transmiss delay success repli increas process time preced repli distribut transmiss delay therefor show five peak five repli process see figur ieee transact parallel distribut system appear ms nomessag fig distribut transmiss delay unicast messag sent local leader elect protocol distribut base repli network load kbytesec drop fig likelihood messag drop respect network load network oper system drop me sage exampl ethernet base system messag drop messag collis cabl checksum error howev like oper system drop messag buffer overrun occur cannot deliv messag fast enough receiv process measur likelihood udp packet drop differ network load use setup network load measur sun ipx workstat group pair measur process pair send pingpong unicast messag fix schedul wait time send messag chang network load chang schedul wait time network load kbytesec approxim messag drop load kbytesec decreas see figur also perform experi test commun omiss failur independ use comput setup befor note omiss failur independ probabl two consecut messag drop squar probabl messag suffer omiss failur sent messag process high network load about kbytesec these length dropsequ dropseq length measur independ fig messag omiss failur independ messag suffer omiss failur measur ment one process experienc drop consecut messag sent process figur show measur likelihood messag part sequenc x f g consecut drop messag also plot curv would look omiss failur independ show messag omiss failur independ b datagram failur assumpt variou experi test system detect messag corrupt far sent messag known random content system deliv corrupt messag also test messag duplic none messag deliv onc probabl undetect messag corrupt duplic might neglig system howev one use addit softwar layer reduc probabl degre becom neglig softwar layer transpar process ie process need know exist sourc address spoof occur process p send messag process q make q believ differ process r p sent m valid assumpt impli assum probabl sourc address spoof neglig one cannot neglect probabl one use messag authent reduc probabl becom neglig done manner transpar process note messag authent increas transmiss time substanti special hardwar assist summari asynchron datagram servic assum omissionperform failur semant drop messag fail deliv messag time manner one neglect probabl sourc address spoof messag deliv system corrupt deliv multipl time broadcast messag allow asymmetr performanceomiss failur sens process might receiv broadcast messag time manner process cristian fetzer time asynchron distribut system model might receiv late all sinc ae ffi min ffi small quantiti equat c process manag servic c process mode process p one follow three mode see figur ffl up p execut standard program code ffl crash process stop execut code ie take next step algorithm lost previou state recov p execut state initi code creation restart crash process either crash recov said down follow event caus process p transit mode specifi see figur ffl start p creat start recov mode crash time exampl underli oper system crash ffl readi p transit mode up finish initi state ffl recov p restart crash re cover mode defin predic crash p true iff p crash time t p crash cannot execut step algorithm defin predic recov p true iff p recov time t process recov consequ start recov event occurr crash readi crash crash recov ere recov ere crash recov start fig process mode transit c alarm clock process p set alarm clock awaken specifi futur clock time p request awaken clock time process manag servic awak p h p t show valu least call alarm time process p take step set alarm clock unless awaken alarm time receiv messag awaken time assum process p set alarm clock awaken previou alarm time assum process signal error case request awaken time alreadi pass avoid thi process defin posit alarm time rel current time instead specifi absolut alarm time thi happen receiv messag awaken alarm time overwritten ie p awaken alarm time word time process p one activ alarm time ie alarm time overwritten p awaken note process maintain multipl alarm time base alarm clock provid time asynchron system model use follow predic specifi behavior alarm clock request realtim awaken futur realtim u h p u ie p want take next step hardwar clock show least valu unless receiv messag ffl wakeup u p t process manag servic wake p realtim u alarm clock time process p crash process manag servic forget activ alarm time p set crash ing p never crash assum eventu awaken activ alarm time behavior alarm clock constrain follow requir process p awaken alarm clock time realtim u hardwar clock show least u p request previou awaken s u process p crash overwritten alarm time awaken sinc s formal ac requir express follow pust wakeup u scrash v t let earliest realtim ie smallest valu h p tt call real alarm time specifi setalarm event consid process manag awak process p alarm time realtim u ie wakeup u hold delay call schedul delay experienc process p process manag servic ensur exist upper bound schedul delay howev time servic defin schedul timeout delay oe actual schedul delay like smaller oe sinc ae oe small quantiti equat say noncrash process p suffer perform failur awaken within oe last time specifi see figur ie awaken local hardwar clock h p show alreadi valu greater oe case say p late otherwis p awaken hardwar clock show valu t said time p awaken h p show p said earli sinc easi avoid earli time failur by check h p go sleep h time model assum process suffer earli time failur formal process p suffer perform failur realtim u exist alarm time caus wakeup event u pfail u tcrash v defin predic time u p true iff p time u time u extend notion process p time time interv follow time time note includ process time messag definit time process reason conceptu protocol time model add process time messag transmiss delay messag sent process see detail descript slow process messag therefor transform messag perform failur clocktim time late alarm time fig process p time awaken within oe tick alarm time process p suffer perform failur or late awaken oe time model exclud earli time failur ie process never awaken time c measur implement alarm clock unix famili oper system one use select system call call allow specif maximum interv process wait specifi io event kernel return unix tri awak process specifi time interv expir use intern timer suno timer resolut ms thu schedul delay timeout oe chosen least ms figur show distribut schedul delay experienc process execut membership protocol measur perform normal daytim use system low load c process failur asssumpt time model assum process crashperform failur semant howev execut process might stop prematur crash failur process might awaken within oe time unit activ alarm time perform failur process recov crash applic probabl processor execut program process incorrectli neglig system probabl cannot neglect one use redund lower protocol level guarante crashperform process failur semant exampl consid processor suffer measur fig distribut show differ time process awaken time request awaken base measur failur case one use processor pair execut program process lock step two processor disagre result instruct processor stop execut way processor failur transform crash failur dual processor approach transpar process thu assumpt process crashperform failur semant reason iv extens core time asynchron system model assum datagram servic process manag ser vice local hardwar clock introduc two option extens model stabl storag progress assumpt extens reason network workstat howev system might need actual access stabl storag progress assumpt state infinit often major process stabl ie behav like synchron sy tem bound amount time progress assumpt valid local area network base sy tem necessarili valid larg scale system connect wide area network moreov servic specif need progress assumpt enabl implement time asynchron sy tem sometim use term core model ex tend model distinguish model includ assumpt stabl storag progress assumpt addit core assumpt datagram ser vice process manag servic local hardwar clock a stabl storag lose memori state crash allow process store inform crash introduc extens time asynchron system model local stabl storag servic servic provid follow two primit local process p ask valu val store address addr cristian fetzer time asynchron distribut system model ask read recent valu store address addr p yet store valu addr valu undefin return predic denot invoc primit realtim are store addrval read addrval respect stabl storag servic guarante address process p read return recent valu p store address a ani read utvstor u ststore av stabl storag servic implement top unix use unix file system implement servic perform describ b stabil progress assumpt timeli requir encount specif protocol design time asynchron system model often condit sens system stabil predic true system achiev someth good see eg condit timeli requir express set process sp p stabl ie behav like synchron system is failur affect sp commun bound frequenc occurr server sp guarante progress within bound amount time call set sp stabl partit iff ffl process sp time ffl bound number messag sent process sp deliv time ffl partit either messag late messag arriv sp concept stabl partit formal stabil predic defin set process sp form stabl partit given time interv s t multipl reason definit stabil predic exampl stabl predic major stabl predic paper formal defin stabil predic deltafpartit introduc inform that first formal gener notion connected disconnected introduc deltafpartit two process p q fconnect time interv s t iff p q time s t f messag sent two process s t deliv within ffi time unit denot fact p q fconnect s t predic time u time u process p deltadisconnect process q s t iff messag deliv p s t q transmiss delay unit common situat two process delta disconnect network overload least one process slow one use failawar datagram servic detect messag transmiss delay delta guarante messag transmiss delay ffi wrongli suspect transmiss delay delta use predic deltadisconnectedpqst denot p deltadisconnect q s t deltadisconnectedpqst delta deliv u say nonempti set process deltafpartit interv s t iff process fconnect s t process delta disconnect process deltafpartit s t psrp deltadisconnectedprst exampl util stabil pred icat consid atom broadcast protocol design achiev group agreement semant messag possibl lost late resent f time group process form deltafpartit suffici long time group make progress success broadcast messag time b progress assumpt lifetim distribut system base local area network character long period exist major process stabl stabil period altern short instabl period explain bursti behavior network traffic caus temporari instabl exam ple traffic burst caus occasion core dump file transfer via network base observa tion introduc concept progress assumpt show classic servic consensu origin specifi use uncondit termin requir ment implement extend time model progress assumpt state system infinit often stabl exist constant j time s exist major process sp sp form stabl partit t b measur first measur show transmiss delay distribut time see figur use experi process process receiv send udp messag per second henc sent messag everi second ethernet messag contain payload byte ie induc network load kbytesec also measur behavior six process run sun workstat depend system lab period day normal load condit see figur set six pro realtim s transmiss time fig graph show transmiss delay messag receiv one process period second transmiss delay messag stay long period time well ms howev sporad delay increas well ms cess were averag deltast s ie six process form deltafpartit ms averag distanc two deltast period ms typic behavior experienc unstabl phase one six process slow measur use modifi membership servic whenev process declar cannot keep membership upto date six process stay membership knew fp p g deltast theoret point view one cannot determin perfectli system deltast howev one determin system look process like deltast which practic point view equival system deltast note membership servic allow fast process continu make progress even system deltast temporarili remov slow process membership word system instabl might result remov slow disconnect process experi almost case remain process still provid safeti timeli properti v commun time synchron system commun time ie commun inform achiev measur passag time import exampl correct process p hear time iamal messag q p know q crash commun uncertainti character time asynchron system make commun time difficult in restrict form still possibl exampl time model p hear q time iam aliv messag q p know q crash howev p know q iamal suffer failur mani applic suffici sinc p ms unstabl phase fig observ time two deltast period six pro cess ms period hour typic failur behavior observ consecut stabil period one process slow care commun q time manner exampl leader elect pro process p might support elect q long p commun q time manner otherwis might tri support elect anoth process with commun time man ner howev leader elect exampl make sure one leader time synchron system enforc properti straight forward sinc process detect perfectli current leader crash henc replac new leader asynchron system enforc properti easi sinc one cannot decid current leader l crash slow commun l slow illustr two process p q use commun time ensur time one leader use lock mechan view leas mechan system without synchron clock mechan enabl commun time even local clock synchron mechan work follow send inform messag process q p say inform valid certain amount time ffl q receiv m calcul upper bound transmiss delay determin long use m ffl p determin consult local hardwar clock time beyond q longer make use inform contain m concret consid pseudocod figur exampl use commun time enforc one correct process p eventu leader ensur one leader time even though q might leader bound amount time concentr main aspect ie p detect q leader cristian fetzer time asynchron distribut system model anymor q get one chanc becom leader p send q messag say q leader certain amount time complet leader elect protocol use time lock mechan found process p send messag q inform q becom leader durat clock time unit transmiss delay delta realtim unit process q calcul upper bound transmiss delay determin use m failawar datagram servic introduc calcul upper bound transmiss delay messag deliv fast transmiss delay delta process q use fast set variabl expira tiontim qs leadership expir exactli durat time unit recept local clock time rt process p wait durationaedeltaa clock time unit becom leader factor ae necessari ps qs hardwar clock drift apart ae factor ae sinc ps clock drift apart realtim deltaa maximum transmiss delay delta fast messag m process r fp qg leader iff function leader evalu true call valu rs hardwar clock argument ie leader r process p q never leader time sinc q leader transmiss delay delta leader durat local clock time unit receiv m p sent m wait least durationaedeltaa local clock time unit becom leader note leader implicitli demot advanc hardwar clock sinc process might delay immedi check leader demot process might immedi detect demot howev leader use proper way process detect messag demot leader follow way ffl process r first read hardwar clock h r show valu t ffl r determin leader queri function leader time r leader process send messag n set send timestamp n ffl process receiv n calcul transmiss time n base ie delay r ad transmiss time n exampl r swap read leader send n delay swap ad transmiss delay n receiv n reject n transmiss delay n slow summari typic transform delay demot leader messag perform failur detect receiv messag const time durat delta boolean leadertim now expirationtim return true return fals process p begin leader q select event wakeupt select process q begin select event fagammadeliverm p fast rt fast endif select fig pseudocod use commun time enforc correct p eventu leader ensur one leader time even though q might leader bound amount time vi possibl imposs issu address section issu problem like elect consensu implement actual distribut comput system allow determinist solut timefre model extent core time model fix idea use elect problem illustr issu whether leader problem determinist solut depend exact specif problem use progress assumpt whether underli system model allow commun time main intuit one weaken problem one solv problem system well behav one requir instead system well behav time time henc one solv problem system well behav one use commun time circumv imposs one cannot decid perfectli remot process crash eg one use local hardwar clock decid time quantum remot process expir a termin vs condit timeli condit commonli agreedupon rigor specif elect problem exampl specifi elect problem timefre system model follow s realtim exist one leader ieee transact parallel distribut system appear infinit often exist leader ie realtim exist realtim process p becom leader t typic problem specifi time system use strong uncondit termin condit like requir someth good eventu hap pen instead use condit timeli condit requir system stabil priori known durat someth good happen within bound time introduct deltafst predic earlier gener specif given elect or highli avail leadership problem time asynchron system follow s realtim exist one leader tt major process deltafst time interv s exist process p becom leader s specif s tf implement timefre system even one process allow crash s tt implement time system explain so consid timefre system contain least two process p q implement one solv follow problem process p becom leader realtim stay leader crash later time s remain process detect p crash elect new leader time u satisfi requir tf sinc process commun messag one find run indistinguish remain process p crash still leader u word one find run least one two requir stf violat implement s tt time asynchron system explain follow first ensur properti s process decid current leader crash slow process leader bound amount time demot see section v process therefor wait certain amount time without exchang messag make sure leader demot particular process abl decid remot process crash thi imposs timefre time asynchron system model second system stabl major process time commun time fashion suffici elect one process leader bound amount time ensur timeli requir also satisfi note specif s tf implement core time model even one process allow crash explain thi consid run r process commun process be caus datagram servic drop messag one process l r leader construct run r l alway crash r r indistinguish r remain process therefor r otherwis exist least two process q r becom leader time t respect construct run r indistinguish r process p q leader point realtim sinc p q cannot commun process in r b commun time import fault toler one interest question s tt could implement timefre system sinc notion stabil defin timefre system sketch follow altern result instead s tt implement time system hardwar clock remov even one process crash omiss failur occur note that process access local hardwar clock cannot determin upper bound transmiss delay messag leader enforc demot within bound time also known process particu lar mean interprocess commun is like timefre model explicit messag thu proof sketch s tf implement timefre model also appli s tt time system model without hardwar clock thu essenti understand access local clock run within linear envelop realtim enabl commun time process allow us circumv time model imposs result state timefre model c progress assumpt anoth observ s tf determinist solut core time model implement practic network workstat reason time asynchron system model allow principl run system never stabl actual system one encount practic make behavior extrem unlik ffi oe well chosen mention earlier system like altern long stabil period rel short instabl period describ system therefor reason use progress assumpt see section ivb is assum exist j system infinit often stabl least j time unit j progress assumpt ensur solut s tt elect leader infinit often thu introduct progress assumpt impli solut s tt also solut s tf servic specif defin asynchron servic implement time model alway use condit timeli condit never use termin condit like tf gener need progress assumpt enabl implement servic condit timeli condit time asynchron system ie servic implement core time system model furthermor progress assumpt reason local area system necessarili valid wide area system frequent partit long time thu includ progress assumpt part cristian fetzer time asynchron distribut system model core time asynchron system model vii conclus given rigor definit time asynchron system model base measur report previous perform network workstat depend system laboratori unpublish measur lab awar off believ time asynchron system model accur descript actual distribut comput system particular believ set problem solvabl time model extend progress assumpt close approxim set problem solvabl system workstat link reliabl possibl local area base network realworld applic soft realtim con straint henc applic need notion time neither origin timefre model extens failur detector provid that model therefor necessarili adequ foundat construct applic soft realtim constraint time model instead provid applic suffici strong notion time time model also good foundat construct failsaf hard realtim applic see r evalu quorum system internet imposs group membership unreli failur detector asynchron system probabilist clock synchron understand faulttoler distribut system synchron asynchron group communica tion atom broad cast simpl messag diffus byzantin agreement implement perform stabl storag servic unix agre processorgroup membership asynchron distribut system consensu presenc partial synchroni padr protocol asymmetr duplex redund highli avail local leader servic possibl consensu asynchron system approach construct failsaf applic system support fail awar realtim applic build faulttoler hardwar clock imposs distribut consensu one faulti process effici faulttoler mechan distribut file cach consist distribut comput model method simul synchron processor time synchron network time protocol model analysi comput network clock simul synchron clock common knowledg distribut system failur mode assumpt assumpt coverag elect vs consensu asynchron system appli cryptographi quasisynchron step away tradit faulttoler realtim system model highli parallel atom multicast protocol tr ctr jeanfranoi hermant grard le lann fast asynchron uniform consensu realtim distribut system ieee transact comput v n p august christof fetzer flaviu cristian failawar approach construct failsaf system realtim system v n p march robert miller anand tripathi guardian model primit except handl distribut system ieee transact softwar engin v n p decemb roy friedman achour mostefaoui michel raynal asynchron bound lifetim failur detector inform process letter v n p ying zhao wanlei zhou elicia j lanham shui yu mingjun lan selfadapt clock synchron base clock precis differ proceed twentysixth australasian confer comput scienc research practic inform technolog p februari adelaid australia yun wang emmanuel anceaum francisco brasileiro fabola greve michel hurfin solv group prioriti invers problem time asynchron system ieee transact comput v n p august christof fetzer perfect failur detect time asynchron system ieee transact comput v n p februari keidar sergio rajsbaum cost faulttoler consensu fault preliminari version acm sigact new v n june ittai abraham gregori v chockler idit keidar dahlia malkhi byzantin disk paxo optim resili byzantin share memori proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada taisuk izumi akinori saitoh toshimitsu masuzawa adapt timeli consensu presenc crash time fault journal parallel distribut comput v n p june keidar alexand shraer timeli failuredetector consensu perform proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa p d v van der stok a h t janssenraemaek realtim atom multicast algorithm implement share memori multiprocessor realtim system v n p januari roberto baldoni carlo marchetti threetier replic ftcorba infrastructur softwarepractic experi v n p juli jian yin jeanphilipp martin arun venkataramani lorenzo alvisi mike dahlin separ agreement execut byzantin fault toler servic proceed nineteenth acm symposium oper system principl octob bolton land ny usa shivak mishra christof fetzer flaviu cristian timewheel group commun system ieee transact comput v n p august gregori chockler dahlia malkhi lightweight leas storagecentr coordin intern journal parallel program v n p april christof fetzer flaviu cristian highli avail local leader elect servic ieee transact softwar engin v n p septemb massimo franceschetti jehoshua bruck group membership algorithm practic specif ieee transact parallel distribut system v n p novemb sandeep s kulkarni ravik stabil causal determinist merg journal high speed network v n p april p cicotti m taufer andrew a chien dgmonitor perform monitor tool sandboxbas desktop grid platform journal supercomput v n p novemb paul d ezhilchelvan francisco v brasileiro neil a speir timeoutbas messag order protocol lightweight softwar implement tmr system ieee transact parallel distribut system v n p januari gregori v chockler idid keidar roman vitenberg group commun specif comprehens studi acm comput survey csur v n p decemb xavier dfago andr schiper pter urbn total order broadcast multicast algorithm taxonomi survey acm comput survey csur v n p decemb