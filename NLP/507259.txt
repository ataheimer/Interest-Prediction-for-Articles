t axiom realtim logic a paper present complet axiomat two decid proposit realtim linear tempor logic event clock logic eventclocktl metric interv tempor logic past metricintervaltl complet proof consist effect proof build procedur eventclocktl result obtain complet axiomat metricintervaltl provid axiom translat formula two logic equal express proof structur yield axiomat also interest fragment logic linear tempor logic real number tlr b introduct mani realtim system safetycrit therefor deserv specifi mathemat precis end realtim linear tempor logic propos serv basi specif languag preliminari version paper appear proceed tenth intern confer concurr theori concur lectur note comput scienc springerverlag pp work support part onr yip award n nsf career award ccr nsf grant ccr darpanasa grant nag aro muri grant daah belgian nation fund scientif research fnr european commiss wg aspir firework portugues fct praxi xxi walloon region belgacom preprint submit elsevi preprint novemb use real number time advantag specif composition sever syntax possibl deal real time freez quantif explicit clock firstord tempor logic integr interv timebound oper studi logic timebound oper logic one have certain restrict decid satisfi problem logic extend oper tempor logic allow specif time bound scope tempor oper exampl everi p event follow q event exactli time unit shown logic undecid even recurs axiomatiz one reason undecid result abil specifi exact distanc event exact distanc properti call punctual properti logic metricintervaltl obtain remov abil specifi punctual properti bound appear tempor oper must nonsingular interv exampl formula express everi p event follow q event least time unit time unit metricintervaltl formula interv nonsingular logic metricintervaltl decid decid result allow program verif use automat techniqu howev specif larg contain firstord part mixtur automat manual proof gener suitabl unfortun current automat reason techniqu base time automata provid explicit proof secondli axiomat provid deep insight logic third complet axiomat serv yardstick definit rel complet express logic such firstord extens complet axiomatiz style axiomat timebound oper logic cite import open question provid complet axiom system decid realtim logic proofbuild procedur build axiom system consid increasingli complex logic ltr eventclocktl past clock onli event past futur clock also call past futur oper method use show complet axiomat standard show possibl construct model consist formula specif proof complet adapt extens proof complet axiomat handl realtim oper requir care repres core technic contribut paper previou work present axiom realtim logic true versu rel complet result dens realtim complet result given realtim logic explicit clock timebound oper time model discret time domain natur number complet result present qualit non realtim part logic consid pa per there time domain consid dens hypothesi finit variabl consid drop and consequ differ techniqu appli axiom realtim logic propos axiom given firstord extens logic rel complet result studi note complet result given firstord tempor logic final rel complet result given durat calculu complet rel hypothesi valid interv logic formula provabl model logic realtim model time domain t choos nonneg real number r g dens domain natur give mani advantag detail elsewher composition full abstract stutter independ easi refin advantag result paper mainli depend densiti easili adapt ration number q real number r avoid zeno paradox add model condit finit variabl condit below finit mani state chang occur finit amount time interv convex subset time given t freeli use notat interv ft j constraint t interv ft jt g bound nonempti interv infimum also call greatest lower bound left endpoint begin supremum also call least upper bound right endpoint end interv thu usual written eg l r l left endpoint round parenthesi l indic l exclud interv r right endpoint squar parenthesi r indic r includ interv interv call leftopen rightclos extend notat usual allow r interv written form two interv j adjac right endpoint i note ri equal left endpoint j note lj either rightopen j leftclos rightclos j leftopen say nonempti everi finit interv time interpret proposit chang finit mani time interv singular ri case often use rather t t similarli l abbrevi l etc interv sequenc infinit sequenc nonempti bound interv first interv leftclos left endpoint interv i adjac t exist consequ interv sequenc partit time everi bound subset cover finit mani element partit let p set proposit symbol state p set proposit time state sequenc s i pair consist infinit sequenc state interv sequenc i intuit state period state thu time state sequenc view function p indic time state linear tempor logic real number ltr formula ltr built proposit symbol boolean con nectiv tempor until sinc gener follow p proposit ltr formula oe hold time time state sequenc written accord follow definit ltr formula oe satisfi exist time t oe ltr formula oe valid everi everi time t logic shown express equival monad firstord logic order real oper u slightli nonclass intuit requir oe start leftclos interv hand slightli weaker classic variant togeth express power show provid mutual translat section thu simpl matter tast note classic u abbrevi sequel use follow abbrevi defin below until reflex first argument until reflex two argument mean just futur for short time futur dual fl note k mean thu arbitrarili close futur introduc it sinc see due finit variabl fl dual mean eventu futur mean alway futur ffl reflex counterpart sigma mean unless futur ffl reflex counterpart w past counterpart abbrevi sinc reflex first argument sinc reflex two argument mean just past arbitrarili close mean eventu past mean alway past ffl reflex counterpart mean unless past ffl reflex counterpart z eventclock tempor logic formula eventclocktl built proposit symbol boolean connect tempor until sinc oper two realtim op erat time t histori oper oe assert oe true last interv gamma i predict oper oe assert oe true next interv i formula eventclocktl gener follow oe p proposit interv empti singular whose bound natur number or infinit hold time time state sequenc written t accord timevalu time trace sequenc event tick reset event reset event reset undefin small big block small small block small tick event clock fig histori clock evolv time rule ltr follow addit claus oe formula intuit seen express constraint valu clock measur distanc next time formula oe true sequel use analog call clock predict clock oe similarli oe formula seen constraint valu clock record distanc last time formula oe true call clock histori clock oe histori resp predict clock oe ffl next oe resp previou oe call tick ffl point oe held last resp hold next call event ffl point if ani oe hold resp held last call reset ffl oe true time true resp still true t say clock block time t ffl oe never true resp never true t clock undefin time t main part axiomat consist describ behavior relat clock time formal account relat eventclocktl formula clock refer interest reader simpli recal theorem satisfi problem eventclocktl complet pspace best result expect sinc tempor logic complex exampl p p assert everi p state first subsequ p state exactli unit later so between p fals formula assert whenev last p state exactli unit ago q true timeout metricinterv tempor logic restrict power metrictlin appar differ way eventclocktl realtim constraint attach directli until cannot punctual formula metricintervaltl built proposit symbol boolean connect timebound until sinc oper u oe j oe oe p proposit nonsingular interv whose bound natur number infinit hold time time state sequenc written t accord follow definit the proposit boolean claus ltr u oe iff here use classic respect origin definit matter explain subsect theorem satisfi problem metricintervaltl complet expspac although logic equal express translat must difficult enough absorb differ complex translat present section inde give exponenti blowup formula abbrevi sequel use follow abbrevi u oe untim until metricintervaltl uoe express next oeinterv leftclos u oe u oe mean within i ffl oe j sigma oe mean alway within i past counterpart abbrevi fact use notat logic intent harmless sinc definit semant equival furthermor redefin basic oper eventclocktl also use abbrevi assert everi q state preced p state time differ rightclos intermedi state r state formula p sigma p assert everi p state follow p state time differ least less time unit weaker eventclocktl exampl sinc p might also hold between cours unit exactli requir axiomat eventclocktl section present proofbuild procedur eventclocktl section simpli collect axiom use procedur present intuit mean logic symmetr past futur a dualiti call mirror principl except time begin end therefor axiom written futur understand mirror imag obtain replac u s etc also axiom mean axiomat futur fragment logic axiom make past futur interact proof techniqu make interact unavoid mainli axiom qualit axiom complet ltr use rule infer replac equival formula proposit tautolog nonmetr part use follow axiom mirror imag mainli make use fl oper shall see correspond transit relat structur axiom usual necessit modal gener rule express axiom similarli usual weaken principl express slightli nonclass form allow distribut fl boolean oper note valid requir finit variabl describ u oper transmit interv boundari give local consist condit transmiss ensur eventu combin also seen weaken left side u induct axiom essenti express finit variabl properti transmit interv boundari true point said otherwis point reach cross finit mani interv boundari axiom express time begin end written axiom independ begin end axiom order deal easili time domain see subsect appar spuriou fl occur abov eg use futur bound remark theorem show axiom form complet axiomat logic real number finit variabl defin ltr system propos unfortun unsound redund incomplet inde axiom f unsound axiom f deduc axiom f system cannot deriv induct axiom see last point take structur form r follow r finit variabl satisfi system correct accord induct axiom thu valid formula cannot deriv system quantit axiom realtim part first describ static behavior intersect union interv translat conjunct disjunct due fact singl next event ij oe oe j oe ij oe oe j oe sinc strict futur oper valu never use constrain time next occurr simpli requir futur occurr final addit correspond nest next step proof describ singl realtim oe evolv time use fl use reduc leftopen event easier case leftclos one axiom complet formula realtim oper predict oper oe track qualit formula oe singl histori track formula use mirror axiom plu axiom express futur time infinit bound exceed descript provid axiom mostli express automaton figur show possibl evolut histori predic figur receiv formal statu lemma consequ oe fig possibl evolut histori clock axiom simpli read automaton instanc oe oe oeu fl oe check look path start oe soon sever formula present cannot combin individu behavior evolv synchron with common implicit real time use famili axiom and mirror express common speed express properti order addit express differ clock said otherwis order tick correspond order event use u or w express order puq mean q occur or time as p eg anteced oe state oe tick now thu togeth event shall order oe similarli say last oe less ago even closer last less ago well theorem use proof deriv rule ltr and thu eventclocktl lemma rule modu ponen modal gener deriv oe proof ffl rule modu ponen deriv replac follow oe deduc proposit oe replac oe proposit ffl rule modal gener also call necessit deriv similarli oe deduc oe replac obtain uoe take get lambdao well also need theorem oe sigmao oe oe oe j oe i j proof remov condit fl mirror use dualiti expand definit prove soe s result mirror oe oe formula fals begin time take j obtain well prove mirror sigma fl or complet axiomat system eventclocktl usual sound system axiom prove simpl induct reason structur axiom concentr difficult part complet propos axiomat system usual tempor logic weak complet everi valid formula eventclocktl exist finit formal deriv axiomat system formula often conveni prove contraposit everi consist eventclocktl formula satisfi due mirror principl explan given futur onli proof divid step prove complet increas fragment eventclocktl first deal qualit part without realtim part proof follow roughli complet proof discretetim logic a work world built syntact maxim consist set formula b identifi transit relat syntact counterpart next oper discretetim logic fl express transit close open interv express transit open close interv c impos axiom describ possibl transit oper d give induct principl extend properti local transit global properti realtim part a give static clock b describ transit clock c axiom forc clock evolv simultan complet axiom prove show realist clock evolut allow axiom qualit part let us assum formula ff consist let us prove satisfi simplifi present proof use follow lemma lemma everi eventclocktl formula rewritten equival formula use constant proof first use theorem oe i oe i oe everi formula oe li rewritten conjunct formula bound interv use axiom mn oe m n oe everi interv decompos nest oper associ interv length xi sequel assum formula ff want construct model eventclocktl allow lemma defin set cff formula associ ff ffl sub subformula ff ffl formula sub subject futur realtim constraint subg say predict clock associ formula ffl formula also track floe next occurr oe leftopen simplifi notat inform oe reconstruct axiom rg ffl select whether track oe floe need formula give open next interv ffl formula give current integ valu clock f oe oe jg thank initi transform consid whether integ valu among these tick formula use f determin fraction part clock ig ffl also defin mirror set instanc ffl formula give order fraction part clock code order tick g ffl eventu ffl constant true use lemma close union set fl obtain closur ff note cff step preserv finit sinc stop ad one oper theorem show addit would semant useless past also give result sinc two possibl case true move negat outsid cancel them except perhap one otherwis know fals case one fl one need use notat convent identifi formula simplifi form exampl write oe cff floe cff mean simplif oper note although qualit part need alreadi includ realtim formula use later subsect behav simpl proposit proposit consist structur set formula f ae cff complet wrt cff formula oe cff either oe f oe f proposit consist i call set proposit atom cff defin first structur finit graph set proposit atom cff delta theta transit relat structur delta defin consid two subrel repres transit rightclos leftopen interv repres transit rightopen leftclos interv proposit atom defin transit relat delta union delta defin atom singular iff contain formula symmetr oe oe lemma follow b atom singular iff irreflex ie adelta b singular b singular singular b singular singular one atom uniqu c b delta c initi iff contain singular sinc contain monitor iff contain ff formula check float satisfi atom exactli repres conjunct formula contain written a proposit complet have lemma w a relat delta defin formula deltaa w b formula b simplifi v floea oe proposit structur member b allow vari freeli thu cancel distribut rule lemma proof dualli w b simplifi v oea oe therefor lemma let delta transit closur delta sinc delta similarli lemma use disjunct rule reachabl a obtain a use induct axiom use necessit modu ponen obtain lemma eventclocktlconsist structur say atom eventclocktlconsist proposit consist consist axiom rule given section now consid structur delta subset proposit atom eventclocktlconsist lambdag note lemma still valid structur pi inconsist atom suppress investig deepli properti structur pi show prove structur consist formula ff satisfi first defin notion ffl maxim strongli connect substructur mscsomega nonempti set structur pi that everi atom reach atom omegagamma ie omega strongli connect omega ieomega maxim ffl mscsomega call initi deltad omega omegagamma ie omega incom edg ffl mscsomega call final deltad omega omegagamma ieomega outgo edg ffl mscsomega call selffulfil everi formula form oe uoe omegagamma exist b omega oe b establish two properti msc structur pi everi final mscsomega structur pi selffulfil proof let us make hypothesi exist oe uoe omega b d oe b lemma hypothesi oe b theorem proposit reason conclud use axiom hypothesi oe obtain definit sigma obtain contradict imposs sinc is hypothesi consist xi lemma everi nonempti initi mscsomega structur pi contain initi atom ie exist omega a proof definit initi msc know deltad omegagamma us make hypothesi omegagamma a mirror lemma conclud proposit reason hypothesi contradict axiom pi thusomega empti xi actual initi msc made singl initi atom sequel concentr particular path call run structur pi run structur delta infinit sequenc atom infinit sequenc interv that initi initi atom consecut everi singular everi singular atom singular altern altern singular open interv ie singular i open eventu set fa n nmg final msc note that moment time inform provid pure qualit singular open therefor altern sequenc adequ qualit stage later construct specif sequenc satisfi also realtim constraint sequel given i aet denot atom lemma transit relat delta structur pi total ie atom exist atom deltab proof prove consist thu complet form atom b assum not definit replac give fl phi phi set ffloej fl oe ag ffloej fl oe ag inconsist use again set ffloejflo agffloejflo ag inconsist thu inconsist contradict xi lemma everi atom structur pi run ae pass a proof initi ie everi atom pi either initi reach initi atom let us consid atom a initi done otherwis let us make hypothesi reach initi atom mean b proposit complet b lemma proposit reason use axiom obtain contradict a use path first part run consecut construct singular ie everi odd atom singular first second part run obtain take simpl path thu without selfloop sinc first atom initi singular on nonsingular singular state altern lemma final repetit techniqu might work msc singl atom know singl atom nonsingular thu singular also verifi altern choos altern interv sequenc sinc time inform irrelev point eventu ie everi atom pi reach one final msc pi direct consequ fact delta total fact finit use reach path second part run infinit repetit final msc run i structur pi qualit hintikka properti respect semant qualit tempor oper express follow condit realtim oper treat follow h singular singular either singular exist j st oe j k st singular exist either singular exist k st singular exist call run qualit hintikka run next show properti addit properti run relat hintikka properti abov lemma everi run i structur pi everi sigmao ffl either singular exist ffl nonsingular exist j oe j proof first let us prove follow properti transit relat delta recal sigmao j uoe definit proposit reason obtain definit mirror axiom proposit reason obtain two properti abov sigmao either oe appear j j singular and thu right close j singular and thu open interv oe never true sigmao propag rest run last possibl exclud definit run claus everi run eventu loop final thu selffulfil lemma mscsomegagamma either oe realiz loop sigmao omega omega thu eventu realiz xi lemma everi run i structur pi everi posit run oe uoe right implic properti h verifi ie ffl either singular exist k st ffl singular exist proof hypothesi know oe uoe first treat case singular ffl axiom lemma know exist j us make hypothesi j first oe atom ffl remain us show that k st reason induct valu k base case hypothesi oe uoe also as right close thu floe oe i definit theorem axiom fact hypothesi oe i prop allow us conclud oe i induct case induct hypothesi know oe kgamma oe first posit oe verifi establish result reason case k open thu kgamma singular right close thu floe cff floe definit oe uoe kgamma induct hypothesi axiom conclud oe uoe k use axiom theorem axiom fact oe k prop conclud oe k k close impli kgamma right open kgamma definit oe cff oe k oe k use properti mirror axiom conclud oe oe uoe k treat case singular axiom lemma know exist later atom j ie j i done otherwis j i must prove k st done reason abov xi prove revers ie everi time oe uoe verifi atom along run oe uoe appear atom lemma necessari qualit complet use properti lemma realtim oper lemma everi run i structur pi everi posit ffl either singular exist k st ffl singular exist proof reason consid three follow mutual exclus case singular exist reason induct show oe uoe j gammal l st ffl base case l hypothesi know oe j reason case a j gamma right close j gamma definit use axiom deduc prop b j gamma right open know hypothesi thu oe j gamma also j gamma use mirror axiom proposit reason definit ffl induct case l establish result us show result j gammal first note hypothesi oe j gammalgamma reason case a j gammal right close j gammal definit gammal axiom oe uoe j gammal b j gammal right open j gammal definit gammal know hypothesi oe j gammal singular j gammal by induct hypothesi use mirror axiom proposit reason obtain oe definit oe uoe j gammal singular oe j singular definit axiom proposit reason obtain desir result oe uoe singular oe j exist case treat induct reason similar first one abov also two correspond mirror lemma soper previou prove lemma shown qualit axiom section complet qualit fragment eventclocktl ie logic ltr lemma run ae hintikka properti ltr formula everi proof hintikka properti prove lemma abov express without refer time t remain prove impli usual definit induct formula must prove h cours take somewher j divid part part empti singular part k i j part j convers usual definit impli h first note given t aet singular singular mean lemma thu merg i ensur singular iff singular without loss gener let j first index oe singular els j i take j without loss gener sinc need must h symmetr xi final follow theorem express complet qualit axiom logic ltr theorem everi ltr formula consist qualit axiom satisfi proof let ff consist ltr formula construct delta let atom structur ff atom b exist ff consist lemma exist run i lemma ae t thu ff turn complet realtim axiom quantit part run i structur pi time hintikka properti respect hintikka properti defin previous two follow addit properti h oe aet iff exist ti oe aet run respect addit properti call welltim run sequel show run structur pi modifi sequenc interv use procedur way modifi run welltim recal given track formula oe r ffl oe call tick call event note second case need consid thank axiom ffl oe oe oe floe call reset evolut realtim predic describ figur see statu draw lemma track formula oe r project pi restrict atom contain formula coe oe oe oe oe sigmagammao contain figur proof suffic show consist atom transit ad figur ffl atom axiom ffl transit simpli take miss arrow figur show cannot exist proof fairli long show excerpt assum atom contain oe oe link atom b contain oe way b axiom oe b definit fl oe a main step use mirror negat side fl imposs thu conclud contradict oe a show two transit elimin restrict coe first one contain oe oe coe contain oe oe prove use detail coe abbrevi oeuoe oe appli unfold u obtain use first disjunct imposs hand definit whenc contradict second transit elimin contain oe oe coe b contain oe oe definit a axiom contradict oe a constraint realtim formula atom begin constraint index e previou event tick reset occur end constraint index j next event tick reset occur vocabulari refer order time onli begin alway correspond end whether histori predict oper begin end tick reset event alway singular say the histori clock of oe activ event oe next reset oe small event next tick reset thi big big give actual constraint sinc stay big time one hand hand pass first tick forc time unit apart event thu monoton time ensur big constraint inde semant true defin scope constraint interv event next tick reset equival begin end vocabulari appli symmetr predict oper actual constraint either equal the time spend scope must link event tick inequ the time spend scope must less inequ alway link small clock constraint partial order scope enough solv constraint maxim scope shall see constraint maxim scope alway own index found end scope scope inequ extend event reset whether atom scope constraint which deduc content tabl show content atom end equal distinguish predict histori case tabl simplifi fact assum event close begin atom closest one past contain indic formula tabl equal constraint tick clock begin end oe tick oe oe oe event tabl show content atom indic clock small thu scope constraint whose begin whose end after begin resp end closest atom indic content tabl small clock begin end tick reset note exist begin end guarante fig clock cannot stay small forev section furthermor enforc stay small unit time proof show constraint solv iff compat sens scope equal cannot includ scope inequ strictli scope anoth equal axiom sever clock ensur compat previou section built run i irrelev qualit correct run i build welltim run j attribut wellchosen sequenc interv atom run satisfi realtim constraint befor introduc two lemma algorithm reli also read fig lemma everi run i structur pi proof lemma direct consequ mirror axiom xi lemma everi run i structur pi s exist proof lemma direct consequ mirror axiom xi algorithm proce induct along run attribut time point consequ open interv t attribut odd mention it defin even i ie attribut interv initi atom induct identifi solv tightest constraint contain i defin b begin tightest constraint case a equal constraint i last singular atom b contain time b ii els s last atom b contain time b set b equal constraint consid inequ constraint i comput earliest begin b small clock use tabl igamma b choos ii otherwis attribut say igamma algorithm select arbitrarili equal constraint still determinist lemma two equal constraint end i begin ident proof four combin equal constraint possibl first constraint oe a second constraint contain thu appli obtain oe repeat oe invert obtain soe formula impli mirror lemma cannot occur oe convers thu occur atom b second constraint event s contain oe appli obtain soe sinc contain u oe sinc eventu oe true now appli obtain oez know tick occur first perhap exaequo among possibl end z formula impli lemma cannot occur oe convers thu occur atom first constraint event oe oe oe a second constraint case simpli previou one oe invert b second constraint event s contain sinc eventu oe true now appli obtain s tick occur first repeat oe invert formula impli lemma cannot occur oe convers thu occur atom solv equat end also solv current partial inequ lemma scope inequ end equat begin j inequ begin b equat b j proof possibl form inequ see tabl begin ie j must show b j equat be a thu first case true hypothesi s must occur past give b j b oe oe oe oe b use obtain oez first case true hypothesi give b j cannot assum mirror lemma give begin it event ie j must show b j equat be a appli obtain oe mean mirror lemma b j soe otherwis appli yield oe contradict oe conclud b j b oe oe oe oe b j cannot revers s oe otherwis appli mirror deduc begin a reset either alreadi event use axiom show sinc interven j i fig impli j thu s deduc j now must show b j equat be a oe event oe b appli obtain oez mean b j interven j i use lemma u oe j use mirror oe oe j thu imposs sinc oe j conclud b j b oe oe oe oe b u oe use obtain oez reset occur strictli tick first case use interven posit j i u oe j use mirror oe j second case thu true mean b j imposs sinc conclud b j show algorithm attr assign time bound interv increas lemma sequenc built attr increas proof notat definit amount prove b defin sinc either in case equal middl point in case inequ b defin no constraint trivial verifi attribut igamma prove non trivial case induct i base case either a constraint activ b undefin prove induct divid case accord constraint select whose begin call a equal lemma begin befor ie b igamma b induct hypothesi increas b igamma b thu b inequ thu begin b igamma b sinc obtain sort induct hypothesi increas b igamma induct hypothesi thu furthermor algorithm attr ensur time increas beyond bound lemma sequenc interv j j built algorithm finit variabl exist proof although lower bound durat interv show time spend passag final cycl least thu real number reach index tc c number atom final cycl divid case cycl n contain atom scope constraint time spent els cycl contain constraint thu constraint maxim scope scope howev cannot greater one cycl let e end constraint thu e scope constraint earlier begin time spent scope constraint least let b begin scope constraint egamma b sinc begin end singular distinct thu algorithm give sinc scope cannot greater one cycl time spent cycl least procedur correctli solv constraint lemma interv attribut attr transform run ae welltim run attra proof show two supplementari properti welltim run must show next occur gamma i be a constraint automat satisfi becaus i mirror eventu rule guarante occur us take first j correspond event ii accord fig stay fals eventu reach iii axiom guarante satisfi equal entail satisfi greaterthan constraint sinc refer track event sinc equal later formula b sinc equal constraint algorithm attr must chosen equal constraint begin b thu lemma begin event oe also b c even singular know constraint still activ next atom end constraint alway singular ffl might becom equal the clock may tick case treat previou case with i instead i monoton time ensur ffl still inequ treat with instead i monoton time ensur thu point assum even let j begin constraint oe j constraint select attr be i equal lemma begin b j ii constraint chosen inequ pair also inequ let f begin algorithm select constraint earliest begin b let similarli must show next occur be a constraint automat satisfi becaus i eventu rule guarante occur j j take first j correspond event assum singular figur guarante first tick k iii reset rule guarante satisfi equal entail satisfi greaterthan constraint sinc refer end event sinc equal later formula b let j contain next event sinc equal con straint algorithm attr must chosen equal constraint j lemma begin i thu c let j contain next event constraint select attr j be i equal lemma begin b i ii constraint chosen j inequ pair also inequ j let f begin algorithm select constraint earliest begin b reader expect proof convers implic need thank xi consequ last lemma have lemma time run built attr hintikka properti event final obtain desir theorem theorem everi eventclocktlconsist formula satisfi proof ff eventclocktlconsist formula exist ffmonitor atom ff pi lemma exist set run sigma pass ff properti procedur attr lemma lemma lemma least one run hintikka properti event clocktl direct see i model ff time ff the interv time associ ff i thu ff satisfi xi corollari rule axiom form complet axiomat eventclocktl comparison automata construct spirit procedur given consid build automaton correspond formula known procedur decid use similar construct first build time automaton region automaton could use construct directli here involv featur automata counterpart logic thu could express axiom howev main idea similar region automaton record integ valu clock code formula form oe also record order fraction part clock code formula form oeu small differ howev simplic maintain inform need instanc record order two tick even tick link current valu clock relationship invert special case clock previou follow tick need cannot maintain fraction inform easi build care effici tableau procedur record need inform structur atom construct treat eventu differ spirit automata here may invalid path graph atom immedi add accept condit elimin obtain classic automaton less obviou design class automata express logic done time domain alreadi indic incident proof written adapt time domain twith minim chang consid total order dens time howev instanc could use time domain real number t r replac mirror ration number t q forc bound interv ration well noth chang otherwis transit open interv open interv possibl common bound irrat defeat induct axiom postpon studi case paper basic idea proof still appli bound real interv a close qualit part replac mirror quantit part first remov axiom durat interv state begin distanc end otherwis add best approxim thi b open qualit part replac mirror qualit point view open interv indistinguish infinit one translat metricintervaltl eventclocktl logic design differ philosoph standpoint metricin restrict undecid logic metrictl relax punctual ie forbid look exact time valu eventclocktl contrast forbid look past next event futur howev shown that surprisingli express power power given nest connect allow logic forbidden work here need mere proof express need finit number axiom express translat formula two logic give axiom procedur use provid proof equival first suppress interv contain u u j replac bound until u simpler sigma provid u l left endpoint i interv ig suppress classic use infinit interv reduc lower bound l use finit interv left bound equal exclud need use oper note formula u oe u oe reduc formula use constant use axiom left bound interv differ right bound differ reduc length interv use use follow rule recurs lower bound reduc way metricintervaltl formula translat event formula bound alway actual use small part eventclocktl elimin oe show basic oper express power full metricintervaltl convers translat much simpler oe sigma i oe sigma infg oe oeu axiomat metricintervaltl obtain axiom system metricintervaltl simpli translat axiom eventclocktl add axiom express translat inde translat direct therefor prove metricintervaltl formula translat event prove use procedur section proof translat back metricintervaltl prove s inde step replac replac invari syntaxdirect translat preserv equival finish proof add s actual translat axiom stronger state s case defin simpl consid mere shorthand thu axiom form complet axiomat metricintervaltl u understood shorthand theorem rule axiom axiom form complet axiomat metricintervaltl conclus specif realtim system use dens time natur mani semant advantag discretetim techniqu here proof techniqu gener modelcheck decis techniqu gener unfortun techniqu use translat automata power complex tempor logic thu suitabl build complet proof paper provid complet axiom system proofbuild procedur linear real time extend techniqu procedur use autom proof construct proposit fragment larger firstord proof possibl extens work are ffl proof rule admittedli cumbersom sinc exactli reflect layer structur proof instanc realtim axiom clearli separ qualit axiom intuit rule devis constraint paper provid easi way show com plete enough prove axiom paper also explain gener axiom even obviou gener possibl prefer stick axiom need proof facilit later complet proof use techniqu ffl logic use paper assum concret valu given realtim constraint demonstr hytech checker often use mention paramet instead symbol constant deriv need constraint paramet instead simpl yesno answer ffl extens result paper firstord variant metricin explor howev complet often lost firstord variant ffl develop program specif support automaton produc propos techniqu might help program skeleton style r exist refin map model check dens real time benefit relax punctual realli tempor logic logic model real time survey realli abstract concurr model tempor logic basic tens logic automat verif finitest concurr system use temporallog specif axiomat tempor logic sinc real number semant complet durat calculu next gener regular realtim languag tens logic theori order complet proof system qptl specifi messag pass timecrit system tempor logic check finitest concurr program satisfi linear specif glori past anchor version tempor framework tempor logic realtim system state clock logic decid realtim logic incomplet firstord tempor logic synthesi commun process temporallog specif tr automat verif finitest concurr system use tempor logic specif incomplet firstord tempor logic tempor logic real time system halford modal logic prove realtim properti exist refin map modelcheck dens realtim benefit relax punctual check finit state concurr program satisfi linear specif realli abstract concurr model tempor logic specifi messag pass timecrit system tempor logic regular realtim languag state clock logic glori past anchor version tempor framework logic model real time semant complet durat calculu complet proof system qptl hytech synthesi commun process tempor logic specif ctr carsten lutz dirk walther frank wolter quantit tempor logic real pspace below inform comput v n p januari