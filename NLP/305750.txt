t competit onlin algorithm distribut data manag a competit onlin algorithm data manag network processor studi paper data object file page virtual memori read updat variou processor network goal minim commun cost incur serv sequenc request distribut data manag import class networkstre busbas networksar studi optim algorithm constant competit ratio match lower bound obtain algorithm use differ interest techniqu work function chrobak larmor proc dimac workshop onlin algorithm am pp factor b introduct manag data distribut network import much studi problem manag scienc engin comput system theori dowdi foster give comprehens survey research area list eighteen differ model mani paper data ob ject f file page virtual memori read updat network processor processor may store copi f local memori reduc time requir read data object copi must kept consist howev multipl copi increas time requir write object read write request occur processor onlin algorithm decid whether replic move discard copi f serv request tri minim total cost incur process request onlin algorithm knowledg futur request assumpt made pattern request appli competit analysi algorithm let oe denot sequenc read write request determinist onlin algorithm said ccompetit if oe ca oe c delta opt ca oe opt oe cost incur optim offlin solut respect c b function independ oe may depend upon input network file size random algorithm replac ca oe expect cost consid two type adversari oblivi adversari choos oe advanc power adapt onlin adversari build oe onlin choos request knowledg random move made previou request oblivi adversari charg optim offlin cost adapt onlin adversari serv oe charg onlin see bendavid et al full discuss differ type adversari algorithm strongli competit achiev best possibl competit ratio paper focu two import class network tree uniform network tree connect acycl graph n node n gamma edg preliminari version paper appear research att lab mountain avenu murray hill nj usa email lundresearchattcom reingoldresearchattedu westbrookresearchattcom z work perform author yale univers research partial support nsf grant ccr x depart oper research att lab room j crawford corner road holmdel nj usa work perform author yale univers research partial support fellowship yale univers emailyanattcom j westbrook d yan uniform network complet graph n node unit edg weight obtain strongli competit determinist random onlin algorithm class algorithm use differ interest techniqu offset function factor competit onlin algorithm base offset function found server migrat problem advantag algorithm need record entir histori request onlin algorithm sinc decis base current offset valu updat easili factor first observ use idea break onlin problem tree singl edg problem thu strongli competit strategi singl edg gener tree algorithm strongli competit specif applic network also illustr two use techniqu random algorithm file alloc bare random ie use bound number random bit independ number request random choic made initi algorithm run determinist problem descript studi three variant distribut data man agement replic migrat file alloc describ framework given undirect graph e nonneg edg weight jv repres processor let f repres data file page memori store processor time let r v resid set repres set node contain copi f alway requir r initi singl node v contain copi f sequenc read write request occur processor read processor request examin content data locat f write processor p request chang content locat f locat identifi singl word record f read satisfi send messag processor hold copi f processor return inform store request locat write satisfi send updat messag processor hold copi f tell modifi desir locat request serv onlin server decid realloc multipl copi f integ constant repres number record f cost serv request redistribut file follow servic cost suppos request occur node v read request serv cost equal shortest path distanc v nearest node r write request serv cost equal size minimum steiner tree contain node r fvg movement cost algorithm replic copi f node v cost time shortest path distanc v nearest node copi f discard copi f cost file realloc consist sequenc zero replic discard repres set real posit integ nonneg integ respect section definit onlin distribut copi f replic alloc done order long resid set size least movement cost incur realloc equal total sum replic cost replic migrat problem special case file alloc migrat requir replic request read assum replic copi f discard offlin optim problem specifi r new request serv total cost incur minim onlin replic consid competit algorithm inequ abov otherwis trivial competit algorithm exist follow previou paper alloc relat problem adopt lookahead model model request reveal onlin algorithm must immedi pay servic cost make chang resid set one may contrast lookahead lookahead model algorithm may chang resid set pay servic cost discuss lookahead issu below togeth implement issu previou relat result black sleator first use competit analysi studi problem give strongli competit determinist algorithm file migrat tree uniform network strongli competit determinist algorithm replic tree uniform network replic imas waxman show greedi algorithm build steiner tree onlin thetalog ncompetit n number node ratio optim within constant factor gener network algorithm basi solut onlin replic gener network koga gave random algorithm competit competit adapt onlin adversari tree circl respect also obtain random algorithm competit ratio depend approach grow larg oblivi adversari tree migrat westbrook obtain random algorithm uniform network competit ratio depend approach grow larg oblivi adversari gener network westbrook obtain strongli competit random algorithm adapt onlin adversari also obtain algorithm oblivi adversari competit ratio depend approach oecompetit grow larg oe golden ratio chrobak et al studi migrat variou class metric space includ tree hypercub mesh real vector space gener product tree gave strongli dcompetit random algorithm space dcompetit determinist algorithm space gener lower bound determinist algorithm recent bartal et al obtain competit determinist algorithm file alloc gener network awerbuch et al bartal et al give ologncompetit determinist random algorithm adapt onlin adversari respect westbrook yan show bartal et al algorithm ologdgcompetit unweight graph diamet dg exist olog dgcompetit determinist algorithm bartal et al also find odcompetit determinist algorithm tree strongli competit random algorithm adapt onlin adversari tree uniform network sinc replic special case file alloc upper bound also valid replic addit constant b zero c lund n reingold j westbrook d yan replic migrat file alloc random uniform e e tree e e paper tabl state art tree uniform network note e new result paper contribut follow result ffl onlin file alloc tree give strongli competit determinist algorithm dcompetit random algorithm oblivi adversari show optim even g edg ffl uniform network show offlin file alloc problem solv polynomi time give strongli dcompetit random onlin algorithm migrat oblivi adversari uniform network ffl replic problem show offlin problem nphard impli file alloc problem also nphard obtain random algorithm e e gamma competit oblivi adversari tree uniform network optim even g edg alber koga independ obtain result onlin replic use differ method ffl show random algorithm replic singl edg better competit adapt onlin adversari thu koga algorithm replic tree strongli competit tabl summar competit ratio best known determinist random algorithm oblivi adversari replic migrat file alloc tree uniform network optim lookahead implement issu state abov adopt lookahead model use previou work alloc variant studi onlin problem howev use lookahead model subsect comment briefli distinct lookahead model alloc request sequenc could serv onlin algorithm lower cost would possibl lookahead model exampl write request occur lookahead algorithm drop one copi f servic request therebi reduc servic cost lookahead model appropri file alloc howev servic cost model messag cost satisfi request includ cost transmit answer back read request pass updat copi messag cost control messag must transmit order algorithm learn new request implement replic drop decis specif assum new replic occur unless least one member replic set told new request processor discard copi unless told new write request claim larg valu optim competit ratio lookahead model materi differ optim competit ratio lookahead model particular ccompetit algorithm use lookahead dcompetit algorithm use lookahead lookahead algorithm onlin distribut simul lookahead algorithm keep resid set lookahead algorithm save servic cost read amount save distanc replic file prior satisfi request similarli lookahead algorithm save servic cost write amount save weight minimum steiner tree connect drop copi undrop copi point past least one drop copi must replic edg steiner tree henc unit distanc save read lookahead algorithm one file move one unit distanc hold write total cost save lookahead algorithm time total movement cost algorithm incur movement cost howev one may ask whether servic cost optimist could algorithm actual implement use control messag account servic cost although directli address issu algorithm essenti distribut natur implement constant messag overhead special case uniform tree network preliminari use techniqu work function offset function introduc chrobak larmor let set state one legal resid set thu isomorph v n fg let rs denot resid set correspond state s say file system state current resid set rs s let set possibl request request node v respect request sequenc reveal onlin algorithm oe suppos network state oe arriv algorithm charg servic cost ser oe ser oe gammar describ section serv oe algorithm move differ state cost tran gammar minimum cost move two resid set work function w s minimum cost serv request i termin state s given oe minimum cost solut found dynam program algorithm follow function equat suitabl initi let opt optim cost serv first request call offset function valu state request reveal defin deltaopt increas optim offlin cost due oe onlin algorithm make decis base current offset valu s note comput ss deltaopt s suffic know igamma ss show algorithm ccompetit need show reachabl combin offset function request file system state inequ deltac deltaphi c delta deltaopt hold deltac cost incur deltaphi chang defin potenti function total chang phi alway bound nonneg sum inequ oe ca oe c delta opt oe b b bound valu steiner tree problem shall refer network design problem call steiner tree problem stp state follow instanc stp given weight undirect c lund n reingold j westbrook d yan graph e weight function edg subset z v regular node termin constant b decis problem ask exist steiner tree g includ node z total edg weight b stp npcomplet even g restrict bipartit graph unit edg weight planar graph survey stp found tree network union path pair termin give optim steiner tree determinist algorithm fap tree begin introduc concept use build determinist random algorithm file alloc tree say resid set connect induc connect subgraph g tree resid set alway connect node without copi f easili keep track r henc nearest copi f use pointer fact g tree limit attent algorithm maintain connect r time theorem tree exist optim algorithm alway maintain connect resid set ie given onlin offlin algorithm a exist algorithm maintain connect r ca oe ca oe oe onlin proof let ra resid set maintain re spectiv simul oe let time ra minimum connect set satisfi ra given ra tree defin uniqu read cost incur cannot greater a hold true write cost issu node v sinc span uniqu minimum length steiner tree ra fvg incur greater read write cost a algorithm need carri replic unless doe node alreadi leav copi f along replic path done without incur extra cost ra never need travers replic path longer replic henc cannot incur greater replic cost sinc realloc sequenc replic discard f maintain connect set time incur great cost realloc henceforth shall consid algorithm maintain connect resid set r time say algorithm replic node v shall mean leav copi f node along shortest path resid set v tree network make addit simplifi assumpt suppos algorithm decid move resid set r set r realloc involv sequenc replic drop lemma replic perform drop without increas total cost realloc proof drop copi increas cost subsequ replic henceforth assum algorithm compli lemma lemma let r node gain copi f f replic node order total cost delta jt r subtre induc node set r proof copi f must sent across edg r r least onc onlin distribut order replic copi cannot sent across edg onc endpoint contain copi f henceforth assum algorithm compli lemma use tool handl onlin optim tree factor make use fact sequenc request oe tree algorithm factor n gamma individu algorithm one edg total cost tree algorithm equal sum cost individu edg game edg a b construct instanc twoprocessor file alloc follow remov edg a b divid two subtre b contain b respect read write request node replac kind request a request node b replac request b let algorithm resid set ra algorithm induc algorithm edg a b follow ra fall entir b edg algorithm state b respect otherwis edg algorithm state ab edg algorithm chang state minimum cost way ie one replic factor approach use algorithm file alloc tree rest paper given edg a b use b repres subtre describ abov denot state edg in let offset function triplet offset function valu state oe arriv lemma algorithm request sequenc oe let ab algorithm induc edg a b oe ab request sequenc induc edg a b abe oe ab proof show cost incur event contribut amount side equat write request node v ca oe increas weight uniqu steiner tree contain node ra fvg induc problem edg e resid set request node opposit side e write cost equal es weight incur edg v resid set lie side e cost incur induc problem side equat increas amount read request node v argument write case use replac uniqu path v nearest node copi f side equat increas amount suppos move resid set r r consid sequenc replic discard make realloc process show induct length sequenc movement cost exactli equal sum movement cost induc edg problem suppos first action sequenc replic f node v cost time sum length edg shortest path r v sinc r connect edg path exactli edg must replic induc problem thu side equat increas amount first action discard cost incur induc edg algorithm lemma let opt oe ab cost incur optim edg algorithm a b sequenc oe ab abe opt oe ab opt oe proof lemma follow let lemma optim offlin algorithm fap tree note ca ab oe ab opt oe ab edg c lund n reingold j westbrook d yan a b follow lemma onlin algorithm oe edg a b ca ab oe ab c delta opt oe ab hold ccompetit construct determinist algorithm tree first construct suitabl optim algorithm singl edg design tree algorithm induc optim edg algorithm edg therebi guarante competit optim determinist edg algorithm let edg abg set state file system inonli node copi node b copi b copi respect assum g unit length otherwis offset cost function scale obtain result write offset function triplet similarli work function suppos start state a w dd ser tran function given tabl definit offset function sinc free discard copi f alway b least one a b zero without loss gener assum start offset function vector oe arriv tabl give chang offset differ combin request offset respons new request oe i b ab ab r w b r b w ab tabl transit servic cost case r mink w case r min l l tabl chang offset let current state r algorithm specifi new requir resid set r oe i arriv offset updat assum state zerooffset state algorithm edg d drop b ie set theorem algorithm detedg strongli competit onlin distribut proof first show request oe j deltac edg hold function phidelta defin below let zerooffset state time defin potenti function initi alway phi consid state b phia hold follow case r w r b r algorithm ensur deltac edg case let use show hold possibl combin state request offset offset state variabl one new request oe i arriv consid k case similar k oe r w case oe deltaopt last execut algorithm must case oe deltaopt ab must case oe deltaopt case deltac edg deltaphi lh hold inequ also hold detedg chang state detedg move state ab state a state ab deltaphi gammadeltac edg gammad henc hold possibl combin offset request resid set claim determinist algorithm better competit fap edg migrat known determinist algorithm better competit singl edg show given onlin algorithm fap exist anoth onlin algorithm i ca oe ca oe oe write request ii alway keep one copi f node as resid set iii whenev one copi f copi node sinc legal algorithm instanc migrat problem optim cost process oe without use replic less optim cost replic ccompetit writeonli sequenc ccompetit migrat algorithm impli claim algorithm obtain follow initi copi f node follow rule appli whenev chang state replic chang state migrat follow drop page follow node follow rule ii iii hold cannot incur write cost higher a movement correspond distinct migrat earlier replic a respect cannot incur higher movement cost a claim follow j westbrook d yan optim determinist tree algorithm recal edg tree request sequenc oe induc sequenc oe ab a b tree algorithm base factor individu edg subproblem simul detedg subproblem r oe serv edg induc request r ab comput offset vector induc subproblem updat follow algorithm execut updat resid set rt ree initi rt ree consist singl node contain f algorithm tree examin edg u v order simul first step algorithm detedg induc subproblem detedg replic one node say v induc subproblem add v rt ree replic v simul step detedg edg node v edg algorithm incid edg delet node v es resid set es induc problem mark v drop mark node show dettre competit show choos connect resid set edg induc state requir detedg immedi obviou requir detedg one edg might conflict anoth edg exampl one edg might want drop copi anoth edg replic begin analyz structur offset function induc edg problem rest subsect offset valu function refer result induc sequenc oe ab next lemma character offset distribut two adjac edg lemma follow properti hold a time exist root node r correspond zero offset state induc problem edg b edg x y tree defin x adjac edg x y y z inequ x y y z hold i follow earlier definit see begin section claim a state node r edg a b nearer r b state zero offset state edg note locat root node r may uniqu locat chang request lemma impli follow condit corollari edg root r x let z x neighbor y edg x y y z offset k xy l xy k yz l yz respect d let x y y z adjac edg root r subtre root form remov two edg let offset edg k xy l xy k yz l yz respect l xy l proof of lemma use induct number request initi let r node hold singl copi f edg offset vector dd lemma hold trivial assum lemma hold reveal request show remain valid oe t arriv node w first show locat new root let p repres path r w unless specifi otherwis offset refer one oe t arriv choos new root r use follow procedur procedur findroot i r edg along p offset otherwis move along p r toward w cross edg offset vector form l cannot go w reach pick node stop r let us show r valid root new offset pictur p chain edg start r go left right end w condit step algorithm satisfi oe t correspond request zero offset state edg tabl r remain valid root node suppos execut edg p p right r zerooffset state remain same node r valid root node edg c edg along p offset form l must form connect subpath p start r end r valu paramet l tabl offset chang l minfl min l l r valid root node them henc a hold choic r abov show b hold consid two adjac edg x y y z whose remov divid three disjoint subtre x z root y z respect show differ possibl posit r w b remain valid oe t arriv ie t x y t y z hold oe t write read r z assum hold oe t arriv suppos oe t read request r x w x edg condit b shown hold situat similar case analysi pleas refer appendix complet case analysi thu b hold request lemma follow theorem algorithm dettre strongli competit proof show dettre induc detedg tree edg theorem follow lemma theorem proceed induct number request initi rt ree consist singl node suppos rt ree connect first z edg a b state induc rt ree equal state desir detedg run oe ab consid process request step replic subinduct number replic done step show replic conflict state desir edg suppos process edg a b step caus f replic a lie b induc state definit detedg definit induc subproblem induct hypothesi let q path b nearest node rt ree q fbg then avoid conflict edg along q must also requir replic across it a c theorem see edg x y q c lund n reingold j westbrook d yan offset form nearer b y requir replic similar argument hold case step mark node drop perform subinduct number mark done step show mark conflict state desir edg connect resid set result suppos process edg a b step caus b mark occur a b sinc rt ree connect hypothesi b rt ree node b copi f span connect subtre b b root let us call b b fbg edg x y b state xy a c theorem x y must offset nearer b is detedg x y need drop copi f node y henc node b requir remov rt ree new rt ree remain connect edg conflict thu rt ree connect induc edg algorithm match detedg dettre competit random algorithm fap tree approach build random tree algorithm approach determinist case give random algorithm twopoint space randedg base counter valu assign node factor obtain randedg dcompetit algorithm randtre file alloc tree randtre requir gener ologd random bit begin algorithm run complet determinist simpler tree algorithm requir gener ofomegagamma d random bit request serv optim random edg algorithm randedg let edg a b maintain counter c c b node b respect satisfi algorithm maintain distribut r depend counter valu initi node copi f counter valu d node counter valu counter valu chang accord follow rule read request a increment c c d write request a c d increment c counter chang similarli request b chang counter valu case algorithm randedg alway maintain distribut r a c observ probabl copi f node v fa bg c v d order maintain distribut randedg simul determinist algorithm number d move determinist algorithm construct determinist onlin accord rule given below first request one algorithm pick random randedg make onlin distribut move chosen determinist algorithm thu p e s fa b abg proport algorithm state s expect cost incur randedg averag cost incur algorithm defin algorithm achiev probabl distribut suppos initi node copi f initi algorithm place state a follow chang made new request oe arriv without loss gener assum request aris node a the c c b valu refer counter valu oe arriv ffl chang algorithm chang counter valu d lowestnumb algorithm state b move state ab ffl case oe d lowestnumb algorithm state ab move state a ffl case oe d lowestnumb algorithm state b move state ab lemma randedg feasibl maintain probabl distribut proof feasibl mean whenev move must made case algorithm avail make move choic lowestnumb algorithm emphas choic must independ algorithm randedg actual emul lemma hold initi c c prove lemma induct request assum hold oe arriv chang counter valu oe arriv lemma hold trivial induct hypothesi case abov sinc c p e b least one algorithm state b case sinc c algorithm state ab case sinc c d algorithm state b henc randedg feasibl verifi chang algorithm implement probabl distribut new counter valu theorem randedg strongli proof node v fa bg maintain potenti function opt copi f v otherwis opt repres adversari let overal potenti function time phi show respons request chang state edeltac randedg hold deltaop edeltac randedg edeltam cost incur event opt servic movement cost incur randedg respect c c b valu counter valu new request oe arriv case request oe c d inequ hold trivial suppos c d edeltac randedg c lund n reingold j westbrook d yan opt copi f otherwis follow opt copi f oe arriv otherwis inequ hold case request oe edeltac randedg opt copi f b gammac b opt copi f b inequ hold case request oe c d lh hold trivial suppos c d edeltac randedg c opt copi f ae opt copi f otherwis henc hold case opt chang state opt chang state edeltac randedg check definit phi opt replic deltaop opt discard copi f deltaphi sinc hold possibl event theorem randedg strongli optim random tree algorithmrandtre extend randedg random algorithm fap tree mean factor algorithm randtre induc randedg edg induc request sequenc edg descript algorithm randtre randtre intern simul determinist algorithm maintain resid set span subtre initi resid set singl node contain f one simul algorithm pick uniformli random begin randtre behav exactli particular algorithm chosen maintain counter c c b edg a b tree use factor approach see section obtain induc request sequenc oe ab a b counter valu chang accord rule describ singl edg case section use oe ab randtre respond request maintain induc distribut requir randedg edg read request suppos new request oe read request node g let root g edg nearer g b is c c b valu describ counter valu oe arriv edg classifi three type edg c c b edg c d randedg requir chang probabl valu first two type edg type edg requir p e b decreas d p e ab goe d node v use v denot subtre root v randtre chang subtre configur maintain algorithm use follow procedur fig let f forest tree form type edg exist tree f least one edg let x leaf node p path x root node the root node node nearest g pick one algorithm maintain subtre z includ node x lie entir x make algorithm replic along p ie replac z z p remov edg p updat forest f fig algorithm randedg read request lemma randtre implement requir chang edg read request proof prove lemmabi induct request suppos randtre induc randedg edg oe arriv let parent node x randtre feasibl ie execut implement chang requir randedg describ abov edg show case x leaf node sinc x y type edg p xy x one algorithm must singl node fxg tree configur otherwis suppos descend edg x type let x w one them p xw none algorithm maintain subtre edg x sinc p xy x one algorithm must fxg subtre otherwis suppos x descend type edg let x w one them thu edg contain subtre least one algorithm none algorithm subtre w sinc p xy x least one subtre must lie x contain node x henc algorithm feasibl lemma hold write request suppos oe use notat read request case edg classifi three type edg c edg c j westbrook d yan randedg requir chang probabl valu type edg type edg requir p e ab decreas d p e a increas amount decreas d p e ab increas amount randtre perform follow fig let f forest tree form type edg exist tree f least one edg root node x one children node pick algorithm subtre z includ edg g z contain make algorithm replac z singlenod replac z tree form edg z gamma replac f subtre form let f forest tree form type edg exist tree f least one edg let x leaf node p path x root node pick one algorithm maintain subtre z includ node x lie entir x make algorithm replic along p ie extend z z p remov edg p updat forest f fig algorithm randedg write request lemma randtre implement requir chang edg request proof prove induct assum randedg induc edg oe arriv randtre feasibl implement requir chang edg show case consid first loop algorithm in step sinc p g x g x subtre z must exist randtre remov edg z contain note p e ab valu type edg zero randtre process edg topdown fashion configur connect subtre thu first loop execut consid second loop algorithm in step let parent node x p xy x leaf node one algorithm must fxg subtre x descend type edg first part algorithm one algorithm must fxg subtre run first loop algorithm suppos descend edg x type edg let x w type edg p xw one algorithm must fxg subtre henc algorithm feasibl lemma follow lemma impli randtre induc randedg edg theorem follow lemma theorem theorem algorithm randtre strongli dcompetit fap tree oblivi adversari lower bound show competit ratio best possibl file alloc oblivi adversari even g singl edg theorem onlin algorithm file alloc problem two point a b ccompetit c proof let random algorithm file alloc problem two point defin potenti function psi give strategi gener adversari request sequenc that i c request sequenc oe optimum cost c ii cost randedg oe least independ oe iii psi bound iv request gener adversari condit ii iii iv hold adversari sequenc oe sum sequenc give b bound condit i adversari make opt oe arbitrarili larg constant b independ oe ca opt oe b henc cannot ccompetit c defin adversari strategi assum onlin offlin algorithm start singl copi f a adversari gener request result offset function form zerocost selfloop request offset function unchang deltaopt theorem alway optim onlin algorithm incur expect cost zerocost self loop assum properti simplifi adversari strategi although result still prove without assumpt suppos current offset function i i let p probabl randedg state a suppos state probabl q q p adversari request w otherwis adversari request b r zerocost selfloop adversari request b r similarli a r zerocost selfloop adversari request w therefor adversari alway gener next request use rule request sequenc made arbitrarili long sinc offset function gener strategi arbitrarili long sequenc request must cycl offset function arbitrarili often notic howev cycl cost opt noth zerocost selfloop sinc adversari never use request cycl nonzero cost continu long enough adversari gener request sequenc arbitrarili larg optimum cost henc condit i hold next consid condit ii recal c c b counter valu maintain randedg claim offset function true initi f locat a d inspect randedg one verifi whenev adversari gener request b r c b increas whenev adversari gener w c b decreas henc expect movement cost incur randedg b r w refer proof theorem note amort cost randedg exactli d time cost opt request adversari might gener assum opt move follow request the adversari never gener b r c w c amort cost incur j westbrook d yan randedg therefor exactli d time cost incur optimum algorithm ever copi f a possibl show cost realli optimum sequenc case certainli lowerbound true optimum cost ii hold defin psi delta maxf g trivial bound iii hold final must verifi case adversari request w case new offset function must suppos request mass q a deltac case adversari request b r case new offset function must suppos request mass q a deltac migrat uniform network give dcompetit random algorithm oblivi adversari migrat uniform net work competit ratio optim even singl edg let g complet graph n node label n initi node copi f algorithm base offset calcul onlin let ng algorithm state singl copi f node s cost function ae ae otherwis initi w suppos ith request serv new offset node s calcul algorithm migrat algorithm maintain probabl distribut probabl ps node s contain f follow new request arriv algorithm move differ state transit probabl minim total expect movement cost maintain new requir distribut theorem given oe expect cost incur migrat ec mig oe satisfi proof show request arriv hold edeltac mig expect cost incur migrat edeltam expect movement cost deltaphi chang potenti function vs initi time sinc least one v offset tabl similar tabl file alloc construct sinc migrat equival fap write request seen request oe i node offset state increas one subject maximum d deltaopt node offset state decreas one offset remain same deltaopt case request v d case deltaopt increas one k edeltac mig verifi edeltam deltaphi movement cost zero also edeltac mig case request v deltaopt decreas deltaphi edeltam probabl mass s henc replic give upper lower bound perform random onlin algorithm replic problem c lund n reingold j westbrook d yan random onlin algorithm let e e e gamma fi gammae gamma dgamma describ random algorithm fi dcompetit oblivi adversari uniform network tree first consid singl edg r b unit length initi r contain copi f suppos algorithm ffcompetit replic f node b probabl ith request b p s ff must satisfi k z expect cost incur oe contain k request b optim offlin strategi replic copi f b first request arriv k d replic otherwis algorithm incur cost d replic right serv ith request k otherwis incur cost k optim random algorithm given set p valu satisfi inequ k ff minim note condit ident onlin block snoopi cach problem two cach karlin et al show optim ff valu fi achiev zero singl edg algorithm appli uniform network replic f node v ith request v probabl p anoth exampl factor theorem exist random algorithm strongli fi competit oblivi adversari replic uniform network extend singl edg algorithm tree root r node contain f initi algorithm respond request node current resid set algorithm tree keep counter c node r initi request arriv node x w node nearest x contain copi f serv request counter node along path w x increas one let node along path perform follow procedur time request serv replic node j node j gamma f replic j stop theorem algorithm tree strongli fi competit oblivi adversari replic tree network proof without loss gener assum connect r alway maintain solut let x r node parent x obtain copi f cost equal weight x y incur edg request node subtre root x thi follow r connect uniqu path x r pass x y singl edg algorithm algorithm tree fi competit if node x r copi f replic x ith request subtre root x probabl p shown induct request x acquir copi f counter x record number request arriv subtre root x counter form nonincreas sequenc path move away r henc valu p c j defin probabl valu simpl verifi time node subtre root x receiv request copi f replic x probabl p cx c x xs new counter valu theorem follow lower bound show random algorithm better competit adapt onlin adversari use n denot number node g theorem let ffl posit function n d take valu onlin algorithm better ncompetit replic adapt onlin adversari proof let node initi copi f let a b edg g let onlin algorithm replic b jth request b probabl adversari issu request b replic issu whichev first happen algorithm incur expect cost choos differ n s two differ case suppos minimum posit integ greater given d paramet n finit uniqu constant adversari replic b first request arriv incur cost d equat eca oe give ratio least suppos d adversari replic incur expect cost from a given p j s one choos n arbitrarili close sinc seri one also choos n arbitrarili close zero thu compar b see given one choos finit n ratio close c lund n reingold j westbrook d yan offlin replic file alloc show offlin replic problem nphard offlin file alloc problem uniform network solv polynomi time offlin replic problem awerbuch et al find interest relationship onlin steiner tree problem onlin fap show offlin replic problem nphard use straightforward reduct steiner tree problem see section definit proof involv creat instanc replic problem d request issu termin node steiner tree problem instanc forc optim algorithm replic node theorem replic problem nphard even g bipartit unweight g planar offlin solut file alloc uniform network show offlin file alloc problem uniform network solv polynomi time reduc mincost maxflow problem similar reduct obtain chrobak et al kserver problem convert instanc fap uniform network node mincost maxflow problem acycl layer network n on delta joej node on joej arc initi node copi f integr maximum flow n defin dynam alloc f uniform network arc cost n chosen mincost maxflow n incur cost differ minimum cost fap uniform network constant network n construct follow node network n joej layer node node layer sourc node sink node t layer k k joej node fv k n g ngamma g node allow maximum flow one unit it node correspond node uniform network layer k n correspond state uniform network oe k serv arc arc go layer k node layer arc layer joej node t arc s v s arc unit capac flow maximum flow n valu n given integ arc cost mincost maxflow solut integr flow either arc flow v k j repres presenc copi f node j request arriv flow come v kgamma repres copi f move node node j serv st request flow come u kgamma repres replic node j flow v kgamma j u k w repres copi f j drop oe kgamma serv thu integr flow n defin strategi reloc copi f sinc n gamma u node layer integr maxflow must includ flow unit least one v node layer correspond requir alway least copi f uniform network edg cost edg cost chosen optim flow cost equal optim offlin cost fap minu number read request j oe arc one end point zero cost let a b arc go layer k k cost equal sum associ movement servic cost suppos b v k a bs associ movement cost unless oe k write node node i servic cost read node i servic cost gamma cost case zero movement servic cost account cost replic serv request except node charg gamma read request arriv copi f add j cost optim flow thu charg read request advanc sum equal cost optim dynam alloc f use algorithm solv mincost maxflow problem acycl network fap uniform network solv polynomi time theorem optim offlin file alloc uniform network found on open problem interest open problem includ find strongli competit random algorithm fap uniform network awerbuch et al conjectur exist c n competit algorithm onlin steiner tree problem exist ocncompetit determinist algorithm fap conjectur still open migrat problem gap best known bound r competit distribut file alloc dynam file migrat distribut comput system page migrat relax task system competit algorithm distribut data manag ment power random onlin algorithm competit algorithm replic migrat prob lem new result server prob lem server problem onlin game page migrat algorithm use work function compar model file assign problem rectilinear steiner tree problem npcomplet dynam steiner tree problem competit random algorithm nonuniform problem reduc among combinatori problem random onlin algorithm page replic problem linear program random onlin algorithm random competit algorithm data structur network algorithm random algorithm multiprocessor page migrat perform greedi algorithm onlin steiner tree relat problem steiner problem network survey tr ctr baruch awerbuch yossi azar yair bartal onlin gener steiner problem theoret comput scienc v n p septemb