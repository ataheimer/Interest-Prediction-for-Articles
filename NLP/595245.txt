t lightweight reason program correct a autom verif tool vari wide type properti abl analyz complex algorithm amount necessari user involv paper propos framework stepwis automat verif describ lightweight scalabl program analysi tool combin abstract model check tool guarante true fals answer sound respect origin system also check effect tool implement safetyinject system b introduct recent year seen increas interest computersupport techniqu analyz correct softwar artifact particular interest caus effect potenti lightweight formal method approach verif consist autom check artifact critic properti eg deadlock secur fair often concentr debug instead assur often lightweight method includ model check techniqu automat verifi properti system given system prop erti model checker buildsth reachabl graph exhaust explor statespac system number industri model checker develop includ spin smv muro althoughmodel check start techniqu verifi hardwar effect appli varieti softwar project ex ampl smv use verifi correct mode logic a aircraft tca specif spin appli valid remot object invoc corbagiop check java program mani other model check becam part routin vv process develop lucent new server product appli reason user interfac busi process model check offer potenti pushbutton verifi cation howev potenti easili realiz especi check correct program oppos specif protocol softwar artifact first all model check mostli limit finitest system ie everi variabl system finit domain sever model checker allow reason infinitest system execut path system certain depth howev system cannot guarante system satisfi desir properti check pro gram analyst util abstract comput either automat hand and although highli desir properti hold abstract model hold origin model assur difficult obtain differ abstract built class properti analysi given larg number avail verif techniqu potenti complex expens applic interpret result propos layer approach automat verif depict figur given system properti p would like know p hold s would like start verif level fairli inexpens term work requir user term comput resourc requir step result one three conclus p definit true definit fals s point verif stop analysi cannot yield inform latter case analyst appli techniqu verif properti true expens analysi properti fals verif step verif step step n verif figur framework automat verif level techniqu expens verif level may help determin whether hold not analyst proce appli complex expens techniqu p definit prove definit disprov level exhaust resourc exhaust note precis lost level properti conclud definit hold definit hold verif level proceed level k benefit stepwis verif framework outlinedabov allow us categor exist tool base effect verifi properti complex applic thi complex metric includ effort need human effort need com puter also allow one util verif effort effect paper discuss verif sequenti program fairli complex properti involv tempor logic arithmet valu variabl eg a never less b immedi true howev approach build level verifi first comput abstract behavior program analysi use abstract interpret abstract depend choic properti verifi comput automat even though program may finitest model check abstract system analysi yield true properti hold origin system yield fals properti hold yield mayb analysi inconclus case properti verifi use expens techniqu idea verif presenc abstract explor sever research particular jackson propos model check method analyz infinit specif express z vdm approach defin abstract state space abstract state repres possibl infinit equival class concret state dam demonstr abstract reactiv system abstract transit system preserv certain form combin safetyl properti pardo built abstract concret model system conserv verifi properti express calculu abstract model formula prove fals relat state success refin given formula verifi comput resourc exhaust rest paper organ follow section give overview model check abstract interpr tation section discuss theoret goal work introduc new algorithm program verif system proof correct algorithm given appendix design system describ section section demonstr result use abstract model checker analyz safetyinject sy tem conclud paper summari work outlin futur research direct background section recal basic definit abstract interpret model check abstract interpret abstract interpret way symbol execut program use abstract instead concret domain familiar dataflow analysi algorithm eg constant propag live variabl exampl abstract interpret let c concret abstract domain re spectiv abstract function ff c map set concret valu abstract valu ff invers concret function abstract valid pair function ff fl form galoi connect exampl perform sign analysi replac set integ d sign gamma here execut program abstract valu exampl fgammag theta fg ff howev abstract valu cannot alway determin exactli consid follow exampl fgammag theta fg repres set fgamma g interpret result valu abstract domain finit abstract interpretor act dataflow analyz howev may also want use abstract interpretationto reason infinitedomain variabl order achiev tractabl need ensur abstract converg finit represent infinit set val ue one way abstract set interv take minimum maximum valu set left right bound interv exampl ensur converg finit number step finitedomain abstract converg guarante achiev converg infinitedomain abstrac tion introduc abstract binari oper widen ing denot r repres jump abstract valu ri defin widen follow exampl model check paper concern withctl model check automat techniqu verifyingproperti express propositionalbranchingtim tempor logic call comput tree logic ctl system defin kripk structur properti evalu tree infinit comput produc model system standard notat m indic formula f hold state model formula hold initi state consid hold model kripk structur consist set state s transit relat r theta s set initi state i set atom proposit p label function l must total function ie state n successor add selfloop it intuit s label function provid list atom propositionswhich true state use ctl boolean express includ variabl arithmet oper them set p atom proposit defin follow p p term atom proposit term defin recurs everi identifi everi constant term term t term mod exp mod exponenti function respect exampl follow atom proposit version ctl ctl defin follow everi atom proposit ctl formula logic connect usual mean existenti univers quantifi e a use quantifi path oper x mean at next step f repres sometim futur u until there fore ex ax mean hold everi immedi successor current program state ef af mean hold futur along everi path eman current state eu au mean everi comput path start current state continu hold becom true formal exist path note af j atru u ef j etru u is use strong until also use abbrevi eg ag repres properti hold everi state everi path eman eg ag defin as lightweight model check goal work use abstract interpret allevi state explos problem model check ensur properti verifi abstract system properli interpret origin system goal achiev construct abstract model checker threevalu logic return valu true fals mayb analysi result true fals sound use static analysi build abstract system associ line program abstract set valu program variabl attain control reach point along execut path abstract reduc statespac finitest infinit state system comput complet automat section introduc languag construct program describ process build label transit machin present model check algorithm threevalu logic input languag input languag call c sequenti languag syntax similar c languag includ follow construct booleanandinteg type conditionalcon trol structur if els loop while input output print fprint scan fscan assign function procedur dynam featur recurs pointer provid languag also allow userdefin compound data structur complet grammar languag avail figur give exampl program written c construct label transit system here describ transform program represent label transit system start infinitest program infinit set state w initi state r w theta w total access rela tion lt lf truth falsiti label function map state set propositionsthat true fals respect state l c c onetoon correspond assign variabl line code fact attempt verifi program express c need give welldefin formal semant ie describ way construct transform program state defin state map set global variabl valu thu state chang occur least one global variabl chang valu goal construct abstract finit kripk structur everi edg repres state chang program order that defin set variabl v let vw v set variabl access lexic scope associ state w w g v set variabl access everi point pro gram thu g set global variabl state w program ntupl v ln correspond line number state program subset valu concret domain v ctl properti program express term global variabl start analysi pars program build abstract syntax tree ast ast intermedi represent structur program interpreta tion next propag inform variabl global local current scope throughout ast reach fixpoint abstract form map concret state w onto abstract state w ff w map onto abstract valu ff result abstract state space w ff w ff w ff ntupl w notic line number set variabl concret abstract state space ff chosen w ff finit abstract state w ff repres one even infinit number concret state due abstract moreov one state associ line code let r ff transit relat abstract state space r ff w ff theta w ff r ff construct follow s label function becom concret domain w w assumpt galoi connect framework abstract system least mani behavior correspond concret one typic verif abstract system done either conserv optimist former case provid reliabl neg answer l ff lt l ff f lf latter case provid reliabl posit answer either case one side answer cannot trust goal work ensur get reliabl posit reliabl neg answer ie l ff lt l ff f lf so case result abstract finitest program pg order construct abstract kripk structur everi transit correspond chang global variabl defin global variabl chang predic p state py true iff x x y r ff g g st gs abstract valu state x y construct abstract aggreg state space ff everi element contain one state w ff involv chang global variabl state involv chang global variabl reach w ff via transit closur r ff denot r ff ff defin recurs follow ffl pw ff true w ff ff int b int xy els int main int a a int c a a printxi xy printb b figur program fragment note valu global variabl within ff same refer l ff l ff f label function map ff ff set atom proposit global variabl true fals state final transit state ff e ff ff theta ff thu defin as abstract kripk structur k readi model check algorithm present algorithm receiv kripk structur k ff construct correct propertyexpress version ctl describ section determin whether properti hold system mention previou section want ensur analysi yield reliabl posit reliabl neg answer ie analysi conclud properti true hold origin system analysi conclud properti fals hold origin system order so introduc third logic valu mayb thu analysi conclud properti mayb hold system unknown whether properti hold concret system algorithm recurs goe structur properti analysi associ subproperti pair set state ye no ye ff set state true or formal ff repres set state fals defin similarli also defin predecessor function pred ff which given set state q return state reach state q one transit algorithm inspir bultanssymbol model checker infinitest system given figur exam ple properti p q hold state ff ff ye set p q properti hold state ff ff set either p q verifi exp note p hold immedi successor state ff exp hold ff immedi successor p may hold s ff gamma nop exclud noexp apuq comput recurs follow apuq true state q hold also true predecessor p hold successor apuq fals state ff iff q hold ff either p hold ff one successor lead q implement figur architectur abstract model checker implement abstract model checker amc line c program figur show architectur procedur check return qm return qm figur model check algorithm softwar ctl formula input languag describ section respect abstract interpretor ai receiv program analysi build kripk structur k use process describ section structur togeth set ctl formula becom input model checker check properti return true formula hold program fals formula hold mayb valid formula cannot establish latter two case model checker also return counterexampl moment counterexampl facil includ line number variablevalu map state formula true ai receiv program interpret start input context consist set valu variabl program statement execut state ment produc output context output context store part state abstract valu finit domain variabl boolean enumer type consist set concret valu variabl attain undef undefin howev valu infinitedomain variabl integ abstract further section briefli discuss abstract function ff appli set get interv howev bet breviti discuss treatment undef here detail pleas refer ter precis associ infinitedomain variabl finit set interv follow interpreta tion current implement ai set consist interv defin ff union set interv below let interv assum without loss gener n fag ff fag ff ff ff ng fag ff encount two set contain one interv first union element set less interv in case fa amg one interv union result interv set interv oper unionand differ usual mean widen interv defin section oper set interv ff ff r widen similar addit oper includ comparison arithmet defin formal algorithm use ai analyz condit statement depict figur given input abstract statement execut iexpr true fals stmt stmt f respec tive either execut stmt stmt f base return result abstract state call omega calcul get abstract state correspond take els part s f respect execut state ment comput union result output con text omega calcul set c class manipul integ tupl relat set describ presburg formula use symbol execut condit express involv interv procedur evalif evalu iexpr iexpr true execut stmt start get return els iexpr fals execut stmt f start get return els iexpr mayb call omega calcul get f execut stmt start get execut stmt f start f get f return f figur algorithm analyz condit statement exampl suppos run ai program fragment depict figur figur show controlflow graph fragment state associ program line number let input context execut state xy fgamma g a fgamma g b f g condit xy evalu mayb therefor call omega calcul determin valu xy input context state f gand fgamma gamma g respect valu b output context state f g f g union obtain f g input context state valu execut state state fgamma gamma gand fgamma gamma respect point reach limit five interv split cannot done instead union as interv get fgamma g proceed execut introduc loss inform precis strictli conserv outputvalu state fgamma gamma gamma g loop execut fixpoint valu variabl achiev order ensur fixpoint occur finit number step chang valu variabl loop time keep track whether decreas increas iter fixpoint achiev widen valu nonconverg variabl increas decreas lead valu gamma respect afterward proceed execut loop ensur depend variabl adequ captur tabl list sever valu variabl b xy attain input context state execut main loop program figur first iter valu f g gammag respect follow iter note maximum valu b xy attain in creas wherea minimum valu stay same thu widen occur th iter chang maximum valu variabl th iter bring chang thu achiev fixpoint figur show final kripk structur built controlflow graph figur state associ line number statement chang global variabl origin program withth abstract valu global variabl execut state exampl state figur aggreg state figur int xy int b true xy fals a true true print xy int int c print b true fals fals fals main end true fals figur controlflow graph program figur iter b xy tabl execut loop program figur result kripk structur becom input model checker whose algorithm describ section ex figur kripk structur k ff built program fragment figur ampl model check structur depict figur ctl properti ef b amc return fals first properti violat state correspond line program second properti determin true satisfi state correspond line third properti determin mayb mayb hold state correspond line definit hold state perform given programpg let jv j total number variabl global local n number statement pg worst case ai algorithm occur program jv j loop loop widen exactli one variabl go loop time therefor statement pg chang theta jv j time n theta theta jv j chang altogeth furthermor everi state predecessor chang state union abstract valu variabl prede cessor take n step m constant proport number interv associ variabl therefor entir comput abstract interpretor take theta jv j theta n theta theta n gamma theta jv j step ojv comput perform model checker let jp j length properti p among ctl for mula au complex algorithm q chang valu n time fixpoint reach take step comput q s predecessor time verif properti take on theta n gamma step therefor total run time model checker check formula p ojp j theta n case studi determin effect abstract model checker analyz simplifi version safetyinject system safetyinject embed system monitor water pressur inject coolant reactor core pressur fall certain threshold manual control oper use prevent system inject coolant caus system overridden reset switch prevent system overridden system input valu water pressur output boolean condit signifi whether inject coolant addit maintain intern state reflect water pressur water pressur fall threshold low system pressur level becom low water pressur rais permit system pressur level becom high otherwis level within permit rang implement safetyinjectionsystem line c program global variabl close reflect specif waterpr type integ block reset type boolean inject type boolean overridden type boolean constant low permit toolow permit high pressur type integ our system allow enumer type last three constant use indic symbol valu pressur implement also includ function local variabl specif languag system express enough captur complex properti safetyinjectionsi tem agreset pressur agreset agblock reset pressur high permit waterpr permit axwaterpr permit exampl properti state system inject coolant pressur lowand reset button press wherea properti state whenev pressur permit water pressur rais allow thresh old system eventu transit state pressur high verifi properti sun ultrasparcii mhz processor gb ram entir verif effort includingbuildingth abstract kripk structur check properti took second user second system modelcheck yield true four properti final kripk structur consist abstract state safetyinject verifi two research group bultan built infinitest symbol model checker use binari decis diagram bdd system linear constraint reason model presburg arithmet model checker also use omega librari togeth abstract interpret achiev finitetim converg analysi properti verifi optimist allow fals posit addit procedur partial converg depend structur program formula verifi approach util abstract statespac reduc tion bultan verifi properti abl determin exact size model bharadwaj heitmey analyz scr specif use spin model checker techniqu allow finitedomain variabl includ integ subrang enumer type size concret state space reduc two meth od elimin variabl relev properti verifi scr ensur depend variabl form partial order replac input variabl predic latter approach make verif conserv allow fals neg unabstract system properti spin perform onthefli ver ific without build complet state space consist million state wherea combin abstract bring state space state summari futur work paper propos framework stepwis automat verif describ implement cheap particularli precis model checker model checker verifi infinitest sequenti program written subset c ctl formula contain arithmet op erat appli propertyindepend abstract interpret creat abstract kripk structur use extrem compact structur verifi properti loword polynomi time usercr abstract nec essari verif alway converg guarante sound model checker yield true properti hold concret system yield fals properti hold approach limit analysi program appli finitest infinit state specif equal well also believ tighten code model checker make state encod symbol improv run time howev result work limit sever way implement tool cannot handl complex construct input languag includ recur sion userdefin data type dynam memori alloc pointer etc also current limit verif sequenti program tool interact omega librari handl oper integervalu variabl thu reason floatingpointnumb current support one builtinlevel abstract provid system input languag subset c formal semant particular notion state transit poorlydefin chose associ state valu global variabl state transit chang valu global variabl perhap flexibl way determin granular state transit appropri model checker return mayb cannot determin whether properti hold system believ reduc number case verif inconclus improv reason abstract valu andor choos propertyspecif abstract shortterm futur work hope extend modelcheck reason ctl combin branchingtim lineartim oper strictli express ctl would also like address issu state granular either ask user specifi global variabl constitut state add languag construct explicitli state begin end state either via beginstateendst via ad notion time timetick state occur consecut timetick acknowledg would like thank ric hehner radu iosif read earlier version paper mark pichora albert yu daniel hous mani interest discuss acknowledg financi support nserc postgradu scholarship appendix section give proof correct algorithm check au see proof correct algorithm let am ff indic model checker return true fals check formula oe state ff abstract model ff assum model state concret pro gram respect express state model checker sound respect ye answer prove am proof induct length path ff state hold ih let set state reach n step assum ff prove formula hold path length n consid case cover base case am au hold state ff either occur path eman ff path eman ff first occurr state hold algorithm expand follow case case case start set state true recurs intersect state successor hold result set state never reach ie m result set state neither hold ie m r model check complet requir specif use abstrac tion verifi system integ constraint boolean predic composit approach symbol model check infinit state program use presburg arithmet decoupl synchron local control effici symbol model check statechart automat verif finitest concurr system use tempor logic specif model checkingand abstract document safeti critic softwar static determin dynam properti program abstract interpret reactiv system the muro verif system analyz infinitest program abstract interpret model check graphic user interfac use abstract verisoft tool automat analysi concurr reactiv softwar model check java program use java pathfind the model checker spin a practic method verifi eventdriven softwar abstract model check infinit spec ific lightweight formal meth od model check manag valid remot object invoc object migrat corba giop use promelaspin the omega calcul librari symbol model check an abstract dynam semant c automat abstract techniqu proposit calculu model check ing feasibl model check softwar requir case studi tr ctr steve easterbrook marsha chechik benet devereux ari gurfinkel albert lai victor petrovykh anya tafliovich christoph thompsonwalsh chek model checker multivalu reason proceed th intern confer softwar engin may portland oregon marsha chechik benet devereux steve easterbrook ari gurfinkel multivalu symbol modelcheck acm transact softwar engin methodolog tosem v n p octob