t code gener fixedpoint dsp a paper examin problem codegener digit signal processor dsp make two major contribut first import class dsp architectur propos optim on algorithm task regist alloc instruct schedul express tree optim guarante suffici condit deriv structur represent processor instruct set architectur isa second develop heurist case basic block direct acycl graph dag b introduct digit signal processor dsp receiv increas attent recent due role design modern embed system like video card cellular telephon multimedia commun devic dsp larg use system generalpurpos architectur capabl meet domain specif constraint case portabl devic exampl power consumpt cost may make usag generalpurpos processor prohibit true highperform arithmet process requir implement dedic function low cost case specif commun preliminari version part paper present araujo malik acmiee intern symposiumon system synthesi franc septemb araujo et al acmiee design autom confer june author address g araujo institut comput univers campina unicamp cxpostal campina sp brazil s malik depart electr engin princeton univers olden st princeton nj usa permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit direct commerci advantag copi show notic first page initi screen display along full citat copyright compon work own other acm must honor abstract credit permit copi otherwis republish post server redistribut list use compon work work requir prior specif permiss andor fee permiss may request public dept acm inc broadway new york ny usa fax permissionsacmorg comput graphic applic increas usag processor reveal new set code gener problem effici handl tradit compil techniqu techniqu make implicit assumpt regular natur target architectur microarchitectur rare case dsp irregular microarchitectur basi effici comput special function due hard onchip memori constraint hard realtim perform requir code gener processor meet high qualiti standard sinc exist compil techniqu task vast major code written directli assembl languag research part project direct toward develop compil techniqu capabl gener qualiti code processor httpeeprincetoneduspam implement techniqu form compil infrastructur use work call spam compil larg bodi work done code gener gener purpos pro cessor code gener is gener hard problem instruct select express subsum direct acycl graph dag cover npcomplet problem garey johnson bruno sethi sethi show problem optim code gener dag npcomplet even singl regist machin remain npcomplet express share term subexpress share term aho et al a effici solut restrict class dag propos prabhala code gener express tree number on solut n number node tree algorithm offer solut case stack machin bruno sethi regist machin sethi ullman aho johnson appel supowit machin special instruct aho et al b form basi code gener singl issu order execut generalpurpos architectur problem gener code dsp embed processor receiv much attent though probabl due small size program run architectur enabl assembl program increas complex embed system program system without support highlevel languag becom impract mani problem associ code gener dsp processor first brought light lee lee lee comprehens analysi architectur featur processor code gener dsp processor studi past recent number interest work tackl import problem marwedel propos treebas map techniqu compil algorithm microcod architectur liem et al use treebas approach algorithm match instruct select regist organ class regist alloc base leftfirst algo rithm datapath rout techniqu also propos lanner et al perform effici regist alloc wess propos usag normal form schedul dsp architectur offer combin approach regist alloc instruct select use concept trelli diagram wess kolson et al recent propos interest exact approach regist alloc loop embed processor overview current code gener fixedpoint dsp delta research work code gener dsp processor embed processor gener found marwedel goosen paper propos optim two phase algorithm perform instruct select regist alloc instruct schedul express tree polynomi time class dsp architectur model describ section programm highlyencod instruct set architectur isa fixedpoint dsp processor formal speak class extens machin model discuss coffman sethi first pass section perform instruct select regist alloc simultan use ahojohnson algorithm aho johnson second pass describ section on algorithm take optim cover express tree n node schedul instruct memori spill requir memori spill oper content particular regist save memori due lack avail regist oper reload memori oper finish observ memori store oper requir architectur topolog consid memori spill propos algorithm use concept regist transfer graph rtg structur represent datapath annot isa inform show rtg machin acycl optim code guarante program express tree written machin case dsp said acycl datapath sinc dag code gener npcomplet develop heurist case acycl datapath section use rtg concept section show result appli idea benchmark program section summar major contribut suggest open problem architectur model dsp processor irregular architectur compar gener purpos counterpart section analyz main architectur featur distinguish dsp gener purpos processor respect basic block code gener purpos section give detail extens analysi featur comprehens analysi dsp architectur found lee lee lapsley et al dsp classifi accord type data use fixedpoint dsp floatingpoint dsp applic run fixedpoint dsp user respons scale result integ oper automat done floatingpoint dsp float point unit extrem costli term silicon area clock cycl reason larg number system base dsp use fixedpoint dsp case acronym dsp assum mean fixedpoint dsp dsp onchip data memori base fast static ram onchip nonvolatil program rom unlik gener purpos architectur dsp design cach virtual memori system sinc data program stream usual fit avail onchip memori onchip memori fast cach miss issu dsp design memoryregist architectur texa instrument order achiev bandwidth requir appli cation dsp architectur provid multipl memori bank motorola sinc perform import factor dsp applic dsp instruct usual design fetch singl machin cycl order achiev instruct encod minim number bit requir architectur texa instrument done mean data memori page instruct need carri offset data within current page order access it goal design dsp datapath implement function unit speed costli oper frequent occur processor applic domain common exampl unit multipli accumul mac due design requir dsp design frequent constrain interconnect regist function unit two main reason thi first desir function usual requir particular datapath topol ogi second broad interconnect translat datapath buse andor mux result increas cost instruct perform degrad larg number dsp heterogen regist architectur architectur contain multipl regist file instruct requir operand store result comput differ regist file henc name het erogen generalpurpos architectur instruct usual restrict regist use provid come regist file henc operand regist homogen consider simplifi code gener prob lem sinc decoupl task instruct select regist alloc due properti say generalpurpos architectur homogen regist architectur exampl exampl dsp architectur ti tmsc digit signal processor dsp texa instrument consid target architectur rest paper processor part ti tm famili processor make larg number commerci dsp processor use today tm famili compos fixedpoint processor tmscxcxcxcx heterogen architectur also number floatingpoint homogen architectur dsp tmscxcx tmsc processor contain isa special memoryregist registerregist instruct three separ registerfil a p t contain singl regist each optim instruct select regist alloc homogen regist architectur select instruct connect whatsoev type regist instruct use select instruct heterogen regist architectur usual requir alloc regist specif registerfil operand particular instruct strong bind instruct select regist alloc indic task must perform togeth araujo malik consid exampl intermedi represent ir pattern figur correspond subset instruct tmsc isa figur instruct associ treepattern whose node compos oper plusminusmul regist apt constant const memori refer m code gener fixedpoint dsp delta add apac mpi mpyk p pac sacl const spac lac lack const fig ir pattern tmsc processor instruct operand destin cost three address form add am m apac ap spac ap gamma p lack k k k pac p p tabl partial isa tmsc processor treepattern repres use threeaddress form tabl threeaddress standard compil represent instruct destin instruct two operand henc name three address oper perform present refer squar bracket associ memori posit tabl also list cost associ instruct notic instruct implicitli defin regist use exampl instruct apac take operand regist p alway comput result back a observ also oper transfer data datapath like lac load regist memori posit m pac move regist p regist a repres singl node correspond sourc regist transfer oper associ cost case cost move data sourc regist destin regist sinc regist dsp architectur scarc resourc final code qualiti sensit cost rout data datapath problem definit optim instruct select combin regist alloc problem determin best cover express tree cost pattern match depend number cycl associ instruct also number cycl requir move operand locat delta guido araujo sharad malik current locat instruct requir be problem solut solut problem use variat ahojohnson algorithm aho johnson node keep possibl cost match node also possibl cost result match node move result origin comput reachabl locat datapath treegrammar parser use way implement codegener aho et al fraser et al tjiang combin dynam program effici treepattern match algorithm hoffman odonnel optim instruct select implement combin instruct select regist alloc use oliv tjiang codegener gener oliv base techniqu propos iburg fraser et al take input set grammar rule treepattern describ prefix linear format ir pattern tabl convert oliv descript figur rewrit instruct threeaddress represent format notic instruct destin regist associ grammar nontermin repres lower case letter figur fig partial oliv specif tmsc processor instruct number name right part specif rule correspond instruct take two operand store final result particular regist a p respect rule describ immedi load regist a rule associ data transfer instruct bring cost move data datapath total cost match point that sake simplic repres figur pattern correspond commut oper exampl instruct add specifi two differ way plusam plusma nevertheless consid remaind paper commut form oper pattern avail whenev requir consid instruct schedul associ spill point algorithm propos optim follow fact algorithm variat provabl optim ahojohnson dynam program algorithm aho johnson code gener fixedpoint dsp delta schedul optim instruct select regist alloc express tree enough produc optim code optim code instruct must schedul way memori spill introduc notic memori posit alloc previou phase consid spill result optim select memoryregist instruct isa presenc resourc conflict aho johnson show that use dynam program optim code gener linear time wide class architectur schedul propos base strong normal form theorem theorem guarante optim code schedul express tree homogen regist architectur model alway transform strong normal form snf code sequenc snf form set code subsequ separ memori storag code subsequ determin strongli contigu sc schedul code sequenc sc schedul form follow everi select match m child subtre continu schedul instruct correspond subtre follow instruct correspond final instruct correspond pattern m wess use snf heurist schedul instruct tmsc dsp problem definit sc schedul effici way schedul instruct heterogen regist set architectur produc code sequenc whose qualiti extrem depend order subtre evalu consid exampl ir tree figur a express tree optim match use approach propos section target isa take variabl memori posit store result comput one variabl memori posit use temporari storag code sequenc gener three differ schedul correspond threeaddress represent show figur bd memori posit use whenev spill locat requir schedul code figur b left subtre node schedul first follow right subtre instruct correspond node oper opposit approach use obtain code figur c neither sc schedul figur b c sc schedul ever produc optim code obtain use nonsc schedul first schedul addit rest tree figur d notic schedul inde snf schedul sinc first subtre correspond contigu schedul follow storag oper memori posit anoth code sequenc result sc schedul rest tree figur verifi appropri snf schedul minim spill exampl tree figur a schedul use leftfirst result oper theta first store p move a that regist use rout result posit still contain live result the result case codegener emit code spill valu memori recov a mpi p m lac m add pac p add sacl m sacl m lt m lac m mpi p m mpi p m add sacl m pac p lt m mpi p m mpi p m spac p lac m pac p sacl m spac p lt m spac p sacl m b c d fig a match ir tree tmsc b snf leftfirst schedul c snf rightfirst schedul d optim schedul later would requir schedul first store load result problem like one illustr common dsp architectur obviou question rais exist guarante snf schedul spill requir prove schedul exist certain condit depend exclus isa target processor so let us defin problem formal given optim cover express tree heterogen regist architectur determin instruct schedul introduc spill code problem solut section divid follow section state prove suffici condit heterogen regist architectur satisfi order enabl spill free schedul section introduc concept regist transfer graph rtg show impact code gener task final code gener fixedpoint dsp delta prove exist optim linear time schedul algorithm class dsp architectur acycl rtg let express tree unari binari oper let function map node set rm set n regist set memori locat let u root express tree v children u consid alloc perform regist lv assign v respect subtre root v figur term express tree alloc express tree use interchang context distinguish tree alloc not alloc deadlock definit express tree contain alloc deadlock iff follow condit true a lv c exist node w w w lw definit visual figur situat two sibl subtre contain least one node alloc regist regist assign root sibl tree use definit possibl propos follow result fig alloc deadlock express tree theorem let express tree spill free schedul contain least one subtre alloc deadlock proof assum node u u free alloc deadlock valid schedul exist accord definit u alloc deadlock when a case snf schedul exist subtre schedul first follow subtre case cannot happen sinc nonunari oper express tree take two operand simultan locat a b c fig tree without alloc deadlock c exist lw case possibl schedul first follow instruct correspond node u valid schedul schedul finish regist r live therefor sinc regist r exist resourc conflict occur subtre schedul figur a exist lw symmetr previou case schedul first follow instruct correspond u figur b exist case trivial sc schedul result spill free schedul figur c sinc condit appli node u valid schedul free memori spill code contradict initi assumpt corollari let express tree subtre contain alloc deadlock must spill free schedul moreov schedul comput use proof theorem proof directli theorem abov rtg model theorem definit rtg direct label graph node repres locat datapath architectur data store edg rtg node r node r j label instruct isa take operand locat r store result locat r j node rtg repres two type storag regist file singl regist regist file node repres set locat type store multipl operand datapath singl regist or simpli singl regist regist file unitari capac regist file node distinguish singl regist node mean doubl circl uniqu memori describ rtg arrow use instead repres memori oper incom outgo arrow point from rtg node r associ code gener fixedpoint dsp delta load store oper into memori notic rtg label graph edg label correspond instruct requir oper word instruct p q take one operand r store result r j edg r r j least two label p q say architectur rtg acycl contain cycl consequ regist transfer cycl acycl rtg go memori exampl consid exampl partial oliv descript figur rtg figur form descript number parenthesi right side figur use label edg graph isa instruct target processor repres descript figur therefor edg rtg figur label notic rtg tmsc architectur acycl dsp processor also acycl rtg like processor tmscxcxcx fujitsu fdsp paper propos solut code gener acycl rtg architectur unfortun known dsp like adsp motorola cyclic rtg nevertheless shown later code gener processor also benefit result work p fig tmsc architectur acycl rtg theorem architectur rtg acycl express tree exist schedul free memori spill proof let express tree root u v children lv let subtre root node let p k subtre root p k result oper p k store memori ie lp k dark area figur subtre form remov node subtre p k show rtg acycl optim schedul alway determin properli order schedul p k eg p address two case a assum alloc deadlock therefor corollari optim schedul b consid alloc deadlock present caus regist r r shown figur assum also exist path r r processor rtg observ node figur alloc r eg w path goe w ancestor v alloc observ selfloop consid rtg cycl wp fig rtg theorem necessarili pass node alloc memori eg p come fact path r r travers memori given rtg acycl contain path r r notic one recurs schedul subtre p p root alloc memori correspond emit advanc instruct store result done memori locat live remain subtre q contain instruct use r node remain schedul subtre therefor tree fug schedul use corollari spill requir notic result obtain one first recurs schedul subtre p white area figur follow appli corollari schedul subtre q fug base proof theorem abov algorithm design comput best schedul express tree acycl rtg architectur design algorithm name optschedul theorem algorithm optschedul optim run time on n number node subject tree proof first part trivial sinc optschedul implement proof theorem also theorem algorithm divid set disjoint subtre recurs schedul them therefor everi node visit onc henc algorithm run time on remark rtg acycl particular architectur optim sequenti code guarante express tree compil program run architectur unfortun true architectur code gener fixedpoint dsp delta acycl rtg nevertheless express tree architectur also benefit work observ corollari express tree free alloc deadlock optim schedul valid express tree gener architectur matter architectur acycl rtg not consid exampl path ad p rtg figur creat cycl architectur rtg go memori hand express tree use new path free alloc deadlock therefor still optim schedul express tree could identifi simpl modif instruct select algorithm question mani tree exist typic program still open though heurist dag instruct select express dag requir dag cover known npcomplet garey johnson practic solut problem heurist propos divid dag compon tree select appropri set tree howev dismantel dag compon tree uniqu sever way done tradit heurist employ case homogen regist architectur disconnect multipl fanout node dag aho et al divid dag compon tree requir disconnect or break edg dag code gener task break dag edg node u v impli alloc temporari storag save result oper u consum oper v storag locat tradit memori can gener locat datapath key idea propos heurist use architectur inform rtg select compon tree dag result code minim spill consid exampl dag figur notic two differ approach use decompos dag compon tree depend edg e e select break on repres broken edg line segment travers subject edg one see figur b one extra instruct gener dismantel heurist base break edg e instead e incident code figur a also best sequenti code one gener subject dag observ architectur descript tabl multipl oper request operand memori m t result addit oper alway produc result accumul a notic also figur bring data regist one go m figur one see result addit oper store must move order use operand multipl oper move data one go memori m suppos memori posit select store temporari result henc break dag edg e one assign advanc memori oper appear edg instruct select phase code gener notic exist registertransf path alway goe memori whenev data move properti target datapath similarli registertransf delta guido araujo sharad malik lac m lac m add sacl m sacl m mpi p m add add mpi p m a b fig a break edg e break edg e path p must also pass memori notic also edg e broken pattern plusam instruct add cannot use match addit result accumul a case instruct lac figur b issu order bring data back accumul ad new instruct final code fig express dag partial regist alloc perform natur pseudonatur edg identifi correspond lemma code gener fixedpoint dsp delta problem solut heurist propos address problem describ divid four phase first phase section partial regist alloc done datapath oper clearli alloc code gener task perform dag second phase section architectur inform employ identifi special edg dag broken without introduc loss optim subsequ tree map stage third phase section edg mark disconnect dag final compon tree schedul optim code gener compon tree section partial regist alloc gener properti heterogen regist architectur result specif oper alway store well defin datapath locat impli total regist alloc data rout datapath locat requir instruct take exampl oper add mul target processor notic implicitli defin primari storag resourc use oper result case observ tabl regist alloc task requir determin regist p respect use store immedi result oper add mul thu partial alloc perform well advanc even task break edg express dag take place again observ possibl oper alway use regist file store immedi result consid exampl express dag figur notic partial regist alloc immedi perform regist p natur edg saw figur edg specif properti origin target architectur allow us disconnect dag without compromis optim edg term natur edg defin follow definit instruct select match edg u v alway produc sequenc data transfer oper datapath pass memori edg u v refer natur edg a b r fig natur edg identifi singl line segment a u v natur b u v natur r selfloop rtg given express dag d target architectur acycl rtg shown number edg natur edg order let us state set lemma let r r pair regist datapath acycl rtg architectur also let function map node set datapath locat r r set regist datapath set memori posit lemma let r r regist architectur rtg exist path r r therefor edg u v natur edg proof given path regist r r travers whenev instruct select perform edg u v memori oper alway select instruct select u v therefor u v natur edg figur a lemma edg u v natur edg selfloop exist regist node r rtg represent target architectur figur b proof architectur acycl rtg loop rtg which selfloop travers memori thu regist r selfloop rtg loop start r go memori therefor memori oper select whenev instruct select perform edg u v henc u v natur edg notic task break natur edg introduc new oper dag becaus name impli instruct select phase memori oper natur select due constraint architectur datapath topolog result potenti optim lost break natur edg exampl consid one lemma rtg figur observ express dag figur natur edg identifi lemma see r r everi edg u v natur edg consid lemma first take situat r rtg figur observ regist p selfloop sinc rtg acycl dag edg u v natur edg consid case r regist figur contain selfloop thu noth said regard edg pseudonatur edg follow two lemma show dag edg sometim interact one edg set two edg must result storag memori edg set call pseudonatur edg lemma consid oper v operand node u w figur a partial regist alloc oper w v pseudonatur edg proof notic binari oper v take operand simultan regist consid two situat code gener fixedpoint dsp delta w a b r r fig select pseudonatur edg identifi doubl line segment a one edg use loop rtg b one edg goe memori a node r selfloop architectur rtg one edg eg could match instruct take one operand r hand instruct match edg ie w v make use regist contain rtg loop not selfloop goe r back r similarli lemma match w v introduc sequenc transfer oper necessarili goe memori make w v u v pseudonatur edg b selfloop node r exist architectur rtg edg natur edg accord lemma lemma consid oper v operand node u w figur b let partial regist alloc node rtg path pair node one path go memori u v w v pseudonatur edg proof proof trivial follow fact sinc oper v cannot take operand regist r j time use two path rtg bring data regist r j sinc one path r j r go memori path pass memori base lemma abov need decid edg u v w v disconnect dag loss optim might occur depend edg select select pseudonatur edg identifi use doubl line segment distinguish natur edg unlik natur edg break pseudonatur edg might result compromis optim code gener compon tree howev good chanc might happen actual practic exampl consid lemma rtg figur observ express dag figur pseudonatur edg identifi lemma satisfi case r case r one path exist rtg p go memori rule exampl appli express dag figur result mark edg figur side number correspond rule use exampl dismantel algorithm task dismantel express dag may potenti introduc cyclic read write raw depend result tree compon lead imposs schedul similar problem also encount aho et al a liao et al author studi problem schedul worm graph deriv dag singleregist architectur consid exampl b a fig a cyclic raw depend b constrain tree schedul reconverg path node u v compon tree figur a dismantel dag figur a requir least one edg multipl fanout node u disconnect assum edg select edg break case node u v tree collaps singl compon tree dismantel dag tree edg two node broken raw edg introduc dash line figur order guarante origin datadepend preserv schedul case result raw edg form cycl compon tree result infeas schedul compon tree notic dismantel also possibl edg t w broken instead figur b occur raw edg u brought result compon tree t consequ potenti optim tree schedul algorithm optschedul guarante anymor sinc satisfi constraint impos new raw edg insid possibl solut problem modifi tree schedul algorithm satisfi raw constraint insert tree unfortun difficult task effici solut seem exist henc dismantl dag avoid insert raw edg compon tree two situat analyz abov conclud edg reconverg path disconnect order guarante proper schedul code gener fixedpoint dsp delta oper insid compon tree compon tree algorithm dismantl dag disconnect edg use mani natur pseudonatur edg possibl design algorithm call dismantl dismantl algorithm start first break natur edg sinc break edg add cost total cost final code dismantl proce identifi reconverg path travers path dag look edg mark pseudonatur edg pseudonatur edg use break exist reconverg path edg broken otherwis outgo edg start reconverg path correspond multipl fanout node broken edg mark black dot figur point reconverg path express dag disconnect addit edg broken node end one outgo edg these edg also mark black dot result dag appli algorithm dismantl shown figur decompos origin dag five express tree final express tree schedul code gener express tree fig result compon tree dismantel experiment result dspstone zivojnov et al benchmark design evalu code qualiti gener compil differ dsp processor dspstone divid three benchmark suit applic dspkernel ckernel applic benchmark consist program adpcm wellknown speech encod algorithm dspkernel benchmark consist number code fragment cover often use dsp algorithm ckernel suit aim test typic c program statement dspstone project support number major dsp manufactur analog devic att motorola nec texa instrument use benchmark experiment evalu schedul algorithm tree origin leftfirst rightfirst optschedul real updat dot product iir one biquad tabl number cycl comput express tree use rightleft leftright optschedul express tree appli algorithm optschedul express tree extract program dspkernel benchmark metric use compar code number cycl take comput express tree observ tabl algorithm optschedul produc best code compar two sc schedul expect sinc prove opti maliti notic although sc schedul sometim produc optim code also gener bad qualiti code case express tree also verifi express tree gener differ code qualiti differ sc schedul use structur express tree dictat best sc schedul structur function way programm write code dag type distribut express dag classifi tree leaf dag full dag leaf dag dag leaf node outdegre greater one classifi dag full dag neither tree leaf dag one see tabl classif reveal basic block analyz tree dsp kernel basic block tree leaf dag dag real updat dot product iir one biquad convolut lm tabl type dag found typic digit signal process algorithm code gener fixedpoint dsp delta dag dag handwritten standard dismantl origin type code heurist heurist complex updat f matrix x l iir one biquad f convolut lm f tabl experi dag leaf dag l full dag leaf dag full dag set benchmark tabl notic major basic block found program tree leaf dag anoth experi perform time use dspstone applic benchmark adpcm befor basic block analyz determin frequenc tree leaf dag dag case basic block program found tree leaf dag full dag although dynam count basic block requir order provid inform impact execut time one reason argu larg portion program execut time spent process express tree thu treebas code gener suitabl applic domain express dag tabl list seri express dag extract program dspkernel benchmark select largest dag found kernel purpos comparison handwritten code handwritten assembl code or assembl refer code dspkernel program avail dspstone benchmark suit zivojnov et al compil code gener dag result number cycl singl loop execut report tabl compil code also gener use standard heurist dismantl dag break edg multipl fanout node column standard heurist tabl show number processor cycl overhead respect handwritten code notic overhead due dag dismantel techniqu averag overhead compar compil dismantl heurist assembl refer code leaf node treat way heurist simpli duplic differ node one outgo edg consequ heurist perform case leaf dag averag overhead dismantl heurist case full dag higher case leaf dag discrep due exist memoryregist immedi instruct processor isa zero cost multipl fanout operand memori refer constant valu although heurist gain may seem small everi byte matter sinc dsp restrict onchip memori size make gener high delta guido araujo sharad malik qualiti code import goal compil conclus increas demand wireless multimedia system expect usag dsp continu grow inspit thi research compil techniqu dsp receiv adequ attent devic continu offer new research challeng origin need high qualiti code low cost power consumpt propos optim on instruct select regist alloc instruct schedul algorithm express tree class heterogen regist dsp architectur acycl rtg extend propos heurist case basic block dag approach base concept natur pseudonatur edg seek use architectur inform help task dismantel express dag forest tree question gener good code architectur cyclic rtg remain open though mention befor express tree gener architectur also benefit optim provid free alloc deadlock interest question follow mani express tree properti gener program run architectur work way order answer question acknowledg research support part brazilian council research develop cnpq contract institut comput unicamp brazil r code gener use tree match dynam program optim code gener express tree code gener express common subexpress code gener machineswith multireg ister oper gener sethiullman algorithm regist alloc optim code gener embed memori nonhomogen regist architectur use registertransf path code gener heterogen memoryregist architectur code gener oneregist machin instruct set evalu arithmet express journal acm engin simpl comput intract pattern match tree data rout paradigm effici datapath synthesi code gener dsp processor fundament architectur featur programm dsp architectur part i programm dsp architectur part ii instruct select use binat cover marwedel goosen effici comput express common subexpress complet regist alloc problem gener optim code arithmet express journal acm digit signal process applic tm famili oliv twig optim code gener signal flow comput automat instruct code gener base trelli diagram circuit system tr compil principl techniqu tool gener sethiullman algorithm regist alloc code gener use tree match dynam program digit signal process applic tm famili vol optim code gener embed memori nonhomogen regist architectur instruct select use binat cover code size optim optim regist assign loop embed code gener use registertransf path code gener heterogen memoryregist architectur data rout treebas map algorithm predefin structur gener optim code arithmet express gener optim code stack machin optim code gener express tree code gener oneregist machin code gener express common subexpress effici comput express common subexpress pattern match tree instruct set evalu arithmet express codegener machin multiregist oper code gener embed processor comput intract ctr jeonghun cho yunheung paek david whalley fast memori bank assign fixedpoint digit signal processor acm transact design autom electron system toda v n p januari jeonghun cho yunheung paek david whalley effici regist memori assign nonorthogon architectur via graph color mst algorithm acm sigplan notic v n juli alain pegatoquet emmanuel gresset michel auguin luc bianco rapid develop optim dsp code high level descript softwar estim proceed th acmiee confer design autom p june new orlean louisiana unit state shuvra s bhattacharyya praveen k murthi cbp paramet modul character approach dsp softwar optim journal vlsi signal process system v n p septemb minwook ahn jooyeon lee yunheung paek optimist coalesc heterogen regist architectur acm sigplan notic v n juli