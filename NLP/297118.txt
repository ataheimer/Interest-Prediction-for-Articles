t coordin autonom entiti stl a paper describ ecm new coordin model stl correspond languag stl power express shown distribut implement gener autonomybas multiag system appli collect robot simul thu demonstr appropri stl develop gener coordin platform autonom agent b introduct coordin constitut major scientif domain comput scienc work come within coordin encompass conceptu methodolog issu well implement order effici help express implement distribut appli cation autonom agent disciplin artifici intellig enjoy boom sinc coupl year embodi inher distribut applic work come within autonom agent intend capit coexist distribut entiti autonomybas multiag system ma orient toward interact collabor phenomena autonomi today state art parallel program mod el distribut share memori model data task parallel parallel object orient model for overview see use implement gener purpos distribut appli cation howev suffer limit con part work financi support swiss nation foundat scientif research grant cern clear separ comput part parallel applic glue coordin overal distribut program especi limit make distribut implement burdensom studi problem relat coordi nation malon crowston introduc new theori call coordin theori aim defin glue research area focus definit sever coordin model correspond coordin languag order facilit manag distribut applic coordin like play central role ma system inher di tribut import coordin illustr two perspect one hand ma built object depend refer configur system appropri describ implement hand agent subject depend requir adapt mean program them often involv highlevel notion belief goal plan paper present stl new coordin languag base coordin model ecm model multigrain distribut applic stl use provid coordin framework distribut ma made autonom agent enabl describ organiz structur architectur ma conceiv basi gener multiag platform coda coordin theori model languag coordin defin process manag depend activ or field program languag process build program glu togeth activ piec formal better describ interdepend necessari separ two essenti part parallel applic name comput coordin sharp distinct also coordin distribut autonom agent key idea famou paper gelernt carriero author propos strict separ two concept main idea identifi comput coordin part distribut applic two part usual interfer other semant distribut applic difficult understand fulfil typic coordin task gener coordin model comput scienc compos four compon see also coordin entiti process agent run parallel subject coordin coordin medium actual space coordin take place coordin law specifi interdepend activ entiti set coordin tool author state coordin languag orthogon comput languag form linguist embodi coordin model linguist embodi mean languag must provid languag construct either form librari call form languag extens mean materi coordin model orthogon comput languag mean coordin languag extend given comput languag addit function facilit implement distribut applic promin repres class new languag linda base tupl space abstract underli coordin model applic model realiz piranha to mention one variou applic base linda coordin model linda tupl space use network base load balanc function pagespac effort extend linda tupl space onto worldwideweb bonita address perform issu implement linda primit model languag base controlori approach iwimmanifold concoord darwin toolbu messag pass paradigm cola actor objectori techniqu object linda javaspac multiset rewrit scheme bauhau linda gamma linear logic linear object good overview coordin issu model languag found work take inspir controlori model tuplebas abstract focus coordin purpos ma distribut implement coordin use encapsu lation ecm ecm model coordin multigrain distribut applic use encapsul mechan primari abstract blop offer structur separ name space hierarch organ within blop activ entiti commun anonym connect establish match entiti commun interfac ecm consist five build block process represent activ entiti blop abstract modular mechan group process port port interfac processesblop extern world event mechan react dynam state chang insid blop connect represent connect port figur give first overview program metaphor use ecm accord gener characterist make coordin model correspond coordin languag element classifi follow way coordin entiti ecm process distribut applic two type coordin media ecm event port connect enabl coordin blop repositori coordin take place coordin law defin semant coordin tool the oper defin comput languag work port abstract semant interact coordin media mean event applic written use ecm methodolog consist hierarchi blop sever process run process commun coordin via event connect port serv commun endpoint connect result pair match port encapsul coordin model connect blop process event figur coordin model ecm blop mechan encapsul set ob ject object resid blop per default visibl within home blop blop abstract agglomer object coordin serv separ name space port object process subordin blop well encapsul mechan event figur two blop shown blop interfac process ie name possibl empti set port hierarch structur process process ecm type object name possibl empti set port process ecm model know kind process iden tific instead black box process model use process care process inform transmit receiv from process creation termin part ecm model specifi instanc model port port interfac process blop establish connect processesblop ie commun ecm handl via connect therefor port port name set well defin featur describ port charac terist name featur port refer port signatur combin port featur result port type featur port character set featur commun featur mandatori must support ecm re aliz commun featur materi commun paradigm includ pointto point stream commun with classic messagepass semant close group with broadcast se mantic blackboard commun addit port featur specifi eg amount port port may connect to see stl exampl match match port defin relat port signatur four gener condit must fulfil two port get match compat valu fea ture name belong level abstract ie visibl within hierarchi blop belong differ object process blop conceptu match process port describ follow process creat blop creat port signatur potenti blop current embed condit fulfil two potenti blop connect correspond port establish potenti disappear connect match port result follow connect ffl pointtopoint stream n n nm commun pattern possibl ffl group messag broadcast member group close group semant use ie process must member group order distribut inform it ffl blackboard messag place blackboard use sever process persist retriev sequenc defin process event event attach condit port blop process condit determin event trigger blop condit blop world process definit process p ppin port input bb port bb port process new blop blop creat process p creat process creat blop b creat blop end blop world figur layout typic program written stl check implement depend see stl event definit exampl defin event semant port coordin languag design implement first languag bind ecm model call stl realiz ecm model appli multithread applic lan unix workstat stl materi separ concern use separ languag exclus reserv coordin purpos provid primit use comput languag interact entiti implement stl base ptpvm librari provid messag pass process manag facil thread process level cluster workstat particular blop repres heavyweight unix process ecm process implement lightweight process thread ecm model realiz stl program whose gener structur outlin figur start default blop world hierarchi process blop defin show hierarch structur languag definit level stl special section look particular instanti ecm model stl simpl thread languag blop name blop use creat instanc blop object blop object place onto specif physic machin distribut onto cluster workstat creation blop complex recurs procedur includ initi static process port defin blop subordin blop figur show definit two blop call world siev stl syntax line creat blop siev s initi blop somewher parallel machin statement could annot machin name specifi actual workstat blop initi port definit explain later blop world blop siev declar blop siev two port type name group connector creat blop siev s creat blop figur blop declar invoc stl ecm process stl activ within coordin languag comput languag coordin languag done instanti process object insid blop dynam creat new process process object instanti done bodi event comput languag directli extent tradeoff regard goal total separ coordin comput code level howev order preserv high level flexibl applic level allow two possibl process termin implicit function implement process insid comput languag termin process disappear blop figur show exampl stl process type worker two static port re thread entri point worker syntax semant port definit explain next section port connect know static port interfac process blop defin coordin languag dynam port creat runtim comput languag howev type dynam attribut pp bb group myport explan commun stream blackboard group stream commun structur satur amount port may connect capac capac port data item synchron async async async async semant messag pass model orient inout inout inout direct data flow tabl stl builtin port user defin port correspond port attribut valu process type worker process worker ppin work input port ppout re result output port creat process worker w instanc figur process declar invoc stl port ie featur must determin coordin languag port use set attribut implement ecm port featur attribut must compat order establish connect two port tabl give overview attribut port combin attribut lead port type provid follow builtin port type pointtopoint output port ppout pointtopoint input port ppin pointtopoint bidirect port pp group group blackboard bb variant type possibl defin user classic stream port two match port type result stream connect follow semant everi send oper port non block port infinit storag capac in stl infin symbol match exactli one port orient attribut defin whether port output port ppout input port ppin pp group set group port form group mechan stl port type gather group messag send oper base broadcast is messag item alway transfer member group close group semant use bb bb stand blackboard result connect blackboard semant defin ecm contrast previou port type messag blackboard persist object process retriev messag use symbol name tag combin basic port type possi ble exampl defin n pointtopoint con nection satur attribut pp port augment n see tabl port myport synchron commun achiev chang type messag synchron syn chronou thu yield pointtopoint synchron commun n mean data produc process block n process connect port everi send oper return n process receiv data item stl synchron attribut overrid capac attribut synchron commun impli capac zero howev asynchron commun made littl bit less asynchron set capac attribut valu n make sure process block sent n messag note that capac attribut local relat process port asynchron commun certain port capac guarante messag place connect necessarili mean anoth process connect via port connect or will actual receiv messag connect result match port defin accord ecm model stl event event trigger use condit oper port event handl event handler insid blop condit relat port process blop determin event execut blop for overview port condit see tabl whether event must trigger check system everi time data flow process access it otherwis condit like isempti would uninterruptedli trigger event port process startup process port empti condit descript unboundport p satur predic unbound return true port yet match potenti commun partner port satur unbound predic return alway true accessedport p equal true whenev port access gener isemptyport p check whether port messag store not isfullport p return true port capac reach msg handledport p int n less msg handledport p int n equal true n messag less n messag handl respect tabl condit port event newwork creat process worker new unboundnewout newwork process type worker process worker ppin work port ppout work port creat process worker w attach event port unboundwout newwork figur exampl event handl stl event trigger blop tune anymor handl subsequ event type order handl event again event handl routin must reinstal usual done event handl routin event current process use unbound condit port enabl construct parallel softwar pipelin elegantli reconsid figur extend figur see interact event condit port stl first event new worker declar event attach unbound condit port initi process denot wout process w either read write data fromto port out event new worker trigger time port wout current bound unboundwout return true event bodi event declar new worker creat new process type worker result new port signatur potenti blop blop match two port wout newin inform transfer w new mechan recurs work port creat process new condit unbound attach port newout exampl illustr necess reinstal explicitli event handler ensur coordin execut event handler bodi case process creation primit stl separ languag use addit given comput languag in case c howev coordin entiti must access within comput languag therefor implement c librari interact coordin facil stl set primit includ oper creat dynam port method transfer data port oper process manag see detail specif stl compil runtim syst figur show basic build block stl program environ context ptpvm distribut applic consist two file coordin part appstl comput part appfuncc stl part pars compil produc pure ptpvm code final program link runtim librari stl ptpvm user suppli code gener code stl compil appfunco appstl appc appfuncc appo stlliba user user compil compil linker app ptpvma figur program environ stl coordin autonom agent stl one target stl distribut implement class multiag system multiag methodolog recent area distribut artifici intellig ma organ given set artifici entiti act environ focus collect behavior methodolog aim studi take advantag variou form agent influenc interact wide use either pure simul interact entiti for instanc artifici life problem solv definit mass gener enough address multipl domain specifi natur agent environ proceed compos typic softwar ma start problemat logic induc di tribut approach could capit selforgan collect phenomena one key concept approach emerg apparit function featur level system whole work aim lead robust solut applic framework robot parallel design sy tem follow new ai trend agent embodi situat environ ment primev featur attempt embodi autonomi latter believ necessari condit flexibl scalabl adapt emerg follow formal describ class mass attempt implement distribut ar chitectur motiv project discuss difficulti encount distribut mass eventu present implement stl peculiar applic belong class mass gener model autonom agent system gener model compos environ set agent environ encompass list cell one encapsul list oncel avail object given time object manipul agent list connect cell name neighborhood implicitli set topolog way encod environ allow user cope type topol ogi regular not sinc set neighbor specifi separ everi cell gener architectur agent display figur agent possess sensor perceiv world within move effector act world embodi implement differ modul present figur name percept state action control algorithm depend applic user respons order reflect embodi situated percept must local agent perceiv featur one cell small subset cell given time control algorithm modul particularli import defin type autonomi agent precis insid modul design decid whether implement oper behavior autonomi oper autonomi defin capac oper without human intervent without remot control behavior autonomi suppos basi selfsteer origin agent capac form adapt principl behavior agent behavior au tonom need freedom form learn decid principl behavior from experi least part instanc basic autonomi would consist randomli choos type action take sophist one would consist implement learn capabil iti eg use adapt neural network typic applic gather agent class ma support numer applica tion illustr simul framework mobil collect robot agent an agent simul behavior real robot seek object distribut environ would like stack object like display figur approach rest system integr oper autonom agent is agent system act freeli cell the agent decid action take accord control algorithm local percept therefor master respons supervis agent system thu allow flexibl fault toler agent neither explicit coordin featur sensor effector content connect occupi cell percept action object move manipul algorithm control state figur architectur agent figur collect robot applic stack object detect manag antagon situat con flict respect goal commun tool negoti fact commun indirect way is via influenc environ simul environ compos discret two dimension l cellsid grid set n object n mobil agent object locat cell carri agent given constraint implement sever variant agent modul detail found simpl control algorithm use follow agent move randomli cell connect one agent carri object come cell contain object pick one object probabl given no ff ff constant agent carri object come cell contain object systemat drop object cell empti noth happen simul alreadi serial impl ment exhibit emerg properti system cooper yield recurr interact agent agent cooper achiev task without awar that detail simul outcom found coexist distribut autonom agent would like stress problem implement ma one describ abov distribut architectur instanti ma time se rial howev may be one draw inspir group robot live entiti seem clear agent may run parallel level abstract ma specif term parallel simpli convey notion coexist autonom agent henc parallel ideal underli everi concept ma thought implicitli taken account serial impl mentat paradox project ma onto distribut architectur turn far obviou discuss fundament origin difficulti detail may found it concern differ concept time ma distribut comput ing respect illustr differ concept coordin distribut comput ma problem crystal around differ level understand speak coordin concept stage ie implemen tation notion coordin agent refer level organ quit differ one program level studi ma applic the gather agent order investig method cooper agent name emerg selforgan cooper subdomain coordin stage cooper agent deal depend agent autonom entiti challeng find appropri tradeoff cooper necessari fruit coordin interdepend entiti rel autonomi stage envisag cooper method must describ term agent architectur percept actual sensor effector thu method complet undertaken intern control algorithm result embodi situated prescript implement stage notion coordi nation agent deal organ actual process piec softwar structur object repres agent machin level serial implement agent work round robin fashion way data consist preserv therefor coordin problem occur thu serial implement perturb conceptu definit coordin agent distribut implement new problem aris due share resourc data synchron consist concern coordin model distribut comput aim provid solut problem describ coordin media tool extern agent deal consequ spatial distribut support process exampl coordin medium port connect ecm substratum coordin entiti embed concern coordi nation dimens substratum confus agent environ describ ma level reflect distribut support ar chitectur find notion orthogo naliti coordin medium orthogon model agent environ take separ concern account mean coordin introduc conceptu level implement control algorithm modul agent belong comput part implement comput languag wherea coordin support process implement coordin languag nevertheless question determin extent separ comput includ agent conceptu coordin coordin of distribut process possibl word extent coordin method distribut process interfer coordin method agent specifi ma level kind coordin media tool may provid coordin mean compat agent architectur autonomi local prescript usual platform enabl distribut comput belong ma domain distribut implement ma exist languag would give rise precaut taken hybrid system realiz improp junction two level definit coordin case agent process coordin synchron rate mean conceptu definit ma chosen languag provid compel use order manag process process design aim repres autonom agent result system may exhibit characterist imag properti ma itself one goal understand prescrib precaut taken develop platform make distribut implement ma class easier task thi start implement ma class stl constraint distribut im plement aim abl express autonomi base multiag model distribut architectur natur way preserv autonomi ident agent attempt use stl order distribut system gather agent problemat sketch well reflect tri distribut environ sever process machin purpos divis environ for instanc block l cell each take advantag given distribut architectur clearli necessit mean addit coordin mechan describ ma level mechan need cope agent cross border subenviron of cours achiev transpar user part softwar platform moreov need anoth type mechan order cope data consist eg updat number object cell mechan alter everi agen ts autonomi behavior dismiss unnecessari depend implement stl environ toru grid everi cell four neighbor four connect note use four connect against eight connectiv iti basic chang anyth except slightli allevi implement agent compli rigor model previous introduc figur sens environ sensor act upon percept onc take advantag distribut system environ split subenviron encapsul blop depict figur thu provid independ function subenviron and henc agent roam differ subenviron note blop arrang preserv topolog subenviron implement figur environ split among blop implement new port type introduc name pp nin pp nbi respect variant ppin pp satur attribut set infin see figur port ppnin port ppnbi figur userdefin port type global structur metablop world compos init process charg global initi system set n predefin blop call bx x rang n encapsul handl subenviron figur give graphic overview organ within blop bx metablop world note figur one blop bx repres avoid overload pictur case applic multipl blop bx connect init process blop well connect north port top blop south port bottom blop east port east blop west port west blop intent drop init process four static port everi blop initi three type ppout init nbagt cre agt cre subenv one type pp eot role init process threefold first creat init nbagt cre agt port initi agent within everi blop second set cre subenv port subenviron size number object posit object cell everi blop third collect result exper iment signal end experi properli shutdown system eot port blop bx figur see appendix show implement applic depict figur look like stl coordin lan guag case four blop bx name b b b b figur see appendix present declar instanti process belong blop bx two type process may distinguish process purposebuilt distribut implement multiag applic they enabl distribut implement name initag taxi process actual peculiar multiag applic viz subenv agent process port blop bx blop twelv static port four ppout outflow direct port north o south o west o east o four ppin inflow direct port north i south i west i east i gateway port enabl agent migrat across blop three ppin port name agent b subenv use creation initi agent actual realiz initag process appropri setup subenviron achiev subenv process pp port b eot use forward init process result experi indic end experi time be topolog blop set static manner creat port appropri name see figur appendix four inflow direct port blop match port inner process initag four outflow direct port blop match port inner process taxi initag process new agt event inita gent process respons creation agent four static port nb agt type ppin newarriv type pp nin locat type pp init type ppout outset ex periment initag process nb agt port inform init process number agent creat present blop initag process loop newarriv port receiv identifi agent creat soon valu come port new agt event see figur appendix trigger creat new agent process meantim initag process draw randomli everi agent identifi agent posit locat port enabl initag process commun subenv process better control posit agent regard agent object posit eg ensur outset one agent resid empti cell initag process write init port valu agent creat latter creation port read inform previous written init port initag process valu transmit featur instanc posit agent state note newarriv port connect inflow direct port blop within resid thu enabl deal migrat agent across blop cours experi event mechan describ abov lo init cre_agts_b cre_subenv_b blop bx b_agent creation reqan blackboard b_north_o b_west_o b_south_o b_east_o taxi tsouth twest con_agt tnorth teast agent creation req_an initag init newarriv subenv init locat locat nb_agt eot b_eot b_nbagt world figur init process singl blop bx solid dot line introduc purpos visual cation port use point initag process alreadi check subenv process whether posit agent intend move permit not case not initag process draw randomli new posit neighborhood posit agent intend go agent process process two static port req an type bb creation type ppin plu taxi dynam ppout port alreadi state process read creation port valu it posit state req an port agent connect blackboard agent sens environ percept act action it perform lindalik inout oper appropri messag type action agent take depend type control algorithm implement within agent see architectur agent figur taxi port use commun dynam taxi process case migrat posit state agent inde copi taxi pro cess decis migrat alway taken subenv process subenv process subenv process handl access subenviron charg keep data consist also respons migrat agent cross border sub environ static port of type bb connect blackboard static ppout port taxi connect taxi process initi init ppin port subenv process build subenviron perform inout oper appropri tupl subenv process process request agent eg number object given cell move next cell repli request eg x object given cell move allow regist move agent lead cross border cell locat anoth blop subenv process first inform agent migrat inform taxi process agent migrat the direct agent take transmit taxi process know port write to locat pp port use commun initag process request posit agent regard agent object posit taxi process taxi process respons migrat agent across blop four static direct port of type ppout connect four outflow direct port blop within stand process receiv static ppin port requ direct toward agent migrat creat dynam ppin port con agt order establish appropri agent process commun mean collect use inform agent intend posit plu state valu written port correspond direct take transfer newarriv port initag process concern blop induc dynam creation new agent process blop thu materi migrat discuss stl coordin languag coordin languag distribut program ming ecm along stl present similar sever coordin languag particularli iwim model instanti manifold howev differ sever import point ffl one might inclin identifi blop iwim manag manifold case blop coordin creat explicitli interconnect port establish connect implicit result match mechan depend type state port definit differ point view commun pattern impos further more main characterist blop encapsul object thu form separ namespac enclos entiti encapsul mechan event nest blop power mechan structur privat namespac offer explicit hierarch model ffl ecm gener connect type either stream blackboard group add power mean express coordin tuplespac model restrict channel refin semant defin virtu port characterist featur ffl ecm event signal broadcast environ routin belong blop attach port condit state determin event launch event creat new blop pro cess attach event port action area limit blop ffl interconnect evolv configur chang set port within blop induc event also process them selv fact latter creat new process new port thu yield commun topolog chang ecm stl present similar sever coordin model languag like linda darwin concoord mention specif characterist work like sever develop linda model for instanc object linda ecm use hierarch multipl coordin space model contrast singl flat tupl space origin linda process get start event blop automat upon initi blop creation oper anoth process linda use one singl mechan eval process execut medium use transfer data order commun refer process port belong entiti commun anonym port agent languag stl new instanti ecm model besid advantag better overview coordin duti howev turn separ code as stl alway main tain although black box process model ecm good attempt separ coordin comput code dynam properti prove difficult express separ languag exampl reflect stl primit must use comput languag order use dynam coordin facil stl dynam properti separ total actual program code furthermor duplic code process may introduc difficulti manag code distribut applic observ lead us develop anoth instanti ecm name coordin languag stl new languag bind implement ecm enrich given object orient languag c case coordin primit offer high dynam properti stl applic set class inherit basic class stl librari stl aim give basic construct implement gener multiag platform thu agent languag thorough descript stl found conclus paper present ecm coordin model stl languag bind built first stlbase prototyp top exist pt pvm platform implement classic collect robot simul illustr power demonstr appropri coordin class autonom agent whose critic constraint preserv autonomi dismiss coordin mechan exclus embed purpos implement unnecessari depend far develop platform multiag program concern stl seen first start point stl alreadi includ mechan appropri multiag pro gram among are absenc central coordin process relat type entiti multiag system notion port avoid addit coordin process despit notion blop hierarchi case allow us repres encapsul environ agent stl coordin model still extend order encompass mani gener coordin pattern possibl yield stl skeleton dispos gener purpos implement futur work consist in improv model introduc new userdefin attribut port dynam port blop data type port type refin subtyp port support multipl name port develop graphic user interfac facilit specif coordin part distribut applic two major outcom work first autonom agent system aim address problem natur distribut coordin platform provid user possibl actual distribut implement therefor benefit numer advantag distribut system work step forward autonom agent commu niti secondli gener pattern coordin autonomybas multiag implement embed within platform user quit easili develop new applic eg chang type autonomi agent type insofar compli gener model acknowledg grate andr horstmann christian wettstein valuabl work consist realiz part stl platform r actor model concurr comput distribut system iwim model coordin concurr activ overview manifold implement program multiset transform toolbu coordin architectur extend object rule intellig without reason adapt parallel pi ranha linda con text coordin languag signific bauhau linda cooper implicit et autonom agent concept implement architectur coordin distribut applic web perform autonomybas system tune emerg cooper cola coordin languag massiv parallel softwar environ concurr coordin program object linda coordin model objectori parallel pro gram coordin requir open distribut system ptpvm concept tool coordin multithread appli cation artifici life structur parallel distribut program interdisciplinari studi coordin design intellig agent layer approach coordin model languag set tupl space primit distribut co ordin program languag parallel process agent the ori adapt behavior autonom agent tr