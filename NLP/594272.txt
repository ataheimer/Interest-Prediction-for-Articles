t full formal sldresolut calculu induct construct a paper present full formal semant definit program calculu induct construct first describ formal proof firstord term unif proof obtain similar proof deal quasiterm thu show relat induct set subset defin predic then sldresolut explicit defin renam process use sldderiv made explicit thu introduc complic usual overlook proof classic result last switch lift lemma sound complet theorem formal thi present two lemma usual omit need develop also contain formal basic result oper fixpoint gener set proof result present here check proof assist coq b introduct paper concern program languag semant aim formal sldresolut calculu induct construct coq first term substitut dene unic theorem constantli use denit semant denit program prove similar theorem quasiterm then present formal denit syntact object use logic program atom queri claus etc introduc interpret scheme last declar oper semant denit program introduc proof fundament result theori logic program formal lift switch lemma sound complet theorem reader assum familiar terminolog basic result semant logic program introduc cours exist extens literatur logic program theorem prove one wonder use formal thi recal formal proof rst consist give formal denit object use explicit state priori hypothes need last infer conclus therefor sinc proof encod use coq proof assist object properti explicit dene well hypothes need proof step proof also explicit result denit applic induct scheme lemma the orem make dierenc initi proof found mani book logic program henc formal proof bring us level detail often left reader see take account detail often consid minor inform present proof get bit complic furthermor see assumpt usual overlook requir theorem prove main diculti develop concern denit variabl renam process use sldderiv made explicit thu introduc complic usual omit ted instanc see proof complet theorem delic seem requir formal point view sever technic lemma paper devot detail howev j c shepherdson point inaccuraci basic result theori logic program present discuss role standard apart sldresolut let us give famou ex ampl come paper show classic result incorrectli state famou book j w lloyd give fundament theorem complet sldresolut follow form let p denit program g denit goal everi correct answer p fgg exist comput answer p fgg substitut j c shepherdson wrote theorem true gave simpl counterexampl cours true nd two substitut g howev although act variabl occur g impli restrict yield anoth typic exampl lift lemma gener state follow program n goal substitu tion suppos exist sldrefut p fng sequenc mgu then exist sld refut p fng sequenc mgu n gener assumpt substitut suppos here howev order formal correspond proof build deriv start n assum hypothes let x variabl occur domain n occur n wherea x use renam claus deriv start n cannot use deriv start n henc order exactli use sequenc variant claus which alway suggest two deriv suppos variabl use renam input claus deriv start n occur n furthermor similar reason order prove suppos variabl use renam input claus deriv start n occur domain similar problem happen proof switch lemma assert sld deriv two atom l l success select also select revers order deriv state renam variabl z z again want exactli use variant c c two deriv assumpt requir hypothes come initi deriv howev want select l l c c must satisfi noth switch lemma ensur properti and depend standard apart use sldderiv possibl variabl occur r occur r occur c avoid problem c c must satisfi hold use standard apart come henc formal proof bring us greatest level detail problem due variabl occur input claus variant claus use resolut step coincid variabl deriv surprisingli anoth problem come necess explicit priori assumpt need obtain proof curious even requir seem natur common practic logic program suppos proof on paper basic result assumpt variabl occur claus use without justic cours exist independ result assert exist deriv depend choic variabl input claus even choic import proof result still correct howev properti variabl formal prove independ result and furthermor express properti object occur theorem for instanc cannot suppos proof claus share variabl goal built proof goal appear theorem standard semant la herbrand denit program deal wellknown object substitut renam howev sever nonequival denit object found literatur thu introduc confus for exampl mean renam often assum simpler formal denit impli h p ko m e nadel point dierent author give subtley dierent denit substitu tion cite six nonequival denit point implic instanc relat thu give dierent version lift lemma therefor substitut simpl might rst ap pear motiv author r s kemp g a ringwood take instanc relat primit rather take substi tution also confus literatur concern denit gener unier mgu short j l lassez m j maher k marriot compar four nonequival denit mgu cours logic program concern problem also subject confus sldderiv follow denit renam process requir sldderiv ation found confus aris condit fact dene dierent hypothes least two reason condit first standard apart need order abl unifi select atom head variant claus use last reason obtain gener possibl answer substitut therefor formal settl problem variabl renam long caus error eld logic program descript coq use version proof assist coq allow interact develop formal proof coq base logic framework known calculu induct construct extens type calculu support depend type polymorph type basic idea underli logic framework base curryhoward isomorph proof proposit seen function object instanc proof proposit form b function map everi proof proof b type function isomorph prove proposit type proposit identi object proof furthermor framework allow denit induct coinduct type which speci constructor classic exampl induct type denit natur number dene system coq induct three induct principl automat gener denit nat_id pnatsp onnatp np s nnnatp n id s either indprop recset recttyp classic exampl coinduct type type innit sequenc form element type a stream shorter coq introduc coinduct set stream asetconsastream astream a note induct principl coinduct type coq also allow denit mutual recurs type shall use two distinct sort prop type logic proposit set type data type specic type prop set type construct proof within coq interact process given goal user speci deduct rule appli coq comput theorem prover solv success subgoal tactic ie function build proof given goal proof elementari subgoal goal appli tactic subgoal n term unic rst step develop consist natur formal uni cation term unic algorithm deal two set term substitut let us rst present formal denit given function signatur ie countabl set ariti function ar countabl set x variabl symbol term t x dene induct follow f function symbol l list term length n tff l term time introduc depend type l n x list term length n t x l n x mutual recurs substitut s dene applic x x recal given two term substitut s call unier unif_t call minim unier min_unif_t everi unier ie exist substitut denot predic less_subst_t unier call gener unier minim idempot ie x x denot predic idempotent_t relev ie everi variabl occur domain also occur list form everi variabl occur rang also occur list form under_lt denit extend list term instead formal unic term follow standard approach base unic algorithm sinc similar formal proof deal quasiterm obtain j rouyer transpos unic properti quasiterm term origin quasiterm introduc z manna r j walding order illustr techniqu program synthesi unic algorithm deriv prove specic satis proof veri within cambridg lcf theorem prover l c paulson similar proof obtain j rouyer quasiterm dene follow use obtain variabl quasiterm constant quasi term function quasiterm consarg use build nonempti list quasiterm term list term merg singl data type instanc term fx a gx obtain follow precis j rouyer prove exist unier q q two quasiterm well form unier quasisubstitut inde substitut clearli x proper subset q x consargconsargx x x neither term list term and order transpos unic properti dene map f wellform quasiterm ie quasiterm repres term term howev coq incorpor notion partial function total current solut taken develop consist consid simultan quasiterm proof well form henc predic p q x character wellform quasiterm dene depend type p two approach possibl rst one correspond program languag type p dene recurs structur quasiterm q consid q well form use appli q x proof proposit fals obtain q proof wellform second approach correspond proof languag approach type dene recurs structur proof quasiterm consid well form addit interest unic theorem motiv develop approach base reusabl formal proof therefor develop show dene partial function precis outlin two induct dene set predic p e exist biject e dene follow function two characterist problem follow dene predic allow direct denit function predic e p therefor everi express stand e know biject furthermor would like function f easi obtain see everi e e relat element e furthermor everi e denit f rather critic denit pred icat domain f techniqu use consist dene induct everi e e collect pe proof p logic equival pe comput content cours everi e e p must exist proof p way posit dene recurs structur proof function e henc accord def init proof view object data structur mathemat collect inhabit set type explicit algorithm content thu allow proceed induct proof dene recurs function structur proof sinc e isomorph subset aim map result e result e prove conserv lemma let u u two formal properti respect e e quasiun unic assum properti u hold e given two function f f prove properti u e follow reason let e element hypothesi u f e exist proof p f claim follow sinc manner prove unic theorem without realli work unic prove conserv lemma for full present proof see theorem unic given two term either uniabl exist idempot minim unier relev term object use logic program present section formal denit object use logic program introduc them interpret schema first let relat signatur collect at x atom induct dene follow p predic symbol l list term length n plp l atom then queri denit claus denit program horn claus dene atom ariti arfun nat mutual induct ar f term list_term nat set con nnatterm list_term nlist_term s n subst var term induct unification_ttttermset con s o con nil con s o con nil unification_t t induct quasiterm set vvarquasiterm cfunquasiterm rootfunquasitermquasiterm consarg quasitermquasitermquasiterm tabl term substitut unic order abl give interpret object necessari attach mean symbol occur them therefor let us dene interpret signatur thi let n a depend polymorph type list element type length n bool set boolean with usual oper order dierenti oper _ prop dene two collect map f n a form map n a a p n a form map n a bool accord denit interpret domain d dene classic way f arf d henc given interpret i d resp nari function f predic p interpret map f bool posit give follow interpret at x induct atom set plpprediclist_term arity_p patom induct request set true_reqrequest cons_reqatomrequestrequest c x definit clausesetatomrequest induct program set nil_pgmprogram cons_pgmclauseprogramprogram induct horn set hpprogramhorn hrrequesthornhorn tabl syntact object scheme first dene x collect valuat map x a then term and list term interpret follow let interpret domain d term resp list term l length n interpret applic dene f l v l nil_ cons_ constructor n d con constructor l n x henceforth nd conveni write denot interpret d d object claus interpret applic dene l v r fals b true v ri v v _ b r v true c v v r v induct dsetnnatlist nd d definit f_i set set dsetffunf_n ariti ar f x definit valuationsetsetasetvara fixpoint interp_t dsetif_i dtterm valuat ddvvaluat d case ffunllist_term ariti ar f i f apply_l ariti ar f l v end apply_l dsetif_i dnnatllist_term n valuat d list n vvaluat dnnatlist ncase l nil d nnatttermllist_term n con n interp_t v apply_l n l v end bool induct boolset truebool falsebool dsetnnatlist n bool d definit p_i set set dsetppredicp_n arity_p p tabl interpret interpret i domain d said model object atom queri everi valuat v d case write depend interpret schema use queri r write either r j r note that wherea given valuat v x proposit true decid sinc innit set proposit necessarili decid introduc mani complic follow termin dene relat logic consequ j horn claus queri follow gener interpret schema definit interp_o dsetf_i dp_i do valuat dbooldsetiff_i dipp_i do vvaluat d case end ppredicllist_term arity_p p request fals orb neg interp_p ip l v interp_r ip r v request true andb interp_p ip l v interp_rn ip r v claus aatomrrequest orb interp_r ip r v interp_p ip v true andb interp_c ip c v interp_p ip p v pprograminterp_p ip p v andb interp_r ip r v interp_h ip h v definit o_validdsetf_i dp_i doprop vvaluat dinterp_o ip l vtrue request prop h_valid ip hreqn_valid ip r tabl interpret model sldresolut logic approach denit program split two part declar semant determin comput oper semant given sldresolut describ comput execut denit program base combin two mechan replac unic form comput specic form theorem prove call sldresolut for select linear denit resolut transit resolut rule infer rule dene deduct relat c denit claus c c program p atom call head c c queri call bodi c r queri r renam substitut variabl occur rc also occur r write resolut rule follow abbrevi manner mgu r n rc r n stand n th atom r at_n_req rn rc queri obtain replac r n th atom queri rc change_n_r n rsubst_req r body_c c r resolut step two choic made choic select atom choic input claus whose head uni select atom therefor resolut rule view rule move state anoth dene follow first introduc sr collect map x x the classic properti substitut extend sr predic p r sr character renam substitut r occur domain r also occur rang r r idempot resolut state pair r substitut r queri give formal denit renam condit satis transit r first initi resolut state r must satisfi r then renam substitut r renam variabl occur c variabl denot prc r c last dene two predic satis variabl occur rang r also occur domain p rs queri r p rr posit dene predic p collect transit mgu at_mgu mean gener unier sldresolut deriv nite valid sldderiv nite sequenc compos transit satisfi predic also henc deriv dene induct list proof properti sldresolut obtain induct deriv use left induct schema howev sound proof shall need right one henc dene two collect deriv follow d l r isomorph l l c d l z left induct z right induct two function dene order relat two set transit dene predic l character valid deriv sequenc compos transit satisfi predic p addit renam condit thi introduc follow deni tion two transit e f e f said compos function l comput list variabl occur input claus deriva tion dene predic p l recurs dene t p t p d resolut state definit statesetsubstrequest fst snd project product type sr definit renamevarvar definit good_renamerenamepropsrrenam yvarxyrdom sr xrdom sr y sr xsr yrdom sr xrrang sr x definit rename_crenameclauseprop prr definit rename_out_reqrenamerequestprop pr definit rename_out_domrenamesubstprop xvarrdom r xs r xtv r x induct transsettrans_consstateprogramnat clauserenamesubstatomstatetran induct rsl eistatepprogramnnat cclauserrenamessubstaatomefstateproprsl_init le s n length_r snd ei rsubst_at r head_c c h good_renam r xvarsubst_t fst ei x subst_req rsl ei p n c r ef definit rsltranspropttran case aatomefstatersl ei p n c r ef end tabl transit l induct derivset deriv_con deriv tran deriv induct deriv_f_con tran deriv_f deriv_f induct couple_trans_ok ttransttransprop couple_trans_ok_initp_tran tp_tran t state_end_t tstate_init_t trsl trsl t couple_trans_ok t fixpoint list_var_c_d dderivlistv case var_cl rsubst_cl sr_tran t c_tran t dderivttransappv list_var_c_d d var_cl rsubst_cl sr_tran t c_tran t end fixpoint deriv_ok dderivprop case couple_trans_ok end_d d tderiv_ok d rrang sr_tran t x end tabl deriv stand last transit r stand initi queri d r stand renam substitut use transit denit allow full formal classic properti sld resolut present next section basic result sldresolut dene relat satisfi sever import properti logic one sound complet two other particular form comput lift switch lemma two classic lemma switch lemma resolut step deriv atom claus must select follow wellknown lemma ensur nondetermin choic atom matter call care nondetermin lemma switch valid deriv two atom b success select also select revers order deriv state renam variabl lemma prove decompos two transit id r z id stand ident substitut tv furthermor note suppos rst select atom second queri r that assumpt proof present detail classic requir constantli denit variabl renam process use valid deriv note explicit build proof substitut relat two deriv state thu allow us assert renam variabl lift lemma lift lemma anoth classic lemma use complet proof said introduct assum addit condit renam use order prove it lemma lift let id r valid deriv nite list variabl l dom l exist valid deriv id r queri r f r proof obtain induct deriv use left induct schema again two deriv state explicit relat for full present see two fundament properti answer solut dene oper declar semant denit program given denit program p solut queri deriv_ok d fst state_init_d dtv snd state_init_d dsubst_req eta r rrang sr_tran t x p_tran tp_tran fst ex rfrequestsnd state_end_d d subst_req fst state_end_d d rf snd state_end_d dsubst_req fst state_end_d d subst_req eta rf xvarsubst_t fst state_end_d d eta x deriv_ok deriv_con deriv_con t t le plu n_tran t length_r body_c c_tran t n_tran t fst state_init_d dtv deriv_ok deriv_con deriv_con n_tran ts minu n_tran t length_r body_c c_tran n_tran tn_tran snd state_end_d deriv_con deriv_con t t subst_req r snd state_end_d deriv_con deriv_con snd state_end_d deriv_con deriv_con t t ex vvar r xtv v tabl lift switch lemma fst state_init_d dtvsnd state_end_d dtrue_req subst_req answer d snd state_init_t head_d d tabl sound sldresolut r substitut h p p declar descript desir output denit program queri convers oper counterpart solut answer id r valid deriv answer r sound sldresolut sound theorem express everi answer queri also solut queri theorem sound if denit program p queri r get valid deriv id r correspond proof requir notion free transit transit satisfi resolut rule except unier use necessarili gener unier henc condit initi step condit h predic rsl necessarili hold proof obtain use right induct schema complet sldresolut let us turn formal complet theorem sld resolut exist solut queri exist answer queri in form complet theorem weaker usual complet theorem sound theorem prove relat solut answer usual need new denit lemma rst let us summar them first dene herbrand interpret respect denit thi dene induct collect ground term ground_term term contain variabl obtain use function symbol occur thi set also call herbrand univers time collect l n list ground term dene similarli dene collect at ground atom ground_atom form use relat symbol ground term herbrand univers argument thi set also call herbrand base also dene collect ground substitut ground_subst map x which exactli correspond x furthermor avoid uninterest complic assum now signatur use contain constant ie ari function symbol henc aboveden set nonempti in j h gallier discuss detail need least one constant symbol context herbrand theorem introduc denit herbrand interpret written h everi f f h map arf t dene by tfg uniqu constructor ground term l type l arf obtain l use denit dene herbrand interpret interpret ground term base h sinc herbrand interpret assign constant function xed seem possibl identifi herbrand interpret subset herbrand base dene predic i character ground atom a howev note specic i correspond two dierent kind specic wherea everi herbrand interpret everi ground atom a proposit decid arbitrari predic p at proposit pa not therefor later well use theorem need get predic herbrand base herbrand interpret proposit assumpt we use assumpt map fixpoint character least herbrand model complet sldresolut obtain cost strong assumpt implicitli suggest ident type everi denit program p dene predic at least herbrand model p intersect herbrand model accord denit prove g wish obtain deeper character set use xpoint concept studi herbrand model denit program r kowalski m van emden associ denit program p oper p call immedi consequ oper provid link declar oper semant de nite program use ident herbrand interpret predic herbrand base oper usual dene follow tabl declar semant let p denit program p predic at ground atom claus c occur p ground substitut p pa sinc possibl variabl occur atom cannot establish decid p p even know decid p given not necessarili ground atom herbrand interpret cannot prove decid proposit interpret model atom need evalu atom necessarili ground bodi claus aect p sinc herbrand model program p exactli xpoint p formal result oper xpoint gener set fact p easili seen upward continu follow least xpoint p equal p us turn denit oper counterpart least herbrand model success set denit program dene predic p herbrand base character ground atom exist sldrefut start a two technic lemma present end section prove p equal p and assumpt everi predic herbrand base decid posit prove complet theorem follow theorem complet let p denit program r nonempti queri solut r then exist follow valid deriv id r oper aset definit paaprop definit oppapa induct ordset fixpoint ord_first nnatord case n soordord oo lonatordord pnatso ord_first p end ordin power fixpoint aafals lnat ordaaex nnatpof f l n a end theorem tabl oper ordin xpoint one delic step proof complet theorem sldresolut concern combin deriv proof made induct length initi queri follow argument alway use refut b ground refut combin refut p howev combin deriv rather delic way made never given therefor formal proof need technic lemma whose proof immedi show in construct way nal refut obtain initi one cours order ensur good properti variabl occur nal refut abl renam initi refut first follow variant lemma seldom state whose proof immedi prove dierent form state lemma variant lemma let l list variabl valid deriv id r exist valid deriv s id r induct tp induct success pprogramaground_atomprop p_deriv dpderiv_ok d fst state_init_d dtvsnd state_init_d d cons_req ground_to_atom a true_req snd state_end_d dtrue_req success p a rtrue_req semantic_csq hp p subst_req r fst state_init_d snd state_end_d tabl complet sldresolut variabl occur d also occur l furthermor substitut r dom r varr r word exist deriv depend choic variabl input claus suce good properti hold formal lemma consist build deriv start r nite set variabl z deriv start r variabl occur input claus also occur z r z z z not immedi consequ obtain follow lemma lemma combin deriv let p denit program r nonempti queri ground substitut everi atom occur r success set p then exist valid deriv id r proof proceed induct r claim obviou induct hypothesi everi atom occur r p a then exist valid deriv id r moreov hypothesi induct hypothesi build valid deriv r furthermor p a and denit exist valid deriv ground substitut prove induct id c r a r a also valid deriv moreov lemma exist valid deriv a now induct prove a valid deriv henc combin suitabl renam condit one obtain valid deriv id c r a r settl claim j said formal complet prove weaker sound theorem prove relat solut answer due follow usual step proof variabl n enrich languag p ad new constant substitut fx a exist sld refut p f ng textual replac refut x oper cannot formal use denit which allow add new constant function signatur textual replac constant variabl variabl constant possibl solut could consist follow ssemant approach develop allow variabl herbrand base relat work said unic quasiterm formal l c paulson use lcf j rouyer use coq concern deni tion partial function c duboi v vigui donzeaugoug recent propos method gener automat predic p character domain partial function f equat dene f mlstyle formal complet proof envisag sever au thor h persson present formal use proof assist alf construct complet proof intuitionist predic logic wrt model base formal topolog j harrison discuss formal hol basic rstorder model theori includ compact ness lowenheimskolem uniform theorem j l krivin describ formal second orderlog intuitionist proof complet theorem classic logic final note area formal method appli logic program start oper semant prolog sound complet proof renement step toward warren abstract machin wam elabor c pusch theorem prover isabel conclus order prove formal properti program seem natur give formal specic oper semant paper sldresolut formal fundament properti form comput prove more technic lemma formal develop proof machinecheck base j w lloyd book follow tradit chosen take referenti notion truth semant notion an altern could consist take anoth referenti notion like natur deduct sequent calculu first note that instead prove unic theorem follow unic algorithm j rouyer use result quasiterm obtain proof techniqu propos base dene biject term quasiterm satisfi given predic prove preserv unic properti way prove unic theorem without realli deal unic theori thu avoid heavi proof requir handl sophist theori construct interest repres altern classic approach show take advantag previou formal proof even desir proof exactli deal object wherea unic theorem prove requir lemma lemma prove develop show interest proof librari provid inform present variabl renam problem often ignor howev problem cannot ignor here said result present prove calculu induct construc tion thu make dierenc proof one nd mani book logic program main dierenc concern renam process use sldderiv made explicit typic exampl proof complet theorem requir variant lemma assert ing exist sldderiv depend choic variabl input claus use lemma combin deriv which explicit allow oper whose proof rather long therefor formal sldresolut introduc mani complic even combin sldderiv seem easi oper requir sever renam order satisfi standard apart assum denit deriv usual lemma implicitli use without proof justic surprisingli full formal proof show minor detail could crucial interest discuss ne point foundat logic program found cours main problem come explicit substitut use unic variabl renam process substitut quit hard matter deal with substitut said minenc grise calculu also said sldresolut like sldresolut claus reduct dene relat term may interest compar properti relat wherea reduct conuent sldresolut satis switch properti weaker conuenc fur thermor variabl renam process use sldderiv view implicit convers renam made explicit allow full formal sldderiv along line calculu explicit substitut reduct the calculu renement calculu substitut manipul explicit provid link classic calculu concret implement renam process requir sld deriv play essenti role logic program constitut import step denit oper semant denit program declar read horn claus acknowledg mani thank ren lalement enlighten discuss work well anonym refere use comment r explicit substitut logic program contribut theori logic program project coq calculu construct step toward mechan partial function domain induct predic declar model oper behavior logic languag logic comput scienc proof type edinburgh lcf formal basic formal sldresolut calculu induct construct reynold heyt model logic program koichi furukawa une preuv formel et intuitionnist du thorm de compltud de la logiqu classiqu comput logic foundat logic program partial evalu logic program ming deduct synthesi uni logic program prolog verifi uni construct complet intuitionist predic logic formal type theori dvelopp de lalgorithm duni role standardis apart logic program semant predic logic program languag tr