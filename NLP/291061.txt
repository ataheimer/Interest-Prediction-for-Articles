t empir studi decentr ilp execut model a recent fascin dynam schedul mean exploit instructionlevel parallel introduc signific interest scalabl aspect dynam schedul hardwar order overcom scalabl problem central hardwar schedul mani decentr execut model propos investig recent crux model split instruct window across multipl process element pe independ schedul instruct decentr execut model propos far group categori base criterion use assign instruct particular pe are i execut unit depend base decentr edd ii control depend base decentr cdd iii data depend base decentr ddd paper investig perform aspect three decentr approach use suit import benchmark realist system paramet examin perform differ result type partit well specif implement issu type pe interconnectw found ringtyp pe interconnect ddd approach perform best number pe moder cdd approach perform best number pe larg current use approachedddo perform well configur realist crossbar perform increas number pe partit approach result give insight best way use transistor budget avail implement instruct window b introduct extract signific amount parallel sequenti program instructionlevel parallel ilp processor often perform dynam schedul hardwar typic collect decod instruct instruct window execut instruct sourc operand becom avail go today modest issu rate way issu central dynam schedul face complex phase outoford execut hardwar need forward new result subsequ instruct identifi readytoexecut instruct instruct window limit size hardwar window import therefor decentr dynam schedul hardwar import decentr underscor recent develop processorsexecut model mip r r dec alpha multiscalar model superthread model trace process model misc multipl instruct stream comput pew parallel execut model multiclust model execut model split dynam instruct window across multipl process element pe dynam schedul parallel execut in struction dynam schedul achiev let execut instruct operand becom avail import issu pertain decentr criterion use partit instruct stream among pe three type decentr approach propos base criterion use parti tion i execut unit depend base decentr edd ii control depend base decentr cdd iii data depend base decentr ddd first categori group instruct use execut unitsuch adder multiplierinto pe exampl r r alpha second categori group controldepend instruct pe multiscalar superthread ing trace process model come categori last categori group datadepend instruct pe exampl misc pew multiclust model three categori differ hardwar requir tradeoff paper report result set experi conduct provid specif quantit evalu differ tradeoff address follow specif question kind program benefit kind partit ffl well perform scale decentr ffl much benefit would crossbar use interconnect pe question select best decentr approach use granular parallel import one discuss might accomplish immedi concern question whether even worth attempt use decentr techniqu pe yet know exact shape execut model take futur show right choic made decentr approach provid reason improv instruct complet rate without much impact cycl time rest paper organ follow section provid background motiv behind decentr dynam schedul hardwar also describ three decentr approach investig section describ experiment methodolog section present detail simul result differ decentr approach particular examin impact increas number pe effect two differ pe interconnect topolog section present discuss result conclus paper decentr ilp execut model program written current instruct set architectur gener controldriven form ie control assum step instruct sequenti or der dynam schedul ilp processor convert total order impli program partial order determin depend resourc control data involv identifi instruct mutual resourceindepend controlindepend data independ order scale degre multipl is sue resourc high demand decentr reorder parallel execut instruc tion constraint due resourc depend overcom i replic resourc fetch unit decod unit physic regist execut unit eu ie function unit ii provid multipl bank resourc dcach shown figur a decentr dynam schedul inspect block diagram figur a see import structur remain decentr dynam schedul ds regist renam dynam ds schedul control mispredict inform isavis regist decod unit regist renam unit control flow icach physic regist memori address resolut dcach bank a eu eu eu eu eu eu eu eu dynam ds schedul dynam ds schedul dynam ds schedul dynam ds schedul control mispredict inform flow control instruct isavis regist icn distribut unit address dcach bank memori resolut b figur gener organ dynam schedul ilp processor a central schedul b decentr schedul unit memori address resolut unit incident difficult part decentr deal interinstruct depend preclud decentr mere replic part ds hardest decentr often need handl activ instruct simultan present processor detail studi m m m cmo technolog also confirm central ds scale well thu import decentr ds mani research propos decentr ds use multipl pe set eu shown figur b decentr processor dynam instruct stream partit across pe oper parallel complex structur partli reduc offload part work special hardwar critic path program execut instruct assign pe control depend data depend them natur question aris point is basi instruct distribut among decentr pe criterion use partit instruct stream import improp partit could fact increas interp commun degrad perform true decentr aim reduc demand pe also aim minim demand pe interconnect local major share interinstruct commun occur processor within decentr pe three current approach group instruct pe revolv around three import constraint execut instruct parallel i execut unit depend ii control depend iii data depend shall look three decentr approach ensu discuss use exampl control flow graph cfg code shown figur cfg consist three basic block a b c block b controldepend condit branch a block c controldepend condit branch b shall assum control flow predictor select block a b c trace i br r i br r i i br r figur exampl control flow graph code execut unit depend base decentr type decentr instruct assign pe base eu execut on thu instruct resourc depend particular eu execut pe artifact arrang instruct wait near eu depend resolv interestingli one pioneer dynam schedul scheme implement ibm incorpor type decentr itself recent mip r r processor also use approach potenti advantag edd approach pe need one type execut unit anoth advantag instruct partit straightforward static natur singl pe eu particular type situat dynam instanc given static instruct alway get assign pe multipl pe eu particular type choic involv alloc instruct requir eu type one option situat static alloc compil offlin hardwar anoth option dynam alloc as alpha perhap base queue length concern pe either option readi instruct may sometim wait allot eu becom free although anoth eu type in anoth pe free furthermor processor perform specul execut recoveri action aris incorrect specul necessit select discard instruct differ pe main shortcom edd approach howev gener result pe may need pe necessit global interconnect pe scale well control depend base decentr cdd second decentr approach contigu portion dynam instruct stream assign pe thu instruct controldepend condit branch gener assign pe branch assign instruct wait near control depend resolv exampl approach multiscalar execut model superthread model trace process model controldependencebas decentr fit well controldriven program specif typic adopt current isa controldepend instruct tend group togeth program execut partit instruct among pe easili done static partit cfg furthermor regroup instruct need instruct commit time cdd hardwar implement propos far multiscalar processor superthread processor trac processor organ pe circular queue shown figur circular queue impos sequenti order among pe head pointer indic oldest activ pe program execut processor follow cycl tail pe idl control flow predictor cfp predict next task dynam instruct stream invok tail pe task path subgraph contain cfg execut program instanc cdd processor use tracebas task block a b c exampl code which form trace assign singl pe invoc tail pointer advanc invoc process continu new tail next cycl successor task exampl code one start predict target condit branch block c thu cfp step cfg distribut task specul multiprocessor also partit instruct base control de pendenc howev partit granular gener much coarser sever hundr instruct per task fur thermor multipl task multiprocessor share regist space pe head pe complet task instruct commit head pointer advanc caus pe becom idl task mispredict detect pe incorrect specul point tail pe discard known squash figur block diagram pe cdd processor wherea trace processor consid trace a singl path consist multipl basic block task multiscalar processor consid subgraph control flow graph task therebi embed altern flow control task processor also differ term instruct task fetch wherea trace processor fetch instruct task singl cycl suppli pe multiscalar processor let activ pe parallelli fetch instruct one one architectur support provid facilit hardwar determin data depend studi shown cdd processor regist operand produc pe nearbi pe unidirect ringtyp pe interconnect quit suffici pe typic keep work copi regist file also help maintain precis state task boundari data depend base decentr ddd third approach decentr data depend use basi partit is instruct data depend instruct typic dispatch pe produc instruct dispatch mutual dataindepend instruct like dispatch differ pe thu instruct wait near data depend resolv misc multipl instruct stream comput pew execut model dependencybas model given multiclust model come categori data depend dictat commun occur instruct ddd approach attempt minim commun across multipl pe instruct pe mostli datadepend becom less import runtim schedul within pe howev partit instruct ddd processor gener harder cdd pro cessor program gener written controldriven form caus individu strand datadepend instruct often spread larg segment code thu hardwar first construct data flow graph dfg instruct parti tion shown figur notic program specifi datadriven form datadependencebas partit would easier reduc hardwar complex dfg correspond path or trace gener offlin hardwar store special icach later reus i br r i br r i br r figur regist data flow graph rdfg trace abc figur ddd hardwar implement propos far pew dependencebas model multiclust differ term pe interconnect pew use unidirect ringtyp con nection wherea misc dependencebas model use crossbar crossbar employ pe proxim other henc instruct partit algorithm becom straightforward howev discuss earlier crossbar scale well multiclust execut model isavis regist partit across pe instruct assign pe base sourc destin isavis regi ter thu partit static natur pew execut model partit done dynam order reduc burden partit hardwar complex instruct pipelin dfg correspond path built offlin hardwar store special icach altern architectur support provid permit compil convey dfg relev inform hardwar comparison seen three approach partit instruct amongst decentr process element tabl succinctli compar differ attribut hardwar featur three decentr approach implement point view cdd edd potenti edg static natur partit ing cdd implement advantag due attribut edd cdd ddd basi partit resourc usag control depend data depend execut unit type pe eu type eu type eu type logic order among pe partit granular instruct task instruct time partit done staticdynam staticdynam staticdynam complex dynam partit hardwar moder moder high tabl comparison differ decentr approach partit higher level instead way instruct fetch mechan fetch decod instruct everi cycl icach trace cach instruct fetch mechan includ icach distribut across pe done multiscalar processor experiment methodolog previou section present detail descript comparison three decentr approach next present detail simulationbas perform evalu three decentr approach experiment setup setup consist executiondriven simulatorsbas mipsii isathat simul decentr approach detail simul cyclebycycl sim ulat includ execut along mispredict path simul equival everi respect except instruct partit strategi particular follow aspect common simul instruct fetch mechan execut model use common control flow predictor specul outcom multipl branch everi cycl highlevel predictor extens treelevel predictor given consid treelik subgraph dynam control flow graph basi predict tree depth path use predictor predict one path use level pag predictor treepath or trace allow maximum instruct first level tabl subgraph histori tabl predictor entri direct map use pattern size second level tabl pattern histori tabl entri consist bit updown satur counter kbyte trace cach use store recent seen trace trace cach way setassoci cycl access time block size instruct trace start address map set trace cach everi cycl fetch mechan fetch dispatch instruct data memori system execut model use memori system l data cach perfect l cach so reduc memori requir simu lator l data cach kbyte way setassoci way interleav nonblock byte block cycl access latenc memori address disambigu perform decentr manner use structur call arcad provis execut memori refer prior address disambigu instruct retir investig execut model retir ie commit instruct program order one trace time support precis except pe interconnect topolog three type pe interconnect model simulatorsa unidirect ring bidirect ring crossbar ring take cycl adjac pepe transfer crossbar take log p cycl pepe transfer p number pe paramet studi ffl maximum fetch size f instruct ffl pe issu width d maximum number instruct execut pe per cycl fix be caus higher valu gave margin improv thu pe eu ffl pe issu strategi default strategi use out oford execut within pe experi involv vari paramet partit strategi number pe p pe interconnect benchmark perform metric tabl give list spec integ program use along input file use compress averag path benchmark input file trace length predict gcc stmti go stonein li testlsp vortex vortexraw tabl benchmark statist program base unix compress util perform compressiondecompress sequenc larg buffer data gcc program version gnu c compil mani short loop poor instruct local go program base intern rank go program the mani face go li benchmark percentag instr use eu type eueu commun program integ loadstor branch intint intloadstor intbranch loadstoreint gcc go li vortex tabl distribut instruct base execut unit use program lisp interpret written c mksim program simul motorola processor vortex program singleus objectori databas program exercis system kernel code integ c program compil mip rultrix platform mip c version compil use optim flag specifi spec benchmark suit benchmark simul complet million instruct depend whichev occur first tabl also give execut statist number instruct simul averag treepath trace length path predict accuraci stati tic see gcc go poor control flow predict primarili aris poor instruct local iti caus mani conflict first level tabl predictor measur perform execut time sole metric accur measur perform integr softwarehardwar comput system accordingli simul experi measur execut time term number cycl requir execut fix number instruct report result execut time express term instruct per cycl ipc notic ipc figur includ commit instruct includ nop also measur regist traffic get insight behavior differ decentr approach partit algorithm simul edd edd system pe execut unit eu particular type decid mani pe eu particular type measur percentag instruct use eu type tabl give percentag base percentag instruct use particular eu use follow eu assign system singl pe eu pe execut type instruct system pe first pe hous integerfp eu second pe hous loadstorebranch eu system pe divis pe tabl pe eu number integ loadstor branch fp pe pe pe pe pe tabl divis pe edd scheme kind place adjac other set pe loadstor eu place immedi set pe integ eu signific amount traffic integ eu loadstor eu cf tabl instruct partit strategi dynam compon instruct assign multipl pe assign candid pe least number instruct cdd studi cdd partit approach connect pe circular queuelik manner two differ task size name use first case call cdd trace instruct fetch cycl assign pe tail pe circular queue second case call cdd trace instruct fetch cycl assign tail pe ddd studi ddd partit approach use two differ partit algorithm first algorithm call dddmulticlust follow multiclust approach depict subset isavis regist assign pe isavis regist notion homep studi n th pe consid homep regist r r number generalpurpos regist p number pe assign instruct pe done depict tabl number number pe sourc dest instruct regist regist assign dest regist sourc regist dest regist st sourc regist sourc regist destin regist same then homep regist els homep dest regist tabl instruct assign dddm partit scheme second ddd algorithm call dddp dddpew make better use data depend inform use offlin hardwar construct regist data flow graph rdfg trace treepath trace encount first time rdfg trace data depend chain or strand identifi rdfg depend strand may commun them strand identifi rel pe assign made strand view ipc number pe dddm edd ipc gcc number pe go ipc number pe li ipc number pe ipc number pe vortex ipc number pe figur ipc without nop vari number pe unidirect ring pe interconnect reduc commun latenc strand is flow data one strand anoth strand given rel pe assign consum strand pe one immedi follow produc strand pe strand data depend strand trace mark relocat time instruct dispatch dispatch unit decid pe placement strand base depend data come outsid trace rel pe placement decid static offlin hardwar cycl penalti stall impos trace seen first time order form rdfg rel pe assign pe assign instruct full instruct assign closest succeed pe empti slot perform result ipc unidirect ring first set studi focus compar perform differ partit algorithm number pe vari unidirect ring use connect pe figur plot ipc valu obtain default paramet pe schedul benchmark valu p consid f g graph figur correspond particular benchmark program plot one correspond decentr approach edd first all edd approach perform well ringtyp pe interconnect expect edd approach unabl exploit local commun import use ring topolog interconnect pe perform increas slightli number pe increas thereaft downhil ddd perform two ddd partit algorithm quit differ perform dddm algorithm gener poor similar perform edd algorithm simul get good perform dddm approach optim compil need renam regist specifi consid idiosyncrasi dddm execut model otherwis littl data depend local like captur dddp approach perform gener keep increas number pe p increas valu p dddp algorithm perform best among investig partit algorithm dddp better abl exploit local commun instruct spread across moder number pe strike observ perform dddp start drop number pe increas beyond drop perform datadepend instruct get alloc distant pe result larg delay forward regist valu distant pe one reason spread datadepend instruct rdfg format instruct partit done individu trace basi knowledg subsequ trace avail made use partit instruct better placement instruct made cdd perform cdd scheme keep increas steadili number pe increas two reason i avail parallel increas instruct window size ii regist instanc short lifetim result littl commun regist valu nonadjac pe number pe increas beyond cdd approach start perform better ddd approach ddd edd begin perform wors arena notic howev three benchmark compress li mksim perform dddp pe better perform cdd remain three benchmark perform pe dddp processor much lower pe cdd processor highlight import develop ddd algorithm perform better distribut instruct larg number pe ipc bidirect ring investig unidirect natur ring caus drop dddp perform higher valu p also experi bidirect ring tabl tabul ipc valu obtain pe ddd p unidirect pe interconnect bidirect pe interconnect we simul bidirect ring configur pe perform dddp start drop data tabl indic bidirect ring littl improv perform dddp except mksim regist modest improv benchmark ipc obtain program unidirect ring bidirect ring gcc go li vortex tabl unidirect ring bidirect ring pe interconnect ipc crossbar result present far obtain ringtyp interconnect pe next investig decentr approach scale pe interconnect realist crossbar figur plot ipc valu obtain pe interconnect log pcycl crossbar comparison data figur show crossbar interconnect perform edd improv slightli benchmark dddp perform decreas compar ring interconnect lower valu p remain less higher valu p cdd perform crossbar consist lower perform ring fact contrari case ringtyp interconnect perform cdd realist crossbar decreas number pe increas overal result realist crossbar show perform dddp slightli better cdd benchmark regist traffic order get better understand ipc result seen far next analyz regist traffic occur decentr processor differ partit algorithm use figur plot distribut regist result base number pe travel benchmark distribut given edd cdd dddp partit algorithm curv edd indic signific amount regist traffic distant pe cdd ddd amount regist traffic pe steadili decreas pe distanc increas dddp traffic die almost zero regist valu travel pe explain use bidirect ring fetch much perform improv howev notic fraction regist valu travel hop affect perform dddp scheme one reason dddp scheme form dfg trace independ assign instruct trace pe without consid dfg subsequ trace need valu produc trace cdd regist traffic almost die almost zero regist valu travel pe regist instanc short lifetim explain perform cdd ringtyp interconnect continu increas number pe increas discuss conclus central idea behind decentr execut model split dynam execut window instruct amongst smaller parallel pe keep pe rel small circuitri need search forward newli produc valu greatli reduc thu reduc impact dynam schedul clock speed alloc depend instruct pe much possibl commun local exploit therebi minim global commun within processor examin three categori decentr execut model base type depend use basi instruct partit categori i execut unit depend base decentr edd ii control depend base decentr cdd iii data depend base decentr ddd detail perform result obtain ensembl wellknown benchmark lead us two import conclus first current use approach edddo provid good perform even instruct window split across moder number pe crossbar use connect pe second unidirect ring use interconnect pe dddp approach provid best ipc valu ipc number pe number pe gcc ipc edd dddp number pe number pe li number pe number pe vortex figur nop realist log p cycl crossbar pe interconnect moder number pe use due abil exploit local commun instruct larg number pe use perform dddp start drop cdd approach begin perform better inabl implement dddp algorithm judici partit complex data depend graph across larg number pe nevertheless perform implement dddp algorithm pe compar better perform implement cdd pe although result present paper help understand gener trend perform differ decentr approach studi topic complet mean varieti execut modelspecif techniqu both isalevel microarchitectur level need explor decentr execut model conclus verdict reach addit import investig extent factor valu predict instruct replic multipl flow control introduc addit wrinkl perform final would worthwhil explor possibl good blend cdd ddd model use dddp processor ie cluster dddp pe basic pe cdd processor processor attempt exploit data independ lowest level granular control independ higher level acknowledg work support us nation scienc foundat nsf research initi award ccr career award mip research grant ccr indebt review comment paper dave kaeli help get spec program compil mipsultrix platform r control flow predict treelik subgraph superscalar processor understand simpl processor perform limit the multiclust architectur reduc cycl time partit the multiscalar architectur regist traffic analysi streamlin interoper commun finegrain parallel processor pew decentr dynam schedul ilp process the alpha mhz outoford execut microprocessor exploit fine grain parallel combin hardwar softwar techniqu complexityeffect superscalar processor complex effect pew microarchitectur trace cach low latenc approach high bandwidth instruct fetch trace processor mul tiscalar processor multiscalar execut along singl flow control an effici algorithm exploit multipl arithmet unit the superthread archi tectur thread pipelin runtim data depend check control specul misc multipl instruct stream comput improv superscalar instruct dispatch issu exploit dynam code sequenc the mip r superscalar micro processor tr exploit finegrain parallel combin hardwar softwar techniqu misc regist traffic analysi streamlin interoper commun finegrain parallel processor multiscalar architectur multiscalar processor control flow predict treelik subgraph superscalar processor trace cach improv superscalar instruct dispatch issu exploit dynam code sequenc exploit instruct level parallel processor cach schedul group complexityeffect superscalar processor trace processor multiclust architectur understand simpl processorperform limit mip r superscalar microprocessor multiscalar execut along singl flow control alpha superthread architectur ctr d morano a khalafi d r kaeli a k uht realiz high ipc scalabl memorylat toler multipath microarchitectur acm sigarch comput architectur new v n march aneesh aggarw manoj franklin scalabl aspect instruct distribut algorithm cluster processor ieee transact parallel distribut system v n p octob ramadass nagarajan karthikeyan sankaralingam doug burger stephen w keckler design space evalu grid processor architectur proceed th annual acmiee intern symposium microarchitectur decemb austin texa joanmanuel parcerisa julio sahuquillo antonio gonzalez jose duato onchip interconnect instruct steer scheme cluster microarchitectur ieee transact parallel distribut system v n p februari rajeev balasubramonian cluster prefetch toler onchip wire delay cluster microarchitectur proceed th annual intern confer supercomput june juli malo franc balasubramonian sandhya dwarkada david h albonesi dynam manag communicationparallel tradeoff futur cluster processor acm sigarch comput architectur new v n may