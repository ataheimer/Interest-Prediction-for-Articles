t framework semant reason byzantin quorum system a defin class share variabl call tsvariabl includ implement variou byzantin quorum system construct malkhi reiter develop number definit theorem enabl us reason variabl abstractli use tool reduc problem lamport atom semant variabl simpler problem regular semant discuss fact problem remain stubbornli difficult solv type byzantin quorum system variabl notabl mask quorum system variabl show solvabl tradit approach asynchron environ final variabl defin notion pseudoregular pseudoatom semant state briefli similar reduct hold concept b introduct byzantin quorum system mra promis approach problem ecient implement byzantin faulttoler data servic sever variat approach baz mrwr mrw mra basic concept them data maintain simultan multipl site read write oper process subset call quorum site quorum dene way intersect two quorum contain enough server allow queri determin return accur uptod inform even presenc limit set arbitrarili faulti server furthermor subset server concern given oper system also remain avail spite limit server crash network partit final fact servic design toler outofd server eg part recent write quorum greatli simpli task recov failur long quorum server date other may brought back onlin without need recov recent state analyz semant share variabl implement quorum system quit chal leng heretofor analysi limit individu protocol framework reason semant quorum variabl famili exampl exist compel argument eect fulli serializ oper achiev type quorum system notabl dissemin quorum system mrb remain open problem other eg mask quorum system mra argument tell us discrep exist degre individu solut gener one primari contribut paper address need present set denit theorem allow us reason class share variabl implement quorum system includ variou byzantin quorum system call variabl tsvariabl import role timestamp protocol further give adapt version lamport formal denit concept safe regular atom semant lam concept tradit use describ semant byzantin quorum system use necessarili somewhat inform lamport formal denit theorem base assumpt variabl write never concurr one anoth adapt depend assumpt appli directli variabl interest fulli calcul proof style far know rst paper appli calcul proof quorum system variabl use formal prove atom result mrb gener import theorem tsvariabl writeback mechan use particular protocol fact reduc problem atom variabl semant tsvariabl simpler problem regular semant correct atom protocol mrb fact view corollari result cryptograph framework dissemin quorum system san writeback enforc regular semant followup show problem atom semant fulli serializ oper straightforwardli solv type quorum system remain unsolv other specic show signic subclass tsvariabl tradit approach protocol design alway danger fail read queri abort retri incorrect asynchron environ in fact mask quorum system mra atom semant prove stubbornli elus fall categori final propos brie discuss somewhat weaker notion pseudoregular pseudoatom semant system structur paper follow section dene tsvariabl number relat concept theorem includ adapt version lamport semant categori section use fact denit tsvariabl specic quorum system variabl simpli captur properti common variabl relev analysi theorem therefor also hold variabl type may share properti formal give fulli calcul proof regular readwrit protocol satis denit tsvariabl protocol use implement correspond atom readwrit protocol section show import class possibl protocol tradit approach protocol design alway result danger unresolv queri asynchron system dene weaker notion pseudoregular pseudoatom semant implement spite queri conclud section an exampl pseudoregular protocol mask quorum system includ appendix preliminari formal mask quorum system variabl tsvariabl order reason formal byzantin quorum system variabl class need abstract dene import featur variabl independ oper detail end section introduc concept tsvariabl begin dene gener concept timestamp variabl well number use function variabl denit timestamp variabl variabl type whose valu read updat conjunct associ timestamp timestamp drawn unbound total order set let rw set read write oper timestamp variabl given readwrit protocol let r rw set read let w rw set write follow function denit hold r b repres set real set boolean respect valu op rw op read valueop valu return read op write valueop valu written ts op rw op read tsop timestamp valu return read op write tsop timestamp assign valu written readsfrom r r w read result write w timestamp variabl dene equival to readsfrom purpos next two function postul realvalu global clock eg age univers millisecond provid absolut timescal system event system discuss asynchron individu process access global clock valu function use reason purpos start start time oper global time end end time oper global time purpos function give us conveni shorthand reason possibl concurr oper without specic actual nondeterminist asynchron environ order server process request essenti op concurr op wherea concurr may exist thu need resolv propos serial op op simplic therefor treat latter express denit concurr hereaft keep hypothet mean stipul start end function meet follow restrict tsvariabl variabl consist type memori address specic oper may perform it includ least read write refer specic variabl protocol read write activ variabl describ term run protocol denit run variabl v set oper perform v meet specic vs protocol call run rw complet if read oper r rw exist write oper rw readsfrom r w use separ term run consist oper perform variabl lifetim denit histori variabl run consist oper perform variabl lifetim chapter continu use label rw repres variabl run subscript use distinguish run context otherwis clear project run rw onto read oper denot r correspond project onto write oper denot w although research use term run execut interchang work nd use follow exampl lam give distinct technic mean specic execut associ run preced relat oper run ie denit execut variabl v pair hrw i rw run v preced relat irr exiv partial order oper rw dene two specic type execut special import work denit execut hrw said realtim consist denit execut hrw said writeord satis follow hw realtim consist liter denit would two oper concurr exist two server process dierent order howev readili seen endop startop everi server process op henc concurr concern readonli variabl context work word writeord execut write oper total order order consist partial order write oper real time denit run rw timestamp variabl v relat ts dene by op rww ts w tsop tsw w wr ts r tsw tsr r r b ts easi see ts irr exiv antisymmetr transit therefor irr exiv partial order note oper ident timestamp necessarili order ts dene tsvariabl follow denit tsvariabl timestamp variabl v that histori rw v hrw ts writeord note denit impli tsvariabl write uniqu identi timestamp thu given read one write timestamp therefor make follow observ provid simpli form denit readsfrom tsvariabl observ read oper r write oper w complet tsvariabl run formal data semant tsvariabl dene mean writeord execut safe regular atom denit safe regular base idea write variabl complet previou valu variabl read concept express lam term set write given read see denit writeord execut hrw i let w order list write oper rw dene furthermor given read oper r let index last write preced r ie startrg say r see w w where express relationship predic form thu valu read see might legitim return read ie valu recent complet write w valu concurr write denit dicult use directli fortun fact hrw writeord impli write seen r fall within wellden rang write earlier last in term write order preced r later last write concurr r lam dene concept singlewrit regist whose write oper thu necessarili serial relax requir dene version see term serializ rather serial write thu denit appli variabl multipl writer observ given read r let dene denit let then readi give denit safe regular atom execut safe execut inform term execut safe read see one write return valu write oper mean read concurr write return result most recent write accord serial dene writeord formal continu use w denot th write order dene say denit writeord regular execut writeord execut regular everi read return valu see ie result recent complet write concurr one formal denit execut hrw regular if writeord note regular execut necessarili safe tsvariabl denit use consequ timestamp given read least timestamp recent complet write formal ts regular calcul proof lemma given figur consist show arbitrari write preced given read timestamp less equal read note revers true possibl write fall within given rang without seen invis occur read r concurr w j figur proof lemma atom execut final dene atom execut execut behav though oper total order realtim consist way ie a total order b behav though perform serial order c order consist partial order oper real time denit execut hrw atom if total order rw note second third bullet denit impli atom execut also regular revers necessarili true safe regular atom variabl protocol properti set possibl histori see denit variabl implement protocol denit variabl protocol safe regular atom respect preced relat if possibl histori rw consist protocol execut hrw safe regular atom protocol safe regular atom safe regular atom respect preced relat variabl safe regular atom protocol safe regular atom observ denit specic second bullet each impli everi read regular atom execut read write thu possibl histori regular atom variabl complet run reduc atom semant problem previou section develop tool reason tsvariabl class share variabl includ implement variou type benign byzantin quorum system demonstr power tool use prove writeback mechan mrb appli dissemin quorum system use promot regular protocol atom one type tsvariabl specic show construct protocol tsvariabl atom given protocol regular tsvariabl v reg prove result atom accomplish mean follow step add new oper protocol v reg dene oper v atom term expand regular protocol show result v atom tsvariabl dene total order ts oper v atom extend ts ie op ts op b op ts use denit prove v atom atom respect ts dene atom protocol let v reg regular tsvariabl expand protocol v reg dene third oper addit read write writeback writeback oper similar write oper v reg except wherea write oper calcul timestamp writeback take timestamp argument thu writeback necessarili order ts stipul howev run rw exp expand protocol continu satisfi lemma well follow addit properti properti read oper r write oper w writeback oper b rw exp dene propos atom variabl protocol v atom follow read reg write reg read write protocol v reg val ts valu timestamp respect read reg oper word write oper v atom consist singl write oper v reg read oper v atom consist read oper v reg follow writeback result valu timestamp timestamp read atom write atom oper ident timestamp underli read reg write reg oper write oper v atom consist exactli one write oper v reg follow v atom also tsvariabl for clariti hereaft follow convent oper v atom repres boldfac oper v reg repres ital mask quorum system dissemin quorum system lemma properti implement writewriteback perform null oper server whose current timestamp variabl higher writewriteback thu monoton timestamp enforc server total order oper v atom prepar prove v atom atom specifi preced relat total order run rw atom v atom ts relat alreadi dene sucient order read oper share timestamp therefor propos dene extens ts ts use follow addit function map oper run rw total order set gtf arbitrari function follow three properti uniqu op op b rw gtf op exampl function map op rw pair timeop id id uniqu realvalu oper identi purpos gtf function act supplement timestamp dene serial oper sequenti ensur order impos gtf compat partial order oper realtim uniqu ensur function act tiebreak oper timestamp read promot ensur read oper higher gtf write might aect it dene ts follow given run rw atom v atom op op b rw atom op ts word ts lexicograph order pair tsop gtf op therefor total order virtu uniqu properti gtf fact ts gtf total order codomain consequ denit follow lemma corollari allow us use denit prove atom ts op b op ts corollari execut hrw atom ts v atom writeord ts ts r proof lemma corollari straightforward omit reason space prove v atom atom remain goal prove hrw atom ts atom run rw atom v atom thu prove v atom atom variabl theorem possibl histori rw atom v atom execut hrw atom ts atom alreadi shown ts total order rw atom remain oblig prove fact properti sucient allow us dene total order strictli term gtf howev gtf alon specifi behavior timestamp allow us reason directli behavior read via readsfrom function therefor use gtf indic abov figur proof readsfromr w ts ts hrw ts realtim consist proof appear figur latter case oblig prove that ts prove separ four possibl case two write write follow read read follow write two read simplic use convent r w with possibl subscript refer oper rw atom r w b denot correspond read write writeback oper expand regular protocol figur thu reduc problem atom semant tsvariabl regular semant next section show that latter problem readili solvabl type tsvariabl eg dissemin quorum system signic class tsvariabl includ unfortun mask quorum system regular semant cannot achiev asynchron environ use type approach heretofor standard end section brie discuss regular atom semant may approxim variabl regular pseudoregular semant except eg baz byzantin quorum system protocol design asynchron system restrict typic client may send write request quorum server time use choic timestamp ie write alway enabl order schedul impos read write request read write request process server order receiv accord convent adopt earlier ratom set read oper rwatom figur proof hrw ts realtim consist hereaft describ system characterist nonrestrict system although sever variat quorum system protocol current literatur share follow characterist server maintain singl version variabl imag given time read gener singl queri return non valu appropri dene voucher set server respond queri ident imag otherwis return valu timestamp in context signal abort oper never written process write request sucient high timestamp chang state variabl imag server process read request consist simpli return request data remaind discuss refer protocol classic quorum protocol specic smallest voucher set accept protocol size m refer classic mset quorum protocol section show that classic mset quorum protocol nonrestrict system may return respons given queri read r return valu exist write w readsfromr w thu histori contain read regular cf observ short theorem classic mset protocol regular nonrestrict system prove theorem show certain possibl server respons read queri system unresolv result read valu corollari theorem also show true even server maintain bound list variabl imag receiv denit begin number use denit let p classic mset quorum protocol let r w oper p r read oper w recent complet as determin timestamp write oper begin r let q r qw quorum r w respect perform let f q r set server return faulti respons read r denit inform set r set q r qw n f note write concurr r server q r qw overwritten sinc w inform set r voucher set r case server inform set return result write r see denit worst case server so therefor observ observ protocol p regular possibl set respons read inform set contain ident respons least one voucher set nonregular argument smallest inform set let q quorum system classic mset quorum protocol p let mininf size smallest possibl inform set q smallest inform set repres worstcas scenario success read suppos given histori rw p everi read oper concurr k write oper then theorem rw regular i proof arbitrari read oper r let partit inform set contain server return result recent complet write oper contain server return result th write concurr r nonrestrict system set may nonempti depend order concurr oper request receiv individu server prove if onli if portion theorem separ everi quorum system base wellden set possibl failur scenario valu wellden if dmininf k read r r contain voucher set extend pigeonhol principl state least one member partit contain least averag number element partit if suppos dmininf k r read oper inform set size mininf suppos r concurr exactli k write furthermor let r even partit ie partit everi set contain either ceil oor averag number element r contain voucher set r return impli rw regular sinc histori possibl system describ abov protocol regular sinc denit nonrestrict system allow arbitrari valu k have lemma classic mset protocol p regular nonrestrict system theorem follow directli result thu classic mset read protocol ie protocol requir agreement multipl server order determin correct result regular unrestrict system categori includ mask quorum system mra worth note ordinari quorum system dissemin quorum system classic mset protocol alreadi known regular appropri failur model benign byzantinelimitedbyauthenticateddata respect nonregular classic protocol bound imag list dene classic mset protocol bound imag list enhanc mset protocol follow characterist server maintain bound list imag receiv given variabl ie list last hsize imag written server again read return non valu receiv ident imag least b speci b even server respond everi queri entir list hsize imag remain possibl read queri unresolv nonrestrict system ie lemma classic mset quorum protocol bound imag list regular nonr strict system proof nonrestrict system given read oper may concurr unbound number write suppos read oper r concurr hsize write oper hsize size bound imag list size inform set r s server may receiv rst hsizei write request receiv request r imag list contain imag rst hsize write imag list contain imag next hsize write which displac rst hsize list bound forth respons queri r therefor receiv hsize dierent variabl imag exactli one server therefor unabl resolv queri ignor abort pseudoregular semant certain applic howev may abl toler occasion abort read applic worthwhil reason somewhat weaker version regular and atom semant variabl refer pseudoregular respect pseudoatom semant dene concept term variabl pseudohistori follow denit pseudohistori variabl run consist write variabl histori read return ie set nonabort oper dene new semant concept follow denit variabl protocol pseudoregular pseudoatom respect preced relat if possibl pseudohistori rw consist protocol execut hrw regular atom protocol pseudoregular pseudoatom pseudoregular pseudoatom respect preced relat reduc pseudoatom pseudoregular suppos pseudoregular protocol tsvariabl an exampl protocol mask quorum system appear appendix paper initi sketch amprw possibl pseudohistori rw execut hrw ts satis denit rw complet run therefor argument section appli pseudohistori well writeback mechan demonstr thu use produc pseudoatom protocol pseudoregular one conclus paper present set denit theorem allow us reason semant share variabl implement variou type quorum system includ oftenproblemat byzantin quorum system framework allow us develop theorem variabl which call tsvariabl class without refer detail individu implement also use result tool prove regular protocol tsvariabl straightforwardli enhanc atom protocol subsidiari result show signic subclass tsvariabl includ mask quorum system tradit design approach cannot produc regular protocol asynchron environ variabl introduc idea pseudoregular pseudoatom semant similar origin concept except allow occason abort oper acknowledg would like express sincer thank dahlia malkhi michael reiter numer thoughtprovok discuss jennif welch hyunyoung lee pete manolio phoeb weidmann help comment earlier draft paper r dynam byzantin quorum system synchron byzantin quorum system atom multiread regist interprocess commun quorum system byzantin quorum system secur scalabl replic phalanx optim byzantin quorum system probabilist quorum system extens uniti methodolog elus atom regist tr dynam byzantin quorum system secur scalabl replic phalanx ctr ittai abraham gregori chockler idit keidar dahlia malkhi waitfre regular storag byzantin compon inform process letter v n p januari