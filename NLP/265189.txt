t simpl algorithm nearest neighbor search high dimens a abstractth problem find closest point highdimension space common pattern recognit unfortun complex exist search algorithm kd tree rtree grow exponenti dimens make impract dimension nearli applic closest point interest lie within userspecifi distanc epsilon present simpl practic algorithm effici search nearest neighbor within euclidean distanc epsilon use project search combin novel data structur dramat improv perform high dimens complex analysi present help automat determin epsilon structur problem comprehens set benchmark clearli show superior propos algorithm varieti structur unstructur search problem object recognit demonstr exampl applic simplic algorithm make possibl construct inexpens hardwar search engin time faster softwar equival c implement algorithm avail upon request searchcscolumbiaeducav b introduct search nearest neighbor continu prove import problem mani field scienc engin nearest neighbor problem multipl dimens state follow given set n point novel queri point q ddimension space find point set distanc q lesser than equal to distanc q point set varieti search algorithm advanc sinc knuth first state postoffic problem then need new algorithm answer exist techniqu perform poorli high dimension space complex techniqu grow exponenti dimension d high dimension mean when say high dimension occur commonli applic use eigenspac base appear match realtim object recognit track inspect featur detect moreov techniqu requir nearest neighbor search perform use euclidean distanc or l norm hard problem especi dimension high high dimension also observ visual correspond problem motion estim mpeg code d estim binocular stereo d optic flow comput structur motion also d paper propos simpl algorithm effici search nearest neighbor within distanc ffl high dimens shall see complex propos algorithm small ffl grow slowli d algorithm success tackl nearest neighbor problem origin state find point within distanc ffl novel point properti suffici pattern recognit problem and problem state abov match declar high confid novel point suffici close train point occasion possibl assum ffl known suggest method automat choos ffl briefli outlin propos algorithm algorithm base project search paradigm first use friedman friedman simpl techniqu work follow preprocess step dimension train point order differ way individu sort coordi nate sort coordin array thought d axi entir dimension space collaps or project onto it given novel point q nearest neighbor found follow small offset ffl subtract ad qs coordin obtain two valu two binari search perform sort array locat posit valu axi minimum number point posit chosen final point posit chosen axi exhaust search obtain closest point complex techniqu roughli ondffl clearli ineffici high d simpl project search improv upon yunck util precomput data structur maintain map sort unsort origin coordin array addit map indic array n element use element indic array henceforth call indic correspond point begin search indic initi number befor small offset ffl subtract ad novel point qs coordin obtain two valu two binari search perform sort array locat posit valu map sort unsort array use find point correspond coordin valu indic correspond point binari shift left one bit entir process repeat dimens end point whose indic valu must lie within ffl hypercub exhaust search perform hypercub point find nearest neighbor data structur yunck abl find point within hypercub use primarili integ oper howev total number machin oper requir in teger float point find point within hypercub similar friedman algorithm roughli ondffl due fact modern cpu significantli penal float point oper improv slight benchmark later section propos data structur significantli reduc total number machin oper requir locat point within hypercub roughli onffl moreov data structur facilit simpl hardwar implement result increas perform two order magnitud previou work search algorithm divid follow broad categori a exhaust search b hash index c static space partit d dynam space partit random algorithm algorithm describ paper fall categori d algorithm categor work vector space work metric space categori bd fall former categori a fall later metric space search techniqu use possibl somehow comput distanc measur sampl point piec data space point resid lack explicit coordin structur paper focu vector space techniqu detail discuss search metric space refer exhaust search term impli involv comput distanc novel point everi point set find point minimum distanc approach clearli ineffici complex ond hash index fastest search techniqu run constant time howev space requir store index tabl increas exponenti d henc hybrid scheme hash high dimension space low dimension space index low dimension space propos dimension reduct call geometr hash problem that increas dimension becom difficult construct hash function distribut data uniformli across entir hash tabl index ad drawback aris fact hash inher partit space bin two point adjac bin closer third point within bin search algorithm use hash tabl index correctli find point adjac bin henc hash index realli effect novel point exactli equal one databas point space partit techniqu led eleg solut multidimension search problem method particular theoret signific divid search space polygon voronoi polygon geometr construct obtain intersect perpendicular bisector adjac point d search space voronoi polygon allow nearest neighbor found olog n oper where n number point databas unfortun cost construct store voronoi diagram grow exponenti number dimens detail found anoth algorithm interest d binari search gener dimens run olog n time requir storag on make impract n perhap wide use algorithm search multipl dimens static space partit techniqu base k dimension binari search tree call kd tree kd tree data structur partit space use hyperplan place perpendicular coordin axe partit arrang hierarch form tree simplest form kd tree construct follow point databas chosen root node point lie one side hyperplan pass root node ad left child point side ad right child process appli recurs left right children small number point remain result tree hierarch arrang hyperplan induc partit space hyperrectangular region term bucket contain small number point kd tree use search nearest neighbor follow k coordin novel point use descend tree find bucket contain it exhaust search perform determin closest point within bucket size queri hyperspher set distanc closest point inform store parent node use determin hyperspher intersect bucket doe bucket exhaust search size hyperspher revis necessari fix d certain assumpt underli data kd tree requir onlog n oper construct olog n oper search kd tree extrem versatil effici use low dimens howev perform degrad exponenti increas dimension becaus high dimens queri hyperspher tend intersect mani adjac bucket lead dramat increas number point examin kd tree dynam data structur mean data ad delet small cost impact ad delet data search perform howev quit unpredict relat amount imbal new data caus tree high imbal although appear contradictori previou statement claim olog n complex made assum fix vari n exact relationship complex yet establish observ us mani other roughli exponenti gener mean slower search number improv basic algorithm suggest friedman recommend partit hyperplan chosen pass median point place perpendicular coordin axi along whose direct spread point maximum sproull suggest use truncat distanc comput increas effici high dimens variant kd tree use address specif search problem rtree also space partit structur unlik kd tree partit element hyperplan hyperrectangular region hierarch rectangular structur use applic search imag content need locat closest manifold or cluster novel manifold or cluster rtree also address problem involv implement kd tree larg disk base databas rtree also dynam data structur unlik kd tree search perform affect addit delet data number variant rtree improv basic techniqu pack rtree although rtree use implement sophist queri manag larg databas perform nearest neighbor point search high dimens similar kd tree complex grow exponenti d static space partit techniqu propos branch bound none significantli improv perform high dimens clarkson describ random algorithm find closest point dimension space olog n oper use rpo random post howev time taken construct rpo tree on ddeffl space requir store also on ddeffl make impract number point n larg algorithm search slice illustr propos high dimension search algorithm use simpl exampl d space shown figur call set point wish search closest point point set then goal find point point set closest e e e e xe xe ze ze z figur propos algorithm effici find point insid cube size ffl around novel queri point q closest point found perform exhaust search within cube use euclidean distanc metric novel queri point qx within distanc ffl approach first find point lie insid cube see figur side ffl center q sinc ffl typic small number point insid cube also small closest point found perform exhaust search point point insid cube know point within ffl point within cube found follow first find point sandwich pair parallel plane x x see figur add list call candid list plane perpendicular first axi coordin frame locat either side point q distanc ffl next trim candid list discard point also sandwich parallel pair plane perpendicular x x locat either side q distanc ffl procedur repeat plane z z end which candid list contain point within cube size ffl center q sinc number point final trim list typic small cost exhaust search neglig major comput cost techniqu therefor construct trim candid list data structur candid list construct trim done varieti way here propos method use simpl preconstruct data structur along d binari search effici find point sandwich pair parallel hyperplan data structur construct raw point set depict figur assum point set static henc given point set data structur need construct onc point set store collect d array j th array contain j th coordin point thu point set coordin point lie along row illustr dot line figur suppos novel point q coordin recal order construct candid list need find point point set lie pair parallel hyperplan separ distanc ffl perpendicular first coordin axi center is need locat point whose first coordin lie limit ffl done help two binari search one limit coordin array sort beforehand end sort coordin array point set independ obtain order set unfortun sort raw coordin leav us inform regard point array order set correspond given point point set vice versa purpos maintain two map backward map map coordin order set correspond coordin point set and convers forward map map point point set point order set notic map simpl integ array p dn point set odn order set f dn bdn forward backward map respect use backward map find correspond point point set shown dark shade area add appropri point candid list thi construct candid list complet next trim candid list iter point set order set dimens point forward map forward map backward map input e e e e e e figur data structur use construct trim candid list point set correspond raw list data point order set coordin sort forward backward map enabl effici correspond point order set follow iter k check everi point candid list use forward map see k th coordin lie within limit limit also obtain binari search point k th coordin lie outsid rang shown light grey discard list end final iter point remain candid list one lie insid hypercub side ffl center q discuss propos construct candid list use first dimens perform list trim use dimens d order wish emphas oper done order still yield desir result next section shall see possibl determin optim order cost construct trim list minim import note oper use trim list integ comparison memori lookup moreov use propos data structur limit use float point oper binari search need find row indic correspond hyperplan featur critic effici propos algorithm compar compet one facilit simpl softwar implement also permit implement hardwar search engin previous state algorithm need suppli appropri ffl prior search possibl larg class problem in pattern recognit instanc match declar novel point q suffici close databas point reason assum ffl given priori howev choic ffl prove problemat case one solut set ffl larg might serious impact perform hand small ffl could result hypercub empti determin optim ffl given problem exactli ffl affect perform algorithm seek answer question follow section complex section attempt analyz comput complex data structur stor age construct nearest neighbor search saw previou section construct data structur essenti sort array size n done odn log n time addit storag necessari hold forward bacward map requir space ond nearest neighbor search major comput cost process candid list construct trim number point initi ad candid list depend ffl also distribut data point set locat novel point q henc facilit analysi structur problem assum wide use distribut point set follow notat use random variabl denot uppercas letter instanc q vector bold as q suffix use denot individu element vector instanc q k k th element vector q probabl densiti written f q q q continu e axi c figur project point set novel point onto one dimens search space number point insid bin b given binomi distribut figur show novel point q set n point d space drawn known distribut recal candid list initi point sandwich hyperplan pair first dimens gener c th dimens correspond point insid bin b figur entir point set q project c th coordin axi boundari bin b hyperplan intersect axi c c number point bin b order determin averag number point ad candid list must comput c distanc q c point candid list distribut z c may calcul distribut point set defin p c probabl project point point set within distanc ffl q c is possibl write express densiti c term p c irrespect distribut point c binomi distribut equival elementari probabl problem given success a point within bin b occur probabl p c number success occur n independ trial point binomi distribut express averag number point bin b em c j q c easili determin note em c j q c random variabl depend c locat q distribut q known expect number point bin comput perform one lookup backward map everi point hyperplan pair main comput effort equat directli estim cost candid list construct next deriv express total number point remain candid list trim dimens sequenc c recal iter k perform forward map lookup everi point candid list see lie c k th hyperplan pair mani point candid list lie hyperplan pair again equat use time replac n number point candid list rather entir point set assum point set independ distribut henc n k total number point candid list iter k defin n total cost construct trim candid list trim need perform one forward map lookup two integ comparison henc assign one cost unit oper express n written aid equat which averag equat suggest distribut f q q f z z known comput averag cost en term ffl next section shall examin two case particular interest a z uniformli distribut b z normal distribut note left cost exhaust search point within final hypercub reason cost exhaust search depend distanc metric use cost howev small neglect case n ae d need consid ad equat end section make observ mention earlier advantag examin dimens specif order order expand summat product factor term equat rewritten immedi valu n minimum p c word chosen number sandwich point hyperplan pair ascend order easili ensur simpli sort number sandwich point note number obtain time od simpli take differ indic order set return pair binarysearch further cost sort number od log d heapsort cost neglig problem reason dimension uniformli distribut point set look specif case point set uniformli distribut x point point set assum independ uniform distribut extent l coordin l gammal x l eecost e d eeecost n n a b figur averag cost algorithm independ grow linearli small ffl point set case assum uniformli distribut extent l a point set contain point d d d d d space b point set d contain point use equat fact z express densiti z c written f zc jqc p c written gammaffl f zc jqc zdz gammaffl dz l substitut equat equat consid upper bound worst case get l l l l l l l neglect constant write d cost e n cost a b figur averag cost algorithm independ grow linearli small ffl point set case assum normal distribut varianc oe a point set contain point d d d d d space b point set d contain point small ffl observ ffl cost independ d figur equat plot ffl differ figur a differ figur observ long ffl cost vari littl linearli proport n also mean keep ffl small crucial perform algorithm shall see later ffl fact kept small mani problem henc even though cost algorithm grow linearli n ffl small enough mani real problem better pay price linear rather exponenti depend d normal distribut point set next look case point set normal distribut x point point set assum independ normal distribut varianc oe coordin f xc x p oe exp befor use z express densiti z c obtain get f zc jqc oe p c written gammaffl f zc jqc zdz oe oe p express substitut equat evalu numer estim cost given q figur show cost function ffl uniform distribut observ ffl cost nearli independ grow linearli n varieti pattern classif problem data take form individu gaussian cluster mixtur gaussian cluster case result serv basi complex analysi determin ffl appar analysi preced section cost propos algorithm depend critic ffl set ffl high result huge increas cost d set ffl small may result empti candid list although freedom choos ffl may attract applic may prove nonintuit hard other case automat determin ffl closest point found high certainti distribut point set known can first review well known fact l p norm figur illustr norm select valu p point surfac equidist in sens respect norm central point formal l p distanc two vector b defin distanc metric also known minkowskip metric relev determin ffl l norm occur frequent pattern recognit problem unfortun candid list trim algorithm find point within l figur illustr variou norm also known minkowski pmetric point surfac equidist central point l metric bound l p p within l ie hypercub sinc l bound l one naiv perform exhaust search insid l howev seen figur a alway correctli find closest point notic p closer q p although exhaust search within cube incorrectli identifi closest simpl solut problem perform exhaust search impos addit constraint point within l radiu ffl consid see figur b thi howev increas possibl hyperspher empti exampl instanc p discard would abl find point clearli then need consid fact automat method determin ffl describ next propos two method automat determin ffl first comput radiu smallest hyperspher contain least one point specifi probabl ffl set radiu algorithm proce find point within circumscrib hypercub side ffl method howev effici high dimens reason follow increas dimension differ hyperspher hypercub volum becom great hypercub corner contain far point inscrib hyperspher consequ extra effort necessari perform l distanc comput corner point eventu wast rather find circumscrib hypercub second method simpli find length side smallest hypercub contain least one point specifi probabl ffl set half length side lead problem describ earlier that search point outsid hypercub closer l sens point insid shall describ method detail see remedi e r e e a b figur exhaust search within hypercub may yield incorrect result a p closer exhaust search within cube incorrectli identifi closest point b remedi impos constraint exhaust search consid point within l distanc ffl q given length side hypercub ffl problem smallest hyperspher method let us see analyt comput minimum size hyperspher given want abl guarante non empti probabl p let radiu hyperspher ffl hs let total number point within hyperspher let q novel point defin kzk l distanc q point point set again binomi distribut densiti now probabl p least one point hyperspher simpli e hs r a b figur ffl comput use two method a find radiu smallest hyperspher contain least one point high probabl search perform set ffl radiu constrain exhaust search within ffl b find size smallest hypercub contain least one point high probabl search ffl set half length side addit search perform area mark bold equat suggest know q densiti f z jq z probabl p solv ffl hs exampl consid case point set uniformli distribut densiti given equat cumul distribut function kzk uniform distribut integr within hyperspher simpli volum thu l dgammad substitut equat solv ffl hs get l dgammad use equat ffl hs plot probabl two case figur a fix differ valu n fix figur b n fix differ valu fix figur illustr import properti larg chang probabl p result small probabl successepsilon d probabl success epsilon n n a b figur radiu ffl necessari find point insid hyperspher vari littl probabl mean ffl set knee probabl close uniti point set case uniformli distribut extent l a point set contain point dimension space b point d contain point chang ffl hs suggest ffl hs set right hand knee curv probabl close uniti word easi guarante least one point within hyperspher search perform set length side circumscrib hypercub ffl hs impos addit constraint exhaust search point within l distanc ffl hs consid smallest hypercub method befor attempt analyt comput size smallest hypercub given want abl guarante non empti probabl p let number point within hypercub size ffl hc defin z c distanc c th coordin point set point novel point q again binomi distribut densiti k kc now probabl p least one point hypercub simpli probabl success epsilon d probabl success epsilon n n a b figur valu ffl necessari find point insid hypercub vari littl probabl mean ffl set knee probabl close uniti point set case uniformli distribut extent l a point set contain point dimension space b point set d contain point n again equat suggest know q densiti f zc jqc z probabl p solv ffl hc specif case point set uniformli distribut express ffl hc obtain close form follow let densiti uniform distribut given equat use equat get l substitut equat solv ffl hc get li use equat ffl hc plot probabl two case figur a fix differ valu n fix figur b n fix differ valu fix similar graph obtain case hyperspher again ffl hc set right hand knee curv probabl close uniti notic valu ffl hc requir hypercub much smaller requir hyperspher especi high d precis reason prefer second smallest hypercub method recal suffici simpli search closest point within hypercub point outsid closer point insid remedi problem suggest follow techniqu first exhaust search perform comput distanc closest point within hypercub call distanc r figur b closest point within hypercub distanc r q clearli closer point exist within hyperspher radiu r sinc part hyperspher lie outsid origin hypercub also search hyperrectangular region shown bold by perform addit list trim perform exhaust search hyperrectangl impos constraint point consid less distanc r q figur b p present one hyperrectangular region happen closer q p although method complic give excel perform spars popul high dimension space such high dimension uniform distribut conclud wish emphas hypercub hyperspher method use interchang guarante find closest point within ffl howev choic one method use depend dimension space local densiti point dens popul low dimension space hyperspher method perform quit well search hyperrectangular region worth addit overhead spars popul high dimension space effort need exhaust search huge circumscrib hypercub far overhead search hyperrectangular region is howev difficult analyt predict one method suit particular class data henc encourag reader implement method use one perform best final although discuss relev l norm equival analysi easili perform norm benchmark perform extens set benchmark propos algorithm look two repres class search problem may benefit algorithm first class data statist structur case instanc point uniformli normal distribut second class problem statist un structur instanc point lie high dimension multivari manifold difficult say anyth distribut section present result benchmark perform statist structur data benchmark statist unstructur data refer reader section test two commonli occur distribut normal uniform propos algorithm compar kd tree exhaust search algorithm algorithm includ benchmark yield compar perform first set benchmark two normal distribut point set contain point varianc use test per search execut time anoth set point shall call test set construct test set contain point also normal distribut varianc algorithm execut time calcul averag total time requir perform nearest neighbor search point test set determin ffl use smallest hypercub method describ section sinc point set normal distribut cannot use close form solut ffl howev numer comput follow substitut equat equat get oe oe pn set p the probabl least one point hypercub oe the varianc comput ffl search point q use fast simpl bisect technqiu figur a b show averag execut time per search point set contain point respect execut time includ time taken search comput ffl use equat time taken addit search necessari point found within hypercub although point found within hypercub increment ffl search again time sec dimens propos algorithm kd tree exhaust time sec dimens propos algorithm kd tree exhaust search a b time sec dimens propos algorithm kd tree exhaust time sec dimens propos algorithm kd tree exhaust search c d figur averag execut time propos algorithm benchmark statist structur problem a point set normal distribut varianc contain point b point set normal distribut varianc contain point propos algorithm clearli faster high d c point set uniformli distribut extent contain point d point set uniformli distribut extent contain point propos algorithm perform well uniform distribut due extrem spars point set high d ffl vari q valu ffl sampl point follow valu ffl point correspond respect point valu ffl correspond respect valu ffl point correspond respect point valu ffl correspond propos algorithm faster kd tree algorithm figur a figur b propos algorithm faster also notic kd tree algorithm actual run slower exhaust search reason observ follow high dimens space spars popul radiu queri hyperspher larg consequ hyperspher intersect almost bucket thu larg number point examin thi along addit overhead travers tree structur make ineffici search spars high dimension space second set benchmark use uniformli distribut point set contain point extent test set contain point also uniformli distribut extent execut time per search calcul averag total time requir perform closest point search point test set befor determin ffl smallest hypercub method describ section use recal uniformli distribut point set ffl comput close form use equat figur c d show execut time point set contain point respect valu ffl correspond tive valu ffl correspond respect uniform distribut propos algorithm perform well although appear slightli faster kd tree exhaust search algorithm reason high dimension space spars popul henc requir ffl quit larg result algorithm end examin almost point therebi approach exhaust search process repeat till point found exampl applic appear match demonstr two applic fast effici high dimension search techniqu desir first real time object recognit requir closest point found among point d space second closest point requir found point lie multivari high dimension manifold problem exampl statist unstructur data let us briefli review object recognit techniqu muras nayar object recognit perform two phase appear learn phase appear recognit phase learn phase imag hundr object pose captur imag use comput high dimension subspac call eigenspac imag project eigenspac obtain discret high dimension point smooth curv interpol point belong object way object get curv or univari manifold parameter pose manifold second phase object recognit easi imag object project eigenspac obtain singl point manifold closest point identifi object closest point manifold identifi pose note manifold continu order find closest point manifold need fine sampl obtain discret close space point benchmark use columbia object imag librari along slam softwar packag comput univari manifold d eigenspac manifold correspond appear model object object shown figur a manifold sampl equal space point obtain discret point d space imposs manual captur larg number object imag would need larg test set henc automat gener test set point sampl manifold random locat roughli equival captur actual imag but without imag sensor nois len blur perspect project effect import simul effect caus project point shift away manifold henc substanti affect perform nearest neighbor search algorithm instanc kd tree larg queri hyperspher would result larg increas number adjac bucket may search algorithm time sec propos algorithm kd tree exhaust search project search b figur propos algorithm use recogn estim pose hundr object use columbia object imag librari a twenti hundr object shown point set consist point object d eigenspac b averag execut time per search compar algorithm unfortun difficult relat imag nois perspect project distort effect locat point eigenspac henc use simpl model add uniformli distribut nois extent coordin point test set found approxim realworld data determin set gave us good recognit accuraci figur b show time taken per search differ algorithm search time calcul averag total time taken perform closest point search use point test set seen propos algorithm outperform techniqu ffl set predetermin valu point found within hyperspher time object recognit use search closest point within ffl provid us mean reject point far manifold most like object databas next examin anoth case data statist unstructur here closest point requir found point lie singl smooth multivari high dimension manifold manifold appear frequent appear match problem visual track visual inspect parametr featur detect object recognit manifold represent visual appear given novel appear point match involv find point manifold closest point given manifold continu pose appear match nearest neighbor problem befor sampl manifold dens obtain discret close space point trivari manifold use benchmark obtain visual track experi conduct nayar et al first benchmark manifold sampl obtain discret point second benchmark sampl obtain point case test set randomli sampl manifold point use explain previous nois with extent ad coordin test set execut time per search averag test set point point set determin gave good recognit accuraci figur a show algorithm two order magnitud faster algorithm notic exponenti behaviour rtree algorithm also notic yunck algorithm extent eigenspac maximum nois amplitud henc extent eigenspac time sec dimens propos algorithm rtree exhaust search project search yunck search a time sec dimens propos algorithm kd tree time sec dimens propos algorithm kd tree b c figur averag execut time propos algorithm benchmark unstructur problem point set construct sampl high dimension trivari manifold a manifold sampl obtain point propos algorithm two order magnitud faster algorithm b manifold sampl obtain point c manifold sampl obtain point kd tree algorithm slightli faster low dimens degrad rapidli increas dimens slightli faster friedman differ due use integ oper could benchmark yunck algorithm till due use bit word indic array figur b seen propos algorithm faster kd tree d figur c propos algorithm faster hardwar architectur major advantag algorithm simplic recal main comput perform algorithm simpl integ map lookup backward forward map two integ comparison to see point lie within hyperplan boundari cons quentli possibl implement algorithm hardwar use offtheshelf inexpens compon hard envis case competit techniqu kd tree rtree given difficulti involv construct parallel stack machin propos architectur shown figur field programm gate array act algorithm state machin control perform io cpu dynam ram dram hold forward backward map download cpu initi cpu initi search perform binari search obtain hyperplan boundari pass search engin held static ram sram fpga independ begin candid list construct trim candid look backward map forward map integ compar return true candid within rang els discard trim candid point go dimens final point list in form point set indic return cpu exhaust search andor process note although describ architectur singl compar number ad run parallel near linear perform scale number compar search engin trim candid list cpu cours free carri task parallel begun implement propos architectur result intend small lowcost scsi base modul plug standard workstat pc estim modul result fold speedup optim softwar implement algorithm control unit backward map forward map cpu compar within limit flag lower limit upper limit control bu fpgapld figur architectur inexpens hardwar search engin base propos algorithm discuss k nearest neighbor search section saw possibl determin minimum valu ffl necessari ensur least one point found within hypercub hyperspher high probabl possibl extend notion ensur least k point found high certainti recal probabl exist least one point hyperspher radiu ffl given equat defin p k probabl least k point within hyperspher write p k express substitut equat and given p k numer solv ffl hs similarli substitut equat comput minimum valu ffl hc hypercub dynam point insert delet current algorithm use float point array store order set integ array store backward forward map result possibl effici insert delet point search space limit easili overcom order set store array set binari search tree bst each bst correspond array order set similarli forward map replac singl link list backward map done away complet indic made resid within node bst although bst would allow effici insert delet nearest neighbor search would longer effici integ array also order get maximum effici bst would well balanc see discuss balanc techniqu search partial data mani time requir search nearest neighbor absenc complet data instanc consid applic requir featur extract imag match featur featur space now possibl extract featur match done partial trivial adapt algorithm situat trim list need look dimens data hard envis case kd tree exampl space partit hyperplan particular dimens so travers tree locat bucket contain queri point possibl choos travers direct node data correspond partit dimens node miss queri point acknowledg wish thank simon baker dinkar bhat detail comment critic suggest help greatli improv paper research conduct center research intellig system depart comput scienc columbia univers support part arpa contract dacac dodonr muri grant n nsf nation young investig award r design analysi comput algorithm nearest neighbor search applic diagram survey fundament geometr data struc ture multidimension binari search tree use associ search multidimension binari search tree databas applic data structur rang search optim expectedtim algorithm closest point problem multidimension index recogn visual shape random algorithm closestpoint queri multidimension search problem algorithm combinatori geometri fast nearestneighbor search dissimilar space algorithm find nearest neigh bor algorithm find best match logarithm expect time branch bound algorithm comput knearest neighbor effect way repres quadtre dynam index structur spatial search fundament data structur in complex ddimension voronoi diagram sort search new version nearestneighbor approxim elimin search algorithm aesa linear preprocess time memori requir visual learn recognit object appear anc parametr featur detect slam softwar librari appear match digit pictur similar search larg imag databas comput geometri introduct numer recip c direct spatial search pictori databas use pack rtree refin nearestneighbor search kdimension tree reduc overhead aesa metricspac nearest neighbour search algorithm data structur algorithm nearest neighbor search gener metric space techniqu identifi nearest neighbor tr ctr jame mcname fast nearestneighbor algorithm base princip axi search tree ieee transact pattern analysi machin intellig v n p septemb david w patterson mykola galushka niall rooney characteris novel index techniqu casebas reason artifici intellig review v n p june philip quick david capson subspac posit measur presenc occlus pattern recognit letter v n p decemb t freeman thoui r jone egon c pasztor examplebas superresolut ieee comput graphic applic v n p march bin zhang sargur n srihari fast knearest neighbor classif use clusterbas tree ieee transact pattern analysi machin intellig v n p april jim z c lai yich liaw juli liu fast knearestneighbor search base project triangular inequ pattern recognit v n p februari lin liang ce liu yingq xu bain guo heungyeung shum realtim textur synthesi patchbas sampl acm transact graphic tog v n p juli fast textur synthesi use treestructur vector quantiz proceed th annual confer comput graphic interact techniqu p juli yongsheng chen yipe hung tingfang yen chioushann fuh fast versatil algorithm nearest neighbor search base lower bound tree pattern recognit v n p februari mineichi kudo naoto masuyama jun toyama masaru shimbo simpl termin condit knearest neighbor method pattern recognit letter v n p june john t favata offlin gener handwritten word recognit use approxim beam match algorithm ieee transact pattern analysi machin intellig v n p septemb edgar chvez gonzalo navarro compact space decomposit effect metric index pattern recognit letter v n p juli aaron hertzmann steven m seitz examplebas photometr stereo shape reconstruct gener vari brdf ieee transact pattern analysi machin intellig v n p august o stahlhut extend natur textur multiscal synthesi graphic model v n p novemb gonzalo navarro search metric space spatial approxim vldb journal intern journal larg data base v n p august edgar chvez jo l marroqun gonzalo navarro fix queri array fast econom data structur proxim search multimedia tool applic v n p june jinxiang chai jing xiao jessica hodgin visionbas control facial anim proceed acm siggrapheurograph symposium comput anim juli san diego california edgar chvez gonzalo navarro ricardo baezay jo lui marroqun search metric space acm comput survey csur v n p septemb huzefa neemuchwala alfr hero paul carson imag match use alphaentropi measur entrop graph signal process v n p februari gisli r hjaltason hanan samet indexdriven similar search metric space acm transact databas system tod v n p decemb richard szeliski imag align stitch tutori foundat trend comput graphic vision v n p januari