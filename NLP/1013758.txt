t realiz model blllike languag a give realiz model girardscedrovscott bound linear logic bll give new proof numer function represent system polytim analysi natur justifi design bll syntax suggest extens b introduct bound linear logic bll earli attempt provid intrins notion polynomi time comput within logic system is aim mere express polynomi time comput term provabl certain restrict formula rather provid type logic system comput via cutelimin proof normal inher polytim sinc appear paper sever dierent type function system analyz ptime comput appear literatur deeper foundat purpos mention girard light linear logic lll major improv syntax bll elimin explicit polynomi io sizebound expens introduc subtl type distinct moreov captur extension class polytim function appear less flexibl bll term express concret algorithm furthermor bll merit viewpoint comput scienc bll natur polymorphicallytyp function languag bound storag repres bound call memori main theorem numbertheoret function represent bll polytim proof result use sophist techniqu proof theori linear logic notabl detail analysi normal proof net box normal strategi special kind inspir girard geometri interact program paper give direct semant proof main result involv notion reduct term rewrit cutelimin rather assign polytim algorithm proof composit syntaxdirect manner use research partial support epsrc grant no grn research support oper grant natur scienc engin research council canada realiz relat algorithm intend settheoret mean proof themselv present form concret categor model bll interpret bllformula set addit structur proof function wit polytim algorithm oper addit structur time analysi give natur interpret bll syntax justifi fine point design might suggest extens exampl analysi encompass ane variant bll proof construct sens formal extension version calculu induct construct provid new compil method turn bll proof equival polytim algorithm cours practic one would use formal rather deriv compil algorithm hand directli proof interpret bear intrigu relationship approach base finit model theori name polytim function obtain form goerdt gurevich total global function take one extra argument interpret bound size actual input howev unlik goerdt system finit model interpret godel system henc successor function inject bll support usual semant includ peano axiom thu seen meaningpreserv annot standard function program hope relationship use transfer goerdt character logspac pspace similar set bound linear logic introduc theori bll bound linear logic first propos resourc polynomi resourc polynomi finit sum product binomi coecient ie p jq q ip x ij where fix j variabl x ij distinct n ij nonneg integ constant resourc polynomi close sum product composit given polynomi p q write p q denot q p resourc polynomi p p syntax bll given follow gener syntax atom formula form p p n secondord variabl given finit posit ariti n list resourc polynomi length n assum infinit mani secondord variabl finit ariti formula a denot second order univers quantif xp bound storag p resourc polynomi contain x x bound xp a posit neg occurr resourc term formula defin induct usual xp a p occur neg p subterm occur posit atom formula p connect monoton connect antiton first monoton second argument exampl p occur posit let free resourc variabl x x n occur posit b second order abstract term say a denot result substitut ie replac atom p p n given type write dier choic resourc polynomi i posit occurr resourc polynomi p a homolog p p p ii neg occurr resourc polynomi p a homolog p p p finit multiset formula i true componentwis proof given gentzen sequent follow bll sequent sequent form b finit possibl empti multiset formula order avoid mention permut rule formula consid index order follow p q w possibl subscript rang resourc polynomi axiom wast resourc special case cut b b c r b a a provid free derelict ax b contract a s storag formula left indic form remark rule bll written way given proof sequent given simpl chang resourc paramet yield proof without alter structur proof note wast w rule associ storag without loss gener assum gener case recov cut appropri axiom paper interest cut elimin therefor adopt simplif also introduc unit for denot i ordinari rule follow b data type talli natur number size x is moreov proof repres zero successor resp see data type dyadic list size x is proof n repres zero two successor function resp see follow two rule contain definit bll far see admiss bll rule express functori monoid xp note subsum follow gener semant valid rule result addit increas comput strength bll note presenc storag rule replac follow axiom x main result shall assum ambient set theori construct shall set of set u contain natur number n close product function space uindex product discuss point detail section allow us interpret type set follow way given formula environ assign set typevari obtain settheoret interpret follow p notic interpret type ignor resourc polynomi everi proof sequent n b environ assign settheoret function induct deriv obviou way observ cu pair function defin follow definit symbol usual successor zero n note main goal give new proof follow theorem equival theorem theorem let proof n x n px p contain free resourc variabl except x let f n n function then fn comput polynomi time n moreov fn pn algorithm f eectiv obtain proof analog result hold type dyadic list theorem realiz model bll introduc refin model b bll base realiz idea allow us obtain theorem direct corollari sound interpret see proof theorem preliminari x n write binari length x fix linear time comput pair function n n satisfi x also remark invers pair function assum linear time comput let x finit set variabl write vx n x the element vx call valuat over x vx c n x c denot valuat map x c act like otherwis assum reason encod valuat integ allow pass argument algorithm write px set resourc polynomi x p px vx write p number obtain evalu p x x x x let x finit set variabl substitut x function px may write substitut x form defin p px case domain x clear context may simpli write substitut x induc function obviou way ie y assum known untyp lambda calculu defin eg untyp lambda term ane linear variabl free bound appear up congruenc eg xyyx xyy xxi ane linear term xxx not notic term strongli normalis less t step t size term runtim comput lead normal form therefor ot henceforth use express ane lambda term untyp ane linear lambda term normal form s ane lambda term applic st defin normal form lambda term st notic applic st comput time os s ane lambda term write s ane lambda term ffst ane lambda term possibl contain free variabl x write x yt uuxyt notic x ytu gener t in famili ane lambda term write n in talli natur number may encod ane lambda term xyxxyx xyy pnq dyadic list may encod xyzxxyx xyzi pwq xyzz pwq notic pnq resp pwq comput linear time n resp vice versa cours function f natur number dyadic list repres ane term sens write set close ane lambda term subsequ develop modular sens replac polynomialtim comput bck algebra sens exampl take ture machin applic defin ex ex result obtain time de x otherwis length function defin induct x otherwis defect e addit requir final monoton sublinear function satisfi x x exampl realiz set definit let x finit set resourc variabl realiz set x set vx a ternari relat valuat x ane lambda term set a write t a intuit behind abstract semant valu measur abstract size a ane lambda term encod abstract valu a exampl follow use exampl realiz set cf section i realiz set n x x talli natur number of size x defin nx ii realiz set n x x dyadic list of length x defin by n x iii realiz set defin i xx iv given substitut x realiz set new realiz set a x defin a i set n x n x turn retract denot eponym bll formula model order model notion posit occurr resourc variabl bll formula introduc correspond concept realiz set definit let realiz set x say posit resp neg a vx a agre x x impli a notic x posit n x n x definit let a b realiz set set x morphism b function f a b satisfi follow condit exist function e vx e comput time q resourc polynomi q vx a et b fa case say e wit f write f e notat algorithm e presum exist exampl follow use exampl numericalvalu morphism morphism f n x n x function f n n comput time polynomi input n not n moreov satisfi fn n by let similarli morphism f n x function f polytim comput in usual sens moreov satisfi lhfw lhw let px unari resourc polynomi x let substitut x x p morphism f n x n x function f n n polytim comput input as abov fn pn compos abovement retract morphism denot close proof n x n px follow lemma illustr realiz set model syntact iter lemma bll cf lemma lemma iter lemma let realiz set x x posit let z x morphism over let morphism over x function f n t defin n x proof wit z give rise element e z function e n n definit substitut x whenev n n follow induct n fact x posit defin e recurs follow provid n n furthermor easi see e polytim given en fix p independ n therefor ex wit function follow analog version dyadic list cf lemma prove similarli lemma iter lemma dyadic list let realiz set x x posit let z x morphism over let morphism over x function f t defin morphism n x remark one also prove gener version preced iter lemma allow extra resourc variabl paramet proposit let x finit set of resourc variabl realiz set x morphism form categori bx map a extend functor bx categori set set mean composit bx given ordinari settheoret composit function proof ident function id a a wit algorithm exx clearli polytim comput f composit g wit xyzxyz e polytim use fact applic polytim recal definit exampl realiz set a x realiz set substitut x proposit let substitut x assign a extend functor proof show f e find e a f unfold definit reveal e e job allow us consid morphism realiz set dierent set resourc variabl name x z weaken substitut weak xz z x given weak xz realiz set x b realiz set consid morphism aweak xxi bweak yxi morphism b exist algorithm e vx y e comput time q resourc polynomi q et x denot restrict x shall sloppili refer morphism morphism b sens morphism n x n x constant zero function follow immedi lemma suppos by realiz set substitu tion suppos furthermor y y occur posit a y y occur neg a otherwis ident function morphism a a categori realiz set show categori bx appropri categor structur model bll connect definit defin follow monoid structur bx i arbitrari realiz set x defin a proposit let f b bx morphism c bx i function b c defin f ca c fa c morphism a c b c ii canon settheoret map a b c a b c b a a i a induc isomorph associ object iii appropri type substitut say particular bx symmetr monoid categori forget functor set monoid functor claus iii state substitut monoid func tor say collect categori bx form fibr symmetr monoid categori sens proof ad i e wit f defin e x yex y obvious e wit f c and sinc e function e polytim case analog proposit two object a b bx linear function space object b fa structur make bx symmetr monoid close categori ie natur biject monoid close functor proof evalu map a a f fa wit x yyx c f e wit e xyex y prop i e p establish e polytim notic forget functor bx set also monoid close ie send definit given polynomi p px realiz set xx defin realiz set xp x ie x bound xp xp xpa p whenev write xp sequel implicitli assum x occur p proposit f b bx x morphism xp f def f say xp extend functor bx x bx map ident forget functor set proof f e wit notic z p time p e comput time opq e comput oq note rather gener estim show appropri categor structur interpret rule bll proposit follow morphism da a a a x fresh a b proof map wit e n i x x map e may wit eyxx map da may wit see thi assum xpqa a p xi a n ip a moreov a henc yj jp axpi a therefor a result follow next may wit verif similar one da final ab may wit x omit wast morphism wa obviou interpret syntax b shall give detail interpret syntax bll term realiz set morphism them definit let x set resourc variabl secondord environ x partial function assign secondord variabl ariti n pair l c list n pairwis dierent resourc variabl occur x c realiz set x y n posit secondord environ write map c l c substitut secondord environ defin secondord environ x c assum variabl l contain otherwis substitut cannot defin recal settheoret semant defin section on write set settheoret semant distinguish realiz semant b defin let bll formula free resourc variabl x environ x defin free secondord variabl occur a assum without loss gener bound variabl distinct other induct defin realiz set b defin claus follow a b f c l c def follow lemma immedi structur induct lemma let substitut x let bll formula free resourc variabl let environ defin lemma let bll formula possibl contain secondord variabl bll formula contain free resourc variabl y n occur a lemma let bll formula resourc variabl x occur posit resp neg appropri secondord environ x posit resp neg b theorem sound let proof sequent n b involv resourc variabl x let secondord environ bind secondord variabl occur sequent settheoret function morphism realiz set recal proof induct bll deriv use use lemma axiom use proposit term former associ use three lemma univers applic abstract also make use obviou translat syntact construct categor combin eg applic evalu composit storag combin functori proof theorem appli iter principl theorem denot show function n n x set morphism bx n x similarli function n px n morphism direct by polymorph applic thu function theorem morphism result follow analysi exampl proceed analog case dyadic list use correspond iter principl addit remark notic realiz set x uniqu function a morphism realiz set wit eyxx particular give project for show model ane variant bll follow addit rule weak b particular see rule add comput strength recal assum exist univers u ambient set theori close uindex product wellknown univers exist classic zf set theori consist construct set theori found conveni assum exist u allow use inform settheoret argument provid construct reader feel uneasi sleightofhand oer follow way make rigor all which howev complic formal entir discuss calculu induct construct formal entir discuss realiz topo make previou point explicit stipul carrier set realiz set must subquoti by per set untyp lambda term not necessarili linear furthermor morphism realiz set must uniformli track untyp lambda term obviou sens would allow one interpret polymorph quantif intersect per r lambda calculu springer lnc bound linear logic light linear logic character complex class highertyp primit recurs defini tion linear type nonsizeincreas polynomi time comput type system polynomialtim comput program languag captur complex class small complet categori stratifi function program comput complex lambda calculu characteris polytim categori work mathematician linear logic tr bound linear logic character complex class higher type primit recurs definit stratifi function program comput complex lambda calculu character polytim light linear logic polymorph set theoret construct induct defin type phase semant light linear logic linear type nonsizeincreas polynomi time comput