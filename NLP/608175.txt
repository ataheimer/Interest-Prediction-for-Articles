t polynomi formal verif multipli a long ago complet automat formal verif multipli feasibl even small input word size howev multipl binari moment diagram astbmd new data structur repres arithmet function boolean variabl method propos verif multipli input word size bit feasibl unfortun experiment data provid verif method nowin paper give formal proof logic verif astbmd polynomi bound both space time appli class wallacetre like multipli use knowledg onlin detect design error becom feasibl verif run b introduct verifi implement combin circuit meet specif import step design process often done appli set testinput pattern circuit pattern simul perform ensur oneself correct behavior circuit last year new method propos formal verif circuit concern logic function repres circuit eg method base binari decis diagram bdd method fail verifi interest combin circuit multipli sinc bdd multipl function exponenti size recent new type decis diagram multipl binari moment diagram bmd introduc bmd well suit repres linear arithmet function boolean domain bmd success use verifi behavior combin arithmet circuit multipli input word size bit motiv result sever extens approach discuss verif method base partit circuit compon easi wordlevel specif first shown bitlevel implement compon research support dfg grant mo modul implement correctli wordlevel specif composit wordlevel specif accord interconnect structur whole circuit deriv composit algebra express bmd gener result bmd compar one gener overal circuit specif problem aris methodolog need highlevel specif compon modul take problem account hamaguchi etal propos anoth method verifi arithmet circuit call method verif backward construct method need highlevel inform experiment data provid show feasibl method specif multipli circuit paper give formal proof verif backward construct polynomi bound respect input word size consid specif multipli circuit class wallacetre like multipli er eg addit consid cost intermedi result also cost aris synthesi oper bmd lead possibl interrupt verif process presenc design implement failur furthermor give class variabl order give class depthfirst breadthfirst order circuit tight bound reach multipl binari moment diagram section give short introduct repres integervalu function propos decis diagram type bmd detail found bmd motiv necess repres function boolean variabl nonboolean rang ie function f map boolean vector onto integ number onto ration respect here restrict integ function class function booleshannon expans gener multipl addit re spectiv f x call constant moment f call linear moment f respect variabl x gamma denot integ subtract equat moment decomposit function f respect variabl x bmd root direct acycl graph nontermin termin vertic nontermin vertex exactli two successor edg point successor name low highedg successor name low highsuccessor respect nontermin vertic label boolean variabl termin vertic successor label integ valu low high edg nontermin node point constant linear moment function repres node bmd data structur reduc order common way addit alli bmd make use common factor constant linear moment extract factor place call edgeweight incom edg node could lead smaller represent ex ampl bmd root vertex v label x weight incom edg v repres function follow denot node v label variabl x simpli node x context clear paper consid integ edgeweight integ valu termin vertic sinc interest integ linear function onli make bmd represent canon restrict edgeweight necessari edgeweight low highedg nontermin vertex must greatest common divisor addit weight appear termin valu either outgo edg node point termin node weight outgo edg note reduct termin node valu appear highedg basic oper bmd present detail algorithm basi verif backward construct method backward construct base substitut variabl bmd function f bmd anoth function g accord equat substitut base x sketch substitut algorithm seen figur start bmdf bmdg notat bmd repres function f g respect addit variabl x substitut hand algorithm top variabl bmdf variabl substitut algorithm call recurs low high successor variabl x found integ multipl integ addit perform line note oper exponenti worst case behavior follow show specif condit worst case occur key bmd specif structur call sum weight variabl sov bmd unsign integ encod exampl bmd sovstructur outlin given figur subst bmdf xbmdg f check termin case return figur substitut algorithm figur sovstructur bmd properti exactli one nontermin node variabl highedg nontermin node label weight point directli termin node label valu correspond variabl properti substitut algorithm simplifi consider let us assum f bmd sov g bmd sov variabl x arbitrari posit middl f first phase line middl f first phase line execut continu x reach line call multipl addit multipl return result immedi sinc highf termin node complex addit depend bmd f g again sovstructur reduc number execut step sinc f termin node variabl y later paper g bmd known size give detail analysi return recurs call line line recurs call highf reason line end immedi bmd e line depth reason maintain sovstructur long possibl reduc number execut step substitut algorithm sinc substitut basic oper method verif backward construct overal number execut step reduc consider too addit sovstructur simplifi analysi complex method extrem class wallacetre like multipli let two nbit number binari represent if n power extend n power set superflu input zero multipl b equival sum n partial product shift j posit left assum follow divid circuit two part one part calcul partial product bit part add partial product bit final result use onli fulladdercel cell arrang eg reduct binari tree linear list influenc proof detail descript repres wallacetre like multipli pleas see complex backward construct section analyz complex method verif backward construct introduc subsect explain principl method subsect backward construct bmd adder part circuit analyz subsect take partial product bit account discuss result complex last subsect put togeth part get final overal complex method backward construct gener method verif backward construct work follow first primari output distinct variabl assign next step bmd output word construct weight sum bmd variabl accord given output encod we assum unsign integ encod output note obtain sovstructur result bmd then cut place cross primari output circuit cut move toward primari input output line gate move onto cut accord revers topolog order gate move cut toward primari input cir cuit bmd construct follow next line circuit cross cut also output line gate circuit find correspond variabl bmd construct far substitut variabl output function gate delet output line cut add input line gate cut fi nalli cut move output gate comput partial product bit final step substitut correspond variabl obtain bmd partial product bit step obtain bmd repres multipl b circuit correct mention abov cut move accord revers topolog order gate gener exist one order shall see proof base knowledg specif revers topolog order long substitut variabl repres fulladd output variabl repres initi partial product bit nevertheless give one specif class variabl order statement hold even appli differ topolog order construct bmd adder part subsect analyz cost construct bmd adderpart multipli first lemma show substitut sum carryoutput fulladd bmd sov maintain sovstructur mean sov invari substitut reason analyz substitut cost singl fullad der lemma get overal cost theorem theorem lemma let f bmd sov let x denot set variabl f let x two variabl repres sum carryoutput fulladd input fulladd repres independ order variabl set bmd involv substitut process hold substitut x f bmd function and f sov termin valu highsuccessor node high successor node x f proof proof base mere function argu ment sum carryoutput get follow function gammax l xm express boolean oper phi integ addit subtract multipl ie x phi let variabl x bmd f repres sum carryoutput fulladd variabl weight w w respect substitut x yield follow function f easili verifi rest variabl f affect sinc x k x l xm x weight variabl f therefor bmd repres function f must sov again independ variabl order furthermor three high edg node x k x l xm f point termin node valu w complet proof lemma sure sovstructur bmd maintain fulladd basic cell substitut variabl correspond output particular fulladd directli one anoth independ chosen variabl order chosen revers topolog order dag repres adder part multipli addit point substitut process know exactli size x x figur represent substitut x su x j ca x x figur bmd substitut variabl bmd process next fulladd size increas one proceed calcul cost count call substitut algorithm lemma let f bmd sov size defin lemma substitut bound ojf respect time independ variabl order order substitut proof denot bmd su ca consid first substitut x su substitut process visual figur note order matter sum carri function total symmetr therefor nontermin node label omit substitutealgorithm call recurs reach node f label variabl x obvious number recurs substcal bound ojf j node label x oper f lowx carri out bmd low highedg node x point sinc f sov f highx termin node call mult end im mediat sinc f lowx sov too su constant size addit bound ojf j recurs substcal constant number mult addcal sovstructur easili verifi get overal bound ojf substitut x su bmd substitut seen figur variabl order substitut x j ca analog argument hold except fact sovstructur f destroy su see figur first all lead addit recurs substcal constant su constant depth furthermor get addit call add mult recurs substcal node label variabl x k x l xm meet other number bound constant valu too sinc su ca constant depth therefor sinc result bmd size jf j accord lemma get time bound ojf substitut x su x j ca independ variabl order x x n fx g proof first substitut x j ca x su analog lemma lead directli space bound construct bmd adder part theorem construct bmd adder part multipl circuit use substitut bound respect space independ chosen revers topolog order fulladdercel proof bmd f start size on follow sinc one nontermin node variabl repres primari output result bmd construct adderpart size on one nontermin node variabl repres initi partial product bit exact size depend chosen realiz multipli lemma space bound on analyz space requir substitu tion consid time requir theorem construct bmd adderpart use substitut bound on respect time independ chosen revers topolog order fulladdercel proof proof first count number ful ladder element depend realiz exact number element differ asymptot cell form adderpart meaning multipli therefor number execut step upper bound size initi bmd accord proof theorem sum figur follow substitut partial product point analyz complex method verif backward construct part multipli circuit add initi partial product bit obtain result multipl sequenc analyz cost final step substitut partial product bit bmd so figur bmd substitut partial product bit figur final bmd multipl destroy sovstructur bmd start point bmd construct output gate size sinc n partial product bit fact hold proof theorem fa denot number fulladd cell assum follow fix order among aand bword assign primari input circuit fact variabl order within b j interest long variabl form one input word variabl form second input word otherwis final bmd may larger n defin lowpath bmd f path f root leaf consist lowedg note one path bmd show intermedi bmd structur like figur the small box edg denot multipl factor node termin highsuccessor upper diagon line lowpath mark variabl x k assign fulladd input line line also output line gate node nontermin highsuccessor label variabl also lowpath highsuccessor label variabl b j locat lower diagon line final bmd structur shown figur theorem let f bmd construct adder part substitut variabl f bmd initi partial product bit delta b j bound on respect space on respect time independ variabl order f independ chosen revers topolog order gate proof let f denot intermedi bmd gener substitut initi partial product bit node label variabl x yet substitut must lowpath f consid substitut node x bmd initi partial product bit obvious number recurs call substitut algorithm figur bound ojf j last recurs subst call ie node x follow oper carri out call mult end immedi sinc x termin highsuccessor sovstructur f begin substitut process add call distinguish two differ case node substitut initi partial product bit variabl now sinc node x one nontermin node substitut lambdab mda nontermin node size f increas node variabl b j share remain unchang otherwis variabl come predecessor variabl x variabl order lambdab mda reach final posit bmd f call add final substitut call ielin figur number call obvious bound ojf j variabl come predecessor variabl x variabl order reach final posit bmd f call add resolv previou substitut call line figur number add call con stant one easili make sure furthermor one call makenod one call mult previou subst call line figur exist alreadi node variabl ie node f alreadi substitut initi partial product bit far exist also node b j eg creat substitut initi partial product bit l delta b j size f substitut may decreas node b j share remain unchang otherwis differ first case is addit number n add call posit b j variabl order among b the worst case occur b bound total number call ojf case togeth give bound total number algorithm call ojf j substitut node x lambdab mda increas n size start bmd f the first n initi partial product bit substitut process differ avari size f on size intermedi bmd substitut bound prove first part theorem fur thermor sinc number substitut bound size start bmd f on get overal time bound prove second part theorem complet proof complex backward construct theorema conclud method backward construct appli class wallacetre like multipli bound on respect space on respect time bound larg depend chosen variabl order singl substitut step addit bound also depend order substitut long first substitut fulladdercel afterward initi partial product bit allow one restrict variabl order ing attain total free substitut order across circuit part mean class variabl order substitut initi partial product bit process fulladd cell nevertheless complex remain polynomi regard revers topolog order whole multipli circuit defin x a b variabl order variabl order first xvariabl second a variabl third bvariabl xvariabl denot fulladd in output a bvariabl denot variabl input word multipli give follow theorem theorem given x a b variabl order method backward construct appli class wallac tree like multipli bound on respect space on respect time independ revers topolog order circuit proof bmd decompos two part upper part consist xvariabl onli sov despit fact last highedg point nontermin node label avari lower part consist aand bvariabl consid two case substitut su ca first find substitut variabl found upper part bmd depend variabl order within x k add oper substitut continu downward bmd maxim reach edg point respect ever smallest avari far there recurs call termin sinc x k k i theo rema appli cost consid size upper part bmd substitut partial product theorem appli one open problem complex allow initi partial product bit substitut fulladd cell process differ variabl order theorem ie xvariabl begin variabl order expect complex remain still polynomi sinc structur result bmd similar one use here conclus futur research paper analyz complex method verif backward construct appli class wallacetre like multipli gave formal proof polynomi upper bound runtim space requir respect input word size method note now experiment data given show feasibl method conclus result is prematur detect design error watch bmd error result non correct bmd size assum process gate adderpart circuit process ith gate bmd size jf actual bmd size error assum now consid least initi partial product bit circuit then size bmd depend initi partial product bit substitut consid accur size bound bmd must larger jf j fan smaller n time futur research direct remov restrict eg variabl order mention abov take look integ divid could verifi backward construct far r hsi bddbase environ formal verif verif arithmet function binari moment diagram verif arithmet circuit binari moment diagram easili testabl optimaltim vlsi multipli complex vlsi implement graph represent boolean function applic integ multipl hybrid decis diagram overcom limit mtbdd bmd note complex binari moment diagram represent effici construct binari moment diagram verifi arithmet cir cuit recurs implement optim time vlsi integ multipli suggest fast multipli tr graphbas algorithm boolean function manipul complex vlsi implement graph represent boolean function applic integ multipl sequenti circuit verif use symbol model check symbol boolean manipul order binarydecis diagram hsi verif arithmet circuit binari moment diagram effici construct binari moment diagram verifi arithmet circuit hybrid decis diagram phdd logic synthesi verif algorithm kbmd verif arithmet function binari moment diagram