t effici distribut detect conjunct local predic a abstractglob predic detect fundament problem distribut system find applic mani domain test debug distribut program paper present effici distribut algorithm detect conjunct form global predic distribut system algorithm detect first consist global state satisfi predic even predic unstabl unlik previous propos runtim predic detect algorithm algorithm requir exchang control messag normal comput necessari inform detect predic piggyback comput messag applic program algorithm distribut predic detect effort well necessari inform equal distribut among process prove correct algorithm compar perform respect messag storag comput complex previous propos runtim predic detect algorithm b introduct develop distribut applic requir abil analyz behavior run time whether debug control execut particular sometim essenti know properti satisfi or not distribut comput properti comput specifi desir or undesir evolut program execut state describ mean predic local variabl compon process basic predic refer program execut state given time predic divid two class call local predic global predic local predic gener boolean express defin local state singl process wherea global predic boolean express involv variabl manag sever process due asynchron natur distribut comput imposs process determin total order event occur physic time consequ often imposs determin global state distribut comput pass through complic task ascertain global predic becam true comput basic predic use build block form complex class predic link predic simpl sequenc intervalconstrain sequenc regular pattern atom sequenc class properti use character evolut program execut state protocol exist detect properti run time way languag recognit techniqu properti ie combin basic properti contain global predic detect done local without introduc delay without defin central process without exchang control messag control inform piggyback exist messag applic howev properti refer least one global predic possibl observ comput must consid word detect properti requir construct travers lattic consist global state repres observ comput properti reduc one global predic construct lattic avoid case properti express disjunct local predic obvious cooper process need order detect properti comput form global predic name conjunct local predic focu research recent year predic number global state interest lattic consider rr m hurfin m mizuno m raynal m singhal reduc global state includ local state local predic fals need examin previou work problem global predic detect attract consider attent late number global predic detect algorithm propos recent past central algorithm cooper marzullo everi process report local state process build lattic global comput check state comput satisfi global predic power algorithm lie gener global predic detect howev algorithm high overhead comput n process maximum number event process lattic consist om n state worst case thu worst case time complex algorithm om n algorithm linear space complex howev worst case time complex still linear number state lattic sinc detect gener global predic build search entir state space comput utterli prohibit research develop faster effici global predic detect algorithm restrict special class predic exampl form global predic express conjunct sever local predic focu research recent detect predic done replay comput initi comput thi paper focu second kind solut allow one detect predic even end comput gargwaldeck central algorithm detect predic process gather inform local state process build global state satisfi global predic check construct global state consist distribut algorithm garg chase token use carri inform latest global consist state cut local predic hold respect local state worst case time complex algorithm omn linear much smaller worst case time complex method requir search entir lattic howev price paid properti express conjunct local predic recent stoller schneider propos algorithm combin gargwaldeck approach approach construct lattic detect possiblyphi distribut comput satisfi possiblyphi iff predic phi hold state correspond lattic algorithm best featur inria effici distribut detect conjunct local predic approach detect possiblyphi predic phi detect global predic express conjunct local predic time linear the maximum number event process paper object paper present effici distribut algorithm detect conjunct form global predic distribut system prove correct algorithm compar perform previou algorithm detect conjunct form global predic rest paper organ follow next section defin system model introduc necessari definit notat section present first global predic detect algorithm give correct proof second algorithm present section section compar perform propos algorithm exist algorithm detect conjunct form global predic final section contain conclud remark system model definit notat distribut comput distribut program consist n sequenti process denot p concurr execut process network processor call distribut comput process share global memori global clock messag pass way process commun one anoth comput asynchron process evolv speed messag exchang commun channel whose transmiss delay finit arbitrari assum messag alter spurious introduc assumpt made fifo natur channel event definit notat activ process model sequenc event ie execut action three kind event consid intern send receiv event let e x x th event occur process p figur show exampl distribut comput involv two process p p exampl event e send event event e correspond receiv event event e intern event rr m hurfin m mizuno m raynal m singhal figur distribut comput process p defin addit intern event denot e occur process p begin comput so given comput execut process p character sequenc event furthermor comput termin last action execut process denot e imaginari intern event denot e causal preced relat event happenedbefor causal preced relat lamport induc partial order event distribut comput transit relat denot oe defin follow e x exist messag send event send p j e j receiv event receiv exist event e z k e z relat extend reflex relat denot inria effici distribut detect conjunct local predic local state definit notat given time local state process p defin valu local variabl manag process although occurr event necessarili caus chang local state identifi local state process given time regard last occurr event process use oe x denot local state p period event e x event e x local state oe call initi state process p figur local state process causal preced relat local state definit causal preced relat state denot gamma base happenedbefor relat event relat defin follow oe x two local state oe x oe said concurr causal depend ie oe x j oe set local state consist pair element concurr distribut comput shown figur foe g foe oe g three exampl consist set local state rr m hurfin m mizuno m raynal m singhal interv definit notat sinc causal relat among local state differ process caus send receiv event introduc notion interv identifi concurr sequenc state comput interv defin segment time process begin send receiv event call commun event end next send receiv event thu process execut view consecut sequenc interv order formal defin interv first introduc new notat identifi commun event use x denot x th send receiv event p thu x exist exactli one e denot event furthermor imaginari event e renam comput termin imaginari event process p renam l l number commun event occur process p x th interv process p denot segment comput begin end x thu first interv p denot comput termin last interv process p identifi l figur correspond set interv say interv x contain local state oe or oe contain x follow properti hold x relat denot oe relat hold denot oe definit interv contain least one local state inria effici distribut detect conjunct local predic causal preced relat interv relat express causal depend among interv denot relat induc partial order interv distribut comput defin follow set interv consist pair interv set say x global state global state or cut collect n local state contain exactli one local state process p global state denot f oe x g global state f oe x consist identifi set consist global state distribut comput form lattic whose minim element initi global state sigma distribut comput reach latter former process p execut next event path lattic start minim element correspond possibl observ distribut comput observ identifi sequenc event event comput appear order consist happen befor relat lamport maxim element call final global state exist process distribut comput termin given comput predic global state phi use two modal oper propos cooper marzullo obtain two differ pro perti name possiblyphi definitelyphi distribut comput satisfi lattic consist global state verifi predic phi wherea definitelyphi satisfi comput observ ie path lattic pass consist global state verifi phi paper focu class global predic form conjunct local predic consid first satisfact rule possiblyphi rule particularli attract test debug distribut execut rr m hurfin m mizuno m raynal m singhal conjunct local predic local predic defin local state process p denot l notat oe x indic local predic l satisfi process p local state oe x due definit local predic l evalu process p time without commun process extend mean symbol j interv follow oe let phi denot conjunct p local predic without loss gener assum p process involv conjunct phi paper write either phi denot conjunct set p local state f oe x p g call solut if p g consist set global state sigmax call complet solut set local state includ solut definit possiblyphi verifi exist complet solut consist set local state contain less n local state may complet form consist global state ie consist set n element thu solut may extens one complet solut goal detect algorithm calcul whole set complet solut determin solut approach restrict order deal complet solut rather solut programm simpli add conjunct local predic l true local state consequ longer speak complet solut due link local state interv follow definit solut obvious consist first one set p local state f oe p g solut iff exist set p g consist set inria effici distribut detect conjunct local predic let denot set solut empti first solut uniqu element denot f oe f p g everi element p g satisfi follow properti properti detect express conjunct local predic particular solut exist well defin comput set interv includ solut also well defin denot set interv say set interv first one verifi phi detect algorithm conjunct local predic overview mention previou section possiblyphi verifi detect set concurr interv verifi local predic develop follow two approach resolv problem first approach process alway keep track set concurr interv set process check whether interv set verifi local predic second approach process alway keep track set interv verifi local predic set process check whether interv set concurr thu algorithm design complementari approach dual other section describ algorithm correspond first approach detail includ correct proof next section describ algorithm correspond second approach first algorithm depend vector identifi set p concurr interv algorithm keep track causal depend among interv use vector clock mechan similar describ rr m hurfin m mizuno m raynal m singhal process p n maintain integ vector p call depend vector sinc causal relat two interv differ process creat commun event and transit relat valu advanc commun event take place p use x denot valu vector process p interv x valu comput time x execut process p process p execut follow protocol process p interv compon vector zero p p execut send event advanc set i messag carri updat valu p execut receiv event messag contain dm advanc set k maxd k dm k k p moreov depend vector advanc set i belong set p process directli implic conjunct ie process p p interv x follow properti observ x repres number interv p preced interv x repres number interv process p j causal preced interv x set interv f x p g consist none interv j x ie interv p j causal preced x concurr x therefor none form set interv x verifi phi let b two depend vector clock valu use follow notat ffl b iff i ffl b iff i i b i inria effici distribut detect conjunct local ffl b iff d b follow result hold log process maintain log denot log queue vector clock entri log use store valu depend vector associ past local interv p may part solut ie interv verifi l test global yet inform causal relat store interv interv process use futur store interv examin p local state oe contain interv x oe enqueu vector clock valu x log valu alreadi store even exist one local state interv x verifi valu x need log sinc interest interv instead state cut addit vector clock process p n maintain integ vector c p call cut boolean vector b p vector c defin first consist global state could verifi phi other word previou global state dont satisfi phi definit c denot set p interv may first solut inform receiv p show set certainli solut cut immedi updat new potenti solut time c j denot number interv p j alreadi discard indic j first interv p j yet elimin conjunct satisfi comput cut c evolv denot first solut let c x denot valu c j commun event x execut p valu c remain unchang interv p maintain valu c way none interv preced event c j j form set interv verifi phi therefor process p p may discard valu log i c i p n also maintain vector b way b j hold interv c j j p j certain verifi local predic thu system certain whether rr m hurfin m mizuno m raynal m singhal interv verifi local predic b j set fals maintain condit cut c b vector must exchang among process p send messag includ vector c messag descript algorithm formal descript algorithm given section algorithm consist follow three procedur execut process ffl procedur execut time local predic l associ p ffl procedur b execut p n send messag ffl procedur c execut p n receiv messag addit vector clock cut c boolean vector b log log process maintain boolean variabl log yet variabl log yet true iff vector clock valu associ current interv log log variabl help avoid log vector clock valu log a local predic l becom true let oe local state satisfi local predic x interv includ state oe vector clock valu x associ interv log log log yet indic vector clock interv alreadi log in process p set variabl log yet fals furthermor current interv denot x x also oldest interv p yet discard denot c x i set true indic c x send messag sinc begin new interv process p p advanc vector clock set reset variabl log yet true log empti none interv preced new interv form set interv verifi phi particular remark hold last interv end current execut procedur b ie send action occur consequ last interv and also interv p causal inria effici distribut detect conjunct local predic preced one discard set c i current valu i at step comput i ident current send event final send messag along c receiv messag p j contain base definit vector clock advanc reset variabl log yet true definit cut process p k k p none interv preced interv c k k c j k k form set concurr interv verifi phi thu c advanc componentwis maximum c c j b updat contain uptod inform b b j process p delet log valu interv preced c i sinc interv belong set concurr interv verifi phi oper two possibl ffl case log becom empti ie log contain interv occur c i i case none interv p repres i form set concurr interv verifi phi algorithm need consid futur interv denot z i z sinc none interv k k k k process p k form set concurr interv futur interv z c advanc process p execut receiv action inform interv k p therefor compon vector b set fals contain least one entri log occurr event c i oldest log entri log properti vector definit cut process p k kp none interv preced log k c k k form set concurr interv log verifi phi thu c advanc componentwis maximum log similar case valu c k modifi ie take valu log certain whether p k s local predic held interv log k thu b k set fals valu c k remain unchang valu b k also remain unchang rr m hurfin m mizuno m raynal m singhal furthermor sinc log verifi local predic b i set true point p check whether b k true k so indic interv concurr set interv f c verifi local predic thu phi verifi formal descript algorithm initi procedur execut process p i p createlog yet log true endif procedur execut process local predic l becom true not yet log log fals endif procedur b execut process p send messag i p log true endif append vector c b messag send messag procedur c execut process p receiv messag p j prove subsect set interv number c valu alway concurr inria effici distribut detect conjunct local predic extract vector j c j b j messag i p log true not emptylog headlog delet log interv current knowledg lie solut construct solut pass next local interv els construct solut pass log interv endif endif deliv messag function combin maxima cb cb b vector p boolean c vector p integ p case endcas simpl exampl sinc algorithm quit involv illustr oper algorithm help exampl figur local state contain interv rr m hurfin m mizuno m raynal m singhal repres grey area satisfi associ local predic differ step comput indic valu main variabl use detect item squar bracket next process interv respect depict content vector c valu remain unchang entir interv valu vector b execut commun event indic round bracket initi valu interv number two process c vector process local predic hold interv enqueu vector log process p also set b true certain c send messag m increment send vector b c messag receiv messag m increment updat b c vector p find log empti construct potenti solut use vector store c vector local predic becom true state oe log variabl yet log fals process p local state oe vector clock log twice interv p send messag m increment send vector b messag p receiv messag m increment updat b c vector merg vector receiv messag p find c headlog discard entri log sinc log empti p construct potenti solut use vector store c vector local predic becom true interv oe log p send messag m increment send vector b messag meantim local predic hold state oe consequ p log vector log receiv messag m increment updat b c vector merg vector receiv messag p find c headlog discard entri sinc next entri log cannot discard p construct potenti solut use headlog vector store c b vector potenti solut goe fact interv satisfi l known process p b true p set b true find entri vector b true declar verif global predic inria effici distribut detect conjunct local predic figur exampl illustr algorithm extra messag algorithm abl detect solut exist without ad extramessag comput without defin central process algorithm depend exchang comput messag process detect predic consequ detect may delay also case comput may termin exist solut may go und tect exampl first solut set consist p last interv g algorithm detect it solv problem solut found comput termin messag contain vector d c b exchang p process first solut found guarante exist least one solut assum set interv f l p g alway solut extra messag exchang comput end first solut detect yet reduc overhead due extra messag process one use privileg token own one process time token circul around ring consist p process dissemin inform three vector anoth solut consist send token process may know relev inform ie process p j b j fals rr m hurfin m mizuno m raynal m singhal correct algorithm two vector timestamp set interv repres f v concur rent then set interv repres f v p g concurr proof show pair interv v i combin concurr renumb vector v v necessari suppos v two case consid case obviou becaus assumpt v i concurr suppos contrari v i j concurr two case consid case contradict assumpt v j concurr appli argument case a lead contradict assumpt v i concurr concurr follow lemma guarante cut c alway keep track set concurr interv lemma process p given time f c p g set concurr interv proof c updat one follow three way receiv event execut execut c d receiv event execut take maximum c c j the cut contain messag sent process p j take maximum c log the oldest valu depend vector still log inria effici distribut detect conjunct local predic send event occur entri c i set i let updatec x updat cut c commun event x give valu c x defin partial order relat repres updat cut c p follow x two consecut commun event occur p ie exist messag x send p j receiv p updatec x let seq topolog sort partial order updat event prove lemma induct number updat seq induct base sinc set interv f p g concurr initi lemma hold c ie updatec induct hypothesi assum lemma hold applic updat induct step suppos st updat occur process p let c x cut valu st updat oper denot updatec x receiv event c x definit vector clock vector clock valu d set interv f d p g concurr thu c x repres set concurr interv case x receiv event c x j correspond send event updatec clearli relat updatec hold sinc induct hypo thesi c repres set concurr interv maxc repres set concurr interv from lemma sinc definit vector clock log the oldest entri still log repres set concurr interv c x repres set concurr interv from lemma case x send event c x i j j i c x rr m hurfin m mizuno m raynal m singhal suppos receiv event occur process p send event x entri vector x vector c x i zero therefor proof case suppos last receiv event occur send event x log discard sinc event occur log empti conclud log also empti receiv event occur henc c event last receiv event occur x conclud j j i c then proof case the follow lemma show solut cut c miss pass beyond solut lemma consid particular cut identifi integ vector s p g set concurr interv verifi phi denot commun event if commun event j proof proof contradict suppos exist commun event x c x commun event j first event advanc c beyond s two case consid c x hypothesi c hold therefor entri c j modifi execut event x event necessarili receiv event z k correspond send event note c x denot interv sj x hold definit depend vector sj howev either c x contradict hypothesi f s p g set concurr interv inria effici distribut detect conjunct local predic assumpt c k s therefor c x log hold definit depend vec tor sj max oper log sj proof case c x either send receiv event algorithm clear case occur none interv occur c includ thi x verifi contradict fact si verifi l sinc c k i log receiv event z k correspond send event assumpt c c z k i si assum c k i c si therefor c x algorithm clear case occur none interv occur c includ thi log verifi contradict fact si verifi l sinc c log ith follow lemma prove algorithm keep make progress encount solut lemma suppos process p execut algorithm x th commun event x interv x set f c x verifi phi then exist j c x proof two reason f c x p g verifi phi c x verifi rr m hurfin m mizuno m raynal m singhal case x could find interv verifi l therefor set x ie valu x i next commun event updat least th entri c set c x i x exist least one process p k k p c x k verifi case p k eventu advanc c k k valu greater c x refer case new valu comput event z occur propag process extra messag eventu exchang end comput guarante eventu commun event j process p j z c x final follow theorem show phi verifi comput iff algorithm detect solut theorem exist interv x p that interv hold k k p f c x verifi phi convers f c x verifi phi event x processor exist commun event j k k p hold proof proof contradict suppos c x k verifi l k k show long c k chang b k fals two case consid verifi l updat i commun event x occur x receiv i set fals time remain fals interv necessarili empti entir durat interv c x modifi event x occur send event valu b i unchang sinc last receiv event sinc begin comput receiv event occur process send event x case log remain empti entir period b i remain fals inria effici distribut detect conjunct local predic k updat c k c x exist process p j advanc c x k valu propag p p j must set b j k fals inform must propag p valu propag p without go p k els p k would advanc valu greater c x k easi see b x k fals sinc k process chang b k k true p never see b true togeth c assum f c x verifi phi messag exchang guarante eventu commun event j k k p process p k interv c x k set true lemma process p h set c h k c x chang valu futur impli process p h path messag exchang c x k c x k b h k true none process p h set b h k fals advanc c h k beyond c x inform eventu propag p j b hold k k p second algorithm second algorithm everi process alway keep track set interv process interv verifi local predic set process check whether interv set concurr overview algorithm verifi interv algorithm interv verifi associ local predic interest call interv verifi interv new use identifi x th verifi interv process p thu exist exactli one denot interv rr m hurfin m mizuno m raynal m singhal omega omega omega omega figur correspond set verifi interv depend vector first algorithm process p n maintain depend vector track ident next verifi interv p encount even though p know interv be know next verifi interv denot encount x th verifi interv denot omega detail descript log given later moment increment i one x look next verifi note exist verifi guarante moment local predic may satisfi anymor comput first algorithm vector remain entir durat interv second algorithm contrari vector may chang interv interv verifi interv order captur causal relat among verifi interv differ process follow protocol execut process p n initi compon vector zero p execut send event send along messag p execut receiv event messag contain dm advanc set k maxd k dm k k p inria effici distribut detect conjunct local predic clearli follow properti hold i repres number verifi interv p whose exist confirm p ie p alreadi pass d i st verifi interv jj i repres number verifi interv occur process p j causal preced current interv p set verifi interv p g necessarili consist yet definit exist satisfi associ local predic none j j ie verifi interv p j causal precedeomega j concurr therefor none form set interv verifi phi log process p maintain log denot log manner first algorithm p verifi local predic l enqueu current increment i one log empti notat log use denot valu vector clock head log necessarili log empti exist omega log alreadi confirm p cut like first algorithm process p maintain integ vector c boolean vector mean c similar first algorithm next possibl interv p j may solut none verifi interv precedesomega c j j solut therefor process p may discard valu log mean b also similar algorithm p maintain way b j true process p certain verifi interv j confirm p j furthermor process p certain none verifi causal precedeomega c j thu p certain rr m hurfin m mizuno m raynal m singhal whether verifi j alreadi confirm p j b j set fals descript algorithm formal descript algorithm given section first algorithm second algorithm consist three procedur execut process p again assum set interv f l p g solut extra messag exchang comput end first solut discov yet local predic l becom true let oe local state satisfi local predic p enter verifi includ state oe log log log yet sinc begin interv order indic vector clock interv alreadi log set variabl log yet fals counter verifi interv i increment one reflect current interv verifi interv furthermor current verifi interv also oldest verifi interv discard denot i set true confirm exist p send messag sinc mark begin new interv p reset variabl log yet true send messag along c receiv messag p j contain sinc new interv begin reset variabl log yet true first algorithm none interv process p k precedeomega c k form set concurr interv verifi phi thu c advanc componentwis maximum c c j moment b also updat b k true mean p certain exist k confirm thu c k least one b k b j k true b k set true delet entri log precedeomega c i sinc verifi interv potenti compon solut oper two case consid inria effici distribut detect conjunct local predic ffl case log becom empti case none verifi interv p moment form set concurr verifi interv algorithm need consid verifi interv occur futur interv existomega i first one sinc verifi k k process p k causal precedeomega i none interv solut thu cut c advanc process p execut receiv action certain whether p k p encount verifi k therefor compon vector b set fals contain least one log interv let oldest log entri log properti vector definit cut verifi interv process p k precedingomega c k oromega log causal precedeomega log none interv solut thu c advanc componentwis maximum log similar case valu c k modifi ie take valu log certain whether p k s encount verifi interv log k thu b k set fals c k remain unchang b k also remain unchang follow process decis furthermor b i set true sinc p confirm exist ofomega log moment new inform c may abl detect solut thu p check whether b k true k so indic verifi interv set confirm concurr one anoth sinc process detect causal relat pair interv set formal descript algorithm initi procedur execut process p i p createlog yet log true endif rr m hurfin m mizuno m raynal m singhal procedur execut process local predic l becom true not yet log log fals endif procedur b execut process p send messag i p yet log true endif append vector c b messag send messag procedur c execut process p receiv messag p j extract vector j c j b j messag i p yet log true not emptylog headlog delet log interv current knowledg lie solut construct solut pass next local verifi interv els construct solut pass log verifi interv endif endif deliv messag inria effici distribut detect conjunct local predic discuss exampl help reader understand algorithm figur illustr oper second algorithm comput similar one use figur figur content vector c indic next process interv squar bracket valu vector evalu last local state interv ie execut commun event f fa fa f fa fa fa f fa f fa f ta ta figur exampl illustr algorithm differ approach second algorithm consid optim first one interv counter c evolv slowli second algorithm updat vector occur less often exampl vector c modifi send action algorithm find first solut differ way first algorithm interv solut locat via number commun event occur process encount interv second algorithm deliv inform number valid interv preced solut differ algorithm much semant properti control variabl rather way updat exampl updat vector c made similar way algorithm yet rr m hurfin m mizuno m raynal m singhal compon manag counter interv in first algorithm counter verifi interv in second algorithm algorithm employ complementari approach find first solut first algorithm correspond set interv alway concurr ie satisfi first criterion solut second algorithm element set alway verifi interv ie set satisfi second criterion solut correct proof second algorithm similar proof first algorithm howev lemma lemma becom irrelev second algo rithm instead follow lemma becom use lemma time execut p b j j p true proof process p j necessarili updat b j j true account fact j encount oldest interv discard yet time p j use valu head log log j updat compon c j k valu greater equal log k order invalid verifi interv causal past therefor cut c never decreas due merg oper made begin receiv share p j vision valu bj cj time keep older valu compon c k rest proof first algorithm definit interv appropri modifi comparison exist work previou work detect conjunct form global predic mainli garg waldeck garg chase gargwaldeck algorithm central process report local state satisfi local predic checker process checker process gather inform build global state satisfi global predic check construct global state consist algorithm messag storag comput complex omp number messag sent process p number process global predic defin inria effici distribut detect conjunct local predic garg chase present two distribut algorithm detect conjunct form predic algorithm process particip global predic detect equal basi first distribut algorithm requir vector clock employ token carri inform latest global consist cut local predic hold respect local state messag storag comput complex algorithm garg waldeck algorithm name omp howev worst case messag sto rage comput complex process algorithm omp thu distribut work equit central algorithm second distribut algorithm use vector clock use direct depend instead messag storag comput complex algorithm omn worst case messag storag comput complex process algorithm om thu algorithm desir p greater n propos predic detect algorithm caus transfer addit messag except end provid predic detect comput termin control inform need predic detect piggyback comput messag contrari distribut algorithm garg chase may requir exchang mani mp mn control me sage respect although worst case volum control inform exchang ident name omp first garg chase algorithm propos algorithm latter result addit messag exchang studi lazowska et al show messag send receiv overhead consider due context switch execut multipl commun protocol layer desir send bigger perform point view conclud remark global predic detect fundament problem design code test debug implement distribut program addit find applic mani domain distribut system deadlock detect termin detect paper present two effici distribut algorithm detect conjunct form global predic distribut system algorithm detect first consist global state satisfi predic work even predic un rr m hurfin m mizuno m raynal m singhal tabl algorithm base complementari approach second algorithm consid optim first one vector c increas lower rate prove correct algorithm algorithm distribut predic detect effort well necessari inform equal distribut among process unlik previou algorithm detect conjunct form global predic algorithm requir transfer addit messag normal comput instead piggyback control inform comput messag addit messag exchang predic remain undetect comput termin r consist detect global predic detect unstabl predic distribut pro gram detect weak unstabl predic distribut program distribut algorithm detect conjunct predi cate global event global breakpoint distribut sy tem detect atom sequenc predic distribut comput linear space algorithm onlin detect global state file access perform diskless workstat global condit debug distribut program virtual time global state distribut system breakpoint halt distribut program way captur causal distribut system faster possibl detect combin two ap proach le de nancybraboi campu scientifiqu rue du jardin botaniqu bp viller le nanci unit de recherch inria renn irisa campu universitair de beaulieu renn cedex unit de recherch inria rho tr ctr punit chandra ajay d kshemkalyani distribut algorithm detect strong conjunct predic inform process letter v n p septemb loonbeen chen ichen wu effici distribut onlin algorithm detect strong conjunct predic ieee transact softwar engin v n p novemb ajay d kshemkalyani finegrain modal classif global predic ieee transact parallel distribut system v n p august guy dumai hon f li distribut predic detect seriesparallel system ieee transact parallel distribut system v n p april emmanuel anceaum jeanmichel hlari michel raynal track immedi predecessor distribut comput proceed fourteenth annual acm symposium parallel algorithm architectur august winnipeg manitoba canada neeraj mittal vijay k garg techniqu applic comput slice distribut comput v n p march scott d stoller detect global predic distribut system clock distribut comput v n p april punit chandra ajay d kshemkalyani causalitybas predic detect across space time ieee transact comput v n p novemb