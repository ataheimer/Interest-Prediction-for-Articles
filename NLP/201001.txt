t closur analysi constraint form a flow analys untyp higherord function program past decad present ayer bondorf consel jone heintz sestoft shiver steckler wand other analys usual defin abstract interpret use rather differ task type recoveri global bindingtim analysi analys contain global closur analysi comput inform higherord controlflow sestoft prove closur analysi correct respect callbynam callbyvalu semant remain open correct hold arbitrari betareductionthi articl answer question closur analysi other correct respect arbitrari betareduct also prove subjectreduct result closur inform still valid betareduct core proof techniqu defin closur analysi use constraint system constraint system equival closur analysi bondorf turn base sestoft b introduct background optim higherord function languag requir power program analys tradit framework analys abstract interpret type languag suitabl abstract domain often defin induct structur type exampl function space abstract function space untyp languag calculu dynam type languag scheme abstract domain cannot defin abstract function space function space domain use may difficult relat abstract interpret denot semant articl consid style program analysi result abstract oper semant past decad program analys untyp languag present author address comput scienc depart aarhu univers ny munkegad dk aarhu c denmark email palsbergdaimiaaudk permiss copi without fee part materi grant provid copi made distribut direct commerci advantag acm copyright notic titl public date appear notic given copi permiss associ comput machineri copi otherwis republish requir fee andor specif permiss acm transact program languag system januari also proc caap page c jen palsberg ayer bondorf consel jone heintz sestoft shiver a b wand steckler other although analys use rather differ task type recoveri global bindingtim analysi base essenti key idea absenc type defin abstract domain term program point exampl consid follow term giannini rocca prove strongli normal term higherord polymorph type still program analysi might answer basic question as everi applic point abstract appli everi abstract argument appli answer question subset program point particular term thu let us label abstract applic also variabl label variabl bound label label bind it free arbitrari label introduc explicit applic symbol get follow abstract syntax term analysi might abl find matter reduct proce i appli is abstract label appli abstract label at applic point dd in delta k appli is applic point label appli abstract label the abstract cb never appli is applic point abstract label appli quot sentenc give intuit understand precis statement follow particular exampl label rather unnecessari name clash happen reduct k cb normal form presenc name clash reduct howev crucial use set program point abstract valu question turn paramount import mani analys untyp function program follow sestoft bondorf call analysi answer conserv closur analysi top closur analysi one build exampl type recoveri analys global analys bindingtim analys closur analysi answer question higherord control flow extens answer question one realli interest in exampl type recoveri role closur analysi thu follow closur analysi constraint form delta higherord closur analysi closur analysi use higherord languag gener exampl objectori languag see palsberg schwartzbach b also use type function languag type inform usual specif enough tell function among typecorrect one call applic point closur analysi extens defin abstract interpret differ radic tradit abstract interpret howev abstract domain defin term program analyz mean analys global abstract domain defin complet program requir moreov program cannot take higherord input would add program point also minim function graph approach program analysi use abstract domain defin term input program contrast tradit abstract interpret analyz piec program isol refer analys base closur analysi flow analys exampl largescal implement analys found similix system bondorf bondorf bondorf danvi schism system consel system agesen et al analyz self program ungar smith last implement demonstr closur analysi handl dynam multipl inherit closur analysi extens formul use constraint other exampl heintz wand steckler constraint system spirit close our although technic somewhat differ key differ heintz definit heintz attempt avoid analyz code execut callbyvalu goal share analysi palsberg schwartzbach a idea defin program analys use constraint set variabl call setbas analysi heintz prove closur analysi correct respect call bynam callbyvalu semant remain open correct hold arbitrari betareduct result prove closur analysi correct respect arbitrari betareduct also prove subjectreduct result closur inform still valid betareduct correct result impli closur analysi correct respect reduct strategi we present novel specif closur analysi allow arbitrari beta reduct take place subsum previou specif we present closur analysi use constraint system constraint system character result analysi without specifi comput exampl constraint system given section we prove constraintbas analysi equival closur analysi bondorf turn base sestoft sestoft also jen palsberg prove analys equival novel simplif bondorf definit proof correct subjectreduct proceed consid constraintbas definit closur analysi contrast closur analys abstract interpret one use constraint system depend label distinct make possibl analyz term betareduc it analyz result without relabel first abstract interpret might modifi properti also would somewhat messi indic direct proof correct modifi abstract interpret would complic proof present articl techniqu prove correct gener without problem analys base closur analysi follow two result prove articl the safeti analysi palsberg schwartzbach a b correct respect arbitrari betareduct follow subjectreduct prop erti term stay safe betareduct the bindingtim analysi palsberg schwartzbach a prove correct palsberg prove correct elegantli new techniqu constraintbas definit closur analysi straightforward extend practic languag mediums exampl see palsberg schwartzbach b analysi defin objectori languag exampl constraint system express closur analysi term set horn claus term contain n abstract applic constraint system contain n constraint thu size constraint system worstcas quadrat size term space constraint disallow us show fullblown exampl involv name clash reduct consid instead term xxxyy abstract syntax constraint system express closur analysi term look follow ae ae ae ae symbol form l l metavari relat variabl label l abstract label l applic label i respec tive notic assum exampl one abstract closur analysi constraint form delta label l reason want closur analysi term also aris betareduct may copi term henc label left constraint indic aris first two constraint express abstract may evalu abstract label rest constraint come pair applic point abstract label l two constraint form flg metavar oper flg metavar oper constraint read as the first constraint oper evalu abstract label l bound variabl abstract may substitut everyth operand evalu the second constraint oper evalu abstract label l everyth bodi abstract evalu also possibl result evalu whole applic solut constraint system metavari assign closur in format minim solut constraint system map l where exampl whole term will normal evalu abstract label l applic point appli abstract label l applic point point abstract label appli l abstract appli term either normal evalu abstract label l one theorem say comput closur inform correct one might also tri closur analysi term use bondorf abstract interpret anoth theorem say get result contract redex term result term abstract one third theorem say map l give correct closur inform also term follow section defin three closur analys bondorf simpler abstract interpret one constraint form section prove equival section prove correct closur analysi recal calculu barendregt definit languag term abstract syntax defin grammar applic jen palsberg label variabl abstract symbol applic symbol semant impact mark program point label bound variabl bind it label drawn infinit set label symbol l l label label applic symbol part concret syntax identifi term ffcongruent ffconvers chang bound variabl label assum variabl convent barendregt term occur articl bound variabl chosen differ free variabl achiev renam bound variabl occurr l xe call redex semant usual given rewritingrul scheme l xe here ee x l denot term e substitut free occurr x l notic variabl convent renam bound variabl necessari substitut particular write l yee x l l j x l l among free variabl e thu l yee x l write es e denot e obtain es betareduct term without redex normal form abstract domain closur analysi term e call cmape defin follow definit metavari one form l l set metavari denot metavar term assign metavari function var map x l l l xe l term e labe set label abstract but applic occur e notic labe finit set csete powerset labe csete inclus order complet lattic set cmape consist total function metavar csete set cenv contain function cmape restrict metavari form l cmape cenv pointwis order written v complet lattic least upper bound written t function hv si map metavari v set map metavari empti set final defin upd specif closur analysi state precis closur analysi is intuit argument follow formal definit definit term e everi l cmape defin binari relat term follow follow four condit hold l xe ex contain l ze flg lvare contain l xe ex contain flg closur analysi constraint form delta flg closur analysi e produc l cmape intuit ex e get conserv inform abstract e closur analysi ex exampl first condit definit illustr follow theta theta theta theta theta theta theta theta theta theta theta theta theta theta case e abstract label l thu ex evalu abstract label l first condit say case map l must satisfi flg lvarex word analysi must awar abstract possibl result evalu ex three condit definit cover case abstract proper subterm e second condit cover case abstract e bodi yet anoth abstract third fourth condit cover case abstract oper operand appli cation respect here illustr first three condit other similar theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta thetab theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta thetab z l case e contain abstract label l l xe abstract turn bodi abstract label l l l xe second condit jen palsberg definit say case must abstract ex label l l bound variabl may differ map l satisfi flg lvare word analysi must awar abstract l ze ex evolv abstract bodi abstract label l notic possibl one abstract ex label l thu want closur inform the bodi abstract label l must comput union inform bodi abstract ex label l similar comment appli third fourth condit definit use closur inform concern articl howev bondorf definit recal closur analysi bondorf minor chang notat compar present analysi assum label distinct bondorf definit origin given subset scheme restrict calculu note bondorf definit base sestoft sestoft simplifi bondorf definit follow bondorf origin definit assign distinct metavari differ occurr variabl contrast assign metavari occurr variabl simplifi definit equival bondorf origin definit see below use notat l xe subterm term analyz partial function bodi map label l e definit defin upd l let c vare let upd let ae ae t lc upd l closur analysi e comput fstbe modifi definit differ occurr variabl assign distinct metavari obtain bondorf origin definit definit assign set metavari occurr given variabl moreov comput closur inform comput state analysi we leav detail reader simpler abstract interpret bondorf definit simplifi consider see whi consid second compon cmape theta cenv compon updat closur analysi constraint form delta ae read bx l ae key observ oper done first compon instead thu omit use cenv rewrit bondorf definit accord observ arriv follow definit bondorf definit assum label distinct definit defin mx l f closur analysi e comput fixm key question is simpler abstract interpret equival bondorf might attempt prove use fixedpoint induct find much easier use particular constraint system step stone constraint system term e constraint system finit set horn claus inclus form p p p p either metavari element csete solut system element cmape satisfi horn claus constraint system defin term term analyz need assum label distinct set re consist two element term e constraint system ce union follow set constraint for everi l xe e singleton constraint set consist flg l for everi e everi l xe e set re ce least solut name intersect solut closur analysi e comput solut ce canon choic solut cours least one closur analysi bondorf jrgensen understood ad two constraint re effect inclus chang equal thu closur analysi comput approxim inform our return analysi comput almostlinear time use formul problem bondorf jrgensen wherea fastest known algorithm comput least solut ce use transit closur see palsberg schwartzbach a b equival prove three closur analys defin section equival when appli term label distinct use standard jen palsberg terminolog prefix point me me v lemma prefix point me me everi proof induct structur e lemma ce least solut fixm proof prove stronger properti solut ce exactli prefix point me two inclus consid first prove everi solut ce prefix point me proceed induct structur e base case consid x l clearli everi prefix point mx l induct step consid first l xe suppos solut c l xe also solut ce induct hypothesi prefix point me henc get m l met h l use definit m prefix point me sinc c l xe solut flg l consid suppos solut solut ce induct hypothesi prefix point me henc get me use definit m prefix point me ce solut second prove everi prefix point me solut ce proceed induct structur e base case consid x l clearli everi solut cx l induct step consid first l xe suppos prefix point m l xe then lemma also prefix point me induct hypothesi solut ce thu need prove satisfi flg l first these use prefix point result follow second one consid e lemma also prefix point me use assumpt get w f varbodyli result follow consid suppos prefix point me lemma also prefix point me induct hypothesi solut ce thu need prove everi l xe prefix point me f varbodyli result follow lemma ce least solut fstbe proof similar proof lemma theorem three closur analys defin section equival proof combin lemma closur analysi constraint form delta correct prove three closur analys defin section correct key defin entail relat definit mean constraint constraint system logic deriv a central result theorem ex theorem prove without consid solut involv constraint system definit constraint system h horn claus judgment h a entail h hold deriv use follow five rule reflex modu ponen a constraint system h lemma reflex transit solutionpreserv proof last properti immedi use discharg reflex consequ last properti transit suppos statement if h h prove induct structur proof h prove suppos h get h statement final get h prove solutionpreserv suppos solut l need prove everi h h solut l prove induct structur proof h follow lemma structur modu ponen use proof lemma weaken use proof lemma aid intuit inform read vare vare under assumpt a term e smaller flow inform term e next lemma state two specif constraint deriv constraint system redex inform first constraint say argument smaller flow inform bound variabl second constraint say bodi abstract smaller flow inform whole redex jen palsberg lemma c l xe proof flg l xe result follow var l modu ponen next lemma substitut lemma inform state term get smaller flow inform subterm get substitut one smaller flow inform lemma varu l vareux l vare proof induct structur e use reflex repeatedli inform next lemma state betareduct creat term smaller flow inform lemma cex proof proceed induct structur ex base case consid x l conclus immedi sinc x l normal form induct step consid first l xe suppos notic use reflex get l consid final three case suppos use reflex get suppos use reflex get suppos get former lemma get vare x l vare use transit final conclud vare x l inform next lemma state entail robust betareduct substitut lemma suppos re proof reflex lemma lemma result follow use weaken follow definit need state prove lemma definit set w e union follow set constraint for everi e everi l xe for everi e everi l xe e set re lemma w w proof immedi closur analysi constraint form delta next lemma substitut lemma like lemma state entail robust substitut lemma w e u varu l ceux l proof let ae denot substitut ux l proceed induct structur e base case consid x l j l result follow w e u lemma x l j l result follow w e u lemma induct step consid first also case result follow w e u lemma x l j l ae induct hypothesi ce ae thu need show everi first follow c l second consid e subterm subterm u case result follow w e u lemma consid final notic induct hypothesi ce ae ce ae thu need show everi l ae notic either l ye subterm ye subterm l ye subterm u case result follow w e u lemma prove betareduc ex e constraint system ex entail constraint system e theorem ex proof proceed induct structur ex base case x l conclus immedi sinc x l normal form induct step consid first l xe suppos induct hypothesi thu need show c l xe flg l l xe c l xe first follow use discharg second four case notic discharg c l xe everi xe first case suppos also subterm l xe result follow lemma second case consid subterm e l xe e again result follow lemma third case consid l xe yet again result follow lemma fourth case consid subterm e substitut aris contract redex lemma get result follow lemma consid final everi l xe xe three case suppos e induct hypothesi ce thu need show everi l xe e three case first case suppos l xe subterm result follow lemma delta jen palsberg second case consid subterm l xe result follow lemma third case consid subterm l xe l xe substitut aris contract redex lemma see ce result follow lemma suppos e proof case similar case omit detail suppos e see ce see w e result follow lemma theorem three closur analys defin section correct proof theorem see three analys equival appli term label distinct thu suffici prove one defin use constraint system correct proof two step step use lemma prove cex ex follow properti hold contain l ye ex contain l ze vare vare step suppos cex solut l suppos ex e prove induct length ex e base case immedi induct step suppos theorem cex solut l induct hypothesi prove four case consid first suppos lemma get cex final result follow use cex solut l suppos l xe ez contain ze flg lvare step proof get ex contain l we cex final result follow use cex solut l last two case suppos e contain either l xe respect case similar second one omit detail final prove subjectreduct result theorem ce solut l solut l proof immedi theorem lemma acknowledg author thank torben amtoft nil klarlund anonym refere help comment draft articl closur analysi constraint form delta r type infer self analysi object dynam multipl inherit effici closur analysi reachabl lambda calculu syntax semant similix manual automat autoproject higher order recurs equat automat autoproject recurs equat global variabl abstract data type effici analys realist offlin partial evalu bind time analysi higher order untyp function languag character type polymorph type di ciplin base program analysi flow analysi lambda express correct bindingtim analysi safeti analysi versu type infer safeti analysi versu type infer partial type analysi effici implement function program replac function paramet global variabl self power simplic select lightweight closur convers revis octob tr self power simplic bind time analysi high order untyp function languag objectori type infer automat autoproject recurs equat global variabl abstract data type automat autoproject higher order recurs equat safeti analysi versu type infer partial type base program analysi objectori type system select lightweight closur convers setbas analysi ml program safeti analysi versu type infer type infer self flow analysi lambda express preliminari version ctr jen palsberg patrick okeef type system equival flow analysi acm transact program languag system topla v n p juli jen palsberg equalitybas flow analysi versu recurs type acm transact program languag system topla v n p nov paolo di blasio kathleen fisher carolyn talcott controlflow analysi calculu concurr object ieee transact softwar engin v n p juli suresh jagannathan peter thiemann stephen week andrew wright singl love it mustalia analysi higherord languag proceed th acm sigplansigact symposium principl program languag p januari san diego california unit state flem nielson hann rii nielson infinitari control flow analysi collect semant closur analysi proceed th acm sigplansigact symposium principl program languag p januari pari franc kirsten l solberg gasser flem nielson hann rii nielson systemat realis control flow analys cml acm sigplan notic v n p aug flanagan matthia felleisen componenti setbas analysi acm sigplan notic v n p may anindya banerje modular polyvari typebas closur analysi acm sigplan notic v n p aug flanagan matthia felleisen componenti setbas analysi acm transact program languag system topla v n p march philipp meunier robert bruce findler paul steckler mitchel wand selector make setbas analysi hard higherord symbol comput v n p decemb neal glew jen palsberg typesaf method inlin scienc comput program v n p august david herman philipp meunier improv static analysi embed languag via partial evalu acm sigplan notic v n septemb christian fecht helmut seidl propag differ effici new fixpoint algorithm distribut constraint system nordic journal comput v n p winter philipp meunier robert bruce findler matthia felleisen modular setbas analysi contract acm sigplan notic v n p januari thoma jensen type program analysi essenc comput complex analysi transform springerverlag new york inc new york ny murali krishna ramanathan ananth grama suresh jagannathan static specif infer use predic mine acm sigplan notic v n june v krishna nandivada suresh jagannathan dynam state restor use version except higherord symbol comput v n p march jen palsberg christina pavlopoul polyvari flow inform intersect union type proceed th acm sigplansigact symposium principl program languag p januari san diego california unit state andrew tolmach dino p oliva ml ada stronglytyp languag interoper via sourc translat journal function program v n p juli h seidl m h srensen constraint stop higherord deforest proceed th acm sigplansigact symposium principl program languag p januari pari franc andrew k wright suresh jagannathan polymorph split effect polyvari flow analysi acm transact program languag system topla v n p jan anindya banerje thoma jensen modular controlflow analysi rank intersect type mathemat structur comput scienc v n p februari jen palsberg typebas analysi applic proceed acm sigplansigsoft workshop program analysi softwar tool engin p june snowbird utah unit state david a schmidt tracebas abstract interpret oper semant lisp symbol comput v n p may