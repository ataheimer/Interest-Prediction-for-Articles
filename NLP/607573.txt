t hierarch reachabl graph gener petri net a reachabl analysi gener approach analysi petri net due wellknown problem statespac explos gener reachabl set reachabl graph known approach often becom intract even moder size net paper present new method gener repres reachabl set reachabl graph larg petri net composit hierarch way represent relat previous known kroneckerbas represent contain complet inform reachabl mark possibl transit consequ properti possibl reachabl graph decid decid use kroneck represent central idea new techniqu divid conquer approach base netlevel result net decompos reachabl graph part gener combin whole approach realiz complet autom way integr petri netbas analysi tool b introduct petri net pn establish formal describ analyz dynam system among larg number avail analysi techniqu gener set reachabl mark possibl transit gener approach theoret applic everi bound net result graph denot reachabl graph rg occurr graph set reachabl mark denot reachabl set rs reachabl mark pn build vertic graph transit describ edg edg may label correspond transit identifi pn descript rg contain full inform dynam behavior pn easili analyz gain result function behavior requir verif system properti rg gener algorithm comput successor mark discov mark start initi mark net approach conceptu simpl integr softwar tool develop analysi pn practic unfortun size rg often grow exponenti size pn term place token henc rg gener usabl rel small net much smaller practic relev exampl are consequ larg number approach publish increas size rg handl straightforward idea increas avail comput power memori increas size rg done use power parallel distribut comput architectur exampl approach found describ implement variou parallel architectur workstat cluster use rg gener approach describ rg explor gener stochast petri net gspn howev appli rg explor pn well gener problem paralleldistribut state space gener still exponenti grow problem attack increas avail resourc linearli addit problem effici parallel rg gener aris effici realiz rg gener algorithm distribut way nontrivi sinc differ distribut task depend requir synchron introduc addit overhead particular speedup reach parallel implement model depend make problem effici gener purpos realiz parallel rg gener even harder altern handl larg rg reduc size without loos relev inform idea exploit two differ level first net simplifi reduc number place transit correspond approach denot reduct rule publish uncolor pn subsequ color pn cpn reduct rule defin respect properti interest thu first properti need defin reduct rule preserv properti introduc yield set predefin rule set predefin properti main drawback reduct rule applic restrict rel specif structur consequ gain obtain reduct rule net rel small reduct rule time use priori step solv problem larg rg second approach reduc size rg perform reduct level reachabl mark approach requir composit state space gener gener reduct interleav differ techniqu exploit idea exist usual way defin complet pn collect interact compon usual compon rg much smaller complet rg thu rg compon gener effici reduc accord reduct rule preserv relev properti subsequ reduc compon state space compos approach context compon interact via synchron transit approach cpn introduc rg compon gener parallel consid local transit addit synchron graph describ synchron transit defin interleav local synchron transit fire complet rg gener properti hold complet rg prove similarli complet compon rg gener first final combin reduc import properti like deadlock bounded preserv composit analysi method placebord subnet present also base interleav composit behavior preserv reduct differ approach compon compos via synchron transit propos approach introduc compact represent complet rg effici way character rs idea incid matrix character rg compos via kroneck oper incid matric compon rg rs subset cross product compon reachabl set know rs rg compon rs rg cpn complet character approach hierarch rg gener propos hierarch structur cpn similar previou approach rg describ use compon rg compos incid matric via kroneck oper approach requir complet net structur appropri way disadvantag method effici rg gener compon structur defin model method sensit compon structur techniqu reduc size rg behavior preserv reduct depend requir result rel detail result requir reduct fail small effect size rg method effici rg comput includ stubborn set method elimin unnecessari interleav rg gener exploit symmetri reduc rg method addit comput necessari rg gener cpn observ sever structur condit method use effici way ie exploit symmetri cpn contain symmetr part otherwis reduct effect idea symmetri exploit combin compact represent rg compos compon rg describ quantit analysi techniqu base order binari decis diagram obdd reli symmetri well pastor et al describ obddalgorithm mainli bound pn apart techniqu character complet reduc rg effici compact way sever approach deriv result without gener rs rg exist usual approach yield partial result sens formal prove result disprov find failur state techniqu includ simul invari analysi paper introduc approach relat work present rs rg handl composit way allow represent gener larg rssrg contrast known method perform composit analysi approach repres complet rg behavior preserv reduct appli consequ arbitrari properti check result rg howev also possibl combin approach behavior preserv reduct although consid paper propos techniqu complet autom larg class pn includ pn cover pinvari present approach uncolor pn simplifi notat keep mind everi cpn finit color set unfold uncolor pn obviou approach appli larg class cpn too structur paper follow sect pn class defin reachabl invari analysi introduc sect describ definit region divid pn subnet sect abstract oper describ allow us abstract detail net descript reduc size rs afterward sect introduc hierarch composit represent rs rg then differ analysi approach propos exploit hierarch represent rs rg sect contain nontrivi exampl clarifi advantag new approach compar convent rg gener basic definit known result assum reader familiar pn relat basic concept detail fundament refer net tupl finit nonempti set place finit nonempti set transit backward forward incid function initi mark initi mark special case mark mark interpret integ row vector includ per place p one element describ number token place p give set input place transit t give set output place analog defin notion directli extend set sequel consid connect net ie place transit least one incom one outgo arc transit enabl mark transit enabl fire chang mark p p mark indic tm t denot enabl describ set enabl transit consid fire sequenc yield definit languag set reachabl mark pn reachabl graph rgpn contain node everi rspn arc necessari arc label correspond transit andor transit rate stochast petri net spn spn extend class slightli associ exponenti distribut fire time transit defin function set nonneg number w t m rate exponenti distribut associ transit mark assum w t m enabl rg spn result rg correspond pn ad transit rate edg rs ident case spn use perform analysi analyz continu time markov chain describ spn incid matrix c matrix contain place p p row transit column cp use defin netlevel properti net pn cover posit invari place vector cover posit invari transit invari yt exist algorithm comput invari given although time complex exponenti worst case usual invari comput much easier gener rs rg incid matrix invari ensur certain properti howev complet character rs follow theorem summar classic result theorem pn set p invari x set invari follow result hold ffl mark reachabl mark integ vector z exist mcz impli everi rspn integ vector z exist ffl x x analog ffl reachabl mark relat mx hold x x ffl pn cover posit p invari bound ffl pn bound live cover posit invari proof proof found standard book pn ffi although invari offer insight dynam behavior model system time suffici obtain requir result thu rs rg gener detail analysi usual first rs gener arc rg comput second step follow algorithm comput rs pn termin rs contain finit number mark gener rs pn u remov u od od set u contain mark successor gener wherea rs contain gener mark u simpl data structur like queue stack suffici sinc element ad remov rs data structur allow effici membership test necessari consequ rs realiz use appropri hash function tree like structur allow membership test effort logarithm number element problem hash possibl collis usual hard avoid collis gener pn therefor softwar tool use binari tree gener rs briefli analyz effort requir gener rg binari tree use store rs let n number mark rs let n delta number arc rg henc mean slightli extend version catch infinit rs see cover graph construct pn literatur number successor per mark d time requir gener rs order approxim delta n delta log n addit memori limit taken account even sophist data structur use rs number mark gener standard workstat lie pn includ larg number place valu much smaller case certain symmetri order binari decis diagram obdd abl handl extrem larg size rs rg see among other pastor et al describ obddtechniqu appli pn howev use obdd requir exist symmetri yield compact represent rs gener arc rg gener second step rg repres n theta n incid matrix q transit ident rate relev q store boolean matrix otherwis q includ requir inform autonom region pn section defin part pn latter substitut less detail represent abstract oper part denot region place border input transit output border differ hierarch construct pn area place transit refin howev definit natur behavior orient point view see also region describ part act own commun perform receiv token environ place border input send token environ transit border output set transit r r correspond function pn restrict p r r respect pn r defin region iff input bag transit r disjoint ie p r region pn r set output transit consist r analog set input transit region describ autonom part pn use defin hierarch structur region minim contain region proper subset concept illustr follow exampl serv run exampl accomplish line argument exampl consid producerconsum model produc success fill two buffer b b fig show correspond pn place fp p pg describ state produc place fp pg buffer place whose capac limit place fp pg buffer b alway fill two itemstoken onc b obtain singl token model contain two consum equal behavior consum nondeterminist take token buffer first buffer consid two consum will consum place fp p pg give state consum model clearli artifici intend illustr concept minim region model shown fig shade polygon proposit pn region n r n minim region disjoint ie n r n r minim n r n r p minim region defin partit ie exactli one minim region ri ri region close union ie n r n r region r t r defin subnet n r region minim region coincid equival relat conflict relat p p produc buffer b consum cbuffer b figur producerconsum model partit minim region proof straightforward net place least one outgo arc case one need defin addit region consist place empti set output transit minim region gener use simpl algorithm shown below ut remov ut remov fflt fflt ut od od algorithm termin set contain transit use defin region accord def ie fflt gener abstract view let pn petri net want enhanc inform associ place follow kind vector definit pvector v p place p p vector v p zz nm index entri v p referenc v p x x obtain lower index valu aggreg function ag zz nm thetain n gamma pvector mark defin agv linear combin lc zz nm theta zz nm theta gamma zz nm pvector v v b defin lcmjv tj jv b tjjv tj c lcm give least common multipl two integ gcd integ vector greatest common divisor element note v c induct defin extend net result sequenc net transform base linear combin sequenc transit pn ffl denot empti sequenc extend net tupl n induct defin follow n extend net let better readabl abbrevi result new vector linear combin wrt transit t use fv g denot vector use gener new extend net n st st st extend net n extend net tnftg st st st st st st st note c c b construct addit distinguish ordinari place p ord gener extens sequenc denot p agg definit separ avail vector total set vector v order ensur vector use one step sequenc s restrict made order focu linear combin relev follow net transform basic mimick comput pinvari accord n contain transit exactli describ extend net p invari realiz place p p agg aggreg place p repres p invari mark constant ie interpret mark aggreg place macro mark includ abstract view detail mark sinc complet net exchang token environ macro mark repres pinvari invari howev sequenc contain subset transit mark aggreg place repres possibl macro mark subset place belong p invari case mark aggreg place chang whenev token ad remov partial pinvari repres sinc net transform follow comput pinvari effort limit effort comput pinvari often effort much smaller sinc subset transit use s exampl go detail come back run exampl contain p invari describ formal sum tinvari fig show extend net sequenc hatch arc dot indic differ n ffl minim region connect via t t merg shade polygon denot new larger region n pvector correspond linear combin given tabular below p p figur extend net note definit extend net defin arc weight new arc connect new place weight arc origin net allow consid bidirect arc selfloop appropri arc connect place p p fig illustr place repres set place p ord give aggreg mark mark set aggreg inform crucial point deduc hierarchi describ way split extend net high level net set low level net obtain desir hierarchi formal aggreg subsequ consid reachabl languag invari net extens proof consid induct transit sequenc s initi trivial fulfil lemma p agg induct step consid st result v v v b new step the case p p trivial n st sinc place gamma i remain unchang consid induct fire sequenc oe initi hold definit induct step consid induct assumpt ensur show extend oe transit accord definit successor mark extend net induct assumpt replac mp equat abov observ gamma i remain invari z p ffl obtain st st z ut way place ad net extens sequenc ensur reachabl set languag remain same lemma extend net n proof induct sequenc s initi trivial fulfil induct step start special case directli impli equal case occur eg v gener case give proof contradict case st oe st oe possibl pn henc oe enabl pn ie less token place p p contradict definit extend net chang respect new place case oe possibl pn st henc oe enabl pn st ie less token place st np accord lemma st zt obvious z zt obtain contradict summari equal hold equival languag follow line argument ut direct consequ lemma invari remain valid tinvari due languag equival pinvari due addit invari cf theorem furthermor decid place like p exampl transit t whether given initi mark p ensur transit dead due whether place safe omit sinc mp gamma p t rs former case clear net live far describ way add place net without chang reachabl set languag notion extend net formal prop introduc hierarch net simplifi argument hierarch net inde includ reachabl set languag n ffl key issu hierarchi abstract higher level state subsystem must repres less detail lower level use aggreg place obtain aggreg state represent notion subsystem build concept region let rn ffl denot set minim region wrt extend net extend net transit r region n r rn ffl new place connect n r region contain tffl consequ merg region n r yield new region n r accord prop sinc start partit region result set region partit again partit less fine becom intern n r fflt r new place give aggreg descript intern behavior n r wrt transit t follow procedur sequenc transit yield n partit region region intern transit aggreg place situat decomposit extend net high level net use aggreg descript set low level net result region intern behavior give twolevel hierarchi aim for formal high level net given extend net n result project respect extend net correspond high level net correspond project gamma exampl fig show high level net extend net run exampl fig p p figur high level net proof use previou lemma equal n ffl n hn deduc omit place releas enabl condit thu increas rs omit transit isol sinc element pre postset transit use linear combin thu contain anymor isol transit effect rs ut pinvari hn linear combin pinvari n ffl henc n ffl cover pinvari hn consequ guarante finit rshn n ffl cover pinvari lemma state hn inde consid abstract net detail net behav way consist abstractionaggreg region extend net contain place set use transit t show intern behavior allow defin nontrivi isol lowlevel net definit low level net region r extend net n respect n ffl l h pt ln correspond region r h hn differ transit ln trivial neglect otherwis ln nontrivi observ both hn ln pick aggreg place element v na neglect inform suffici repres linear combin contribut to ln region r hn share place transit r common net element form interfac hn commun ln asynchron manner hn put token via transit send signal ln experi output behavior fire r notion hierarchi justifi sinc hn abstract detail insid ln token p describ socal macro mark ln r repres aggreg behaviour ln howev ln merg hn observ detail behavior formal describ extend ln en defin analog en ordinari pn rsen len defin befor relationship hn ln symmetr hn aggreg descript ln p r vice versa seen ln hn provid environ ln interact asynchron manner ln lack aggreg descript hn behavior henc reachabl ln cannot seen independ hn reachabl set rsln ln given environ hn need notion en result project rsenjln follow section use concept give hierarchicalcomposit represent rsn base rshn rsij ln i exampl fig show extend low level net two nontrivi low level net indic shade polygon run exampl result produc part transit becom intern consum part transit becom intern consum region p becom part ttt v use construct region transit intern transit obvious select massiv impact result hierarch net descript consider optim sequenc subject investig state formul goal rule thumb follow clear nontrivi ln result merg adjac region ie n region s becom element s p figur low level net extend low level net consum region p p p figur low level net extend low level net produc region deriv hierarchi divid conquer strategi sequenc yield set nontrivi ln complex equal distribut set mean region merg whose result cover major net aggreg place introduc overhead especi build linear combin impos unaccept increas net element reason exponenti worst case time complex invari comput case freedom select transit consid subset transit henc transit prefer wrt n rel small implement propos approach integr heurist rule gener appropri transit sequenc first experi sever exampl eg exampl present sect encourag program automat choos sequenc transit partion complex net nontrivi part nontrivi hpn hierarch represent rs rg divid pn hn ln allow us gener repres rspn rgpn space time effici way notat conveni assum pn decompos one hn j ln consecut number j furthermor assum sequel reachabl set hn extend ln finit consequ reachabl set isomorph finit set consecut integ thu let x correspond xth mark rshn use x x interchang repres rghn nh theta nh two mark rghn one transit exist one transit x exist describ list transit index use gener notat q h x y fulfil x reachabl set rsj ln j depend environ given hn henc consid en e correspond j defin rsj project rse place j sinc ln j hn share place project rsj onto place mark g rsj macro mark allow partit rsj macro mark use rsj gener sinc full detail hn irrelev ln level one redefin transit fire mark depend respect rshnj p j p h g rsj en formal prop obtain clear notion rsj practic howev comput rsj perform effici use macro mark depend transit sinc transit local hn ignor result set rsj might contain mark rspn elimin subsequ step cf sect let g denot rsj x x g set mark belong mark x g rsj mark set rsj x indistinguish hn ie mark place same sinc reachabl set assum finit set rsj x repres set integ g mark x rshn uniqu determin macro mark ln denot x j macro mark ln j belong mark x obtain x mark pn character use j dimension integ vector jg xh describ mark rshn mark rsj x j h describ macro mark lnj mark hn equal xh impli xh j p h p sinc previou relat hold integ vector previous introduc form determin mark extend net defin hierarch gener reachabl set observ number mark rs h pn equal lemma hierarch gener reachabl set reachabl set relat follow proof previou lemma impli rspn j jg rspn construct hierarch gener reachabl set rs h pn follow second relat follow sinc equat describ compact way repres huge reachabl set compos smaller set observ reachabl set hundr mark enough describ set sever million billion mark keep represent compact assur reachabl set ln roughli size cours hard assur priori possibl gener region way includ similar number place transit often suffici yield reachabl set similar size differ region howev reachabl set origin net equal rs h pn includ hierarch gener reachabl set comput rspn part rs h pn reachabl graph repres compact form similarli compact represent reachabl set first all defin effect transit local ln two differ class transit distinguish respect ln j h set local transit ln j j set transit describ commun ln j hn effect transit mark level defin use boolean matric usual assum multipl boolean valu defin boolean summat boolean or thu let x y n j x theta n j y matrix describ transit reachabl graph ln j due fire transit t q transit enabl mark x rs j x fire yield successor mark rs j y remain element matric sinc transit lt j modifi mark hn q lt j furthermor defin n j xn j y otherwis n n theta n matrix diagon elsewher nm n theta matrix element equal reason definit transit modifi mark ln j cannot disabl ln j exactli describ matric defin q j enabl ln j mark x hn defin q h case q h matric describ effect transit respect hn singl ln next step consid effect transit respect global net transit enabl mark straightforward prove enabl condit sinc q j enabl depend mark part transit belong to transit enabl enabl part simultan similar way character transit mark transit enabl mark fire yield successor mark y h relat allow us character reachabl graph complet eleg way defin kroneck oper matric definit kroneck product aomega b na theta matrix nb theta mb matrix b defin nanb theta mamb matrix kroneck sum phi b defin squar matric aomega nb thetan na thetan definit kroneck sumsproduct includ data type matrix element inde kind algebra ring use particular consid boolean real valu sinc kroneck product associ defin gener j matric j dimens l j way kroneck sum defin n l j observ c matrix column consid number nonzero element c term number nonzero element j denot number nonzero element matrix nza obtain kroneck sum product compact way repres huge matric implicitli kroneck oper realiz linear j dimension number row indic matrix c comput row indic matric j use relat x row index c d x j row index j n j number row j way column indic comput relat column index c d j column index j j number column j represent denot mix radix number represent obvious x y determin x j y j vice versa complementari inform kroneck oper mix radix number scheme refer consid exampl recommend mix radix number scheme well appli number mark rs h pn howev use two level scheme first number describ hn mark second number comput number ln mark thu mark use number scheme rg h pn repres use kroneck product boolean matric defin q h incid matrix reachabl graph consid transit t use two level mark number q h block structur n h block matric includ transit mark belong hn mark x mark belong hn mark due transit net submatrix repres kroneck product ln matric form describ compact represent huge matrix assum q boolean matrix describ transit rspn appropri order mark ie mark rgpn rg h pn follow mark rg h pn n rgpn initi mark part rgpn rg h pn represent impli successor reachabl mark comput use matric q h and consequ also reachabl analysi perform use matric incid matrix rg h pn repres compact represent kroneck represent definit prefer appli variou analysi algorithm shown sect local transit caus specif matrix pattern nonzero element sinc q x x equal ident matrix lt j j q j y l j omega u j x collect local transit one matrix l x obtain follow represent submatrix q h l x distinguish differ local transit ln distinct necessari transit visibl exclud set lt j way possibl keep relev inform represent rg h pn consid spn transit enhanc transit rate thu q contain real instead boolean valu howev kroneck represent matrix similar transit mark independ transit rate matrix q h given case element q interpret real valu respect exampl run exampl rather small expect practic gain repres rs rg composit way propos section howev even simpl exampl represent becom compact exampl allow us clarifi gener concept follow tabl summar number mark column rs number transit rg correspond column variou net consid here obvious hn rg significantli reduc compar pn mark descript successor mark ap ap p p p p p tnr tnr tnr tabl reachabl mark possibl transit hn rs rg transit pn mark possibl transit hn shown tab macro mark respect ln defin project hn mark place ap p macro mark ln defin project hn mark ap p p case macro mark gener extend net rs j matric q j comput ln macro mark repres averag mark small number surpris sinc ln consist intern two place connect via singl transit macro mark abstract intern place token resid second ln intern detail hidden aggreg descript use hn consequ macro mark ln repres averag detail mark kroneck represent requir transit repres complet reachabl graph transit cours comparison consid overhead store differ matric kroneck represent howev overhead depend number transit st number ln quantiti neglig compar number mark consid larg net hierarch gener reachabl set rs h includ mark mean mark unreach consid point subsequ section hierarch analysi approach introduc analysi approach reli kroneck represent rgpn particular necessari introduc method character rspn superset form rs h pn central idea reachabl analysi number mark rs h pn perfect hash function mark rspn first exploit effici reachabl analysi sgspn class gener spn consist compon synchron via transit work kemper use similar approach here necessarili reli it see eg altern let number mark rs h mark hn x let rx boolean vector length nx use store result reachabl analysi thu rx h x l mark termin formal use one boolean vector per hn mark obvious possibl store vector consecut singl boolean vector appropri length reachabl analysi requir apart vector rx differ matric introduc previou section set u store unexplor mark similar set u use gener rs howev u store integ pair instead complet mark vector let number initi mark rx h x l initi remain vector compon zero addit u initi follow algorithm use determin reachabl mark gener structur rs pn u remov j j l comput successor subnet j h q h comput successor subnet hn j j l exist els l step indic algorithm exploit fact fire transit alway yield uniqu successor mark therefor row matrix q includ one element approach easili extend pn differ successor mark possibl situat occur net probabilist output bag transit allow sinc algorithm comput successor mark reachabl mark straightforward prove gener structur rs gener rspn termin rspn finit case here sinc rs h pn assum finit remain point comparison gener structur rs gener rs assum reachabl set contain n mark averag transit possibl mark theoret time complex gener rs ond log n insert member function rs use log n oper complex gener structur rs ond sinc boolean vector allow us test o whether mark reach befor reduct logarithm factor seem much first glanc howev approach use larg reachabl set impli reduct least order magnitud addit constant behind asymptot complex much lower gener structur rs reason oper perform simpl integ oper sever oper gener rs time consum exampl new mark found gener rs data structur hold alloc insert data structur store alreadi gener mark sinc data structur usual tree pointer modifi gener structur rs oper requir set bit vector r thu usual expect improv run time around two order magnitud larg reachabl set howev appli gener structur rs pn decompos first reachabl set matric subnet gener complex problem larg net much lower reachabl analysi also seen exampl present below apart time complex also compar space complex cours also differ memori requir depend concret exampl howev net decompos ln roughli ident reachabl set size size rs h pn rnpn differ much ie sever order magnitud assur size lnhn reachabl set matric neglig compar size complet reachabl set graph experi show approach allow us handl much larger reachabl set addit advantag gener structur rs make use secondari memori effici way sinc vector r structur subvector successor mark comput consecut subvector possibl preload requir subvector secondari memori reachabl set comput set valu vector r decid o whether mark reachabl not furthermor successor mark mark comput kroneck represent local transit constant time other time linear number subnet sinc kroneck represent includ inform transit yield successor even successor reachabl specif transit comput base basic step standard algorithm model check appli net similar way kroneck represent exploit quantit analysi spn basic step realiz product vector sum kroneck product matric howev step alreadi known numer analysi combin variou iter numer analysi techniqu thu kroneck represent allow analysi larg spn model cannot handl use standard mean detail refer literatur exampl size run exampl small useless compar runtim reachabl graph gener instead briefli consid unreach mark appear hierarch represent alreadi mention rs h contain mark reachabl exampl unreach mark consid mark form vector includ number token place p gamma p place p p p consid possibl mark obvious three place part pinvari sum token place equal hierarch gener reachabl set possibl distribut token place p p p includ howev reachabl analysi show mark reachabl place p empti reason restrict explain consid behavior net detail token p impli fire t sinc p empti fire and sinc p nonempti fire also t fire token resid p transfer p fire t howev mean fire p empti restrict assur p empti mark place p gamma p shown abov global restrict depend whole net visibl isol part mention mark belong rs h reachabl analysi show reachabl part rs two optim use improv gener structur rs first optim notic certain unnecessari interleav due intern transit elimin idea local transit differ ln interfer thu lt enabl mark sequenc possibl yield ident successor mark consequ necessari consid one sequenc gener set local transit belong differ ln enabl mark transit sequenc describ subset transit occur order describ need consid reduc number possibl sequenc l delta l l delta way time complex reachabl analysi reduc second optim approach discuss reduc time space complex idea reduc priori mark set ln combin mark alway togeth reachabl not simpl exampl consid two mark x rsi pair transit enabl x fire yield enabl yield successor mark x x reachabl whenev reachabl vice versa denot ident reachabl mark obvious ident reachabl hold mark irreduc subset matrix l x y shown condit relax howev extens beyond scope paper mark ident reachabl aggreg priori aggreg case mean set ident reachabl mark substitut singl aggreg mark transit enter leav one mark subset substitut transit enteringleav aggreg mark transit mark subset substitut transit start end aggreg mark transform easili perform ad matric q row column belong mark subset aggreg size rsi rgi reduc aggreg impli size rs h pn also effort reachabl analysi reduc too reachabl analysi reachabl aggreg mark impli mark repres aggreg mark also reachabl vice versa aggreg mark reachabl detail mark also reachabl optim depend net consid howev net effort reachabl analysi reduc significantli applic exampl jsj reg total reg nontr p agg rs h rshn max rsj percent rspn tabl hierarch represent sequenc run exampl consid far use illustr formal concept order demonstr applic approach consid product cell subject model analysi varieti tool known nontrivi product cell model origin exist product cell industri set physic consist six compon elev rotari tabl rotabl robot two extend arm travel crane gen hierarchi gen struct rs jsj cpu user cpu user tabl comput characterist sequenc two conveyor belt product cell perform transport process metal plate cyclic pipelin feed conveyor belt transport metal plate elev tabl tabl lift plate robot robot insert plate press take press press onto second conveyor belt origin plate leav system second belt order close system crane instal put plate second belt onto feed belt number plate within system constant thank work heiner et al petri net model exist consid process plate refin use organ model size howev dynam behavior model defin unless refin subnet avail full detail kind hierarchi common model purpos useless term analysi henc analysi start flat placetransit net place transit known net live bound reachabl set contain mark reachabl graph transit algorithm deriv hierarchi start partit minim region consid sequenc s start transit intern minim region which case transit exampl subsequ consid small region first fig show total number region decreas intern region consid hand number nontrivi region increas initi phase sinc algorithm prefer small region final decreas trivial region left nontrivi region merg tabl indic influenc hierarch represent rs give number region nontrivi total number aggreg place p agg cardin hierarch reachabl set rs h reachabl set high level net rshn maxim number mark observ among low level net qualiti whole construct shown column percent rspn give reachabl fraction rs h tabl give correspond comput time second comput twolevel hierarchi subsequ comput reachabl set rspn contain rs h pn time given cpu time user wall clock time time observ sparcstat mb main memori mb virtual memori mhz cpu obvious comput time uncrit number aggreg place explod worth mention take slightli minut gener complet reachabl set reachabl graph repres space effici way megabyt memori space necessari gener repres rg rs valu excel compar convent rg gener algorithm model analyz similar workstat use differ pn analysi tool rg gener tool prod need hour see small runtim storag requir show much larger system handl approach also analyz open version product cell tool abl gener rs see version method need minut real time gener rs mark rg arc alreadi notic comput gener set semiposit pinvari difficult net approach close relat invari comput comput extend net sequenc cover transit obtain gener set pinvari well howev thank j spranger translat model apnn format use implement length sequenc region nontrivi region figur total number region number nontrivi region length sequenc place region figur number aggreg place number nontrivi region extrem suitabl consid subset transit order remain activ hn pragmat point view approach allow us consid transit handl accept comput cost stop deriv hierarchi becom expens fig clearli indic care select transit avoid high comput cost howev sharp increas step hierarchi deriv stop step pinvari comput step necessari henc fig also illustr difficulti invari comput observ accord result tabl number region limit number aggreg place give suitabl paramet stop automat hierarchi gener make sens conclus propos new approach effici gener compact represent reachabl set graph larg pn contrast approach techniqu appli gener net without definit hierarch structur without inher symmetri structur pn asynchron interact region done automat algorithm use basic step relat invari comput make transit intern region algorithm consid sequenc distinct transit arbitrari principl implement use heurist rule order structur net region approxim size algorithm stop user given number region obtain usual number region chosen larg avoid complex hn net cover pinvari termin guarante howev cannot ensur termin gener pn problem reachabl set part hn ln becom unbound even reachabl set complet net bound problem occur net cover pinvari nontrivi exampl consid paper illustr experi algorithm exercis set exampl new approach allow time space effici gener represent huge reachabl set graph is cours step toward analysi complex pn current research aim integr algorithm modelcheck kroneck represent reachabl graph first result indic approach allow analyz much larger net convent mean addit kroneck represent use effici analysi spn use numer analysi techniqu overview techniqu refer r state space construct steadi state solut gspn sharedmemori multiprocessor abstract petri net notat complex kroneck oper spars matric applic solut markov model transform decomposit net hierarch high level hierarch structur superpos gspn structur analysi approach larg markov chain state beyond parallel state space explor gspn model wellform colour net symbol reachabl graph distribut simul storag altern larg structur state space modular state space analysi colour distribut statespac gener discretest stochast model ieee tran a reduct theori colour asynchron composit high level petri net base design analysi reactiv system case studi develop control softwar manufactur system reachabl tree highlevel colour colour reachabl analysi base structur represent formal develop reactiv system analysi larg gspn model distribut solut tool simpl fast algorithm obtain invari gener petri net perform analysi use stochast hierarch reachabl graph gener bound petri net analysi use boolean manipul compar studi method effici reachabl analysi numer solut stochast automata network class modular hierarch cooper system composit analysi place border subnet state art report stubborn set tr automat verif finitest concurr system use tempor logic specif transform decomposit net reduct theori colour net concurr workbench use partial order effici verif deadlock freedom safeti properti symbol reachabl graph colour petri net color petri net vol autom parallel discret statespac gener gener hierarchi gspn analysi structur analysi approach larg markov chain commun concurr distribut simul petri net hierarch reachabl graph bound petri net concurrentsoftwar analysi structur solut asynchron commun stochast modul hierarch structur superpos gspn applic theori petri net limit possibl autom protocol analysi analysi bistat hash satur modular state space analysi colour petri net parallel state space explor gspn model toolbox analysi discret event dynam system reachabl analysi base structur represent scec survey equival notion net base system simpl fast algorithm obtain invari gener petri net reliabl hash without collos detect composit analysi placebord subnet hierarch high level petri net complex system analysi superpos gener stochast petri net petri net analysi use boolean manipul storag altern larg structur state space state space construct steadyst solut gspn sharedmemori multiprocessor analysi larg gspn model ctr michael muskulu daniela besozzi robert brijder paolo cazzaniga sann houwel dario pescini grzegorz rozenberg cycl commun class membran system molecular dynam theoret comput scienc v n p march