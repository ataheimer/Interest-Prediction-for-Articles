t rewrit rule bisimul congruenc a dynam mani calculi clearli defin reduct semant work calculu howev understand oper congruenc fundament often given tractabl definit characteris use label transit semant paper consid calculi arbitrari reduct semant three simpl class firstli ground term rewrit leftlinear term rewrit class essenti action calculi lack substant name bind gener definit label transit given case uniformli set rewrit rule without requir prescript addit notion observ give rise bisimul congruenc test theori shown bisimul fragment cc recov transit gener fragment ambient calculu cardelli gordon ski combin also discuss briefli b introduct dynam behaviour mani calculi defin clearli reduct semant compris set rewrit rule set reduct context may appli structur congruenc defin atom intern reduct step term work calculu howev composit understand behaviour arbitrari subterm given oper congruenc relat usual requir literatur contain investig congruenc larg number particular calculi often given tractabl definit characteris via label transit relat captur potenti extern interact subterm environ defin label transit give rise satisfactori oper congruenc gener requir mix calculusspecif ingenu routin work paper problem address arbitrari calculi certain simpl form give gener definit label transit depend reduct semant without requir addit observ prescrib first consid term rewrit ground leftlinear rule arbitrari signatur without structur congruenc consid calculi arbitrari signatur contain symbol j structur congruenc consist associ commut unit leftlinear rule nontrivi set reduct context suffic exampl express ccsstyle synchronis essenti comput laboratori univers cambridg email petersewellclcamacuk introduct class action calculi control number argument case defin label transit prove bisimul congruenc give comparison result background reduct label transit reduct definit dynam or smallstep oper semant lambda calculi sequenti program languag commonli given reduct relat calculu rewrit rule xmn gammam nx fi reduct appli context program lan guag control order evalu usual requir done abstract machin state reduct them adhoc mathemat object elegantli one give definit structur oper semant so style plotkin plo state term languag sometim augment eg store reduct given syntaxdirect induct definit explicit reformul use rewrit rule reduct context first given felleisen friedman ff we neglect semant bigstepevaluationnatur style contrast recent definit oper semant process calculi primarili given label transit relat central reason differ math matic lambda process term quit differ intend interpret standard interpret lambda term function program specifi comput may either termin termin result cannot reduc further confluenc properti ensur result term uniqu exist implicitli examin either equal coarser notion theori process howev inherit automata theori view process term may reduc intern interact environ label transit allow interact express reduct may creat destroy potenti interact termin process usual central concept structur term even term cannot reduc consid examin addit technic reason definit reduct process calculu requir either auxiliari label transit relat nontrivi structur congruenc exampl consid cc fragment below standard semant reduct p gammaq also label transit p ff gammaq p ff gammaq repres potenti p synchronis ff defin so ff gammap gammap com ff par gammaq gammaq gammaq gamma either gamma ff gamma ff gamma note berri boudol bb follow work banatr le metay bm gamma languag semant definit process calculi could simplifi work modulo equival allow part redex brought syntact adjac present term chemic abstract machin slight variat give reduct semant cc fragment abov consist rewrit rule q set reduct context given structur congruenc j defin least congruenc satisfi use j right give exactli reduct befor toy calculu two similar complex calculu mpw build en howev milner given reduct semant much simpler rather delic so definit label transit system mil follow thi recent name pass process calculi often defin reduct semant form eg ho san ae nm join fg blue bou spi ag dpi sewb d rh ambient cg calculi turn oper congruenc confluent calculi definit appropri oper congruenc rel straightforward even usual case dynam express reduct relat exampl simpl eager function program languag base type int integ termin state program type int clearli observ equal basic observ use defin morrisstyl oper congruenc sever author consid tractabl characteris congruenc term bisimul see eg how ao gor refer therein gr relat work object calculu nonconflu calculi situat problemat process calculi label transit semant equip plethora differ oper equival wherea rather style definit propos reduct semant label transit case mani moreorless plausibl notion observ differ eg treatment linearbranch time intern reduct termin diverg etc space illustr survey van glabbeek gla gla difficulti select notion appropri particular applic one attempt sew reduct case convers problem reduct relat seem support notion observ give rise satisfactori oper congruenc explicitli address cc calculi milner sangiorgi ms san barb bisimul equival defin term reduct observ barb vestigi label transit similar distinguish observ transit test de nicola hennessi dh express power calculi suffic recov earli label transit bisimul induc congruenc relat work honda yoshida hy use insensit basic observ to label transit summar definit oper congruenc calculi reduct semant gener base either observ termin state confluent case observ barb natur definit exist either case characteris congruenc term label transit involv littl quantif context possibl desir moreov reason calculi may natur definit barb induc appropri congruenc paper show label transit give rise bisimul congruenc defin pure reduct semant calculu without prescrib addit observ preliminari work simpl class reduct semant involv name variabl bind consid test definit show recov usual bisimul cc fragment abov also discuss term rewrit fragment ambient calculu cardelli gordon directli express semant interest calculi requir richer framework one must deal bind rewrit rule involv term name substitut structur congruenc allow scope mobil delic set reduct context action calculi milner mil candid framework allow sever calculi mention defin cleanli work seen step toward understand oper congruenc arbitrari action calculi label transit intuit captur possibl interact term surround context made explicit label transit term context that appli s creat occurr rewrit rule similar approach follow jensen jen form graph rewrit ideal action calculi bisimul particular action calculu repres calculu studi mifsud mif next three section develop theori ground term rewrit leftlinear term rewrit addit ac structur congruenc reduct context section contain conclud remark proof omit found technic report sewa ground term rewrit section consid one simplest possibl class reduct semant ground term rewrit definit proof rather straightforward provid guid follow two section reduct take signatur consist set sigma function symbol rang oe ariti function j j sigma n context composit applic context tupl of term written b s ident context tupl say nhole context linear exactli one occurr hole section a b l rang term a b c df h rang linear unari context e rang linear binari context take set r rewrit rule consist pair hl ri term reduct relat label transit transit term label linear unari context transit sgammat label ident context simpli reduct or transit transit gammat f j indic appli f creat instanc rewrit rule target instanc t exampl given rule label transit c label f f j hl ri r contextu label transit relat f gamma defin by gammat ri bisimul congruenc let strong bisimul respect transit congruenc proof straightforward given detail guid intric correspond proof follow two section structur three lemma show context label sourc transit interrel prove case analysi use dissect lemma standard folklor one follow case hold b a exist a properli b exist a b disjoint exist e one follow hold exist h s exist t t proof definit reduct ri appli dissect lemma lemma l give follow case l s exist b take second claus hold s properli l exist b b take second claus hold s l disjoint exist e take r first claus holdslemma f gammat f f gammat proof definit label transit ri linear gammat lemma gammat f gammat proof conclus immedi otherwis definit transit ri one f gammat definit transit case f proposit congruenc proof show bisimul suppos sgammat lemma one follow hold a exist h s henc b exist t t exist t definit reduct suppos f gammat f gammat exist t gammat altern approach would take transit unari linear context f note defin use reduct relat wherea definit involv reduct rule let alt strong bisimul respect transit one show alt congruenc moreov unaffect cut label set consid abov gener alt strictli coarser exampl noninclus signatur consist constant ff fi unari symbol fl reduct rule ffgammaff fi gammafi flfigammafi ff fi wherea ff alt fi insensit possibl interact term intern transit suggest analogu alt express set unlik coincid standard bisimul particular calculi inde one show appli altern definit fragment cc ff ff with usual reduct relat give equival identifi ff j ff fi remark proof lemma label transit exhibit conclus involv rewrit rule transit premis one could therefor take finer transit f annot rewrit rule still congruenc result case give finer bisimul relat remark label transit relat linear r ie label transit gener union set rewrit rule union relat gener r r rewrit leftlinear rule section definit generalis leftlinear term rewrit second step toward framework express enough simpl process calculi notat next two section must consid complex dissect context term conveni treat context term uniformli work ntupl mhole context mn concret work categori c sigma natur number object morphism ident id composit substitut b strictli associ binari product written m k b m l write phi b l angl bracket domain subscript often elid let a b e q rang m morphism ie mtupl term rang m morphism ie mhole context project permut say morphism linear contain exactli one occurr contain one occurr each sometim abus notat exampl write remark mani slight variat c sigma possibl chosen take object natur number instead finit set variabl give lighter notat label concret syntax chosen morphism exactli standard term sigma modulo elis angl bracket subscript reduct usual notion leftlinear term rewrit express follow take set r rewrit rule consist tripl hn l ri n linear reduct relat f defin label transit label transit term two form sgammat intern reduct f gammat f context that togeth part s make left hand side rewrit rule exampl given rule label transit term label transit label contribut whole left hand side rule would redund definit exclud eg ffifl gamma ffl consid rule label transit s addit one construct instanc rule place term ff context suggest label transit ff oe flt gamma fflt t instead keep label set small captur uniform t allow label target transit parametr uninstanti argument rewrit rule case definit give gener then contextu label transit form f gammat first argument f hole place creat instanc rule l n argument paramet l therebi instanti transit defin follow sgammat gammat linear ident iff exist permut linear ident definit illustr figur restrict l id exclud transit label contribut whole l permut requir paramet l divid instanti uninstanti exampl rule f r nn figur contextu label transit leftlinear term rewrit box input wire on right n output wire on left repres ntupl mhole context wire order top bottom give rise transit the last redund could exclud requir monoton partit bisimul congruenc binari relat term f j lift relat s def say bisimul write largest such congruenc proof requir simpl dissect lemma three lemma relat context sourc label lemma dissect one follow hold a compon b exist linear ident ie compon b a a compon b exist partit linear one follow hold exist lemma f one follow hold exist h n id n exist f lemma gamma linear theorem congruenc proof show bisimul first note see thi take linear linear show gammat exist suppos sgammat lemma one follow hold a exist henc b exist exist f definit reduct suppos f linear f id lemma one follow hold a exist henc b exist f exist linear f exist tn f definit reduc section rule ground open rule instead allow parametr label one could simpli close rewrit rule instanti appli earlier definit gener would give strictli coarser congruenc exampl noninclus take signatur consist nullari ff unari fl r consist rule fl gammafl flflffgammaflflff g transit mn flff r flflff flff clr flflff proposit comparison bisimul defin congruenc arbitrari leftlinear term rewrit system much work term rewrit deal reduct relat confluent ter minat set term uniqu normal form primari equival term normal form easili prove congruenc gener incompar see one noninclus note sensit atom reduct step sensit equal term exampl nullari symbol ff fi fl rewrit rule fl gammafi ff fi fi fl wherea ff fi fi fl one might address second noninclus fiat ad valu v unari test oper h v reduct rule h v vgammav first one might move weak bisimul abstract reduct step simplest altern take largest relat symmetr claus say set r rewrit rule rightaffin right hand side rule affin condit congruenc result without left open theorem r rightaffin congruenc exampl integ addit rewrit system coincid take signatur compris nullari z integ z binari plu ifzero rewrit rule integ x z give label transit x plu z togeth reduct gamma normal form simpli integ coincid integ equal gener howev still incompar exampl unari ffi fl nullari ff rule flffgammaff ffiffgammaff ffifl gamma ff fiff may patholog rule set one would like condit exclud coincid exampl ski combin take signatur sigma compris nullari ks binari ffl rewrit rule give label transit ffl togeth permut instanc reduct gamma signific unclear note rule rightaffin theorem guarante congruenc quit intension sensit number argument consum immedi term exampl k rewrit leftlinear rule parallel box section extend set one suffici express defin reduct relat simpl process calculi suppos signatur sigma includ binari nullari symbol j parallel nil take structur congruenc j gener associ commut ident axiom parallel written infix reduct rule r befor allow symbol box ie inhibit reduct argument oe sigma suppos given set boe defin argument posit reduct may take place requir g reduct context c f c linear gener formal structur congruenc defin morphism c sigma follow famili relat index domain codomain ariti index usual elid reduct reduct relat f defin sgammat iff class calculi essenti class action calculi substant name bind ie control k ariti rule form here action morphism c sigma includ simpl process calculi exampl fragment cc section specifi take signatur sigma cc consist unari ff ff ff a j rewrit rule notat context f mn m say f shallow argument occurr f symbol except j say f deep argument occurr f symbol equal j say f shallow deep shallow deep m say f isepar occurr j parallel occurr label transit label transit form previou section transit f nontrivi label f may either contribut deep subcontext left hand side rewrit rule analog nonident label previou section parallel compon respect f deep shallow first argument case must treat differ exampl rule term rewrit leftlinear rule parallel box gener label transit befor transit contribut whole left hand side rule j ff j fi redund exclud necessari take label subcontext left hand side rule structur congruenc mere equal exampl given rule need label transit final exist rule argument occur parallel nontrivi term mean must deal partial instanti argument consid rule term j ae could place context oe j s t creat instanc left hand side from term instanti from context instanti ae j from both instanti label transit parametr two place partial instanti second ae gener definit transit given figur use addit notat write par n h ppar n nn part definit illustr figur rectangl denot context term triangl denot instanc par hatch triangl denot instanc ppar first approxim definit f deep state f gammat iff rule lgammar l factor l with argument enclos l with argument parallel argument sourc l instanti u parallel e label f roughli target r instanti u partial instanti e worth note nonident label transit depend set reduct context intend intuit label transit relat provid enough inform reduct term determin label transit structur a main properti requir congruenc proof precis result show label transit provid extran inform would desir bisimul congruenc bisimul defin exactli previou section befor congruenc proof requir dissect lemma analog lemma lemma show transit relat transit analog lemma partial convers these analog lemma except main dissect lemma omit here found long version lemma dissect b linear one follow hold transit f gammat defin by ffl f j id ffl f deep argument f gammat iff exist permut linear deep linear deep argument separ ffl f shallow argument f j id gammat iff exist permut linear deep linear deep figur contextu label transit em e e r f e r deep shallow figur contextu label transit illustr a deepli compon b exist linear separ linear deep j par m b a b b potenti overlap a latter split e a e a a deepli compon b exist partit linear deep first claus lemma illustr figur exampl consid claus lemma hold dissect give rise transit theorem congruenc remark definit allow rather crude specif set c reduct context ensur c number closur properti reduct semant requir delic set reduct context exampl list con constructor one might want allow taken given set valu would requir nontrivi generalis theori figur claus dissect lemma exampl cc synchron cc fragment definit give gamma gamma togeth structur congruent transit ie gener reduct proposit coincid bisimul label transit section proof write std standard bisimul label transit section show std bisimul contextu label transit suppos gamma must exist u r p j p ff exist q p ff must exist u r henc gamma use fact std congruenc convers suppos gammaq must exist u r p j ffu j r gamma exist p must exist u r definit standard transit coincid modulo structur congruenc contextu label transit paramet instanti one might look gener condit r bisimul instanti transit alreadi congruenc coincid exampl ambient movement cc fragment degener sever respect left hand side rewrit rule nest nonparallel symbol paramet parallel non term deep transit partial instanti less degener exampl consid fragment ambient calculu cg without bind signatur sigma amb unari m written outfix m m open m a m allow reduct rewrit rule ramb open definit give transit below togeth structur congruent transit permut instanc reduct ms j r n open conclus given gener definit contextu label transit bisimul congruenc result three simpl class reduct semant preliminari work definit may inform work particular interest calculi directli appli result must gener express class reduct semant sever direct suggest themselv higher order rewrit function program languag gener equip straightforward definit oper congruenc involv quantif context discuss introduct sever case given tractabl characteris term bisimul one might generalis term rewrit case section notion higher order rewrit vr equip nontrivi set reduct context investig extent done uniformli name bind express calculi mobil scope calculu descend one requir syntax name bind structur congruenc allow scope extrus generalis definit section class nonhigherord action calculi would take number exampl current lack satisfactori oper congruenc show index structur label transit aris rewrit rule structur congruenc ultim one would like treat concurr function languag particluar case shown one defin label transit give rise bisimul congruenc eg ferreira hennessi jeffrey core cml fhj express reduct semant languag would requir higher order rule rich structur congruenc colour definit label transit section rather intric tractabl generalis express set one would like concis characteris promis approach seem work colour term symbol except j given tag set colour give notion occurr symbol term preserv structur congruenc context applic henc provid differ way formalis idea label transit f gammat must part redex within f s observ congruenc focuss strong bisimul intension equival would interest know extent congruenc proof given uniformli equival abstract branch time intern reduct etc particularli one would like know whether theorem hold without restrict rightaffin rewrit rule one defin barb arbitrari calculu f j id gammat iff potenti interact context condit barb bisimul congruenc coincid could provid use test express calculi structur oper semant definit label transit relat induct term structur sever author consid calculi equip label transit defin so wellbehav format eg ds bim gv gm tp ber relationship two unclear one would like condit rewrit rule ensur label transit section defin functori oper semant tp convers one would like condit so ensur characteris reduct semant acknowledg would like thank philippa gardner ole jensen sren lassen jamey leifer jeanjacqu levi robin milner mani interest discuss comment earlier draft acknowledg support epsrc grant grk r calculu cryptograph protocol spi calculu full abstract lazi lambda calculu chemic abstract machin congruenc theorem structur oper semant higherord languag bisimul cant trace new comput model disciplin program mobil ambient test equival process calculu commun system labelpass control oper reflex cham joincalculu theori weak bisimul core cml linear time branch time spectrum linear time branch time spectrum ii tile model bisimilar theori function program bisimilar firstord calculu object subtyp structur oper semant bisimul congruenc equal lazi comput system reductionbas process semant phd thesi control structur function process calculi interact calculu mobil process barb bisimul constraint free concurr comput structur approach oper semant type languag distribut mobil process express mobil process algebra firstord higherord paradigm implement semant concurr program languag rewrit rule bisimul congruenc globalloc subtyp capabl infer distribut toward mathemat oper semant confluenc normalis higherord rewrit tr equal lazi comput system linear timebranch time spectrum extend abstract chemic abstract machin dynam congruenc vs progress bisimul cc structur oper semant bisimul congruenc calculu mobil process full abstract lazi lambda calculu turn so rule equat bisimul cant trace reductionbas process semant theori weak bisimul core cml reflex cham joincalculu bisimilar firstord calculu object subtyp myampersandpgrcalculu direct style calculu cryptograph protocol type languag distribut mobil process extend abstract rewrit tile model constraint free concurr comput barb bisimul globalloc subtyp capabl infer distribut picalculu rewrit bisimul congruenc categor axiomat bisimul linear time branch time spectrum ii implement semant concurr program languag mobil ambient toward mathemat oper semant congruenc theorem structur oper semant higherord languag ctr david grohmann marino miculan direct bigraph electron note theoret comput scienc entc p april henrik pilegaard flem nielson hann rii nielson activ evalu context reaction semant electron note theoret comput scienc entc v n p may vladimiro sasson paw sobociski locat reaction categori theoret comput scienc v n p march ole hgh jensen robin milner bigraph transit acm sigplan notic v n p januari hartmut ehrig barbara knig deriv bisimul congruenc dpo approach graph rewrit borrow context mathemat structur comput scienc v n p decemb massimo merro francesco zappa nardelli behavior theori mobil ambient journal acm jacm v n p novemb