t rsaoaep secur rsa assumpt a recent victor shoup note gap wide believ secur result oaep adapt chosenciphertext attack moreov show that presum oaep cannot proven secur oneway underli trapdoor permut paper establish anoth result secur oaep prove oaep offer semant secur adapt chosenciphertext attack random oracl model partialdomain oneway underli permut therefor use formal stronger assumpt nevertheless sinc partialdomain oneway rsa function equival fulldomain oneway follow secur rsaoaep actual proven sole rsa assumpt although reduct tight b introduct oaep convers method introduc bellar rogaway believ provid semant secur adapt chosenciphertext attack base oneway trapdoor permut use correct definit plaintextawar victor shoup recent show quit unlik secur proof exist least nonmal oneway permut also propos slightli modifi version oaep call oaep proven secur oneway permut shoup result mean oaep insecur imposs prove secur oaep total mislead view result state highli unlik find proof oneway assumpt word shoup result preclud possibl prove secur oaep stronger assumpt paper use stronger assumpt precis reduc tion new comput assumpt introduc prove exist simul decrypt oracl base idea prove oaep semant secur adapt chosenciphertext attack random oracl model partialdomain oneway underli per mutat stronger origin assumpt sinc partialdomain oneway rsa function equival fulldomain oneway secur rsaoaep actual proven oneway rsa function rest paper organ follow section recal basic notion asymmetr encrypt variou secur notion section review oaep convers section present new secur result togeth formal proof gener oaep applic section focu rsa applic oaep rsaoaep publickey encrypt aim publickey encrypt allow anybodi know public key alic send messag abl recov privat key definit publickey encrypt scheme defin three follow algorithm key gener algorithm k input k k secur pa ramet algorithm k produc pair pk sk match public secret key algorithm k probabilist encrypt algorithm e given messag public key pk e produc ciphertext c m algorithm may probabilist decrypt algorithm d given ciphertext c secret key sk return plaintext m algorithm determinist secur notion first secur notion one would like encrypt scheme one way start public data attack cannot recov complet plaintext given ciphertext formal mean adversari success invert e without secret key neglig probabl space thetaomega messag space andomega space random coin r use encrypt scheme intern random coin adversari ow mr howev mani applic requir encrypt scheme name semant secur aka polynomi secur indistinguish encrypt denot ind attack inform plain text exampl either ye no crucial queri adversari learn view ciphertext secur notion requir comput imposs distinguish two messag chosen adversari one encrypt probabl significantli better one half advantag adv ind a adversari seen stage ture machin neglig adv ind a formal defin as theta pr br anoth notion defin thereaft socal nonmal adversari tri produc new ciphertext plaintext meaning relat notion stronger one equival semant secur interest scenario hand attack use mani kind attack sinc consid asymmetr encrypt adversari encrypt plaintext choic public key henc chosenplaintext attack may furthermor access inform model partial full access oracl plaintextcheck oracl which input pair m c answer whether c encrypt messag m attack name plaintextcheck attack validitycheck oracl which input ciphertext c answer whether valid ciphertext weak oracl involv reaction attack enough break famou encrypt scheme name pkc v decrypt oracl itself input ciphertext except challeng ciphertext respond correspond plaintext nonadaptiveadapt chosenciphertext attack latter adapt chosenciphertext attack denot cca clearli strongest one gener studi secur notion attack given therefor refer reader paper detail howev expect secur level publickey encrypt scheme semant secur adapt chosenciphertext attack indcca adversari want distinguish plaintext two messag choic encrypt ask queri want decrypt oracl except challeng ciphertext strongest scenario one defin review oaep underli problem consid permut f f g k gamma f g k also seen origin descript oaep requir f trapdoor oneway permut howev follow consid two addit relat problem partialdomain oneway set partialdomain oneway permut f oneway f mean adversari whose run time bound success probabl succ ow a upperbound ow partialdomain oneway f mean adversari whose run time bound success probabl succ pdgammaow a upperbound set partialdomain oneway f mean adversari output set element within time bound success probabl succ sgammapdgammaow a upperbound denot succ ow resp succ pdgammaow succ sgammapdgammaow maxim success probabl succ ow a resp succ pdgammaow a succ sgammapdgammaow a maximum rang adversari whose run time bound third case obviou addit restrict rang fact output set element clear succ sgammapdgammaow succ pdgammaow succ ow note that randomli select element set return adversari set partialdomain oneway one break partialdomain oneway probabl succ sgammapdgammaow a provid follow inequ succ pdgammaow succ sgammapdgammaow howev specif choic f effici reduct may exist also case three problem polynomi equival case rsa permut henc result section oaep cryptosystem briefli describ oaep cryptosystem k d obtain permut f whose invers denot g need two hash function g h then specifi instanc function f invers g public key pk therefor f secret key sk g given messag f g n random valu r r encrypt algorithm e pk comput output ciphertext thank secret key decrypt algorithm sk extract k algorithm return m return reject descript m denot k least signific bit denot n signific bit paper bellar rogaway provid secur analysi prove oaep construct togeth trapdoor oneway permut semant secur weakli plaintextawar unfortun prove semant secur nonadapt chosenciphertext attack aka lunchtim attack indcca even achiev secur believ stronger name indcca never proven thu shoup recent show quit unlik secur proof exist trapdoor oneway permut howev provid specif proof rsa public expon follow provid gener secur analysi stronger assumpt underli permut inde prove scheme indcca random oracl model rel partialdomain oneway function f precis follow exact secur result hold theorem let ccaadversari semant secur make q q g q h queri decrypt oracl hash function g h respect then succ pdgammaow t greater thanq h denot time complex function f order prove theorem rel partialdomain oneway permut one use relat notion set partialdomain oneway theorem follow inequ previou section togeth lemma state below lemma let ccaadversari semant secur make q q g q h queri decrypt oracl hash function g h respect then succ sgammapdgammaow q denot time complex function f next section devot prove lemma hereaft repeatedli use follow simpl result lemma probabl event e f g ae proof lemma prove lemma three stage first present reduct ind adversari algorithm b break partialdomain oneway f note that present proof interest secur partialdomain oneway f fulldomain oneway f origin paper second show decrypt oracl simul employ reduct work correctli overwhelm probabl partialdomain oneway f latter part differ origin proof correct recent spot flaw final analyz success probabl reduct total incorpor abovement analysi decrypt oracl simul descript reduct first part recal reduct oper let adversari semant secur k attack within time bound t ask q q g q h queri decrypt oracl random oracl g h respect distinguish right plaintext advantag greater let us describ reduct b top level descript reduct b given function f defin public key c aim b recov partial preimag c b run public data get pair messag fm well state inform st choos random bit b give c ciphertext b b simul answer queri decrypt oracl random oracl g h respect see descript simul below b run final get answer b b simul answer queri decrypt oracl random oracl g h respect see descript simul below b output partial preimag c one found among queri ask h see below list queri ask h simul random oracl g h random oracl simul simul random oracl answer manag queryansw list glist hlist oracl g h respect initi set empti list fresh queri fl g one look hlist queri ffi ask h answer h ffi one build check whether c ffi relat hold function f invert still correctli simul g answer g note g fl uniformli distribut valu sinc latter uniformli distribut otherwis one output random valu g fl case concaten glist fresh queri ffi h one output random valu h ffi pair concaten hlist note that again fl g one may build relat hold invert function f simul decrypt oracl queri decrypt oracl decrypt oracl simul ds look queryansw glist ffi h hlist pair taken list defin check whether soon equal hold ds output n pair found reject return remark found preimag c thu invert f could output expect result stop reduct analysi assum reduct goe b output it list queri ask h answer b or time limit even answer explicitli specifi except random valu new queri implicitli defin inde c defin ciphertext randomli defin r seen random variabl let us denot askg event queri r ask g askh event queri ask h let us furthermor denot gbad event r ask g answer someth fix reduct scenario note event gbad impli askg seen abov gbad event make random oracl simul imperfect chosenplaintext attack scenario chosenciphertext attack scenario describ decrypt simul may sometim fail event decrypt failur denot dbad thu denot notat order proceed analysi success probabl abovement reduct one need set notat first still denot star variabl relat challeng ciphertext c obtain encrypt oracl inde ciphertext either implicitli defin hash valu correspond pair may appear g h list variabl refer decrypt queri c ask adversari decrypt oracl thu decrypt simul consid sever event ciphertext queri decrypt oracl cbad denot union bad event ffl sbad denot event ffl rbad denot event askr denot intersect event oracl queri mean r ask g h respect sinc ffl askr denot event r hs phi t ask g ffl ask denot event ask h fail denot event decrypt oracl simul output wrong decrypt answer queri c more precis may denot fail event fail ith queri c analysi howev evalu probabl regard event fail uniform manner i henc employ notat fail therefor global reduct event dbad set true soon one decrypt simul fail note fail event limit situat plaintext extractor reject ciphertext wherea would accept actual decrypt oracl inde soon accept see ciphertext actual valid correspond output plaintext analysi decrypt oracl simul analyz success probabl decrypt oracl simul ds secur claim claim follow repair previou proof base new comput assumpt precis show addit case consid due correct definit plaintext awar unlik partialdomain oneway permut lemma one ciphertext c directli obtain encrypt oracl ask h decrypt oracl simul ds correctli produc decrypt oracl output queri ciphertext c c probabl greater within time bound start analysi recal decrypt oracl simul given ciphertext c decrypt well ciphertext c obtain encrypt oracl glist hlist result interact random oracl g h let us first see simul uniqu defin possibl plaintext thu output first one find inde definit sever pair could satisfi equal how ever sinc function f permut thu onetoon valu uniqu defin thu ffi h ffi similarli uniqu defin thu fl g fl one may select either k not abov one keep mind glist hlist correspond inputoutput pair function g h thu one output relat given input ciphertext correctli built adversari r ask g h simul output correct answer howev output reject situat wherea adversari may built valid ciphertext without ask queri random oracl g h success probabl sinc goal prove secur rel partialdomain oneway f interest probabl event fail askh occur may split accord event grant cbadaskr simul perfect cannot fail thu consid complementari event concern latter contribut right hand side first note forget askh while use lemma one get prfail cbad askr less without ask r g take account event rbad gr unpredict thu probabl s phi gr k gammak hand probabl ask r g without inform hs thu r hs ask come condit ask sbad less q g delta gammak furthermor event independ askh yield focu former term fail cbad askh miss origin proof base weaker notion plaintextawar split accord disjoint subcas cbad sbad sbad rbad use lemma latter event mean rbad occur provid adversari queri h ask h unpredict independ hs well then event rbad occur probabl gammak former event split accord askr and use lemma upperbound former event mean r ask g wherea unpredict thu hs unpredict sinc r unpredict probabl event q g delta gammak the probabl ask r g hand latter event mean simul reject valid ciphertext c wherea hs unpredict r ask g onetoon properti feistel network follow thu gr unpredict redund cannot hold probabl greater gammak sum up prfail thu prfail cbad consequ run time simul includ comput foe possibl pair thu bound q g delta q h delta t f o success probabl reduct subsect analyz success probabl reduct respect advantag indcca adversari goal reduct is given therefor success probabl obtain probabl event askh occur reduct ie praskh run time reduct thu evalu praskh split event askh accord event bad first let us evalu first term k here prdbad j askh q directli obtain lemma prgbad j askh praskg j askh obtain fact event gbad impli askg askh occur hs unpredict henc praskg j askh q g delta gammak evalu second term here askh occur hs unpredict thu r predict b well fact independ event bad henc therefor combin evalu first second term fact complex analysi note execut b new gqueri fl one look queryansw pair ffi h ffi hlist comput well fs t appar one perform comput simul decrypt ciphertext proper bookkeep allow comput done pair queri ask hash function thu time complex overal reduct f denot time complex evalu function f applic rsaoaep main applic oaep certainli famou rsaoaep use updat pkc standard paper shoup abl repair secur result small expon use coppersmith algorithm howev result appli repair rsaoaep regardless expon thank random selfreduc rsa partialdomain oneway rsa equival whole rsa problem soon constant fraction signific bit or least signific bit preimag recov note that origin rsaoaep signific bit involv h function pkc standard v v rfc least signific bit use valu maskedseedkmaskeddb input f rsa function maskedse play role t maskeddb role s insist fact follow result hold situat and extend one may also remark follow argument appli random multipl selfreduc problem rabin function present final reduct let us consid problem find small solut linear modular equat lemma consid equat solut valu ff except fraction k n them t u uniqu comput within time bound olog n proof consid lattic say lff good lattic and ff good valu nonzero vector length with respect euclidean norm otherwis use word bad lattic and bad valu respect clear approxim less bad lattic bound inde bad valu ff correspond point integ coordin disk radiu thu proport bad valu ff less n given good lattic one appli gaussian reduct algorithm one get within time olog n basi lff consist two nonzero vector u v let point t u t u solut equat c mod n u less real sinc furthermor symmetri assum set begin choos integ solut equat simpli pick random integ u set write basi u v use real number ae oe coordin found solut homogen equat thu indic lattic unknown integ b but gamma conclus b closest integ gammaa gammao respect a b ae oe one easili recov thu u necessarili uniqu ut lemma let algorithm output qset contain signific bit eth root input partialdomain rsa t probabl exist algorithm b solv rsa problem n e success probabl proof thank random selfreduc rsa part bit eth root eth root y randomli chosen ff one get x y thu y linear modular equat two unknown r known small solut smaller k solv use lemma algorithm b run twice a input x xff e next run gaussian reduct q pair element come set partial preimag set found unless random ff bad cf gaussian reduct lemma ut remark lemma extend case constant fraction theta lead trail bit eth root found reduct run theta time adversari a success probabl decreas approxim theta extens constant fraction consecut bit also possibl anyway pkc v k much smaller k theorem let ccaadversari semant secur rsaoaep with kbit long modulu k k run time bound advantag make q q g q h queri decrypt oracl hash function g h respect then rsa problem solv probabl greater within time bound proof lemma state use previou result relat q h set partialdomainrsa rsa easili conclud ut conclus conclus one still trust secur rsaoaep reduct costli origin one howev oaep ap plicat care need sinc secur actual reli oneway permut partialdomain oneway acknowledg thank victor shoup coppersmith dan boneh fruit comment r relat among notion secur publickey encrypt scheme random oracl practic paradigm design effici protocol optim asymmetr encrypt encrypt rsa chosen ciphertext attack protocol base rsa encrypt standard pkc find small root univari modular equat probabilist encrypt reaction attack sever publickey cryptosystem power misbehav adversari secur analysi origin epoc react rapid enhancedsecur asymmetr cryptosystem transform method obtain digit signatur public key cryptosystem rsa data secur oaep reconsid tr