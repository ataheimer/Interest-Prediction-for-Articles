t feasibl decis algorithm rate monoton deadlin monoton schedul a rate monoton deadlin monoton schedul commonli use period realtim task system paper discuss feasibl decis given realtim task system system schedul rate monoton deadlin monoton schedul time complex exist feasibl decis algorithm depend number task maximum period deadlin period deadlin integ paper present new necessari suffici condit given task system feasibl propos new feasibl decis algorithm base condit time complex algorithm depend sole number task condit also appli suffici condit task system use prioriti inherit protocol feasibl rate monoton deadlin monoton schedul b introduct hard realtim system defin contain process deadlin cannot miss bura deadlin term hard must met circumst otherwis catastroph system failur may result meet hard deadlin impli constraint upon way system resourc alloc runtim includ physic logic resourc convent resourc alloc perform schedul algorithm whose purpos interleav execut process system achiev predetermin goal hard realtim system obviou goal deadlin miss one schedul method propos hard realtim system rate monoton algorithm liua static prioriti base algorithm period process prioriti process relat period whilst algorithm sever use properti includ schedul test suffici necessari leha constraint impos process system sever process must period independ deadlin equal period mani paper success weaken constraint impos ratemonoton algorithm provid associ schedul test report work includ test allow aperiod process schedul shaa test schedul process synchronis use semaphor shaa one constraint remain deadlin period process must equal weaken latter constraint would benefit applic design provid flexibl process model implement system increas flexibl seen observ process deadlin period express within process model permit deadlin period exampl process system whose time characterist suitabl ratemonoton schedul would also accept schedul scheme permit deadlin period process differ paper relax constraint transform ratemonoton algorithm deadlinemonoton algorithm schedul test develop guarante deadlin period process approach shown applic guarante deadlin arbitrari mixtur period sporad process follow subsect give brief descript symbol terminolog use remaind paper section give overview ratemonoton schedul algorithm associ schedul test section introduc deadlinemonoton schedul algorithm new schedul constraint algorithm develop section outlin previous propos method guarante sporad process deadlin within context ratemonoton algorithm section propos simpler method guarante deadlin arbitrari mixtur sporad period process use deadlinemonoton schedul algorithm notat process period releas execut period manner case maximum releas frequenc defin process term sporad maximum defin process term aperiod auda process given identifi process subscript defin prioriti process prioriti uniqu prioriti assign numer taken interv highest prioriti n the number process system lowest process time characterist c refer valu period comput time deadlin ratemonoton schedul algorithm ratemonoton schedul static prioriti base mechan liua prioriti assign process invers proport length period is process shortest period assign highest prioriti process execut preemptiv manner time highest prioriti process outstand comput requir execut amongst class static prioriti schedul scheme shown ratemonoton prioriti assign optim liua impli given static prioriti schedul algorithm schedul process system ratemonoton algorithm also abl schedul process system case ratemonoton schedul algorithm optim impli imposit constraint upon process system includ fix set process process period process deadlin equal period one instanc process must complet subsequ instanc run process known worstcas execut time synchronis permit process process initi releas time last constraint fundament determin schedul given process system process releas simultan worstcas demand processor time process releas simultan term critic instantsliua thu first critic instant occur time lead observ process meet deadlin execut start critic instant process deadlin met lifetim system schedul test ratemonoton algorithm base upon critic instant concept liua concept develop schedul test base upon process utilis test given by utilis u process given by utilis converg larg n thu process set utilis less guarante schedul ratemonoton algorithm is deadlin guarante met whilst test suffici also necessari is test may indic fals process system schedul exampl consid two process follow period comput requir process equat evalu fals utilis two process greater allow bound howev run neither process ever miss deadlin henc test suffici necessari necessari suffici schedul constraint found shaa leha set n process schedul test given min l k l k equat take account possibl process phase summari summari schedul test avail optim static prioriti schedul scheme ratemonoton schedul algorithm process limit follow fundament constraint process period utilis measur ratio requir comput time period process summat ratio process yield total processor utilis evalu smallest integ x evalu largest integ x process period equal deadlin synchronis permit process first schedul test equat suffici necessari second test equat suffici necessari one differ two schedul test lie comput complex first test n number process second test far complic complex data depend number calcul requir entir depend valu process period worstcas test involv enumer schedul process system upto period process henc tradeoff exist accuraci comput complex schedul test follow section remov second three constraint ie allow process sporad thu relax first constraint third constraint beyond scope paper note earlier sha et al consid shaa shaa shaa deadlin monoton schedul begin observ process wish schedul characteris follow relationship comput time deadlin period leung et alleua defin prioriti assign scheme cater process relationship term inversedeadlin deadlin monoton prioriti assign deadlin monoton prioriti order similar concept rate monoton prioriti order prioriti assign process invers proport length deadlin leua thu process shortest deadlin assign highest prioriti longest deadlin process lowest prioriti prioriti order default rate monoton order period deadlin deadlin monoton prioriti assign optim static prioriti scheme process share critic instant state theorem leua the inversedeadlin prioriti assign optim prioriti assign one processor gener schedul constraint deadlin monoton schedul behaviour process releas critic instant fundament process prove meet deadlin execut begin critic instant process alway deadlin liua leua use result leung et al state foundat new schedul test develop initi two process consid generalis allow number process schedul two process consid two process process higher prioriti process deadlin monoton prioriti assign consid follow case case i process alway releas simultan occur follow hold illustr figur time time figur highest prioriti claim processor whenev outstand comput requir occur first c unit period schedul system given by a check schedul deadlin must suffici larg contain comput demand ie b check schedul higher prioriti process ie prior claim processor henc interv utilis processor interv therefor maximum comput time defin by schedul second term equat relat maximum time prevent execut higher prioriti process case time term interfer time i definit interfer encount releas deadlin instanc interfer due execut demand higher prioriti process maximum interfer process occur releas begin critic instant by definit critic instant liua consid process case i equat time execut whilst outstand comput requir thu equal one comput is case i zero highest prioriti process schedul case i restat i consid case period two process equal case releas mani time second releas time time figur figur maximum interfer equal one comput time schedul equat hold case case releas mani time second releas consid figur time time figur clearli prevent run releas process number releas within interv given by therefor schedul express by i equat valu could larger exact maximum interfer includ comput time requir i releas may occur valu least great maximum interfer test must hold sinc base upon exact maximum interfer exampl use schedul equat given exampl consid follow process system schedul process system determin equat a check process henc schedul b check process substitut henc schedul exampl run system given figur figur construct suffici necessari follow exampl show consid effect increas affect schedul system c recheck process substitut henc unschedul equat howev process system schedul figur abov simul diagram discuss appendix schedul constraint equat strong due valu exact express develop consid figur time time figur critic instant occur it interfer maximum note interfer consist execut deadlin execut releas deadlin restat b repres interfer due complet execut k incomplet execut number complet execut interv equal number deadlin interv number given by henc interfer due complet execut given by number incomplet execut given number releas minu number deadlin evalu either number releas given by note releas coincid deem occur fraction henc number incomplet execut given by start incomplet execut given by henc length interv utilis incomplet execut is maximum time use interv given length interv howev interv may longer c therefor maximum interfer due incomplet execut given by substitut b k equat give follow schedul constraint i consid follow theorem relat suffici necessari properti equat theorem schedul test given equat suffici two process proof contradict assum process system pass test schedul show system schedul must fail test consid process system contain let process pass test pass test schedul pass test follow must hold schedul must miss deadlin instanc process start critic instant process point suffer maximum interfer due higher prioriti process therefor miss deadlin schedul have give clear contradict exist a b therefor pass test schedul proof theorem reli upon exact thi given theorem theorem still hold greater exact valu mere repres wors worsecas therefor implic theorem schedul test given equat also suffici theorem schedul test necessari valu exact process pass schedul test requir repres exact valu compar three case i clearli imposs know least discuss occur made pessimist calcul increas comput time could guarante decreas sinc occur calcul precis allow comput time maximis by inequ summari greatest amount time exact there fore schedul test necessari exact therefor schedul test given equat necessari valu exact implic schedul test given equat also necessari exact howev valu equat exact instanc equat former declar process system schedul latter follow exampl illustr point exampl return process system fail equat illustr meet deadlin schedul system determin equat a check process henc schedul b check process substitut henc schedul system schedul equat simul run system given figur previous summari note result state leua deadlin monoton prioriti assign optim two schedul test twoprocess system develop test equat suffici necessari whilst test equat suffici necessari and henc optim one differ test former comput complex latter tradeoff exist accuraci comput complex schedul mani process schedul test given equat generalis system arbitrari number process firstli equat expand consid figur time time time figur interfer inflict upon process higher prioriti process correspond comput demand process interv time critic instant first deadlin interfer j given by may includ part execut j occur total interfer express by therefor feasibl schedul process i equat like equat suffici necessari illustr follow exampl exampl consid follow process system schedul process system determin equat a check process henc schedul b check process substitut henc schedul c check process substitut henc schedul consid effect increas affect schedul system d recheck process substitut henc unschedul equat process system unschedul equat howev system run deadlin met see figur figur exampl process system schedul equat valu greater exact valu contain part execut occur similar drawback equat twoprocess system consid surmount problem generalis equat mani process consid figur time time time time figur figur seen gener case n process equal interfer process i interv thu equat rewritten provid schedul test n process system i show constraint accur equat consid follow exampl exampl return process system fail equat shown meet deadlin see figur a check process henc schedul b check process substitut henc schedul c check process substitut henc schedul exampl run given figur express equat exact interfer due incomplet execut i given greater equal exact interfer consid interfer incomplet execut i figur within allow made use i use sinc one process execut time greater precis valu interfer consid follow theorem theorem schedul test given equat suffici proof follow theorem theorem schedul test given equat necessari valu exact proof follow theorem theorem show equat by implic suffici necessari execut higher prioriti process overlap deadlin exact test necessari inde valu equat exact two equat equival howev execut overlap deadlin test pass process system test contain precis measur obtain exact valu case requir exact interleav higher prioriti process consid upto deadlin could involv enumer schedul upto obviou comput expens follow section outlin altern strategi improv schedul constraint unschedul mani process previou section develop suffici necessari test schedul process system note whilst test identifi schedul process system suffici necessari unschedul test identifi unschedul system approach illustr figur schedul system unschedul system system found suffici necessari schedul test system found suffici necessari unschedul test exact divis given suffici necessari schedul unschedul test domain process system figur suffici necessari unschedul test identifi unschedul process system manner test previou subsect identifi schedul system combin two test enabl identif mani schedul unschedul process system without resort comput expens suffici necessari test suffici necessari unschedul test present consid interfer higher prioriti process upon minimum incomplet execut higher prioriti process occur late possibl maximis time utilis higher prioriti process minimis time utilis theorem minimum incomplet execut higher prioriti process perform execut late possibl time time figur consid figur execut j decreas move execut toward deadlin j which movement decreas minimum execut move close possibl deadlin j consid schedul minimum best possibl scenario schedul cannot schedul minimum cannot schedul exact sinc valu least larg minimum valu therefor show unschedul process system suffici show unschedul system minimum valu unschedul test develop use minimum interfer figur interfer sum complet execut higher prioriti process part incomplet execut must occur b complet execut k incomplet execut total interfer state as complet execut occur interv given by incomplet execut number either process higher prioriti henc interfer due incomplet execut state substitut equat gener unschedul test i note one process need pass unschedul test process system unschedul convers theorem prove equat suffici condit unschedul follow observ sinc minimum by theorem theorem process system cannot schedul less exact valu process system cannot schedul exact valu theorem note equat necessari condit unschedul sinc valu use less equal exact valu equat use togeth consid process system fail equat sinc test necessari prove process system unschedul process system submit equat system equat determin unschedul process system howev process system fail schedul unschedul test note could still schedul illustr use combin use equat follow exampl exampl consid follow process system show unschedul system use equat a check process henc fail test therefor unschedul b check process substitut henc fail test therefor unschedul c check process substitut therefor pass unschedul test process system therefor unschedul exampl run system given figur process miss deadlin time figur reduc comput time process observ see fail unschedul test sinc characterist first two process ident process system whole fail unschedul test howev system necessarili unschedul tri prove process system schedul use equat a check process henc schedul b check process substitut henc schedul c check process substitut henc schedul equat abov shown process system fail schedul unschedul test sinc test suffici necessari decis prove process system schedul unschedul exampl illustr combin use unschedul schedul test first part exampl utilis unschedul test prove test unschedul then decreas comput time system fail unschedul test howev applic equat system shown fail schedul test also inde examin exampl see c lie system prove schedul c lie system prove unschedul c lie prove system schedul unschedul requir power schedul test test present next subsect exact schedul mani process schedul unschedul constraint system contain mani process given equat respect suffici necessari gener case form suffici necessari schedul test requir exact valu by theorem achiev thi schedul evalu exact interleav higher prioriti process execut known costli entir interv critic instant deadlin process evalu would requir solut equat number equat reduc observ meet deadlin lie need evalu equat reduct number equat requir solut made consid behaviour process interv consid interact process i process interv process meet deadlin requir follow condit met wish consid point upto includ therefor need refin definit interfer reason interv rather singl point time definit interfer encount releas time lie interv equal quantiti work creat releas higher prioriti process interv releas time outstand work due higher prioriti process must sinc execut higher prioriti process complet henc point time actual meet deadlin given by therefor state follow condit schedul note definit includ part execut may occur howev sinc outstand workload process express exact equat requir maximum calcul made determin schedul n process system maximum number equat need evalu is number equat need evalu reduc achiev limit point consid possibl solut consid time within could possibl meet deadlin note monoton increas within time interv point time interfer increas occur releas higher prioriti process illustr figur d releas releas releas releas releas figur figur three process higher prioriti see higher prioriti process releas increas monoton respect graph step plateau repres interv time higher prioriti process releas obviou one equat need evalu plateau interfer chang maximis time avail execut choos evalu rightmost point plateau therefor one possibl reduct number equat evalu schedul occur test point correspond higher prioriti process releas sinc soon one equat identifi process system schedul need test equat thu effect evalu equat number equat reduc case note reduct occur point time higher prioriti process releas meet deadlin number equat reduc consid comput time process consid figur d time releas time releas time releas time time releas figur figur total comput requir system c plot time first point time outstand comput equal time elaps found by equat diagram point time coincid deadlin consid figur point test schedul interv also sinc time correspond critic instant a simultan releas process first point time could possibl complet is give schedul constraint of sinc valu assum one releas process occur constraint fail releas higher prioriti process within interv exact amount work creat higher prioriti process interv given by next point time may complet execut is give schedul constraint of again constraint fail releas occur interv thu build seri equat express schedul tk equat hold schedul seri equat encapsul follow algorithm algorithm foreach els endif exit unschedul endif endwhil endfor algorithm termin follow relat alway hold greater algorithm termin sinc unschedul thu maximum number step worstcas measur number equat reduc method utilis plateau figur consid point time possibl complet rather point time correspond higher prioriti process releas exampl use algorithm given exampl return process system could prove schedul unschedul prove schedul previou exampl confin attent use success equat show unschedul substitut process unschedul time proceed next equat sinc termin unschedul reduc comput time use success equat show schedul substitut henc schedul meet deadlin time exampl run system seen figur figur success equat shown process system schedul solut singl equat requir summari section introduc number schedul unschedul test deadlin monoton algorithm n schedul test suffici necessari n schedul test suffici necessari n unschedul test suffici necessari suffici necessari schedul test datadepend complex first test provid coarsest level second third test combin provid finer grain measur process system definit schedul definit unschedul suffici necessari test abl differenti schedul unschedul system provid finest level test one constraint process system must critic instant ensur process initi releas time schedul sporad process nonperiod process whose releas period natur process subdivid two categori auda aperiod sporad differ categori lie natur releas frequenc aperiod process whose releas frequenc unbound extrem could lead arbitrarili larg number simultan activ process sporad process maximum frequenc one instanc particular sporad process activ time static schedul algorithm employ difficult introduc nonperiod process execut schedul known system run nonperiod process releas difficulti aris attempt guarante deadlin process clearli imposs guarante deadlin aperiod process could arbitrarili larg number activ time sporad process deadlin guarante sinc possibl mean maximum releas frequenc defin maximum workload place upon system one approach use static period poll process provid sporad execut time approach review section section illustr utilis properti deadlin monoton schedul algorithm guarante deadlin sporad process without resort introduct poll process sporad process poll approach allow sporad process execut within confin static schedul such gener ratemonoton algorithm comput time must reserv within schedul intuit solut set period process poll sporad process leha strict poll reduc bandwidth process process time embodi execut poll process wast sporad process activ poll process becom occur poll processs comput time one period exhaust pass wait next period servic number bandwidth preserv algorithm propos use ratemonoton schedul algorithm one algorithm deferr server leha shab shaa server period process allot number unit comput time per period unit use sporad process outstand comput requir server run outstand sporad process request server execut defer assign comput time server time preserv initi prioriti sporad request occur server maintain prioriti thu run serv sporad process allot comput time within server period exhaust comput time server replenish start period problem aris sporad process requir deadlin guarante difficult accommod deferr server due rigidli defin point time server comput time replenish sporad server shaa provid solut problem replenish time relat sporad use comput time rather mere period server process sporad server use sha et al shaa conjunct ratemonoton schedul algorithm guarante sporad process deadlin sinc ratemonoton algorithm use method requir map sporad process time characterist given comput time deadlin period onto period server process time characterist given comput time deadlin period method adopt shaa let comput time period deadlin server equal comput time minimum interarriv time deadlin sporad process ratemonoton schedul algorithm use test schedul process system runtim prioriti assign deadlin monoton manner next section detail simpler approach guarante sporad deadlin base upon deadlin monoton schedul algorithm sporad process deadlin monoton schedul approach consid time characterist sporad process demand comput time illustr figur process releas deadlin releas deadlin releas figur minimum time differ success releas sporad process minimum interarriv time occur first two releas sporad point sporad behav exactli like period process period sporad releas maximum frequenc impos maximum workload releas occur maximum rate between second third releas figur sporad behav like period process intermitt activ laid dormant workload impos sporad maximum process releas fall next releas occur greater time unit elaps worstcas sporad process behav exactli like period process period deadlin d characterist behaviour maximum one releas process occur interv releas time least unit previou releas process impli guarante deadlin sporad process comput time must avail within interv note deadlin least previou deadlin sporad exactli guarante given deadlinemonoton schedul test section schedul purpos onli describ sporad process period process whose period equal howev note sinc process sporad actual releas time process wil period mere separ least time unit schedul test given section effect process system process period sporad releas simultan assum process releas simultan time critic instant form worstcas workload processor deadlin sporad guarante releas critic instant subsequ deadlin guarante exampl given exampl consid follow process system period whilst sporad minimum interarriv time given respect check schedul system use equat given section simplest test equat use a check process henc schedul b check process substitut henc schedul c check process substitut henc schedul d check process substitut henc schedul process system schedul exampl run given figur figur exampl run figur deadlin met sporad process releas time form critic instant thu worstposs scenario schedul process system combin mani period mani sporad process shown schedul scheme without need server process requir schedul sporad process ratemonoton schedul algorithm see section summari propos method guarante deadlin sporad process use sporad server within ratemonoton schedul framework two main drawback firstli one extra period server process requir sporad process secondli extra runtim overhead creat kernel requir keep track exact amount time server left within period deadlinemonoton approach circumv problem sinc extra process requir sporad process dealt adequ within exist period framework conclus fundament constraint ratemonoton schedul algorithm weaken permit process deadlin less period schedul result schedul mechan deadlinemonoton algorithm schedul test present deadlinemonoton algorithm initi simpl suffici necessari schedul test introduc requir singl equat per process determin schedul howev achiev simplic meant test overli pessimist simplif made produc singl equat test partial remov produc suffici necessari schedul test pass process system simpl test complex second test n compar n simpl test again test pessimist complement second schedul test similar unschedul test develop combin suffici necessari schedul unschedul test shown use identifi unschedul system howev still possibl process system fail schedul unschedul test problem resolv develop suffici necessari schedul test complex test complex relat period comput time process system complex reduc substanti number equat requir determin schedul process minimis problem guarante deadlin sporad process discuss note schedul test propos sporad process ratemonoton algorithm requir introduct special server process propos simpl method guarante deadlin sporad process within confin deadlinemonoton algorithm simplic method due sporad process treat exactli period process purpos determin schedul use scheme mixtur period sporad deadlin schedul subject process system pass deadlinemonoton schedul constraint number issu rais work outlin paper requir consider includ effect allow process synchronis vari time characterist anoth relat issu effect deadlinemonoton schedul upon system utilis issu remain investig acknowledg author thank mike richardson alan burn andi well valuabl comment diatrib r misconcept realtim comput seriou problem next generati system schedul realtim system schedul algorithm multiprogram hard realtim environ the ratemonoton schedul algorithm exact character averag case behaviour aperiod task schedul hard realtim system realtim schedul theori ada realtim schedul theori ada prioriti inherit protocol approach realtim synchronis on complex fixedprior schedul period realtim task enhanc aperiod respons hard realtim environ an analyt approach realtim softwar engin tr