t scalabl algorithm associ mine a abstractassoci rule discoveri emerg import problem knowledg discoveri data mine associ mine task consist identifi frequent itemset then form condit implic rule among them paper present effici algorithm discoveri frequent itemset form comput intens phase task algorithm util structur properti frequent itemset facilit fast discoveri item organ subset lattic search space decompos small independ chunk sublattic solv memori effici lattic travers techniqu present quickli identifi long frequent itemset subset requir also present effect use differ databas layout scheme combin propos decomposit travers techniqu experiment compar new algorithm previou approach obtain improv order magnitud test databas b introduct associ mine task discov set attribut share among larg number object given databas exampl consid sale databas bookstor object repres custom attribut repres book discov pattern set book frequent bought togeth custom exampl could that peopl buy jane austen pride prejudic also buy sens sensibl store use knowledg promot shelf placement etc mani potenti applic area associ rule technolog includ catalog design store layout custom segment telecommun alarm diagnosi on task discov frequent associ larg databas quit challeng search space exponenti number databas attribut million databas object problem io minim becom paramount howev current approach iter natur requir multipl databas scan clearli expens method especi use form sampl sensit dataskew advers aect perform furthermor approach use complic intern data structur poor local add addit space comput overhead goal overcom limit paper present new algorithm discov set frequent attribut also call itemset key featur approach follow use vertic tidlist databas format associ itemset list transact occur show frequent itemset enumer via simpl tidlist intersect use latticetheoret approach decompos origin search space lattic smaller piec sublattic process independ mainmemori propos two techniqu achiev decomposit prexbas maximalcliquebas partit decoupl problem decomposit pattern search propos three new search strategi enumer frequent itemset within sublattic bottomup topdown hybrid search approach roughli requir databas scan minim io cost present six new algorithm combin featur list abov depend databas format decomposit techniqu search procedur use includ eclat equival class transform maxeclat cliqu maxcliqu topdown aprcliqu new algorithm minim io cost make small number databas scan also minim comput cost use ecient search scheme algorithm particularli eectiv discov frequent itemset long tidlist base approach also insensit dataskew fact maxeclat maxcliqu algorithm exploit skew tidlist ie support itemset reorder search long frequent itemset list rst furthermor use simpl intersect oper make new algorithm attract option direct implement databas system use sql help extens set experi show best new algorithm improv current method order magnitud time propos techniqu retain linear scalabl number transact databas rest paper organ follow section describ associ discoveri problem look relat work section section develop latticebas approach problem decomposit pattern search section describ new algorithm previou method use experiment comparison describ detail section experiment studi present section conclud section mine complex result frequent itemset link graphtheori highlight appendix a problem statement associ mine task rst introduc state follow let set item databas transact transact uniqu identi tid contain set item set item also call itemset itemset k item call kitemset support itemset x denot x number transact occur subset k length subset itemset call ksubset itemset maxim subset itemset itemset frequent support userspeci minimum support min sup valu set frequent kitemset denot f k associ rule express b b itemset support rule given b condenc ie condit probabl transact contain b given contain a rule condent condenc userspeci minimum condenc min conf data mine task gener associ rule databas support greater min sup ie rule frequent rule must also condenc greater min conf ie rule condent task broken two step find frequent itemset step comput io intens given item potenti frequent itemset ecient method need travers exponenti itemset search space enumer frequent itemset thu frequent itemset discoveri main focu paper gener condent rule step rel straightforward rule form xni gener frequent itemset x provid rule least minimum condenc consid exampl bookstor sale databas shown figur dierent item name author bookstor carri ie fa c dt wg databas consist six custom bought book author figur show frequent itemset contain least three custom transact ie min also show set associ rule min conf itemset actw cdw maxim frequent itemset sinc frequent conan doyl sir arthur agatha christi c jane austen marktwain wodehous p g w c w c w c w c w c w transact item item ac w cw a d t ac aw cd ct acw itemset support ctw maxim frequent itemset at dw tw act atw cdw actw cdw actw associ rule act cw figur a bookstor databas b frequent itemset condent rule itemset subset one two maxim itemset reduc frequent itemset search problem task enumer maxim frequent itemset hand gener condent rule need support frequent itemset easili accomplish maxim element identi make addit databas pass gather support uncount subset relat work sever algorithm mine associ propos literatur apriori algorithm best known previou algorithm use ecient candid gener procedur frequent itemset level use construct candid next level howev requir multipl databas scan mani longest frequent itemset dhp algorithm tri reduc number candid collect approxim count previou level like apriori requir mani databas pass longest itemset partit algorithm minim io scan databas twice partit databas small chunk handl memori rst pass gener set potenti local frequent itemset second pass count global support partit may enumer mani fals posit rst pass ie itemset local frequent partit global frequent local frequent set memori addit databas scan requir dlg algorithm use bitvector per item note tid item occur gener frequent itemset via logic oper bitvector howev dlg assum bit vector memori thu scalabl could problem databas million transact dic algorithm dynam count candid vari length databas scan progress thu abl reduc number scan apriori anoth way minim io overhead work small sampl databas analysi eectiv sampl associ mine present present exact algorithm nd rule use sampl ascpa algorithm sampl version build top partit produc much smaller set potenti frequent candid requir two databas scan approach use generalpurpos dbm system relat algebra oper also studi detail architectur altern tightintegr associ mine dbm present also point benet use vertic databas layout algorithm gener possibl frequent itemset method nding maxim element includ allmf random algorithm discov maxim frequent itemset pincersearch algorithm construct candid bottomup manner like apriori also start topdown search time help reduc number databas scan maxmin anoth algorithm nding maxim element use ecient prune techniqu quickli narrow search space new algorithm rang gener frequent itemset hybrid scheme gener maxim along remain itemset worth note sinc enumer task comput challeng number parallel algorithm also propos itemset enumer latticebas approach embark algorithm descript brie review terminolog lattic theori see good introduct denit let p set partial order p binari relat xy z p relat is exiv x x set p relat call order set denit let p order set let xzi p say x cover denot x element z p x z denit let p order set let p element x p upper bound lower bound x s x s least upper bound also call join denot greatest lower bound also call meet denot s greatest element p denot call top element least element p denot call bottom element denit let l order set l call join meet semilattic x _ xy l l call lattic join meet semilattic ie x _ exist pair element l l complet lattic exist subset l set l sublattic l c w ct cd ad acw adt atw acdw acdt acdtw cdt act acd dtw ac actw maxim frequent itemset actw cdw figur complet powerset lattic pi set s order set ps power set s complet lattic join meet given union intersect respect _ ii ii top element ps bottom element ps fg l ps l call lattic set close nite union intersect ie l lattic partial order speci subset relat x _ figur show powerset lattic pi set item exampl databas fa c dt wg also shown frequent grey circl maxim frequent itemset black circl observ set frequent itemset form meet semilattic sinc close meet oper ie frequent itemset x x also frequent hand form join semilattic sinc x frequent impli x frequent mention infrequ itemset form join semilattic subset frequent itemset frequent lemma consequ closur meet oper set frequent itemset corollari get superset infrequ itemset infrequ observ form basi power prune strategi bottomup search procedur frequent itemset leverag mani associ mine algorithm name itemset found frequent previou level need extend candid current level howev lattic formul make appar need restrict pure bottomup search lemma maxim frequent itemset uniqu determin frequent itemset observ tell us goal devis search procedur quickli identi maxim frequent itemset follow section see ecient support count denit lattic l said distribut xy z l denit let l lattic bottom element x l call atom x ie x cover set atom l denot al denit lattic l call boolean lattic distribut element member x lattic complement begin note powerset lattic pi set databas item boolean lattic complement x l given inx set atom powerset lattic correspond set item ie associ atom databas item x tidlist denot lx list transact identi contain atom figur show tidlist atom exampl databas exampl consid atom a look databas figur see occur transact form tidlist atom a figur tidlist atom lemma nite boolean lattic l x l word everi element boolean lattic given join subset set atom sinc powerset lattic pi boolean lattic join oper correspond set union get lemma x pi let lemma state itemset obtain join atom lattic support itemset obtain intersect tidlist atom gener lemma set itemset lemma x pi let lemma say itemset given union set itemset j support given intersect tidlist element j particular determin support kitemset simpli intersect tidlist two k length subset simpl check cardin result tidlist tell us whether new itemset frequent not figur show process pictori show initi databas tidlist item ie atom intermedi tidlist cd obtain intersect list c d ie similarli thu lexicograph rst two subset previou level requir comput support itemset level intersect intersect c w ct cd ad acw adt atw acdw acdt acdtw cdt act acd dtw ac actw initi databas tidlist figur comput support itemset via tidlist intersect lemma let x two itemset x lx ly proof follow denit support lemma state x subset cardin tidlist ie support must less equal cardin tidlist x practic import consequ lemma cardin intermedi tidlist shrink move lattic result fast intersect support count lattic decomposit prexbas class enough mainmemori could enumer frequent itemset travers powerset lattic perform intersect obtain itemset support practic howev limit amount mainmemori intermedi tidlist memori bring natur question decompos origin lattic smaller piec portion solv independ mainmemori address question below denit let p set equival relat p binari relat relat is exiv x x equival relat partit set p disjoint subset call equival class equival class element x p given x g dene function length prex x dene equival relat k lattic pi follow xy pi x k px is two itemset class share common k length prex therefor call k prexbas equival relat c w ct cd ad acw adt atw acdw acdt acdtw cdt act acd ctw ac actw acdtw acdw acdt actw ad ac acw adt atw act acd figur equival class a pi induc b a induc final lattic independ class figur show lattic induc equival relat pi collaps itemset common length prex equival class result set lattic equival class fa c d t w g lemma equival class x induc equival relat k sublattic pi proof let u v two element class x ie u v share common prex x u _ impli u _ v x u impli u sublattic pi x boolean lattic set atom exampl atom a top bottom element a applic lemma gener support itemset class sublattic intersect tidlist atom two subset previou level enough mainmemori hold temporari tidlist class solv x independ anoth interest featur equival class link class denot depend say want prune itemset exist least one infrequ subset see lemma process class specic order particular solv class bottom top correspond revers lexicograph order ie process w t follow d c nalli a guarante subset inform avail prune practic found one level decomposit induc sucient howev case class may still larg solv mainmemori scenario appli recurs class decomposit let assum a larg mainmemori sinc a boolean lattic decompos use figur b show equival class lattic induc appli a collaps itemset common length prex equival class result set class fac ad at aw g like befor class solv independ solv revers lexicograph order enabl subset prune nal set independ class obtain appli pi a shown figur c befor link show prune depend exist among class depend amount mainmemori avail recurs partit larg class smaller one class small enough solv independ mainmemori search frequent itemset section discuss ecient search strategi enumer frequent itemset within class actual pseudocod implement detail discuss section bottomup search bottomup search base recurs decomposit class smaller class induc equival relat k figur show decomposit a smaller class result lattic equival class also shown atom within class element class determin equival class lattic travers either depthrst breadthrst manner paper show result breadthrst travers ie rst process class follow class fact acw atw g nalli actw comput support itemset simpli intersect tidlist two subset previou level sinc search breadthrst techniqu enumer frequent itemset ac ad aw adt act acd acdt acdw adtw acdtw actw ac aw actw act equival class atom class figur topdown search topdown approach start top element lattic support determin intersect tidlist atom requir kway intersect top element kitemset advantag approach maxim element fairli larg one quickli identifi it one avoid nding support subset search start top element frequent done otherwis check subset next level process repeat identi minim infrequ itemset figur depict topdown search scheme enumer maxim frequent itemset within sublattic howev maxim element sublattic may global maxim thu gener nonmaxim itemset search start top element acdtw sinc infrequ check four length subset actw frequent mark subset frequent well examin unmark length subset three infrequ subset search stop ad minim infrequ itemset identi acdt acdw adtw adt acw act acd ad ac aw acdtw actw minim infrequ itemset ad figur topdown search gray circl repres infrequ itemset black circl maxim frequent white circl minim infrequ set hybrid search hybrid scheme base intuit greater support frequent itemset like part longer frequent itemset two main step approach begin set atom class sort descend order base support rst hybrid phase start intersect atom one time begin atom highest support gener longer longer frequent itemset process stop extens becom infrequ enter second bottomup phase remain atom combin atom rst set breadthrst fashion describ gener frequent itemset figur illustr approach just case better show bottomup phase assum ad adw also frequent search start reorder itemset accord support frequent rst combin ac aw obtain frequent itemset acw extend next pair get actw extens ad fail conclud hybrid phase found maxim set actw bottomup phase ad combin previou pair ensur complet search produc equival class ad solv use bottomup search hybrid search strategi requir way intersect enumer long maxim frequent itemset discov hybrid phase also nonmaxim one found bottomup phase anoth modic scheme recurs substitut second bottomup search hybrid search mainli maxim frequent element enumer acd ac acw aw ad acdtw actw hybrid phase ad ac ac ad aw pair sort support phase figur hybrid search gener smaller class maxim cliqu approach section show produc smaller sublattic equival class compar pure prexbas approach use addit inform smaller sublattic fewer atom save unnecessari intersect exampl k atom perform k intersect next level bottomup approach fewer atom thu lead fewer intersect bottomup search fewer atom also reduc number intersect hybrid scheme lead smaller maximum element size topdown search denit let p set pseudoequival relat p binari relat relat is exiv x x pseudoequival relat partit set p possibl overlap subset call pseudoequival class denit graph consist set element call vertic set line connect pair vertic call edg graph complet edg pair vertic complet subgraph graph call cliqu frequent itemset maxim cliqu associ graph maximalcliquebas class figur maxim cliqu associ graph prexbas maximalcliquebas class denot set frequent kitemset dene kassoci graph given g e vertex set zg let k denot set maxim cliqu g k figur show associ graph g exampl shown maxim cliqu set dene pseudoequival relat k lattic pi follow xy pi x k c k xy c px is two itemset relat ie pseudoclass subset maxim cliqu share common prex length k therefor call k maximalcliquebas pseudoequival relat lemma pseudoclass x induc pseudoequival relat k sublattic pi proof let u v two element class x ie u v share common prex x exist maxim cliqu c k u v c clearli u impli u _ v x u impli u thu pseudoclass x boolean lattic support element lattic gener appli lemma atom use three search strategi describ abov lemma let k denot set pseudoclass maximalcliquebas relat k pseudoclass induc prexbas relat k subset class x induc k convers x k union set pseudoclass given x g proof let x denot neighbor x graph g k x xgg word x consist element prex x extend possibl subset neighbor x graph g k sinc cliqu subset fy y g y prex x hand easi show x prex xg lemma state pseudoclass k renement ie smaller than class k use relat k instead k therefor gener smaller sublattic sublattic requir less memori process independ use three search strategi describ abov figur contrast class sublattic gener appar gener smaller class exampl prex class class contain element maximalcliqu class g class much smaller prexbas class smaller class k come cost sinc enumer maxim cliqu comput expens gener graph maxim cliqu decis problem npcomplet howev kassoci graph usual spars maxim cliqu enumer ecient edg densiti associ graph increas cliqu base approach may suer k thu use g k dens factor aect edg densiti includ decreas support increas transact size eect paramet studi experiment section maxim cliqu gener modi bierston algorithm gener maxim cliqu kassoci graph class x x said cover subset x given class c rst identifi cover set given fy cjcovi covi covz z c z yg exampl consid class shown gure similarli exampl sinc y cover set given set f g item cover set sinc subset show complet cliqu gener algorithm element cover set need consid gener maxim cliqu current class step recurs gener maxim cliqu element cover set class maxim cliqu cover set prex class identi obtain maxim cliqu current class step insert new cliqu duplic subset elimin new cliqu subset cliqu alreadi maxim list insert condit test shown line for cliq xcliqlist insert fig m icliqlist figur maxim cliqu gener algorithm weak maxim cliqu databas paramet edg densiti kassoci graph may high result larg cliqu signic overlap among them case cliqu gener take time redund frequent itemset may also discov within sublattic solv problem introduc notion weak maxim cliqu given two cliqu x say relat jxi j ie ratio common element distinct element cliqu greater equal threshold weak maxim cliqu g gener collaps two cliqu one provid relat cliqu gener weak maxim cliqu gener user speci valu note obtain regular maxim cliqu obtain singl cliqu preliminari experi indic use appropri valu overhead redund cliqu avoid found work well practic algorithm design implement section describ sever new algorithm ecient enumer frequent itemset rst step involv comput frequent item itemset next step gener sublattic class appli either prexbas equival relat maximalcliquebas pseudo equival relat set frequent itemset f sublattic process one time revers lexicograph order mainmemori use either bottomup topdown hybrid search describ step detail comput frequent itemset itemset current associ algorithm assum horizont databas layout one shown figur consist list transact transact identi follow list item transact contrast algorithm use vertic databas format one shown figur maintain diskbas tidlist item enabl us check support via simpl tidlist intersect comput f given vertic tidlist databas frequent item found singl databas scan item simpli read tidlist disk memori scan tidlist increment item support entri comput f let jij number frequent item averag idlist size byte naiv implement comput frequent itemset requir n idlist intersect pair item amount data read n n correspond around n data scan clearli ineci instead naiv method one could use two altern solut use preprocess step gather count sequenc user speci lower bound sinc inform invari comput onc cost amort number time data mine perform vertic horizont transform onth y done quit easili item i scan tidlist memori insert item array index tid li exampl consid idlist item a shown figur read rst tid insert array index transact repeat process item tidlist figur show invers process work addit item complet horizont databas recov vertic item tidlist process entail trivial amount overhead fact partit perform opposit invers horizont vertic tidlist format onth y littl cost also implement appropri memori manag recov block databas time recov transact memori final optim comput f directli updat count candid pair upper triangular array experi report section use horizont recoveri method comput f shall demonstr invers done quit ecient add c add add w add add figur verticaltohorizont databas recoveri search implement bottomup search figur show pseudocod bottomup search input procedur set atom sublattic s frequent itemset gener intersect tidlist distinct pair atom check cardin result tidlist recurs procedur call made itemset found frequent current level process repeat frequent itemset enumer term memori manag easi see need memori store intermedi tidlist two consecut level frequent itemset next level gener itemset current level delet atom atom j s j r min sup figur pseudocod bottomup search sinc sublattic process revers lexicograph order subset inform avail itemset prune fast subset check frequent itemset store hash tabl howev experi synthet data found prune littl benet mainli lemma say tidlist intersect especi ecient larg itemset nevertheless may databas prune crucial perform support prune dataset topdown search code topdown search given figur search begin maximum element r sublattic s check made see element alreadi known frequent perform kway intersect determin support frequent done otherwis recurs check support k subset also maintain hash tabl ht itemset known infrequ previou recurs call avoid process sublattic alreadi examin term memori manag topdown approach requir tidlist atom class memori r f jrj r min sup els r jy figur pseudocod topdown search hybrid search figur show pseudocod hybrid search input consist atom set sort descend order support maxim phase begin intersect atom one time frequent extens possibl atom involv phase store set remain atom enter bottomup phase atom intersect atom frequent itemset form atom new sublattic solv use bottomup search process repeat atom maxim phase requir mainmemori atom bottomup phase requir memori two consecut level hybrid sort support s maxim phase r min sup els break bottomup phase figur pseudocod hybrid search number databas scan process sublattic initi decomposit relev item tidlist scan memori tidlist atom frequent itemset initi sublattic construct intersect item tidlist frequent itemset enumer intersect tidlist atom use dierent search procedur initi class disjoint set item item tidlist scan disk entir frequent itemset enumer process sublattic gener case degre overlap item among dierent sublattic howev databas portion correspond frequent item need scan lot smaller entir databas furthermor sublattic share mani common item process batch mode minim disk access thu claim algorithm usual requir small number databas scan comput f new algorithm dierent algorithm propos list below algorithm dier search strategi use enumer relat use gener independ sublattic eclat use prexbas equival relat along bottomup search enumer frequent itemset maxeclat use prexbas equival relat along hybrid search enumer long maxim frequent itemset nonmaxim one cliqu use maximalcliquebas pseudoequival relat along bottomup search enumer frequent itemset maxcliqu use maximalcliquebas pseudoequival relat along hybrid search enumer long maxim frequent itemset nonmaxim one topdown use maximalcliquebas pseudoequival relat along topdown search enumer maxim frequent itemset note topdown search use larger sublattic gener like ecient aprcliqu use maximalcliquebas pseudoequival relat howev unlik algorithm describ abov use horizont data layout two main step possibl subset maximum element sublattic gener insert hash tree avoid duplic one hash tree length ie ksubset insert tree c k intern node hash tree depth contain hash tabl whose cell point node sublattic induc k k jrj insert ksubset r c k transact ksubset t k k jtj set frequent itemset figur pseudocod aprcliqu algorithm depth itemset store leav insert procedur start root hash success item insert candid leaf ii support count step similar apriori approach transact databas d form possibl ksubset search subset c k updat count found databas thu scan onc frequent itemset gener pseudocod shown figur apriori partit algorithm discuss apriori partit detail sinc experiment compar new algorithm them apriori algorithm apriori iter algorithm count itemset specic length given databas pass process start scan transact databas comput frequent item next set potenti frequent candid itemset form frequent item anoth databas scan made obtain support frequent itemset retain next pass process repeat frequent itemset enumer complet algorithm shown gure refer reader addit detail three main step algorithm gener candid length k frequent k length itemset self join f k ex ampl f bcdbcebdeg prune candid least one infrequ subset exampl acd prune sinc cd frequent prune get new set c scan transact obtain candid support candid store hash tree facilit fast support count note second iter optim use array count candid pair item instead store hash tree ffrequent itemset transact ksubset set frequent itemset figur apriori algorithm partit algorithm partit logic divid horizont databas number nonoverlap partit partit read vertic tidlist form item ie list tid item appear local frequent itemset gener via tidlist intersect local frequent itemset merg second pass made partit databas convert vertic layout global count chosen itemset obtain size partit chosen accommod mainmemori partit thu make two databas scan key observ use global frequent itemset must local frequent least one partit thu frequent itemset guarante found experiment result experi use mhz sun ultra workstat mb main memori use dierent synthet databas use benchmark databas mani associ rule algorithm wrote dataset gener use procedur describ gener produc longer frequent itemset paramet code avail send email author dataset mimic transact retail environ peopl tend buy set item togeth call potenti maxim frequent set size maxim element cluster around mean long itemset transact may contain one frequent set transact size also cluster around mean may contain mani item let denot number transact averag transact size size maxim potenti frequent itemset l number maxim potenti frequent itemset n number item data gener use follow procedur rst gener l maxim itemset averag size choos n item next gener transact averag size choos l maxim itemset refer reader detail databas gener experi set conduct databas dierent valu d databas paramet shown tabl databas size tabl databas paramet set figur show number frequent itemset dierent size databas use ex periment length longest frequent itemset total number frequent itemset databas shown tabl exampl tidk total frequent itemset variou length longest frequent itemset size support databas longest freq itemset number freq itemset tidk minsup tabl maximum size number frequent sequenc support number frequent itemset frequent itemset size min support figur number frequent itemset dierent size compar perform figur figur compar new algorithm apriori partit with databas partit decreas valu minimum support dierent databas support decreas size number frequent itemset increas apriori thu make multipl pass databas pass tidk perform poorli partit perform wors apriori high support sinc databas scan time point overhead associ invert databas onth domin partit howev support lower partit win apriori sinc scan databas twice result agreement previou experi compar two algorithm one problem partit number partit increas number local frequent itemset global frequent increas thi reduc somewhat random partit select partit thu spend lot time perform redund intersect exampl compar time partit partit dataset partit typic take factor time time partit ti at support take time more figur show number tidlist intersect dierent algorithm dierent dataset make clear partit perform four time intersect partit aprcliqu scan databas onc outperform apriori partit higher support valu dataset aprcliqu sensit qualiti maxim cliqu sublattic gener small support increas transact size xed edg densiti kassoci graph increas consequ increas size maxim cliqu aprcliqu time sec minimum support partit aprcliqu topdown eclat cliqu maxeclat maxcliqu time sec minimum support partit aprcliqu topdown eclat cliqu maxeclat maxcliqu time sec minimum support partit aprcliqu topdown eclat cliqu maxeclat maxcliqu time sec minimum support partit aprcliqu topdown eclat cliqu maxeclat maxcliqu time sec minimum support partit aprcliqu topdown eclat cliqu maxeclat maxcliqu time sec minimum support partit aprcliqu topdown eclat cliqu maxeclat maxcliqu figur total execut time time sec minimum support partit eclat cliqu maxeclat maxcliqu figur total execut time perform well condit topdown usual perform better aprcliqu share characterist aprcliqu ie better apriori partit higher support valu except dataset lower support maximum cliqu size worst case becom larg number frequent item forc topdown perform mani kway intersect determin minim infrequ set eclat perform signicantli better algorithm case usual outperform apriori order magnitud partit factor two partit factor four eclat make databas scan requir hash tree use simpl intersect oper gener frequent itemset further eclat abl handl lower support valu dens dataset eg ti ti apriori partit run virtual memori support look comparison remain four method main contribut work ie eclat maxeclat cliqu maxcliqu cliqu use maximalcliquebas decomposit gener smaller class fewer number candid howev perform slightli better eclat cliqu usual better eclat sinc cut number tidlist intersect shown figur cliqu perform anywher fewer intersect eclat dierenc method substanti sinc save number intersect translat similar reduct execut time graph maxeclat maxcliqu indic reduct search space perform hybrid search provid signic gain maxim cliquebas strategi outperform prex number intersect min support partit topdown eclat cliqu maxeclat maxcliqu figur number tidlist intersect support base counterpart maxcliqu alway better maxeclat due smaller class biggest dierenc method observ ti maxcliqu twice fast maxeclat interest result ti could run cliquebas method support prexbas method eclat maxeclat abl handl low support valu reason cliquebas approach fail whenev edg densiti associ graph increas number size cliqu becom larg signic overlap among dierent cliqu case cliqu base scheme start suer best scheme databas consid maxcliqu sinc benet smaller sublattic hybrid search scheme figur give number intersect perform maxcliqu compar method one see maxcliqu cut candid search space drastic anywher factor for ti for ti eclat perform fewest intersect method term raw perform maxcliqu outperform apriori factor partit factor eclat much factor ti furthermor method abl handl support valu ti see figur longest frequent itemset size bottomup search method would enumer least subset maxcliqu perform intersect even though total frequent itemset see tabl maxeclat quickli identi size long itemset also long itemset thu avoid enumer subset support maxcliqu take second apriori take second factor partit ran virtual memori summar sever reason last four algorithm outperform previou approach use simpl join oper tidlist length frequent sequenc increas size tidlist decreas result fast join complic hashtre structur use overhead gener search custom subsequ incur structur typic poor local hand new algorithm excel local sinc join requir linear scan two list minimum support lower larger frequent sequenc found apriori make complet dataset scan iter eclat three method hand restrict usual scan cut io cost hybrid search approach success quickli identifi long itemset earli abl avoid enumer subset long itemset size hybrid search method abl run method run virtual memori rel time number transact ti min support partit aprcliqu topdown eclat cliqu maxeclat rel time transact size min support eclat cliqu maxeclat maxcliqu figur scaleup experi a number transact b transact size scalabl goal experi measur new algorithm perform increas number transact averag transact size figur show dierent algorithm scale number transact increas million time normal execut time maxcliqu transact minimum support valu use number partit partit vari algorithm scale linearli new algorithm continu outperform apriori partit figur show dierent algorithm scale increas transact size time normal execut time maxcliqu transact instead percentag use absolut support physic size databas kept roughli keep constant valu use goal setup measur eect increas transact size keep paramet constant see gradual increas execut time algorithm increas transact size howev new algorithm outperform apriori partit transact size increas number cliqu increas cliqu base algorithm start perform wors prexbas algorithmsmemori usag mean time eclat figur eclat memori usag memori usag figur show total mainmemori use tidlist eclat comput frequent itemset progress tidk mean memori usag less mb roughli total databas size gure show case memori usag twice mean peak graph usual due initi construct itemset atom tidlist within sublattic gure conrm sublattic produc small enough intermedi tidlist class kept mainmemori conclus paper present new algorithm ecient enumer frequent itemset present latticetheoret approach partit frequent itemset search space small independ subspac use either prexbas maximalcliquebas method subproblem solv mainmemori use bottomup topdown hybrid search procedur entir process usual take databas scan experiment evalu show maximalcliquebas decomposit precis lead smaller class combin hybrid search obtain best algorithm maxcliqu outperform current approach order magnitud show new algorithm scale linearli number transact r mine associ rule set item larg databas fast discoveri associ rule parallel mine associ rule fast algorithm mine associ rule dynam itemset count implic rule market basket data fast distribut algorithm mine associ rule introduct lattic order arbor bipartit subgraph list algorithm comput intract guid theori np complet data mine discov speci scalabl parallel data mine associ rule perspect databas data mine gener maximum independ set bipartit graph maximum cliqu circulararc graph interpret graph complex characterist search speci zarankiewicz number new algorithm discov maximum frequent set mine associ rule antiskew algorithm fast sequenti parallel algorithm associ rule mine comparison correct bierston algorithm gener cliqu memori placement techniqu parallel associ mine integr associ rule mine databas altern implic sampl larg databas associ rule evalu sampl data mine associ rule new algorithm fast discoveri associ rule parallel algorithm fast discoveri associ rule tr ctr xiuli yunhai tong shiwei tang dongq yang effici increment mainten frequent pattern fptree journal comput scienc technolog v n p novemb zengyou xiaofei xu shengchun deng mine topk strongli correl item pair without minimum correl threshold intern journal knowledgebas intellig engin system v n p april valeri guralnik georg karypi parallel treeprojectionbas sequenc mine algorithm parallel comput v n p april peiyi tang li ning ningn wu domain data partit parallel mine frequent close itemset proceed rd annual southeast region confer march kennesaw georgia toon calder bart goethal michael mampaey mine itemset presenc miss valu proceed acm symposium appli comput march seoul korea bart goethal memori issu frequent itemset mine proceed acm symposium appli comput march nicosia cypru alexandro nanopoulo apostolo n papadopoulo yanni manolopoulo mine associ rule larg cluster domain inform system v n p juli supportord trie fast frequent itemset discoveri ieee transact knowledg data engin v n p juli yudho giri sucahyo raj p gopalan ctitl effici frequent item set mine use compress prefix tree pattern growth proceed fourteenth australasian databas confer p februari adelaid australia raj p gopalan yudho giri sucahyo effici mine long frequent pattern larg dens dataset design applic hybrid intellig system io press amsterdam netherland nele dexter paul w purdom dirk van gucht probabl analysi candidatebas frequent itemset algorithm proceed acm symposium appli comput april dijon franc jauji shen powei hsu robust associ watermark techniqu base similar diagram pattern recognit v n p april jie dong min han bittablefi effici mine frequent itemset algorithm knowledgebas system v n p may mohammad elhajj osmar r zaan cofi approach mine frequent itemset revisit proceed th acm sigmod workshop research issu data mine knowledg discoveri june pari franc bassem sayrafi dirk van gucht paul w purdom effect effici comput bound support itemset frequent itemset mine problem proceed st intern workshop open sourc data mine frequent pattern mine implement p august chicago illinoi son n nguyen maria e orlowska studi data partit approach frequent itemset mine proceed th australasian databas confer p januari hobart australia yaochun huang hui xiong weili wu ping deng zhongnan zhang mine maxim hypercliqu pattern hybrid search strategi inform scienc intern journal v n p februari congnan luo anil l pereira soon m chung distribut mine maxim frequent itemset data grid system journal supercomput v n p juli moham j zaki chingjui hsiao effici algorithm mine close itemset lattic structur ieee transact knowledg data engin v n p april moham j zaki karam gouda fast vertic mine use diffset proceed ninth acm sigkdd intern confer knowledg discoveri data mine august washington dc geller xuan zhou kalpana prathipati sripriya kanigiluppai xiaom chen rais data improv support rule mine rais far rais intellig data analysi v n p juli mukund deshpand georg karypi use conjunct attribut valu classif proceed eleventh intern confer inform knowledg manag novemb mclean virginia usa charu c aggarw toward long pattern gener dens databas acm sigkdd explor newslett v n juli p valtchev r missaoui p lebrun partitionbas approach toward construct galoi concept lattic discret mathemat v n p octob massimo coppola marco vanneschi parallel distribut data mine parallel skeleton distribut object data mine opportun challeng idea group publish hershey pa claudio silvestri salvator orlando distribut approxim mine frequent pattern proceed acm symposium appli comput march santa fe new mexico doug burdick manuel calimlim jason flannick johann gehrk tomi yiu mafia maxim frequent itemset algorithm ieee transact knowledg data engin v n p novemb bart goethal moham j zaki advanc frequent itemset mine implement report fimi acm sigkdd explor newslett v n june r j kuo s y lin c w shih mine associ rule integr cluster analysi ant coloni system health insur databas taiwan expert system applic intern journal v n p octob gosta grahn jianfei zhu fast algorithm frequent itemset mine use fptree ieee transact knowledg data engin v n p octob john d holt soon m chung parallel mine associ rule text databas journal supercomput v n p march toon calder bart goethal nonderiv itemset mine data mine knowledg discoveri v n p februari chihm chen increment person web page mine util selforgan hcmac neural network web intellig agent system v n p august chihm chen increment person web page mine util selforgan hcmac neural network web intellig agent system v n p januari michihiro kuramochi georg karypi effici algorithm discov frequent subgraph ieee transact knowledg data engin v n p septemb tane mielikinen frequencybas view pattern collect discret appli mathemat v n p may aaron ceglar john f roddick associ mine acm comput survey csur v n pe mukund deshpand michihiro kuramochi nikil wale georg karypi frequent substructurebas approach classifi chemic compound ieee transact knowledg data engin v n p august