t hash base parallel algorithm mine associ rule a paper propos four parallel algorithm npa spa hpa hpaeld mine associ rule sharednoth parallel machin improv perform npa candid itemset copi amongst processor lead memori overflow larg transact databas remain three algorithm partit candid itemset processor partit simpli spa transact data braodcast processor hpa partit candid itemset use hash function elimin broadcast also reduc comparison workload significantli hpaeld fulli util avail memori space detect extrem larg itemset copi them also effect flatter load processor implement algorithm sharednoth environ perform evalu show best algorithm hpaeld attain good linear speedup ratio effect handl skew b introduct recent databas mine begun attract strong attent progress barcod technolog pointofsal system retail compani becom gener larg amount transact data data archiv use effi cientli advanc microprocessor secondari storag technolog allow us analyz vast amount transact log data extract interest custom behavior databas mine method effici discoveri use inform rule previous unknown pattern exist data item embed larg databas allow effect util exist data one import problem databas mine mine associ rule within databas call basket data analysi problem basket data type typic consist transact identifi bought item partransact analyz transact data extract associ rule custom buy b also buy c sever algorithm propos solv problem howev sequenti algorithm find associ rule requir scan transact databas repeatedli order improv qualiti rule handl larg amount transact data requir incred long comput time gener difficult singl processor provid reason respons time examin feasibl parallel associ rule mine parallel algorithm call pdm mine associ rule propos pdm copi candid itemset among processor explain later second pass apriori algorithm introduc ragraw rsrikant candid itemset becom larg fit local memori singl processor thu requir read transact dataset repeatedli disk result signific perform degrad paper propos four differ parallel algorithm npa spa hpa hpaeld mine associ rule base apriori algorithm npa non partit apriori candid itemset copi among processor pdm mention correspond npa remain three algorithm partit candid itemset processor thu exploit aggreg memori system effect partit simpli simpli partit apriori transact data broadcast processor hpa hash partit apriori partit candid itemset use hash function hash join elimin transact data broadcast reduc comparison workload significantli case size candid itemset smaller paper present local workshop japan avail system memori hpa use remain free space howev hpaeld hpa extrem larg itemset duplic util memori copi itemset itemset sort base frequenc appear hpaeld choos frequent occur itemset copi processor memori space use contribut reduc commun among processor hpaeld extens hpa treat frequent occur itemset special way reduc influenc transact data skew implement sharednoth node parallel comput fujitsu apddv show best algorithm hpaeld attain satisfactori linear speedup also effect skew handl paper organ follow next section describ problem mine associ rule section propos four parallel algorithm perform evalu detail cost analysi given section section conclud paper mine associ rule first introduc basic concept associ rule use formal present let set liter call item set transact transact set item i transact associ uniqu identifi call id say transact contain set item i itemset x support transact set s transact contain x denot associ rule implic form x rule two measur valu support confid support rule x supportx confid c rule x transact set mean c transact contain x also contain written ratio supportx problem mine associ rule find rule satisfi userspecifi minimum support minimum confi denc decompos two subproblem find itemset support userspecifi minimum support itemset call larg itemset larg itemset deriv rule userspecifi minimum confid follow larg itemset x minimum confid rule xy deriv exampl let g transact databas let minimum support minimum confid respect then first step gener larg itemset g second step associ deriv find larg itemset associ rule deriv straightforward manner second subproblem big issu howev larg scale transact data set use databas mine first subproblem nontrivi problem much research date focus first subproblem briefli explain apriori algorithm find larg itemset propos sinc parallel algorithm propos us section base algorithm figur give overview algorithm use notat given tabl kitemset itemset k item larg kitemset whose support larger userspecifi minimum support candid kitemset potenti larg itemset tabl notat first pass pass support count item count scan transact databas hereaft prepar field name support count itemset use measur mani time itemset appear transact sinc itemset contain singl item item support count field item satisfi minimum support pick out item call larg itemset l kitemset defin set k item second pass pass itemset gener use larg itemset call candid itemset c support count candid itemset count scan transact databas support count itemset mean number transact contain itemset end scan larg itemset l k candid size k gener l k transact increment support count candid c k contain candid c k satisfi minimum support answer figur apriori algorithm ning transact data larg itemset l satisfi minimum support determin follow denot kth iter pass k gener candid itemset candid kitemset c k gener use larg k itemset l k determin previou pass see section count support support count candid kitemset count scan transact databas determin larg itemset candid kitemset check whether satisfi minimum support not larg kitemset l k satisfi minimum support determin procedur termin larg itemset becom empti otherwis k apriori candid gener procedur gener candid kitemset use itemset follow given larg k itemset want gener superset set larg kitemset candid gener occur two step first join step join larg k itemset k itemset next prune step delet itemset candid kitemset k subset candid itemset larg k itemset parallel algorithm section describ four parallel algorithm npa spa hpa hpaeld first sub problem call count support process here after find larg itemset sharednoth parallel machin algorithm design sequenti algorithm count support process requir largest comput time transact databas scan repeatedli larg number candid itemset examin design parallel algorithm count support process processor hold candid item set parallel straightforward howev larg scale transact data set assumpt hold figur show number candid itemset larg itemset pass statist taken real pointofsal data figur vertic axi log scale candie memori usag itemset byte pass number candid itemset larg itemset figur real pointofsal data date itemset pass larg fit within local memori singl processor npa candid itemset copi amongst processor case candid itemset fit within local memori singl processor candid itemset partit fragment fit memori size processor support count process requir repetit scan transact databas remain three algorithm spa hpa hpaeld partit candid itemset memori space processor thu spa hpa hpaeld exploit total sy tem memori effect number processor increas simplic assum size candid itemset larger size local memori singl processor smaller sum memori processor easi later introduc algorithm name npa reason parallel easi clarifi extend algorithm handl candid itemset whose size exce sum processor memori non partit apriori npa npa candid itemset copi processor processor work independ final statist gather coordin processor minimum support condit examin figur give behavior pass k pth processor npa use notat given tabl item fc fragment fit processor local memori increment support count candid contain send support count c coordin coordin determin l satisfi userspecifi minimum support c broadcast l processor receiv l coordin l dk l k candid size k gener l k fc partit c k fragment fit processor local memori increment support count candid k contain send support count c k coordin coordin determin l k satisfi userspecifi minimum support c k broadcast l processor receiv l k coordin l figur npa algorithm processor work follow gener candid itemset larg kitemset candid kitemset size c k byte size main memori byte transact store local disk pth processor set fragment candid kitemset fragment fit local memori processor j size c k byte k set larg kitemset deriv c k tabl notat processor gener candid kitemset use larg k itemset insert hash tabl scan transact databas count support count valu processor read transact databas local disk gener kitemset transact search hash tabl hit occur increment support count valu determin larg itemset read transact data pro cessor support count gather coordin check determin whether minimum support condit satisfi not larg kitemset empti algorithm termi nate otherwis k coordin broadcast larg kitemset processor goto size candid itemset exce local memori singl processor candid itemset partit fragment fit within processor local memori process repeat fragment figur begin loop show method candid itemset divid fragment fragment process sequenti although algorithm simpl transact data exchang among processor second phase disk io cost becom larg sinc algorithm read transact databas repeatedli candid itemset larg fit within processor local memori simpli partit apriori spa npa candid itemset partit copi among processor howev candid itemset usual becom larg fit within local memori singl processor gener occur second pass spa partit candid itemset equal memori space processor thu exploit aggreg memori system memori effici low copi base npa sinc candid itemset partit among processor processor broadcast transact data processor second phase broadcast requir npa figur give behavior pass k pth processor spa use notat tabl assum size candid itemset smaller size sum processor memori extens algorithm handl much larger candid itemset easi divid candid itemset fragment like npa larg kitemset candid kitemset transact store local disk pth processor set candid kitemset assign k pth processor mean number processor k set larg kitemset deriv tabl notat processor work follow gener candid itemset processor gener candid kitemset use larg k itemset insert part candid itemset hash tabl candid kitemset assign processor roundrobin manner scan transact databas count support count valu kitemset assign equal processor roundrobin manner roundrobin mean candid assign processor cyclic manner ith candid assign processor mod n number processor system item assign pth processor broadcast processor receiv transact sent processor increment support count candid contain receiv tran action candid c p satisfi userspecifi minimum support processor determin individu whether assign candid kitemset userspecifi minimum support coordin coordin make l broadcast processor receiv l coordin l k k g candid size k assign pth processor gener broadcast processor receiv transact sent processor increment support count candid contain receiv transact candid c p satisfi userspecifi minimum support k coordin coordin make l k k broadcast processor receiv l k coordin figur spa algorithm processor read transact databas local disk also broadcast processor transact en tri read disk receiv anoth processor support count increment way npa determin larg itemset read transact data processor determin individu whether candid kitemset satisfi userspecifi minimum support not processor send l p k coordin l k deriv larg kitemset empti algorithm termi nate otherwis k coordin broadcast larg kitemset processor goto although algorithm simpl easi im plement commun cost becom larg sinc algorithm broadcast transact data second phase hash partit apriori hpa hpa partit candid itemset among processor use hash function like hash join elimin broadcast transact data reduc comparison workload significantli figur give behavior pass k pth processor hpa use notat tabl processor work follow gener candid itemset processor gener candid kitemset use larg k itemset appli hash function determin destin processor id id own insert hash tabl not discard scan transact databas count support count processor read transact databas local disk gener kitemset transact appli hash function use phase deriv destin processor id send kitemset it itemset receiv processor local gener whose id equal pro cessor id search hash tabl hit increment support count valu determin larg itemset spa item assign pth processor base hash valu foral item x determin destin processor id appli hash function use item partit send item it id increment support count item receiv item processor increment support count item candid c p minimum sup port processor determin individu whether assign candid kitemset userspecifi minimum support coordin coordin make l broadcast processor receiv l coordin l k candid kitemset whose hash valu correspond pth processor determin destin processor id appli hash function use item partit send kitemset it id increment support count itemset receiv kitemset processor increment support count itemset candid c p k minimum support k coordin coordin make l k k broadcast processor receiv l k coordin figur hpa algorithm larg kitemset empti algorithm termi nate otherwis k coordin broadcast larg kitemset processor goto hpa extrem larg itemset duplic case size candid itemset smaller avail system memori hpa use remain free space howev hpaeld util memori copi itemset itemset sort base frequenc ap pearanc hpaeld choos frequent occur itemset copi processor memori space use contribut reduc commun among pro cessor hpa gener difficult achiev flat workload distribut transact data highli skew is itemset appear frequent transact data processor itemset receiv much larger amount data other might becom system bottleneck real situat skew item easili discov retail applic certain item milk egg appear frequent other hpaeld handl problem effect sinc treat frequent occur itemset entri special way hpaeld copi frequent occur itemset among processor count support count local like npa first phase processor gener candid kitemset use larg kitemset sum support valu larg itemset exce given threshold insert processor hash tabl remain candid itemset partit hpa threshold determin avail memori fulli util use sort read transact data processor support count gather check whether satisfi minimum support condit not sinc algorithm step equal hpa omit detail descript hpaeld perform evalu figur show architectur fujitsu apddv system measur perform propos parallel algorithm mine associ rule npa spa hpa hpa eld apddv employ sharednoth archi tectur processor system use processor call cell mhz sparc mb local memori gb local disk drive pro host snet bnet tnet cell disk figur organ apddv system jdj number transact jtj averag number item par transact jij averag number item maxim potenti larg itemset name jtj jij jdj size tabl paramet data set cessor connect three independ network t net bnet snet commun processor done via toru mesh network call tnet broadcast commun done via bnet addit special network barrier syn chroniz call snet provid evalu perform four algo rithm synthet data emul retail transact use gener procedur base method describ tabl show mean variou paramet characterist data set use experi measur execut time figur show execut time four propos algorithm use three differ data set vari minimum support valu processor use experi transact data evenli spread processor local disk experi parallel algorithm adopt pass remain pass perform use npa sinc singl processor memori cannot hold entir candid itemset pass fit npa effici hpa hpaeld significantli outperform spa elaps time sec hpa hpaeld elaps time sec hpa hpaeld elaps time sec hpa hpaeld figur execut time vari minimum support valu sinc transact data broadcast processor spa commun cost much larger spa hpa hpaeld data broadcast transfer one processor determin hash function addit spa transmit transact data hpa hpa eld transmit itemset reduc commun cost npa execut time increas sharpli minimum support becom small sinc candid itemset becom larg small minimum sup port singl processor memori cannot hold entir candid itemset npa divid candid itemset fragment processor scan transact data repetit frag ment significantli increas execut time commun cost analysi analyz commun cost algorithm sinc size transact data usual much larger candid item set focu transact data transfer npa candid itemset initi copi processor incur processor commun addit last phase process processor send support count statist coordin minimum support condit ex amin also incur commun overhead ignor overhead concentr transact data transfer spa hpa second phase spa processor broadcast transact data processor total amount commun data spa pass k express follow n number processor ip number item ith transact pth processor p number pth processor transact jdj number transact hpa itemset transact transmit limit number processor instead broadcast number candid depend data synthes gener total amount commun hpa pass k express follow ip one transact potenti gener ip c k candi date howev practic filter out denot paramet ff k ip sinc ff usual small spa k sinc difficult deriv ff measur amount data receiv processor figur show total amount receiv messag spa hpa hpaeld ti transact data use minimum support see figur amount messag receiv hpa much smaller spa hpaeld amount messag receiv reduc sinc part candid itemset handl separ itemset correspond transmit local processedamount receiv messag size spa hpa hpaeld figur amount messag receiv pass search cost analysi second phase hash tabl consist candid itemset probe transact itemset number processor small number item transact larg hpa k could larger spa reason number processor happen see figur current experi mine associ rule item classif hierarchi combin item becom much larger ordinari mine associ rule ff k increas hpa k tend increas well report case futur paper npa number probe pass k express follow ip amount candid itemset byte size main memori singl processor byte npa candid itemset larg fit singl processor memori candid itemset divid support count scan transact databas repeatedli spa everi processor must process transact data number search pass k express follow ip hpa hpaeld number search pass k express follow ip search cost hpa hpaeld alway smaller spa appar hpa k commun cost also search cost also reduc significantli employ hash base algorithm quit similar way hash join algorithm work much better nest loop algorithm npa search cost depend size candid itemset candid itemset becom larg npa k could larger spa k fit npa k is search cost much smaller spa almost equal hpa figur show search cost three algorithm pass ti data set use processor minimum support experiment result far shown pass except pass adopt npa algorithm appli differ algorithm pass comput heaviest part total process howev order focu search cost individu algorithm clearli algorithm appli pass cost number probe million pass number hpa figur search cost spa npa hpa npa chang drastic pass search cost npa highli depend size avail main memori memori insuffici npa perform deterior significantli due cost increas pass figur search cost npa less spa howev explain befor incur lot addit io cost therefor total execut time npa much longer spa comparison hpa hpaeld section perform comparison hpa hpaeld describ hpaeld treat frequent appear itemset sepa rate order determin itemset pick up use statist accumul pass number pass increas size candid itemset decreas thu focus pass number candid itemset separ adjust sum nondupl itemset duplic itemset would fit avail memori figur show execut time hpa hpaeld ti vari minimum support valu processor system hpaeld alway faster hpa smaller minimum support larger ratio differ execut time two algorithm becom minimum support valu decreas number candid itemset count support increas candid itemset frequent found caus larg amount commun perform hpa degrad high commun traffic elaps time sec hpa hpaeld figur execut time hpa hpaeld pass figur show number probe processor hpa hpaeld ti use processor system pass pick exampl highli skew horizont axi denot processor id hpa distribut number processor hpa hpaeld number probe million figur number search hpa hpa eld pass probe flat sinc candid itemset alloc one processor larg amount messag concentr certain processor mani candid itemset occur frequent hpaeld number probe compar flat hpaeld handl certain candid itemset separ thu reduc influenc data skew howev see figur still remain deviat load amongst processor parallel mine proce sor introduc sophist load balanc mechan requir investig speedup figur show speedup ratio pass vari number processor use curv normal processor execut time minimum support valu set speedup ratio number processor hpa hpaeld ideal figur speedup curv npa hpa hpaeld attain much higher linear spa hpaeld extens hpa extrem larg itemset decomposit increas linear hpaeld attain satisfactori speed ratio algorithm focus item distribut transact file pick extrem frequent occur item transfer item could result network hot spot hpaeld tri send item process local small modif origin hpa algorithm could improv linear substanti effect increas transact databas size sizeup figur show effect increas transact databas size number transact increas million transact use data set ti behavior result chang increas databas size minimum support valu set number processor kept shown parallel algorithm attain linear summari relat work paper propos four parallel algorithm mine associ rule summari four elaps time sec amount transact thousand hpa hpaeld figur sizeup curv algorithm shown tabl npa candid itemset copi amongst proce sor processor work entir candid itemset npa requir data transfer support count howev case entir candid itemset fit within memori singl processor candid itemset divid support count scan transact databas repeatedli thu disk io cost npa high pdm propos copi candid itemset among processor disk io pdm also high remain three algorithm spa hpa hpaeld partit candid itemset memori space processor better exploit total system memori disk io cost low spa arbitrarili partit candid itemset equal among processor sinc processor broadcast local transact data pro cessor commun cost high hpa hpaeld partit candid itemset use hash function elimin need transact data broadcast reduc comparison workload significantli hpaeld detect frequent occur itemset handl separ reduc influenc workload skew conclus sinc mine associ rule requir sever scan transact file comput requir larg singl processor reason respons time motiv research paper propos four differ parallel algorithm mine associ rule sharednoth parallel machin examin viabil npa spa hpa hpaeld candid copi partit partit itemset partial copi io cost high low communica tion cost high low skew handl tabl characterist algorithm iti implement node parallel ma chine fujitsu apddv singl processor hold candid item set parallel straightforward suffici partit transact processor processor process alloc transact data parallel name algorithm npa howev tri larg scale data mine larg transact file candid itemset becom larg fit within main memori singl processor addit size transact file small minimum support also increas size candid itemset decreas minimum support comput time grow rapidli mani case discov interest associ rule spa hpa hpaeld partit transact file partit candid itemset among processor implement algorithm shardnoth parallel machin perform evalu show best algorithm hpaeld attain good linear speedup fulli util avail memori space also effect skew handl present parallel mine gener associ rule describ includ taxonomi isa hierarchi item belong class hierarchi mine associ higher class lower class also examin thu candid itemset space becom much larger comput time also take even longer naiv singl level associ mine parallel process essenti heavi mine process acknowledg research partial support prioriti research program ministri educ would like thank fujitsu parallel comput research center allow us use apddv system r min ing associ rule set item larg databas fast algorithm mine associ rule an effect hashbas algorithm mine associ rule ef ficient algorithm discov associ rule an effect algorithm mine associ rule larg databas effici parallel data mine associ rule considera tion parallel databas mine perfor manc evalu ap effect messag handl broadcast barrier synchron benchmark perform mine gener associ rule tr ctr ferenc kovc sndor juhsz perform evalu distribut associ rule mine algorithm proceed th wsea intern confer softwar engin parallel distribut system p februari salzburg austria moham j zaki parallel distribut associ mine survey ieee concurr v n p octob takahiko shintani masaru kitsuregawa parallel mine algorithm gener associ rule classif hierarchi acm sigmod record v n p june david w cheung kan hu shaowei xia asynchron parallel algorithm mine associ rule sharedmemori multiprocessor proceed tenth annual acm symposium parallel algorithm architectur p june juli puerto vallarta mexico masahisa tamura masaru kitsuregawa dynam load balanc parallel associ rule mine heterogen pc cluster system proceed th intern confer larg data base p septemb masaru kitsuregawa masashi toyoda iko pramudiono web commun mine web log mine commod cluster base execut australian comput scienc commun v n p januaryfebruari euihong sam han georg karypi vipin kumar scalabl parallel data mine associ rule ieee transact knowledg data engin v n p may takayuki tamura masato oguchi masaru kitsuregawa parallel databas process node pc cluster case decis support queri process data mine proceed acmiee confer supercomput cdrom p novemb san jose ca masato oguchi masaru kitsuregawa optim transport protocol paramet larg scale pc cluster evalu parallel data mine cluster comput v n p david w cheung kan hu shaowei xia adapt algorithm mine associ rule sharedmemori parallel machin distribut parallel databas v n p march dejiang jin sotirio g ziavra superprogram approach mine associ rule parallel pc cluster ieee transact parallel distribut system v n p septemb valeri guralnik georg karypi parallel treeprojectionbas sequenc mine algorithm parallel comput v n p april david w cheung yongqiao xiao effect data distribut parallel mine associ data mine knowledg discoveri v n p septemb masato oguchi masaru kitsuregawa dynam remot memori acquisit parallel data mine atmconnect pc cluster proceed th intern confer supercomput p june rhode greec lilian harada naoki akaboshi kazutaka ogihara riichiro take dynam skew handl parallel mine associ rule proceed seventh intern confer inform knowledg manag p novemb bethesda maryland unit state claudio silvestri salvator orlando distribut approxim mine frequent pattern proceed acm symposium appli comput march santa fe new mexico d w cheung s d lee v xiao effect data skew workload balanc parallel data mine ieee transact knowledg data engin v n p may fran coenen paul leng partit strategi distribut associ rule mine knowledg engin review v n p march y sung zhao li chew l tan peter a ng forecast associ rule use exist data set ieee transact knowledg data engin v n p novemb john d holt soon m chung parallel mine associ rule text databas journal supercomput v n p march vipin kumar moham zaki high perform data mine tutori pm tutori note sixth acm sigkdd intern confer knowledg discoveri data mine p august boston massachusett unit state