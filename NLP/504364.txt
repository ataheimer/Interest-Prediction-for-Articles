t classistyp inadequ object reus a well known class type two differ concept objectori program languag oopl howev mani popular oopl class use type paper argu classistyp principl major obstacl softwar reus especi object reus concept basic entiti ie object object class object type object kind type hierarchi oopl revisit notion object reus defin elabor addit show parameter type gener function better serv use kindbound quantif univers quantif mechan b introduct objectori languag technolog propel softwar reus unpreced level howev softwar reus current stage still mostli within singl softwar project form sourcecod reus librari dream softwar construct would similar assembl integr circuit ic hardwar still realiz program mani essenti aspect twenti year ago softwar construct still basic stage program write advanc stage softwar integr si consid object reus rather class reus key concept softwar integr object basic build block objectori system firstclass citizen program via softwar integr mean reus integr object develop independ by work support natur scienc engin research council canada grant ogp project object vendor execut form program conveni without know implement detail consid object reus much import concept class reus softwar integr consid exampl physic world purchas aircondition hous need want know design technic detail aircondition necessari us know whether aircondition satisfi specif eg cool capac physic dimens voltag case object the aircondition type a specif concern interest need even want know class object the technic detail aircondition consid one major caus stagnat reus that major classbas objectori program languag object class directli use object type exampl specifi object type function paramet use class place type approach may due fact semant object type easi defin specif implement import notic class implementationdepend entiti gener also object cannot exist autonom apart class definit current classbas languag contrast object type implementationindepend entiti classistyp principl use mani objectori languag restrict object type specif implement argu paper classistyp principl class themselv obstacl object reus anoth issu concern type hierachi objectori languag parameter type note c class templat parameter type classistyp principl consid parameter type type function map given type or type type domain type function ie domain type paramet commonli repres t n set type howev mani case type use replac type paramet parameter type restrict implicitli impos parameter type definit consid object kind higherlevel entiti object type best suit defin domain type paramet parameter type well gener function object object class object type object kind basic entiti type hierarchi variou objectori languag next section review basic concept entiti well relationship among them also discuss similar differ abstract class interfac object type focu attent classistyp principl give initi analysi advantag well potenti problem also distinguish object kind supertyp object reus defin analyz section consid object reus concern mainli follow five issu object creation object autonomi object applic object integr object modif describ five issu well role object reus section discuss role class classistyp principl play five issu object reus find class apt object creation object autonomi classistyp principl inadequ object applic object integr object modif ie last three issu object reus also give insight analysi case section argu parameter type gener function best serv kindbound qualif ie type paramet qualifi higherlevel entiti object kind conclud paper section summar suggest develop objectori languag type hierarchi objectori system section give view basic type entiti objectori system consid object object class object type well concept object kind brief commonli accept concept pay attent point relat topic subsequ section paper note object class object type differ entiti howev approach object class use place object type ie classistyp principl use mani objectori languag includ c java also describ concept object kind fundament differ supertyp object kind three seemingli equival term abstract class interfac object type also compar object object integr unit data method abstract applic domain implement domain entiti crisp boundari mean problem concern object ident data field method field data field store intern state object act data storag method field function modifi intern state object access data storag interfac object outsid world intern state object modifi dynam execut normal chang made method method may access outsid object may use method object call method directli access outsid properti object clearli object firstclass entiti objectori system object class serv descript object well mechan creat object object instanc class classbas languag way describ object class class also consid set object share descript thu relat object class c denot c gener object class implementationdepend entiti exampl stack class array implement stack class linkedlist implement consid differ class differ object class implement differ ident mayb differ intern state abstract class may independ implement howev abstract class cannot descript object directli object instanti directli concret class abstract class so abstract class set direct object member object class static entiti unlik object class cannot chang runtim defin relationship class static too modifi relationship object class runtim call properti class method class access directli outsid object class direct member share exactli set method and thu exactli properti object type intuit speak object type descript collect properti without give implemen tation thu object type also consid set object properti possibl differ implement clearli object type implement independ entiti object class also object type howev object object type may belong class exampl two integerstack class implement link list array respect set oper pushint pop top empti two differ class type say case also say implement stack object type consid member set denot fact object type may defin mani way exampl object type defin list properti the name signatur method extract type class use oper implicitli delet implement detail class type need similar class subtyp defin term supertyp say object type possess properti note type spite creation may independ definit case object actual possess properti object type use differ name properti exampl two properti below void inserttop content content deletetop defin as type content pop void push content know insert top properti push delet top correspond pop would conveni is languag construct like follow object isof type inserttop push deletetop pop allow programm claim object type specifi correspond properti type check type equival usual quit complex construct would help reduc work compil formal is binari oper link object object type is oper insid is construct propterti match oper link properti object properti object type simpl interpretaion is construct requir two properti side is oper exactli signatur although may differ name interpretaion gener good enough practic purpos flexibl complex interpretaion requir object type properti lefthand side may function type subtyp properti righthand side interpret would involv contravari covari rule relationship class object type interest one collect set object but object type implement independ entiti class not say object type defin set object extern behavior howev precis mean behavior would becom extrem complic defin behavior restrict specif implement may use eg axiomat denot logic way specifi behavior object type method complex practic moment easiest way precis defin semant properti type is perhap give specif implement oper word easi safe defin object type object class come see mani popular objectori languag classistyp principl use object class object type main advantag use classistyp principl object type defin way rigor unambigu precis easi defin although necessarili easi comprehend main disadvantag object type restrict one particular implement and thu becom implement depend argu later major obstacl object reus softwar integr objectori languag eg theta object type separ entiti class theta new object type simpli new type defin name signatur method properti semant method properti formal defin left programm interpret name possibl inform definit comment exampl stack type oper push pop top etc well understood simpli name graph type easili understood line explan comment inform approach danger without care howev perhap practic way defin object type program without restrict specif implement way work well physic world abstract class avail mani major objectori languag abstract class play role object type certain extent howev abstract class object type main differ abstract class object type follow abstract class may may implement independ object type implement independ except consist aspect abstract class object abstract class c say c exist concret class c descend c instanc c word exist declar link famili relat c is declar c subclass subclass c n instanc c contrast fact type simpli impli fact properti relationship direct necessarili exist famili relat here interfac java onestep closer object type abstract class are interfac implementationindepend entiti thu appli them still doe object kind object type share certain set common properti form object kind specifi properti henc object kind higherlevel object type member object kind ani object type object kind introduc studi name kind also appear howev connot word same show later section object kind use defin parameter type gener function relat object kind member ie object type cannot repres supertyp relat consid two object type word or charact string acycl graph word implement array link list acycl graph adjac matrix adjac list etc here name type w type g respect two differ type common properti distanc two word respect two acycl graph measur ie two object type distanc function natur repres set type set common properti higherlevel entiti case defin object kind k set type distanc function clearli w g type k import notic k supertyp w g k cannot replac supertyp w g case assum defin supertyp instead kind k distanc function measur distanc pair object type would impli distanc function word acycl graph subtyp principl clearli intend defin object reus section consid issu concern object reus classifi object follow two categori intern object extern object program call object creat within program intern object creat elsewher use program extern object sinc reus intern object rel straightforward involv fewer issu extern object discuss focus reus extern object sourc extern object may includ project object vendor object reus differ class reus sourc code reus object reus mean reus object alreadi creat execut form especi develop independ larger program environ object reus may involv follow five interrel issu object creation object creat object autonomi whether object surviv autonom object applic object use object integr two object integr larger object object modif whether individu object modifi side effect object creat first applic object creat mani way classbas languag like c java eiffl modula object instanti class objectbas languag eg cecil self omega object creat clone extens prototyp object without exist class appar object creat necessarili affect object use intern extern consid object creation essenti issu object reus order object use intern also extern term environ creat essenti object abl surviv autonom mean object execut without class object creation environ mani issu may involv object autonomi includ embed versu deleg global variabl class variabl visibl attribut howev feel difficult objectori languag modifi safe export object live autonom reus safe runtim environ exampl object go export special mark export object compil check whether satisfi certain condit autonomi eg global variabl do gener autonom object use embed instead deleg etc object applic definit clearli import issu object reus condit necessari extern object use or link to program environ let us consid aircondition exampl purchas aircondition hous necessari us know whether aircondition satisfi specif eg cool capac physic dimens voltag howev need want know design technic detail aircondition also aircondition satisfi requir whatev intern implement is would job intern implement part requir case need object object type whether object type conform requir object type need want know object class thu object type system separ class system need set object reus type system exampl object type may explicitli declar obtain use oper which given class c remov implement detail c return object type object type may inherit hierarchi importantli system abl check given object given object type whether object give object type extern object use program environ may act server provid oneway servic may also call method or send messag to intern object word object may interact intern object also consid situat use two extern object program environ object may requir interact other strong type objectori system as assum object involv multiobject interact need know type inform object howev may situat extern object develop independ differ vendor thu gener develop object know type object defin mani differ way solv problem exampl solut standard object type object interfac write wrapper adapt program order independ develop object interact use is construct suggest section match equival type differ appear solut may longterm solut howev even long term difficult standard type reusabl object mechan place wrapper adapt program complic programm know type declar object involv and class declar current classistyp principl would much conveni use is construct togeth standard would also conveni object modifi creation sever objectbas languag data field method object modifi uniform way without sideeffect object modif object autonomi two close relat issu howev consid issu conveni issu notion object reus appear similar componentbas comput mani way compon object in object reus independ develop execut form consid compon object collect close relat object term howev componentbas comput mechan gener part objectori languag impos extern structur program written current program languag rather chang them idl consid standard way specifi object type sens componentbas comput mechan meant allevi problem current objectori languag object reus outsid rather insid classistyp inadequ object reus play two major role classbas languag object descript creation mechan object type object creation mechan class serv first two issu object reus well minor modif current popular classbas languag use develop autonom object object also creat mani way objectbas prototypebas languag eg direct declar clone extens prototyp object consid class object creation mechan adequ mechan whether creat singl object stock object consid classistyp principl ie class pli role object type relat object reus let us assum go use registrar object extern sourc program program instanti mani student object student class type program method registr student regist call registr method use extern object registrar registr sregist registrar impli follow definit method registr student class boolean regist registrar registrar class well object type registrar class registrar declar program sinc classistyp principl use follow problem ffl class registrar and possibl descend describ implement detail object registrar complic larg thi reus instead develop ourselv sinc includ class registrar and descend program would econom instanti registrar object program rather use extern object registrar object reus degener class reus or sourc code reus ffl registrar student extern object creat independ regist method object may defin sinc student object class definit registrar creat also registrar object know class definit object serious restrict way registrar object defin make integr object extrem complex ffl neither registrar object object modifi addit featur effici implement creat exampl observ follow three gener problem classi type principl object reus class implement depend entiti classistyp principl unnecessarili restrict object type specif implement compat gener idea reus classistyp principl object use object type class specifi instanc instanc descend class word declar link famili relat sinc extern object develop program independ necessari link make reus extern object complic difficult class detail descript object inform type object re quir classistyp principl make object type inform cumbersom even sometim redund object itself classistyp principl make realiz object applic object integr object modif difficult even imposs case parameter type gener function parameter type function map type or sever type anoth type let denot set type parameter type p function exampl c sort vector templat declar follow templateclass t class sortedvector t v int sz size vector int n current number element public explicit vector int t operatorint i n zs return fals int return true bool delet int delet ith element type paramet templat templat map int type integ sort vector type map char type charact sort vector type etc appear given type templat would map sort vector type howev total true notic comparison vi two object type function insert impli cannot type type oper so domain type function the templat the set type subset call subset kind k sort vector templat type function k in gener parameter type function k kind kind k may defin follow kind k k bool oper t t templat may written follow templatek t class sortedvector k t denot type bound kind k similarli gener function function map type function and thu kind use defin domain type function too call type polymorph kindbound polymorph note discuss section kind cannot replac supertyp kind supertyp clearli two differ concept consid situat type comparison oper essenti use differ name say less than languag construct like follow explicitli link correspond name may introduc type isin kind k lessthan oper use kindbound polymorph least follow advantag restrict type variabl implicitli impos definit parameter type gener function explicitli clearli state definit kind user parameter type gener function need read detail definit parameter type gener function find buri constraint kind higher level type kind affili specif parameter type gener function kind natur entiti repres constraint type make gener construct conceptu transpar notion similar kind studi claus parameter procedur parameter type clu theta well statement gener procedur ada similar definit kind howev unlik kind claus statement independ entiti insepar part specif parameter type etc contrast kind treat uniformli entiti type hierarchi sever parameter type genric function restrict type paramet express kind comparison kind opaqu type modula signatur g kind quest etc found concept object kind shown use realiz algorithm abstract program languag conjectur object kind also use formal semiform descript design pattern well implement objectori languag conclus past half centuri program languag continu evolv higher level exist two opposit direct develop program languag get complic conceptu easier easier technic take much longer time learn program languag forti year ago program task take much less time paper made sever suggest develop objectori program lan guag summar follow separ object type object class export autonom object type inform introduc typematch construct like is construct section match type given object given object type introduc object kind kindbound polymorph is in construct fit object type object kind object type system separ class would much complic implement howev system would make objectori languag much flexibl feasibl object reus softwar integr r theori object ada x mappingrevis team java program languag program ada typesaf oop prototyp concept omega algebra specif techniqu object orient program environ a modest model record inherit bound quantif the semant secondord lambda calculu formal descript program concept ifip stateofart report the cecil languag specif rational fbound polymorph objectori program interpret objectori program languag data type valu principl obj interpret fonctionel et elimin de coupur de larithmetiqu dordr superieur algebra specif abstract data type theta refer manual preliminari version abstract specif program develop semant model type applic languag investig program languag polymorph type structur eiffl languag system program modula introduc kind c a share view share treati orlando compon softwar beyond objectori program self power simplic algorithm abstract objectori languag softwar reus via algorithm abstract parametr polymorph objectori languag algorithm abstract via polymorph objectori languag tr data type valu abstract specif program develop share view share treati orlando semant secondord lambda calculu modest model record inherit unbound quantif inherit subtyp fbound polymorph objectori program system program modula eiffel languag compon softwar principl obj c program languag integr objectori program languag program ada theori object semant model type applic languag investig program languag polymorph type structur algorithm abstract via polymorph objectori program languag ctr chitra babu d janakiram method driven model unifi model object composit languag acm sigplan notic v n august