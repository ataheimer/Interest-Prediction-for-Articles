t optim static calendar queue a calendar queue import implement prioriti queue particularli use discret event simul investig perform static calendar queue maintain n activ event main contribut articl prove that reason assumpt proper paramet set calendar queue data structur constant independ n expect time per event process simpl formula deriv approxim expect time per event formula use set paramet calendar queue achiev optim near optim perform addit techniqu given calibr specif calendar queue implement formula appli practic set b introduct calendar queue data structur describ brown brown import implement prioriti queue use event queue discret event simul time discret event simul activ event event e associ event time te intend occur simul time set event store prioriti queue order associ event time basic simul step consist nding event e smallest te remov event prioriti queue process it result process new event may gener paramet n vari zero one new event gener new event e event time te te must insert prioriti queue accordingli calendar queue event store bucket bucket contain event whose time close other event smallest time bucket access quickli simul newli gener event quickli put bucket event one bucket consum next bucket consid detail algorithm given later calendar queue sever user control paramet bucket width number bucket aect perform brown brown provid empir evid calendar queue paramet properli set achiev expect constant time per event process goal paper prove constant time per event calendar queue behavior reason model where new event e quantiti te te nonneg random variabl sampl distribut gener number activ event may vari time import case static case aris n constant case simul parallel comput case event correspond either execut segment code idl period one processor thu processor exactli n activ event prioriti queue paper focu static calendar queue even brown paper brown calendar queue use discret event simul number event larg mani situat calendar queue signicantli outperform tradit prioriti queue data structur brown francon et al knuth sleator tarjan sleator tarjan vuillemin interest new develop employ calendar queue like data structur part queu mechan highspe network switch router rexford et al case calendar queue like data structur implement hardwar organ section dene calendar queue data structur paramet govern perform section present markov chain model calendar queue perform section present express describ perform calendar queue innit bucket case bucket width chosen approxim minim expect time per event constant section describ choos number bucket without optim static calendar queue signicantli compromis perform innit bucket calendar queue section develop techniqu calibr calendar queue implement demonstr eectiv techniqu section present conclus appendix contain longer technic proof calendar queue calendar queue bucket number current bucket bucket width current time relationship event e calendar queue te event e locat bucket te mod i analog calendar state by day year durat today start absolut time event found calendar day occur regardless year exampl choos event time exampl next event process time current bucket number suppos delet new event gener time then new event place bucket next event time sinc process current bucket cycl around bucket onc thu increas next bucket examin bucket happen empti thu process bucket done cyclic order event e current cycl te process calendar queue implement array list current bucket index array bucket width current time either integ xedpoint oatingpoint number bucket implement number way typic unord link list order link list former case insert bucket take constant time delet minimum bucket take time proport number event bucket latter case insert may take time proport number event bucket delet minimum take constant time choic algorithm manag individu bucket call bucket disciplin paper focu unord list bucket disciplin calendar queue perform calendar queue perform measur interest expect time per event is time delet event minimum time insert gener new event two key user control paramet implement calendar queue eect perform name bucket width number bucket choic best depend number event n process te chosen newli gener event e assum larg innit chosen kb erickson re ladner a lamarca n number event known paramet mean jump known estim paramet time per empti bucket hidden paramet determin calibr time per list entri hidden paramet determin calibr xed time per event hidden paramet determin calibr bucket width user control paramet number bucket user control paramet tabl paramet calendar queue larg current bucket tend mani event ineci hand chosen small mani empti bucket travers reach nonempti bucket ineci regardless choic chosen small current bucket tend mani event process later visit bucket order analyz calendar queue make simplifi assumpt process te chosen new event e main assumpt make quantiti te te call jump random variabl sampl distribut mean e event minimum time te fulli delin simplifi assumpt later choic good certainli depend n grow n grow decreas determin exactli chang function n achiev optim perform goal paper assum innit mani bucket addit two paramet n choic good also depend three hidden implement paramet b c b increment time process empti bucket c increment time travers member list search minimum list xed time process event empti bucket visit reach bucket n event n time process event dene be kn stationari expect valu bm d kn expect time per event innit bucket calendar queue real implement calendar queue number bucket nite case may happen event bucket time within current time process much later dene k expect time per event bucket calendar queue gener n kn extra time may spent travers event bucket process later anoth goal paper determin choos k n slightli larger kn tabl summar variou paramet aect perform calendar queue optim static calendar queue time per event bucket width fig graph bucket width vs expect time per event kn simul innit bucket calendar queue event exponenti jump mean time per event number bucket fig graph number bucket vs expect time per event k n chosen optim bucket simul calendar queue event exponenti jump mean figur illustr exist optim minim expect time per event figur illustr eect select expect time per event graph figur gener simul calendar queue exponenti jump mean taken suitabl long warmup period long enough period averag time per event stabl simul figur use innit number bucket event simul figur use optim bucket width innit bucket calendar queue vari number bucket choos perform curv almost approach perform innit mani bucket kb erickson re ladner a lamarca model calendar queue perform model calendar queue perform begin specifi properti random variabl event current minim time e newli gener event assum random variabl densiti f dene nonneg real call f jump densiti random variabl simpli jump success jump assum mutual independ ident distribut let mean jump is z f f zg dz f distribut function f r xfz dz call f jump distribut dene support jump distribut valu exclud technic assumpt f f order facilit proof make sever technic assumpt f f forc throughout except note j densiti fx x interv j mean nite j c f x c x x assumpt j crucial guarante exist nontrivi steadi state note j hold densiti f bound neighborhood markov chain model innit bucket calendar queue markov chain b x state space n denot state chain time t state x repres posit rel begin current bucket n event index n calendar queue step t step calendar queue consist examin current bucket either move next bucket current bucket empti remov event smallest time current bucket insert new event with index accord jump distribut accordingli transit b follow let index i x t independ nonneg random variabl assum random variabl probabl densiti f paramet xed nonneg real number think x t posit ith particl n particl system particl interv particl move closer origin otherwis particl closest origin interv jump random optim static calendar queue distanc current posit particl remain stationari thu particl markov chain b x repres event innit bucket calendar queue posit particl correspond event e quantiti interv correspond current activ bucket innit bucket calendar queue import note step markov chain b x correspond process event calendar queue process event calendar queue correspond number step markov chain interv empti follow one step interv nonempti limit probabl goe inniti interv exactli particl it technic q function n drop n simplifi notat quantiti q probabl interv empti obviou q exist n prove follow lemma appendix a lemma jump densiti properti j j j limit probabl exist independ initi state b x let us also dene en limit expect number particl interv is expect time per event infinit bucket case expect time process event innit bucket calendar queue close relat function en see follow lemma lemma expect time per event innit bucket calendar queue proof markov chain b x model calendar queue thu q portion bucket visit empti j q j portion bucket visit j event empti bucket visit happen probabl cost b result nding event process bucket visit j event happen probabl q j cost cj d result nding event process thu expect cost per event calendar queue d yield equat use equat kb erickson re ladner a lamarca let us dene follow import quantiti z f x dx second part equat impli p note also f p order deriv good approxim formula kn rst need nd good bound quantiti q n follow technic lemma prove appendix section b provid bound lemma n bj tail binomi distribut n trial success paramet p simpl exact formula q interest possibl write complic integr give exact express q j highli unwieldi proof inform cf erickson also interest note assumpt j requir probabl densiti f posit support remov proof theorem becom even longer without j densiti f properti constant c exact express q j j lemma yield follow upper lower bound kn lemma n kn b proof n standard binomi distribut n trial success paramet p sinc bi mean np optim static calendar queue second moment np np p sum part deriv which upon substitut equat littl rearrang yield left side similarli one deriv right side rang give good calendar queue perform case bound give us wonder simpl accur approxim formula kn theorem expect time per event innit bucket calendar queue bucket width fact number xed on term bound n uniformli n proof theorem almost immedi consequ also postpon appendix section c interestingli expect time depend mean jump shape probabl densiti note one immedi consequ theorem bucket width chosen n xed interv innit bucket calendar queue constant expect time per event perform inde formula optim perform calendar queue deriv seen follow theorem theorem expect time per event kn achiev global minimum interv opt r c kn opt bc o n proof theorem appendix section d theorem show optim choic depend ratio b c mean jump n choos number bucket found select approxim minim expect time per event innit bucket calendar queue next goal select number bucket bucket calendar queue similar perform innit bucket calendar queue case jump distribut nite support natur choic guarante calendar queue bucket a lamarca exactli perform innit bucket calendar queue guarante long run event e current bucket case eventu event current bucket process current visit bucket postpon futur visit bucket case support jump distribut either innit nite larg practic necessari choos number give perform less innit bucket calendar queue expect time per event nite bucket case markov chain b x use analyz case let l n steadi state expect number particl set term bucket calendar queue event e te event current bucket process occurr event caus bucket calendar queue run less ecient innit bucket calendar queue follow lemma quanti dierenc perform nite innit bucket calendar queue lemma expect time per event bucket calendar queue bucket width proof markov chain b x let q ij limit probabl particl interv j particl probabl q ij shown exist way probabl q lemma use corollari a appendix section a bucket calendar queue cost visit bucket event whose time interv t j event whose time set thu expect cost per event k equat lemma use equat proof lemma deriv equat k appendix section e indic deriv follow rather horribl look bound l lemma function l n bound optim static calendar queue bound n p f mean see equat z jm f x dx f jm y f jm y note hypothesi j seri converg given bound term howev use bound state lemma deriv use asymptot express l lemma proven appendix section f lemma constant f jxr degrad perform due finit mani bucket degrad perform choos bucket instead innit mani bucket is choos optim lemma theorem yield follow asymptot express theorem mn constant c f jm follow asymptot bound impli theorem theorem mn constant c r c kb erickson re ladner a lamarca proof theorem suce show see let k z xfxdx z jdd x fxdx nite impli x f x x therefor let k get d equat show xed like chosen on word one alway choos number bucket multipl n still obtain perform almost good innit bucket case interest case exponenti jump densiti calcul seri equat exactli e c let us suppos optim equal n allow us solv equat mn given accept exampl choos approxim mn approxim figur illustr asymptot equat provid excel choic wide rang n use simul calendar queue plot wide rang n valu again measur taken suitabl long warmup period long enough period averag time per event stabl plot rel near asymptot valu respect thu equat seem quit accur bound theorem necessarili tight crude approxim integr exampl choos formula requir mn least optim static calendar queue degred fig graph n vs degrad simul calibr calendar queue implement actual calendar queue implement would like nd best bucket width number bucket preced theori tell us know hidden implement paramet b c d section give rel simpl method estim paramet simpli time execut simul variou valu proport n key method equat expect time per event write kn linear function unknown b c d gener calibr method follow rst estim larg enough degrad use bucket innit mani small second nd k n number dierent s time execut implement third use linear least squar approxim nd b c best ts function illustr method exampl develop calendar queue implement c ran dec alphast chose exponenti jump mean examin code felt b time process empti bucket consider larger c cost travers list entri made educ guess optim certainli greater chose larger small chanc event current bucket process time larg time calendar queue valu rang sever order magnitud name use data use linear least squar approxim comput use equat figur show curv equat use paramet figur also show time per event thu method accur predict data point use linear least squar approxim interest note use valu b c equat obtain opt k opt contrast best among execut kb erickson re ladner a lamarca execut time time per event bucket width measur predict fig measur predict expect time per event calibr implement calendar queue care must taken appli calibr method method hidden paramet b c d measur indirectli measur expect time per event xed n expect time per event vari dierent run interrupt process page fault ef fect howev experiment set care control environ run time vari littl xed paramet set addit measur taken suitabl long warmup period long enough period averag time per event stabl real comput environ cannot control calibr method might yield good result ideal use xed n larg enough estim hidden paramet b c could use n larg enough howev cach behavior modern processor valu b c actual constant independ n properti jump distribut mean exampl smaller might achiev fewer cach miss reduc run time therebi eectiv lower valu constant may appli calibr method chosen larg origin chosen far larger necessari case might wise choos smaller recalibr calendar queue start larger real applic calendar queue unlik jump mutual independ ident distribut random variabl describ model nonetheless mean jump empir estim calibr done equat optim appli nd potenti good optim static calendar queue conclus shown express expect time process event innit bucket calendar queue bucket width chosen optim bucket width near optim bucket width calendar queue expect constant time per event optim bucket width depend paramet increment time process empti bucket b increment time travers list item c mean jump number event n shown number bucket chosen on achiev minim almost minim expect time per event final shown implement paramet determin use approxim base method linear least squar although calendar queue run fast certain applic disadvantag perform depend choic paramet interest problem would design prioriti queue base calendar queue automat determin good choic believ calibr method describ paper might give insight design dynam calendar queue n andor vari time section appendix set notat concept use throughout appendix a invari distribut posit limit consid markov chain b describ section symbol p shall denot probabl measur induc trajectori space chain b x initi distribut p b x shall denot trajectori space probabl chain start point b x note p r p b x db x integr carri entir state space integr better known expect respect p p b x denot e e b x respect stand set point b let b x state space measur subset a onestep transit probabl t p chain move b x point given b z b x standard th unit coordin vector b x function b x otherwis actual dene proper transit probabl point inde b x point two coordin equal strictli less b x lie b i henc p b x subset a howev jump distribut f densiti atom discret point posit probabl dynam descript chain section impli two point start posit a lamarca let set follow b c word absorb set chain moreov dynam descript chain impli particl start outsid reach nite but possibl random number step one show use method proof b number step requir eventu enter nite expect thu c transient chain of cours measur invari measur chain nite everi measur subset state space z b x amfdb xg markov chain call harri recurr chain simpli harri chain exist uniqu posit multipl invari measur borel subset ma p b x b x state space the initi io stand innit often harri chain invari probabl measur necessarili uniqu call posit state space harri chain written disjoint union set c known recurr cyclic class integ nite chain call aperiod theorem a jump densiti satis j j j markov chain b x tp posit aperiod recurr harri chain invari probabl concentr corollari a bound measur function initi distribut lim z b x dmb x p as note leftmost term limit averag random quantiti assert limit exist p probabl equal nonrandom quantiti right unbound integr respect chain harri posit limit relat remain valid least case point mass b x m proof corollari a determinist limit statement corollari a immedi consequ proposit ch x revuz eventu becom remain separ w p inde occur soon one jump right thu harm banish point state space initi understand p inde transit probabl state space optim static calendar queue as limitofaverag assert consequ ergod theorem harri chain see theorem companion remark revuz ch x remark main signic aperiod justi exist limit e b x f b occur exist limit averag requir aperiod proof lemma let exactli j compon b x lie g number particl interv time follow immedi q g proof theorem a postpon last appendix below lengthi somewhat tediou interest featur b proof lemma b comput q section prove lemma set b dene last section disjoint union complement in sinc assign mass n c let bound posit function state space equat analogu function read r b xmfdb r mfdb xg r b yp b x db y note r r b yp b x db r b x b mfdb xg littl rearrang get z b x b b x z mfdb xg b x z b yp b x db y fix let b complex number nonneg real part b x b z b yp b x db r e z fz dz laplac transform f also b x b j z b yp b x db th term right side vanish becom z a lamarca simplic lefthand side lead to z z divid make result mfa g mfb equat follow immedi b case observ success posit singl one n particl time actual move get dimension version n dimension chain descript chain term independ random variabl one conclud i sequenc fx markov chain line ii n markov chain mutual independ one nd increas sequenc time fs k g k common valu everi one u that is k number r k necessarili same mutual independ compon sequenc let k let time success random time interv empti particl zt k obtain ad determinist constant compon b follow compon b also mutual independ easi show chain induc or trace chain sequenc f b also markov chain see revuz exercis page import point note special structur b x impli chain fx t k k g coincid law trace chain x least intuit clear trace chain posit recurr invari probabl distribut say obtain renorm distribut restrict see revuz ex p prop p formal proof thu subset b trace chain also independ compon follow product measur built invari distribut compon chain compon chain ident tp factor same let us call common factor distribut comput concentr may use comput limit k optim static calendar queue probabl nding exactli j particl interv time clear limit distribut zs k binomi distribut correspond n bernoulli trial paramet howev limit distribut zt tend inniti without restrict binomi invari distribut let us call rather m case basic chain calcul explicitli obtain special case measur turn uniform coincid translat stationari distribut renew process interarriv distribut f stationari distribut densiti equal normal tailsum f see feller xi one give queu theori argument descript but sinc equat lead result almost immedi use equat give quick proof case equat simpli valid complex number re set arbitrari integ nd lefthand side vanish densiti assumpt impli henc result theori fourier seri impli must dm constant c case laplac transform get z e x invert laplac transform equat reveal densiti g x given g clear densiti upshot preced conclud limit distribut zs k is lim wp x remark follow work last two section measur m restrict product measur restrict coincid howev mmeasur subset particular interest mmeasur j dene proof lemma requir set contain complement restrict complement product measur kb erickson re ladner a lamarca b estim q j apart explicit represent discuss last section simpl express n n avail mean that one except the case f simpl explicit formula valu q must resort approxim turn out howev approxim formula quit amen analysi particularli region interest section nish proof two inequ henceforth design lh left side rh right simplifi notat littl start distribut omit forgotten essenti proof introduc object j b j variabl t dier n t k s zero z therefor ergod limit theori b lim henc sn sn sn sn sequenc random variabl fv k g k v shall total number time interv count variabl zt valu j j b occurr event v k r impli zs k least r jump count rst time s k magnitud smaller henc optim static calendar queue therefor assum f inde moment efv k g nite inequ ergod limit theori yield lim lim rh lh note rst henc see lim n lh c proof theorem purpos proof let us write conclus theorem equival assert kn x c x uniformli bound xinterv base proof state c x dn kn b x new notat fix number conn x interv n let c number introduc assumpt j section keep n maxfc get kb erickson re ladner a lamarca also dn n n henc x c x dn thi littl algebra easili seen nish proof suce nd number c depend but np n x x x number c multipli c c yield estim mention theorem d proof theorem throughout section write bc moreov harm also suppos step function kn continu reader ask turn formula begin variabl q n obvious continu possibl discontinu term formula kn en howev continu function immedi consequ follow exact formula discuss proof theorem complet lemma d step function en nondecreas one prove dierenti express e lemma d check result nonneg optim static calendar queue outlin altern intuit proof consid two chain b n jump densiti dierent bucket follow trajectori individu particl chain nd averag chain larger bucket size particl get back interv quicker would get back interv chain smaller bucket size sinc typic particl chain often interv chain b averag number particl b least larg averag number particl b step next establish lim uniformli xed explicit formula q yield nondecreas function equat step nd function q kn q b also nondecreas henc b inequ n inequ follow kn goe inniti uniformli interv xed follow equat step a min moreov minim interv on dene abov prove thi let straightforward calculu n hn global minimum point on let opt valu give minimum valu kn given interv n theorem interv nd constant c depend n sucient larg uniformli n sinc interv n interv kn thu sandwich two convex function hn cn global minimum point on interior interv xed n opt must two solut equat in hn simpl calcul one nd dierenc a lamarca two solut on yield two solut one nd kn step next step show n n kn thu minimum exhibit step extend xed interv fact step impli n sucient larg min complet proof theorem moment x f choos later inequ fact p f kn cq az dene ln n horizont line height k cut graph convex function ln two point larger call z n thu z n larger root equat sequenc n valu z n converg bound posit limit dene n qn henc sequenc n also converg limit note tend q approach choos and henc q now choos n sinc minimum kn bound k bound function ln qn minimum kn interv must alreadi lie interv n henc interv d discuss exact formula en proof result quit long base exact though complic integr formula q j s see erickson detail exact formula en lead exact formula kn work led us conclus excel asymptot formula theorem and simpl inequ lemma lead them much greater practic use certainli easier prove reason includ long proof exact formula main use lemma d shorten proof slightli global minim kn note d yield immedi continu kn function one requir continu order speak sensibl exist minim even without continu howev basic result theorem essenti correct languag use express need chang one must use term greatest lower bound place minimum one assert point greatest lower bound approxim attain optim static calendar queue write l n z t number particl set time t subset success time interv empti particl henc st z z wp suppos time k particl posit x r particl posit x accord ith particl land nalli remov interv thi remov must occur write strong markov properti f eld random variabl k h b probabl particl start origin land interv rst jump t h satis u renew measur see feller page gener uz uf zg f z distribut sup f jm x z f jm x z ufdzg recal denit statement theorem call righthand side p note condit eld f variabl u feller dene h term open interv wherea use close interv f atom dierenc denit consequ kb erickson re ladner a lamarca independ k z z r f z z fg mean z fg t j k time ft j g particl independ limit joint distribut z trinomi separ binomi limit distribut let k get efz z p dene go back calcul obtain z z recal basic properti condit expect efe j f replac p f q n combin fraction drop factor f occur numer nalli obtain upper bound l n lower bound evalu lower bound l n f proof lemma follow let lim lim sup lim inf stand limit variou quantiti n variabl constrain vari state hypothesi first let us note lim f jrx note j vari n sucient larg n small interv ft j j g nonoverlap n jn jn henc continu f no atom the letter f stand distribut function induc probabl measur customari and limit optim static calendar queue next f jrx rst sum left goe follow f jrx use limit upper bound l n get lim sup l f jrx similarli lower bound l mun f jrx thu lim sup l limit l exist valu state g proof theorem a seen k given initi posit n compon mutual independ random variabl also hard see condit distribut x distribut residu wait time epoch delay renew process start epoch x interarriv distribut f see feller page erickson we alreadi seen distribut proof lemma section e though describ slightli dierent languag let h fig denot probabl residu wait time epoch lie pure renew process start h f e follow xed x everi integ k x borel use markov properti follow xed b borel set kb erickson re ladner a lamarca u denot renew measur assumpt a impli u absolut continu part possess strictli posit densiti but see feller page consequ measur h k x fig also absolut continu part strictli posit conclus one may draw preced f b xs k g irreduc respect measur n lebesgu measur r n restrict n see revuz ch x impli trace chain f b xt k g also n irreduc state space togeth two assert impli full chain b also draw addit use conclus stone decomposit theorem revuz ch x write nite measur u absolut continu bound continu densiti u lim x borel henc domin converg lim z f x dx product formula yield borel set n lim product measur f f f f probabl distribut densiti f f xg give us one limit theorem use earlier impli subchain b b harri recurr with invari probabl translat b impli that probabl b innit mani time k whatev initi posit b obtain b ad compon previou assert also correct b respect invari probabl see revuz ch x consid full chain b g n a preced make clear b hit posit probabl impli b x n irreduc accord revuz ch theorem denit either b x harri chain uniqu constant multipl invari measur m els potenti kernel proper potenti kernel k dene kb x ag k proper written increas sequenc subset dn bound potenti but eventu set must posit lebesgu measur case optim static calendar queue impli p b x f b innit mani posit x kb x dn impli expect total number hit dn nite impli number hit must nite probabl thu cannot proper potenti kernel therefor b x must harri chain consid next aperiod issu seek contradict let us suppos x period let fc g recurr cyclic class decomposit state space subset posit lebesgu measur without loss gener may suppos mfc an g smallest k b stop time nite account doubli index sequenc independ random variabl distribut f earliest possibl epoch b arriv one particl move particular step integ r borel rectangl account hypothes j distribut f convolut f r put posit mass everi subinterv henc righthand side strictli posit whenev cylind set posit lebesgu measur standard measur theori impli also correct borel set posit measur probabl time b x belong c c so chain period then wp futur epoch form nd chain alway found c also time mod d chain must belong set c kd disjoint class includ c n r n right hand side strictli posit choos set c k n posit measur let r take dierent mod d valu get contradict previou assert belong disjoint set contradict x aperiod remain show invari measur uniqu constant multi ple full chain b nite m trace chain f b xtk g posit recurr invari probabl also multipl restrict henc follow renew theorem mean return time also nite let bound measur function and henc m summabl lim z b xdm b x denot number visit full chain t a lamarca ih chain b null innit mass bound msummabl function revuz theorem page fatou lemma one readili see would contradict acknowledg would like thank two refere editor mani valuabl suggest improv paper r implement analysi binomi queue algorithm calendar queue fast o prioriti queue implement simul event set problem calendar queue expect introduct probabl theori applic descript analysi efcient art comput program markov chain scalabl architectur integr trac shape link schedul highspe atm switch data structur manipul prioriti queue tr selfadjust binari search tree adjust heap calendar queue fast prioriti queue implement simul event set problem data structur manipul prioriti queue art comput program nd ed addisonwesley seri comput scienc inform ctr wai teng tang rick siow mong goh ian lijin thng ladder queue o prioriti queue structur largescal discret event simul acm transact model comput simul tomac v n p juli rick siow mong goh ian lijin thng twolamalgam prioriti queue journal experiment algorithm jea v ne farokh jamalyaria rori rohlf russel schwartz queuebas method effici simul biolog selfassembl system journal comput physic v n p march