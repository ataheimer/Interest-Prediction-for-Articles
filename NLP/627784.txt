t comput stabl model integr logic queri process a abstractth wellfound semant stabl model semant captur intuit skeptic credul semant nonmonoton reason respect repres two domin propos declar semant deduct databas logic program howev neither semant seem suitabl applic develop effici implement goalori effect queri evalu wellfound semant produc residu program subgoal relev queri contain fact true instanc claus bodi liter undefin instanc paper present simpl method stabl model comput appli residu program queri deriv answer respect stabl model method incorpor forward backward chain propag assum truth valu ground atom deriv multipl stabl model backtrack user abl request stabl model satisfi certain condit comput prototyp develop provid integr queri evalu wellfound semant stabl model ordinari prolog execut describ user interfac prototyp present experiment result b introduct signific progress made understand declar semant deduct databas logic program negat two domin propos wellfound semant stabl model semant normal logic program bodi rule conjunct liter wellfound semant character uniqu support part nation scienc foundat grant no iri support part nation scienc foundat grant no ccr threevalu model call wellfound partial model well defin normal logic program howev wellfound semant inadequ deal reason case multipl altern situat exampl consid follow program coveredcours teachfaculti cours wellfound partial model everi ground atom undefin thu provid use inform scenario describ wellfound semant normal logic program extend van gelder gener logic program bodi rule may arbitrari firstord formula result semant call altern fixpoint logic notion stabl model origin work autoepistem logic stabl model repres set belief deriv itself exampl two stabl model one john teach cse mari teach cse either case cse cover unlik wellfound partial model stabl model may exist given program eg p p even exist may uniqu recent research show wellfound partial model twovalu stabl model two extrem case threevalu stabl model wellfound partial model coincid smallest threevalu stabl model correspond skeptic semant includ belief true possibl situat hand notion stabl model captur credul semant conclud mani belief possibl normal logic program separ techniqu develop queri evalu wellfound semant comput stabl model wellfound semant construct definit base upon least fixpoint construct functionfre program polynomi time data complex addit direct extens sldnf resolut variou mechan posit neg loop handl incorpor effect queri evalu wellfound semant howev extend directli stabl model comput definit stabl model requir guess interpret verifi stabl model fact problem exist stabl model logic program npcomplet sever propos stabl model comput two aspect common one twovalu stabl model comput surpris twovalu stabl model repres credul semant allow incomplet inform smaller search space comput point view common aspect ground program process thi howev sever restrict practic sinc almost rule variabl develop prototyp system call slg logic queri answer slg support goalori queri evalu wellfound semant normal logic program gener altern fixpoint logic gener logic program latter import extens sinc standard translat gener logic program normal logic program alway preserv semant either case slg polynomi time data complex functionfre program queri undefin instanc slg produc residu program besid true fals instanc queri residu program process comput twovalu stabl model slg avail anonym ftp seassmuedu cssunysbedu appli stabl model comput residu program queri slg two advantag first answer queri true wellfound semant alway deriv within polynomi time size databas comput even effici program satisfi certain properti stratif importantli nonground program queri handl second residu program queri often much smaller origin program approach slg restrict potenti expens twovalu stabl model comput small portion entir program furthermor threevalu stabl model partial support sinc origin program may twovalu stabl model even though portion program relev queri twovalu stabl model main contribut paper threefold first describ simpl assumeand reduc algorithm comput twovalu stabl model finit ground program assum truth valu ground atom whose neg counterpart occur program search space stabl model reduc forward backward propag assum truth valu ground atom reduct program second show integr queri evalu wellfound semant comput stabl model two aspect noteworthi one handl neg loop delay avoid redund deriv also lead residu program need stabl model comput later forward chain network set simplifi delay liter deriv wellfound semant directli use stabl model comput final due multitud stabl model clear answer comput queri introduc versatil user interfac queri evalu respect stabl model section describ method stabl model comput section present integr queri evalu wellfound semant section contain exampl perform analysi section compar relat work comput stabl model section review terminolog logic program notion twovalu stabl model gelfond lifschitz assumeandreduc algorithm describ comput twovalu stabl model finit ground program definit stabl model atom form pt nari predic symbol term atom a posit liter a neg liter complement other claus form a head claus atom bodi claus liter definit claus claus neg liter bodi definit program set definit claus ground atom liter claus program one variablefre herbrand univers program p set ground term may construct constant function symbol appear p arbitrari constant ad constant occur p herbrand base p denot b p set ground atom predic occur p whose argument herbrand univers p herbrand instanti p possibl infinit set ground claus obtain substitut term herbrand univers variabl claus p set ground liter consist ground atom a a i denot p osi set posit liter negi set ground atom whose complement i partial interpret or interpret consist set ground liter total interpret interpret ground liter l true interpret l i definit let p program interpret gelfondlifschitz transform p respect i denot p program obtain herbrand instanti p delet ffl claus neg liter b bodi b i ffl neg liter b bodi remain claus b i total interpret result program p definit program accord everi definit program p uniqu minim model denot mp definit let total interpret p logic program two valu stabl model p coincid mp deriv stabl model deriv stabl model consid finit ground program applic goalori queri evalu nonground logic program discuss section let p finit ground program restrict interpret ground atom occur p everi ground atom occur p definit fals accord definit stabl model p comput enumer everi possibl total interpret check coincid uniqu minim model mp p number possibl total interpret obvious exponenti size herbrand base fortun often mutual depend among ground atom program use reduc search space speed comput stabl model substanti assum neg liter first observ guess truth valu ground atom a occur p exampl consid follow ground program two neg liter teachmarycs teachjohncs occur program soon truth valu determin truth valu coveredcs deriv need make assumpt truth valu coveredcs reduc search space stabl model let n p denot set ground atom a occur p lemma let p ground logic program total interpret stabl model p interpret j coincid mp j proof let total interpret let j restrict n p lemma follow definit stabl model propag assum truth valu truth valu ground atom n p independ either exampl assum teachmarycs true claus teachjohncs delet sinc bodi fals accord assumpt henc teachjohncs must fals similarli teachmarycs assum fals teachjohncs deriv true therefor necessari enumer four possibl truth assign teachjohncs teachmarycs second observ assum truth valu ground atom use simplifi program consid order reduc search space truth assign ground atom n p lead stabl model let p finit ground program a ground liter occur p two possibl choic either true a true deriv two program p name pa p simplifi base upon assumpt true pa p simplifi base upon assumpt a true object deriv stabl model p pa pa simplif program p base upon assum truth valu liter done way avoid gener model support stabl exampl let p follow program stabl model p also perfect model case q true p fals suppos p assum true base upon assumpt p true delet claus q sinc p fals accord assumpt howev assumpt p true cannot use simplifi away posit occurr p bodi claus p otherwis would deriv model fp qg stabl model therefor simplifi program p p contain one claus p p particular case assum p true lead stabl model sinc p fals stabl model p p inconsist assumpt hand suppos p assum true simplifi program pp contain one fact q is assumpt p true use delet claus p sinc bodi fals accord assumpt exampl indic assum truth valu ground atom use delet everi claus whose bodi fals everi neg bodi liter true accord assumpt cannot use delet posit bodi liter assum true definit let p ground program l ground liter pl program obtain p delet ffl everi claus p whose bodi contain complement l ffl everi occurr l p l neg liter lemma let p ground program ground atom total interpret stabl model p either true stabl model pa a true stabl model pa proof suppos true i p therefor stabl model p stabl model pa assum a true i compar gelfondlifschitz transform simplif p pa also delet claus posit liter bodi therefor p ident pa except p may contain addit claus posit liter bodi definit stabl model p coincid mp sinc a true i must fals mp therefor mp stabl model p stabl model pa reduct program third observ simplif carri construct pl may determin truth valu ground atom propag much possibl reduc program stabl model sought propag allow us avoid choic point guess truth valu ground atom whose valu alreadi determin previou assumpt exampl let p follow program left q s q s q u q r t r t suppos u assum true program pu obtain p shown right propag known truth valu ground atom lead partial interpret name fp q s u vg much simpler program r t case deriv truth valu u consist assumpt u true propag previous known assum truth valu essenti process forward chain result partial interpret reduc program definit let p ground program u set ground atom contain occur p defin ffl nonempti interpret p osi set ground atom contain fact a negi set ground atom u claus p head obtain p delet everi claus liter l bodi fals i everi liter l bodi remain claus l true i everi claus head p osi reduc exist interpret p u u notic p u reduc exist uniqu nonempti interpret i uniqu reduc u must exactli set atom occur p exampl let u fp q fp q vg contain follow two claus r t u fr s t ug anoth step reduct reduct possibl sinc reduc definit let p ground program up set ground atom occur p p reduc interpret program p n gamma gamma notic everi finit ground program reduc interpret possibl simpler program follow lemma show reduct preserv stabl model lemma let p finit ground program p reduc interpret program p everi stabl model p equal j stabl model j p vice versa furthermor p definit program p osi proof show everi step reduct preserv stabl model lemma follow simpl induct suppos p k u k k consist ground atom fact p k negi k consist ground atom u claus p k head let interpret p osi interpret j interpret p osi stabl model p k stabl model p k reduct program respect partial interpret differ simplif program accord assum truth valu ground atom recal ground atom assum true assumpt cannot use delet occurr program claus bodi liter hand reduct program p respect partial interpret similar bottomup comput embodi transform p i reduct howev attempt comput wellfound semant deriv liter true fals respect clark complet program instanc follow program cannot reduc further framework reduct use stabl model comput carri queri evalu wellfound semant interleav comput stabl model wellfound semant sens algorithm stabl model comput call gener procedur comput wellfound semant assumeandreduc algorithm figur show assumeandreduc algorithm comput stabl model finit ground program algorithm nondeterminist sens certain choic made point howev stabl model enumer backtrack input finit ground program p output stabl model failur begin let p reduc interpret program p ai n npgm n begin delet arbitrari element a n di a di begin choic point l either a ai ai flg let pgml reduc interpret program p inconsist ai di ground atom els begin everi occur pgm add a di return ai di stabl model p figur assumeandreduc algorithm comput stabl model theorem let p finit ground program interpret stabl model p return execut assumeandreduc algorithm proof algorithm di repres set ground liter deriv true possibl previou assumpt ai repres set ground liter assum true algorithm explor tree search space stabl model nondeterminist backtrack manner node repres tripl ai dip gm termin finit ground program prove search space explor assumeandreduc algorithm complet initi root node search tree ai dip reduc p lemma stabl model p j j stabl model p ie ai di j j stabl model p gm given node v repres ai dip gm let ground atom n p ie a occur p neither a ai di a still p gm two choic either true a true lemma interpret j stabl model either true j j stabl model p gma a true j j stabl model p gma let p gma p gma reduc interpret a program p p a again lemma j stabl model p gml l either a j stabl model p v two child node one ai ai fagdi a argument abov interpret i ai di j stabl model j p gm l either a l j l stabl model l p l stabl model j l p l leaf node v repres ai dip gm search tree stabl model either ai di inconsist everi n p a ai di latter case p gm contain neg liter furthermor p gm fact sinc reduc otherwis therefor stabl model p gm also uniqu minim model mp gm everi ground atom occur p gm fals ai di ground atom a a must true either di mp gm inconsist assumpt ai true backward propag assum truth valu accord definit stabl model assum truth valu ground atom coincid deriv truth valu assumeandreduc algorithm use forward chain propag assum truth valu ground atom propag may deriv truth valu ground atom need lay choic point guess truth valu incorpor backward propag assum truth valu ground atom certain condit unlik forward propag comput deriv truth valu ground atom backward propag assumpt may lead assumpt thu reduc search space stabl model exampl one applic stabl model provid semant program choic construct suppos three student take ai class takesean ai takeiren ai takechri ai follow ground program choos exactli one student take ai class chooseseanai diffseanai diffseanai chooseireneai diffseanai choosechrisai chooseireneai diffireneai diffireneai choosesean ai diffireneai choosechrisai choosechrisai diffchrisai diffchrisai chooseseanai diffchrisai chooseireneai three ground neg liter program suppos diffseanai assum fals backward propag infer chooseireneai choosechrisai must assum fals too three assumpt use simplifi program follow chooseseanai diffireneai chooseseanai diffchrisai chooseseanai reduct program deriv diffireneai diffchrisai true let p finit ground program slg support backward propag two situat ffl ground atom assum true p contain exactli one claus head form everi l n assum true ffl ground atom assum fals everi claus p head singl liter l bodi l assum fals backward propag may repeat sever time correct backward propag obviou accord definit stabl model assumeandreduc algorithm modifi includ backward propag detail omit integr comput wellfound assumeandreduc algorithm deal finit ground program comput two valu stabl model section show integr comput wellfound semant stabl model provid queri evalu nonground program practic applic known logic program without loop negat eg modularli stratifi program wellfound partial model total coincid uniqu stabl model program case comput wellfound semant suffici program liter involv loop negat wellfound partial model gener threevalu discuss neg loop handl order facilit comput stabl model ensur polynomi time data complex queri evalu wellfound semant time handl neg loop neg loop occur due recurs negat two main issu name detect neg loop treat liter involv neg loop queri evalu proceed exampl consid follow program moveab moveba movebc movecd figur show portion sldnf tree queri wina contain infinit branch negat wina moveax winx winb winb movebi wini wina winc wina fail figur sldnf tree wina simpl mechan neg loop detect associ call neg context approach adopt well xoldtnf resolut consid branch negat sldnf tree neg context call branch set ground neg liter encount along path root call figur initi call wina empti neg context neg context winb fwinbg neg context second call wina fwinb winag tree second call wina winb select neg context wina indic neg loop approach xoldtnf resolut treat select ground neg liter winb undefin gener answer consist instanc queri atom also truth valu indic whether answer true undefin figur show portion xoldtnf forest queri wina node label pseudoclaus head captur bind relev variabl accumul truth valu bodi contain liter yet solv call winbwinc winc winct winc winct movecz winz winct wind winct winat wina winat moveax winx call wina winat winb winbt winb winbt movebi wini call winb winb winbt wina winau winbt winc fail winbu call winbwina wina winat wina winat moveax winx winat winb winau figur xoldtnf forest wina detect neg loop use neg context easi implement goalori queri evalu howev associ call neg context prevent full share answer call across differ neg context exampl construct subgoal may evalu exponenti number neg context even though wellfound semant known polynomi time data complex treat neg liter involv neg loop undefin appropri queri evalu wellfound semant destroy mutual depend among neg liter queri turn undefin wellfound semant littl inform use comput stabl model develop framework call slg resolut detect potenti neg loop maintain depend inform among call increment call up renam variabl evalu onc allow full share answer potenti neg loop detect neg liter involv delay liter bodi claus evalu delay liter may simplifi later becom known true fals may return part condit answer otherwis figur show portion slg forest queri wina vertic bar j separ delay liter left remain liter right bodi claus notic wina wina wina moveax winx wina winb wina winb fail figur slg forest wina condit answer wina name wina winb similarli winb winb wina condit answer constitut residu program assumeandreduc algorithm appli deriv stabl model answer origin queri stabl model simplif delay liter given arbitrari fix comput rule program ground neg liter must delay truth falsiti known exampl assum leftmost comput rule use solv respect follow program p q r q s p r r s q p first neg loop involv p process delay p s claus s next bodi liter q select lead second neg loop involv q delay appli queri evalu proceed comput rule select next bodi liter name r claus s whose evalu result third neg loop involv r liter r claus liter s claus r delay point claus bodi liter delay thu deriv condit answer s name p q r evalu p q r continu lead neg loop involv p q r correspond neg liter delay comput continu posit loop detect among p q r becom complet evalu without answer fals falsiti p q r propag deriv true answer s facilit simplif delay liter slg set forward chain link among call condit answer deriv truth valu ground atom becom known condit answer delay liter a simplifi delay liter simplifi wellfound semant gener three valu queri undefin instanc wellfound semant evalu produc residu program consist relev condit answer well forward chain link simplif delay liter program queri wina exampl figur show residu program wina consist two condit answer correspond forward chain link link winb wina indic winb true fals condit answer wina simplifi forward chain link use directli slg comput stabl model propag assum truth valu ground atom reduct residu program figur residu program forward chain link wina gener logic program van gelder gener wellfound semant normal logic program altern fixpoint logic gener logic program slg resolut develop extend goalori queri evalu gener logic program similarli produc residu program correspond forward chain link queri undefin instanc altern fixpoint logic exampl follow program describ color node graph way two adjac node cannot color edgeab edgeba edgebc edgecd consid queri colora resolv colora colora program claus obtain new claus colora liter edgeay select correspond posit subgoal edgeay evalu complet one answer name edgeab henc edgeay true distinct b return answer edgeay claus colora resolv univers disjunct y edgeay colori answer edgeab deriv unit claus colorb claus colora replac follow claus colora colorb liter colorb select new subgoal colorb creat evalu figur show slg forest result evalu colora repres disjunct repres notic colord deriv true colorc deriv fals colora colorb undefin residu program consist colora colorb process stabl model comput colora colorb colorc colorc colorc allyedgeci colori colorc colord fail colord colord colord allyedgedi colori figur forest colora stabl model twovalu versu threevalu let p program q queri slg first evalu q respect wellfound semant p result includ set true fals instanc q gener residu program p undq undefin instanc q twovalu stabl model residu program p undq deriv use assumeandreduc algorithm howev twovalu stabl model p undq may may extend twovalu stabl model p exampl consid follow simpl program b b a queri b residu program b contain two claus b a b two stabl model residu program one b true true howev one b true cannot extend stabl model origin program even though threevalu stabl model origin program b true gener answer queri comput slg answer respect threevalu stabl model given program p slg enumer possibl threevalu stabl model p comput twovalu stabl model program p slg one may defin new predic call predic p distinct variabl argument evalu new predic with distinct variabl argument slg deriv residu program p und undefin atom origin program twovalu stabl model p deriv appli assumeandreduc algorithm p und integr prolog normal logic program obvious syntact correct prolog program even though execut prolog strategi may termin one object slg system integr queri evalu ordinari prolog execut exist prolog environ readili use knowledgebas applic section describ interfac slg user point view syntax syntax prolog use input program addit direct predic declara tion predic declar tabl prolog tabl predic evalu use slg resolut prolog predic solv call prolog directli call tabl predic rememb tabl correspond answer futur call tabl predic renam variant previou call reevalu satisfi use answer comput result previou call actual legal tabl predic call prolog predic turn call tabl predic howev two invoc tabl predic share tabl prolog infinit loop termin also certain constraint form claus use defin tabl predic particular bodi claus tabl predic conjunct liter cut allow bodi occurr tabl predic common use cut select claus accord certain guard condit support tabl predic claus univers disjunct liter bodi allow indic oper gamma program exampl written follow variabl occur bodi univers quantifi bodi disjunct indic standard safeti condit assum determin bodi claus safe evalu convert univers quantif existenti quantif notion safeti requir free variabl bodi must bound negat bodi evalu conjunct insid existenti quantif variabl neg liter must also occur posit liter accordingli requir claus univers disjunct liter bodi head must ground claus use variabl occur posit liter bodi also occur head neg liter bodi queri interfac tabl predic evalu respect wellfound semant default true condit answer return exampl follow win program prolog syntax tabl direct slg tabl win moveaa moveab moveba movebc initi default predic prolog predic unless declar otherwis default chang tabl user need prolog interfac also use queri follow first queri ask true answer wellfound semant second return also condit answer condit list delay liter nobi appli assumeandreduc algorithm residu program produc comput wellfound semant slg deriv answer queri twovalu stabl model residu program or threevalu stabl model origin program see section discuss gener may multipl stabl model residu program answer queri qualifi correspond stabl model slg provid versatil interfac queri evalu stabl model residu program includ follow predic ffl stcallpsm or stnotcallpsm succe call ground atom stabl model psm call true or fals ffl stallcallansspsm comput stabl model psm collect answer call list anss ffl stselectcallpsmansspsm similar stall except comput stabl model ground liter psm true allow user select stabl model satisfi certain condit altern stabl model residu program correspond answer call return upon backtrack exampl follow program select exactli one student cours tabl choos diff takeseanai takeireneai takechrisai takebraddb takeirenedb takejennydb samexx queri select stabl model chooseseanaiand chooseirenedb true stselectchoosechooseseanaichooseirenedbansspsm relat work experiment result slg seem first work provid integr queri evalu variou semant includ wellfound semant stabl model normal logic program altern fixpoint logic gener logic program sldnf resolut prolog execut combin prolog program environ slg queri process capabl make easier develop knowledgebas applic delay mechan handl neg loop slg two import implic first avoid redund deriv comput wellfound semant delay liter simplifi away need use forward chain link second allow slg produc residu program undefin instanc queri use directli stabl model comput exist techniqu queri evalu wellfound semant replac loop neg liter undefin truth valu use altern fixpoint method comput possibl true fals fact either case littl inform save later comput stabl model goalori queri evalu respect stabl model studi dung abduct framework refin eshghi kowalski abduct procedur ground neg liter assum true lead inconsist clear special abduct procedur comput answer valid wellfound semant pereira et al develop deriv procedur goalori evalu ground program wellfound semant stabl model bottomup procedur call backtrack fixpoint develop sacca zaniolo nondeterminist construct stabl model one exist stabl model character transform normal logic program semant equival posit disjunct program integr constraint denial form atom b new atom negat b stabl model construct use model gener theorem prover mgtp bottomup forward chain system start set contain empti interpret mgtp either expand interpret accord disjunct claus discard interpret violat integr constraint method construct stabl model simultan includ work close relat branchandbound method subrahmanian et al approach first comput fit kripkekleen semant time compact program delet part program program process compact altern fixpoint procedur comput wellfound semant result program use comput stabl model use branchand bound method branchandbound method slg similar sens assum truth valu atom compact simplifi program comput proce howev sever major differ first branchandbound method comput store stabl model simultan number stabl model exponenti store stabl model time may requir substanti amount memori slg hand comput altern stabl model backtrack second branch andbound method interleav assumpt truth valu atom comput wellfound semant truth valu atom assum result program process respect wellfound semant slg attempt reduc program way ground atom true fals clark complet deriv simpler fullfledg comput wellfound semant third branchandbound method intellig choos atom make assumpt truth valu select atom leaf strongli connect compon accord depend graph slg use simpl criterion name atom whose complement occur program assum final slg integr queri evalu ordinari prolog execut accept program variabl method assum finit ground program get rough idea slg perform took two benchmark program report togeth time inform ran use slg point systemat studi benchmark program conduct clear pictur rel perform variou system obtain prototyp compil written c run unix environ decstat slg written prolog run sicstu prolog unix environ decstat time inform slg obtain prolog builtin predic statist time data millisecond first program consist follow rule addit unari predic y use introduc constant program test program slg ad follow rule queri mx evalu call stallmxansspsm failur loop use get answer call tabl show time slg intellig branchandbound rel rate increas execut time slg seem closer rate increas number stabl model execut time slg fall intellig number constant number stabl model branch bound figur slg branchandbound enumer stabl model branch bound number constant reach probabl due larg number stabl model store latter second program also taken follow augment unari predic y whose sole purpos introduc constant symbol program slg ad yx begin bodi rule sx queri sx evalu call stallsxansspsm failur loop use check possibl tabl show time inform slg versu intellig branch bound case stabl model program detect soon truth valu px qx rx x assum thu time spent comput wellfound semant number branch bound figur slg branchandbound check nonexist stabl model notion stabl model provid declar semant choic construct ldl shown greco et al certain class program choic data complex comput stabl model polynomi time choic construct use model varieti applic one stabl model need test slg classic choic program choosexi basexi choicexi translat normal logic program choosexi basexi diffchoicexi diffchoicexi choosexz sameyz samexx base relat contain set fact form baseia basei b basei c basei d rang n n use paramet queri choosex evalu call stallchoosexyansspsm measur time on decstat comput first solut program differ size vari n tabl show time slg differ valu n execut time slg seem polynomi size base relat figur slg comput first stabl model slg current implement prolog meta interpret therefor carri signific overhead compil implement slg extend warren abstract machin carri xsb project led second author xsb current handl modularli stratifi program preliminari perform analysi show xsb order magnitud faster slg conclus present assumeandreduc algorithm comput stabl model integr slg goalori queri evalu wellfound semant gener altern fixpoint logic gener logic program synerg exemplifi slg prolog one hand deduct queri process nonmonoton reason offer ideal environ develop knowledgebas applic r contribut theori logic program tabul resolut well found semant queri evalu altern fixpoint logic effici topdown comput queri wellfound semant queri evalu well found semant slg system negat hypothes abduct foundat logic program comput stabl model use atm abduct compar negat failur stratifi autoepistem theori stabl model semant logic program greedi choic transform abduct logic program disjunct program foundat logic program autoepistem logic logic languag data knowledg base deriv procedur extend stabl model truth mainten system base stabl model everi logic program natur stratif iter least fix point model wellfound semant coincid threevalu stabl se mantic control search bottomup evalu procedur semant wellfound negat logic program semant deduct databas stabl model nondetermin logic program nega tion xsb programm manual altern fixpoint logic program negat wellfound semant gener logic program safeti translat relat calculu queri tr ctr chri giannella john schlipf empir studi valu kripkekleen valu wellfound semant random proposit logic program annal mathemat artifici intellig v n p patrik simon ilkka niemel timo soininen extend implement stabl model semant artifici intellig v n p june ilkka niemel logic program stabl model semant constraint program paradigm annal mathemat artifici intellig v n p thoma eiter wolfgang faber nicola leon gerald pfeifer declar problemsolv use dlv system logicbas artifici intellig kluwer academ publish norwel ma p a bonatti resolut skeptic stabl model semant journal autom reason v n p novemb francesco calimeri wolfgang faber gerald pfeifer nicola leon prune oper disjunct logic program system fundamenta informatica v n p august weidong chen david s warren tabl evalu delay gener logic program journal acm jacm v n p jan francesco calimeri giovambattista ianni templat program disjunct logic program oper semant ai commun v n p august marcello balduccini enrico pontelli omar elkhatib hung le issu parallel execut nonmonoton reason system parallel comput v n p june franoi bri adnan yahya posit unit hyperresolut tableaux applic minim model gener journal autom reason v n p juli v s subrahmanian nonmonoton logic program ieee transact knowledg data engin v n p januari nicola leon gerald pfeifer wolfgang faber thoma eiter georg gottlob simona perri francesco scarcello dlv system knowledg represent reason acm transact comput logic tocl v n p juli jrgen dix ulrich furbach ilkka niemel nonmonoton reason toward effici calculi implement handbook autom reason elsevi scienc publish b v amsterdam netherland