t weak altern automata weak a automata infinit word use specif verif nontermin program differ type automata induc differ level express power succinct complex altern automata existenti univers branch mode particularli suitabl specif program weak altern automata state space partit partial order set automaton proceed certain set smaller set reason weak altern automata easier reason altern automata restrict structur known translat altern automata weak altern automata involv determin therefor involv doubleexponenti blowup paper describ quadrat translat circumv need determin bchi cobchi altern automata weak altern automata beyond independ interest translat give rise simpl complement algorithm nondeterminist bchi automata b introduct finit automata innit object rst introduc s motiv decis problem mathemat logic buchi mcnaughton rabin develop framework reason innit word innit tree buchi mcnaughton rabin framework prove pow er automata tight relat secondord monad logic key solut sever fundament decis problem mathemat logic thoma today automata innit object use specic first author address o kupferman school comput scienc engin hebrew uni versiti jerusalem israel email ornacshujiacil url httpwwwcshujiacil orna second author address m y vardi depart comput scienc rice univers houston partli support nsf grant ccr ccr grant intel corpor permiss make digitalhard copi part materi without fee person classroom use provid copi made distribut prot commerci advantag acm copyrightserv notic titl public date appear notic given copi permiss acm inc copi otherwis republish post server redistribut list requir prior specic permiss andor fee c acm transact comput logic vol tbd no tbd tbd tbd page kupferman mosh y vardi veric nontermin program idea simpl program dene respect nite set p proposit program state associ set proposit hold state then program comput induc innit word alphabet p program induc languag innit word alphabet languag dene automaton similarli specic pro gram describ allow comput view languag innit word p therefor dene automaton automatatheoret approach veric reduc question program specic question automata specic question satis specic correct program respect specic reduc question nonempti languag contain vardi wolper kurshan vardi wolper automatatheoret approach separ logic combinatori aspect reason program translat specic automata handl logic shift combinatori diculti automatatheoret problem automata nite word automata innit word either accept reject input word sinc run innit word nal state accept determin respect set state visit innit often run mani way classifi automaton innit word one type accept condit exampl buchi automata state design accept state run accept visit state accept set innit often buchi dualli cobuchi automata run accept visit state accept set nite often gener muller automata here accept condit set set state run accept set state visit innit often member muller anoth way classifi automaton innit word type branch mode determinist automaton transit function map pair state letter singl state intuit automaton state q read letter automaton move state q accept sux word branch mode existenti univers map q set state existenti mode automaton accept sux word one state set univers mode accept sux state set altern automaton chandra et al existenti univers mode allow transit given boolean formula set state exampl q mean automaton accept sux word either state q state q turn dierent type automata dierent express power exampl unlik automata nite word determinist nondeterminist existenti automata express power determinist buchi automata strictli less express nondeterminist buchi automata landweb is exist languag l innit word l recogn nondeterminist buchi automaton cannot recogn determinist buchi automaton also turn type weak altern automata weak automata may succinct type exampl though altern buchi automata express nondeterminist buchi automata both recogn exactli regular languag altern make buchi automata exponenti succinct is translat altern buchi automaton nondeterminist one might involv exponenti blowup see drusinski harel sinc combinatori structur altern automata rich translat specic altern automata much simpler translat nondeterminist automata altern automata enabl complet partit logic combinatori aspect reason program give rise cleaner simpler veric algorithm vardi abil altern automata switch existenti univers branch mode also make complement easi exampl order complement altern muller automaton innit word one dualiz transit function accept condit miyano hayashi lindsay contrast complement challeng problem nondeterminist automata innit word particular complement nondeterminist buchi automaton involv exponenti blowup safra michel muller et al muller et al introduc weak altern automata weak altern automaton automaton set state partit partial order set set classi accept reject transit function restrict transit automaton either stay set move set smaller partial order thu run altern automaton eventu get trap set partit accept determin accord classic set special structur weak altern automata ect attract comput properti make appeal exampl best known complex solv membership problem buchi altern automata quadrat time know solv membership problem weak altern automata linear time kupferman et al weak altern automata special case buchi altern automata inde condit get trap accept set replac condit visit state accept set innit often direct easi see true fact proven rabin muller et al that dene tree languag l recogn weak altern automaton l complement recogn buchi nondeterminist automata nevertheless dene word weak altern automata less express buchi altern automata recogn regular languag prove thi muller et al lindsay suggest linear translat determinist muller automata weak altern automata use howev construct muller et al lindsay order translat nondeterminist buchi cobuchi automaton weak altern automaton one choic rst translat determinist muller automaton determin involv exponenti blowup safra even wors altern automaton determin involv doublyexponenti blowup henc translat weak altern automata blowup avoid orna kupferman mosh y vardi paper answer question posit describ simpl quadrat translat buchi cobuchi altern automata weak altern au tomata beyond independ interest translat give rise simpl complement algorithm nondeterminist buchi automata closur nondeterminist buchi automata complement play crucial role solv decis problem second order logic result mani eort put prove closur develop simpl complement al gorithm buchi buchi suggest complement construct inde solv problem yet involv complic combinatori argument doublyexponenti blowup state space thu complement automaton n state result automaton on state sistla et al sistla et al suggest improv construct on state still howev optim safra safra introduc optim determin construct also enabl on log n complement construct match known lower bound michel anoth on log n construct suggest klarlund klarlund circumv need determin heart mani complex result veric optim construct safra klarlund complic particular intricaci algorithm make implement dicult know implement klarlund algorithm implement safra algorithm tasiran et al cope involv structur state complementari automaton lack simpl implement due lack need recal automatatheoret approach veric check correct program respect specic check contain languag program languag automaton accept exactli comput satisfi specic order check latter check intersect program automaton complement specic automaton empti due lack simpl complement construct veric tool restrict specic automaton improvis solut exampl veric tool cospan kurshan specic automaton must determinist it easi complement determinist automata clark et al veric tool spin holz mann user complement automaton himself thu togeth program spin get input nondeterminist buchi automaton call neverclaim accept exactli comput satisfi specic complementari automaton construct procedur similar one construct klarlund construct involv altern simpler easili implement consid nondeterminist buchi automaton b easili complement b regard univers cobuchi automaton use construct translat complementari automaton altern automaton w miyano hayashi weak altern automata translat nondeterminist buchi automata appli exponenti yet simpl translat w end nondeterminist buchi automaton n complement b b n state size n on log n weak altern automata weak meet known lower bound michel complic construct suggest safra klarlund altern given alphabet innit word innit sequenc letter denot w l sux l l l w automaton innit word input alphabet q nite set state initi state accept condit a condit dene subset q q set state move state q read letter sinc transit function may specifi mani possibl transit state letter determinist everi q q jq determinist automaton run w function r ie run start initi state everi l rl ie run obey transit function automata nite word accept dene accord last state visit run word innit thing last state accept dene accord set inf r state r visit innit often ie innit mani l in q nite guarante inf r way refer inf r depend accept condit a sever accept condit studi literatur consid two buchi automata q r accept w inf r cobuchi automata q r accept w inf r sinc determinist may mani run w contrast determinist automaton singl run w two dual way refer mani run existenti automaton or simpli nondeterminist automaton shall call sequel accept input word w exist accept run w univers automaton accept input word w run w accept altern studi chandra et al context ture machin brzozowski leiss chandra et al miyano hayashi nite automata particular miyano hayashi studi altern automata innit word altern enabl us existenti univers branch choic given set x let x set posit boolean formula x ie boolean formula built element x use _ also allow formula true fals x say satis formula truth assign assign true member assign fals member x n satis exampl set fq satisfi formula q set fq satisfi formula consid automaton abov repres q ex ampl transit q nondeterminist automaton written q univers transit written kupferman mosh y vardi transit nondeterminist univers automata correspond disjunct conjunct respect transit altern automata arbitrari formula b q have instanc transit mean automaton accept sux w w state q accept w i q q q q transit combin existenti univers choic formal altern automaton innit word tupl automata function run nondeterminist automaton function r q run altern automaton tree r r q r formal tree nite innit nonempti prexclos set element call node empti word root everi x node x c c children x node children leaf sometim refer length jxj x level tree path tree set everi x either x leaf exist uniqu c x c given nite set label tree map node letter run innit word qlabel tree ht r ri follow hold possibl empti set satis c k x c r rx c q c exampl q possibl run w root label q one node level label q q anoth node level label q q note true x need children reason r may leav also sinc exist set requir fals cannot run take transit run ht r ri accept innit path label word accept condit word w accept exist accept run it note conjunct transit function ect branch ht r ri disjunct ect fact mani run word languag a denot la set innit word accept thu word automaton dene subset denot la complement languag a set word muller et al muller et al introduc weak altern automata waa waa accept condit q exist partit q disjoint set q set q either q case q accept set q case q reject set addit exist partial order collect q s everi q q occur q q transit state q lead state either q lower one follow everi innit path run waa ultim get trap within q path satis accept condit q accept set thu view waa accept condit weak altern automata weak buchi automaton accept condit cobuchi automaton accept condit q n inde run get trap accept set visit innit mani state true visit nite mani state q n use observ run altern cob uchi consid cobuchi altern automaton ri accept run word w two node x x r say x x similar jx say run ri memoryless similar node x x x intuit similar node correspond two copi mission accept sux w jx j state rx memoryless run subtre ht r ri similar root coincid thu mission fulll way turn consid run cobuchi automata restrict memoryless run formal follow theorem theorem emerson jutla cobuchi automaton accept word w exist memoryless accept run w note emerson jutla prove stronger result name exist memoryless accept run pariti altern automata sinc cobuchi accept condit special case pariti accept condit result cite follow easi see everi run ht r ri everi set n node level contain least two similar node therefor memoryless run a everi level contain n node root dierent subtre accordingli repres memoryless run ht r ri innit dag direct acycl qin hq li v exist x r exampl hq vertex g r q fg l q flg q fl g ehq li hq exist thu g r obtain ht r ri merg similar node singl vertex say vertex hq l successor vertex hq li ehq li hq l i say reachabl hq li exist sequenc hq success vertic hq li exist final say vertex hq li vertex q easi see ht r ri accept path g r nite mani vertic consid possibl nite dag g g r say vertex hq li endang g nite mani vertic g reachabl hq li say vertex hq ii safe g vertic g reachabl hq li vertic note that particular safe vertex vertex given memoryless accept run ht r ri dene innit sequenc g dag induct follow kupferman mosh y vardi li j hq li endang g g li j hq li safe g i g lemma everi exist l l l n vertic form hq li g proof prove lemma induct i case denit g inde g r level l n vertic form hq li assum lemma requir hold i prove consid dag g distinguish two case first g nite g i empti g i empti well done otherwis claim must safe vertex g i see thi assum way contradict g innit vertex g i safe sinc g innit g i also innit also vertex g i least one successor consid vertex hq l g i sinc assumpt safe exist vertex hq reachabl hq successor hq i assumpt hq l also safe henc exist vertex reachabl hq successor hq assumpt also safe thu continu similarli construct innit sequenc vertic i vertex hq vertex reachabl hq j l j i hq j l j successor hq sequenc howev correspond path ht r ri visit innit often contradict assumpt ht r ri accept run so let hq li safe vertex g i claim take l lemma requir is claim j l vertic form hq ji g i sinc hq li g i endang g thu innit mani vertic g reachabl hq li henc konig lemma g contain innit path hq li k vertex hq k l ki innit mani vertic reachabl g thu endang g therefor path exist also g i recal hq li safe henc reachabl hq li vertic ki path safe well therefor g i follow j l number vertic form hq ji g i strictli smaller number g henc induct hypothesi done lemma g n nite henc follow corollari corollari g n empti vertex hq li g r uniqu index hq li either endang g safe g i given vertex hq li dene rank hq li denot rankq l follow hq li endang g li safe g i denot set f denot set odd member k corollari rank everi vertex g r n weak altern automata weak recal ht r ri accept path g r visit nite mani vertic intuit rankq l hint dicult get convinc path g r visit vertex hq li visit nite mani vertic easiest get convinc vertic endang g accordingli get minim rank come vertic safe graph g obtain g throw away vertic rank vertic get rank process repeat respect graph g obtain g throw away vertic rank befor start endang vertic g get rank continu safe vertic g get rank process repeat vertic get rank note vertex get odd rank lemma make intuit formal lemma everi vertex hq li g r rank n hq li g proof prove lemma induct i sinc g case immedi induct step distinguish two case case even consid vertex hq li g i hq li g lemma requir follow induct hypothesi hq li g hq li safe g accordingli rankq meet lemma requir case consid vertex hq li g i hq li g lemma requir follow induct hypothesi hq li g hq li endang g accordingli rankq meet lemma requir lemma everi two vertic hq li hq reachabl hq li rankq proof assum rankq distinguish two case even case hq li endang g either hq l g case lemma rank hq l g case reachabl hq li must endang g rank i odd case hq li safe g either hq l g case lemma rank hq l g case reachabl hq li must safe g rank i lemma everi innit path g r exist vertex hq li odd rank vertic path reachabl hq li proof lemma everi innit path g r exist vertex hq li vertic path reachabl hq li need prove rank hq li odd assum way contradict rank hq li even i thu hq li endang g then rank vertic path reachabl hq li also i lemma belong g sinc path innit innit mani vertic contradict fact hq li endang g seen cobuchi altern automaton accept run w also structur accept run w next section kupferman mosh y vardi employ structur run order translat buchi cobuchi altern automata weak altern automata lode thoma lode thoma use structur run order priori dene run weak altern automata dag bound width enabl prove appropri determinaci result directli piterman piterman use structur run order extend linear tempor logic altern word automata rank dene section close relat progressmeasur introduc klarlund properti studi section there progress measur gener concept quantifi step program contribut bring comput closer specic progress measur use klarlund reason automata innit word rank dene also measur progress indic far automaton satisfi cobuchi accept condit use rank consid unlik klarlund altern automata consequ need follow subset construct consid sever rank simultan thu much complic klarlund handl rich structur automata section get back point see altern remov two approach essenti coincid b uchi cob uchi weak altern section present translat buchi cobuchi altern automata weak altern automata rst describ quadrat construct suggest preprocess reduc blowup averag case construct theorem let altern cobuchi automaton weak altern automaton number state quadrat a proof let intuit automaton state hq ii read letter l the lth letter input guess memoryless accept run w rank hq li i except initi state explain below is q pair n upper bound rank hq i mean function releas given formula q rank n formula releas i obtain replac atom q disjunct exampl weak altern automata weak state hq ii q follow even fals q odd is current guess rank then employ releas run move successor rank smaller i if howev q current guess rank odd then denit rank current guess rank wrong run reject is innit mani guess rank along path odd rst show weak that dene partit state order partit weak condit hold rank induc set q partit thu two state hq ii set dene order q easi see weak condit hold everi state hq ii q state appear hq ii belong set q everi set contain disjoint denit follow copi allow get trap set odd rank allow get trap set even rank prove correct construct rst prove la consid word w accept let ht r r accept run w consid qlabel tree ht r ri x ri project label ht r r q element easi see ht r ri run w inde transit annot transit rank show ht r ri accept run sinc denit innit path ht r r get trap set q fig odd i denit accept run visit state hq ii odd q henc innit path actual get trap subset q n fig q fig consequ ht r ri path visit state nite often done left prove la consid word w accept a let ri accept run w consid q label tree ht r r rank hrx jxji g r claim ht r ri accept run rst prove run sinc q ni root tree ht r r label legal consid node set label s successor ht r ri n maxim rank vertex get successor c r n therefor set henc rst level ht r r also label legal level consid node x r x rankrx set label xs successor ht r ri lemma successor x c x r rankrx c jx cj i also definit rank cannot rx odd therefor set henc tree ht r r run w final lemma innit orna kupferman mosh y vardi path ht r r get trap set odd index thu ht r r accept remark explain abov automaton state hq ii read lth letter input correspond guess memoryless accept run w rank hq li i accordingli function releas and transit function base it enabl transit guess rank rank smaller i result number state on transit hq ii may n time longer transit lead on time larger nevertheless sinc subformula formula releas i blowup describ present maintain dag subformula share sever transit duplic anoth way keep on time larger reden releas i replac atom q disjunct q i _ q _ q thu instead transit rank smaller i transit enabl rank i then automaton state hq ii read lth letter input correspond guess memoryless accept run w rank hq li i sinc simul one big decreas guess rank sever small decreas in particular transit enabl us jump over odd rank correct proof given easili adjust new denit releas discuss muller schupp one complement altern automaton dualiz transit function accept condit formal given transit function let denot dual function is everi q q obtain switch _ switch true fals if exampl dual accept condit condit accept exactli word q accept particular follow theorem muller schupp altern buchi automaton altern cobuchi automaton ise l complement construct theorem conceptu sim ple also involv blowup addit complement waa sacric weak henc theorem impli follow theorem theorem let altern buchi automaton weak altern automaton number state quadrat a section use translat describ theorem order obtain simpl complement construct nondeterminist buchi automata shall note there known lower bound complex latter impli quadrat blowup involv move cobuchi altern automata waa cannot reduc linear one weak altern automata weak improv construct drawback construct never perform better worstcas complex inde quadrat blowup introduc translat regardless structur would occur even if say weak automaton order circumv unnecessari blow up suggest rst calcul minim rank requir formal dene below construct respect rank discuss assum cobuchi automaton yet appli also dual case buchi automaton consid sequenc dag g everi g associ maxim width name maxim number vertic form hq li xed l g follow lemma maxim width g n i practic transit g g i often reduc width one vertex say requir exist word w la everi memoryless run ht r ri w sequenc g dag g width g j bigger note impli g j empti let i everi j n dene weak altern automaton j follow intuit restrict run guess rank smaller j formal state space j q j initi state hq ji transit function accept condit restrict state q j easi see everi j languag j contain languag hand languag contain word empti follow minim rank requir minim j n la theorem let altern cobuchi automaton problem nding minim rank requir pspacecomplet proof recal minim rank requir minim j n la languagecontain problem altern cobuchi automata pspace nd minim rank polynomi space success languagecontain check lower bound reduct empti problem altern cobuchi automata whose pspacehard follow result chandra et al given altern cobuchi automaton prove empti minim rank requir technic conveni assum formula rang tautolog sinc replac transit tautolog transit accept sink empti problem clearli pspacehard alreadi automata satisfi assumpt assum rst empti then la n particular direct note set state q fg transit coincid a also sinc even accept set empti henc formula tautolog accept word accordingli empti sinc n automaton minim rank requir a equival a henc follow theorem orna kupferman mosh y vardi theorem let altern cobuchi automaton n state let j minim rank requir a weak altern automaton number state nj note problem nding minim rank requir requir space polynomi a automaton typic small bottleneck comput usual applic eg take product system larg state space thu nding minim rank j requir use j instead may great practic import complement nondeterminist b uchi section appli result order complement nondeterminist buchi automata rst describ section construct use altern automata describ section construct use analysi section without explicitli use altern automata complement via altern automata unlik case altern automata complement nondeterminist automata complic problem follow theorem one need order complement nondeterminist buchi automaton translat univers cobuchi automata nondeterminist buchi automata miyano hayashi miyano hayashi suggest translat altern buchi automata nondeterminist buchi automata present a simpli version of translat theorem below theorem miyano hayashi let altern buchi au tomaton nondeterminist buchi automaton exponenti mani state proof automaton guess run a given point run keep memori whole level run tree a read next input letter guess next level run tree a order make sure everi innit path visit state innit often keep track state owe visit let if qs qo qs translat theorem howev handl altern and particular univers cobuchi automata one get dualiz nondeterminist buchi automaton construct theorem weak altern automata weak becom essenti thu given nondeterminist buchi automaton b suggest follow complement construct b follow theorem construct b dual cobuchi univers automaton b automaton follow theorem construct equival weak altern automaton w automaton w satis follow theorem construct w equival nondeterminist buchi automaton n automaton n satis ln b n state b n state well w on state n state michel safra howev optim complement construct nondeterminist buchi automata result automaton n on log n state describ get use theorem optim automaton n let us note scheme impli translat describ theorem cannot improv linear translat inde abl construct b equival waa w on state also abl construct n on state contradict on log n lower bound order get n on log n state exploit special structur w follow consid state hs oi n set subset q n say p q n consist everi two state hq ii hq claim follow claim restrict state n pair hs oi consist subset q n allow is result n still complement b on log n consist subset q n two claim alway subset s easi restrict state space n on log n state order prove claim recal automaton w visit state hq ii read l letter input word w correspond guess rank hq li accept memoryless run w i seen accept memoryless run ht r ri b w run w follow rank g r accept sinc everi vertex g r uniqu rank copi w creat level l accept run consist sens set state visit copi w level l run consist n state correspond copi w read prex w henc state hs oi inconsist correspond level l run w whose copi inconsist henc automaton n ignor state hs oi inconsist s order prove claim observ character consist set project pair q augment assign f n project n log n assign done compos three construct straightforward dene automaton n directli mean bs compon given nondeterminist buchi automaton n set p qn say p possibl exist pair hq ii p odd q two set p p qn letter say orna kupferman mosh y vardi pair hq p automaton s possibl consist g for state hs oi q letter dene cover ho i possibl consist g possibl consist g possibl consistentg discuss section advis construct automaton w accord minim rank j requir b then state n correspond consist set augment assign f accordingli automaton n onj log n state complement without altern automata section give altern descript complement construc tion independ altern automata idea behind construct use section transform altern cobuchi automata weak altern automata repeat idea ben et reader whod like see complement construct go altern automata construct follow essenti coincid one describ klarlund nondeterminist buchi automaton let word dene innit dag g embodi possibl run w formal union g q q l l q l flgq l flg ehq li hq refer g run dag w say vertex hq successor vertex hq li ehq li hq say reachabl li exist sequenc hq success vertic hq li final say vertex hq li vertex q easi see accept w g path innit mani vertic inde path correspond accept run w found easier teach direct construct see httpwwwcsriceeduvardiavhtml weak altern automata weak rank g function satis follow two condit vertic hq li v fhq li odd q edg hhq li hq li thu rank associ vertex g rank n rank along path decreas monoton vertic get even rank note path g eventu get trap rank say rank f odd rank path g eventu get trap odd rank formal f odd path hq g j fhq j ji odd fhq ji lemma reject w odd rank g proof rst claim odd rank g reject w see thi recal odd rank everi path g eventu get trap odd rank henc vertic get even rank follow path g thu possibl run w visit nite often assum reject w describ odd rank g section say vertex hq li endang possibl nite dag g g nite mani vertic g reachabl hq li vertex hq li safe vertic g reachabl hq li vertic note that particular safe vertex vertex dene innit sequenc dag induct follow g li j hq li endang g g li j hq li safe g i g consid function hq li endang g li safe g i recal reject w thu path g nite mani vertic therefor argument use proof lemma use order show g n nite g n empti impli f map vertic v n claim f odd rank first sinc safe vertex cannot vertex fhq li odd safe hq li rst condit f rank hold second lemma everi two vertic hq li hq reachabl hq li li particular hold successor hq li henc second condit rank hold too final lemma everi innit path g exist vertex hq li odd rank vertic path reachabl hq li fhq li henc f odd rank lemma automaton complement proceed input word w guess odd rank run dag w dene automaton formal rst need denit notat orna kupferman mosh y vardi level rank w function gq odd q let r set level rank two level rank g g say cover g q q q gq q q dene q thu odd rank guess map root hq run dag n for state hg p cover g cover thu read lth letter input l guess level rank level l run dag level rank cover level rank level l addit p compon keep track state whose correspond vertic dag even rank path travers vertic eventu reach vertex odd rank path dag visit vertex odd rank set p becom empti initi new oblig visit odd rank accord current level rank accept condit r fg check innit mani level oblig fulll note automaton equival one describ section inde state hg p r q correspond state hs oi g clearli possibl consist s similarli sinc set state space section possibl consist state hs oi induc level rank thu correspond state here discuss describ quadrat translat buchi cobuchi altern automata weak altern automata show translat yield simpl complement algorithm nondeterminist buchi automata anoth applic translat solut nonempti problem shown kupferman et al nonempti problem nondeterminist tree automata nonempti problem altern word automata singleton alphabet equival complex coincid refer problem nonempti problem recal nonempti problem weak automata solv linear time kupferman et al hand best known upper bound nonempti problem buchi cobuchi automata quadrat time use translat one solv nonempti problem buchi cobuchi automaton rst translat weak altern automata weak weak automaton size onj j minim rank requir a yield nonempti algorithm complex kupferman vardi b extend idea paper describ ecient translat stronger type altern automata weak altern automata enabl us improv known upper bound nonempti problem given altern pariti automaton mostowski emerson jutla n state k set construct equival weak altern automaton on k state given altern rabin automaton rabin n state k pair construct equival weak altern automaton on k k state construct yield on k on k k upper bound nonempti problem pariti rabin automata respect match known bound pariti automata emerson et al improv known onk k bound rabin automata emerson jutla pnueli rosner recal weak altern word automata less express buchi altern word automata weak altern tree automata strictli less express buchi altern tree automata precis dene tree languag l recogn weak altern automaton l complement recogn buchi nondeterminist automata result follow express result second order logic rabin equival weak altern tree automata weak secondord logic rabin kupferman vardi extend idea paper handl tree automata given two nondeterminist buchi tree automata u u recogn languag complement construct weak altern tree automaton equival u number state quadrat number state u u precis u u n state respect automaton nm state known linear translat weak altern tree automata formula alternationfre fragment calculu kupferman vardi a impli quadrat translat buchi automata alternationfre calculu extend scope ecient symbol model check highli express specic formal acknowledg thank nil klarlund clarifi relat klarlund work wolfgang thoma help discuss r finit automata sequenti network power bound concurr i finit automata journal acm complex tree automata logic program modelcheck fragment calculu design valid comput protocol progress measur progress measur complement weak altern automata tree automata empti weak selfcomplement automatatheoret approach branchingtim model check comput aid veri decis problem altern test gener complement dicult automata nite word regular express altern automata altern automata extend tempor logic synthesi reactiv modul decid second order theori automata weakli de complex languag contain use nondeterminist omegaautomata automata automatatheoret approach linear tempor logic automatatheoret approach automat program veri cation reason receiv june tr altern myampersandohgrtyp ture acceptor altern automata weak monad theori tree complex complement problem bumyampersandumlchi automata applic tempor logic altern automata infinit tree synthesi reactiv modul design valid comput protocol automata infinit object progress measur complement myampersandohgrautomata applic tempor logic tree automata mucalculu determinaci unifi approach show languag inclus equival variou type myampersandohgrautomata power bound concurr reason infinit comput computeraid verif coordin process automatatheoret approach linear tempor logic weak altern automata tree automata empti altern automatatheoret approach branchingtim model check languag contain nondeterminist omegaautomata altern automata logic infinit word modelcheck fragment myampersandcalculu freedom weak determin progress measur finit argument infinit comput ctr a fellah s noureddin succinct properti dtafa proceed th wsea intern confer softwar engin parallel distribut system p februari madrid spain orna kupferman mosh y vardi complement certif theoret comput scienc v n p novemb orna kupferman mosh y vardi linear time branch time acm transact comput logic tocl v n p april erich grdel wolfgang thoma thoma wilk literatur automata logic infinit game guid current research springerverlag new york inc new york ny