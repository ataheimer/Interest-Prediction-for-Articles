t power limit strict analysi a strict analysi import techniqu optim lazi function languag well known strict analysi method incomplet ie fail report strict properti paper provid precis formal character loss inform lead incompletenss specif establish follow character theorem mycroft strict analysi method gener method call eeanalysi reason exhaust evalu nonflat domain mycroft method deduc strict properti program p iff properti independ constant appear evalu p prove thi specifi small set equat call eaxiom captur inform loss mycroft method develop new proof techniqu call erewrit erewrit extend standard notion rewrit permit use reduct use eaxiom interspers standard reduct step eaxiom syntact character inform loss erewrit provid algorithmindepend proof techniqu character power analysi method use answer question complet incomplet mycroft method certain natur class program final techniqu develop paper provid gener principl establish similar result analysi method base abstract interpret demonstr gener techniqu give character theorem anoth variat mycroft method call ddanalysi b introduct mycroft pioneer concept strict analysi techniqu optim lazi function languag transform callbyne callbyvalu result major impact techniqu compil optim parallel evalu lazi function languagesmycroft work base abstract interpret firstord function defin flat domain subsequ much research develop strict analysi techniqu higherord function burn et al hudak young kuo mishra work partial support nsf grant ccr ccr ccr preliminari version paper present popl author address r sekar bellcor room jr south street morristown nj email sekarbellcorecom p mishra iv ramakrishnan depart comput scienc suni stoni brook ny email fmishraramgcssunysbedu nonflat domain hugh wadler hall wise sekar et al wadler wellknown strict analysi method deduc strict properti function exampl consid function p x alway true valu x observ f strict y fact imposs detect uniformli therefor strict analysi method must incomplet ie fail report strict properti incomplet may aris varieti sourc inabl repres possibl strict properti inabl accur analyz function composit re cursion etc inaccuraci lead inform loss strict analysi method despit decad research strict analysi method import problem discov precis formal character loss inform remain open result call character theorem import provid unequivoc basi compar differ strict analysi method also enabl us pinpoint weak exist method improv aid us discov new power method main result paper present first character theorem mycroft method natur gener nonflat domain call eeanalysi sekar et al main theorem is mycroft method deduc strict properti program p iff deduct independ constant appear evalu p instanc function f abov deduc f strict base fact p x alway evalu constant true thu mycroft method cannot deduc thi mycroft method constant map singl valu abstract domain obvious must contribut loss inform howev sever step abstract might also contribut inform loss choic abstract represent primit function use composit fix point iter analyz userdefin function etc contribut show inform loss mycroft method due map constant singl valu abstract step lossless import consequ result method uniformli ignor constant cannot power mycroft method overview approach state character theorem formal prove it need devis new technic idea proof techniqu first specifi small set equat axiom call eequat make constant term interconvert therebi captur inform loss incur map constant valu eequat induc equival relat e call eequival pro gram given p e q iff p obtain q chang constant part base notion eequival program main theorem power limit strict analysi delta formal state as mycroft and eeanalysi method deduc strict properti program p iff strict properti share everi program illustr follow two program eequival sinc one obtain chang true fals viceversa note f strict x wherea f strict y howev neither properti share program thu two properti infer mycroft method hand properti x share henc infer mycroft method part character theorem show p e q comput strict properti p q establish part need show strict properti p infer mycroft method exist q e p strict properti construct q quit complex cumbersom therefor develop new proof techniqu call erewrit precis formal notion perform reduct q e p erewrit extend standard notion rewrit permit use equat step interspers standard reduct step p thu constant interchang point reduct sequenc final show loss inform due composit recurs captur erewrit eequat syntact character inform loss erewrit provid algorithm independ proof techniqu character power strict analysi by mean want know whether analysi procedur comput strict properti need know comput procedur all need check strict properti preserv program modifi permit eaxiom eg chang constant my croft eeanalysi method use answer question complet method respect class program contrast appear difficult deal question use setup abstract interpret section describ detail complet result base erewrit techniqu develop paper provid gener principl establish similar character theorem mani analysi method demonstr gener techniqu abl give character theorem anoth variat mycroft method call ddanalysi ddanalysi enhanc mycroft method reason head normal form nonflat domain among applic ddanalysi shown valuabl tool repair violat strong sequenti concept pioneer huet levi lazi evalu equat program sinc preliminari version paper appear popl much research taken place area complet abstractinterpretationbas analys section provid detail comparison approach approach propos work rest paper organ follow section overview eeanalysi method technic detail erewrit main theorem appear section section give character theorem ddanalysi implic signific result appear section togeth remark gener final relationship research dicuss section preliminari languag consid constructorbas term rewrit system tr system consist set orient equat call rewrit rule form r lefthand side lh l righthand side rh r term may contain variabl lh must linear ie variabl occur onc furthermor nonvari symbol partit two disjoint set set function symbol f set constructor symbol c outermost symbol everi lh f rest c firstord program written function languag well recurs equat studi mycroft follow disciplin tx v refer term obtain substitut variabl x term v u term n variabl x shorthand ux substitut fi map variabl term instanc tfi term obtain replac x fix variabl x t redex term u occurr instanc lh term normal form nf contain redex u mean u obtain replac redex lfi rfi r rewrit rule reflex transit closur denot use notat nf nf denot respect cannot reduc term nf term head normal form hnf redex overview eeanalysi character theorem base eeanalysi strict analysi method nonflat domain analysi tell us subterm term normal order normal entir term review method remark reduc mycroft method program flat domain therefor result eeanalysi directli appli mycroft method well first defin strict properti term follow definit eestrict let term eestrict properti iff everi reduct sequenc normal instanc tfi t term one set ffix fix r g ffix n fix nrn g normal instanc eestrict mean order normal ift normal either use notat ee denot eestrict term t strict arbitrari term comput compos strict constructor function symbol use follow rule power limit strict analysi delta definit rule substitut let term x xn variabl fi substitut variabl illustr rule consid substitut fix z rh rule becom f ee x x x g ee y z suppos f ee ee y z rh would simplifi yield strict proceed equat comput x ee c ee f ee that togeth rule substitut comput strict arbitrari term variabl case substitut normal henc x case cx xn nf instanc cs n obtain normal henc c ee conjunct x note that definit ariti c zero c ee true discuss yield follow two equat case root symbol function symbol f assum f defin rule observ instanc fs rewritten one e e k therefor f ee disjunct e ee k howev f ee formula x xn variabl differ e j which actual variabl henc need function g j project demand variabl demand x xn lead us follow equat defin f ee equat defin g j follow equat appli order given definit stand arbitrari boolean formula disjunct normal form dnf subscript stand conjunct contain variabl delta r sekar et al justif definit g j follow eq simpli push oper individu conjunct eq note rewritten jth equat must case fi contain variabl x x ir edemand normal e j must normal nonvari symbol constructor nf fix fix ir nf henc x appear g j e ee appear e ee and henc argument consist entir constructor no variabl must normal match it henc x edemand and henc otherwis cannot conclud edemand x thu appear f ee and henc equat directli comput f ee f nonrecurs case recurs function use follow fixpoint iter procedur let f fm denot function program e ee l f eer l number rule defin f limit sequenc f ee defin f ee illustr eeanalysi use follow program exampl begin f by definit by simplifi x use applic easili seen e ee substitut thi get g e ee observ e ee by two applic also note g e ee reduc x applic x follow procedur arriv f thu f eestrict second argument deriv mycroft method eeanalysi observ function recurs equat notat defin use singl rewrit rule therefor disjunct rule unnecessari furthermor sinc equat constructor lh no pattern match easili shown g j s reduc ident function final note primit function condit use mycroft defin use pattern match strict properti deriv analysi function exactli assum mycroft power limit strict analysi delta character theorem eeanalysi altern definit strict properti start section altern definit strict properti use proof definit need relat substitut truth assign follow in follow use notat nf nf denot respect cannot reduc term nf let truth assign function assign true fals x xn oe substitut function assign term x xn say oe word assign true variabl whenev oe substitut term possess nf place similarli oe c mean definit strict properti ii strict properti iff note definit compact version mycroft origin definit pp mycroft strict properti show two definit strict properti equival proof equival strict properti ii show definit impli definit proceed follow let a fals must assign fals one liter conjunct dnf therefor everi oe c a must substitut term nf one liter everi conjunct contraposit definit consequ toe nf definit follow show definit impli assum anteced contraposit definit hold ie j note henc definit tfi nf maxim strict properti set strict properti form lattic henc everi term maxim strict properti defin follow definit maxim strict properti strict properti said maxim either follow equiv alent condit hold strict properti a oe c a toe nf follow exampl strict properti f wherea x maxim strict properti exampl proof equival condit definit henceforth assum dnf show impli contraposit pick arbitrari hold otherwis find true fals a oe c a toe nf by note toe nf although henc strict properti t show ie assum true oe c a toe nf sinc true conjunct a disjunct remain claus let show strict properti t thu contradict thi consid a also fals sinc strict properti oe c otherwis ie must case t mean henc sinc alreadi know oe c toe nf establish strict properti t eaxiom erewrit introduc follow equat henceforth call eaxiom captur notion cannot distinguish constant eeanalysi note term cc consist entir constructor built c use equat repeat process build constructor term contain c start c term equal sinc two zeroari constructor equal equat two constructor term made equal equat say obtain use two equat relat natur lift rewrit rule program follow l program p q p e q iff everi rule l r p rule l q vice versa henceforth p q stand program final defin ederiv obtain igamma appli one rewrit rule program one equat call reduct step p step denot p i former case estep denot e i latter case p estep denot note estep equat appli either righttoleft denot r lefttoright denot l say term enorm form iff contain function symbol use notat senf denot possess enf note introduct erewrit formal notion constant interchang point reduct sequenc therefor achiev effect perform reduct wrt q e p formal theorem power limit strict analysi delta proof definit eequival program qreduct step l here l equival p ereduct sequenc l oe therefor everi qderiv view special type p ederiv henc proof direct proof direct need transform arbitrari p ederiv sequenc one special type transform requir rearrang order estep p step perform straightforward rearrang sequenc consist estep follow p step or p step follow estep one consist zero p step follow zero estep or zero estep follow zero p step howev simpli repeat process may creat arbitrarili mani new e p step process rearrang may termin therefor sophist analysi interact e p step necessari construct desir reduct sequenc first present outlin construct below let k k first applic r sequenc pe s show either reduct one immedi preced inter chang preced equat use program rule l r effect perform two reduct achiev perform one reduct use rule l r here r e r repeat step till reduct use r rule disappear move ahead reduct repeat step next applic r rule on point reduct sequenc partit two part initi contain sequenc reduct use r rule alon latter part contain reduct use l rule form l r l r rule p r e r let t manner analog step abov push applic rule r rule p r e r ahead applic l step construct reduct sequenc note q consist rule l eequival rule l r p thu q e p fill detail proof provid detail four proof step first reduct step use l rule let r rule use reduct immedi preced it note k must form uro follow case depend upon whether l rule appli insid u case a insid oe case b insid r case c case a let term whose root reduct use l perform now follow diagram illustr order reduct interchang case b case l must appli insid subterm variabl x r must rewritten thu s subterm substitut x ie variabl x occur time r k interchang order reduct follow k reduc k n applic r rule reduc back case c note case l r cannot l rule sinc first applic l rule cannot r rule sinc case x cannot appli l rule within r rule follow diagram otherwis program rule follow diagram j complet proof step first applic program rule l r therefor three case consid depend upon whether preced reduct use r perform within u case a within oe case b within l case c case a note case possibl rule appli step power limit strict analysi delta rule must r rule follow diagram illustr two reduct interchang case b case r rule must appli within subterm must rewritten substitut variabl x l assum x occur n time r let denot substitut occurr k interchang order reduct follow appli rule r subterm case c follow diagram show get anoth program rule achiev effect reduct j share strict properti main theorem requir notat denot strict properti term wrt differ program denot strict properti wrt p p p may drop irrelev obviou context definit share strict properti share strict properti wrt p iff either follow equival condit hold strict properti everi term e wrt everi program q e p aa oe c a toe enf equival two condit follow directli theorem readi present main theorem theorem main theorem ee share strict properti main part proof effort establish part theorem proof part fairli easi base concept strict properti two term syntact ident denot two formula ident even without expand strict properti subterm t consid exampl term fx fcx f f c c note fcx ee j fx lemma a s t e ee j ee b proof part a show ee ee syntact ident whenev obtain one applic eaxiom induct number applic eaxiom requir get s part a lemma follow eaxiom appli note ee j ee x loe ee ee j ee x roe ee observ eaxiom loe ee j roe ee ee j ee part b suffic show express obtain ee use rule substitut rule section syntact ident program p q sinc express ee obtain f ee rule substitut ee p ee q ident whenev f ee p f ee q ident function f let l rule defin f p q respect definit f ee p j l part a theorem r ee also observ equat e chang variabl j ident furthermor note l l henc disjunct express f ee p also appear f ee q interchang p q argument see convers also hold therefor f ee p thu establish part main theorem proof part quit difficult first present outlin approach part proof present detail proof approach proof main theorem proof strategi show eeanalysi infer maxim share strict properti word ee p wish show cf definit call strict properti satisfi emaxim strict properti abbrevi emsp purpos proof choos show ee p satisfi stronger properti note stronger properti impli show also impli part theorem assum share strict properti contraposit power limit strict analysi delta second condit definit follow true henc ee proof need concept depth reduct sequenc t label occurr function symbol exclud function symbol within oe let i obtain use rule l r root redex label say j label occurr function symbol r rewrit root redex label proceed usual depth maximum among label assign function symbol n use notat denot enorm use reduct sequenc depth k wrt t analog s kt nf similarli defin recal fix point comput method use eeanalysi f ee specifi argument must nf whenev fs remark f eek specifi argument must nf whenev exampl fs must nf fs one must nf on remark impli f eek maxim sens motiv follow definit kmaxim properti t observ properti impli show eek kmaxim prop erti then sound eeanalysi ee strict properti satisfi henc emsp proof main theorem first show rule substitut preserv kmaxim properti lemma let arbitrari term n respect k maxim properti also let kmaxim properti kmaxim properti proof theorem prove show three step given construct given oe c a construct fi reduc ederiv whose depth wrt show fi c a sinc kmaxim properti everi fi c a exist ederiv depth k wrt normal select suitabl fi deriv anoth ederiv normal depth k wrt ax j show m conjunct dnf m note true iff true a iff definit a delta r sekar et al a sinc j kmaxim properti j exist e deriv of depth k wrt j normal j oe whenev denot normal form reach deriv let fix concaten ederiv normal j oe true obtain e deriv delta reduc definit depth deriv depth k wrt fix j nf whenev true fi c a fi otherwis notic fi c true therefor exist ederiv depth k respect dx observ gamma subterm possess hnf must discard therefor reduct perform within fi irrelev remov gamma obtain new deriv gamma now observ whenev ax discard gamma without ever reduc redex insid fi use normal depth k wrt consid ederiv obtain concaten delta from step gamma note function symbol j ax j true appear maximum label assign function symbol observ label function symbol j j ax j remain zero sinc redex function symbol ever reduc delta gamma furthermor sinc label zero sinc depth gamma wrt label never increas beyond k therefor depth show equat in section comput k maxim properti f given kmaxim properti e j s lemma let j s respect kmaxim properti e j s maxim properti fx proof theorem prove three step show given true select one rule construct e instanc soe reduc instanc e j fi show fi c final construct ederiv normal fx xn depth k wrt base deriv sequenc reduc fx xn oe e j fi fact j kmaxim properti e j given true j ag j j let conjunct dnf g j j made true a equat in section defin g j s conjunct dnf j stand term lack head normal form power limit strict analysi delta specifi one follow two case case x case x let x variabl then equat in section x il l r otherwis x c constructor easili seen e x e observ ax true x sinc oe c a oex normal term u sinc u consist constructor reduc instanc x im c for everi variabl xim constructor c use ereduct thu ederiv reduc oe x im c also note x instanc therefor oe instanc concaten ederiv x obtain ederiv delta reduc soe instanc reduc use rule defin xim sinc conjunct j consid case of step show fi c equival fix im appear case everi xim substitut everi one c enf second case also substitut everi variabl xim appear c therefor fix im enf case step sinc j kmaxim properti e j true sinc fi c ederiv gamma depth k wrt e j normal e j fi consid ederiv obtain concaten delta reduct deriv normal fx xn oe depth step ft label function symbol e j one label increas k gamma lemma eek kmaxim properti t proof induct k basi note f fals hold vacuous use lemma definit eek term f eek establish simpl induct structur ee complet properti t induct step assum e eek j s respect kcomplet properti e j s lemma see f eek k complet properti f basi step use definit eek in term f eek lemma show eek k complet properti t now sound eeanalysi corollari ee emsp t character theorem ddanalysi illustr gener techniqu briefli outlin use prove similar character theorem ddanalysi mention earlier ddanalysi enhanc mycroft method deal head normal form nonflat domain particular ddstrict properti function f specifi argument function head normal order obtain head normal form applic f among applic proven valuabl repair violat strong sequenti a concept pioneer huet levi function program equat comput dd follow see sekar et al detail defin follow nonvari variabl nonvari obtain character theorem first step specifi eaxiom appropri ddanalysi effect equat equat two term head normal form remaind section specifi necessari chang definit theorem use prove character theorem eeanalysi obtain similar result ddanalysi definit theorem lemma replac nf hnf enf ehnf term without normal form term lack head normal form prove theorem respect eaxiom ddanalysi use essenti proof use eeanalysi lemma part a note dd righthand side precis dd lefthand side equat part b need argu g j function equival program remain unchang so need consid equat observ rule depend whether j variabl nonvari properti left unchang eaxiom lemma carri without chang argument lemma follow observ necessari case step observ x impli x therefor case ident x also observ whenev ax true x oe c a oex head normal term u u hnf ereduc x c remaind reason carri unchang chang follow result ddanalysi well power limit strict analysi delta theorem dd share dd strict properti t signific implic strict analysi method mycroft often defin nonstandard semant obtain reinterpret program simpler abstract domain definit use comput strict properti help answer question deal power method manner independ comput procedur use question take form given class program p method complet class inform lost method power enhanc etc contrast give proof techniqu answer question comput independ manner specif eaxiom syntact character inform lost method erewrit provid power algorithmindepend tool answer question abov mean want know whether analysi procedur comput strict properti need know comput procedur all need check strict properti preserv program modifi permit eaxiom eg chang constant mycroft eeanalysi method thu use approach draw follow conclus mycroft method the inform loss eeanalysi method due map constant singl valu abstract step lossless ani method uniformli ignor constant power ee analysi method precis method comput strict properti lh rh eaxiom addit power therefor sourc improv enrich analysi domain ad point it we show mycroft method complet noneras program wherein variabl lh rule appear rh mani import function noneras append revers matrix multipl etc observ p noneras q e p main theorem eeanalysi method deduc share strict properti complet class noneras program note proof make refer comput procedur use deduc strict properti we enhanc class permit use ifthenels an eras function follow way ifthenels must use potenti throw away function argument exampl x els z throw away one z wherea x yz els yz throw away argument eeanalysi method also complet class program well on hand eeanalysi method incomplet even simpl class nonrecurs program linear rh function f f section illustr incomplet final techniqu develop paper provid gener principl establish similar character theorem strict analysi method discuss below gener approach order gener approach deal method strict analysi well extens eeanalysi mention befor first need discov equat axiom captur loss inform analysi method discov eaxiom captur loss inform intuit way also use prove complet result may requir consider ing nuiti exampl leav open problem discoveri eaxiom method propos wadler reason list use four point domain eaxiom induc equival relat class program remain show infer strict properti relat equival class program first step direct give formal statement character theorem direct use develop notion erewrit establish result similar theorem relat erewrit perform reduct wrt sever program result make statement character theorem proof cleaner lot less cum bersom howev establish theorem may nontrivi appear way presenc eaxiom chang reduct sequenc e axiom make nonredex redex convert redex one lh redex anoth accomplish allow applic eaxiom around redex suggest result similar theorem hold theorem fail hold character explicitli refer program eequival given program given next step show strict properti comput share strict properti establish use analysi fairli straight forward manner eaxiom correctli set up difficult part establish character theorem show everi share strict properti or equival maxim share strict properti comput proof involv show step analysi procedur such composit function definit pattern match etc preserv maxim share strict properti part proof simplifi avoid pattern match instead restrict languag recurs equat case need show maxim share strict properti base function such arithmet oper composit step lose inform given eaxiom thu proof need extend lemma relat work sinc preliminari version paper appear popl much research taken place area complet abstractinterpretationbas analys use denot approach prove result similar gener problem abstract interpret base analys proof base notion similar semant permit semant valu confus confus permit exactli captur abstract domain show abstract interpret linearli order domain firstord type higherord languag complet upto notion power limit strict analysi delta confus reddi kamin proof base denot semant particular complet result state term similar semant deriv directli structur abstract domain approach enabl establish result much wider applic our howev approach advantag mention below first eaxiom provid character close tie abstract domain itself moreov eaxiom provid syntact or local character inform loss wherea reddi kamin approach base replac entir valu or express other similar semant believ syntact character use draw implic complet method class program instanc readili follow result mycroft eeanalysi complet noneras program contrast unclear simpl argument use draw conclus base similar semant approach second import differ result follow reddi kamin result base semanticsbas formul abstract interpreta tion often method base abstract intepret make direct use semant base formul sinc lead ineffici practic effici comput algorithm henc develop implement purpos see instanc clack jone one must address issu complet algorithm oper approach easili deal complet issu algorithm implement level well addit address formul level inde eeanalysi specifi sekar et al provid comput method well complet result thu appli actual implemt eeanalysi addit burden make proof quit detail final remark reddi kamin work note method extend nonlinearlyord domain remark basic problem possibl loss inform comput least upper bound interest note gener eeanalysi arbitrari demand as report produc result quit similar abstract interpret suffer drawback deal domain lossi lub interest open problem whether demand analysi possess complet properti finit domain result reddi kamin enabl us character power abstract intepret term inform obtain concret interpret character typic use compar power differ abstract interpret may answer question rel power two abstract interpret respect abil deduc specif properti instanc reddi kamin result seem suggest power abstract interpret determin simpli structur abstract domain howev gave exampl two abstract interpret use differ domain abl identifi strict properti address problem easili compar abstract interpreta tion mycroft propos concept predicatebas abstract interpret approach addit two compon interpret name domain interpret function mycroft add third compon form predic captur program properti interest anoth way view predic defin notion observ mycroft proce set framework one compar power two abstract interpret respect notion observ acknowledg author would like thank refere comment suggest result significantli improv content well present articl r compil lazi ml theori practic strict analysi higher order function strict analysi practic approach abstract interpret unifi lattic model static analysi program construct approxim fixpoint compil strict stream higher order strict analysi untyp lambda calculu th annual acm symposium principl program languag comput nonambigu linear term rewrit system project strict analysi fast parallel implement function languag equal experi strict analysi type infer perspect theori practic transform callbyne callbyvalu symbol constraintsolv framework analysi logic program beyond strong sequenti power limit strict analysi base abstract interpret strict analysi nonflat domain by abstract interpret finit domain tr strict analysismyampersandmdasha practic approach theori strict analysi higher order function project strict analysi compil strict stream strict analysi power limit strict analysi base abstract interpret fast parallel implement lazi languagesmyampersandmdashth equal experi complet predicatebas abstract interpret program equat logic symbol constraint solv framework analysi logic program fast strict analysi base demand propag higherord strict analysi untyp lambda calculu abstract interpret theori practic transform callbyne callbyvalu compil lazi ml ctr wan fokkink jasper kamperman pum walter lazi rewrit eager machineri acm transact program languag system topla v n p jan roberto giacobazzi francesco ranzato francesca scozzari make abstract interpret complet journal acm jacm v n p march