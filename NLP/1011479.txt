t semant logic object calculi a main contribut paper formal character recurs object specif exist base denot untyp semant object calculu exist guarante shown employ pitt result relat properti domain semant use analys verifi abadi leino object logic also suggest extens exampl specif method may refer field also method object store achiev without compromis exist theorem inform logic predomain use intent order avoid commit particular syntax specif logic b describ introduct rule wrt object format therefor exist specif equival valid introduct rule result implicit definit specif neither guarante exist uniqu unless phi certain form domain theori provid suffici machineri guarante exist uniqu therefor work denot domain theoret semant put us posit precis account problem far author awar systemat denot analysi object logic carri first author partial support epsrc grant grr nuffield foundat grant nala usual phi monoton recurs defin monoton strong condit object specif yet although success role model lcf logic comput function logic function paradigm outlin paper follow firstli denot semant function imper untyp object calculu given top notion specif inspir abadi leino logic defin result object domain prove exist specif mild assumpt employ andi pitt machineri relat properti domain exist theorem interest right also appli ffl prove sound object format rule in untyp way type encod specif ffl exemplifi via counterexampl certain specif exist suggest extens exist program logic introduc method invari logic higher order store moreov propos techniqu expect applic variou objectori languag program logic basic idea date back draft abstract publish denot model object calculu section describ simpl denot semant function imper object calculi within categori predom predomain partial continu function let denot partial continu function space predomain fa denot function f appli undefin wherea fa denot defined preliminari specifi recurs type need interpret object calculi often employ record type format follow sens let l count abl set label predomain type record entri label l defin follow l set total function l a easili seen recl local continu functor predom record label l correspond entri jg notic recl a alway nonempti contain element h i definit updat and extens oper record defin tabl page select label l record r recl a short ra defin yield fa a function object calculu let us first recal syntax function object calculu sake simplic function case distinguish field method updat f set method name field name respect object creation method call method updat again simplic method addit argu ment real restrict argument encod field let bval denot flat predomain basic valu like number boolean function object calculu natur find interpret within recurs specifi predomain nonempti record type alway nonempti choos bval empti get recurs type consid variant object calculu without field get simpl recurs type strongli remind one callbyvalu lambda calculu given type equat ll differ essenti object partial continu function object object whole record such object oo messag result send messag object o given omo understood diverg occur label record o make sens conceiv method partial continu function o ie strict function om defin argument defin well sake simplic paper use last domain equat interpret function object calculu fit convent calculu distinguish method field updat write aae interpret object express environ ae var interpret defin structur recurs object express via follow claus imper object calculu recal syntax imper untyp object calculu follow distinguish field method object creation field select field updat method call method updat clonea shallow copi j letxa b local def imper calculu find interpret within follow slightli complic system recurs type loc countabl set locat consid predomain notat come handi later section write st val rec loc rec f val obviou project val ststval val oe project first compon note distinguish howev object logic differ tabl definit record updat extens notic definit st rec loc ob faith reflect idea state assign object finit set locat think model state record also employ model eg simpl imper languag basic valu store locat besid conceptu adequaci technic advantag model rec loc n countabl flat predomain wherea tradit choic locn uncount highli nonflat definit given environ ae object express interpret stlocthetast defin tabl page note write of om instead of resp reduc syntact clutter one distinguish method field ignor basic valu abadi cardelli system mutual recurs type definit simplifi follow fact field method distinguish impli method overrid allow notic equival ob defin singl recurs equat which obvious obtain recm oo simpli replac locthetarec loc ob right hand side variat la abadi cardelli notic denot semant present quit accord oper semant imper object calculu given book abadi cardelli pp impli follow domain equat method closur save store mean object express environ ae val var function type stvalthetast type stlocthetast leav exercis inclin reader give semant equat object calculu accord domain equat interpret adequ wrt oper semant object specif identifi mean function imper resp object calculu within recurs defin predomain loc theta st posit use logic predomain reason object end one might find use identifi special purpos calculu reason object find mean translat logic predomain howev embark project rather discuss shape predic express interest properti object first notion specif consid function case first order understand specif object be possibl definit could follow definit let popo monoton othetao mm data induc monoton oper defin po bm stand result specif tm repres transit specif method m final specifi remain properti ob ject ie field write inva greatest fixpoint phi a eg hoar logic provid sort use macrolanguag reason partial function state fresh locat domain oe fresh locat domain oe let xa bae tabl denot semant imper object calculu postfixpoint phi a everi oi satisfi predic whenev omo defin satisfi bm i relat via tm particular hold greatest fixpoint inva phi a given union post fixpoint phi a thu order prove one simpli exhibit predic p notion invari specif seem quit accord coalgebra view objectori world and therefor probabl quit use ful howev seem limit exemplifi follow exampl exampl consid object express j mxxm oper intuit tell us am diverg and therefor would desir prove employ appropri notion invari come one mind immedi invari fals s coinduct help prove object sinc one find predic p canon choic p noth achiev abadi leino introduc sort hoar logic variant imper object calculu allow one prove diverg am quit easili sake simplic first discuss follow adapt account pure function case function object specif notion specif function object sug gest exist specif discuss section definit everi po po pomm everi predic so provid uniqu properti call specif induc a b differ inva sinc one requir method mm condit s omo hold implicitli recurs specifi even b depend s exampl illustr power new notion employ specif satisfi ie s omo show am cours os follow omo thu remain show which howev easili seen case diverg previou consider imper object specif imper set correspond notion specif obtain analog function case yet account underli store the differ im plement o again exist specif discuss section definit predic famili predic resp pval theta st mm st theta val theta st mm let predic loc theta st provid uniqu properti predic loc theta st provid uniqu properti section becom clear use restrict attent transit specif refer flat part store higherord part store ie method closur exampl assum object specif suppos express follow invari field f alway posit natur number defin accordingli howev despit indisput use problem specif obviou reason exist right hand side equival characteris contain posit neg occurr speca though specif use intrins exist verifi instead valid assert program defin wrt deriv correct assert render valu sound theorem somewhat mysteri if dubiou exist object specif section identifi mild assumpt guarante exist uniqu specif introduc previou section function object specif contrast function imper kernel languag object calculu implicitli presuppos recurs type like o thu appear necessari employ induct principl recurs type involv order verifi pro gram recal fairli concret term induct principl use establish exist specif fairli mild condit wellknown work freyd pitt earli nineti know bifre solut domain equat characteris requir id least fixpoint case f x defin explicitli endofunct oo given or equival readabl form e oo ao mm f immedi p id hold admiss predic poo evid p ep ffie fixpoint induct principl use directli verifi properti object exampl let mxxm use fixpoint induct one prove am consid admiss predic oo obvious am equival p id thu fixpoint induct suffic show suppos evid p e ie eomeo p ffie last equal induct hypothesi p e fixpoint induct principl employ prove uniqu exist specif rather mild assumpt exampl pcf base finit type hierarchi base type n simpl imper languag hoar calculu first introduc base rec loc valrec loc val definit flat predomain let l a complet lattic scottclos ie admiss downwardclos subset thetaa order let flat predomain xy l a a set obvious nonempti scottclos subset domain aa follow theorem use line argument loccit theorem given local continu bifunctor pre domain f predomain f a a predomain monoton phi l a op theta al a xy uniqu l a proof let al a monoton satisfi condit y map al a op theta l a monoton endomap complet lattic l a op theta a thu knastertarski b phi fixpoint establish show fixpoint induct admiss predic p ef e e and therefor p id id ef e e follow viousli p induct step assum p e f y f gousli follow e y f thu thu conclud exist least one show uniqu suppos a admiss predic follow p ef e e fixpoint induct obvi ousli p assum p e f y induct hypothesi p id follow immedi id theorem exist theorem let l denot l o f y moreov let ll omm famili id xy l xy l scottclos exist uniqu l satisfi proof consid predic scottclos due fact bm tm scottclos see also condit fact precondit implic scottopen clearli theta ll monoton obvious requir equival o thu show exist uniqu l guarante theorem provid show phi satisfi condit y theorem verifi next suppos e v id show f show f e eo phiy first show f e eoax f e eo v and therefor also f e eoax due assumpt next let mm therefor induct hypothesi assumpt moreov obtain assumpt eomeo v omeo sinc impli x v x v impli f e eomo imper object specif recal section imper object calculu find denot interpret within recurs defin predomain st f st st st latter defin rec loc rec f valthetarec locthetastvalthetast next prove variant theorem imper object calculu theorem predic famili predi cate resp st theta val theta st mm ii iii predic tm scottclos last argument monoton second argument exist uniqu l loc st proof instanti theorem f st f loc st guarante exist uniqu fixpoint phi provid verifi phi satisfi condit y theorem note phiy x scottclos are due condit iii fact precondit implic scottopen also subsequ use help recal f st e eoe oe st a f st e b f st e show phi satisfi condit y suppos e v id st xx show f st purpos suppos show h f st e eoei phiy get ax oe thu i get ie first part conjunct second part suppos b f st e eoem oe know valu vval store oe st show f st e eom follow eoe thu get thu follow bm xoem ie bm xhv oe ii follow therefor follow second part conjunct h oei phiy x ensur oem eoe follow eoe eoe there fore assumpt iii follow ie prove certain condit specif realli exist condit iii theorem awkward prove simplifi method specif refer flat part store corollari given predic famili predi cate resp ii exist uniqu l loc st proof appli corollari remain show condit iii loccit hold follow simpli fact st val flat predomain sound abadi leino logic de notat theorem object creation rule abadi leino logic correct wrt semant proof object specif read follow where again field specif b j result specif method j j transit specif j interpret predic denot follow theorem give rise uniqu predic definit serv denot interpret s import abadi leino logic transit specif j refer flat part store otherwis exist could guarante object format rule loccit say newli creat object specifi actual memori alloc absenc side effect ignor side effect issu creation correct rule semant follow simpli definit specif spec rel straightforward devis denot semant whole logic abadi leino prove correct calculu wrt denot semant proof easier one present possibl extens abadi leino logic deal object specif denot yield concis explan abadi leino logic also suggest extens invari contrast abadi leino predic bm may contain recurs occurr specif it self field requir fulfil specif ambient object one need recurs a result method requir contain or itself object fulfil specif ambient ob ject one need recurs bm leino give variant logic allow recurs object descript requir method declar advanc present approach even allow more definit specif s may allow bm refer self refer express whole specif invari set requir method invoc preserv specif self object mean specif spec describ denot properti object certain point program like abadi leino kind invari seen definit class specif object calculu method updat gener present approach allow one deal method updat limit way consid follow exampl exampl sensibl requir presenc method updat method alter anoth method ie method n becom less equal defin execut less sinc deal partial correct formal translat follow transit predic definit satisfi condit iii theorem sinc e v id eoen w oe n transit oen w eoen w oe n w eoe n follow form transit specif exist theorem appli remain clarifi specif gener form need exist demonstr counterexampl next section non exist specif show particular object specif exist prove follow auxiliari lemma deal transit specif may also refer non flat part store ie method closur lemma let locthetastthetalocthetastvalthetast locat oe state satisfi proof follow and therefor ie oe s thu y a oe oem give exampl nonexist object specifica tion exhibit transit specif tm locat store oe exist locthetast satisfi specif restrict assumpt theorem tm must refer flat part store ie specif past futur behaviour method made must necessarili violat also condit iii theorem cannot hold exampl consid follow object specif note admiss let a oe h denot properti specif reformul ie condit lemma hold a oe one easili verifi hold fals contradict lemma natur counterexampl expect semant model logic object calculi use hoar tripl like tent one suggest conclus shown denot approach program logic object calculi lead better understand implicit recurs object specif reason principl sinc notion specif encod object introduct rule logic sound rule equival exist speci ficat guarante exist one care reason nonflat method part store possibl deal other similar object calculi logic denot way analysi languag fruit quest natur counterexampl comparison classbas languag attempt recurs method program object calculu without explicit recurs due recurs higherord definit underli store particular instanc recurs store gener variant allow unrestrict execut code store memori rather liber usag higherord store need model differ domain equat thu need differ treatment altogeth result analog paper expect hard establish paper use classic logic meta logic commit particular object logic spatial separ logic prospect candid object logic simplifi handl alias remain seen whether predic logic pose problem present approach issu tackl includ sound proof abadi leino logic possibl extend invari reason principl higherord store develop logic type semant object calculu with subtyp includ method paramet acknowledg thank cristiano calcagno peter ohearn discuss recurs store relat matter r theori object logic objectori pro gram proof theori sequenti version pool logic object garbag program logic modular specif verif objectori program recurs object type logic objectori program local reason program alter data structur relat properti domain logic foundat type objectori languag object class algollik lan guag logic recurs object logic recurs object abstract class base vs object base denot com parison hoarecalculu verifi java realiz oclconstrain design model tr inherit smalltalk denot definit two semant model objectori languag reason java class object class algollik languag compon softwar theori object modular specif verif objectori program recurs object type logic objectori program hoar calculu verifi java realiz oclconstrain design model semant logic object calculi classbas versu objectbas logic objectori program wpcalculu oo garbag program logic logic recurs object logic foundat type objectori languag local reason program alter data structur introduct specif logic denot semant inherit ctr bernhard reu jan schwinghamm denot semant program logic object mathemat structur comput scienc v n p april