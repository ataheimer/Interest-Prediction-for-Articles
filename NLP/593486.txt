t effect data distribut parallel mine associ a associ rule mine import new problem data mine crucial applic decis support market strategi propos effici parallel algorithm mine associ rule distribut sharenoth parallel system effici attribut incorpor two power candid set prune techniqu two techniqu distribut global prune sensit two data distribut characterist data skew workload balanc prune effect skew balanc high implement fpm ibm sp parallel system perform studi show fpm outperform cd consist parallel version repres apriori algorithm agraw srikant also result valid observ effect two prune techniqu respect data distribut characterist furthermor show fpm nice scalabl parallel tune differ busi applic b introduct associ rule discoveri attract lot attent research busi commun associ rule rule impli certain associ relationship among set object such occur togeth one impli other databas intuit mean associ set item transact databas contain x tend contain classic exampl custom purchas tire automobil accessori depart store also automot servic carri out exampl typic associ basket databas sound like common sens knowledg howev could lot associ among data may abl deduc common knowledg therefor effici autom techniqu discov type rule import area research data mine applic associ rule mine rang decis support product market consum behavior predict previou studi examin effici mine associ rule mani differ angl influenti associ rule mine algorithm apriori develop rule mine larg transact databas scope studi also extend effici mine sequenti pattern gener associ rule multiplelevel associ rule quantit associ rule constraint associ rule etc although studi sequenti data mine techniqu algorithm parallel mine associ rule also propos develop parallel system mine associ rule uniqu import databas data warehous use often store huge amount data data mine databas requir substanti process power parallel system possibl solut observ motiv us studi effici parallel algorithm mine associ rule larg databas work studi problem parallel system distribut sharenoth memori ibm sp model databas partit distribut across local disk processor processor commun via fast network well studi major cost mine associ rule comput set larg itemset ie frequent occur set item see section databas itemset a set item larg percentag transact contain item greater given threshold repres parallel algorithm mine associ rule cd algorithm count distribut design sharenoth parallel system extend directli basic techniqu aprori parallel system propos algorithm fpm fast parallel mine follow distinct featur comparison cd fpm explor import properti local larg itemset those larg respect partit processor global larg itemset those larg respect entir databas develop two power prune techniqu distribut prune global prune reduc number candid set individu processor sinc number candid set domin paramet comput cost substanti smaller candid set fpm perform much better cd anoth contribut work discoveri effect two aforement prune techniqu henc perform parallel mine depend data distribut characterist databas partit captur distribut characterist two factor data skew workload balanc two factor orthogon properti intuit partit databas high data skew global larg itemset local larg partit hand partit databas high workload balanc processor similar number local larg itemset partit more precis definit skew workload balanc given section defin metric measur data skew workload balanc found distribut global prune super perform best case high data skew high workload balanc combin high balanc moder skew second best case hand high skew moder balanc combin provid moder improv cd combin low skew low balanc worst case margin improv found implement fpm ibm sp parallel machin processor extens perform studi carri out result confirm observ relationship prune effect data distribut rest paper organ follow section overview parallel mine associ rule techniqu distribut global prune togeth fpm algorithm describ section section also investig relationship effect prune two data distribut characterist data skew workload balanc section defin metric measur data skew workload balanc data partit section report result extens perform studi section discuss issu includ possibl extens fpm enhanc scalabl section conclus parallel mine associ rule sequenti algorithm mine associ rule set item let databas transact transact consist set item given itemset x transact contain x x associ rule implic form x associ rule hold confid c probabl transact contain x also contain c associ rule x support probabl transact contain x s task mine associ rule find associ rule whose support larger minimum support threshold whose confid larger minimum confid threshold itemset x support percentag transact contain x support count denot x sup number transact contain x itemset x larg or precis frequent occur support less minimum support threshold itemset size k call kitemset shown problem mine associ rule reduc two subproblem find larg itemset given minimum support threshold gener associ rule larg itemset found sinc domin overal cost mine associ rule research focus develop effici method solv first subproblem interest serial algorithm apriori propos comput larg itemset mine associ rule transact databas outlin follow larg itemset comput iter iter apriori scan databas find larg itemset size kth iter apriori creat set candid set c k appli candid set gener function apriori gen l kgamma l kgamma set larg itemset found k gamma st iter apriori gen gener kitemset candid whose everi itemset subset l kgamma count distribut algorithm parallel mine cd count distribut parallel version apriori one earliest propos repres parallel algorithm mine associ rule describ briefli step comparison purpos databas partit distribut across n processor program fragment cd processor kth iter outlin figur for conveni use x supi repres local support count itemset x partit step everi processor comput candid set c k appli aprior gen function l kgamma set larg itemset found k gamma th iter step local support count support candid c k found step local support count exchang processor get global support count support d global larg itemset larg respect d l k comput independ processor cd repeat step candid found implement cd ibm sp use mpi messag pass interfac scan partit find local support count x supi processor get global support count x sup figur count distribut algorithm prune techniqu fpm algorithm distribut prune import observ interest properti relat larg itemset parallel environ sinc properti may substanti reduc number candid set the preliminari form result section develop extend here first import relationship larg itemset processor databas everi global larg itemset must local larg processor itemset x global larg local larg processor p x call gllarg processor p set gllarg itemset processor form basi processor gener candid set second gllarg itemset processor follow monoton subset relationship properti itemset gllarg processor p subset also gllarg p combin two properti follow result lemma itemset x global larg exist processor n x subset gllarg processor p use gl denot set gllarg itemset processor p gl ik denot set gllarg kitemset processor p follow lemma x l k exist processor p gllarg processor p ie belong gl ikgamma straightforward adapt apriori set candid set kth iter denot ca k stand sizek candid set apriori would gener appli apriori gen function l kgamma is processor p let cg ik set candid set gener appli apriori gen gl ikgamma ie cg stand candid set gener gllarg itemset henc cg ik gener gl ikgamma sinc gl ikgamma l kgamma cg ik subset ca k follow use cg k denot set n theorem everi k set larg kitemset l k subset cg result stronger result state global larg itemset local larg partit state subset must local larg togeth partit proof let follow lemma exist processor n subset x gllarg processor p henc x cg ik therefor indic cg k subset ca k could much smaller ca k taken set candid set sizek larg itemset effect set candid ca k prune cg k call techniqu distribut prune result form basi reduct set candid set algorithm fpm first set candid set cg ik gener local processor p kth iter exchang support count gllarg itemset gl ik cg ik found end iter base gl ik candid set processor p st iter gener accord theorem accord perform studi number candid set gener distribut prune substanti reduc gener cd exampl illustr effect reduct candid set use distribut prune exampl assum processor parallel system databas partit suppos set larg itemset comput first iter l g hg a b c local larg processor p b c local larg processor p e f g h local larg processor p therefor gl g hg base theorem set size candid set processor p cg fabbcacg similarli cg egehfgfhghg henc set candid set larg itemset cg candid howev apriori gen appli l set candid set ca would candid show effect appli distribut prune reduc candid set global prune result count exchang local support count x supi processor also avail everi processor inform anoth power prune techniqu call global prune develop let x candid kitemset partit x supi supi ae x therefor local support count x x supi bound valu minfi g sinc global support count x x sup sum local support count processor valu upper bound x sup x maxsup minsup theta jdj x prune away techniqu call global prune note global prune requir addit inform except local support count result count exchang previou iter tabl give exampl show global prune prune away candid cannot prune distribut prune suppos global support count threshold local support count threshold local support processor local support processor local support processor global support gllarg processor theta theta gllarg processor theta theta gllarg processor theta theta theta theta tabl high data skew high workload balanc case processor distribut prune cannot prune away cd c gllarg processor wherea global prune prune away cd cd also prune ef would surviv global prune exampl clear global prune effect distribut prune ie prune away distribut prune prune away global prune three prune techniqu one apriori gen distribut global prune increas prune power latter one subsum previou one fast parallel mine algorithm fpm present fpm algorithm section enhanc cd simpl support count exchang scheme cd retain fpm main differ incorpor distribut global prune fpm reduc candid set size first iter fpm cd processor scan partit find local support count size itemset use one round count exchang comput global support count end st iter addit l processor also find gllarg itemset gl i kth iter fpm k program fragment execut processor i n describ figur comput candid set cg distribut prune prune candid cg k global prune scan partit find local support count x supi remain candid processor get global support count x sup return figur fpm algorithm similar cd fpm also implement collect commun oper mpi sp order compar effect distribut global prune also implement variant fng fpm global prune fpm fng perform global prune ie procedur figur except step remov data skew workload balanc databas partit two data distribut characterist data skew workload balanc orthogon effect prune henc perform fpm intuit data skew partit databas high support larg itemset cluster partit low support larg itemset distribut evenli across processor tabl clear itemset high skew partit high skew even though support larg itemset cluster processor cluster differ larg itemset may distribut evenli across processor concentr them first case cluster larg itemset distribut evenli among processor henc processor would similar number local larg itemset characteris case high workload balanc second case cluster would concentr processor henc processor would much local larg itemset other low workload balanc case exampl itemset tabl high skew also good workload balanc a b local larg processor c processor wherea e f processor follow discuss prune techniqu high data skew would increas chanc candid set prune howev factor workload anoth critic factor follow see given good data skew distribut cluster amount processor even prune effect would reduc significantli and aggrav problem more work comput larg itemset would concentr processor troublesom issu parallel comput exampl explain abov tabl case high data skew high workload balanc support itemset distribut mostli one partit henc skew high hand everi partit number local larg itemset therefor workload balanc also high case cd gener candid second iter wherea distribut prune gener three candid ab cd ef show prune good effect distribut local support processor local support processor local support processor global support gllarg processor gllarg processor theta theta theta theta theta theta gllarg processor theta theta theta theta tabl high data skew low workload balanc case tabl exampl high data skew low workload balanc threshold tabl ie global support threshold local support threshold processor support count distribut item tabl except item a b c local larg togeth processor instead distribut processor lower workload balanc case distribut prune gener size candid name ab ac ad bc bd cd ef cd still candid thu distribut prune remain effect good high workload balanc case tabl local support processor local support processor local support processor global support gllarg processor theta gllarg processor theta gllarg processor theta tabl low data skew high workload balanc case tabl exampl low data skew high workload balanc support count item a b c d e f almost equal distribut processor henc data skew low hand workload balanc high number local larg itemset processor almost same case cd distribut prune gener candid set henc restrict prune distribut prune advantag cd case howev global prune prune away candid ac ae ce word fpm still improv cd patholog case low skew high balanc follow exampl observ global prune effect distribut prune perform signific candid reduct even moder data skew low workload balanc case note low skew low balanc cannot occur togeth also accord analysi distribut prune prune away almost n n number partit size candid gener cd high data skew high workload balanc case summari distribut prune effect databas partit high skew high balanc hand worst case high skew low balanc high balanc low skew effect distribut prune degrad level cd howev global prune may still perform better cd strengthen studi investig problem defin metric measur skew balanc data skew metric develop skew metric base well establish notion entropi given random variabl entropi measur even uneven probabl distribut valu databas partit n processor valu px xsup regard probabl occurr itemset x partit n entropi logp x i measur distribut local support x partit exampl x skew complet singl partit k k n ie occur k px k valu minim case hand x evenli distribut among partit px valu logn maxim case therefor follow metric use measur skew data partit tabl local count processor local count processor high local count processor data skew sx high tsd workload balanc tbd tabl local count processor local count processor high local count processor data skew sx low tsd workload balanc tbd tabl local count processor local count processor low local count processor data skew sx high tsd workload balanc tbd tabl data skew workload balanc given databas partit n skew sx itemset defin logn skew sx follow properti skew lowest valu x distribut evenli partit px skew highest valu x occur one partit case follow properti entropi sx increas respect skew x henc suitabl metric skew individu itemset tabl show skew larg itemset tabl addit measur skew itemset also need metric measur skew databas partit defin skew databas partit weight sum skew larg itemset word skew partit measur total skew larg itemset given databas partit n skew tsd partit defin xl sx theta wx ls set larg itemset ysup weight support x larg itemset ls sx skew x tsd properti similar sx skew itemset minim valu skew itemset maxim valu case tabl skew tsd partit three situat comput for illustr purpos comput tsd respect skew size larg itemset note ignor small itemset comput skew partit sinc purpos task investig effect data skew candid set prune involv larg itemset restrict would fact make metric relev candid set prune workload balanc metric workload balanc measur distribut support cluster larg itemset partit processor base definit wx definit px i definit defin xl wx theta px i itemset workload partit l set larg itemset intuit workload w partit ratio total support larg itemset partit note partit high workload balanc w partit hand distribut w partit uneven workload balanc low point out workload balanc import bear prune perform parallel mine parallel metric data skew also defin metric workload balanc factor measur workload balanc partit base also entropi definit databas partit databas d workload balanc factor tbd partit given logn metric tbd follow properti workload across processor same workload concentr one processor case tabl workload w first last case tabl high balanc valu almost equal second case tabl workload processor shift processor henc creat unbal case valu tbd thu reduc indic moder workload balanc data skew metric workload balanc factor independ theoret one could valu rang howev combin valu admiss first let us consid boundari case theorem let partit databas d admiss valu tbd rang admiss valu tsd rang proof definit tbd need prove boundari case admiss impli larg itemset x therefor larg itemset larg one one processor larg itemset larg processor i n hand processor number larg itemset w larg itemset x impli w n henc follow first result theorem admiss therefor first part prove furthermor exist partit impli larg itemset local larg henc shown theorem possibl combin admiss gener admiss combin subset unit squar one figur alway contain two segment figur figur defin metric studi characterist valid observ relationship data skew workload balanc candid prune effect perform studi perform studi order confirm analysi propos fpm effici algorithm mine associ parallel system implement algorithm ibm sp carri substanti perform evalu comparison follow three goal studi verifi fpm faster repres algorithm cd confirm major perform gain two prune techniqu confirm observ data skew workload balanc two critic factor perform fpm demonstr fpm good parallel scalabl parallel algorithm implement fpm variant fng cd ibm sp parallel system use processor mhz mb main memori run aix oper system commun figur admiss combin skewnesss balanceb processor high perform switch aggreg peak bandwidth mbp latenc microsecond data alloc local disk processor databas partit node mb size order abl control experi test differ data distribut scenario mani work mine associ rule adopt standard techniqu introduc gener databas enhanc techniqu gener databas partit introduc paramet control skew workload balanc tabl list paramet use synthet databas detail data gener techniqu appendix number transact partit averag size transact averag size maxim potenti larg itemset l number maxim potenti larg itemset n number item partit skew n number partit tabl synthet databas paramet rel perform order compar perform fmp fng cd databas twenti data set gener data set gener skew balanc factor list tabl number partit case size partit mb name partit denot dxtyizsrbl x number transact partit averag size transact z averag size itemset two paramet sr bl two import paramet use control skew workload balanc data gener the bl valu list separ tabl tabl also comput measur skew tsd balanc factor tbd partit gener import note measur skew workload close valu control paramet ie valu b good approxim valu tsd tbd addit cover wide rang skew balanac thu synthes data partit good simul data partit variou distribut characterist believ technic valuabl even real data may gener enough cover possibl distribut name tabl attribut synthet databas ran fpm fng cd databas partit tabl minimum support threshold improv fpm fng cd respons time record tabl result encourag fpm fng consist faster cd case follow analyz perform gain fpm fng three aspect improv workload balanc high skew vari high moder improv skew high workload balanc vari high moder desir undesir combin skew workload balanc valu respons time fpmcd fngcd tabl perform improv fpm fng cd figur rel perform fpm fng cd partit differ skew high balanc valu perform much better cd skew rel high s respons timesec rel performancedktisbn minsup cd figur rel perform databas high balanc differ skew hand fpm outperform cd significantli even skew moder rang b result tabl show fpm much faster cd demonstr fpm outperform cd consist given high workload balanc least moder skew respons timesec rel performancedktisbn minsup cd figur rel perform databas high skew differ workload balanc figur rel perform given high skew differ workload balanc fpm fng perform much better cd workload balanc rel high b howev improv rang moder balanc b margin confirm observ workload balanc essenti requir show high skew accompani high workload balanc effect high skew moder balanc may good high balanc moder skew figur vari skew balanc togeth low valu rang high valu rang respons timesec skew balancesb rel performancedktisbn minsup cd figur rel perform databas skew balanc chang trend show improv fpm cd increas faster valu approach high valu rang combin observ three case togeth result tabl divid area cover admiss combin skew balanc experi four perform region shown figur region favor region balanc high skew vari high moder fpm gener faster cd region b workload balanc valu degrad moder skew remain high case gain fpm cd around region cover combin low workload balanc gain fpm fall moder rang region contain undesir combin fpm margin perform gain figur provid us anoth view understand candid prune effect show ratio number candid set fpm fng cd experi figur reduct ratio run databas dktisrb first graph skew high distribut prune reduct candid set compar cd global prune reduct skew low distribut prune reduct global prune reduct confirm observ effect high balanc combin high moder skew scalabl parallel speedup scaleup order studi effici fpm parallel algorithm investig speedup scaleup cd speedup reduct respons time vs number processor given total size databas remain unchang processor use faster comput be ideal speedup linear function number processor scaleup perform vs number processor databas size scale proport number proccesor algorithm high effici low overhead perform would maintain uniform number processor size databas scale proport speedup experi execut algorithm fix size databas variou number processor figur perform region fpmcd admiss combin skew workload number candid set prune effectdktisbn minsup apriori_genno prune distribut pruningapriori_gen global pruningapriori_gen figur prune effect databas figur respons timesec number processor cd fpm number processor rel speedupdktisb cd figur speedup databas partit select databas high skew balanc present perform studi databas list tabl total size gb first divid partit subsequ combin partit form databas zero partit figur execut time speedup fpm fng cd databas speedup also shown tabl fng linear speedup fpm achiev remark superlinear speedup reason behind fpm superlinear speedup increas skew number partit increas scaleup experi databas size number processor scale proport number processor involv increas size databas increas correspondingli mb gb databas partit accord number processor everi partit maintain size mb perform experi base databas dktisb ie databas gener paramet figur show result experi surprisingli fpm fng maintain perform respons time databas speedup fpm speedup fng speedup cd tabl speedup five databas differ distribut characterist fact gone databas scale up prime reason increas pru capabl number partit increas discuss restrict search larg itemset small set candid essenti perform mine associ rule prune techniqu propos theoret interest effect parallel case serial case distribut global prune provid signific amount prune power particular data distribut favor situat ie workload balanc high skew least moder level import studi partit techniqu deliv good data distribut random approach gener deliv partit good balanc howev skew would difficult guarante togeth good workload balanc cluster techniqu kmean algorithm give good skew remain open problem modifi cluster techniqu gener partit good skew also good workload balanc conclus parallel algorithm fpm mine associ rule propos perform studi carri ibm sp sharednoth memori parallel system show fpm consist outperform cd also nice scalabl term speedup scaleup gain perform fpm due mainli prune techniqu incorpor discov effect prune techniqu depend highli data distribut characterist measur two data skew workload balanc analysi experi result show prune techniqu sensit workload balanc though good skew also import posit effect techniqu effect best case high balanc high skew combin high balanc moder skew second best case worst case low balanc low skew fpm deliv perform close cd sinc mine associ mani interest applic import futur work would includ fine tune propos parallel techniqu real busi case r mine associ rule set item larg databas fast algorithm mine associ rule parallel mine associ rule design dynam itemset count implic rule market basket data element inform theori fast distribut algorithm mine associ rule mainten discov associ rule larg databas increment updat techniqu advanc knowledg discoveri data mine discoveri multiplelevel associ rule larg databas scalabl parallel data mine associ rule scalabl powerparallel system method classif analysi multivari observ messag pass interfac forum exploratori mine prune optim constraint associ rule effect hashbas algorithm mine associ rule effici parallel data mine associ rule effici algorithm mine associ rule larg databas databas achiev opportun st centuri mine gener associ rule mine sequenti pattern gener perform improv mine quantit associ rule larg relat tabl hash base parallel algorithm mine associ rule parallel data mine associ rule sharedmemori multiprocessor tr ctr fran coenen paul leng partit strategi distribut associ rule mine knowledg engin review v n p march vipin kumar moham zaki high perform data mine tutori pm tutori note sixth acm sigkdd intern confer knowledg discoveri data mine p august boston massachusett unit state