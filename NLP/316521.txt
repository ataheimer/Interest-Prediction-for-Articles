t modifi spars choleski factor a given spars symmetr posit definit matrix bf aasf t associ spars choleski factor bf ldlsf t bf llsf t develop spars techniqu obtain new factor associ either ad column bf a delet column bf a techniqu base analysi manipul underli graph structur idea gill et al math comp pp modifi dens choleski factor show method extend gener case arbitrari spars symmetr posit definit matrix modifi method optim sens take time proport number nonzero entri bf l bf d chang b introduct paper present method updat downdat spars choleski factor matrix aa n precis evalu choleski factor aa either oe correspond updat w arbitrari oe gamma correspond downdat w column a aa aa must symmetr posit definit techniqu develop matrix aa extend determin effect choleski factor gener symmetr posit definit matrix symmetr chang form preserv posit definit method optim sens take time proport number nonzero entri l chang mani applic techniqu present paper linear program dual activ set algorithm lp dasa matrix correspond basic variabl current basi linear program success iter bring variabl basi lead chang form aa applic area techniqu develop paper applic includ leastsquar problem statist analysi electr circuit structur mechan sensit analysi linear program boundari condit chang partial differenti equat domain decomposit method boundari element method discuss applic area other see section introduc notat introduct spars matrix techniqu see x discuss structur nonzero element choleski factor aa x discuss structur associ choleski factor aa symbol updat downdat method provid framework spars version method c gill golub murray saunder modifi dens choleski factor discuss spars algorithm x section present gener algorithm modifi spars choleski factor spars symmetr posit definit matrix implement detail modif algorithm associ aa summar x result numer experi larg optim problem netlib present x section conclud discuss futur work notat throughout paper matric capit bold letter like l vector lower case bold letter like x v set multiset calligraph style like a l p scalar either lower case greek letter ital style like oe k m given locat nonzero element aa perform symbol factor thi terminolog introduc georg liu matrix predict locat nonzero element choleski factor l actual predict nonzero may zero due numer cancel factor process statement l ij mean l ij symbol nonzero diagon l alway nonzero sinc matric factor posit definit see p nonzero pattern column j l denot l denot collect pattern similarli j denot nonzero pattern column j a collect pattern elimin tree defin term parent map see give row index associ given node j first nonzero element column j l beneath diagon element denot smallest element i convent min empti set zero note j j except case diagon element column j nonzero element parent map children multifunct is children node k set defin ancestor node j denot pj set success parent power map defin usual way ident ifold composit itself sequenc node j j form pk call path j associ tree root collect path lead root form elimin tree set tree elimin forest typic singl tree whose root m howev column j aa one nonzero element diagon element j root separ tree number element or size set x denot jx j jaj jlj denot sum size set contain defin direct graph gm matrix nonzero pattern vertex edg set vertex set direct edg set symbol factor approach gener pattern set l call symbol factor matrix form aa given algorithm see algorithm symbol factor aa min k j ka end algorithm basic say pattern column j l express union pattern column l whose parent j pattern column whose first nonzero element j elimin tree connect child parent easili form symbol factor algorithm done ojlj asymptot complex notat defin write exist posit constant c n fn cgn n n observ pattern parent node j contain entri pattern column j except j is proceed induct k ancestor j lead follow relat l j path pj first part proposit proof given proof differ slightli one includ sinc proof techniqu exploit later proposit j l j pj furthermor k j proof obvious given element l j j sinc see follow relat hold suppos hold integ l let k denot l j fact k i impli henc either hold l replac l sinc violat l suffici larg conclud exist l consequ element l j contain pj ancestor k pj pk sinc alreadi shown l j pj proof complet see symbol factor aa obtain updat symbol factor aa use algorithm structur algorithm new pattern l j equal old pattern l j union entri aris new children pattern new column we put bar matrix set multiset denot valu updat downdat complet downdat easi set union comput cannot undon without knowledg entri enter set keep track inform store element l multiset rather set multiset associ column j form multipl mi j number children j contain row index pattern plu number column whose smallest entri j contain row index i equival definit undo set union subtract multipl defin oper involv multiset first x multiset consist pair i mi mi multipl associ i x set obtain remov multipl word multiset x associ base set x satisfi relat defin addit multiset x set follow way similarli subtract set multiset x defin multiset subtract x undo prior addit is multiset x set y contrast x y n y equal x x disjoint set algorithm perform symbol factor aa set union oper replac multiset addit algorithm ident algorithm except bookkeep associ multipl algorithm symbol factor aa use multiset c gamma j end k min end end conclud section result concern relat pattern aa pattern aa ww proposit let c pattern associ symmetr posit definit matric c respect neglect numer cancel c j j j impli l c j l c ld pattern associ choleski factor c respect proof shown edg i j contain graph choleski factor symmetr posit definit matrix c path j graph c intermedi vertex path min fi jg c j j j path associ graph c subset path associ graph d follow l c j ignor numer cancel edg graph aa subset edg graph aa ww proposit conclud edg graph associ choleski factor satisfi inclus result column vector w use updat aa ww chosen column fix matrix b fillreduc permut p found choleski factor pbb p spars exampl proposit choleski factor paa p paa ww p least spars pbb p modifi symbol factor let modifi version a again put bar matrix set multiset denot valu updat downdat complet updat obtain append column w right downdat obtain delet column w a henc oe either w last column updat oe gamma w column downdat sinc differ singl column follow proposit l j l j j updat l j l j downdat moreov multiset associ choleski factor either updat downdat matrix structur describ follow theorem theorem let k index associ first nonzero compon w updat pk pk l complement pk is l except k one new ancestor k downdat pk pk l is l except k one old ancestor k proof begin let us consid updat show element pk member pk well clearli k lie pk pk proceed induct suppos k need show complet induct pk induct step complet j l l proposit l l follow relat hold suppos hold integ p let q denot p l proposit l l l l l combin follow l l q l definit parent henc either p hold p replac p sinc violat p suffici larg conclud exist integ p l follow pk induct step complet pk pk suppos l pk c import recal k index first nonzero compon w vector appear updat observ l cannot equal k sinc l pk c k pk proof l l induct depth defin l children child loop algorithm skip either l l l l evalu sinc l k pattern associ w cannot ad l l henc l trivial now assum p l l whenev l pk c dl p let us suppos induct assumpt sinc l k pattern w ad l l consequ algorithm execut l l complet induct step consid downdat part theorem rearrang downdat relat aa henc downdat think updat version a consequ second part theorem follow directli first part symbol updat algorithm present algorithm evalu new pattern l associ updat base theorem set l j chang associ pk k index first nonzero compon w refer algorithm set march path j evalu chang induc addit column a order bookkeep four case consid case start new path need add pattern w l case c pk case c child j new old elimin tree sinc pattern l c may differ l c need add differ l j sinc j uniqu child path pk one node c satisfi condit also note theorem l henc node lead adjust l algorithm case case c child j new elimin tree old tree entir set l c ad l sinc includ l theorem henc c pk c equival c pk again sinc node path pk k one child path one node c satisfi condit lie path pk case case c child j old elimin tree new tree set l c subtract l sinc previous ad l fact impli c pk algorithm follow refer node c satisfi condit lost children case abov everi node c led adjust pattern locat path pk detail algorithm appear below simpli march path k root make adjust enumer abov algorithm symbol updat add new column w case first node path j case c old child j possibl chang els case c new child j lost child c place c lostchildqueu c case consid lost child j c lostchildqueu j end time taken algorithm given follow lemma lemma time execut algorithm bound constant time number entri associ pattern node new path pk is time ob proof algorithm simpli march path pk make adjust j proceed node j take time proport jl j j plu time taken process children j node visit child c twice sinc fall one two four case enumer a node c new child one node lost child anoth work proport jl c j jl c j account step c instead j time make adjust pattern bound constant time either jl j j jl j j sinc jl theorem proof complet practic reduc execut time algorithm skip node l is current node j lost children child c fall case l j updat skip execut time modifi algorithm one implement symbol downdat algorithm let us consid remov column w let k index first nonzero entri w symbol downdat algorithm analog symbol updat algorithm role pk pk interchang accord theorem instead ad entri l j subtract entri instead lost child queue new child queue instead walk path pk walk path pk pk algorithm symbol downdat remov column w case first node path j case c old child j possibl chang els case c lost child j new child c place c newchildqueu c case consid new child j c newchildqueu j end algorithm similar algorithm execut time obey follow estim lemma time execut algorithm bound constant time number entri associ pattern node old path pk is time again achiev practic speedup check whether l chang given node j pk time taken modifi algorithm numer factor add delet column a updat downdat symbol factor order determin locat choleski factor either new nonzero entri nonzero entri zero know locat nonzero entri updat numer valu entri first consid case l dens draw idea show method extend spars case dens matric algorithm implement numer updat downdat base method c dens matric summar approach start write posit account assumpt aa aa posit definit is sinc matric aa congruent sylvest law inertia see number posit neg zero eigenvalu eigenvalu one multipl correspond eigenvector orthogon v correspond eigenvector v sinc aa posit definit eigenvalu posit impli combin sequenc given rotat product denot g chosen e vector everi entri zero except first entri matrix lower hessenberg structur second sequenc given rotat product denot g chosen i lower triangular matrix denot g follow form ffi fl vector comput algorithm below diagon element g given g element diagon algorithm comput g dens case els find g zero first entri v end find g combin obtain g end algorithm algorithm below evalu new choleski factor form g explicitli take advantag special structur g product comput column column move right left practic l overwritten l algorithm comput end end algorithm observ multipli elimin l store product ld diagon matrix compon ffi absorb d fl adjust accordingli ffi algorithm elimin exploit simplif numer result report x sparsiti pattern v spars case spars nonzero pattern crucial sinc element g satisfi j conclud column l associ nonzero compon v enter comput l nonzero pattern v found use follow lemma lemma node reachabl given node k path direct graph gl coincid path pk proof pk singl element lemma hold proceed induct suppos lemma hold k jpkj j now pk element induct hypothesi node reachabl k path direct graph gl coincid path pk node reachabl one step k consist element l k proposit element l k contain path pk induct hypothesi node reachabl coincid pi pk node reachabl k consist fkg union node reachabl l k sinc node reachabl k contain pk hand p element l row p k column p k nonzero henc element pk reachabl k sinc node coincid node reachabl k path direct graph gl induct step complet theorem symbol downdat aa where w column a nonzero pattern equal path pk old elimin tree l proof let g theorem gilbert state nonzero pattern v set node reachabl node w path direct graph gl algorithm w l k henc element w reachabl k path length one node reachabl w subset node reachabl k convers sinc k w node reachabl k subset node reachabl w combin inclus node reachabl k w same lemma node reachabl k coincid path pk corollari symbol updat aa nonzero pattern equal path pk new elimin tree l k defin proof sinc view l choleski factor downdat henc appli theorem effect replac p p spars matric dens algorithm present start section write specif let us consid case correspond updat nonzero element lie along diagon intersect row pk column j pk k defin essenc extract submatrix correspond row column appli algorithm dens submatrix modifi submatrix l consist row column associ pk reinsert dens submatrix spars matrix l algebra level think process follow way p permut matrix properti column associ pk move first jpkj column multipl right matrix p diagon ident lower right corner dens upper left corner v element l correspond element l ij l pk c follow l c note gener algorithm columnori multipli given rotat comput algorithm obtain appli p left p right obtain l neither l l modifi correspond downdat discuss updat except pk replac pk role l j l j interchang summari spars updat downdat choleski factor accomplish first evalu nonzero entri contain path pk pk k defin appli dens algorithm vector symbol nonzero entri v updat entri l row column associ indic pk pk use algorithm follow result indic algorithm appli l specif structur proposit symbol downdat l lower triangular matrix dens profil is row integ proof row column column l correspond node path pk assum node relabel follow l consequ l let p smallest index p proof complet corollari symbol updat l lower triangular matrix dens profil is row integ proof follow immedi proposit replac pk pk consequ proposit corollari proposit skip index algorithm algorithm appli spars l oppos dens submatrix indic j take valu pk l j respect downdat take valu pk l j respect updat arbitrari symbol numer factor method develop comput modif choleski factor aa correspond addit delet column use determin effect choleski factor gener symmetr posit definit matrix symmetr chang form preserv posit definit briefli describ algorithm modifi gener case let j denot nonzero pattern lower triangular part m symbol factor obtain replac union k term algorithm set j chang l j algorithm given lead chang algorithm comput multipl multipl index l j becom loop involv k term algorithm replac singl statement precis have k min end entri remov ad symbol aa delet addit column a numer cancel ignor numer cancel entri ignor howev way entri drop m numer cancel taken account neither inclus may hold resolv problem use symbol modif scheme two step symbol updat phase new nonzero entri taken account follow separ downdat phase handl entri becom numer zero sinc modif step involv updat phase follow downdat phase attach in section overbar quantiti associ updat underbar quantiti associ downdat let w nonzero pattern w name g first phase entri w symbol ad j j w second symbol phase entri w symbol delet j w practic need introduc drop toler replac equal inequ t gener matrix analogu theorem follow theorem ff first index ff ff pff pff l pff c fi first index fi fi evalu modif symbol factor associ start first index ff ff ff march path pff make chang l j second phase start first index fi fi march path pfi make chang analogu algorithm gener case differ start index now ff addit set j n j pass jloop algorithm symbol updat phase gener matrix case first node path j case c old child j possibl chang els case c new child j lost child c place c lostchildqueu c case consid lost child j c lostchildqueu j end algorithm similarli analogu algorithm gener case differ start index now fi subtract set j n j pass jloop algorithm b symbol downdat phase gener matrix case first node path j case c old child j possibl chang els case c lost child j new child c place c newchildqueu c case consid new child j c newchildqueu j end algorithm b algorithm complet unchang gener case appli complet algorithm b know locat new nonzero entri choleski factor process submatrix associ row column pk k index first nonzero element w form aa gotten either ad delet column a assum numer cancel algorithm b skip add column sinc j similarli column remov a algorithm skip sinc j henc algorithm follow algorithm b appli matrix form aa algorithm take effect updat algorithm b take effect downdat thu approach present section arbitrari symmetr posit definit matrix gener earlier approach focu matric form aa implement issu section discuss implement issu context updat downdat matrix form aa similar discuss appli gener symmetr posit definit matrix assum column matrix product aa chosen among column fix matrix b updat downdat algorithm use comput modif choleski factor correspond addit delet column a choleski factor initi aa befor column ad delet often preced fill reduc permut p row column exampl could comput permut reduc fill bb sinc choleski factor aa least spars bb proposit regardless column chosen column b base number nonzero column choleski factor bb could alloc static storag structur alway contain choleski factor aa hand could lead wast space number nonzero choleski factor aa far less number nonzero choleski factor bb altern could store choleski factor current aa smaller space realloc storag updat downdat base chang nonzero pattern time initi choleski factor aa given see follow om l dens updat downdat proce first find new symbol factor requir path pk updat pk downdat use algorithm modifi skip constant time column j chang algorithm appli column path lower triangular solv system algorithm done time downdat ob updat remaind algorithm take time ojpkj downdat ojpkj updat spars form algorithm discuss x comput product downdat ob updat sinc l j l j updat follow asymptot time entir downdat updat symbol numer equal asymptot time algorithm much less om algorithm dens case experiment result develop matlab code experi algorithm present paper includ algorithm x gener symmetr posit definit matrix section present result numer experi larg spars optim problem netlib comput use experi model ultrasparc equip mb memori matlab version c experiment design select optim problem airlin schedul dfl constraint matrix b by nonzero matrix bb nonzero strictli lower triangular part choleski factor lb million nonzero with fillminim permut pb row b describ below requir billion floatingpoint oper second comput the lp dual activ set algorithm requir matrix howev note earlier upper bound number nonzero occur execut lp dasa high level fillin lb result highli irregular nonzero pattern b basi matrix correspond optim solut linear program problem column wrote set matlab script implement complet choleski updatedownd algorithm discuss x first found pb use trial matlab column multipl minimum degre order algorithm colmmd differ random permut row b took best permut found permut pb factor l thousand nonzero took million floatingpoint oper second comput use matlab chol follow method use lp dasa ad gamma diagon ensur posit definit use permut pb entir experi initi symbol factor took second algorithm matrix factor requir lp dasa use matlab spars matrix data structur sinc matlab remov explicit zero chang nonzero pattern singl entri caus matlab make new copi entir matrix would defeat asymptot perform algorithm instead columnori data structur use l l l consist three array length jl b j array length contain indic first entri column array length hold number nonzero column column alloc column hold mani nonzero correspond column lb without realloc start optim basi column ad one column time basi includ column remov one time obtain optim basi again total time work requir modifi factor second billion float point oper divid a second bookkeep keep track basi set b second symbol updat downdat algorithm c second solv d second remaind algorithm second algorithm algorithm clearli domin modif algorithm symbol updat downdat took littl time even though algorithm well suit implement matlab comparison use choleski factor solv linear system dens righthandsid b use column orient data structur l step took total second billion float point oper each solv take ojlj time note much higher time taken solv algorithm v w spars time taken entir updatedownd comput would much smaller code written compil languag solv one system dens right hand side use factor optim basi take second use columnori data structur second use matlab spars matrix l second fortran numer accuraci order measur error comput choleski factor evalu differ kaa comput choleski factor airlin schedul matrix x l million nonzero impract comput product updat obtain quick accur estim kek appli strategi present see p symbol statement algorithm estim norm invers matrix is use gradient accent approach comput local maximum follow problem l use multipl time follow algorithm copi data structur l matlab spars matrix algorithm estim norm matrix e ae current estim kek end algorithm improv accuraci norm estim use algorithm three time second third trial differ start vector x use describ observ algorithm make use product matrix e vector featur import context spars matric sinc e contain term impract comput product practic multipli vector airlin schedul matrix x valu kek initi step end theta gamma respect estim obtain use algorithm ident three step hand time comput kek initi step step second time three trial algorithm second respect exclud time construct matlab spars matrix l method quit accur problem updat downdat chang a norm e increas factor figur show estim valu kek comput everi step use algorithm norm matrix aa increas initi iter return iter henc product comput choleski factor agre product aa signific digit initi product agre signific digit modif a step norm estim algorithm figur estim norm error choleski factor altern permut method optim sens take time proport number nonzero entri l chang step howev optim respect fillin sinc assum singl initi permut subsequ permut fillreduc order bb might best order use basi matric simpl patholog exampl mbyn matrix b nonzero pattern column b uniqu pair integ set f mg case everi element bb nonzero nonzero pattern aa arbitrari matrix chang might advantag comput fillreduc order aa size factor grow too larg refactor new permut would requir found fillreduc permut pa optim basi again best trial colmmd result factor l thousand nonzero requir million float point oper comput significantli less number nonzero thousand float point oper million associ fill reduc permut bb also comput order aa step use colmmd onc comput number nonzero factor factor use permut although take second comput order symbol step nonzero l three differ permut figur nonzero l use three differ permut factor practic use random trial step figur depict nonzero count l three differ permut step fix permut pb result smooth curv start thousand peak million fix permut pa result number nonzero l start thousand rise quickli leav figur step peak million middl surpass pb step use permut p comput step s give errat line figur start thousand peak million middl result indic might advantag start fix permut pa use step refactor permut p comput step result new factor thousand nonzero near center figur howev basi includ column b case pb permut use summari present new method updat downdat factor spars symmetr posit definit matrix aa experiment result show method fast accur practic extens arbitrari spars symmetr posit definit matrix m discuss mention addit extens work would use make use supernod form factor use relat compress pattern l method use numer factor first basi matrix cours factor would copi simpl columnori data structur keep supernod form potenti reduc time taken symbol factor algorithm symbol updat downdat algorithm numer updat downdat dens matrix kernel could use algorithm howev supernod would merg updat split downdat complic supernod form factor r approxim minimum degre order algorithm introduct algorithm distribut mathemat softwar via electron mail direct method spars matric yale spars matrix packag design user interfac spars matrix packag data structur spars qr lu factor predict structur spars matrix comput spars matric matlab design implement effici algorithm comput row column count spars choleski factor spars partial pivot time proport arithmet oper method modifi matrix factor activ set strategi lp dual activ set algorithm role elimin tree spars factor algorithm aspect vertex elimin graph new implement spars gaussian elimin effici solut spars system linear nonlinear equat new york tr ctr w hager dual activ set algorithm applic linear program comput optim applic v n p march ove edlund softwar packag spars orthogon factor updat acm transact mathemat softwar tom v n p decemb matin bergounioux karl kunisch primaldu strategi stateconstrain optim control problem comput optim applic v n p juli frank dellaert michael kaess squar root sam simultan local map via squar root inform smooth intern journal robot research v n p decemb nichola i m gould jennif a scott yifan hu numer evalu spars direct solver solut larg spars symmetr linear system equat acm transact mathemat softwar tom v n pe june olga sorkin daniel cohenor dror ironi sivan toledo geometryawar base shape approxim ieee transact visual comput graphic v n p march