t use lemma model elimin procedur a model elimin me procedur first propos notion lemma put forth promis augment basic complet proof procedur lemma use also discov procedur proof run sever implement exist implement explicitli examin lemma mechan indiffer result report success use lemma use meteor implement me lemma devic permit meteor obtain proof otherwis obtain meteor prover use lemma wellknown challeng problem solv discuss sever difficult problem includ two challeng problem uniform generalpurpos prover meteor first obtain proof problem select simpli show lemma devic rather understand better thu choos problem wide differ characterist includ one lemma creat automat opposit normal behavior select point potenti of problem with lemma use biggest problem normal select appropri lemma retain larg number gener b introduct model elimin me procedur defin s nearli coincid resolut procedur littl earli work support part nsf grant ccr ccr experiment me procedur receiv rel littl attent howev basi slresolut procedur play histor role begin logic program major implement complet earli fleisig et al provid direct comparison unit prefer setofsupport refin resolut wo et al procedur implement underli infer tool individu win found method evid prefer known refin resolut forthcom notion lemma introduc first paper me implement fleisig et al result indiffer use paper includ statementth use lemma usual detriment although short refut obtain use lemma poor perform due lack select rule lemma aggrav depthfirst natur search p paper strongli refut conclus paper regard valu lemma within me report result date obtain within framework use lemma theorem proven includ yet provabl resolut techniqu understand notion direct competit resolut oversimplist procedur tend rel well nonhorn problem resolut method employ focus unlik chess theorem divers lot differ proof method may excel differ area wellknown mani research area idea kept aliv work mark stickel notabl stickel exploit fact extens sldresolut prolog develop prolog technolog theorem prover pttp late s almost simultan three group took one step further build architectur the warren abstract machin wam develop prolog logic program commun extend parallel machin project parthenon cmu partheo munich meteor duke the munich duke effort includ sequenti prover also work report implement one meteor famili prover chang year make lesson fleisig et al paper invalid part fair number thing mayb import wam architectur idea also import use iter deepen introduc stickel sophist implement exploit wam idea vastli power yet cheaper comput care use techniqu restrict lemma creation use look depth three exampl theorem proven use lemma would otherwis prove use me two theorem theori continu function one collect three challeng problem s solv automat now two three latter challeng problem solv weak fulli autom mode is initi restructur problem done forc gener lemma done split problem two six case respect without knowledg problem solut detail present later mention problem subsequ solv strong fulli autom mode semant hyperlink prover knowledg prover succeed problem noninteract mode purpos paper look indepth natur lemma use paper contain result meteor standard problem autom theorem prove atp commun omit list here exampl astrachan stickel paper discuss cach includ two tabl result brief discuss lemma use cach applic exampl treat here model elimin procedur linear input procedur is one parent claus preced claus claus input claus key properti sldresolut allow compil prolog program elegantli implement wam architectur use architectur structur also enjoy high infer rate howev like prolog suffer high search redund due depthfirst search mode wam architectur me use iter deepen rather pure depthfirst search howev lemma shorten proof thu reduc redund show exampl compress proof achiev lemma use strike gain occur real vs toy problem note version restrict resolut correspond me resolut version linear input procedur except restrict ancestor resolut oper resolut two deduc claus necessari see toss procedur thu procedur regard encod toss resolut restrict use sort logic frame unfram liter note not strictli speak resolut procedur highlight fact linear input resolut complet small extens horn claus logic wherea complet firstord logic paper organ follow section briefli describ proof procedur realiz procedur meteor section section section describ success applic lemma three theorem none prove without lemma use conclud short summari section model elimin procedur like resolut model elimin refut procedur formula refut present conjunct normal form skolem function toss procedur correspond slightli differ procedur none problem yield proof less cpu hour use vanilla without lemma use elimin existenti quantifi see detail formula prepar contain full descript procedur view claus set liter formula set claus correspond entiti deriv claus resolut deriv chain order list liter liter one two class aliter bliter me current defin two basic oper extens reduct basic oper extens like resolut oper retent one liter resolv upon retain liter promot a liter intuit aliter type ancestor liter give succinct present oper lemma mechan here follow exampl appendix give expand present procedur first chain deduct order input claus liter classifi bliter gener oversimplifi refer occurr liter particular refer liter success chain liter fact later liter may instanti parent liter simplif caus confus extens oper glue shorten input claus order user choic left current chain leftmost bliter chain unifi complement liter input claus new chain instanti current chain unifi unifi liter input claus drop unifi liter the leftmost liter current chain promot aliter newli ad liter bliter liter retain classif current chain leftmost aliter ani remov back leftmost bliter reduct oper remov leftmost bliter current chain unifi complement aliter chain new chain instanti current chain unifi leftmost bliter miss again leftmost aliter ani remov back leftmost bliter creation lemma occur leftmost aliter remov end extens reduct oper use unit lemma although gener notion lemma allow multiliter lemma defin lemma chain creat complement remov aliter aliter produc lemma creat unit lemma elig mechan simpl reduct oper aliter complement leftmost bliter reduct aliter reduct step aliter strictli left reduct a liter mark everi aliter newli creat claus inherit mark ani parent aliter aliter unmark time remov earli paper three oper tradit chain grew to right prolog convent replac leftmost liter influenc recent implement choos follow convent use meteor implement creat lemma gener lemma retain retent depend number criteria discuss later control user lemma retain act exactli unit input claus regard extens lemma subject restrict modif share input claus howev refut figur adapt illustr mechan px qy input claus px ry input claus pa ry input claus qx pa input claus and goal chain begin proof py qx pa extens variabl renam claus rz py qx pa extens variabl renam claus pa rz py qx pa extens rz pa qx pa prior remov aliter pa reduct unit lemma form pa extens lemma pa proof complet lemma mechan use ry pa extens px ry pa extens reduct figur refut figur unit lemma creat final stage reduct yield chain pa step reduct creat aliter pa parent py subsequ remov aliter pa qx creat lemma remov rz cannot creat unit lemma figur present proof tree associ exampl one proof tree proof without lemma use one incorpor lemma use proof tree claus use extens repres claus number goal claus list root proof tree liter claus repres child node claus claus actual appropri chain claus use extens liter name reduct shown backward arrow node label rn nth reduct arc ancestor node reduct label rn indic aliter reduct proof tree give suffici inform reconstruct proof without backtrack instanti variabl determin trace proof use proof tree proof tree right side figur method display lemma use also repres proof tree without lemma use leftmost box enclos subdeduct defin lemma occurr box deduct indic posit lemma use such box would replac singl node subdeduct box provid subtre could occur lemma devic use note tree left show slightli differ deduct actual occur lemma devic use report devic use later paper deduct consider larger size give graphic feel save proof size realiz lemma use reduct arrow box somewhat confus instanc reduct aliter creat call lemma right side box reduct arrow refer back liter call lemma valid aliter reduct lemma replac deduct without lemma lemma figur proof tree meteor architectur provid brief descript meteor architectur full descript found meteor written c run workstat parallel distribut comput environ search engin use sequenti parallel set discuss architectur meteor emphasi parallel distribut mode appear iter deepen use ensur complet search strategi case meteor design conform principl warren abstract machin wam de facto standard prolog implement how ever claus compil wam code data structur interpret runtim either sequenti parallel search engin sever differ depth measur use bound potenti proof iter deepen search report four measur here describ tabl measur descript inf infer depth bound total number infer proof tree alit aliter depth bound depth proof tree roll rollbackreduct combin inf alit prefer given reduct dweight weight depth weight claus per branch proof tree tabl depth measur employ meteor measur inf alit commonli use prover default measur pttp setheo respect bound entir proof tree use inf ensur minimallength proof in term extens reduct found alit also use first implement point proof search one tell current depth respect alit measur count number aliter current chain wherea inf measur total number extens reduct need deriv current chain of cours one includ subsearch remov backtrack note depth proof tree correspond number aliter longest chain proof depth minim alit depth proof tree found exampl deduct end last section lemma use inf alit mean proof found depth state depth bound less state would permit proof shown found seen given deriv consult appropri proof tree note proof tree inf measur determin count node proof tree exclud root alit determin count depth proof tree root depth deduct use lemma inf alit latter depth assum left branch search first right branch search first alit roll employ depth calcul inf regard extens success reduct oper result roll back depth depth forc aliter reduct introduc chain bliter measur discov accid clear intuit definit simpli note work well mani case one observ regard success charg extens unit claus eg lemma wherea alit charg yet give ad resourc explor consequ reduct alit measur inde often resourc alit give exampl deduct last section roll lemma use lemma use none measur uniformli superior other appear simpl syntact criteria use determin measur appropri see dweight use conjunct depth measur rather replac them input claus annot integr weight contribut weight chain claus use weight chain sum weight claus whose liter appear chain dweight use increment iter manner depth bound increment iter deepen search minimum valu theorem first consid problem lemma effect theorem consid minimum valu theorem minvt also known atp literatur theorem minvt continu function real close interv a b attain minimum interv tabl give readabl rendit axiom minvt number left refer claus number axiom given order submit meteor figur give axiom submit meteor claus number relat input claus counterpart tabl nocontra suppress contraposit dichotomi axiom axiom gener clearli need costli axiom includ dichotomi axiom itself line name skolem function permit self nest semant problem made like function need nest figur figur present proof tree format proof found meteor proof tree given code form lemma label unwound full structur tree appar figur on left show proof actual discov meteor proof involv seven input claus four lemma use depth measur inf would proof depth actual took inf depth it done inf depth discov proof lemma use proof requir depth discov figur on right present full proof infer label lemma label claus number dot arrow bottom proof tree right figur link appropri subtre figur node label begin l refer lemma number determin proof recoveri procedur not order lemma gener node label refer input claus number axiom total order x x x z roughli symmetri anteced x l minimum point al l l b point greater l smaller point smaller fvalu x x hx smallest point ab st b x exist point kx ab negat theorem conclus x tabl axiom minimum valu theorem minvt made point previous lemma often discov earlier fail part search tree evid proof tree exampl top lemma use proof so invok lemma must establish proof found in particular note lemma l l l label tree figur deriv continu figur lemma use proof lemma clearli discov time complex lemma obtain note mean discov earlier proof tree iter lemma retain success iter thu inform later tree use earli branch succeed iter gener iter deepen give breadthfirst form search within search depthfirst effect lemma dramat made note depth proof given here inf the depth measur use here employ use lemma search depth well beyond capabl implement me prover know point resolut exactli kind compr sion resolv lemma also sens retain intermedi result inde note unit lemma resolv tree portion reduct use differ note befor lemma nocontra pxi pyx pxypyz pxz pxi pyx pfxfi pal plb pax pxb paqx pxl pax pxb pfxfqx pxl pax pxb pqxx pxl pax pxb phxb pax pxb pfhxfx pax pxb pay pyb pfyfx phxi pax pxb pakx pax pxb pkxb pfxfkxpaxpxb figur input claus minimum valu theorem minvt option regard complet mean option regard realiz actual proof case demonstr howev priori concern retain almost everi nonredund intermedi result achiev much trim first proof obtain minvt take sec creat retain lemma make success infer constraint besid unit lemma constraint univers us still con straint termlength stipul lemma disallow iter nest function speed consider termlength check done term replac variabl substitut occurr thu liter may contain mani constant function letter bound indic check done liter new chain well lemma appli lemma note way nest restrict appli almost total safe first run function f skolem function one never gain nest nest f make heurist sens given problem natur sensit term length quit modest termlength limit all number lemma retain problem limit nest function symbol necessari order constrain number lemma gener that alway case howev thu illustr point trade search input claus less retent goal goal figur toplevel proof partial unrol proof intermedi result mani strategi resolut employ wang challeng problem usual case gener mani lemma seek way trim lemma without remov help proof therefor interest situat encount problem lemma produc situat aros pursu challeng problem set fulli proven autom theorem prover knowledg hao wang put forth sever challeng problem autom theorem prover problem beyond capabl theorem prover time moreov prove difficult autom prover time problem set consid label exq exq exq wang treat section exampl quantif theori although wang suggest intuit understand exampl think f membership relat ffl suggest achiev purpos us state three problem formula refut tabl follow figur one set axiom use meteor figur replac constant n axiom the latter pure histor reason problem exq solv number system suspect also known wo solv otter one numer problem circul label meaning wo easili determin prover solv figur proof am lemma unrol exq conjunct follow formula unsatisfi n n k exq replac exq remov exq tabl axiom exq problem first problem otter solv exq exq although itp sens ancestor otter solv exq solv precondit manner present problem broke case forc gener lemma previous mention semant hyperlink theorem prover chu plaist subsequ provid fulli autom proof first knowledg thi problem particularli well suit prover highli nonhorn like logic puzzl turn poorli structur us high number reduct block product unit lemma proof wo exq obtain use alit without break theorem case use dweight reduc time onethird weight employ note exq solut contain exq case term inequ three basic constant exq use alit case exq case use roll interest pyvpvyrympymrvmrvi rxyrfxfi rgybrybpyb rxyrgxgi figur input claus exq case case solv use roll easili solv in case use alit first ran exq lemma gener proof obtain inde overnight run hour yield lemma con trast exq lemma creat one success run experi success lemma made us consid immedi lemma could gener unit lemma gener inhibit reduct decid introduc unit claus allow frequent proof branch termin unit extens rather reduct although understand proof theorem and still dont seem appar exq exq effect deal case equal inequ three con stant kmn broke problem case list tabl abl prove theorem note case definit exq follow immedi axiom ad defin exq statist case provid tabl exq case case case exq case case case case case case case problem depth time infer lemma measur sec case roll dweight exq case roll case roll exq case roll case case exq case roll case tabl case statist exq exq exq report tabl exqcas use dweight although result obtain roll alon twice time sec doubl infer total infer weight entri seen end input claus interest view case use weight weight enter prior weight run use algorithm account claus length primarili high penalti known problem axiom equal axiom small adjust gener number free variabl claus major gain use weight control equal axiom comment aspect meteor list axiom set figur lex predic use order constant symbol use demodul skolem predic list skolem function mention previou section neither restrict use run report section demodul use report run we obtain lemma use demodul use option problem initi specifi demodul could use input axiom seen differ small way natur translat wang problem specif besid replac b n appear everywher exampl done experi axiom set obtain trace origin problem prepar paper chosen accept varianc origin problem statement sinc becom standard sourc problem includ problem set feel discov new techniqu me break problem case gener use lemma may even pay mani lemma gener sever limit natur lemma produc yield proof tri gener new lemma case method clear yet automat techniqu tri use is tri see discoveri proof exq could speed introduct case howev run exq use ad case result increas time proof seen techniqu forc lemma creation fruit wide applic idea await experi bledso challeng problem third problem consid actual collect variant problem investig bledso start earli s use natur deduct style theorem prover special heurist limit theorem bledso boyer prove sum two continu function limit point limit sum point assign label lim problem theorem sinc proven str ve prover hine bledso gener theorem prover special devic handl inequ real line bledso recogn difficulti theorem uniform prover issu challeng set problem base lim problem five differ firstord axiom set design challeng set two make explicit use equal predic one formul requir use paramodul anoth rule buildsin equal use meteor abl prove first three formul challeng problem lack full builtin equal mechan no mechan paramodul preclud attempt fifth formul problem fourth formul use equal without strong equal restrict simplif mechan stronger unadorn demodul mechan lemma have much meteor point first three formul use singl predic also use minvt theorem discuss section sever uniform prover obtain third formul challeng problem meteor first achiev success level knowledg see digricoli regard proof fourth fifth formul done partial interact mode purpos report experi meteor lemma use problem set third formul hardest problem meteor succeed hardest mean strongest set restrict ever use need obtain proof one proof requir hour sun sparcstat shorter proof requir insight proof count legitim datapoint regard capabl meteor fulli autom theorem prover proof attempt use proof knowledg use test variou constraint shorter time period make clear experi use proof insight result present figur give claus use three formul roughli order meteor took input read lefttoright topto bottom claus number origin present bledso meteor normal reorder claus number liter with prefer unit claus attent degre gener also consid item n end claus assign claus weight n discuss later give origin nonclaus formul claus set mean claus selfevid constant interpret predic lt denot function ab denot absolut valu skolem function region see below ha onehalf pl ng neg xs skolem function except point delta region min is cours minimum claus give continu condit function f g respect exampl claus direct translat equat claus claus claus claus claus claus claus claus claus claus claus claus claus claus claus ltxltyltminxi ltxhaz ltyhaz ltplxyz claus claus claus claus figur claus bledso challeng problem goal claus give negat theorem assert in conjunct claus exampl claus state claus difficult goal achiev need use triangl inequ howev chang relat need claus signific chang formul much harder formul introduct dichotomi axiom axiom especi transit axiom axiom along axiom chang min make formul consider harder problem list three formul claus set studi third formul first two problem variat meteor could handl rel straightforwardli claus three formul are formul claus goal claus formul claus goal claus formul claus goal claus includ data run first two formul littl di cussion see tabl lemmaiz run ground lemma store ground subgoal extend lemma reason import combin restrict label ground gener onli thm search paramet time sec number infer alit dweight lemmaiz z one two yuse alit dweight zground gener tabl time infer formul one two also give proof tree second third formul figur proof second formul left dot box surround subtre denot lemma occurr discuss below third formul list proof devic restrict use tackl third formula tion mani use onli experi limit other common comment gener experi them use combin depth measur alit dweight tri often usual obtain consider improv perform one time proof obtain without devic oversimplif proof obtain use combin roll dweight optim limit paramet consider timeconsum alit dweight gener attempt tri ground lemma store use instanti call goal occur trim branch factor one node figur proof tree second third formul lemma liter limit number symbol allow number occurr specif input claus allow proof control meteor sensit paramet could set uninform guess realiz proof noproof knowledg proof meteor increment upper bound claus occurr count function current depth accord ratio set user ratio need moder insensit user set term obtain proof all time need realiz proof strongli sensit ratio liter contain term certain form retain exclus rang obviou redund possibl strong exclus result sever combin exclus reduct restrict bliter whose sourc transit axiom restrict natur sound reason state below goal claus reorder usual rule order two liter binari choic normal would expand constrain liter first signific deviat rare rotat liter goal claus yet case proof obtain use usual liter liter first expand expand abov depth measur dweight util claus weight appear append end input claus depth measur function alit except claus weight use increment count instead unit increas use alit depth measur may use conjunct measur proof develop termin appropri depth count exceed one get conjunct depth criteria weight use claus guess chang follow prescrib pattern adjust strict formula occur exampl min axiom constitut onethird axiom like constitut onethird claus use proof weight higher initi guess use proof knowledg consid nonsensit constraint control number occurr input claus necessari proof succeed actual control dichotomi transit crucial experi show make quit safe guess upper bound axiom transit dichotomi axiom limit optim count solv problem iter increment claus effect equival bind dichotomi transit claus shown line tabl indic limit claus use optim plu twenti except dichotomi transit iter deepen claus limit employ user still must pick ratio clauselimit increment depth bound increment less sensit guess claus count data line tabl increas count one everi two level increas alit count liter exclud retent certain term creat upon unif action chain level lemma level thu effect complet in small avenu taken larg number proof branch explor seem expand along question rout deal term either unlik occur proof redund term term exclud rang clearli safe exclus perhap quit riski stress obtain proof theorem exclud safe exclus perform definit enhanc riski exclus tabl list exclus use ddx ddx ddx ddx dplxi dplxi minminxyz minxminyz minabxi minplxyz minxplyz minxx tabl term exclud bledso challeng problem use four class risk exclus heurist safe safe risk risk safe categori nest skolem function term ddx also includ term minx x still consid safe term haabx abhax exclud likewis includ slightli riskier perhap symbol count increas limit total number symbol allow per liter the limit use either equal use symbol still allow proof other tabl riskier discuss next paragraph line tabl give data run use safe exclus onli the phrase ex mean term exclud term run line provid data use subset term tabl column label attinf give attempt infer potenti infer identifi prior unif attempt run statist descript time inf attinf leminf run sec optim termsiz optim termsiz y safe ex y ex y ex limit iter deepz ytermsiz limit symbol zsparc elc increas limit everi stage tabl alter limit extens third bledso problem briefli consid riskier exclus consid exclud similar term may seem riski notic prolifer term led ask need note term type could still aris instanti variabl exclus mean unif cannot instanti variabl exclud term illustr thi goal gammaltmin e minx e refut exclus term tabl obtain proof term minmin e e gener x goal instanti e thu exclud term appear forbidden use term emb exclud term substitut instanc reader see first extend claus follow extens claus even though complet endang reason action take type step may need get difficult theorem advers endang complet exclus riski develop thesi basic hidden user play lemma give tabl data run exclus note exclus need proof run statist descript time inf attinf leminf succ run sec limit roll limit ex ex ex ex ex min term y ex y ex y ex z trmsize ytermsiz zotherwis line tabl perform characterist third formul reduct restrict bliter transit axiom actual came note simpler proof formul use reduct put categori cheat standard even though base know proof formul three like real world simpler version problem around break heurist even though arriv guess reason guess way similar situat is guess would make similar situat reason seen mani proof nonhorn claus nevertheless reduct need so initi tri tell us problem hard would first tri without reduct would tri here allow transi tiviti often use it first time problem strongli benefit restrict simpli made observ reduct occur problem experi need tell whether pattern suggest realli hold interchang liter order within goal hardest justifi uniform ground work way way usual start instanti liter first win strategi normal order work first two formul proof obtain without lemma use start instanti liter proof imposs find without lemma liter ltd expand first situat revers even easier formul lemma tri reason clear proof tree figur see one follow second liter the right branch key lemma dot line box reach alit depth pursuit branch requir depth recal alit proof tree depth reader check directli count branch length proof tree figur note variabl goal instanti key lemma follow gammaltmindha dhae instanti give found typic proof found analysi text given epsilon ffl correspond delta minimum delta ffi correspond half given epsilon min axiom necessari discov instanti howev and somewhat surprisingli min axiom remov input claus set proof obtain less second limit claus use howev case ltdhae ltdhae deduc give less inform provid min axiom includ significantli less time summari plaist shown unit lemma cach one goalsensit procedur polynomi search time within proposit horn claus set suitabl sens result assum use iter deepen search normal mode meteor elsewher see astrachan stickel data given use unit lemma cach horn claus domain present exampl nonhorn set where cach implement easili design demonstr unit lemma still effect consid exampl illustr differ situat nearli ideal insuffici lemma suppli situat where case analysi provid need lemma bare adequ lemma suppli where one deep lemma use even creat correct proof develop wide scope situat believ demonstr use unit lemma addit model elimin procedur hope achiev enough knowledg lemma use henceforth view basic procedur black box collect lemma data user view manipul appendix give formal definit model eliminationm procedur use meteor fuller treatment procedur given chain sequenc liter liter aliter bliter that is chain order claus two type liter input chain chain bliter obtain place order claus conjunct normal form cnf formula test unsatisfi claus cnf formula call input claus input claus n liter cnf formula must repres least chain liter input claus leftmost least one input chain empti chain denot l leftmost liter chain c write c gamma flg repres chain c leftmost occurr l remov occas remov liter leftmost liter sequenc liter leftmost latter case regard liter remov one time liter becom leftmost intermedi chain chain preadmiss iff complementari liter separ aliter bliter left ident aliter aliter ident complementari anoth aliter chain admiss iff preadmiss leftmost liter b liter practic sometim enforc condit user option let c admiss chain let c variabledisjoint input chain exist mostgeneralunifiermgu oe leftmost liter l c complement leftmost liter l c extens oper extend c c form chain c promot leftmost liter c oe aliter place c goe left liter c arrang order user choos liter c oe inherit type parent liter c c note except promot aliter chain result preadmiss extens defin chain result preadmiss chain aliter leftmost ie nonadmiss leftmost aliter remov back leftmost bliter yield admiss chain let c admiss chain exist mgu oe leftmost liter l c aliter c reduct oper yield chain c gamma flgoe chain result preadmiss reduct oper defin chain result nonadmiss preadmiss chain aliter left leftmost bliter remov deriv sequenc chain compos input chain first goal chain follow deriv chain either extens preced chain input chain reduct preced chain refut deduct empti chain lemma option properti me creat aliter remov transform preadmiss admiss chain lemma inform label either lemma claus result process lemma creation chain creat claus consid unit lemma distinct pedant lemma claus one chain creat consist singl bliter regard order claus lemma chain treat input chain gener if pass filter may elimin it gener usercontrol option lemma claus complement aliter remov a liter elig creat lemma elig criterion exactli state bodi paper repeat complet definit correct unit lemma reduct oper aliter complement leftmost bliter reduct aliter reduct step aliter strictli left reduct aliter mark everi aliter newli creat claus inherit mark ani parent aliter aliter unmark time remov creat lemma claus r investig model elimin base theorem prov ing meteor explor model elimin theorem prove meteor high perform theorem prover use model elimin cach lemmaiz model elimin theorem prover challeng problem elementari calculu comput proof limit theorem variabl elimin chain resolutionbas prover inequ parallel theorem prover nonhorn claus symbol logic mechan theorem prove semant guid firstord theorem prove use hyperlink rue theoremprov system complet set limchalleng problem implement model elimin proof procedur central variabl strategi str ve mechan theorem prove model elimin simplifi format model elimin procedur autom theorem prove logic basi otter search effici theorem prove strategi machineori logic base resolut principl partheo high perform parallel theorem prover prolog technolog theorem prover implement extend prolog compil prolog technolog theorem prover implement extend prolog compil hierarch deduct effici complet set support strategi theorem prove tr ctr allen van gelder fumiaki okushi lemma cut strategi proposit model elimin annal mathemat artifici intellig v n p fumiaki okushi allen van gelder persist quasipersist lemma proposit model elimin annal mathemat artifici intellig v n p march allen van gelder autarki prune proposit model elimin reduc failur redund journal autom reason v n p august allen van gelder fumiaki okushi proposit theorem prover solv plan problem annal mathemat artifici intellig v n p