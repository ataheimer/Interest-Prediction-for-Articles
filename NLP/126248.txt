t use program slice softwar mainten a program slice appli softwar mainten problem extend notion program slice that origin requir variabl line number decomposit slice one captur comput given variabl ie independ line number use lattic singl variabl decomposit slice order set inclus shown slicebas decomposit program form one delin effect propos chang isol effect singl compon decomposit give maintain straightforward techniqu determin statement variabl may modifi compon may not use decomposit set principl prohibit chang interfer unmodifi compon provid semant consist chang merg back origin program linear time b introduct kill code gerald weinberg allud privat list world expens program error top three disast caus chang exactli one line code each one involv chang singl digit previous correct program argument goe sinc chang one line usual mechan chang control could circumv and cours result catastroph weinberg offer partial explan unexpect linkag ie valu modifi variabl use place program top three list ignomini attribut linkag recent special section march issu ieee transact softwar engin schneidewind note one reason mainten difficult hard determin code chang affect piec code present herein method maintain use address issu may view softwar mainten less intellectu demand activ develop central premis work softwar mainten demand ad difficulti due larg part semant constraint place maintain constraint loos character attempt avoid unexpect linkag address problem attempt elimin semant constraint provid maintain tool pinpoint potenti inconsist chang implement make mainten appear like develop sinc programm need worri linkag chang made tool invok inconsist if ani locat one would expect tool would proceed resolv inconsist shown problem nphard thu maintain present problem difficult resolv origin chang take opposit view present maintain semant constrain problem let construct solut implement chang within constraint semant context propos constrain maintain one prohibit linkag portion code maintain want chang approach uncov potenti problem earlier aforement method and believ worth inconveni may encount due imposit constraint program slice base techniqu give assess impact propos modif eas problem associ revalid reduc resourc requir mainten activ work unstructur program usabl older system may use whitebox sparepart backbon mainten without regard whether mainten correct adapt perfect prevent background program slice introduc weiser techniqu restrict behavior program specifi subset interest slice sv n of program p variabl v set variabl statement n yield portion program contribut valu v statement n execut sv n call slice criteria slice comput automat sourc program analyz data flow control flow program slice ad advantag execut program slice done implicitli programm debug slice combin isol section code like contain program fault significantli reduc debug time flurri recent activ slice play signific role horwitz rep et al use slice integr program result built semin work ottenstein ottenstein combin slice robust represent afford program depend graph korel laski use slice combin execut trace program debug test choi et al use slice trace debug parallel program rep wang investig termin condit program slice hausler develop denot approach program slice gallagh improv lyle algorithm slice presenc goto develop techniqu captur arbitrarili place output statement discuss slice techniqu paper instead refer interest reader work sinc want avoid get bog detail particular languag identifi program flowgraph node graph correspond singl sourc languag statement defin ye els inword no f g g figur program slice henceforth term statement mean node flowgraph use common represent scheme make present clear although clear tool base techniqu need account nuanc particular languag paper also ignor problem introduc dead code sourc program declar program consider dead code see slice base techniqu elimin dead code figur illustr slice program figur bare bone version unix util wc word count taken program count number charact word line text file slightli modifi illustr clearli slice principl slice figur complet program comput restrict specif slice nw fig output number word file slice nc fig count number charact input text file slice fig count number line file use slice decomposit section present method use slice obtain decomposit program object use slice decompos program directli two or more compon program slice one compon construct two step process first step build one variabl decomposit slice union certain slice taken certain line number given variabl compon decomposit call complement also obtain origin program complement construct way certain statement decomposit slice remov origin program program remain slice defin ye els inword no f g g figur slice nw word counter g g figur slice nc charact counter g g figur slice nl line counter els inword no f g g figur slice inword g g figur slice input print figur requir decomposit slice correspond complement in sens defin given criteria respect variabl defin program thu complement also program slice decomposit slice use guid remov statement systemat fashion construct complement insuffici mere remov slice statement origin program sinc requir slice execut certain crucial statement necessari slice complement exampl start slice figur remov statement origin program result object even compil use decomposit break program manag piec automat assist maintain guarante rippl effect induc modif compon use complement provid semant context modif decomposit slice complement must remain fix chang decomposit idea present section independ particular slice method slice obtain slice algorithm program decomposit may comput clearli qualiti decomposit affect qualiti slice sens refin slice give finer granular also deliv semant inform maintain program slice depend variabl statement number decomposit slice depend statement number motiv concept easili explain use exampl figur slice st statement slice st statement slice statement last in case program insuffici get comput involv slice variabl t decomposit slice captur relev comput involv given variabl construct decomposit slice borrow concept critic instruct algorithm dead code elimin present kennedi brief repris follow usual method dead code elimin first locat instruct use sens declar critic instruct typic dead code elimin algorithm start mark output instruct critic usedefinit chain trace mark instruct impact output statement code left unmark useless given comput v set statement program p output variabl v let last last statement p let flastg statement sv form decomposit slice v denot sv decomposit slice union collect slice still program slice includ statement last variabl output may still use decomposit criteria also captur defin comput decomposit variabl last statement display valu success take slice statement last invok one crucial differ slice definit rep weiser lyle work rep slice must taken point respect variabl defin referenc p weiser slice taken arbitrari variabl arbitrari line number differ prohibit rep slice techniqu applic current context sinc want slice everi variabl program last statement begin examin relationship decomposit slice place use decomposit slice perform actual decomposit determin relationship take decomposit slice variabl program form lattic decomposit slice order set inclus easier gain clear understand relationship decomposit slice regard without output statement may seem unusu light definit sinc use output statement obtain relev comput view output statement window current state comput contribut realiz state coincid inform definit slice statement yield portion program contribut valu v statement n execut assum output statement contribut valu variabl preclud discuss output statement and therefor program output valu reus case random access file output file later reopen input moreov describ decomposit techniqu depend particular slice techniqu way know whether slice techniqu includ output statement not say slice outputrestrict output statement remov restrict decomposit slice sv sw independ would peculiar program independ decomposit slice would share neither control flow data flow effect would two program nonintersect comput disjoint domain merg togeth lattic would two compon ott slice metric terminolog independ correspond low coincident tempor cohes outputrestrict decomposit slice independ said weakli depend sub sequent speak independ depend slice alway context outputrestrict decomposit slice definit let sv sw outputrestrict decomposit slice w v let sv ae sw sv said strongli depend sw thu outputrestrict decomposit slice strongli depend independ slice independ definit independ depend present herein depend notion slice analog definit use bergeretti carr defin slice ott metric terminolog strong depend correspond high sequenti function cohes strong depend decomposit slice binari relat case howev alway need explicit refer contain slice henceforth write sv strongli depend shorthand sv strongli depend slice sw context permit it definit outputrestrict slice sv strongli depend slice said maxim maxim decomposit slice end lattic definit give motiv output restrict want concern possibl effect output statement maxim slice decomposit slice observ consid decomposit slice nw inword figur regard output statement defin maxim could forc slice inword maxim addit print statement referenc inword along other end program statement would collect slice nw sinc ad statement slice slice inword would maxim be figur give lattic desir snc snl snw maxim decomposit slice sinword strongli depend snw sc strongli depend decomposit slice decomposit slice snw snc snl figur weakli depend maxim output statement remov independ decomposit slice exampl recal independ decomposit slice cannot share control flow surround control statement would make depend begin classifi individu statement decomposit slice definit let sv sw outputrestrict decomposit slice program p statement call slice depend statement snc snl snw sinword sc figur lattic decomposit slice slice independ statement statement slice depend refer slice depend statement slice independ statement depend statement independ statement depend statement contain decomposit slice interior point lattic independ statement maxim decomposit slice union decomposit slice properli contain maxim slice term aris fact two slice depend comput perform depend statement independ statement contribut comput slice modifi program depend statement cannot chang effect rippl focu interest exampl statement slice nc fig slice independ statement respect decomposit slice statement slice nl fig also slice independ statement respect decomposit slice decomposit slice c fig strongli depend slice thu statement slice depend statement respect decomposit slice statement slice nw fig slice independ statement respect decomposit slice snc snl sc statement slice independ compar sinword statement decomposit slice inword fig slice independ statement respect decomposit slice snc snl sc statement slice independ compar snw relationship maxim slice independ statement proposit permit us appli term slice independ statement slice depend statement sensibl way particular statement given maxim decomposit slice without refer binari relat decomposit slice requir definit proposit let varsetp set variabl program p sv outputrestrict decomposit slice p let let statement sv gamma uu independ proof umg uu end relationship maxim slice program recal dead code exclud discuss proposit maximalg proof statement p mm sm dead code end maxim slice captur comput perform program maxim slice respect independ statement also relat proposit outputrestrict decomposit slice maxim iff least one independ statement proof suppos sv maxim definit sv least one statement slice ha statement independ statement suppos sv independ statement s slice slice contain maxim end convers slice independ statement strongli depend also anoth character strongli depend slice proposit let varsetp set variabl program p sv outputrestrict decomposit slice p let strongli depend swg let let outputrestrict decomposit slice sv strongli depend on sd iff uu proof suppos sv strongli depend need show maxim slice partial order set inclus let one maxim element d element maxim not properli contain anoth slice contain sv m v sv make contribut union suppos uu make contribut union proposit sv strongli depend end posit state decomposit principl given maxim outputrestrict decomposit slice sv program p delet independ output statement p denot program p v call complement decomposit slice sv with respect p henceforth speak complement alway context decomposit slice decomposit slice subset program comput subset specif complement comput rest specif figur give complement slice nw nc nl figur use proposit obtain complement slice inword slice c entir program g g figur nw complement slice nw comput line count charact count yield approxim direct sum decomposit program preserv comput integr constitu part also indic use decomposit done maxim decomposit slice complement p maxim slice decompos decomposit may continu slice independ statement ie maxim one obtain practic maintain may find strongli depend slice start point propos chang method permit chang chang may view properli extend domain partial function program comput preserv partial function origin domain applic modif test statement independ use build set guidelin softwar modif thi need make one set definit regard variabl appear independ depend statement definit give set rule maintain must obey order make modif without rippl effect unexpect linkag rule obey algorithm merg modifi slice back complement effect chang drive motiv follow develop is what restrict must place modif decomposit slice complement remain intact definit variabl target depend assign statement call depend vari abl altern equival assign variabl independ statement variabl call independ variabl assign statement independ statement target independ variabl program figur two maxim decomposit slice sa se figur slice figur strongli depend sa sf figur strongli depend sb sa sd sc not shown strongli depend maxim slice sa statement independ proposit variabl b target assign statement respect so decomposit slice sa variabl f independ variabl defin ye els inword no f g g figur nc complement slice nc comput word count line count defin ye els inword no f g g figur nl complement slice nl comput charact count word count int a b c d e f figur depend variabl sampl program int a b c d e f figur slice int a b c d e f figur slice e int a b c d e f figur slice b int a b c d e f figur slice f similar argument appli independ control flow statement refer depend variabl depend variabl independ statement correspond situat variabl question requir compil complement statement question contribut complement variabl referenc depend statement necessari complement cannot independ decompos singl variabl yield strongli depend slice abl construct slice origin slice variabl independ variabl proposit let varsetp set variabl program p sv strongli depend output restrict decomposit slice p let strongli depend swg let let uu variabl v independ variabl word sv strongli depend slice union maxim slice upon sv strongli depend v independ variabl proof show complement p refer v variabl v complement maxim slice complement upon sv strongli depend contradict hypothes complement refer v variabl v independ end interpret variabl version proposit refer statement address problem present decomposit slice variabl maxim variabl remain depend situat occur exampl begin chapter slice variabl figur maxim variabl depend solut straightforward construct slice union slice variabl depend proposit let varsetp set variabl program p sv output restrict decomposit slice p depend variabl swg let two case thu empti also case v independ variabl e empti variabl v independ variabl proof case sv contain refer v particular sv contain assign v v independ variabl sv end case case contain refer v particular contain assign v v independ variabl end case end proposit variabl modifi decomposit slice posit answer question pose begin section present restrict collect rule justif modif take three form addit delet chang chang may view delet follow addit use second approach determin statement decomposit slice delet form statement ad again must reli fact union decomposit slice slice sinc complementari criteria usual involv one maxim variabl also assum maintain kept modifi program compil obtain decomposit slice portion softwar need chang locat code may highli nontrivi activ sake current discuss assum complet sinc independ statement affect data flow control flow complement have rule independ statement may delet decomposit slice reason independ statement affect comput complement delet independ statement slice impact complement end result appli control flow statement assign statement statement may delet even assign statement target depend variabl control statement refer depend variabl point keep mind statement independ affect complement independ statement delet certainli effect slice purpos methodolog keep complement intact number situat consid statement ad progress simpl complex also note addit new variabl may introduc long variabl name clash name complement instanc new variabl independ decomposit slice follow independ variabl mean independ variabl new variabl rule assign statement target independ variabl may ad anywher decomposit slice independ variabl unknown complement thu chang cannot affect comput complement end type chang permiss even chang valu flow depend variabl figur chang permit assign statement line target f chang would propag valu depend variabl b line maintain would respons chang would occur variabl line depend ie contain anoth decomposit slice line would also contain slice variabl f would depend ad control flow statement requir littl care requir control statement two part logic express determin flow control action taken valu express we assum side effect evalu logic express discuss addit ifthenels statement sinc languag construct realiz rule logic express and output statement may ad anywher decomposit slice inspect state comput anywher evalu logic express or inclus output statement even affect comput slice thu complement remain intact end must guarante statement control newli ad control flow interfer complement rule new control statement surround ie control depend statement caus complement chang suppos newli ad code control depend statement let c criteria yield complement use criteria modifi program newli ad control code includ complementari slice due fact depend statement slice complement thu control statement control depend statement also slice complement end make chang violat principl complement remain fix thu new control statement may surround depend statement short list necessari suffici keep slice complement intact also impact test chang discuss later chang may requir comput involv depend variabl v extract slice maintain choos one follow two approach use techniqu previou section extend slice v independ slice add new local variabl to slice copi valu new variabl manipul new name onli cours new name must clash name complement techniqu may also use slice independ statement ie strongli depend merg modif complement merg modifi slice back complement straightforward key understand merg oper come observ techniqu maintain edit entir program method give view program unneed statement delet depend statement restrict modif slice give smaller piec code maintain focu on rule previou subsect provid mean delet restrict part cannot chang accident present merg algorithm order statement origin program in follow exampl one statement per line order mere line number program slice complement identifi subsequ statement number origin program call sequenc number slice slice sequenc number complement complement sequenc view edit process addit delet associ sequenc number delet statement delet sequenc number slice sequenc observ sinc independ statement delet number complement sequenc statement insert slice new sequenc number need gener let p sequenc number statement preced statement insert let least valu slice sequenc greater p let insert new statement sequenc number although work principl practic care need taken gener insert sequenc number avoid float point error insert merg program obtain merg modifi slice sequenc valu ie statement complement sequenc thu unchang depend statement use guid reconstruct modifi program placement chang statement within given control flow arbitrari again becom clearer edit process view modif entir program follow exampl help clarifi thi test chang sinc maintain must restrict chang independ newli creat variabl test reduc test modifi slice thu need regress test complement elimin two altern approach verifi chang need test first slice origin criteria plu new variabl minu elimin variabl compar complement complement origin match exactli second approach preserv criteria produc origin complement slice must produc modifi slice exactli axiomat consider illumin idea slice complement perform subset comput comput meet depend modifi code independ part slice leav independ part complement invari slice and vice versa requir chang mere modul replac preced techniqu still applic slice provid har replac modul complet independ program support modul obtain one principl benefit slice highlight context side effect modul replac also slice thu full impact chang brought attent modifi exampl make chang snw slice nw word counter figur chang slice shown figur origin program determin word string non white symbol termin white symbol space tab newlin modif chang ch isspacec isalphach ch g g figur modifi slice nw word counter requir alphabet charact termin white space the exampl illustr chang advoc it note chang delet independ variabl ye no ad new total independ variabl ch revamp independ statement addit c macro isspac isalpha safe sinc result referenc test program independ complement figur show reconstruct modifi program take decomposit slice nw gener program figur complement alreadi given figur star statement indic new statement would place use line number gener techniqu abov new softwar mainten process model usual softwar mainten process model depict figur request chang arriv may adapt perfect correct prevent make chang wish minim defect effort cost maxim custom satisfact softwar chang subject pend prioriti chang compos two part understand code may requir document code read execut program modifi maintain must first design chang which may subject peer review alter code itself tri minim side effect chang valid alter code verifi assur conform specif new code integr exist system insur conform system specif task involv regress test new model depict figur softwar chang subject pend prioriti chang compos two part understand code requir document code read execut use decomposit slice decomposit slice may read execut a decid advantag execut program slice code modifi subject strictur outlin use guidelin side effect unintend linkag induc code even accid lift substanti burden maintain chang test decomposit slice sinc chang cannot rippl modul regress test unnecessari maintain need verifi chang correct appli merg algorithm chang of code complet ch isspacec isalphach ch g g figur modifi program futur direct underli method tool base need empir evalu underway use goalquestionmetr paradigm basili et al natur also address question scale determin exist softwar system decompos suffici via techniqu order effect technolog transfer also evalu decomposit slice candid compon reus librari although seem well practic slice algorithm rel bad worst case run time on e loge n number variabl e number edg flowgragh obtain slice run time becom on e loge worst case time would seem make interact slicer larg ie real program impract difficulti assuag make data flow analysi one compon deliver product hand develop team mainten team interact tool could built use product chang made maintain data flow data updat use increment techniqu keabl interprocedur slice attack use techniqu weiser barth interprocedur slice algorithm horwitz et al cannot use sinc requir slice taken point slice variabl id defe refe requir slice taken last statement program separ compil worst case assumpt must made extern variabl sourc avail sourc avail one proce procedur berzin attack problem softwar merg extens program quot him extens extend domain partial function without alter initi defin valu modif redefin valu defin initi address modif problem first restrict domain partial function slice complement modifi function valu defin independ variabl slice request chang chang softwar design chang alter code test chang adapt perfect correct prevent minim defect minim effort minim cost maxim satisfact document code read test run minim side effect regress test pend prioriti integr revalid figur softwar mainten process model request chang chang softwar design chang alter compon test chang merg adapt perfect correct prevent minim defect minim effort minim cost maxim satisfact document code read test run decomposit slice side effect regress test pend prioriti figur new softwar mainten process model merg two disjoint domain horwitz et al address modif problem start base program two modif it b whenev chang made base creat b interfer in sens defin paper algorithm produc program integr b algorithm predic assumpt differ behavior variant program base rather differ text signific must preserv m horwitz et al restrict chang made base thu algorithm produc approxim undecid problem determin whether behavior interfer sidestep unsolv problem constrain modif made techniqu akin limit place softwar maintain chang must done context independ depend provid context interest note howev work use program slice determin potenti interfer merg note program variant name them easili embed chang control system rc moreov direct sum natur compon exploit build relat famili softwar is compon sum long depend code section match exactli intersect independ domain also follow approach compon construct weiser discuss slicebas metric overlap measur mani statement slice found slice measur mean ratio nonuniqu uniqu statement slice parallel number slice statement common comput number slice pairwis overlap certain threshold tight number statement everi slice express ratio program length program high overlap parallel low tight would decompos nice lattic would get deep tangl shown data flow techniqu program slice use form decomposit softwar system decomposit yield method maintain use maintain abl modifi exist code cleanli sens chang assur complet contain modul consider unseen linkag modifi code infect modul r practic interprocedur dataflow analysi algorithm experiment softwar engin merg softwar extens flow diagram languag two format rule techniqu debug parallel program flowback analysi program depend graph use optim use program slice softwar mainten surgeon assist limit side effect use program decomposit guid modif program decomposit scheme applic softwar modif test measur manag softwar mainten denot program slice integr noninterf version program integr noninterf version program interprocedur slice use depend graph data flow analysi applic softwar mainten survey data flow analysi techniqu c program languag dynam program slice data flow test stad evalu variat program slice debug experi slicingbas debug aid automat program bug locat program slice relationship slice modul cohes program depend graph softwar develop environ ment semant program slice state softwar mainten rc system version control kill code program slice formal program slice programm use slice debug program slice tr informationflow dataflow analysi whileprogram rcsmyampersandmdasha system version control c program languag experiment softwar engin merg softwar extens program depend graph use optim experi slicingbas debug aid state softwar mainten dynam program slice integr noninterf version program integr nonint version program relationship slice modul cohes interprocedur slice use depend graph data flow test stad use program slice softwar mainten programm use slice debug practic interprocedur data flow analysi algorithm flow diagram ture machin languag two format rule semanticsbas program integr program slice program depend graph softwar develop environ program slice evalu variat program slice debug dataflow ada ctr m samadzadeh w wichaipanitch interact debug tool c base dynam slice dice proceed acm confer comput scienc p februari indianapoli indiana unit state daniel jackson abstract analysi aspect acm sigsoft softwar engin note v n p juli zhang jose emilio labra gayo agustn cernuda del ro monad program slicer acm sigplan notic v n may toma vagoun alan hevner feasibl input domain partit softwar test rc case studi annal softwar engin p melissa p chase steven m christey david r harri alexand s yeh recov softwar architectur multipl sourc code analys acm sigplan notic v n p juli csaba farag tam gerg handl pointer unstructur statement forward comput dynam slice algorithm acta cybernetica v n p decemb christian lindig gregor snelt assess modular structur legaci code base mathemat concept analysi proceed th intern confer softwar engin p may boston massachusett unit state sandrin blazi philipp facon partial evalu program comprehens acm comput survey csur v ne sept jarrett rosenberg problem prospect quantifi softwar maintain empir softwar engin v n p hee beng kuan tan tok wang ling correct program slice databas oper ieee softwar v n p march ettor merlo pierreyv gagn jeanfrancoi girard kosta kontogianni lauri hendren prakash panangaden renato de mori reengin user interfac ieee softwar v n p januari ramachenga r valasareddi dori l carver represent model procedur program mainten proceed acm symposium appli comput p februari march san antonio texa unit state jianjun zhao hongji yang lime xiang baowen xu chang impact analysi support architectur evolut journal softwar mainten research practic v n p septemberoctob keith gallagh mark harman sebastin danic guarante inconsist avoid softwar evolut journal softwar mainten research practic v n p novemb mangala gowri nanda s ramesh slice concurr program acm sigsoft softwar engin note v n p sept jingd cheng task depend net ada softwar develop acm sigada ada letter vxii n p julyaug daniel jackson eugen j rollin new model program depend revers engin acm sigsoft softwar engin note v n p dec david binkley precis execut interprocedur slice acm letter program languag system lopla v n p marchdec paolo tonella filippo ricca web applic slice presenc dynam code gener autom softwar engin v n p april jenchieh ou daniel g saab qiang qiang jacob a abraham reduc verif overhead rtl slice proceed th great lake symposium great lake symposium vlsi march stresalago maggior itali fangjun wu tong yi slice z specif acm sigplan notic v n august marku mock darren c atkinson craig chamber susan j egger program slice dynam pointsto set ieee transact softwar engin v n p august tibor gyimthi rpd beszd istn forgc effici relev slice method debug acm sigsoft softwar engin note v n p nov ettor m merlo giuliano antoniol static measur subset intraprocedur data flow test coverag base node coverag proceed confer centr advanc studi collabor research p novemb mississauga ontario canada xiaoxia ren fenil shah frank tip barbara g ryder ophelia chesley chianti tool chang impact analysi java program acm sigplan notic v n octob jon beck david eichmann program interfac slice revers engin proceed th intern confer softwar engin p may baltimor maryland unit state vivekananda m vedula jacob a abraham jayanta bhadra raghuram tupuri hierarch test gener approach use program slice techniqu hardwar descript languag journal electron test theori applic v n p april durga p mohapatra rajeev kumar rajib mall d s kumar mayank bhasin distribut dynam slice java program journal system softwar v n p decemb martin p robillard automat gener suggest program investig acm sigsoft softwar engin note v n septemb houari a sahraoui hakim louni walclio melo hafedh mili concept format base approach object identif procedur code autom softwar engin v n p octob thoma rep geneviev rosay precis interprocedur chop acm sigsoft softwar engin note v n p oct donglin liang mari jean harrold equival analysi applic improv effici program slice acm transact softwar engin methodolog tosem v n p juli bogdan korel satish yalamanchili forward comput dynam program slice proceed acm sigsoft intern symposium softwar test analysi p august seattl washington unit state bogdan korel comput dynam program slice unstructur program ieee transact softwar engin v n p januari rob law overview debug tool acm sigsoft softwar engin note v n p march jehad al dallal use computingallslic algorithm measur function cohes proceed th confer iast intern multiconfer softwar engin p februari innsbruck austria jehad al dallal effici algorithm comput program static slice proceed th wsea intern confer softwar engin parallel distribut system p februari salzburg austria thoma rep susan horwitz mooli sagiv geneviev rosay speed slice acm sigsoft softwar engin note v n p dec loren larsen mari jean harrold slice objectori softwar proceed th intern confer softwar engin p march berlin germani paolo tonella giuliano antoniol roberto fiutem ettor merlo flow insensit c pointer polymorph analysi applic slice proceed th intern confer softwar engin p may boston massachusett unit state jingd cheng task depend net concurr system ada applic proceed confer triada p novemb st loui missouri unit state marku mock darren c atkinson craig chamber susan j egger improv program slice dynam pointsto data acm sigsoft softwar engin note v n novemb marku mock darren c atkinson craig chamber susan j egger improv program slice dynam pointsto data proceed th acm sigsoft symposium foundat softwar engin novemb charleston south carolina usa anni t t ying gail c murphi raymond ng mark c chucarrol predict sourc code chang mine chang histori ieee transact softwar engin v n p septemb tun li yang guo sikun li automat circuit extractor hdl descript use program slice journal comput scienc technolog v n p septemb hiral agraw slice program jump statement acm sigplan notic v n p june anthoni m sloan jason holdsworth beyond tradit program slice acm sigsoft softwar engin note v n p may martin p robillard gail c murphi concern graph find describ concern use structur program depend proceed th intern confer softwar engin may orlando florida mangala gowri nanda s ramesh interprocedur slice multithread program applic java acm transact program languag system topla v n p novemb j m bieman l m ott measur function cohes ieee transact softwar engin v n p august gautier bastid abdelhak seriai mourad oussalah adapt softwar compon structur fragment proceed acm symposium appli comput april dijon franc ingo brckner bjrn metzler heik wehrheim optim slice formal specif deduct verif nordic journal comput v n p june david binkley semant guid regress test cost reduct ieee transact softwar engin v n p august erwan jahier mireil ducass gener program monitor trace analysi theori practic logic program v n p juli john field g ramalingam frank tip parametr program slice proceed nd acm sigplansigact symposium principl program languag p januari san francisco california unit state m harman s danic project function model imper program acm sigplan notic v n p nov jen krink slice chop path condit barrier softwar qualiti control v n p decemb sebastian danic mark harman rob hieron john howroyd michael r laurenc equival linear free liber structur program schema decid polynomi time theoret comput scienc v n p march hon f li juergen rill dhrubajyoti goswami granularitydriven dynam predic slice algorithm messag pass system autom softwar engin v n p januari ahm e hassan richard c holt replay develop histori assess effect chang propag tool empir softwar engin v n p septemb roberto giacobazzi isabella mastroeni nonstandard semant program slice higherord symbol comput v n p decemb z a alkhanjari m r woodward haider ali ramadhan n s kutti effici critic slice fault local softwar qualiti control v n p januari michael r laurenc sebastian danic mark harman rob hieron john howroyd equival conserv free linear program schema decid theoret comput scienc v n p januari g griswold david notkin architectur tradeoff meaningpreserv program restructur tool ieee transact softwar engin v n p april filippo lanubil giusepp visaggio extract reusabl function flow graphbas program slice ieee transact softwar engin v n p april gerardo canfora aniello cimitil ugo de carlini andrea de lucia extens system sourc code analysi ieee transact softwar engin v n p septemb g b mund rajib mall effici interprocedur dynam slice method journal system softwar v n p june sebastian danic mark harman espresso slicer gener proceed acm symposium appli comput p march como itali g griswold david notkin autom assist program restructur acm transact softwar engin methodolog tosem v n p juli thoma w rep loui b rall comput divid differenc divideddiffer arithmet higherord symbol comput v n p marchjun dave binkley sebastian danic tibor gyimthi mark harman ko kiss bogdan korel theoret foundat dynam program slice theoret comput scienc v n p august s ducass s tichelaar dimens reengin environ infrastructur journal softwar mainten research practic v n p septemberoctob ramkrishna chatterje barbara g ryder william a landi complex pointsto analysi java presenc except ieee transact softwar engin v n p june mark harman david binkley sebastian danic amorph program slice journal system softwar v n p octob sebastian danic moham daoudi chri fox mark harman robert m hieron john r howroyd lahcen ourabya martin ward consu lightweight program condition journal system softwar v n p septemb dave binkley sebastian danic tibor gyimthi mark harman ko kiss bogdan korel formalis relationship form program slice scienc comput program v n p octob j hagemeist b lowther p oman x yu w zhu annot bibliographi softwar mainten acm sigsoft softwar engin note v n p april m g j van den brand p klint c verhoef revers engin system renovationan annot bibliographi acm sigsoft softwar engin note v n p jan david binkley nicola gold mark harman empir studi static program slice size acm transact softwar engin methodolog tosem v n pe april barbara g ryder william a landi philip a stock sean zhang rita altuch schema interprocedur modif sideeffect analysi pointer alias acm transact program languag system topla v n p march david binkley sourc code analysi road map futur softwar engin p may c verhoef toward autom modif legaci asset annal softwar engin v n p hafedh mili fatma mili ali mili reus softwar issu research direct ieee transact softwar engin v n p june baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v n march