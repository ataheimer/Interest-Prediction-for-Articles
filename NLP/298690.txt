t optim parallel algorithm find proxim point applic a abstractconsid set p point plane sort xcoordin point p p said proxim point exist point q xaxi p closest point q point p proxim point problem determin proxim point p main contribut propos optim parallel algorithm solv instanc size n proxim point problem begin develop worktim optim algorithm run olog log n time use n over log log n commoncrcw processor go show algorithm implement run olog n time use n over log n erew processor addit worktim optim erew algorithm turn also timeoptim second main contribut show proxim point problem find interest quit unexpect applic digit geometri imag process first applic present worktim optim parallel algorithm find convex hull set n point plane sort xcoordin algorithm run olog log n time use n over log log n commoncrcw processor show algorithm implement run olog n time use n over log n erew processor next show proxim point algorithm afford us worktim optim resp timeoptim parallel algorithm variou fundament digit geometri imag process problem specif show voronoi map euclidean distanc map maxim empti circl largest empti circl relat problem involv binari imag size nn solv olog log n time usingn over log log ncommoncrcw processor olog n time use n over log n erew processor b introduct consid parallel algorithm solv instanc size n problem p n time use p processor tradit main complex measur assess perform work support part nsf grant ccr onr grant n grantinaid encourag young scientist ministri educ scienc sport cultur japan dept electr comput engin nagoya institut technolog showaku nagoya japan z depart comput scienc old dominion univers norfolk virginia usa olariucsoduedu algorithm amount w n work perform algorithm defin product n algorithm term workoptim w n thetat n n run time fastest sequenti algorithm problem algorithm worktim optim workoptim and addit run time p n best possibl among workoptim algorithm model needless say one challeng parallel algorithm design produc workoptim but inde whenev possibl worktim optim algorithm occasion even stronger complex metric use socal timeoptim specif algorithm timeoptim given model problem cannot solv faster model even unbound number processor avail paper assum parallel random access machin pram short consist synchron processor access common memori refer interest reader excel discuss pram model let p set point plane sort xcoordin point p proxim point p exist point xaxi closer p point p proxim point problem ask determin proxim point p clearli proxim point problem solv use algorithm find voronoi diagram howev argu comput voronoi diagram log n time even n point sort xcoordin thu naiv approach yield optim solut proxim point problem recent breu et al propos lineartim algorithm proxim point problem spite optim algorithm breu et al reli crucial way stack oper notori hard parallel first main contribut propos parallel algorithm solv instanc size n proxim point problem specif first exhibit algorithm run olog log n time use n log log n commoncrcw processor go show algorithm implement run olog n time use n log n erew processor commoncrcw algorithm worktim optim erew algorithm turn also timeoptim establish worktim optim commoncrcw algorithm reduct minimum find problem timeoptim erew algorithm follow reduct problem second main contribut show proxim point problem interest quit unexpect applic digit geometri imag process begin present worktim optim parallel algorithm comput convex hull set n point plane sort xcoordin algorithm run olog log n time use n log log n common crcw processor olog n time use n log n erew processor show algorithm worktim optim crcw model and addit timeoptim erew numer parallel algorithm propos comput convex hull sort point plane recent chen present olog ntime algorithm use n log n processor chen et al present workoptim algorithm run olog ntime algorithm use n log n erew processor olog log ntime algorithm use n log log n commoncrcw processor quit recent berkman et al present olog log ntime algorithm use n log log n commoncrcw processor algorithm featur perform howev algorithm much simpler intuit further best knowledg worktim optim crcw version timeoptim erew version algorithm solv yet given binari imag voronoi map assign pixel imag posit nearest black pixel euclidean distanc map assign pixel euclidean distanc nearest black pixel empti circl imag circl whose interior contain white pixel maxim empti circl empti circl contain empti circl largest empti circl empti circl largest radiu refer reader figur illustr largest squar diamond ngon etc defin similarli comput known numer applic rang cluster shape analysi handoff manag cellular system imag compress decomposit reconstruct applic propos algorithm comput voronoi map euclidean distanc map maxim empti circl largest empti circl binari imag size n theta n begin present worktim optim algorithm comput voronoi map euclidean distanc map binari imag size n theta n olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor also show distanc map variou metric includ well known l k metric k also comput manner go show maxim empti circl largest empti circl n theta n binari imag found olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor turn out minim chang algorithm applic variou kind empti figur includ squar diamond ngon etc recent chen et al breu et al present on time sequenti algorithm comput euclidean distanc map roughli time hirata present simpler sequenti algorithm comput distanc map variou distanc metric includ euclidean neighbor neighbor chamfer octagon number parallel algorithm comput euclidean distanc map develop variou parallel model particular follow result report recent literatur lee et al figur illustr euclidean distanc map largest empti circl present olog ntime algorithm use n erew processor pavel akl present algorithm run olog n time use n erew processor clearli two algorithm workoptim chen present workoptim o n time algorithm use p p log p n erew processor yield on log ntime algorithm use n log n erew processor fujiwara et al present workoptim algorithm run olog n time use n log n erew processor o log n log log n time use n log log n log n commoncrcw processor although fujiwara et al claim algorithm applic variou distanc map closer analysi reveal appli distanc metric main problem seem algorithm use geometr transform depend crucial way properti euclidean distanc and therefor seem gener see it euclidean distanc map algorithm three major advantag fujiwara algorithm first perform algorithm crcw superior second algorithm appli larg array distanc final algorithm much simpler intuit remaind paper organ follow section introduc proxim point problem euclidean distanc metric discuss number technic crucial ingredi subsequ algorithm section present parallel algorithm commoncrcw erew section prove algorithm worktim respect timeoptim section present worktim optim parallel algorithm comput convex hull sort point plane section use proxim point algorithm comput voronoi map euclidean distanc map maxim empti circl largest empti circl binari imag section offer conclud remark open problem final appendix discuss distanc metric algorithm present section appli proxim point problem first look section introduc proxim point problem along number geometr result lay foundat subsequ algorithm throughout assum point p repres cartesian coordin xp yp usual denot euclidean distanc planar point p q dp consid collect n point sort xcoordin is assum without loss gener point p distinct xcoordin lie xaxi reader difficulti confirm assumpt made conveni impact complex algorithm recal everi point p p locu point plane closer point p refer voronoi polygon associ p denot v i collect voronoi polygon point p partit plane voronoi diagram p see p let n locu point q xaxi dq word q q belong intersect xaxi v i illustr figur turn impli must interv xaxi interv may empti point p p term proxim point whenev interv nonempti thu voronoi diagram p partit xaxi proxim interv sinc point sort xcoordin correspond proxim interv order left right point q xaxi said boundari point p p j q equidist p p j is dp clear p boundari point proxim point p p j q intersect close interv j summar previou discuss state follow result proposit follow statement satisfi ffl interv xaxi ffl interv lie xaxi order is nonempti j lie left figur illustr proxim interv figur illustr addit p g ffl nonempti proxim interv j adjac boundari point refer figur among seven point five point proxim point other not note leftmost point p rightmost point p n alway proxim point given three point say domin p p k whenev fail proxim point set consist three point clearli p j domin p p k boundari p p j right p j p k sinc boundari two point comput o time task decid everi tripl p whether p j domin p p k take o time use singl processor consid collect point plane sort xcoordin point p right p is xp xp interest updat proxim interv p reflect addit p p illustr figur assum without loss gener point p proxim point let n correspond proxim interv further let p updat proxim interv p fpg let p point adjac iii proposit boundari point p p separ consequ ii impli proxim interv n must empti furthermor addit p p affect proxim interv j word empti point p domin p p thu everi point n domin otherwis boundari would left p j p would impli nonempti interv two boundari correspond j contradict summar follow result lemma exist uniqu point p p that ffl proxim point p fpg ffl point p j domin ffl domin interv j empti consecut xaxi separ boundari point p collect proxim point sort xcoordin let p point left p is xp xp refer take note follow companion result lemma proof ident and thu omit lemma exist uniqu point p p that ffl proxim point p fpg ffl domin p p j moreov ffl point p j domin p p j interv j empti p consecut xaxi separ boundari point p uniqu point p whose exist guarante lemma term contact point p p second statement lemma suggest task determin uniqu contact point p point p right left p reduc essenti binari search now suppos set two subset g interest updat proxim interv process merg pl pr purpos let n proxim interv pl pr respect as sume without loss gener proxim interv nonempti let proxim interv posit state prove next result turn key ingredi algorithm lemma exist uniqu pair proxim point pr ffl proxim point pl pr empti ffl proxim interv consecut separ boundari point proof let smallest subscript p pl contact point pl point pr similarli let j largest subscript point pr contact point pr point pl clearli point pl left p proxim point p likewis point pr left p j proxim point p final lemma everi point pl left p must proxim point p similarli lemma everi point pr right p must proxim point p proof lemma complet point p p j whose exist guarante theorem term contact point pl pr refer reader figur illustr here contact point pl pr p p next discuss geometr properti enabl comput contact point p p j pl pr point p k pl let q k denot contact point p k pr specifi lemma follow result lemma point p k domin p kgamma q k k i domin otherwis figur illustr contact point two set point proof domin p kgamma q k k must empti thu lemma guarante p k k i domin p kgamma q k suppos p k i domin p kgamma q k then boundari point p k q k right p kgamma p k thu nonempti interv two boundari correspond k contradict therefor p k i n domin p kgamma q k complet proof lemma suggest simpl binari searchlik approach find contact point p two set pl pr fact use similar idea breu et al propos sequenti algorithm comput proxim point npoint planar set on time algorithm use stack store proxim point found and consequ seem hard parallel parallel algorithm proxim point problem begin discuss parallel algorithm solv proxim point problem commoncrcw algorithm convert run erew reli part solut wellknown leftmoston problem given sequenc b determin smallest i n b lemma instanc size n leftmoston problem solv o time use n commoncrcw processor consid set point xp captur neighbor proxim point point use three indic c l r defin follow nonproxim point proxim point figur illustr indic l c r point p proxim pointg l proxim pointg r proxim pointg refer reader figur illustr note must l proxim point p j l c next interest find contact point set new point p xp n assum everi i n c l r avail m m n processor dispos algorithm essenti perform mari search use lemma algorithm findcontactpointp p extract sampl sp size consist point p c p everi k k check whether point p c k n domin p l k n p whether domin p c k n p p c k n domin p r k n domin desir contact point point p r k n domin p c k n p p c k n domin p l k n p step execut recurs algorithm set point p g find contact point set p contain l k n point henc depth recurs o log n log notic further algorithm findcontactpoint perform concurr read write thu follow result lemma given set n point plane sort xcoordin point p xp n task find contact point p p perform o log n log use erew processor next consid two set point plane xp assum everi indic c l r given processor avail us follow algorithm find contact point pl pr mari search use lemma algorithm findcontactpointsbetweensetspl pr sampl point spl pl use algorithm findcontactpoint p processor avail each determin sampl point correspond contact point q c k n pr step k k check whether point p c k n domin p l k n q c k n whether point p r k n domin p c k n q c k n p c k n domin yet p r k n is output q c k n desir contact point step find k point p r k n domin p c k n q c k n domin p l k n q c k n step execut recurs algorithm findcontactpointsbetweenset set p pr return desir contact point hard see algorithm findcontactpointsbetweenset involv concurr read becaus sever processor may access point concurr involv concurr oper lemma step take o log n log time crew model step run clearli o time sinc p l contain n depth recurs o log n log thu altogeth algorithm findcontactpointsbetweenset run o log n use crew processor lemma given set point plane xp task find contact point pl pr perform o log n use crew processor next interest design algorithm comput proxim point set p n point plane sort xcoordin olog log n time commoncrcw assum n processor avail us begin determin everi i indic c l r inform avail remain done retain point p c i detail follow algorithm findproximatepointsp partit set p n subset everi k k g everi point p p k k n gamma determin indic c l r local p k comput contact point pair set p use n processor avail let q ij p denot contact point p p j step everi p find rightmost contact point p rc among point q ij find leftmost contact point p lc point q ij j i clearli xp rc ig step set p proxim point lie rc lc inclus proxim point p updat c clear step perform o log n log run o time use lemma moment reader may wonder updat indic perform effici fact turn out updat done o time sinc task updat l r is essenti updat c focu c p point p j rc valu c j chang point p j lc j valu c j must chang lc point p j valu c j chang lc proxim point howev p contain proxim point find nearest subset contain proxim point thi first check whether p proxim point use n processor each thu total processor use task next use lemma determin k contain proxim pointg p sinc p n group task done o time n processor and total n delta n processor use thu step done o time use n processor let tcrcw n run time algorithm find recurr describ worst case run time algorithm findproximatepoint note step execut recurs algorithm n point step run o time thu confirm tcrcw n olog log n thu have lemma instanc size n proxim point problem solv olog log n time use n commoncrcw processor next show number processor reduc factor log log n without increas run time idea follow begin partit set p n log log n subset log log n size log log n next use algorithm sequentialproximatepoint find proxim point within subset olog log n sequenti time and process remov p point proxim point everi i n log log n let proxim point set p moment execut algorithm findproximatepoint p log log n sinc n processor requir order updat indic c l r o proceed slightli differ idea follow execut algorithm current proxim point ceas proxim point maintain inform effici use rang log log n log log n p fp il current proxim point execut algorithm p may contain proxim point find neighbor proxim point use pointer l log log n log log n set p j contain proxim pointg set p j contain proxim pointg use strategi find contact point point p o log n log use processor discuss lemma thu contact point two subset found manner lemma final algorithm lemma updat step o time use o n log log n processor summar follow result theorem instanc size n proxim point problem solv olog log n time use n log log n commoncrcw processor close section point algorithm findproximatepoint implement effici erew purpos reli part follow well known result lemma singl step execut mprocessor crcw simul mprocessor erew olog m time lemma step algorithm perform olog n time use processor crcw perform step o time use n processor let terew n worstcas run time erew then recurr describ confirm n olog n consequ have lemma instanc size n proxim point problem solv olog n time use n erew processor use essenti idea commoncrcw reduc number processor factor log n without increas comput time specif case erew n point partit n log n subset size log n thu theorem instanc size n proxim point problem solv olog n time use n log n erew processor lower bound main goal section show run time commoncrcw algorithm proxim point problem develop section cannot improv retain work optim thi effect prove commoncrcw algorithm worktim optim show erew algorithm timeoptim workoptim algorithm obviou order solv proxim point problem everi point must access least onc n work requir algorithm solv problem lower bound argument reli part follow fundament result valiant lemma task find minimum maximum n real number log n time crcw provid n log o n processor avail show lower bound lemma hold even item nonneg lemma task find minimum maximum n nonneg nonposit real number requir log n time crcw provid n log o n processor avail proof assum minimum maximum n nonneg number comput olog log n time use n log o n crcw processor assumpt find minimum n real number olog log n time follow first o time check whether neg number input not minimum input item comput olog log n time neg number exist replac everi nonposit number find maximum absolut valu result sequenc olog log n time maximum thu comput correspond minimum origin input thu minimum n real number comput olog log n time contradict lemma further reli follow classic result cook et al lemma task find minimum maximum n real number crew therefor also erew even infinit mani processor avail shall reduc task find minimum collect n nonneg proxim point problem plan show instanc size n problem find minimum collect nonneg number convert o time instanc size n proxim point problem involv sort point plane purpos let set arbitrari nonneg real number input minimum problem construct set point plane set everi i notic construct guarante point p sort xcoordin everi i n distanc point p origin exactli intuit construct place n point circl center origin precis everi i n point p p ni place circl c radiu import note construct carri o time use n erew processor subsequ argument find conveni reli next technic result lemma p p in proxim point minimum a proof let minimum refer figur clearli c circl smallest radiu contain p p in point lie outsid c henc p p in closest point p origin thu boundari lie left origin true p j would closer origin p in follow simpl fact prove essenti way in in figur illustr p lemma boundari point p j p in lie left origin right boundari point p j p lie left origin right point n boundari p j p lie left p j p ni p j proxim point thu j i either p j p jn fail proxim point further point p boundari lie left origin n lie right origin or origin itself thu p proxim point fact p in proxim point follow mirror argument complet proof lemma guarante minimum determin o time proxim point p known now lemma impli follow import result theorem algorithm solv instanc size n proxim point problem crcw must take omegagammak log n time worst case provid n log o n processor avail use exactli construct combin lemma obtain follow lower bound crew theorem algorithm solv instanc size n proxim point problem crew also erew must take omegagammak n time even infinit number processor avail notic erew algorithm proxim point problem present section run olog n time use n log n processor featur work time perform crewpram theorem correspond crew algorithm also timeoptim straightforward extend previou argument handl case l k metric specif case everi i n point allow us find minimum a thu theorem provid lower bound solv proxim point problem distanc metric l k comput convex hull main goal section show proxim point algorithm develop section yield worktim optim resp timeoptim algorithm comput convex hull set point plane sort xcoordin begin discuss detail algorithm second subsect establish worktim resp time optim convex hull algorithm set n point plane xp line segment partit convex hull p lower hull lie segment upper hull lie it focu comput lower hull onli comput upper hull similar sequenc item prefix maxima sequenc maxfa g later refer state follow result lemma task comput prefix maxima prefix minima nitem sequenc perform olog n time use n log n erew processor olog log n time use n log log n commoncrcw processor set n point plane sort xcoordin xp defin set let n point set everi i n q import note point q figur illustr proof lemma also sort xcoordin follow surpris result captur relationship set p q defin lemma everi j j n p j extrem point lower hull p q j proxim point q proof extrem point p q j proxim point q thu lemma correct consid arbitrari j rang arbitrari subscript boundari q q j q j q k respect refer figur clearli thu similarli obtain easi see point q j domin q q k xb notic slope line segment xb xb k respect thu point p j lie segment p p k xb consequ point lie segment p p k point q j domin q q k word point p j extrem point lower hull p q j proxim point q lemma suggest follow algorithm determin extrem point lower hull g algorithm findlowerhullp construct set set everi i n determin proxim point q report p extrem point lower hull p whenev q proxim point q preprocess step amount translat set p vertic way everi affin transform affect convex hull p correct simpl algorithm follow directli lemma argu run time note lemma step take olog log n time optim work commoncrcw olog n time optim work erew step run o time use optim work either commoncrcw erew theorem step take olog log n time optim work commoncrcw olog n time optim work erew thu prove follow result theorem task comput convex hull set n point sort xcoordin perform olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor optim convex hull algorithm main goal subsect show convex hull algorithm describ previou subsect worktim optim commoncrcw and addit timeoptim crew erew clearli everi point must read least solv proxim point problem thu ontim requir solv problem convex hull algorithm commoncrcw workoptim next show given set n nonneg integ maximum determin use algorithm comput convex hull set sort point plane purpos exhibit otim reduct maximum problem convex hull problem proof techniqu similar one employ proxim point problem given construct set point plane set everi i set point plane sort xcoordin follow result relat set p lemma item maximum p p in point upper hull p proof let maximum a construct p p in point upper hull p further none point p belong upper hull p thu exist subscript j j i p j p ni belong upper hull p complet proof consequ find maximum need find index p p ni point upper hull therefor problem find upper hull n sort point plane least hard problem find maximum n nonneg number thu follow import result theorem task find convex hull n point log n time crcw provid n log o n processor avail similarli follow companion result theorem task find convex hull n point n time crew even infinit mani processor avail theorem convex hull algorithm develop previou section worktim optim addit erew algorithm worktim timeoptim applic imag process binari imag size n theta n maintain array b ij n customari refer pixel i j black b row imag number bottom start likewis column number left right column leftmost notat pixel b southwest corner imag voronoi map associ everi pixel closest black pixel in euclidean metric formal voronoi map function everi i j euclidean distanc pixel i euclidean distanc map imag associ everi pixel euclidean distanc closest black pixel formal euclidean distanc map function r everi i j subsequ argument find conveni reli solut neareston problem given sequenc s s determin closest everi item a direct corollari lemma lemma instanc size n neareston problem solv olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor assum binari imag size n theta n discuss avail n processor log n commoncrcw n erew outlin basic idea algorithm comput voronoi map euclidean distanc map imag i begin determin everi pixel row j j n nearest black pixel ani column subimag i precis everi pixel i j associ valu next construct instanc proxim point problem everi row j j n imag involv set p j point plane defin p solv parallel instanc proxim point problem determin everi proxim point p ij p j correspond proxim interv j fix determin everi pixel i that perceiv point xaxi ident proxim interv belong allow pixel i j determin ident nearest pixel it task execut row parallel determin everi pixel i row j nearest black pixel detail spell follow algorithm algorithm voronoiandeuclideandistancemapi step pixel i j comput distanc ng nearest black pixel column i j subimag i step everi j ng comput proxim point ep j p j step everi point p ep j determin proxim interv p j step everi i n determin proxim interv p j point i correspond pixel i j belong correct algorithm easi see turn complex step perform ot n time use processor avail use lemma theorem guarante step take ot use n processor lemma step perform complex thu follow import result theorem task comput voronoi map euclidean distanc map binari imag size n theta n perform olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor recal empti circl imag circl fill white pixel task comput largest empti circl imag recur theme pattern recognit robot digit geometri empti circl said maxim contain empti circl empti circl said maximum radiu larg possibl clear maximum empti circl also maxim convers turn task determin maxim resp maximum empti circl input imag i algorithm allmaximalemptycirclesi comput euclidean distanc map i step pixel i j comput smallest distanc u jg border imag then comput r largest radiu everi empti circl center pixel i j step pixel i check whether exist neighbor pixel i circl radiu r ij origin i j includ circl radiu r j origin i circl exist label circl radiu r ij center maxim empti circl g everi pixel i r empti circl largest empti circl i clearli step simpl algorithm perform olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor thu corollari task label maxim empti circl report maximum empti circl binari imag size n theta n perform olog log n time use n log log n commoncrcw olog n time use erew n log n processor conclus first main contribut propos optim parallel algorithm solv instanc size n proxim point problem first algorithm run olog log n time use n log log n commoncrcw processor algorithm can fact implement run olog n time use n log n erew processor commoncrcw algorithm worktim optim erew algorithm is addit timeoptim also timeoptim second main contribut show proxim point problem find interest quit unexpect applic digit geometri imag process first applic present worktim optim parallel algorithm find convex hull set n point plane sort xcoordin algorithm complex proxim point algorithm next show proxim point algorithm afford us worktim optim resp timeoptim parallel algorithm variou fundament digit geometri imag process problem specif show voronoi map euclidean distanc map maxim empti circl largest empti circl relat problem further prove worktim respect time optim proxim point convex hull algorithm howev imag process problem discuss known whether algorithm develop optim conjectur that problemsomegagammaobl log n time lower bound crcw provid algorithm worktim optim crew erew logicalor problem reduc imag process problem quit easili thereforeomegagammah n time lower bound crew erew r euclidean distanc transform polymorph processor array comput vision fast parallel algorithm find convex hull sort point set centr maxim disc distanc transform linear time euclidean distanc transform algorithm effici geometr algorithm erew pram optim algorithm complet euclidean distanc transform design systol architectur complet euclidean distanc tran form effici algorithm complet euclidean distanc transform meshconnect simd fast algorithm euclidean distanc map d binari imag optim parallel algorithm comput convex hull parallel method prefix convex hull problem simd hypercub algorithm complet euclidean distanc transform upper lower time bound parallel random access machin without simultan write comput voronoi diagram sort point set pattern classif scene analysi optim parallel algorithm euclidean distanc map unifi lineartim algorithm comput distanc map introduct parallel algorithm effici parallel geometr algorithm mesh tree parallel comput exact euclidean distanc transform modifi distanc transform raster scan valu propag effici algorithm euclidean distanc transform comput geometri introduct skeleton algorithm maxima track euclidean distanc transform find maximum parallel comparison problem gener skeleton discret euclidean distanc map tr ctr ling chen yi pan xiaohua xu scalabl effici parallel algorithm euclidean distanc transform larpb model ieee transact parallel distribut system v n p novemb amitava datta subbiah soundaralakshmi fast scalabl algorithm euclidean distanc transform linear array reconfigur pipelin bu system journal parallel distribut comput v n p march