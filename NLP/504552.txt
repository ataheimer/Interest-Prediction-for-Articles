t new lower bound list updat problem partial cost model a optim competit ratio random onlin list updat algorithm known least remain gap yet close present new lower bound partial cost model construct base game tree incomplet inform seem gener use competit analysi onlin algorithm elsevi scienc bv b introduct list updat problem classic onlin problem area selforgan data structur request item unsort linear list must serv maintain list access cost remain small assum partial cost model access ith item list incur cost unit simpler analyz origin full cost model cost i item request may move free charg closer front list call exchang two consecut item list incur cost one call paid exchang onlin algorithm must serv sequenc oe request one item time without knowledg futur request optimum offlin algorithm know entir sequenc oe advanc serv minimum cost oe onlin algorithm serv oe cost oe call ccompetit suitabl constant b request sequenc oe competit ratio c inequ standard yardstick measur perform onlin algorithm wellknown move tofront rule mtf exampl move item front list request competit also best possibl competit determinist onlin algorithm list updat problem institut theoret comput scienc eth zurich zurich switzerland email ambuehlinfethzch gaertnerinfethzch mathemat depart london school econom london wca ae great britain email stengelmathslseacuk support heisenberg grant deutsch forschungsgemeinschaft hospit eth zurich research grate acknowledg random algorithm perform better averag algorithm call ccompetit theta oe expect taken random choic onlin algorithm fur thermor call algorithm strictli ccompetit hold best random list updat algorithm known date competit algorithm comb serv request sequenc probabl use algorithm bit altern move request item front leav place probabl comb treat request sequenc use determinist timestamp algorithm request item x move front first item list request sinc last request x random use oblivi adversari gener request sequenc without observ random choic onlin algorithm adversari observ choic gener request algorithm deter minist best competit therefor consid interest situat oblivi adversari lower bound competit ratio prove use yao theorem probabl distribut request sequenc result expect competit ratio determinist onlin algorithm higher everi determinist random onlin algorithm competit ratio higher teia describ simpl distribut request sequenc that adapt partial cost model show lower bound optim competit ratio list updat problem therefor true valu yet unknown list four item possibl construct onlin list updat algorithm competit therefor optim paper show lower bound greater list least five item prove bound standard assumpt algorithm may use paid exchang one also prove lower bound variant list updat problem free exchang allow purpos modifi extend method certain way mention end paper construct use game tree altern adversari gener request onlin algorithm serv it adversari inform action onlin algorithm game tree imperfect inform consid finit tree request ratio onlin versu optim offlin cost payoff adversari defin zerosum game solv linear pro gram game tree suffici deep restrict suitabl subset request tree larg order stay solvabl game valu show strictli ccompetit onlin algorithm fulfil c order deriv new lower bound competit ratio c accord nonzero constant b one gener arbitrarili long request sequenc achiev compos game tree repetit show drawback assumpt partial instead full cost model latter model request ith item list incur cost i known lower bound gamma n list n item result teia yield lower bound competit ratio much list short fact algorithm comb competit n prove lower bound full cost model would extend construct longer list unfortun straightforward extens cannot compens reduct competit ratio n or term proport n consid full instead partial cost model case remain open nevertheless think result partial cost model still interest sinc model canon one look analysi still close origin problem formul pairwis analysi partial order analysi list updat algorithm greatli simplifi observ separ rel movement pair item list let oe sequenc request consid determinist algorithm process oe two item x list let xy oe number time request behind x list vice versa easi show xy oe l set item list way xy oe repres cost onlin algorithm project unord pair fx yg item let oe xy request sequenc oe item x delet mani list updat algorithm like mtf bit timestamp project sens time rel order two item x list depend project request sequenc oe xy initi order x y denot xy x preced y in gener list item squar bracket denot current order list maintain algorithm optim offlin algorithm project cost xy oe clearli least high cost serv oe xy optim twoelement list consist x y latter cost easi determin sinc exampl alway optim move item front first two success request fact item must move front first three success request hand usual optim move item request onc henc two item x x preced y onlin algorithm serv request either leav behind x move front x which either way mistak depend whether request x not base observ teia construct lower bound competit ratio request gener run repeat indefinit start run list current maintain offlin algorithm particular list travers front back request item equal probabl either three time item request three time move front first request otherwis left place optim offlin treatment result new offlin list determin next run follow tabl list result cost possibl action onlin algorithm project item x y tabl wait refer onlin algorithm move request item second request success if move then onlin cost even higher mtf move item front first request item x assum preced list maintain offlin onlin algorithm four request sequenc probabl four possibl combin wait mtf column denot onlin cost denot number invers onlin list request serv invers transposit two item rel posit offlin list xy oe xy x wait x mtf x wait x mtf without invers mtf algorithm exampl would incur cost optim offlin cost howev invers increas onlin cost full unit next run xy order offlin algorithm yx order x list use onlin algorithm follow tabl show onlin cost algorithm start invers denot invers yx oe xy x wait x mtf x wait x mtf tabl list possibl onlin action except perform even wors leav tripli request item place exampl note matter onlin algorithm condit action presenc invers not let distribut request sequenc gener describ method teia expect onlin cost togeth chang number invers fulfil inequ follow consid project sequenc telescop sum invers count one run next where run equal previou run cancel inequ show number invers serv potenti function variat deltai gamma potenti function bound impli onlin algorithm competit distribut request sequenc extend teia method lower bound construct use partial order one construct competit list updat algorithm list four item partial order initi equal linear order item list request partial order modifi follow xki mean x incompar partial order request z fx yg x is request affect request item relat remain item front item x except x held befor chang xki initi order list request sequenc determin result partial order one gener arbitrari partial order way partial order defin posit item x onlin algorithm maintain distribut list expect cost access item x equal px algorithm competit one show x probabl one behind item x preced probabl item xki incompar element reflect possibl mistak transpos item probabl list four item one maintain distribut use two list onli is partial order repres intersect two list list updat move request item suitabl front use free exchang algorithm work choos one list begin probabl actual list serv maintain partial order with aid separ store second list partial order approach natur project pair onlin algorithm use free exchang lower bound must exploit failur algorithm alreadi possibl list five item despit fact fiveel partial order twodimension represent intersect two linear order name let item integ let initi list consid request sequenc first request partial order state k k k otherwis use free exchang move forward preced probabl achiev uniqu uniform distribut two list thi well follow hold even though distribut two list allow next request induc must move front list alreadi pass yield uniqu uniform distribut next request entail incompar item handl determinist exactli two way or random choic two way either move front yield two list equal probabl move front yield two list equal probabl two list algorithm must disagre partial order request oe sinc must preced list so move front list incorrectli pass k hold similarli two list request oe move front list pass violat k thu either oe oe caus posetbas algorithm fail otherwis achiev competit ratio sequenc use certain probabl lower bound construct game tree imperfect inform competit analysi phrase zerosum game two player adversari onlin algorithm or onlin player order deal finit game assum finit set request sequenc oe of given bound length exampl repres pure strategi adversari mix random izat onlin player finit number n possibl way determinist serv request sequenc determinist onlin algorithm also chosen randomli suitabl probabl context finit mani request sequenc arbitrari constant b reason look strict competit random onlin algorithm strictli ccompetit oe s j oe cost incur jth onlin algorithm oe optim offlin cost serv oe disregard trivial sequenc oe consist request first item list case equival j oe oe term j oeoff oe j n oe s treat payoff adversari zerosum game matrix row oe column j correspondingli lower bound strict competit ratio expect competit ratio result distribut request sequenc distribut mix strategi adversari probabl q oe oe onlin strategi j oe minimax theorem zerosum game assert mix strategi player real c hold c valu game optim strict competit ratio chosen finit approxim list updat problem note depend admit length request sequenc due complic implicit definit larg size game matrix know bound c hold irrespect length request sequenc c number request sequenc exponenti length sequenc onlin player even larger number strategi sinc player action condit observ request best describ game tree nontermin node tree player make move correspond outgo edg game start root tree adversari choos first request then onlin player move action correspond possibl reorder list request n action correspond possibl reorder later see need consid player continu move alternatingli last request reaction onlin player leaf tree defin sequenc oe onlin cost oe depend onlin action lead leaf payoff oeoff oe adversari restrict inform adversari game tree model inform set here inform set set node adversari move preced previou move adversari himself henc node set differ preced move onlin player adversari cannot observ action adversari assign inform set rather individu node definit action everi node set hand onlin player fulli inform past request inform set singleton figur show initi part game tree list three item first second request adversari first onlin respons restrict free exchang onli ffl theta theta theta theta theta theta ffl theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta ffl theta theta theta theta theta theta ffl theta theta theta theta theta theta adv adv adv adv figur game tree inform set pure strategi game tree assign move everi inform set player except unreach due earlier choic player here onlin player inform set like figur combin move defin differ strategi induc exponenti growth number strategi size tree strateg approach use game matrix becom therefor comput intract even game tree still moder size instead use recent method allow solv game tree sequenc form game matrix correspond linear program size game tree use game tree first approach find random strategi adversari follow consid list five item minimumnumb competit ratio possibl fix maximum length request sequenc gener game tree request length leaf payoff adversari quotient onlin offlin cost serv sequenc convert game tree linear program comput optim strategi lp solver we use cplex howev straightforward method lead strict competit two reason first mistak algorithm like last column manifest later actual cost littl hope improv lower bound use short request sequenc secondli even short sequenc consid onlin player n respons everi move adversari game tree grow fast lp becom comput infeas alreadi small valu m first problem overcom ad number invers onlin list denot abov payoff leaf yield strict competit ratio greater rather short sequenc invers convert actual cost attach gadget leaf game tree gener request similar teia lower bound construct next section describ detail second problem extrem rapid growth game tree avoid follow first limit possibl move onlin player allow paid exchang special form socal subset transfer subset transfer choos item front request item x put order directli behind x eg x x afterward adversari strategi comput weak onlin player test determinist strategi onlin player done quickli dynam program lower bound still hold is strong onlin player may use arbitrari paid exchang cannot profit addit power game tree gadget compos game tree two type tree gadget first gadget call flup for finit list updat problem small irregular structur second gadget call ic for invers convert regularli structur gadget come random strategi adversari comput linear program flup instanc ic append leaf flup result tree specifi strategi adversari defin oneplay decis problem onlin player expect strict competit ratio least simplest version flup found larger version flup give higher lower bound gadget assum particular state offlin list paramet determin adversari strategi furthermor root flup which begin entir game assum onlin offlin list state say adversari strategi flup gener request sequenc posit probabl sequenc prefix thereof respons onlin player one request sequenc flup tree termin leaf particular statu onlin list offlin list latter also chosen adversari independ onlin list request sequenc offlin list is offlin algorithm move front flup game termin request sequenc adversari make addit intern choic unobserv onlin player offlin list first case offlin player brought front left place second also move front similar choic perform offlin list request sequenc request offlin list probabl mtf specif probabl choic adversari flup shown last three column denot cost offlin algorithm and exampl two onlin algorithm mtf wait wait move item front second request flup tree start first request follow possibl respons onlin player next adversari exit probabl without request leaf offlin list complementari probabl request item follow onlin move on leaf flup tree root ic gadget gener request similar run teia construct see below depend offlin list number invers onlin list rel offlin list denot purpos ic gadget convert invers actual cost request sequenc gener ic gadget treat offlin cost v therebi onlin algorithm make mistak rel offlin algorithm addit onlin cost ic v let onlin cost incur insid flup flup repres game tree ic gadget leaf replac payoff adversari use payoff probabl comput linear program one show onlin strategi repres flup tree expect strict competit ratio least two optim onlin strategi mtf wait valu use also shown here wait move item front end request sequenc welldefin behavior ic gadget allow replac singl payoff furthermor onlin player know flup gadget left ic gadget enter sinc ic start request first item offlin list like list first row context make certain assumpt intern choic adversari differ offlin list name start ic gadget offlin list follow request sequenc first request onlin player cannot yet tell ic gadget enter strictli speak two gadget bridg appropri inform set onlin player howev assum instead intern choic adversari two list reveal onlin player begin ic implicit replac ic singl payoff allow sinc mere weaken posit adversari onlin strategi without extra inform also use onlin player inform adversari intern choic onlin payoff cannot wors offlin list assign leaf flup gadget part optim offlin treatment comput similar entir request sequenc howev list may even part suboptim offlin treatment suffic show lower bound sinc mere increas denomin offlin cost realiz paid exchang offlin algorithm exampl request serv cost yield offlin list initi paid exchang move end list free exchang achiev move everi request item front would result higher cost remaind section describ ic gadget purpos convert invers end flup game real cost maintain lower bound least time invers destroy onlin list offlin list order serv ic ic extend construct teia describ section abov let k sequenc request first k item current offlin list ascend order request item probabl either three time assum offlin algorithm treat k move item request three time front first request leav item place optim tripli request item revers order first item new offlin list follow remain item order befor n run use teia construct list n item random request sequenc gener written w n is wfold repetit n w goe infin note offlin list henc order request chang one run n next exampl repetit two ident sequenc optim offlin treatment k cost unit differ construct teia use prefix element offlin list show alreadi prove abov see see also k n use project pair consid case two item none two item occur k side zero becaus definit project pair ignor item project one item occur k first one offlin list request t k onlin algorithm incur cost least one invers show abov extend concaten sequenc k let ic randomli gener sequenc defin preced consider fulfil ei is invers left serv ic invers would inde convert actual cost otherwis suppos serv ic invers two item x y say x front final offlin list definit ic item x request least three time last request y onlin player could save cost unit move x front list second request x summar sequenc ic produc addit onlin cost unit everi invers hold onlin offlin list end ic then howev assum without loss gener list state ic name not onlin player could well serv ic intend leav invers invest save cost unit creat invers begin next flup gadget cost taken account thu inde hold ei invers becom actual cost state offlin cost sinc onlin offlin list ident end ic new flup game start gener request sequenc arbitrari length way obtain lower bound competit ratio c addit constant b construct valu lower bound depend whether onlin player may use paid exchang not adversari strategi use paid exchang seem onlin player cannot gain addit power paid exchang rais conjectur restrict player free exchang onli list updat problem might still optim competit ratio howev fals random adversari strategi offlin algorithm use free exchang cannot serv better competit ratio length sequenc use correspond flup game result difficult obtain first all sequenc use game found brute forc more dynam game tree search alphabeta prune approxim game approxim game onlin player restrict small set random move similar poset algorithm secondli argument order element onlin list leav ic gadget longer hold resolv elabor method detail beyond scope paper extend result full cost model requir systemat treatment list arbitrari length n easi ic gadget obvious difficult flup gadget hope clarifi connect flup sequenc beat partial order approach make progress direct r improv random onlin algorithm list updat prob lem combin bit timestamp algorithm list updat problem list updat poset survey selforgan data structur power random onlin algorithm amort analys selforgan sequenti search heurist onlin comput competit analysi optim onlin algorithm metric task system two result list updat problem fast algorithm find random strategi game tree extens game problem inform optimum offlin algorithm list updat problem random competit algorithm list updat problem amort effici list updat page rule lower bound random list updat algorithm effici comput behavior strategi probabilist comput toward unifi measur com plexiti tr amort effici list updat page rule amort analys selforgan sequenti search heurist power random onlin algorithm two result list updat problem optim onlin algorithm metric task system lower bound random list updat algorithm fast algorithm find random strategi game tree combin bit timestamp algorithm list updat problem onlin comput competit analysi improv random onlin algorithm list updat problem selforgan data structur