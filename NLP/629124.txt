t evalu numa memori manag model measur a dynam page placement polici numa nonuniform memori access timesharedmemori architectur explor use two approach complement eachoth import way author measur perform parallel programsrun experiment dunx oper system kernel bbn gp whichsupport highli parameter dynam page placement polici also develop andappli analyt model memori system perform localremot numaarchitectur base approxim meanvalu analysi techniqu model isvalid experiment data obtain dunx run syntheticworkload result valid show that gener model predict quitegood experi investig effect dynam pageplac and inparticular dynam multiplecopi page placement cost replicationcoher faulterror cost error decid whether page move remotelyreferenc describ b introduct numa nonuniform memori access time multiprocessor design increas import support share memori larg scale system placement movement code data crucial perform need deal data placement issu call numa problem present programm explicit numa memori model result signific addit program burden altern consid oper system os manag placement polici mechan virtual memori subsystem system task oslevel memori manag softwar decid refer memori remot migrat move replic copi page frame local memori processor gener memori request oslevel numa memori manag area activ research boloski scott fitzgerald cox fowler demonstr specif solut implement ibm ace bbn butterfli plu multiprocessor respect black et al propos provabl competit algorithm page migrat replic scheurich duboi propos page migrat algorithm base page pivot boloski et al conduct tracebas simul studi effect architectur featur perform sever migrat replic polici ramanathan ni conduct studi critic factor numa memori manag report also investig oslevel numa memori manag experiment usmr program librari bbn gp dunx kernel bbn gp tc uniqu contribut current work relat previou research complementari use measur base flexibl parameter polici implement explor wide rang polici behavior experiment valid analyt model focu class numa architectur known localremot architectur typifi bbn gp localremot architectur memori modul machin distribut one memori modul local pro cessor rest remot processor but local processor processormemori modul pair call node processor may directli refer memori modul refer local modul much faster remot modul sinc request need sent interconnect network exampl gp local read take approxim s wherea remot refer take approxim s ignor variou content factor research implementationbas experiment sever advantag formal approach importantli real applic use workload likelihood discov subtl issu may import address problem increas complex interact refer behavior real program featur polici implement oper system kernel often difficult imposs captur abstract model thu develop dunx duke univers nx oper system kernel experiment platform explor potenti role oper system solv numa problem hand perform measur implement system also limit architectur paramet cannot easili vari workload limit set avail applic program interpret result muddi implement detail order complement experiment work develop analyt model memori manag behavior numa multiprocessor support dynam multiplecopi page placement page placement migrat replic base approxim meanvalu analysi mva approach goal model evalu perform basic polici within context given workload model necessarili restrict workload model polici consid claim workload model predict exact perform specif real applic program do howev conjectur paramet workload model captur key featur real program provid insight gener perform differ class program given architectur oper system within context workload model straightforward defin approxim ideal polici alway make proper choic remot refer migrat replic depend interprocess refer granular interprocess write granular establish perform goal compar polici analog polici implement measur experiment system without knowledg futur refer ideal polici modifi introduc error ie poor polici choic effect compar ideal perform differ workload assumpt work experiment system analyt model put us uniqu posit investig wide rang issu numa memori manag first all approach allow us valid model use experiment data obtain dunx use measur real applic run dunx model architectur paramet set valu consist gp implement architectur answer seri question dynam page placment includ effect dynam singlecopi page placement effect dynam multiplecopi page placement cost use replicationcoherencyfault pair instead page migrat cost incorrect polici decis next section describ dunx oper system kernel section present model approach outlin system model architectur oper system workload model valid done section experi result describ section final summar last section experiment framework develop dunx kernel bbn gp numa share memori multiprocessor framework implement wide assort dynam page placement strategi initi view numa memori manag polici design space term distinct point individu polici captur variou combin larg number factor suspect might affect perform nearli fifti polici test use dunx includ at least approxim of publish polici experiment result report earli experi allow us prune consolid techniqu appear investig polici issu could best formul context singl parameter polici studi vari paramet set measur effect perform insight led develop version two dunx support tunabl polici singl polici seem captur fairli larg region polici design space includ success polici identifi earlier experi studi effect polici tune respect differ applic architectur featur appear paper consid static singlecopi polici highli parameter dynam multiplecopi polici static polici place virtual page frame processor first refer page frame processor explicitli specifi applic programm virtual memori alloc processor wish share access page creat map physic copi with except code page alway replic node use them placement page chang unless select remov replac polici later page again dynam polici consid use initi placement static polici period reevalu earlier decis allow multipl physic copi singl virtual page polici move page local frame upon demand support migrat replic choic two oper base refer histori specif recent histori modif made page directorybas invalid scheme use ensur coher replic page dunx support sequenti consist memori system recent work suggest weaker consist model exploit obtain addit perform improv use weak consist could incorpor dunx framework well polici appli freezedefrost strategi an idea adopt control page bounc condit page continu migrat one node anoth freezedefrost strategi excess page movement control param role freezewindow defin size recent invalid window freez decis recentmod control replic vs migrat decis scandelay set rate scanner daemon samplepass adjust number refer collect sampl defrosttrigg remot count local count success need defrost triggermethod control invalid all vs invalid remot trigger decis tabl polici paramet summari freez page place forc remot access freez criterion base time sinc recent invalid page determin defrost frozen page trigger reevalu placement base time by often decis made refer histori the recent remoteloc usag time choos trigger new placement decis base refer data recent modif histori six paramet control behavior polici one set paramet control frequenc certain event take place defrost trigger decisionpoint refer data collect age usag count paramet set threshold interpret refer data eg defin recent histori paramet intend orthogon provid mean systemat studi polici design space appropri paramet set behavior polici adjust mimic wide varieti freezebas polici paramet role summar tabl polici compris two part first defin behavior polici face page fault second defin behavior page scanner daemon use trigger reevalu earlier page placement decis fault occur page replic alreadi resid remot physic frame chosen cours action depend primarili recent refer histori page set freezewindow recentmod polici paramet polici must decid instal remot map migrat replic page first step involv determin whether page frozen check see whether recent invalid page due page migrat coher fault occur within past freezewindow millisecond page frozen either impos sometim past remot frame use servic fault freezewindow paramet essenti limit rate invalid page occur freezewindow set zero polici behav much like cach polici use propos softwar distribut share memori environ eg freezewindow set infin page may invalid migrat onc replic first coher fault occur frozen valu freezewindow two extrem allow vari amount dynam page placement activ migrat replic essenc freezewindow paramet control eager polici migrat replic page determin local copi page desir necessari decid migrat replic recentmod paramet control decis polici check see page recent modifi compar modif histori maintain page scanner age hardwar modif bit recentmod paramet age modif counter exce recentmod threshold write refer trigger current fault page migrat local free frame otherwis local free frame use creat replica page write access copi prohibit allow fault handler ensur data coher recentmod migrat alway chosen favor replic ie replic allow recentmod replic chosen migrat fault trigger write refer assum goal polici replic page referenc readonli fashion character recentmod point polici conclud last modif page far enough past assum page referenc readonli fashion handl fault page alreadi replic requir data coher maintain write memori refer trigger fault copi eventu use satisfi fault must invalid local copi page exist one exist replica migrat local frame read memori refer trigger fault polici either use exist replica creat addit local one none alreadi exist need check freez sinc imposs page frozen replic polici use page scanner processor node trigger reevalu earlier placement decis page scanner run everi scandelay second time scanner run collect page refer modif inform frame processor separ local remot refer count maintain polici tell whether local process remot process local remot process referenc page remain paramet specifi detail scanner oper minor effect vari experi present paper analyt framework system model system model approxim meanvalu analysi mva similar report elsewher figur graphic depict model system lo calremot memori architectur system compris n processormemori node connect interconnect network queu delay encount when upsilon upsilon upsilon interconnect network f figur system queu model ever processor attempt refer memori whenev messag sent interconnect network tabl summar model hardwar softwar input paramet sinc b number block page time read write entir page bt bm time transfer page across interconnect network bt bx basic system model assum local memori refer take uniform amount time model l input paramet account time differ read write refer system eg bbn gp deriv l input paramet use lr lw local read write refer time respect memori manag polici workload model softwar input paramet model assum mean time memori refer time unit given refer local memori probabl p l remot memori modul probabl number differ type fault concentr primarili fault result migrat replic coher oper probabl q q r q c respect discuss omit detail type fault enter model subsect describ input paramet relat applic program refer pattern manag polici mean total time virtual user program memori request r issu processor sum execut time request mean time complet memori request r r weight mean time servic encount page fault r f equat mean time complet virtual memori request r r equat depend l equat mean time requir perform local memori refer includ wait time r equa tion time requir make remot request page fault handler also make local remot memori refer mean time per virtual memori request spent servic fault r f calcul base probabl cost type fault calcul symbol mean hardwar input paramet l short messag memori refer time lr local read refer time lw local write refer time x short messag network transfer time bm block memori refer time bx block network transfer time b number block page mean disk transfer time softwar input paramet mean time memori refer request l prob memori refer local r prob memori refer remot q r prob page fault result replic prob page fault result migrat q c prob page fault coher fault tabl system model input paramet wait time w l w r w n discuss consid processor zero figur make refer local memori refer locat memori modul one first case wait requir queue label b figur thu servic time compris singl wait local memori w l time actual complet refer t l second case request must sent network memori modul one first request delay queue a wait network access w n time unit must travel network t x time unit wait remot memori modul queue d w r time unit wait queue d time actual process request t l return messag must sent back origin request processor zero involv wait queue c w n time actual make final transfer t x thu yield equat pr privat data page code page ro readonli share data rm readmostli share data ss sharedsequenti page sp sharedparallel page tabl share data page class symbol mean number page class c r c mean read refer page refer page r c interprocess refer granular mean number processor share page tabl workload model input paramet c fpr rormssspg workload model subsect develop simpl workload model obtain approxim input paramet differ applicationpolici combin assum virtual page address space process place one small number class shown tabl similar classif page class use mva model develop independ studi cach coher pr page contain program code variabl process need copi assum page replic local memori execut ro class contain share data page never modifi execut program class rm page contain share data page modifi occasion referenc readonli fashion far often two remain class ss sp contain share data page readwrit share differ activ share is specif readwrit share page ss class page number refer process make page refer anoth larg enough justifi migrat page sp class page otherwis five page class defin six workload model input paramet summar tabl p c c fpr rormssspg number page class c r c w c mean number read write memori refer process make page class c r c w c interprocess refer write granular is mean number refer processor make page class c read write write page anoth processor polici descript ideal choos right oper static never migrat replic cach migrat ss sp page replic ro rm page mor alway migrat rc ideal rc migrat error ideal percentag decis wrong tabl model polici sixth paramet c mean number processor share page class c r c paramet distinguish ss sp page r c small migrat like cost effect classifi page class sp if hand r c rather larg migrat like worthwhil consid page class ss section discuss result make distinct clear first refer nonloc page polici must chose establish map remot copi page thu decid refer page remot migrat replic page local frame order ensur strict data coher modif page allow exist singl valid copi page invalidationbas coher protocol use enforc requir tabl list manag polici consid model ideal polici make correct choic among option refer addit ideal polici consid sever polici static never migrat replic cach alway migrat ss sp page alway replic ro rm page migrateonrefer mor alway chose migrat remot refer ideal migrat error rc ideal migrat implement replicationcoher fault pair ideal percent error error a certain percentag ideal polici decis incorrect deriv system model paramet polici base workload model paramet static page placement know q assum page place frame randomli select node actual use page and therefor local least one processor use page probabl refer remot memori modul p r local memori p deriv cach polici alway migrat replic polici typic use softwar distribut share memori system eg remot memori never referenc directli probabl migrat page q simpli total number ss sp migrat divid total number applic refer mean number migrat perform ss sp page mean total number refer page divid mean number refer processor abl make need remigr page back local frame probabl cach polici replic page q r number replic divid total number refer refer page replic broken run size w c c frormg replic requir start run the page resid start comput coher fault ensur replic requir everi w c refer migrateonrefer mor polici q calcul q includ ro rm page refer well ss sp page refer key approxim ideal polici knowledg refer count k mig necessari justifi page migrat refer count k rep necessari justifi replic idea behind ideal polici better migrat page refer remot whenev better replic page refer remot whenev w c k rep assum polici abl distinguish page class consequ ro rm page class polici use w c k rep valu determin whether replic page ss sp class polici use r c k mig valu determin whether migrat page polici never chose migrat ro rm page ever chose replic ss sp page migrat effect replicationcoher fault pair henceforth call rc migrat rc polici use ideal polici equat except q r q c set origin q q set zero error polici perform like ideal polici certain fraction decis incorrect equat error polici similar ideal polici percent error factor class e c valid model implement section investig accuraci analyt predict compar experiment result obtain use dunx oper system kernel run bbn gp multiprocessor difficult deriv accur estim input paramet workload model arbitrari applic program wish avoid task yet order valid model need examin wide assort point possibl workload space deal conflict goal develop synthet program call synth detail analysi simplifi synthet program parameter can effect exhibit wide assort differ refer pattern five import input paramet synth number page five instanc p pr pro prm p ss p sp tabl synth program instanc workload model page class ie pr ro rm ss sp synth program alloc input number share page class enter seri loop refer page loop construct key workload model paramet eg interprocess refer granular obey thu mean interprocess refer granular ss page class r ss synth process make r ss refer page process refer page detail handlevel analysi synth compilergener assembl code express number memori refer instruct execut develop thu quickli determin total number memori refer made type page given correct valu five synth input paramet section consid nine point synth paramet space refer point instanc synth number instanc defin tabl first step analysi particular synth instanc run onenod cluster gp static page placement polici experi conduct ten time statist signific variat analyt result check use refer count data obtain sourc analysi express mean measur complet time page fault data comput page fault probabl instanc synth possibl onenod case know exactli fraction memori refer made local exactli total number refer made from sourc analysi express number page fault differ type encount mean cost from experiment data figur plot measur from dunx predict from system model complet time in second nine instanc run onenod cluster static page placement experiment result two point plot experi point bound confid interv calcul use studentt distribut sampl size comparison experiment predict data node case model figur comparison node static result complet time second ten result match quit well thi howev expect sinc use experiment data set input paramet model result match would indic problem methodolog next step analysi use valu obtain first step make predict perform nnode cluster data compar experiment data obtain run synth dunx gp exampl node result static page placement polici shown figur again two dunx point instanc bound confid interv establish ten sampl point studentt distribut note ten sampl point mean complet time eight process compris comput figur show analyt predict quit close experiment result differ mean experiment time the mean plot lie halfway plot bound less case data clearli show memori network content estim reason accur workload model p l p r estim analyt predict slightli optimist howev probabl due combin follow factor cluster time refer page particular class like synth process refer page certain class roughli time thi cours mean memori network content encount make refer may higher predict sinc model assum refer distribut comparison experiment predict data static polici model figur comparison node static result complet time second uniformli time cluster page fault though page fault occur must occur start applic thu content oper system data structur may higher result total page fault cost slightli greater predict model factor experiment data obtain real system support real user commun certain oper system function process schedul may play role slow applic may unexpect interfer in term memori network os data structur content user system simpli possibl system model account factor may affect overal perform real applic cours despit quantit error much nearli model predict qualit accur figur compar analyt predict nine synth instanc run cach polici experiment result obtain run essenti polici result instanc those instanc p sp appear figur case model predict excess high complet time eg instanc predict hour allow experiment run user may affect memori network content despit fact comput run cluster processor node sinc oper system disk buffer cach distribut across memori node system comparison experiment predict data cach polici model wbarrier theta theta theta theta theta theta theta figur comparison node cach result complet time second instanc complet for obviou reason allow run long enough conclud excess amount dynam page placement activ migrat replic coher certain result long applic run time predict synth instanc well within mean measur complet time factor contribut quantit differ like propos discuss node static polici result synth instanc analyt predict differ mean experiment complet time signific amount instanc instanc instanc case analyt predict lie within confid interv analyt predict instanc nearli lower even lower bound confid interv lower bound confid interv instanc appear figur upper bound interv second indic wide varianc measur complet time synth instanc follow factor play role note differ synth instanc fuzzi phase transit deriv input paramet workload model make simplifi assumpt phase transit occur distinct point time assumpt maxim r ss wrm paramet estim minim number migrat replic sinc overlap phase occur unfortun actual run applic dunx overlap may occur counter assumpt sinc overestim r ss wrm workload model predict fewer migrat ss page fewer coher fault replic rm page better estim r ss wrm would like improv success model clearcut way determin exactli much phase transit may overlap bar introduct barrier synchron phase subtl dunx race turn out subtl race condit dunx also partial blame processor may experi page fault result coher oper page migrat yet unabl complet memori refer trigger fault processor abl replic disabl write access page migrat page caus first processor fault memori refer more repeat process item number abov difficult imagin one would includ effect race analyt model note effect introduc larg amount varianc experiment measur ment sinc amount phase overlap number iter dunx coherencywrit race highli unpredict test hypothes introduc sever barrier synchron point synth applic note problem would avoid result experi also shown figur as befor two data point bound confid interv see perform modifi synth much closer predict model despit fact model account addit memori refer content associ barrier synchron point addit note confid interv size modifi synth instanc also greatli reduc the two instanc point lie top one anoth data give strong support explan note differ model predict experiment measur difficult test accuraci analyt model realist polici sinc clear map model polici actual dunx polici figur compar perform analyt ideal polici best perform abl obtain parameter dunx polici note polici tune differ nine instanc befor experiment result given lower upper bound confid interv around mean measur complet time see predict ideal perform reason close best perform abl achiev dunx case reason differ includ discuss relat static polici result well note clear one would correct race condit dunx clear necessari so problem occur run cach polici sinc migrat replic control mechan present polici prevent occur appropri action chang polici face behavior time instanc number comparison experiment predict data ideal polici model figur comparison node ideal polici result best possibl result dunx complet time second first item list factor affect perform cach polici factor also come play lack ideal dunx polici cannot implement ideal polici sinc polici requir knowledg futur refer pattern page scanner overhead real dunx polici must suffer overhead effect associ run page scanner daemon overhead come form lost cpu cycl use daemon well addit quick fault account workload model result even though predict may extrem accur though within case certainli terribl qualit accur becom especi obviou compar result figur figur evid model respond correctli differ refer pattern exampl predict signific perform improv made synth instanc wherea predict drastic improv instanc also note rel perform instanc model success predict instanc improv instanc result figur merit special attent sinc dunx result faster predict ideal complet time rel simpl explan thi howev instanc compris entir sp page ideal polici sp page never replic migrat r sp less k mig case thu predict perform ideal polici instanc virtual ident predict static polici r sp w sp valu mean howev realiti migrat replic improv perform instanc evidenc experiment data figur type error motiv develop error polici though opposit sens the error result pessimist rather optimist model predict summar result section found differ analyt predict experiment result usual small case differ substanti differ due sever factor account analyt model especi import factor relat program behavior cluster memori access page fault fuzzi phase transit factor appear execut synthet program design specif conform workload model factor like play even import role real applic consequ though use model make predict behavior polici defin context workload model predict perform specif real applic run real polici question valu experi result take approach use analyt model experi dunx answer specif question dynam page placement behavior effect differ workload featur perform two method complement other techniqu strength weak limit one approach tend cover capabl other measur implement system run real applic captur true program behavior complex interact may hard anticip impact actual system overhead specif workload suit test hardwaresoftwar implement avail thu experiment result consid accur may easili generaliz architectur possibl better implement differ set program hand model clearli includ subtl effect real system perform allow explor wider rang hardwaresoftwar paramet confid model establish exampl section ask question effect poor polici decis cost result migrat differ dunx implement complex actual behavior miss model also make experiment data difficult interpret wherea model explicitli formul relationship among appar class p c r c w c r c w c c workload character pr ro workload character pr ss workload character ss workload character tabl workload character simpl workload ent contribut factor use test hypothes explain result exampl section question whether replic right mechan serv basi dynam placement address construct workload special tailor favor replic an emphasi readonli share data migrat emphas sequenti share readwrit data see impact use intuit less appropri mechan final use establish perform goal although impli polici decis actual implement thu use model ideal polici ask whether signific potenti improv perform pursu sophist dynam placement strategi section methodolog appli analyt model use simpl workload vari one two key paramet valu order studi isol particular aspect memori refer behavior workload set experi tabl use variabl x tabl signifi paramet vari hardwar paramet set valu gp t tabl softwar paramet deriv workload model experiment measur dunx implement architectur workload characterist fix actual hardwar applic avail basic cost page placement oper measur gp dunx implement ms program descript msort merg sort integ array gauss simul gaussian elimin integ arithmet hhd simul electr conduct cardiac tissu hough comput hough transform solv use block chaotic relax wave solv wave equat squar grid period boundari fish simul shark fish twodimension sea mandel perform mandelbrot set calcul tabl experiment workload collect migrat ms replic ms servic coher fault experi focu vari polici paramet achiev rang respons workload use experiment develop independ project effort prevent unconsci attempt make design decis might affect result applic compris workload collect list tabl version written uma numa style except msort numa version numa version highlytun implement program written optim memori refer local assum static polici use program techniqu manual place share data page make explicit copi readonli data structur uma version numaspecif memori manag one would expect numa version applic typic complic less portabl much difficult write applic workload collect began studi tune paramet set achiev best possibl perform applic gp within limit somewhat ad hoc tune process arriv paramet set applic design default set applic experi default set paramet vari use set indic figur caption plot dunx perform gener two heavi line mark level perform obtain uma numa version applic program use static page placement the upper line uma result lower numa result diamond plot experiment data point obtain uma version program run dynam polici correspond paramet set multipl trial done check valid data thin solid line plot mean valu dunx plot time yaxi measur elaps second import dynam page placement perhap import question answer whether dynam page placement worth pursu model predict instanc synth use valid studi provid evid dynam page placement improv perform applic exampl result figur show sever synth instanc cach andor ideal polici perform better static polici appropri k mig k rep valu the minim refer count necessari justifi page migrat replic ideal polici never perform wors static polici though mani case perform better sinc ideal polici perform better cach polici mani case investig sophist dynam polici worthwhil valid result obtain run synth dunx also confirm dynam page placement worth investig answer question context actual program practic polici dunx consid perform three applicationpolici combin uma version applic run static page placement polici serv base case measur sinc case numa problem address either applic programm oper system assum numa version well written sens repres success attempt address numa problem consid differ perform uma version applic run static page placement a combin denot umastat numa version run static page placement numastat cost numa problem perform numastat combin serv perform goal sens achiev level perform method consid method success case method dynam multiplecopi page placement polici implement dunx kernel individu tune applic workload thu third combin interest experi umadynam tabl give raw complet time data three applicationpolici combina tion tabl label us ns ud correspond umastat numastat umadynam combin respect case umadynam combin perform significantli better umastat combin thu show oper system inde prove effect address numa problem mani instanc perform umadynam combin approach numastat combin fact hough applic umadynam combin outperform numastat combin last result indic numa version hough applic must optim sinc whatev oper system abl improv perform program us ns ud msort s s gauss s s s hhd s s s hough s s s psolu s s s wave s s s fish s s s mandel s s s tabl absolut perform applic programm could also done most like effici data also show fish mandel applic dynam multiplecopi page placement serv degrad perform sinc handtun numastat version fish mandel fail perform significantli better umastat counterpart surpris cost dynam placement outweigh limit potenti benefit result present throughout remaind section support valu dynam page placement addit answer question import page replic intuit page replic desir favor migrat singlecopi static placement applic signific amount readonli share howev singlecopi polici would simpler implement model workload use investig impact multiplecopi page placement compar perform static mor cach polici see figur sinc vari interprocess refer granular r ro way chang number migrat andor replic without chang total number refer ro page paramet vari experi mor curv continu rise r ro decreas r ro mor r mean time virtual memori request s due page bounc cach polici perform significantli better static polici indic multiplecopi page placement polici improv perform applic figur also show suffici high r ro valu mor achiev perform good cach polici never better result make clear import multiplecopi page placement polici least one class applic ie applic signific amount ro page experi present support similar conclus respect rm page given predetermin refer pattern gener real program approach experiment investig choic replic migrat vari polici r r ro import page replic figur workload model experi r microsecond recentmod paramet dunx parameter polici control migrat versu replic decis result vari recentmod gauss applic gp given figur figur indic higher prefer replic migrat better measur perform sinc primari mode share gauss involv read pivot row matrix never modifi becom pivot row valu replic surpris figur show replic alway chosen migrat read fault perform uma version gauss nearli good numastat version program intermedi recentmod valu result perform better without replic the recentmod case fail take advantag potenti page replic improv perform recentmod case result recentmod experi psolu hough wave applic gp resembl obtain gauss program base analyt result improv perform applic polici favor page replic suggest share substanti amount data readonli fashion ie page type ro rm effect coher fault perform workload use investig perform polici implement page migrat for workload appropri oper replicationcoher fault pair rc migrat experi see figur vari r ss w ss togeth time sec recentmod effect recentmod gauss perform dynam polici point uma numa static figur effect recentmod gaussgp measur perform workload consist pr ss page workload model predict that ideal polici page replic coher fault occur suffici high r ss howev ideal polici predict posit q valu valu r ss w ss consid sinc valu ideal polici static polici even worst case r ss w ss valu penalti use rc migrat excess fortun sinc real system memori manag softwar way know fault time whether best migrat replic particular page thu rc migrat like fairli common real system msort applic exampl applic benefit replic prefer migrat gp data shown figur behavior explain fact readonli share msort benefit page replic result see slight perform degrad degrad due use replicationcoher fault pair migrat page sinc replicationcoher fault pair costli simpli migrat page weak neg impact coher fault consist analyt predict figur cost incorrectli choos replic migrat a coher fault expens dunx implement gp analyt model predict avoid coher fault may import architectur process coher fault r r ss w ss migrat vs replicationcoher fault pair migrat replicationcoher figur workload model experi r microsecond time sec recentmod effect recentmod msort perform dynam polici point averag dynam polici uma static figur effect recentmod msortgp measur perform e ss effect ss page error theta theta theta theta theta theta theta figur workload model experi r microsecond expens experiment result dunx implement bbn tc report also suggest case effect polici error perform success ideal polici promot develop sophist polici attempt approxim ideal polici select limit page movement activ way howev polici bound make mistak either aggress move page encount page bounc conserv pass desir opportun analyt model error determin level dynam placement activ repres error polici correctli handl pr ro page prove difficult reason polici implement assum error made ie let rm page wrm k rep ss page incorrect polici choic use remot refer clearli worst case perform degrad static polici interest case incorrect polici choic replic for rm page migrat for sp page sinc result perform wors basecas static polici use workload consid ss page error figur plot r versu e ss five differ r ss w ss valu r ss w ss valu perform error polici e ss approxim ideal polici perform expect r perform eventu degrad static polici theta theta theta theta theta theta theta figur workload model experi r microsecond r s r case differ ideal perform nearli ident static polici perform error polici degrad e ss increas e ident cach polici which wors static polici default error polici k mig paramet greater r ss valu polici error result undesir page migrat rather miss opportun effect ss page low r ss valu behav like sp page fact natur divis two page class r mig next case workload consid sp page error shown figur plot r versu e sp five r sp w sp valu perform higher e sp valu consider wors encount workload poor perform due page bounc behavior better see quickli page bounc becom concern data figur plot figur smaller r valu the key shown figur due space limit figur see smaller r sp w sp valu perform quickli degrad error polici e sp increas signific result howev e sp valu perform never better static polici r s question natur aris whether migrat cost deriv implement simpli high behavior may chang page migrat fault handl made significantli faster repeat workload test r five differ paramet set migrat cost express percentag default valu use previous exploit abil model explor differ architectur paramet figur theta theta theta theta theta theta theta figur closeup workload model experi r microsecond show trend curv e sp increas remain figur although magnitud impact page bounc chang differ migrat cost model predict indic better err side conserv approach ie better miss migrat opportun suffer unwant migra tion limit page movement control freezingdefrost mechan dunx freezewindow paramet essenti control imposit freez limit amount dynam page placement activ freezewindow set zero limit frequenc page migrat coher fault applic gp tc page bounc problem set in result incred poor perform order prevent situat higher freezewindow valu must use howev freezewindow set high prevent delay until defrost desir migrat replic becom real possibl result freezewindow experi psolu shown figur typic plot show perform lower freezewindow valu suffer rel higher valu let freezewindow go zero perform degrad point never abl let comput complet import characterist psolu freezewindow result freezewindow set high enough increas littl effect perform true hough gauss hhd msort result well suggest potenti problem delay desir oper concern applic architectur either effect delay neglig eg delay short r s e sp effect sp page error versu migrat cost theta theta theta theta theta theta theta figur workload model experi differ migrat cost r microsecond time sec freezewindow ms effect freezewindow psolu perform dynam polici point averag dynam polici uma numa static figur effect freezewindow psolugp measur perform sinc defrost come soon oper suspect combin two factor reason summari dynam multiplecopi page placement import oper system techniqu deal numa memori manag investig issu relat dynam multiplecopi page placement mixtur measur oper system implement run real workload appli mvabas model check valid model compar perform predict experiment data obtain run synthet program bbn gp multiprocessor dunx oper system kernel case predict quit accur substanti error howev occur case due fuzzi phase transit synthet program certain race condit dunx kernel introduc barrier synthet program caus differ becom insignific need introduc barrier case highlight essenti distinct say confid conclus draw model valid extent real program conform workload model identifi sever import question construct experi implement model provid answer experi dunx compar perform program collect workload suit individu polici tune handtun numa version program repres perform target polici paramet vari effect rang dynam placement activ respons given program use model compar rel perform approxim ideal polici sever polici not implement analyt model possibl ideal polici alway make correct choic among remot refer migrat replic altern consid static mor cach rc error sometim make incorrect polici decis vari workload paramet observ rang behavior result experi support follow conclus confirm effect dynam placement polici experiment measur perform uma version workload program run appropri tune often approach perform handtun numa version model result show ideal cach polici improv perform workload perform static polici replic import featur model identifi workload characterist multiplecopi polici perform significantli better singlecopi polici poor perform singlecopi polici workload found result page bounc phenomenon similar page thrash sometim encount tradit virtual memori page system vari recentmod paramet dunx chang prefer replic migrat show import provid replic real workload replicationcoher fault pair use migrat page effect extra overhead associ type page migrat call rc migrat found fairli reason fortun result sinc intuit say rc migrat like fairli common real system support multiplecopi page placement given choic much dynam placement activ with potenti lead page bounc littl miss opportun local access appear better polici conserv captur model differ error made ss page error sp page error polici error handl ss page r ss k mig degrad perform ideal polici wors static polici error handl sp page hand result perform far wors static polici vari freezewindow paramet dunx adjust aggress polici move page experiment result indic import limit bounc behavior take advantag everi possibl desir migrat replic consist predict analyt model r weak order new definit comparison hardwar softwar cach coher scheme schedul resourc manag techniqu multiprocessor competit manag distribut share memori competit algorithm replic migrat problem simpl effect techniqu numa memori manag numa polici relationship memori architectur experi mean valu analysi model evalu share bu throughputori multiprocessor implement coher memori abstract numa multiprocessor experi platinum memori access depend sharedmemori multiprocessor perform evalu memori consist model sharedmemori multiprocessor memori consist event order scalabl sharedmemori multiprocessor page tabl manag localremot architectur refer histori memori coher share virtual memori system hypercub share virtual memori system critic factor numa memori manag dynam page migrat multiprocessor distribut global memori analysi critic architectur program paramt hierarch sharedmemori multiprocessor accur effici perform analysi techniqu multiprocessor snoop cacheconsist protocol perform analysi hierarch cacheconsist multiprocessor tr memori coher share virtual memori system accur effici perform analysi techniqu multiprocessor snoop cacheconsist protocol page tabl manag localremot architectur meanvalu perform analysi new multiprocessor architectur refer histori page size migrat daemon localremot architectur simpl effect techniqu numa memori manag implement coher memori abstract numa multiprocessor experi platinum memori access depend sharedmemori multiprocessor perform analysi hierarch cacheconsist multiprocessor analysi critic architectur program paramet hierarch numa polici relat memori architectur perform evalu memori consist model sharedmemori multiprocessor experi mean valu analysi model evalu share bu throughputori multiprocessor exploit oper system support dynam page placement numa share memori multiprocessor comparison hardwar softwar cach coher scheme experiment comparison memori manag polici numa multiprocessor robust numa memori manag page placement nonuniform memori access time numa share memori multiprocessor analysi dynam page placement numa multiprocessor weak orderingmyampersandmdasha new definit memori consist event order scalabl sharedmemori multiprocessor schedul resourc manag techniqu multiprocessor