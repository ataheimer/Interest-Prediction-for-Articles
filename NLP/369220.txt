t fast simpl charact class bound gap pattern match applic protein search a problem fast search pattern contain class charact bound size gap cbg text wide rang applic among import one protein pattern match for instanc one prosit protein site associ cbg rk x bracket match letter insid x gap length current way search cbg text convert full regular express re howev sophist cbg search pattern match algorithm complic search make slow reason design articl two new practic cbg match algorithm much simpler faster search techniqu first one look exactli text charact second one need consid text charact henc usual faster first one bad case may read text charact onc propos criterion base form cbg choos apriori fastest both perform mani practic experi use prosit databas show algorithm fastest virtual case b introduct paper deal problem fast search pattern contain class charact bound size gap cbg text problem occur variou eld like inform retriev data mine comput biolog particularli interest latter one comput biolog problem mani applic among import protein match last year huge protein site pattern databas develop like prosit databas collect protein site descript protein site databas contain divers inform notabl pattern express form class charact bound size gap amino acid alphabet of size pattern use search possibl occurr protein longer one exampl protein site number ps pattern express rk x bracket mean posit match letter insid x mean gap length dept comput scienc univers chile blanco encalada santiago chile gnavarrodccuchilecl work develop author postdoctor stay institut gaspard mong univ de marnelavalle franc partial support fundacion and ecosconicyt equip genom cellul et informatiqu universit de versail avenu de etatsuni versail cedex email raffinotmongeunivmlvfr work done author institut gaspardmong cite descart champssurmarn marnelavalle cedex franc current pattern consid full regular express re xed alphabet ie gener pattern compos i basic charact alphabet ad empti word also special symbol x match letter ii concaten denot closur latter oper l set word l mean accept word made concaten word l instanc previou pattern consid regular express rjk x x xj dje x x xj note jrej length re number symbol it search done classic algorithm search howev quit complic need convert automaton search text convert determinist automaton dfa worst case time o jrej search linear size n text give total complex o jrej n also convert nondeterminist automaton nfa linear time ojrej search text on jrej time give total on jrej time give review method section major match softwar use techniqu none present techniqu fulli adequ cbg first algorithm intrin sequ complic understand implement second techniqu perform poorli certain type re dicult re gener whose dfa larg common case translat cbg re third especi regard size dfa simplic cbg translat correspond re least resort re impli solv simpl problem convert complic one inde experiment time result appli cbg express far reason regard simplic cbg compar search express contain class charact motiv paper present two new simpl algorithm search cbg text also experiment much faster previou one algorithm make plenti use bitparallel consist use intrins parallel bit manipul insid comput word perform mani oper parallel competit algorithm obtain use bit parallel exact string match approxim string match re match although algorithm gener work well pattern moder length simpler exibl eg easili handl class charact low memori requir perform two dierent type time experi compar algorithm fastest known search algorithm use cbg pattern prosit databas rst compar pure pattern match ie search cbg compil megabyt protein sequenc from tigr microbi databas compar librari match search larg set prosit pattern protein sequenc amino acid algorithm far fastest case moreov second case search time improv dramat algorithm time faster best match algorithm two algorithm present patent french centr nation de la recherch scientiqu cnr use follow denit throughout paper alphabet word nite sequenc charact mean set word build word x factor or substr p p written factor x p call sux p prex p patent number depos cnr inform pleas contact sbastien chiri sebastienchiriestfr fist boulevard saint michel pari franc note bracket subset element art mean subset fa r tg a singl letter express way too add special symbol x denot subset correspond whole alphabet also add symbol xa b b bound size gap minim length maxim b cbg formal nite sequenc symbol i bracket ii x iii bound size gap xa b dene total number symbol cbg use notat text n charact search cbg cbg match posit j align cbg consid i bracket match text letter appear insid bracket ii x match text letter iii bound gap xa b match minimum maximum b arbitrari charact denot minimum size possibl align l size maximum one exampl rk x match text posit dierent align see figur l r figur three dierent align cbg rk x text ahlrkdedati end posit search cbg text consist nding posit j align cbg sux paper organ follow begin section summar two main bitparallel approach lead fast ecient match algorithm simpl string also pattern contain class charact section explain detail approach search full re present section new algorithm which call forward algorithm read charact text exactli onc base new automaton represent simul present section anoth algorithm which call backward algorithm despit process text basic left right allow us skip charact text gener faster howev use type cbg sometim slower forward one consequ give next section good experiment criterion enabl us choos apriori fastest depend form cbg section devot experiment result algorithm compar fastest search algorithm bitparallel simpl pattern match new approach text search propos base bitparallel techniqu consist take advantag intrins parallel bit oper insid comput word use cleverli fact number oper algorithm perform cut factor w w number bit comput word sinc current architectur w speedup signic practic figur show nondeterminist automaton search pattern text classic pattern match algorithm kmp convert automaton determinist form achiev on worst case search time shiftor algorithm hand use bitparallel simul automaton nondeterminist form achiev omnw worstcas time ie optim speedup classic omn simul w shiftor twice fast kmp better use comput regist moreov easili extend handl class charact use notat describ bitparallel algorithm use exponenti denot bit repetit eg denot bit mask length store somewher insid comput word length w use clike syntax oper bit comput word ie j bitwiseor bitwiseand complement bit move bit left enter zero right eg b b also perform arithmet oper bit addit subtract oper bit form number instanc explain basic algorithm later improv it b b b figur nondeterminist automaton search pattern text forward scan present shiftand algorithm easiertoexplain though littl less ecient variant shiftor given pattern algorithm build rst tabl b charact store bit mask mask bc ith bit set c state search kept machin word match end text read anoth way see consid tell whether state number figur activ therefor report match whenev dm set set origin new text charact j updat use formula formula correct ith bit set i th bit set previou text charact new text charact match pattern posit i word again possibl relat formula movement occur nondeterminist automaton new text charact state get valu previou state happen text charact match correspond arrow final j shift allow match begin current text posit thi oper save shiftor bit complement correspond selfloop initi state automaton cost algorithm on pattern longer comput word ie w algorithm use dmwe comput word simul not activ time worstcas cost omnw still averag case cost on class charact extend pattern shiftor algorithm simpl also advantag immedi one easi extend handl class charact pattern posit may match singl charact set charact c set charact match posit pattern set ith bit bc c c necessari algorithm show also allow limit number k mismatch occurr onm logkw cost paradigm later enhanc support extend pattern allow wild card regular express approxim search nonuniform cost combin develop bitparallel approach approxim string match lead fastest algorithm short pattern case key idea simul nondeterminist nite automaton bitparallel becam gener way simul simpl nondeterminist automata instead convert determinist use paper new type extend pattern focus on backward scan main disadvantag shiftor inabl skip charact make slower algorithm boyermoor bdm famili describ section bndm pattern match algorithm algorithm combin shiftor bdm advantag bitparallel forward scan algorithm addit abl skip text charact bndm base sux automaton sux automaton pattern automaton recogn sux p nondeterminist version automaton regular structur shown figur origin algorithm bdm automaton made determinist bndm instead simul automaton use bitparallel shiftand keep state search use bit comput word b b b figur nondeterminist sux automaton pattern line repres transit ie occur without consum input import fact automaton use recogn sux p also factor p note path label x initi state x factor p is nondeterminist automaton run activ state long read factor p sux automaton use design simpl pattern match algorithm algorithm time worst case optim averag on log mm time complex variat turbobdm multibdm achiev linear time worst case search pattern text sux automaton p ie pattern read backward built window length slid along text left right algorithm search backward insid window factor pattern p use sux automaton ie sux automaton revers pattern fed charact text window read backward backward search end two possibl form fail recogn factor ie reach window letter make automaton run activ state mean sux window read anymor factor p figur illustr case shift window right start posit correspond posit follow letter we cannot miss occurr case sux automaton would found factor window new search window search factor dawg fail recogn factor new window secur shift figur basic search sux automaton reach begin window therefor recogn pattern p sinc lengthm window factor p inde equal p report occurr shift window bitparallel simul work follow time posit window text initi scan window backward new text charact read window updat d run s cannot match suspend scan shift window perform iter report match use mask b charact c store bit mask mask set bit correspond posit revers pattern charact c just shift algorithm formula updat bndm faster shiftor bdm for so accommod extens mention particular interest work easili deal class charact alter preprocess far fastest algorithm search type pattern note type search call backward scan text charact insid window read backward howev search progress left right text window shift regular express search usual way deal express charact class bound gap actual search full regular express re gap form xa b convert letter x follow b subexpress form xj tradit techniqu search length om text length n convert express nondeterminist nite automaton nfa om node then possibl search text use automaton omn worst case time convert nfa determinist nite automaton dfa worst case time o scan text on time techniqu propos obtain good tradeo extrem myer present fourrussian approach obtain omn log n worstcas time extra space simul techniqu aim good tradeo base combin dfa bitparallel simul nfa given exist current mani dierent techniqu build nfa regular express r classic one thompson construct build nfa state where count number letter s re second one glushkov construct popular berri sethi nfa result construct advantag m state where count number letter re lot research gluskov construct pursu like shown result nfa quadrat number edg worst case long time open question minim number edg nfa without transit linear number state answer show construct om state omlog m edg well lower bound om log m edg henc glushkov construct spaceoptim research done also tri construct directli dfa regular express without construct nfa show figur thompson gluskov automata exampl cbg b c e translat regular express b c x xj xj e thompson gluskov automata present particular properti algorithm like make use thompson automaton properti other like make use gluskov one final work pursu skip charact search re simpl heurist variabl success implement gnu grep tri nd plain substr insid re use search substr lter search complet re propos reduc search multipattern search possibl string length match use multipattern boyermoor like algorithm propos use automaton recogn revers factor string accept in fact manipul origin automaton use bndmlike scheme search factor see section howev none present techniqu seem fulli adequ cbg first algorithm intrinsequ complic understand implement second techniqu perform poorli certain type re dicult re gener whose dfa larg common case translat cbg re third especi regard size dfa simplic cbg translat correspond re exampl cbg rk x consid introduct yield dfa need pointer repres least resort re impli solv simpl problem convert x e e e x e e e e a thompson construct b c x x x e b gluskov construct figur two classic nfa construct exampl b c x xj xj e recal x match whole alphabet gluskov automaton free present diculti perform ecient bitparallel them complic one inde experiment time result appli cbg express far reason regard simplic cbg seen section show section cbg search much faster design specic algorithm them next section forward search algorithm cbg pattern express search problem pattern class charact gap use nondeterminist automaton compar simpl automaton section one permit exist gap consecut posit gap minimum maximum length automaton use correspond present section although function same figur show exampl pattern b c x e letter c insert three transit follow letter correspond maximum length gap two transit leav state abc recogn skip one two subsequ edg respect allow skip one three text charact nding cd end pattern initi selfloop allow match begin text posit build nfa start initi state read pattern symbol symbol a class charact gap add new automaton edg state new symbol read creat state next pattern symbol class charact c creat state i add edg label c state state i hand new pattern symbol gap form xa b creat b state label note x singl letter also seen class charact b c x x x e e e figur nondeterminist automaton pattern b c x link state j j addit creat b transit state state last state creat whole process nal state interest ecient simul automaton despit particular case regular express simplic permit ecient simul particular fast bitparallel simul possibl repres automaton state bit comput word initi state repres alway activ normal shiftand shift bit left use tabl mask b index current text charact account arrow go state j j remain problem repres transit sake chose repres activ state inact state call gapiniti state state transit leav gapiniti state correspond gap xa b dene gapnal state ib a ie one follow last state reach transit leav exampl figur one gapiniti state s one gapnal state s creat bit mask gapiniti state anoth mask f gapnal state then keep state search bit mask d perform normal shiftand step simul move oper rational follow first isol activ gapiniti state subtract f two possibl result gapiniti state first activ result state ib success propag activ state desir target state second inact result ib a undesir remov oper result f propag done result alreadi activ state d note propag dierent gap interf other sinc subtract local eect let us consid exampl figur correspond f mask respect recal bit mask read righttoleft let us also consid read text abc henc mask point transit take eect inde f d state activ if hand propag formula yield noth chang figur show complet algorithm simplic code assum cannot gap begin end pattern which meaningless anyway valu maximum length match obtain om time simpl pass pattern p sum maximum gap length individu class recal number symbol p preprocess take oljj time scan need on time possibl devis formula opposit case unlik shiftor faster howev need sever machin word simul thu take ondlw time search p m t n preprocess maximum length match c bc l l f l p j form xa b gap j i els p j class charact final state scan report match end figur forward scan algorithm backward search algorithm cbg pattern search pattern contain class charact backward bitparallel approach see section lead fastest algorithm bndm search done slide text in forward direct window size minimum possibl align read window backward tri recogn factor pattern reach begin window found align els shift window begin longest factor found extend bndm deal cbg recogn revers factor cbg use quit automaton built section revers pattern without initi selfloop consid state activ begin creat initi state transit state automaton figur show automaton pattern b c x read automaton factor cbg long exist least one activ state b c x x x e e e e e e e e ee e figur nondeterminist automaton built backward algorithm recogn revers factor cbg b c x bitparallel simul automaton quit forward automaton see section modic a build iton p r revers pattern b bit mask regist state search initi perform initi transit c l shift it initi loop backward cbg match algorithm shift window size along text insid window travers backward text tri recogn factor cbg thi automaton recogn factor built revers pattern p r backward search insid window fail ie activ state backward automaton reach begin window search window shift begin longest factor recogn exactli like rst case classic bndm see section begin window reach automaton still hold activ state factor length cbg recogn window unlik case exact string match occurr length pattern automat impli recogn whole pattern need way verifi possibl align that much longer start begin window read charact begin window forward automaton section without initi selfloop forward veric end automaton reach nal state case found pattern activ state automaton case pattern occurr start window initi loop forward veric sure nish read l charact text shift search window one charact right resum search figur show complet algorithm optim shown clariti exampl mani test avoid break loop insid variabl reus etc worst case complex backward scan algorithm onl quit bad theori particular let us consid maximum gap length g cbg g everi text window length factor cbg sure travers window backward scan alway shift complex n least consequ backward approach present must restrict least cbg g backward search p m t n maximum length match preprocess minimum length match p j form xa b gap f f j i b b j l i els p j class charact final state forward scan po scan po n b l j f l po report match begin po d b figur backward scan algorithm howev averag backward algorithm expect faster forward one next section give good experiment criterion know case backward algorithm faster forward one experiment search result see section databas show backward algorithm almost alway fastest algorithm use two dierent algorithm forward backward one natur question one chosen particular problem seek simpl criterion enabl us choos best algorithm note end previou section backward algorithm cannot ecient appli length g maximum gap pattern exce minimum length string match pattern backward travers window never nish travers whole window as string length g factor possibl pattern occurr carri further time posit window text know least g charact window inspect shift moreov window shift g posit henc total number charact inspect across search least g larger n the number charact inspect forward scan whenev g henc dene g simpl paramet govern perform backward scan algorithm predict point backward scan wors forward scan cours measur perfect disregard eect gap class charact cost forward check backward scan full analysi extrem complic and see next section simpl criterion give good result accord criterion design optim version backward scan algorithm idea choos best prex pattern ie prex backward scan done use prex forward veric potenti match done full pattern could extend select best factor pattern code would complic as veric phase would scan direct buer would complic and see next section dierenc larg experiment result test algorithm exampl prosit pattern megabyt mb text contain concaten protein sequenc taken tigr microbi databas set origin pattern select whose l maximum length match exceed w number bit comput word machin leav us pattern them exclud g explain cannot reason search backward scan leav us pattern use intel pentium iii machin mhz run linux show user time averag trial three dierent algorithm test fwd forwardscan algorithm describ section bwd backwardscan algorithm section opt bwd select backward search best prex pattern accord criterion previou section rst experi aim measur ecienc algorithm respect criterion previou section figur show result pattern classi along x axi g predict valu bwd start wors fwd except except where dierenc big anyway also clear opt avoid mani worst case bwd final plot show time fwd stabl forward scan run alway around mbsec backward scan fast mbsec gell secsmb bwd gell secsmb opt figur search time in second per mb pattern classi g valu figur fail show fact prosit pattern low g valu figur plot number pattern achiev given search time remov outlier the took second bwd fwd larg peak stabl time backward scan algorithm wider histogram whose main bodi well peak fwd inde pattern search faster bwd fwd percentag rais consid opt plot also show littl statist dierenc bwd opt rather opt use remov bad case bwd third experi aim compar search method convert pattern regular express resort gener regular express search exist algorithm search regular express select follow dfa build determinist nite automaton use search text nfa build nondeterminist nite automaton use search text updat state text posit myer intermedi dfa nfa nondeterminist automaton form block up experi block determinist automaton subset state xj express syntax softwar agrep exist softwar implement anoth intermedi dfa nfa transit handl use bitparallel transit determinist tabl xj express syntax softwar secsmb frequenc bwd opt figur histogram search time dierent algorithm grep gnu grep option e make accept regular express softwar use heurist that addit lazi determinist automaton search look long enough liter pattern substr use fast lter search gap xa b convert fabg permit special treatment grep bndm use backward approach extend cbg adapt gener re instead need build determinist automata one backward search anoth forward veric multipattern reduc problem multipattern boyermoor search string length match use agrep f multipattern search algorithm these ad fwd opt algorithm figur show result forward scan algorithm ie fwd dfa nfa myer unabl skip text charact fastest fwd algorithm thank simplic agrep mean much varianc dfa suer high preprocess time larg gener automata nfa need updat mani state one one text charact read myer suer combin show two peak come special code deal small automata backward scan algorithm opt grep abl skip text charact faster previou one almost case among them opt faster averag less varianc time grep extend rang surpass time fwd algorithm nonneglig portion pattern grep cannot alway nd suitabl ltere substr case resort forward scan note bndm multipattern exclud plot due poor perform set pattern apart faster text scan algorithm also benet lower preprocess time compar algorithm resort regular express search bare notic previou experi import common scenario protein search problem pattern set search insid new short protein case preprocess time pattern much import scan time normal rather short protein secsmb frequenc opt dfa nfa myer agrep grep figur histogram search time best algorithm regular express search algorithm simul scenario select random substr length text run previou algorithm pattern tabl show time averag substr accumul pattern dierenc favor new algorithm drastic note also problem interest eld research multipattern cbg search algorithm algorithm fwd bwd opt dfa nfa myer agrep grep time tabl search time second pattern random protein length conclus present two new search algorithm cbg ie express form sequenc class charact bound gap cbg special interest comput biolog applic current approach reli convert cbg regular express re much complex therefor search cost much higher necessari cbg algorithm specic design cbg base bndm combin bitparallel backward search sux automata combin recent prove eectiv pattern form simpl letter class charact extend bndm allow limit gap present experi show new algorithm much faster predict algorithm base regular express search addit present criterion select best among two experiment shown reliabl make algorithm special interest practic applic protein search plan extend present work design algorithm abl skip charact time ensur linear worst case time extend scope present optim algorithm select best factor not best prex search challeng type search allow neg gap error match see eg algorithm especi easi extend permit error pursu direct r text retriev theori practic new approach text search faster approxim string match regular express determinist automata fast string search algorithm gener pro regular express dfa use nfa algorithm speed two stringmatch algorithm databas juraj hromkovi fast pattern match string approxim match network express spacer fast bitvector algorithm approxim pattern match base dynam progam fast exibl string match combin bitparallel sux automata fast regular express match multi backward dawg match algorithm multibdm screen protein nucleic acid sequenc librari pattern regular express search algorithm taxonomi toolkit regular languag algorithm fast text search allow error tr regular express determinist automata four russian algorithm regular express pattern match new approach text search fast text search regular express finit automata text algorithm fast bitvector algorithm approxim string match base dynam program program techniqu regular express search algorithm fast flexibl string match combin bitparallel suffix automata textretriev translat regular express small epsilonfre nondeterminist finit automata fast regular express search bitparallel approach suffix automata ctr alberto policr nicola vitacolonna michel morgant andrea zuccolo structur motif search proceed eighth annual intern confer resaerch comput molecular biolog p march san diego california usa gonzalo navarro mathieu raffinot fast flexibl string match combin bitparallel suffix automata journal experiment algorithm jea pe