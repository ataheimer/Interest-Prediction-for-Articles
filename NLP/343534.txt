t clock synchron fault recoveri extend abstract a present convergencefunct base clock synchron algorithm simpl effici faulttoler algorithm toler failur allow recoveri long less third processor faulti at time arbitrari byzantin fault toler without requir awar failur recoveri contrast previou clock synchron algorithm limit total number fault throughout execut realist assum fault detect use algorithm ensur secur reliabl time servic requir mani distribut system algorithm particular secur time fundament assumpt proactiv secur mechan also design allow recoveri arbitrari fault therefor work crucial realiz mechan secur b introduct accur synchron clock extrem use coordin activ cooper processor therefor essenti mani distribut algorithm sy tem although comput usual contain hardwarebas clock imprecis substanti drift highli precis clock expens cumbersom furthermor even hardwarebas clock prone fault andor malici reset henc clock synchron algorithm need let processor adjust clock overcom effect drift failur algorithm maintain processor logic clock base local physic clock messag exchang processor algorithm must deal commun delay uncertainti clock imprecis drift well link processor fault mani system main need clock synchron deal fault rather drift drift rate quit small some work eg actual ignor drift note howev clock synchron ongo task never termin realist limit total number fault system lifetim contribut work abil toler unbound number fault execut long not mani processor faulti onc done allow processor longer faulti synchron clock oper processor protocol withstand arbitrari or byzantin fault affect processor may deviat specifi algorithm arbitrari manner potenti cooper malici disrupt goal algorithm system obvious critic toler fault system secur attack ie design secur system inde mani secur system assum use synchron clock usual effect drift ignor assumpt may becom weak spot exploit attack malici chang clock therefor solut frequent tri reli synchron clock eg use instead fresh authent protocol eg kerbero howev alway achiev often synchron clock essenti effici function fact secur task requir secur synchron clock definit exampl timestamp ecommerc applic payment bid expir date therefor secur time servic integr part secur system dce ongo work standard secur version internet network time protocol ietf note exist secur time protocol simpli authent clock synchron messag easi see may withstand malici attack even authent secur origin motiv work came need implement secur clock synchron proactiv secur toolkit proactiv secur allow arbitrari fault processor long f processor faulti fix length period name proactiv secur make use processor faulti later recov import notic set may possibl malici attack avoid detect solut need work even indic processor fail recov achiev that algorithm proactiv secur period perform correctivemainten action exampl may replac secret key may expos attack clearli secur reliabl period protocol depend secur synchron clock ensur mainten protocol inde perform period substanti amount research proactiv secur includ basic servic agreement secret share signatur eg pseudorandom see survey howev result far assum clock synchron work therefor provid miss foundat futur proactiv secur work relat prior work larg bodi research clock synchroniza tion much focus faulttoler focu relev work number work focu handl processor fault ignor drift dolev welch analyz clock synchron hybrid fault model recoveri arbitrari initi state processor self stabil well nap stop failur number processor byzantin fault third processor work assum synchron model synchron logic clock goal clock number puls result directli compar sinc clear algorithm self stabil in analysi assum system initi correctli hand allow byzantin fault third processor period work asynchron set allow drift synchron real time model timeadapt self stabil suggest kutten pattshamir closer our there goal recov arbitrari fault f processor time function f notic weaker model sens assum period fault timeadapt selfstabil clock synchron protocol asynchron model present herman protocol compar allow drift synchron real time among work deal processor fault drift assum processor fail never re cover bound f number fail processor throughout lifetim system mani work base local converg function earli overview approach found schneider report partial list result along line includ network time protocol design mill allow recoveri without analysi proof furthermor authent version pro pose far attempt recoveri malici fault algorithm use converg function similar fetzer cristian which turn refin welch lynch howev seem one design goal solut incompat processor recoveri specif tri minim chang made clock synchron oper ation use small correct may delay recoveri processor clock far correct one with recoveri may never complet problem account differ converg function one choic small maximum correct valu fast recoveri time chose latter anoth aspect optim maximum logic drift see definit section so lution logic drift equal hardwar drift wherea solut addit factor o gammak k number synchron oper perform everi time period roughli assum less third processor faulti time period requir sever synchron oper take place period model approach ie length time period approach infin ad factor logic drift approach zero conjectur optim logic drift achiev mobil fault model anoth differ algorithm sever tradit converg function base clock synchron algorithm mani solut proceed round correct process approxim agre time round start end round processor read clock adjust clock accordingli contrast thi protocol and also ntp proceed round believ implement round synchron across larg network internet could difficult previou work address fault recoveri clock synchron due dolev halpern simon strong work assum fault detect practic fault often undetect especi malici fault attack make everi effort avoid detect attack handl undetect fault recoveri critic proactiv secur trivial recov processor may clock set valu just bit outsid permit rang solut reli signatur rather authent link therefor also limit power attack assum cannot collect mani bad signatur assumpt algorithm dolev et al base broadcast requir processor sign forward messag processor sever practic disadvantag compar local converg function base algorithm present paper di advantag mostli result global natur discuss fetzer cristian addit practic disadvantag broadcastbas algorithm includ sensit transient delay inabl take advantag realist knowledg regard delay overhead delay result depend broadcast reach network eg internet hand broadcast base algorithm dolev et al requir major processor correct we need two third also requir subnet non faulti processor connect rather demand direct link two processor but implement broadcast use substanti overhead requir twothird processor correct connect inform statement requir clock synchron algorithm handl fault recoveri satisfi synchron guarante time clock valu nonfaulti processor close other accuraci guarante clock rate nonfaulti processor close realtim clock one reason requir practic set processor island sometim need commun coordin processor outsid world recoveri guarante processor longer faulti processor recov correct clock valu rejoin good processor within fix amount time present formal model goal simpl algorithm satisfi requir analyz algorithm model attack temporarili corrupt processor commun link may possibl refin analysi show algorithm use even attack corrupt processor link long mani either corrupt at time formal model network clock network model fulli connect commun graph n processor processor local clock denot processor name assum note trivial solut set local clock constant valu achiev synchron goal accuraci requir prevent happen processor know name name neigh bor addit processor network model also contain adversari may occasion corrupt processor network limit time throughout discuss assum bound ae clock drift good processor bound time take send messag two good processor refer ae drift bound messag deliveri bound envis network environ real time conveni way think real time anoth clock also tick less rate processor clock purpos analysi conveni view local clock processor p consist two compon one unresett hardwar clock hp adjust variabl adj p reset processor clock valu p real time denot cp sum hardwar clock adjust factor time cp notat stress hp adj p mere mathemat conveni processor and adversari realli access valu formal oper processor p perform hp adj p read valu hp ad arbitrari factor adj p chang valu hp chang continu and valu adj p remain fix clock hardwar clock processor p smooth monoton increas function denot hp adjust factor p discret function which chang p add valu adjust variabl local clock p defin assum upper bound ae drift rate processor hardwar clock real time name everi processor p network hold note practic ae usual fairli small on adversari model said abov network model come adver sari occasion break processor reset local clock arbitrari valu while adversari may choos leav processor would like processor recov clock valu envis adversari see but modifi commun network also break processor leav wish break gener adj p discret variabl could also depend use gener paper though processor p adversari learn current intern state processor furthermor point leav p adversari may send messag p may also modifi intern state p includ adjust variabl adj p adversari leav processor p access ps intern state say p faulti or control adversari adversari broke leav yet assum reliabl authent commun processor p q faulti pre cise let denot messag deliveri bound processor p q faulti p send messag q time q receiv exactli messag p furthermor nonfaulti processor q receiv messag processor p time either p sent exactli messag q els faulti time interv power adversari model measur number processor control within time interv certain length limit reason otherwis even adversari control one processor time corrupt clock system move fast enough processor processor limit adversari let ng fix adversari flimit with respect time interv control f processor refer time period f number faulti processor notic definit impli particular f limit adversari control f processor want break anoth one must leav one current processor least time unit break new one rest paper assum n f clock synchron protocol intuit purpos clock synchron algorithm ensur processor local clock remain close close real time faulti processor becom synchron quickli adversari leav them clear howev protocol achiev instantan recoveri must allow processor time recov typic want recoveri time time adversari break new processor one left alreadi recov definit clock synchron consid clock synchron protocol execut network drift rate ae messag deliveri bound presenc flimit adversari respect time period formul good link complet rule replay old messag paus problem applic howev i say ensur synchron maxim deviat ffi time two processor faulti gamma hold ii say ensur accuraci maxim drift ae maxim discontinu whenev p faulti interv hold aclocksynchronizationproto col practic clock synchron protocol basic oper protocol estim processor peer clock therefor begin subsect discuss requir clock estim procedur describ simpl known procedur that then subsect describ clock synchron protocol itself descript abstract clock estim procedur view black box provid properti discuss befor final subsect elabor aspect protocol compar similar synchron protocol model clock estim protocol basic build block subroutin processor p estim clock valu anoth processor q natur requir procedur accuraci valu return procedur far actual clock valu processor q bound error along estim clock valu also get upper bound error estim technic reason also conveni procedur return distanc local clock p q rather clock valu q itself henc defin clock estim procedur twoparti protocol processor p invok protocol tri estim clock valu anoth processor q protocol return two valu dq aq for distanc accuraci valu interpret sinc procedur in voke point differ cq gamma cp dq error aq formal definit say clock estim routin read error timeout maxwait whenev processor p nonfaulti time interv maxwait call routin time estim clock q routin return time maxwait valu d a moreov q also nonfaulti interv valu d a satisfi follow ffl ffl time cq gammac p describ simpl clock estim algorithm requestor p send messag q return repli contain time accord clock q when send repli p receiv repli within messag deliveri bound abort estim set wise p send ping messag q local time s receiv answer c local time r set rgammasintuit p estim local time rs qs time c network total symmetr time messag arriv ident way p q way back q p ps clock progress r constant rate estim would total accur case q return answer c time p local time p local time r q valu c estim offset cant miss rgamma simpl procedur optim sever way common method use practic decreas error estim peer clock at expens wors timeli repeatedli ping processor choos estim given ping least round trip time use exampl ntp protocol also reduc network load may possibl piggyback clock queri messag messag perform differ thread spread across time interv cours implement latter idea mobil adversari set clock synchron protocol period check thread exist restart otherwis to protect adversari kill thread note implement way cannot guarante condit definit anymor sinc separ thread may return old cach valu measur call clock estim procedur henc analysi paper cannot appli right box case time estim done separ thread protocol sync clock synchron protocol use clock estim procedur one describ section denot estimateoffset timeout bound denot maxwait maxim error paramet protocol local time syncint two execut synchron protocol paramet wayoff use processor gaug distanc clock clock proce sor paramet approxim comput network model paramet ae constraint paramet satisfi are syncint maxwait maximum deviat want achiev and set discuss analysi sec tion section sync protocol describ figur basic idea processor p use estimateoffset get estim clock peer p elimin f smallest f largest valu use remain valu adjust clock roughli p comput low valu c f st smallest estim high valu c f st largest estim ps clock cp wayoff away interv c know clock far clock good processor ignor clock reset c c otherwis ps clock not far processor would like limit chang it case instead complet ignor old clock valu reset clock minc ps clock c c move halfway toward valu detail sync protocol slightli differ though specif way low valu high valu chosen processor p first use error bound gener overestim underestim clock valu comput low valu c f st smallest overestim high valu f largest underestim analysi also assum clock estim done parallel time take make local comput neglig run sync take maxwait time local clock thi realli crucial save introduct extra paramet analysi discuss sync protocol follow gener framework conver genc function synchron algorithm see next clock valu processor p comput estim clock valu processor use fix simpl converg function round mention section one notabl differ protocol protocol propos literatur mani converg function protocol for exampl proceed round processor keep differ logic clock round round time two consecut synchron protocol protocol processor ask roundi clock processor alreadi st round would return valu clock as last synchron protocol contrast sync protocol processor p alway respond current clock valu make analysi protocol littl complic greatli simplifi implement especi mobil adversari set sinc variabl current round current algorithm analysi processor need estim clock processor expect improv processor need estim clock local neighbor paramet syncint time synchron wayoff bound clock far rest everi syncint time unit call sync function sync f q ng f st smallest dq f st largest q adj p adj els adj p adj g last round clock time begin next round recov break in known valu anoth practic advantag protocol requir know valu paramet messag deliveri bound hardwar drift ae maximum deviat ffi may hard measur practic in fact may even chang cours execut use valu analysi protocol practic algorithm paramet depend valu like maxwait syncint wayoff may overestim multipl factor without much harm ie without introduc factor maximum deviat logic drift recoveri time actual achiev perform sync protocol processor execut sync protocol everi syncint time unit local time make assumpt rel time sync execut differ processor common way implement set alarm end execut start new execut alarm goe off mobil adversari set one must make sure alarm recov breakin note analysi depend processor execut sync exactli everi syncint time unit rather need time interv aesyncint maxwait real time processor complet least one two sync analysi let denot valu everi nonfaulti processor complet least one two full sync interv length specif set appropri purpos where syncint time specifi protocol maxwait bound execut time singl sync ae drift rate main theorem follow main theorem character perform achiev protocol theorem let defin abov let k assum k i sync protocol fulfil synchron requir maximum deviat ii sync protocol fulfil accuraci requir logic drift discontinu note theorem show tradeoff rate sync protocol perform as function optim perform is is choos small compar for instanc small get almost perfect accuraci ae ae signific term maximum deviat bound clock bia purpos analysi conveni consid bia clock rather clock valu themselv bia processor p time differ logic clock real time denot bp name realtim impli context often omit notat write bp instead bp analysi view protocol sync affect bias processor rather clock valu particular execut sync processor p view dq estim bp gamma bq rather estim view modif adj p last step modif bp therefor rewrit figur algorithm sync processor p bia formul paramet syncint time sunchron wayoff bound clock far rest everi syncint time unit call sync function sync f q ng d b m st smallest b q b m st largest b q bp els bp g protocol term bias rather clock valu figur note referenc bp protocol mean bp real time refer take place stress protocol cannot implement describ figur sinc processor p know bia bp rather descript altern view real protocol describ figur proof overview main theorem provid inform overview proof detail includ use piec syntax statement technic lemma found appendix a complet proof includ full version paper simplic overview look case drift clockread error name note case alway step protocol get analysi look consecut time interv length proce induct inter val interv prove in spirit follow claim i bia valu good processor get closer togeth distanc ffi begin distanc ffi end it ii bia valu recov processor get much closer good processor recov processor distanc rang good processor begin would distanc rang end therefor follow interv bia recov processor ffi away good processor prove claim main technic lemma consid given interv assum set g least n gamma f processor nonfaulti throughout bia valu small rang begin wlog rang gammad d then prove follow three properti first show bias processor g remain rang gammad d throughout interv everi execut sync processor get bias rang processor g sinc g contain f processor b m rang ps bia remain rang also complet sync protocol also follow argument alway processor p never ignor current bia step protocol next consid processor whose initi bia valu low say median g execut two sync time interv sync take averag current bia anoth bia d bia p remain bound strictli d specif one show result bia valu cannot larger z where z initi median valu similarli processor q g high initi bia valu bia valu remain bound strictli gammad specif least z gamma d properti last use result previou step show end interv bia everi processor g z gamma d z d henc case error drift size interv includ processor g shrunk d see thi recal result previou step whenev processor p g execut sync get bia valu bound zd processor low initi bias low estim b m must also smaller z similarli get bia valu bound d processor high initi bias high estim b m p must larger bia p sync protocol comput minb m bp sinc bp rang gammad d result first step result step follow moreov similar argument appli even processor outsid g whose initi bia rang gammad d specif show begin interv nonfaulti processor p high bia say d end interv bia p z d henc distanc p good rang shrink formal analysi includ effect drift read error includ full version paper futur direct result requir third processor faulti period previou clock synchron protocol assum authent channel as do abl requir major nonfaulti processor interest close gap anoth weaker requir subnetwork contain nonfaulti processor remain connect but also assum signatur may possibl prove variant protocol particular would interest show suffici nonfaulti processor form suffici connect subgraph hold also justifi limit clock synchron link limit number neighbor processor one practic advantag converg base clock synchron it note fconnect suffici protocol one construct graph f node f connect yet protocol work it graph consist two cliqu f node addit ith node one cliqu connect ith node other now graph clearli f connect protocol cannot guarante clock one cliqu drift apart other addit work requir explor practic potenti protocol particular practic protocol network time protocol involv mani mechan may provid better result typic case feedback estim compens clock drift improv may need protocol while make sure retain secur well refin protocol analysi provid better bound result typic scenario synchron accuraci requir defin talk behavior protocol adversari suitabl limit may also interest ask happen stronger adversari specif happen adversari too power while back flimit altern way ask question happen adversari limit initi clock valu processor ar bitrari along line desir improv protocol andor analysi also guarante self stabiliza tion mean network eventu converg state nonfaulti processor synchron r implicit reject averag function faulttoler physic clock synchron maintain secur presenc transient fault proactiv pseudorandom gener maintain authent commun presenc breakin probabilist clock synchron probabilist intern clock synchron optim intern clock synchron algorithm dynam faulttoler clock synchron lower bound converg function base clock synchron phase clock transient fault repair proactiv public key signatur system share or cope perpetu leakag synchron clock presenc fault new faulttoler algorithm clock synchron network time protocol kerbero authent servic comput network withstand mobil viru attack new solut byzantin gener problem chapter dce time servic synchron network time understand protocol byzantin clock synchron technic report tr tr synchron clock presenc fault new solut byzantin gener problem optim clock synchron new faulttoler algorithm clock synchron withstand mobil viru attack extend abstract understand dce waitfre clock synchron dynam faulttoler clock synchron lower bound converg function base clock synchron maintain authent commun presenc breakin timeadapt self stabil proactiv public key signatur system proactiv secur toolkit applic maintain secur presenc transient fault proactiv secret share understand protocol byzantin clock synchron ctr michael back christian cachin reto strobl proactiv secur messag transmiss asynchron network proceed twentysecond annual symposium principl distribut comput p juli boston massachusett kun sun peng ning cliff wang faulttoler clusterwis clock synchron wireless sensor network ieee transact depend secur comput v n p juli hermann kopetz astrit ademaj alexand hanzlik combin clockstat clockrat correct faulttoler distribut system realtim system v n p juli kun sun peng ning cliff wang tinysersync secur resili time synchron wireless sensor network proceed th acm confer comput commun secur octob novemb alexandria virginia usa