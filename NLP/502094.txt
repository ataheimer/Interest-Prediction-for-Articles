t effici gener share rsa key a describ effici techniqu number parti jointli gener rsa key end protocol rsa modulu publicli known none parti know factor n addit public encrypt expon publicli known parti hold share privat expon enabl threshold decrypt protocol effici comput commun result present honest curiou scenario passiv adversari b introduct present ecient protocol number parti jointli gener rsa modulu p q prime end comput parti convinc n inde product two larg prime howev none parti know factor n show parti proceed comput public expon e share correspond privat expon techniqu requir number step includ new distribut primal test test enabl two or more parti test random integ n product two larg prime without reveal prime themselv sever cryptograph protocol requir rsa modulu none particip know factor good exampl origin fiatshamir authent protocol parti use modulu n none know factor exampl see usual modulu n unknown factor obtain ask dealer gener it dealer must trust reveal factor n result elimin need trust dealer sinc parti gener modulu n themselv threshold cryptographi concret exampl share gener rsa key use give brief motiv discuss refer survey let pq rsa modulu d e sign veric expon respect ie de threshold rsa signatur scheme involv k parti enabl subset gener rsa signatur given messag subset parti gener signatur unlik standard secret share signatur gener without reconstruct privat decrypt expon d simpl approach obtain koutofk threshold signatur scheme follow pick random s satisfi give parti i abstractli sign messag parti comput send combin that hold secret combin multipli s obtain signatur way parti support darpa contract fc abl gener standard rsa signatur without reconstruct privat key singl locat clearli advantag secur sensit privat rsa key one use certic author construct provid toutofk rsa threshold signatur scheme found import issu left discuss initi gener rsa modulu n share tradit modulu n share privat key assum gener trust dealer clearli dealer anyon compromis dealer forg signatur result elimin need trust dealer sinc k parti gener n privat share themselv result previous known elgam public key system rsa paper organ follow give high level descript protocol section section explain variou stage gener modulu unknown factor section describ protocol given public expon e gener share correspond privat key achiev fault toler one often share use toutofk scheme is subset user appli privat key d explain toutofk share obtain section discuss variou practic improv protocol section note gener secur circuit evalu techniqu eg also use gener share rsa key all primal test repres boolean circuit howev gener techniqu ineci commun privaci model commun privaci model assum protocol follow full connect parti commun parti privat authent channel messag sent parti parti b privat cannot tamper en rout achiev b share secret use encrypt integr authent honest parti assum parti honestli follow protocol end protocol threshold parti enough inform factor gener modulu often call honest curiou scenario section discuss result show assumpt relax recent frankel mackenzi yung show protocol made robust b k malici parti collus protocol b k c privat is coalit size b k c learn inform factor pq howev coalit b k c recov factor reason bound relianc bgw protocol one step algorithm bgw protocol provid inform theoret secur henc limit achiev b k c privaci in honest parti model note possibl achiev k privaci replac bgw step heurist protocol due cock unfortun cock protocol far slower bgw method furthermor secur base heurist argument prove secur properti ie privaci satis protocol provid simul argument compon overview section give high level overview protocol k parti wish gener share rsa key is wish gener rsa modulu publicpriv pair expon factor p q least n bit each end comput n e public share k parti way enabl threshold decrypt parti convinc n inde product two prime coalit inform factor n high level protocol work follow pick candid follow two step repeat twice a secret choic parti pick secret nbit integ p keep secret b trial divis use privat distribut comput k parti determin k divis prime less bound b detail given section step fail repeat step a denot secret valu pick rst iter second iter use privat distribut comput k parti comput valu n step reveal inform secret valu detail given section n public k parti perform trial divis test n divis small prime rang b primal test k parti engag privat distribut comput test n inde product two prime test fail protocol restart step note primal test protocol k privat appli whenev two or more parti involv detail section given public encrypt expon e parti engag privat distribut comput gener share secret decrypt expon d detail section notat throughout paper adher follow notat rsa modulu denot n product two n bit prime p q denot p share possess parti i similarli q p s share among parti denot p ij share p sent parti j perform issu protocol gener two random number test product two prime prime number theorem probabl p q prime asymptot n therefor naiv one perform n probe averag suitabl n found somewhat wors expect n probe need tradit gener rsa modulu one rst gener one prime use n probe second prime use anoth n probe n degrad perform usual unaccept typic fortun thank trial divis thing bad trial divis step b test prime individu therefor analyz protocol must analyz eectiv trial divis suppos random nbit number p pass trial divis test prime less test take like p prime use classic result due merten debruijn show asymptot prp prime j trial divis henc bit probabl p prime approxim consequ tradit rsa modulu gener requir probe protocol requir probe eleven fold degrad perform unfortun manag discuss method avoid slowdown section gener share step protocol parti uniformli pick random n bit integ p secret share prime p taken sum share sinc sum uniform independ random variabl uniformli distribut p pick distribut slightli less entropi uniform show problem sum n log k bit number one easili show p chosen distribut least n bit entropi sinc n least signic bit p uniformli chosen n bit string log k bit lost entropi help adversari sinc easili guess the number parti k small certainli k n formal state next lemma second issu fact share p leak inform factor n instanc parti know p p argu inform help adversari either two issu rais dealt follow lemma let z n set rsa output protocol k parti involv assum k log n lemma suppos exist polynomi time algorithm given random n z chosen distribut share hp least n exist expect polynomi time algorithm b factor k n integ z n assum hard factor lemma show even adversari given n privat share k parti cannot factor modulu n gener protocol proof lemma somewhat tediou given appendix b distract reader main thrust paper distribut primal test begin detail discuss protocol distribut primal test step parti two secret nbit integ parti know n determin n product two prime without reveal inform factor n refer test distribut primal test primal test probabilist test carri z n quadrat extens z n throughout section assum henc result blum integ arrang ahead time parti pick share parti pick share describ test brie discuss structur quadrat extens z n use work twist group n suppos prime factor n mod case x irreduc zn x zn quadrat extens zn linear polynomi gcd follow element tn view linear polynomi linear polynomi f g zn x repres element tn ag z n note element tn also view point project line zn distribut primal test parti agre random g z n valu g known k parti step parti comput jacobi symbol g n g protocol restart step new random g chosen step otherwis parti comput parti comput parti exchang v valu verifi test fail parti declar n product two prime step parti perform fermat test twist group n carri fermat test tn parti pick random h tn parti comput parti exchang u valu verifi test fail n reject otherwis declar success expon comput v s step guarante integ divis correct privaci protocol prove next two lemma lemma let pq integ p q mod n product two distinct prime success declar invoc protocol otherwis parti declar n product two prime probabl least over random choic g h proof observ step protocol test v amount test g n p q mod n suppos p q distinct prime step verifi g impli also sinc q p odd have q mod p mod q sinc follow g n mod n sinc prime follow test step alway succe similarli show p q distinct prime test step succe sinc root f p f q therefor f p xx f q quadrat extens f p f q respect follow group p order p similarli jt q chines remaind theorem conclud h tn satisfi consequ test step alway succe prove convers suppos least one p q prime is ds nontrivi factor n expon use step note e odd sinc p q mod dene follow two subgroup z prove lemma show jhj jgj sinc h subgroup g suce prove proper contain h g ie prove exist g g n h four case consid case suppos let r r distinct prime factor n such must exist pigeonhol principl let r prime factor n distinct r r let quadrat nonresidu modulo r dene g zn element satisfi mod r observ g g sinc e odd consequ g e mod n ie g h case suppos gcdp q exist odd prime r r divid p q r divid n impli r divid n follow z exist element g order r sinc r odd g g sinc r divid p q know r divid n consequ impli g e mod n henc g h case way fall case distinct prime least one bigger case handl n prime power symmetri may assum sinc z p cyclic group order r contain element order r follow z n also contain element g order r befor g g q divis r consequ g e mod n ie g h case left case q sinc know r case may inde happen g show case step primal test fail probabl least half over choic h tn dene group h g show jh j jt n j sinc h subgroup tn suce prove proper contain ie must exhibit element group p order r therefor contain element h order r follow exist element w tn order r sinc assumpt q mod r know r divid q henc r divid npq therefor w complet proof lemma note step protocol need lter integ fall case abov inde integ pass step exampl consid integ prime integ dene bodi proof abov consequ integ alway pass step even though product two distinct prime howev fail step section give altern approach ltere integ fall case follow lemma show n product two distinct prime primal test protocol reveal inform privat share particip lemma suppos p q prime coalit k parti simul view primal test protocol consequ protocol k privat proof sinc p q prime know v v s dene step protocol also u s dene step let u coalit k parti say parti member coalit coalit view consist construct simul coalit view follow simul given thi coalit input protocol start simul coalit view simul rst pick random g z n g comput u use valu given input next simul must gener um gener um trivial sinc um im gener v bit harder proof lemma follow is sign v quadrat residu modulo n simul v simul comput ip unbias coin set v accordingli result distribut v comput indistinguish true distribut assum hard quadrat residuos modulo blum integ conclud given n product two distinct prime set valu hu produc simul comput indistinguish real transcript consequ coalit learn inform begin protocol note step protocol crucial without condit step might fail and reveal factor even p q prime also note practic probabl non rsa modulu pass even one iter test actual far less half altern step step distribut primal protocol necessari lter integ fall case proof lemma describ altern simpler approach lter integ requir less comput although commun parti observ n fall case altern step directli test condit test condit inform leakag parti follow parti pick random r zn keep secret use protocol next section comput mod n without leak inform privat share final parti check gcdz n so n reject use bgw method section approach b k c privat n fall case reject product two distinct prime pass test overwhelm probabl note altern test elimin valid rsa moduli ie moduli prime distribut comput n next describ comput n parti secret wish make product reveal inform privat share beyond reveal knowledg n bgw method benor goldwass wigderson describ eleg protocol privat evalu gener function three parti full techniqu overkil simpl function mind adapt protocol comput hand minim amount comput commun parti on let p n prime unless otherwis state arithmet oper done modulo p protocol work follow c pick two random degre l polynomi word constant term f set p q coecient chosen random z p similarli parti pick random degre l polynomi h step comput k valu parti privat send tripl hp ij q ij h ij parti j j i note standard loutofk shamir secret share p hold step point parti hp parti broadcast n parti step point parti valu n polynomi observ denit f furthermor x polynomi degre l note l dene k l consequ sinc parti least l point x interpol discov coecient final parti evalu obtain n mod p sinc n p parti learn correct valu n descript protocol clear parti learn valu n note protocol requir least three parti involv case exactli three parti linear polynomi use protocol privat follow lemma show coalit b k parti learn inform privat share statement hold inform theoret sens complex assumpt need complet sketch proof lemma refer complet detail lemma given n coalit b k c parti simul transcript protocol consequ protocol b k c privat proof sketch set c symmetri may assum coalit made follow consist let index vari l index j vari index r vari k coalit view consist simul coalit view simul given input rst pick random j pick p ri q ri h ri random independ element z p comput pick random degre l polynomi x z p x satisfi complet simul set n r r valu perfect simul coalit view protocol consist one phase full bgw method dier bgw protocol need truncat step also combin addit multipl stage one phase result comput surprisingli ecient essenti one multiprecis multipl perform parti the one step note commun parti reduc factor two use variant protocol describ section bgw modulo non prime descript bgw protocol arithmet oper carri modulo prime come section use run bgw protocol work modulo non prime p is k parti wish comput necessarili prime one easili show prime divisor smaller k protocol use is inde lagrang coecient use interpol step exist lemma remain correct run protocol modulo contain small factor requir slight modic write prime factor smaller k prime factor smaller k mention protocol immedi work modulo problem work modulo shamir secret share which basi bgw possibl instanc consid case possibl use shamir secret share f among k parti sinc f contain enough point in shamir secret share parti must given uniqu point simpl solut run entir protocol algebra extens f contain k point simul argument immedi extend case gener one factor prime factor run protocol larg enough extens factor use chines remaind theorem one recov valu n mod share nal outcom case as section wish parti evalu function howev result addit share among parti rather becom publicli avail is end comput parti inform reveal privat share nal result modic bgw order achiev goal immedi parti perform step protocol perform broadcast describ end step consequ end point polynomi x degre l evalu n use lagrang interpol know i appropri lagrang coecient therefor rather broadcast n end step parti simpli set result s addit share n requir befor simpl simul argument show minor parti obtain inform protocol trial divis section consid trial divis step step b section let integ share among k parti let p small prime test p divid q parti pick random r z p use bgw protocol as describ section comput divid q furthermor sinc r unknown minor parti qr provid inform q note approach bad candid q alway reject unfortun good candid might also reject inde even p divid q still possibl allevi problem one repeat test twice small prime p probabl good candid reject one caveat approach bgw protocol describ section cannot appli test divis q small p name p k reason small p eld f p contain enough point shamir secret share among k parti small p one must run bgw protocol extens eld f p contain least k element explain section share gener publicpriv key parti success construct rsa modulu may wish comput share given encrypt expon e two approach comput share d rst work small e say e ecient requir littl commun parti second work e still ecient requir commun throughout section set recal public modulu k local comput comput share parti must invert e modulo expos s unfortun tradit invers algorithm eg extend gcd involv comput modulo know ecient perform modular arithmet modulu share among particip fortun trick comput e mod modulo reduct singl user involv invers done three step comput observ mod e set inde sinc e mod need modulo reduct sinc e mod immedi deduc mod e method reli observ small public expon begin describ ecient techniqu gener share public expon e small method leak valu n mod e henc appli e small plu side k privat parti jointli determin valu possibl comput l without reveal inform privat share use simpl protocol due benaloh k privat step let parti local comput e result step share enabl share decrypt use equal c c r n parti determin valu r tri possibl valu r k trial decrypt approach leak n mod e r total log e bit arbitrari public expon unlik previou techniqu second method gener share work arbitrari public expon e leak less log k bit inform cannot help oppon sinc easili guess rather expos mod e invert as abov show invert mod e share among parti result inform reveal protocol k privat step parti pick random r z e step use protocol section e end comput known parti invert modulo e protocol restart step step parti local comput henc parti abl share invers mod e without reveal inform step next parti agre prime p ne view share e element z p use modi bgw protocol section comput addit share parti minor parti learn inform step regard s integ p object ensur integ know end step therefor given candid valu given correct equal hold integ determin correct protocol proce step possibl valu trial decrypt step succe step assum equal hold integ know e divid see observ that therefor parti set result determin valu r tri possibl valu r k trial decrypt protocol leak valu r s henc total log k bit expos valu r found use one trial decrypt gateway rst pick random messag ask parti decrypt c parti comput send result gateway perform k multipl gateway nd r relat valu r back parti x share accordingli determin procedur repeat k candid valu s recal k typic small eg less note observ step protocol need due fact bgw method carri modulo p howev possibl carri bgw protocol step directli integ avoid step altogeth done use variant shamir secret share integ see let pick two polynomi follow constant term set f coecient chosen random f g interact parti parti comput point polynomi integ point multipli appropri lagrang coecient becom addit share integ unfortun approach result share privat key order n rather n protocol result factor two slowdown threshold signatur gener posit side need leak valu s comput mod e step abov base techniqu due beaver toutofk share previou two subsect explain one obtain koutofk share d howev provid faulttoler often desir toutofk share enabl subset parti appli privat key simplest solut due t rabin make use gener techniqu convert koutofk share privat rsa key toutofk share scheme t rabin approach immedi appli koutofk share obtain optim describ sever practic techniqu improv perform distribut protocol optim incorpor implement protocol siev step protocol section parti repeatedli pick random share integ nd one divis small prime engag interact trial divis protocol brie outlin ecient approach let product odd prime less bound b suppos k parti could gener addit share random integ z parti could set share p random number appropri length make p nbit integ result candid prime random nbit integ rel prime need run trial divis protocol p prime less question remain parti gener addit share random integ z so parti gener random element b z random element z parti use bgw method section convert multipl share addit share one caveat work bgw method must made work zm which eld done explain section load balanc step primal test parti comput parti comput v notic n roughli n bit bit consequ parti work twice hard parti even thing make sens test k candid n parallel test role parti play dierent parti way g n mod n comput dierent parti n result better load balanc improv perform factor two parallel trial divis recal n comput parti perform trial divis invok distribut primal test step section k parti perform trial divis parallel parti charg verifi n divis set small prime ecient done hardcod prime rang b list parti charg test n divis prime p j j mod k factor k speedup enabl us use larg bound b increas eectiv trial divis fermat lter need run full primal test section everi candid modulu n instead one fermat test rst proceed perform full test fermat test succe refer test fermat test equal hold n product two prime carri test zeroknowledg k parti comput v verifi protocol easili shown k privat save comput jacobi symbol g integ n avoid quadrat slowdown section note protocol suer quadrat slowdown comparison singl user gener rsa key main reason prime p q gener onc brie outlin potenti solut consid case three parti alic bob carol could gener n alic p r p nbit prime bob q b r b q b nbit prime carol r c number probe r found prime singl user gener n henc abl avoid quadrat slowdown furthermor singl parti know complet factor result n unfortun approach scale well enabl tprivaci n must product prime also note exampl abov parti must perform distribut primal test verifi n product three prime techniqu paper easili gener enabl test note one use recent result that test share modulu product three prime without reveal factor robust throughout paper use model parti honestli follow protocol ne parti honestli tri gener share rsa key applic desir make protocol robust activ adversari cheat protocol sinc rsa function veriabl the parti simpli check correctli decrypt encrypt messag activ adversari limit amount damag caus howev may still possibl parti cheat protocol consequ abl factor result n similarli parti cheat caus nonrsa modulu incorrectli accept recent frankel mackenzi yung show protocol made withstand malici parti protocol enabl parti detect exclud malici parti practic one could run nonrobust protocol modulu n found believ product two prime then robust frankelmackenzieyung protocol use determin major parti cheat nonrobust phase result robust gener share rsa key see describ simpl method make nonrobust protocol robust number particip small eg less ten consid case four parti one malici one run nonrobust protocol candid modulu n found point protocol run four time triplet user rst run three parti write random integ rang n parti send p parti valu nonrobust protocol among three ignor parti result n match n comput four parti involv n turn rsa modulu n reject parti announc one misbehav experi repeat four triplet time exactli one parti exclud comput assum one parti malici result n must product two larg prime furthermor malici parti cannot know factor n sinc point protocol honest parti reveal inform share anoth singl parti note approach enabl parti detect cheat help detect malici parti is gener k parti engag nonrobust protocol c malici protocol made robust cost k c extra invoc result comput privat clearli approach appli long k c small summari open problem present techniqu allow three parti gener rsa modulu parti convinc n inde product two prime howev none factor n method achiev b k c privaci also show show parti gener share privat decrypt expon allow threshold decrypt test n product two prime present distribut doubleprim test note test recent extend tripleprim test enabl k parti test n product three prime without reveal inform factor demonstr eectiv protocol implement them gener bit share rsa key among three mhz pentium machin take second see descript implement well detail time measur import open problem gener share key special form exampl modulu product safe prime ie p q prime consid secur purpos well technic reason relat threshold cryptographi current techniqu enabl share gener moduli special form progress direct would help acknowledg thank beaver help discuss result r univers class hash function on number uncancel element siev eratosthen foc pp a cock multipl method bgw protocol describ section achiev b k c privaci inform theoret secur cock describ multipl protocol heurist appear provid k privaci unfortun cock protocol far slower bgw method furthermor seem possibl prove secur use natur tr strong prime easi find play mental game prove yourself practic solut identif signatur problem share homomorph keep share secret secret practic zeroknowledg protocol fit secur microprocessor minim transmiss memori zeroknowledg proof ident complet theorem noncryptograph faulttoler distribut comput multiparti uncondit secur protocol knowledg complex interact proof system noncryptograph faulttoler comput constant number round interact modif fiatshamir scheme practic protocol larg group orient network fast signatur gener fiat shamirmyampersandmdashlik scheme share function secur robust effici distribut rsakey gener share secret two parti rsa key gener secur comput abstract share gener authent signatur extend abstract robust effici share rsa function simplifi approach threshold proactiv rsa gener share rsa key two parti effici dynamicreshar verifi secret share mobil adversari knowledg gener rsa paramet gener product three prime unknown factor optimalresili proactiv publickey cryptosystem secur fault toler commun complex distribut system ctr jaime brown juan m gonzalez nieto colin boyd effici secur selfescrow publickey infrastructur proceed nd acm symposium inform comput commun secur march singapor dan boneh xuhua ding gene tsudik finegrain control secur capabl acm transact internet technolog toit v n p februari