t effici local search dag schedul a abstractschedul dag multiprocessor one key issu highperform comput realist schedul algorithm heurist heurist algorithm often room improv qualiti schedul algorithm effect improv local search paper present fast local search algorithm base topolog order compact algorithm effect reduc schedul length produc dag schedul algorithm thu improv qualiti exist dag schedul algorithm algorithm quickli determin optim search direct thu low complex extrem fast b introduct schedul comput onto processor one crucial compon parallel process environ perform compiletim runtim schedul perform compiletim call static schedul schedul perform runtim call dynam schedul exibl inher dynam schedul allow adapt unforeseen appli cation requir runtim howev load balanc suer runtim overhead due load inform transfer among processor load balanc decisionmak process commun delay due task reloc furthermor runtim schedul algorithm util neither characterist inform applic problem global load inform load balanc decis major advantag static schedul overhead schedul process incur compil time result ecient execut time environ compar dynam schedul static schedul util knowledg problem characterist reach wellbalanc load consid static schedul algorithm schedul edgeweight direct acycl graph dag also call task graph macrodata ow graph set homogen processor minim complet time sinc static schedul problem npcomplet gener form optim solut known restrict case consider research eort area result mani heurist algorithm paper instead suggest new schedul algorithm present algorithm improv schedul qualiti exist schedul algorithm use fast local search techniqu algorithm call task topolog assign schedul kernel systemat minim given schedul topolog order move dynam cost node use quickli determin search direct eectiv reduc length given schedul paper organ follow next section review dag schedul algorithm section local search techniqu describ random local search algorithm discuss section section propos new local search algorithm task perform data comparison present section final section conclud paper schedul direct acycl graph dag consist set node fn connect set edg denot e ij node repres task weight node n wn execut time task edg repres messag transfer one node anoth node weight edg e ij we ij equal transmiss time messag communicationtocomput ratio ccr parallel program dene averag commun cost divid averag comput cost given system dag node parent call entri node wherea node child call exit node node cannot start execut gather messag parent node static schedul number node number edg node weight edg weight assum known program execut weight two node assign process element pe assum zero object static schedul assign node dag pe schedul length makespan minim without violat preced constraint mani approach employ static schedul classic approach also call list schedul basic idea make prioriti list node assign node one one pe schedul process node highest prioriti chosen schedul pe allow earliest start time select accommod node report schedul algorithm base concept employ variat prioriti assign method hlf highest level first lp longest path lpt longest process time cp critic path follow review contemporari static schedul algorithm includ mcp dsc dl cpn method modi critic path mcp algorithm base aslateasposs alap time node alap time dene critic length critic path leveln length longest path node n exit node includ node n mcp algorithm design schedul dag bound number pe sort node list increas alap order rst node list schedul pe allow earliest start time consid idl time slot node delet list oper repeat list empti domin sequenc cluster dsc algorithm design base attribut task graph call domin sequenc ds ds dene partial schedul task graph path maximum sum commun cost comput cost graph node ds consid rel import other readi node highest prioriti schedul rst prioriti child node schedul node updat oper repeat node schedul dynam cost use quickli determin critic path length idea incorpor task algorithm reduc complex dynam level schedul dl algorithm determin node prioriti assign attribut call dynam level dl node everi schedul step dl dierenc static level messag readi time dl comput dl readi node avail processor suppos dln j largest among pair readi node avail processor schedul n processor j repeat process node schedul recent new algorithm propos use critic path node cpn algorithm base cpndomin prioriti next cpn readi node put cpndomin list nonreadi cpn parent node n smallest alap time put list parent n alreadi list otherwis ancestor node n recurs includ list cpn node list rst node list schedul pe allow earliest start time schedul node remov list oper repeat list empti cpndomin algorithm util two import properti dag critic path topolog order potenti gener good schedul although algorithm produc rel good schedul usual optim sometim gener schedul far optim paper propos fast local search algorithm task improv qualiti schedul gener initi schedul algorithm local search one earli techniqu combinatori optim appli solv nphard optim problem principl local search rene given initi solut point solut space search neighborhood solut point recent number ecient heurist local search ie con ict minim random selectionassign pre partial selectionassign develop sever signic local search solut schedul problem sat algorithm rst local search algorithm develop satis problem later s schedul problem wellknown maxsatis problem local search solut sat problem appli solv sever largescal industri schedul problem two basic strategi use local search rst one random search local search direct randomli select initi solut point improv move rene solut point otherwis anoth search direct randomli select random strategi simpl eectiv problem nqueen problem howev may ecient problem microword length minim dag schedul problem second strategi util certain criteria nd search direct like lead better solut point microword length minim compat class consid move node class may reduc cost function strategi eectiv reduc search space guid search toward promis direct local search algorithm present paper use strategi care select criteria local search dag schedul becom ecient schedul qualiti improv signicantli random local search algorithm number local search algorithm schedul present random local search algorithm dag schedul name fast given see figur algorithm node randomli pick move randomli select pe schedul length reduc move accept otherwis node move back origin pe move success not take oe time comput schedul length e number edg graph reduc complex constant maxstep dene limit number step maxstep node inspect time taken algorithm proport emaxstep maxstep set moreov randomli select node pe may abl signicantli reduc length given schedul even maxstep equal number node lead complex oen random search algorithm still cannot provid satisfactori perform f pick node n randomli pick pe p randomli move n pe p schedul length improv move n back origin pe searchstep maxstep figur random local search algorithm fast fast algorithm modi shown figur major improv use nest loop probabilist jump total number search step maxstepmaxcount margin use reduc number step maxstep set maxcount margin parallel version fast algorithm name fastest speedup pe obtain fastest local search topolog order schedul propos fast local search algorithm util topolog order eectiv dag schedul ing algorithm call task topolog assign schedul kernel algorithm node dag inspect topolog order order requir visit everi edg determin whether schedul length reduc time spent move drastic reduc inspect everi node larg graph becom feasibl also order compact given schedul systemat given graph order describ task algorithm succinctli sever term repeat f pick node n randomli pick pe p randomli move n pe p schedul length improv move n back origin pe increment counter otherwis set counter searchstep maxstep counter margin schedul length schedul endif randomli pick node critic path move anoth processor searchcount maxcount figur modi fast algorithm dene follow largest sum commun comput cost top level node ie entri node n exclud weight wn largest sum commun comput cost bottom level node ie n exit node critic path cp longest path dag length critic path dag node set graph task algorithm appli previous schedul dag case schedul dag construct contain schedul execut order inform enforc execut order pe pseudo edg with zero weight insert incorpor initi schedul graph denit tlevel blevel critic path still appli schedul dag dene term schedul pe pen predecessor node schedul immedi node n pe pen node n rst node schedul pe pn null successor node schedul immedi node n pe pen node n last node schedul pe sn null procedur task dag schedul begin initi construct schedul dag node n longest path dag search node dag schedul begin pick node max ln pe k obtain l k n move n pe k pick pe min l k improv let node n stay pe pen improv els begin move node n pe pen pe t modifi pseudo edg dag propag tlevel n children mark n schedul figur task topolog assign schedul kernel local search algorithm base topolog order fast schedul sketch task algorithm shown figur detail descript task algorithm figur one characterist task algorithm independ algorithm use gener initi schedul node label n current pe number pen long initi schedul correct everi node n avail applic local compact algorithm guarante new schedul graph better equal initi one input algorithm given dag schedul gener heurist dag schedul algorithm first schedul dag construct pseudo edg may ad zero commun time is data transfer along edg step comput valu blevel node schedul dag initi tlevel entri node edg mark unvisit variabl next k point next node inspect pe k initi none node inspect next k point rst node pe k step readi node n maximum valu ln select inspect tie broken tleveln tleveln tie broken randomli node readi parent inspect way node inspect topolog order although topolog order blevel tlevel cpndomin use tlevel blevel shown good indic order inspect inspect node n step valu ln recalcul pe conduct recalcul pe k node n pretend insert right front next k here tleveln vari parent node schedul either pe k pe pen similarli bleveln vari child node initi schedul either pe k pe pen tlevel parent node avail blevel child node unchang valu ln everi pe easili comput valu indic degre improv local search new ln s recalcul everi pe node n move pe allow minimum valu ln node n move pe t correspond pseudo edg modi step tlevel n propag children node becom readi tlevel comput process continu everi node inspect task algorithm satis follow properti theorem critic path length lcp increas step task algorithm proof ln node n determin longest path includ n assum increas result move node n then n n j must path entri node exit node ln j increas path must longest step construct schedul dag node n last node pe exist e ij creat pseudo edg e ij n n j we ij step initi node n comput bleveln consid pseudo edg entri node mark n readi initi tleveln mark everi e ij unvisit pe k let next k point rst node pe step select pick readi node n highest valu ln tie broken tleveln tleveln tie broken randomli step inspect pe k recomput l k n assum n move pe k insert next k find pe l n step compact stay pe let next els move node n pe delet edg e li pseudo edg delet edg e im pseudo edg edg e lm previous exist creat pseudo edg e lm we lm visit let sn l pseudo edg creat pseudo edg e xi edg e xi previous exist creat pseudo edg e iy edg e iy previous exist let sn x step propag tlevel child node node n say n mark edg e ij visit incom edg n j mark visit mark n j readi comput tleveln j repeat step node inspect figur detail descript task algorithm path includ n j determin valu ln j path determin valu otherwis longer path determin ln ln ln j increas ln lcp thu ln j lcp sinc l valu everi node larger lcp lcp increas n node critic path reduct ln valu impli reduct critic path length entir graph it may immedi reduc critic path length case parallel critic path n node critic path reduc ln valu reduc critic path length immedi howev increas possibl length reduct later step task algorithm tlevel blevel valu reus complex determin l reduc follow theorem explain topolog order make complex reduct possibl theorem node dag inspect topolog order readi node append previou node list pe blevel node invari inspect tlevel node invari inspect proof node n inspect topolog order impli descend inspect therefor blevel n chang sinc blevel descend n chang n inspect topolog order impli ancestor n x inspect node alway append previou schedul node pe tlevel inspect node remain unchang follow topolog order node inspect local eect edg zero l valu node inspect move tlevel current inspect node comput instead comput tlevel blevel node therefor time spent comput l valu signicantli reduc theorem time complex task algorithm oe e number edg n number node p number pe proof insert pseudo edg rst step cost on second step spend oe time comput blevel valu third step cost on nding highest l valu main comput cost algorithm step comput l valu node cost inspect everi edg connect n dn degre node n n step cost p complet inspect node target pe must select p pe result cost onp therefor total cost oe task algorithm share concept dsc algorithm topolog order use avoid repeat calcul dynam critic path complex reduc task select criteria tlevelblevel use md dsc algorithm measur import node schedul proven ecient criteria node select task algorithm dierent dsc algorithm mani aspect dsc algorithm schedul dag onto unbound number cluster wherea task local search algorithm improv exist schedul bound number processor although dsc task algorithm aim reduc schedul length dsc realiz merg cluster wherea task realiz move node among processor dsc merg cluster base gain reduct edg node parent task goe one step consid possibl gain reduct edg node children potenti result better ecient decis follow use exampl illustr oper task algorithm exampl assum dag shown figur schedul three pe dag schedul algorithm schedul shown figur a three pseudo dash edg ad construct schedul dag one node n node n one node n node one node n node n not shown figur a schedul length blevel node comput shown tabl tabl trace tlevel valu step tabl p indic node largest l valu inspect current step tabl indic origin pe p pe node move to first one readi node n cp node l valu pe l n l valu pe comput l n shown tabl thu node n move pe pe shown figur b lcp dag reduc iter move node n reduc l valu iter node n move pe pe l valu reduc shown figur c follow iter node move figur dag exampl time time a b cnext next next next next next nextnext next figur exampl task oper tabl initi blevel valu node exampl blevel tabl l valu readi node select node inspect iter tabl l valu node n pe select pe iter node pe perform studi section present perform result task algorithm compar task algorithm random local search algorithm fast perform experi use synthet dag well real workload gener gaussian elimin program use random graph gener synthet dag randomli gener graph consist thousand node larg dag use test scalabl robust local search algorithm dag synthet gener follow manner given n number node dag rst randomli gener height dag uniform distribut mean roughli equal n level gener random number node also select uniform distribut mean roughli equal n then randomli connect node higher level lower level edg weight also randomli gener size random dag vari increment three valu communicationcomputationratio ccr select weight node edg gener randomli averag valu ccr correspond perform data averag two hundr graph evalu perform algorithm two aspect schedul length gener algorithm run time algorithm tabl show comparison modi fast algorithm adn task algorithm pe pe respect cpn cpndomin algorithm fast modi fast algorithm task task algorithm comparison conduct dierent size dierent ccr cpndomin algorithm gener initi schedul schedul length valu column cpn length initi schedul valu column fast initi schedul plu random local search algorithm valu column task initi schedul plu task algorithm column sd follow schedul valu standard deviat column follow fast task percentag improv initi schedul run time cpndomin algorithm modi fast algorithm task algorithm also shown tabl seen task much eectiv faster fast search order l valu superior random search order tabl ccr pe improv ratio drop case degre parallel exploit maxim much it fast algorithm two order magnitud slower task partli fastest algorithm run pe faster still one order magnitud slower task tabl comparison synthet dag cpn initi schedul algorithm pe ccr schedul length run time sec node cpn sd fast sd task sd cpn fast task tabl comparison synthet dag cpn initi schedul algorithm pe ccr schedul length run time sec node cpn sd fast sd task sd cpn fast task tabl comparison synthet dag dsc initi schedul algorithm pe ccr schedul length run time sec node dsc sd fast sd task sd dsc fast task tabl comparison synthet dag dsc initi schedul algorithm pe ccr schedul length run time sec node dsc sd fast sd task sd dsc fast task tabl show comparison dsc initi schedul algorithm cluster merg algorithm shown map cluster processor cpndomin algorithm gener better schedul dag smaller ccr dsc ecient ccr larg smaller ccr dsc good therefor task produc larg improv ratio hand dsc particularli suit larg ccr task unabl improv much result gener less improv obtain task algorithm better schedul good schedul leav less room improv task algorithm normal provid uniformli consist perform is schedul produc task depend much initi schedul also test local search algorithm dag gener real applic gaussian elimin partial pivot gaussian elimin program oper ma trice matrix partit column nest grain size column partit scheme singl column howev negrain partit gener mani node graph exampl negrain partit kk matrix gener dag node reduc number node mediumgrain partit use tabl list number node dierent matrix size grain size number column ccr graph gener hypertool annot sequenti gaussian elimin program comparison fast algorithm task algorithm dierent dag dierent number pe shown tabl tabl use cpn initi schedul algorithm tabl use dsc initi schedul algorithm gener cluster algorithm dsc perform well commun dag heavi therefor gener better schedul gaussian elimin task perform better fast case much faster fast conclus futur work local search eectiv method solv nphard optim problem appli improv qualiti exist schedul algorithm task lowcomplex highperform local search algorithm static dag schedul quickli reduc schedul length produc dag schedul algorithm util topolog order much faster much higher qualiti random local search algorithm demonstr task abl reduc drastic schedul length produc wellknown algorithm dsc cpn futur work comparison best schedul algorithm mcp conduct preliminari comparison show small improv observ sinc mcp produc good result alreadi tabl number node dierent matrix size grain size gaussian elimin matrix size kk kk grain size node tabl comparison gaussian elimin cpn initi schedul algorithm matrix grain schedul length run time sec size size pe cpn fast task cpn fast task tabl comparison gaussian elimin dsc initi schedul algorithm matrix grain schedul length run time sec size size pe dsc fast task dsc fast task acknowledg research partial support nsf grant ccr ccr nserc research grant ogp nserc strateg grant mef nserc strateg grant str would like thank anonym review construct comment r comparison list schedul parallel process system applic perform analysi compiletim optim approach list schedul algorithm distribut memori multiprocessor schedul parallel program task onto arbitrari target machin task schedul parallel distribut system comput intract guid theori npcomplet rinnoy kan parallel algorithm architectur fast search phd thesi solv largescal sati abil problem averag time complex sever local search algorithm sati local search sati parallel sequenc assembl line problem comparison multiprocessor schedul heurist grain size determin parallel process fastest practic lowcomplex algorithm compiletim assign parallel program multiprocessor microword length minim microprogram control synthesi partit schedul parallel program multiprocessor compiletim schedul heurist interconnectionconstrain heterogen processor architectur program aid messagepass system dsc schedul parallel task unbound number processor pyrro static task schedul code gener messagepass multiprocessor tr ctr savina bansal padam kumar kuldip singh improv duplic strategi schedul preced constrain graph multiprocessor system ieee transact parallel distribut system v n p june