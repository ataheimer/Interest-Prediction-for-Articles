t buffer bank multiprocessor system a abstracta memori design base logic bank analyz share memori multiprocessor system design physic bank replac logic bank consist fast regist subbank slower memori subbank buffer input output queue substanti reduc effect cycl time refer rate satur princip contribut work develop simpl analyt model lead scale relationship among effici bank cycl time number processor size buffer granular bank scale relationship impli interconnect network suffici bandwidth support effici access use highspe memori lowerspe memori substitut littl addit interconnect cost scale relationship shown hold full datapath vector simul base cray ymp architectur model use develop design criteria system support independ refer stream perform system evalu simul rang load condit b introduct gap memori speed processor request rate increas rapidli high perform system gap due decreas processor cycl time use superscalar multipl issu mecha nism increas number processor share memori system demand gigabit per second network commu nicat addit design sought replac expens sram memori cheaper slower dram order support dramat increas main memori size reason cost face demand sever manufactur introduc complex circuitri dram chip order reduc effect memori access time mit subishi exampl introduc proprietari cach dram chip small sram reduc memori access time refer contain sram anoth cach dram develop rambu approach includ synchron dram technolog enhanc dram technolog pipelin memori also propos effect memori hierarchi highperform memori system extens studi ordinari interleav memori memori cycl time minimum time requir success refer memori modul cycl time regul quickli processor fill memori pipelin conflict due bad refer pattern caus processor block latenc time take read request navig memori pipelin return valu processor hierarch memori system contain cach bank level memori cycl time latenc longer constant cach reduc effect cycl time latenc paper explor buffer altern supplement cach chip level propos design base buffer scheme call logic bank buffer physic bank subdivid buffer describ section ii princip contribut paper develop simpl model deriv scale relationship among effici bank cycl time number processor size buffer granular bank goal logic bank design provid mechan use larg slower memori moder number high perform processor maintain current oper effici second contribut work full datapath simul regist feedback realist interconnect network high perform machin cray y mp separ interconnect network read return valu simpl memori bank replac memori hierar chi refer arriv return network unpredict time moder load result content appear problem sever approach equal perform read write heavi load examin buffer propos number author possibl solut problem memori conflict simul studi brigg show buffer processor level pipelin multiprocessor improv memori bandwidth provid averag request rate exceed memori servic time smith taylor explor effect interconnect network buffer realist simul model simul paper base simi lar simpler interconnect network buffer paper memori modul rather within interconnect network emphasi simul verif scale relationship propos reduc memori conflict made skew relat techniqu shown effect reduc intraprocessor conflict recent simul studi sohi explor skew input output buffer singl refer stream consist vector length fix stride skew techniqu effect situat consid paper conflict processor main caus perform degrad skew use conjunct logic bank reduc intraprocessor content studi use memori effici throughput primari measur memori perform effici memori system defin ratio total memori request total number memori request includ request deni conflict bank conflict assum conflict occur processor attempt refer next cycl memori effici measur viewpoint processor indic degre processor abl success issu memori refer effici essenti pa probabl accept calcul brigg davidson model lm memori without buffer follow sohi throughput defin ratio vector refer conflictfre system actual time vector refer sohi argu ratio appropri throughput measur compar memori design vector process environ throughput fraction optim rate entir vector deliv system vector element read latenc defin time first attempt access vector element avail element vector regist effici depend number processor number bank bank cycl time load unbuff design multiprocessor machin give quadrat relationship memori speed number bank fix perform memori cycl time doubl rel processor speed interconnect cost must quadrupl maintain memori perform propos design twotier system result show interconnect network bandwidth suffici support processor use highspe mem ori lowerspe memori buffer substitut littl addit interconnect cost perform degrad section ii describ logic bank design analyt model write develop section iii shown reason agreement random refer simul section iv relationship effici system paramet bank cycl time number bank number processor analyz sever design criteria develop appli later section vector system section v introduc simul model use synthet gener refer vector multiprocessor system similar cray ymp model incorpor full datapath simul includ return conflict regist feedback recommend simul studi smith taylor vector result compar model predict moder processor load section vi shown even small number buffer slot result signific gain perform section vii design criteria appli processor system independ refer stream heavi processor load rang stride distribut perform write excel degrad read sever approach reduc degrad examin includ subbank output buffer addit line optim ar bitrat port handshak portlin buffer increas return bandwidth found last altern complet elimin degrad final discuss conclus present section viii ii logic bank logic bank consist fast regist logic bank regist lbr number subbank queue pend request shown figur memori within logic bank divid equal subbank address use standard interleav techniqu consecut address go consecut subbank refer logic bank gate lbr la cycl regist free la logic bank access time room queue specifi subbank refer rout queue otherwis lbr remain busi slot avail one refer logic bank occur interv l l call logic bank cycl time minimum time interv success refer logic bank interv may longer lbr wait queue slot refer stream attempt access logic bank lbr busi logic bank conflict occur one refer delay model simul discuss later assum la paramet defin multiprocessor system share memori organ logic bank shown tabl default valu use later simul except otherwis indic singleport processor number refer stream n also equal number pro cessor vector simul processor allow multipl port refer stream pro cessor refer stream assum either read write read stream difficult handl valu must return processor return fanin network read requir addit hardwar arbitr read valu arriv fanin network predict time return valu must includ tag bit indic destin hardwar also requir cach dram use sinc effect access time longer constant case either fact cach dram use conjunct logic bank reduc effect physic subbank cycl time littl addit hardwar logic bank introduc seznec jegou support data synchron pipelin architectur dspa design includ reorder unit data flow logic bank chronolog order scheme propos paper reorder unit requir logic bank reorder occur processor buffer distinct cach miss penalti overhead cach manag propos circuitri would take small chip area incorpor chip altern could built interfac offth shelf memori chip system interconnect network particularli appropri situat averag util maximum capac period maxim load addit reduc averag access time logic bank smooth type bursti memori traffic typic highli vector program iii model random write model effici logic bank memori deriv later section throughput latenc relat ef ficienc assum refer stream initi one refer per clock cycl refer attempt fail retri refer stream follow cycl long lbr avail processor see memori consist logic bank cycl time l logic bank cycl time effici case given e l effici determin interrefer stream conflict logic bank level queue full memori behav almost though logic bank effect memori cycl time case minimum delay incur transfer refer queue subbank c physic memori cycl time effici case denot e p simpl probabilist argument show probabl success refer e expect number attempt per success refer isx e averag number cycl take refer stream initi refer viewpoint processor contrast averag refer time viewpoint physic memori directli relat bank cycl time delay let p probabl logic bank regist lbr avail refer first initi success refer take attempt condit probabl p attempt probabl effect effici weight averag two case depend probabl slot avail appropri subbank queue averag number cycl success refer estim bye e combin effect effici relationship written as express effect effici call logic bank model remaind paper probabl p lbr full estim consid logic bank system k independ queue mdb queu disciplin queu model exponenti arriv rate determinist servic time one server finit queue fix queue size distribut number refer queue depend paramet ae t p averag arriv rate p effect queue servic time estim q probabl free stream initi refer n number independ refer stream b number physic subbank kl simpl simul use comput tabl probabl given valu ae queue size m probabl individu queue free determin valu p entir logic bank estim follow k subbank per logic bank lbr busi k queue m slot fill extra slot lbr itself thu f probabl queue size full probabl lbr method use calcul p graph given later estim e p e l de rive situat logic bank analyz random access bailey system n singleport processor b memori bank let memori bank cycl time processor model markov chain state processor wait bank busi cycl denot state processor deriv steadi state express effici system as q repres probabl free processor attempt refer current clock cycl relev valu n b effici domin express squar root r effici invers proport drop fairli rapidli bank cycl time doubl number bank must increas factor four maintain effici bailey model use estim e p use bank cycl time logic bank effici e l also estim use bailey model l number logic bank system l logic bank cycl time assum one much discuss paper due assumpt made deriv bailey model perform poorli small number processor bank cycl time near one unfortun effect effici sensit valu e l p close one anoth model develop model call direct model deriv use markov chain manner similar use bailey assum refer stream one three state free state state make success refer state attempt refer unsuccess let probabl given free stream attempt refer probabl stream probabl stream make success refer probabl stream make unsuccess refer probabl refer attempt success follow probabl conserv equat hold matrix gamma state transit probabl given tabl gamma ij entri ith row jth column repres condit probabl next state given current state j refer attempt success higher prioriti stream make refer bank averag half remain stream higher prioriti given stream sinc one higher prioriti stream make success refer bank probabl one stream make success refer one l bank may estim as l ffi given by where l vector priori probabl three state steadi state probabl obtain relationship given by equat plu conserv equat use obtain express direct model better agreement simul use estim e l remaind paper iv predict model buffer produc fairli dramat improv effici provid memori system close satur section logic bank model compar model simul random refer excel agreement comparison valid model suggest relationship design paramet necessari achiev particular level effici follow section vector simul model compar randomrefer model relationship suggest analyt model test consid multiprocessor system independ refer stream share memori consist bank these paramet repres eightprocessor cray ymp three port per processor maxim memori configur perform system compar augment system physic bank replac logic bank consist singl subbank queue size two case correspond ad buffer physic bank level without ad addit logic bank structur buffer lbr refer stream assum gener write figur effici random refer stream plot versu subbank cycl time follow bailey refer rate select give base oper effici unbuff case logic bank model agre well result scalar simul oper effici signific improv perform observ buffer bank cycl time simul show effici without buffer effici buffer the memori effici real cray ymp higher predict select buffer mechan incorpor variou stage cray ymp interconnect network describ smith taylor figur effici plot versu number refer stream excel agreement model predict random refer simula tion base effici maintain mani refer stream buffer introduc bank level logic bank model overestim effici near satur mdb queu model assum refer thrown away queue full processor attempt initi refer next cycl certain probabl q real system simul refer retain tri next cycl simpl analysi present show queue size quit small give substanti improv perform tabl show probabl number item queue less queue size m differ valu differ system load ae probabl queue fewer three slot two queue slot plu lbr fill valu indic small queue suffic estim may complet accur near satur refer fulfil thrown away model henc infinit queue case consid infinit queue model refer never block alway queu expect queue size subbank infinit queue case exqueu ae expect queue size less subbank tabl show probabl queue contain x item queue infinit queue case probabl two fewer slot fill probabl borderlin reason perform probabl four fewer element queue subbank input queue size four adequ handl refer p effect effici e l fix load q e l constant constant l furthermor obtain note e l decreas function q ffl condit ffl mean least five time mani logic bank refer stream effici perform buffer unbuff case compar case one subbank per logic bank effect buffer effici held constant subbank cycl time number bank increas paper assum decreas sinc ffl depend number processor number bank queue size four probabl logic bank hit effici approxim l sinc e l independ c increas function l b logic bank model predict effici actual increas slowli bank cycl time number bank increas ae held fix thu fix refer rate q doubl c compens doubl number bank halv number processor refer stream contrast system without logic bank c b must remain fix maintain effici system without logic bank one would quadrupl number bank order compens doubl bank cycl time argument appli system queue size two probabl logic bank hit least effici weight averag rel constant logic bank effici e l unbuff effici e p the latter effici drop rapidli bank cycl time confirm relationship model without logic bank load q fix number refer stream fix figur effici plot versu subbank cycl time number bank vari ae held constant logic bank model maintain almost constant effici bank cycl time increas predict queue size four system queue size two show slight falloff effici initi lower asymptot valu bank cycl time small ae held bank logic bank conflict becom signific bailey model run paramet valu effici drop dramat predict model similar scale relationship deriv bank cycl time fix number bank number refer stream vari one use relationship ae e determin design paramet requir achiev specifi level perform cray ymp eight processor three port per processor independ refer stream bank cycl time five physic bank maximum refer rate ffl queue size four probabl logic bank hit nearli one effici simpli estim previou express ffl logic bank one subbank per logic bank logic bank model predict buffer four queue slot result high effici unbuff effici predict bailey model paramet model predict test section vii vector simul result logic bank model summar follow fulli load system consist n refer stream l logic bank logic bank cycl time one subbank input queue size four effici greater provid ae queue size two ae chosen less notic first relationship depend total number subbank b second relationship depend number logic bank l per processor interconnect cost depend l long enough logic bank adequ field request processor increas bank cycl time compens increas number subbank without signific increas interconnect cost point howev data bu arbitr scheme abl handl read return traffic point discuss fulli section vii increas l one effect lower overal effici curv shape design paramet determin case use bailey model estim e l effici depend paramet effici obtain provid v vector simul model order test perform logic bank organ predict logic bank model simul studi base cray ymp architectur interconnect network develop cray ymp architectur select highli pipelin interconnect network provid effect l accomplish refer issu immedi interconnect network block later conflict aris complet data path simul system processor regist feedback perform refer stream gener randomli realist assumpt simul includ port line section subsect describ below vector simul model assum n p processor p port processor initi p memori oper cycl port assum gener independ refer stream n port design either read stream write stream interconnect model simplifi version network describ smith taylor processor four line direct connect particular section memori port particular processor access memori crossbar connect processor four line section number determin lowest two bit address consecut refer direct differ section memori section divid eight subsect individu subsect subdivid bank case cray ymp bank subsect contain eight bank follow notat smith taylor interconnect network denot by processor theta theta theta memori bank simul system n p processor l logic bank number subsect fix eight number bank per subsect increas interconnect describ by np processor theta np theta theta ll memori bank cray ymp processor access particular subsect everi c cycl c physic bank cycl time mean processor access memori bank processor block issu addit refer entir subsect contain bank full bank cycl time conflict call subsect conflict and like section conflict strictli intraprocessor conflict refer differ processor subsect proceed without conflict provid address bank alreadi use simul logic bank base conflict scheme describ abov particular memori locat referenc line subsect logic bank subbank number calcul line free reserv r cycl subsect check subsect free reserv cycl logic bank check logic bank regist lbr free reserv l cycl refer initi ate refer gener hold fail issu conflict occur level refer occupi lbr l cycl move appropri subbank queue queue full refer must spend cycl queue process physic memori assum refer must occupi subbank least c cycl subbank accept anoth refer enc oper write subbank free accept anoth refer c cy cle read complic return trip processor describ vector read refer consid complet element valu arriv processor read data valu must rout physic memori bank appropri processor vector reg ister addit conflict may occur one valu may becom avail particular cycl logic bank singl output latch latch free valu move subbank latch subbank freed latch busi subbank must wait latch free accept anoth valu output queue includ subbank shown figur valu move subbank output queue block subbank due return conflict less like occur data valu latch particular processor line compet process return interconnect network real system separ forward return interconnect network simplifi simu lation return interconnect network model pipelin accept one valu per section per cycl pipelin length assum ten account length forward return pipelin last valu vector read emerg pipelin read consid complet simul also incorpor feedback loop vector regist memori processor certain number vector regist eight assum run paper vector oper initi simul free processor vector regist randomli select reserv durat oper regist avail oper hold regist becom avail regist reserv oper freed element vector arriv processor contrast vector write consid complet last element oper issu vector regist freed time although actual memori valu may insert sometim later buffer prioriti simul rotat among processor circular fashion processor favor scheme similar prioriti scheme use cray x mp cray ymp use fix subsect prioriti scheme lend modif number processor vari prioriti scheme littl effect result simul simul gener repres refer stream vector code describ below memori oper assum vector oper associ stride length gatherscatt oper consid simul stride fix interv success refer within singl vector opera tion stride one assum probabl stride maximum stride equal probabl default probabl stride one vector use unless otherwis indic effect type load perform examin section vii maximum length vector oper determin length vector regist processor oper long vector requir compil split sever vector oper one use maximum vector regist length possibl vector length assum equal probabl except maximumlength assum occur frequent system load determin oper initi rate port free certain probabl p f current cycl memori oper initi ate valu p f may differ read write port measur system load relationship p f scalar refer rate q deriv order compar vector case scalar case alreadi discuss let vl maximum allow vector length p l probabl maximum length refer averag length vector refer then valu use bailey calcul effici unbuff case studi interrefer time vector refer perfect club benchmark run cray ymp show typic interrefer time order cycl valu appear reason paramet use simul chosen close current cray ymp valu summar tabl scalar simul perform section iv perform set unbuff case l physic bank cycl time seen interconnect network vector data path simul written c run network sun worksta tion vector simul done paper run one hundr thousand cycl although run long ten million cycl run divid block cycl statist comput block addit entir run statist longer run vari significantli shorter run lack variat unexpect sinc port processor initi refer cycl larg number independ refer stream statist averag vi result moder load figur show comparison effici function bank cycl time vector simul logic bank model system eight processor three port per processor number logic bank fix one subbank per logic bank queue size four slot per subbank buffer delay drop perform increas bank cycl time exampl vector stride one bank cycl time effici logic bank buffer without buffer agreement simul logic bank model good subbank cycl time less agreement model simul better load random compon case three fourth stride one remaind randomli distribut p shown figur case effici subbank cycl time overal effici slightli model falloff occur roughli place predict model logic bank model correspond random refer stream fall simul two differ stride distribut agreement logic bank model vector simul quit good consid vector simul includ line sub section regist feedback dip effici bank cycl time integr multipl four real phenomenon preserv long simul run figur effici plot versu number refer stream subbank cycl time five remain paramet figur number refer stream could quadrupl eight processor pro cessor still maintain effici analysi section iv random refer predict effici high increas slightli number bank bank cycl time increas keep nb constant valu scale relationship hold case vector refer well figur number refer stream fix eight processor number subbank per logic bank one number bank vari linearli bank cycl time order keep ae constant condit satisfi number logic bank greater case provid c ae held constant comparison simul set paramet run without buffer effici drop dramat subbank cycl time increas run shown two stride distribut p previou vector run perform read port unbuff memori differ memori effici read write buffer introduc unpredict delay one result becom avail particular cycl interconnect network particular section conflict type aris refer delay turn caus subbank block return conflict thu caus effect increas bank cycl time correspond drop effici addit singl output queue slot subbank elimin differ perform read write moder load howev load increas either increas initi rate percentag stride one vector port return bandwidth may insuffici handl load problem address next section analyt model deriv section iii predict effici memori write possibl indic perform includ throughput latenc throughput defin section fraction optim rate entir vector deliv system vector element read latenc defin time first attempt access vector element avail element vector regist figur compar effici through put read latenc load vari bank cycl time chosen near knee curv figur paramet figur except bank cycl time fix initi rate vari probabl op p f refer probabl vector oper initi free port valu correspond valu figur throughput slightli higher effici unbuff case slightli lower effici buffer case buffer throughput still consider better unbuff throughput unbuff case read latenc constant plu number attempt take issu request mention section iii number attempt reciproc effici fact unbuff case read latenc curv figur predict better percent effici curv unbuff read element latenc buffer read element latenc effici least moder good indic last element vector read delay cycl would without buffer buffer read latenc affect return conflict depend return scheme use differ return scheme discuss next section sinc write requir return path write element latenc directli relat number attempt issu element oper write latenc curv not shown predict effici curv within percent buffer unbuff case vii result maxim load extrem case port attempt memori refer cycl con sider first analysi done write logic bank model use pick design paramet processor system perform read analyz improv return interconnect network consid equal perform read write logic bank model use guid pick design paramet processor cray ymp minim per processor interconnect cost achiev effici least assum load condit ffl give l assum bank cycl time five condit ae give b number logic subbank power two thu processor configur oper minimum per processor interconnect cost high effici logic bank physic sub bank ae approxim queue size four requir probabl avail queue accord tabl queue size two four subbank per logic bank requir bring ae figur show perform design function percentag stride one vector case two subbank per logic bank queue size four indistinguish case four subbank per logic bank queue size two predict logic bank model case bank queue size two shown comparison logic bank model base assumpt random refer account presenc bad stride buffer shown reduc effect bad stride moder load design preclud use address map allevi intraprocessor conflict read difficult handl hot spot develop return line shown figur perform differ read write function stride quit dramat even surpris fact perform read actual drop percentag stride one vector load increas drop occur arbitr method use return simul simpl round robin prioriti scheme logic bank refer particular port de lay caus bank wait port delay system oper sustain maxim initi rate port never catch up variou solut solv hotspot problem examin includ addit output buffer physic sub bank addit line optim arbitr port handshak portlin queue addit return port found addit line alon solv problem queue depth subbank requir make signific differ effici optim arbitr logic bank examin round robin success port refer made alreadi use refer block line anoth refer issu port handshak control mechan particular port block initi refer return conflict port previou cycl method improv perform bring read perform write perform vector stride one sinc drop read perform appear due insuffici return port bandwidth two altern approach develop increas bandwidth first approach involv ad portlin queue design modif port contain queue line line deposit result port cycl port servic one queue per cycl round robin success second approach involv doubl number return port one possibl design return port oddnumb vector element anoth return port evennumb vector element altern design design one return port pair return line second altern would simplifi portlin interconnect switch would complic vector regist bu structur intern processor figur compar portlin buffer doublereturn port varieti stride maxim load output buffer subbank elimin port line buffer improv effici increas port bandwidth doubl number return port bring read effici line write effici viii discuss main result paper summar follow share memori system suffici bandwidth achiev high effici fast memori replac physic bank logic bank allow effici achiev use consider slower memori without significantli affect interconnect cost type buffer particularli use vector multiprocessor vector memori oper natur pipelin increas memori latenc partial amort entir vector oper logic bank model detail vector simul given paper show number logic bank scale number processor bank cycl time scale number physic bank consequ slower memori use logic bank divid subbank contrast unbuff case bt c n must constant constant effici chang invers quadrat invers linear depend bank cycl time number bank particularli import drawback memori system variabl bank cycl time valu becom readi return unpredict time approach seznec jegou reorder valu bank level solv problem valu arriv processor order issu problem address cray ymp architectur addit tag return valu cray ymp architectur allow three independ vector memori oper proceed simulta neousli vector memori oper chain vector regist vector regist turn chain function unit chain allow result produc one vector oper use input succeed oper first instruct complet compon result first instruct use second instruct becom avail pipelin setup occur compon previou oper avail current architectur valu arriv order vector regist keep track last valu arriv valu arriv order vector element must bit indic whether valu arriv addit hardwar incorpor chain forward next element arriv rel order among differ regist assur exist reserv issu mechan well known memori perform share memori vector processor strongli depend type load gener sinc choic load distribut affect result desir test design realist load con dition addresstrac collect method use gener statist inform load inform collect type investig difficult use directli test new design effici depend actual address exact time refer issu diffi culti approach taken paper develop guidelin applic rang load distribut larger number refer stream less seriou impact detail one refer stream overal effici buffer greatli reduc depend memori effici type load write illustr run two previou section depend load occur return conflict read number altern design evalu effort reduc perform degrad due return conflict found doubl number return port elimin differ read write rang load acknowledg work support cray research inc comput support provid univers texa center high perform comput nation scienc foundat ili program grant use r vector comput memori bank content effect buffer memori request multiprocessor system or ganiz semiconductor memori parallelpipelin processor enhanc dynam ram a simul studi cray xmp memori sy tem a fast path one memori vec tor access perform parallel memori use skew storag scheme address transform increas memori perform dynam ram secondari cach art comput system perform analysi a mhz data cycl mb dram pipelin oper the prime memori system array access scrambl storag parallel memori system synchron dynam ram cray xmpmodel case studi pipelin architectur vector pro cess bu conflict logic memori bank cray ymp type processor system dynam behavior memori refer stream perfect club benchmark charac teriz memori load vector program optim memori throughput tightli coupl multiprocessor accur model interconnect network vector supercomput highbandwidth interleav memori vector processor simul studi address trace parallel ma chine tr ctr hua lin wayn wolf codesign interleav memori system proceed eighth intern workshop hardwaresoftwar codesign p may san diego california unit state a m del corral j m llaberia minim conflict vector stream interleav memori system ieee transact comput v n p april toni juan juan j navarro olivi temam data cach superscalar processor proceed th intern confer supercomput p juli vienna austria anna m del corral jose m llaberia increas effect bandwidth complex memori system multivector processor proceed acmiee confer supercomput cdrom pe januari pittsburgh pennsylvania unit state