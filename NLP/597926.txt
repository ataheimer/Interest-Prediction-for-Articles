t modelbas analysi configur vulner a vulner analysi concern problem identifi weak comput system exploit compromis secur paper describ new approach vulner analysi base model check approach involv formal specif desir secur properti exampl properti no ordinari user overwrit system log file abstract model system captur securityrel behavior model obtain compos model system compon file system privileg process etc verif procedur check whether abstract model satisfi secur properti not produc execut sequenc also call exploit scenario lead violat properti import benefit modelbas approach use detect known asyetunknown vulner capabl contrast previou approach such use cop satan mainli address known vulnerabilitiesthi paper demonstr approach model simplifi version unixbas system analyz system use modelcheck techniqu identifi nontrivi vulner key contribut paper show autom analysi feasibl spite fact system model infinitest system techniqu exploit latest techniqu modelcheck constraintbas implicit represent statespac togeth domainspecif optim appropri context vulner analysisclearli realist unix system much complex one model paper nevertheless believ result show autom systemat vulner analysi realist system feasibl near futur modelcheck techniqu continu improv b introduct system configur vulner trace back classic problem softwar engin ing unexpect interact differ system modul violat hidden assumpt instanc consid vulner exist earli version fingerd servic servic queri finger user program need read file name plan home directori user fingerd servic run root privileg earlier version unix use open plan root presenc symbol link creat follow vulner user u could symbol link file f hisher plan even u read access f user u read f simpli run finger u vulner aris due interact way finger server oper way symbol link implement second exampl consid vulner involv mail notif program comsat wait report incom mail user print first line messag termin user log termin determin file etcutmp use configur worldwrit so written user level time login malici user modifi etcutmp substitut etcpasswd place termin hesh log on user send mail self contain line start root which mean root empti password upon receiv mail comsat overwrit password file messag user login root without provid password approach formal method good choic address softwar engin problem aris due unexpect interact among system compon paper describ approach analyz system configur vulner use techniqu drawn formal method research approach involv construct highlevel model system compon order detect kind vulner describ abov would start abstract model captur behavior unix file system comsat mailer program model user behavior current develop abstract model manual futur expect model extract process machineassist employ program analysi techniqu formal statement desir securityrelev properti composit system vulner view flaw system configur exploit violat certain secur object overal system detect vulner need formal statement secur properti one exampl properti ordinari user overwrit system log file anoth exampl password file cannot modifi except superus use password chang program autom analysi system model check deviat desir secur properti configur vulner identifi analyz overal system behavior ob tain compos model develop abov determin violat desir secur properti use modelcheck analysi import benefit model check properti violat model checker provid counterexampl show properti violat paper demonstr approach model simplifi version unixbas system discov nontrivi configur vulner system autom analysi clearli realist unix system much complex one model paper nevertheless believ result show autom analysi realist system feasibl near futur especi sinc faster techniqu modelcheck develop although use modelcheck examin relat context verif cryptograph protocol network vulner first attempt use modelcheck system configur vulner analysi one princip difficulti context system model tend possess infinit number state need model aspect system file name nest directori structur abil creat destroy infinit number file tradit modelcheck techniqu such employ limit finitest model onli key contribut paper show nontrivi vulner discov use autom modelbas analysi spite fact system model infinitest show known techniqu model abstract constraintbas represent employ tackl infinitest modelcheck problem aris vulner analysi rest paper structur follow section describ previou approach vulner analysi summar main advantag modelbas approach section describ approach model simplifi subset unix analysi techniqu describ section result analysi present section final conclud remark appear section relat work research vulner analysi focus primarili identif configur error improp file permiss set exist work employ set rule enumer known caus vulner call work collect rulebas wide use tool cop satan search occurr known vulner howev gener rule reli expert knowledg interact among mani compon system expert complet understand interact among compon modern comput system issu race condit mani possibl interleav hidden assumpt etc make hard human come rule modelbas approach suffer disadvantag human involv need primarili develop model individu system compon problem hard human reason name reason interact among system compon releg mechan procedur advantag modelbas approach are identif known unknown vulner analysi formal model identifi known asyetunknown vulner contrast rulebas approach limit examin system known vulner modular effort requir add new system compon eg new privileg program signific softwar upgrad determin new compon ad model exist compon need chang contrast rulebas approach new rule need ad captur interact among new compon also interact new old compon gener pattern misus intrus detect vulner identifi analysi may sometim abl rectifi them time may immedi fix may requir chang vendorprovid softwar sinc chang may interfer legitim function system second line defens vulner system misus intrus detect system use monitor order detect known exploit exploit scenario usual specifi expert process detect exploit autom approach outlin paper enabl autom first task well sinc counter exampl gener modelcheck techniqu correspond exploit mechan translat exploit pattern misus intrus detect system automat gener rule check vulner specif configur propos approach detect system vulner even inform provid initi system configur modelcheck techniqu produc exploit scenario condit upon unspecifi initi configur condit captur potenti vulner check use rule main benefit use rule potenti check econom in term time memori usag run model checker paper build preliminari result modelbas vulner analysi report earlier sinc then ritchey ammann suggest promis approach autom network vulner analysi approach start higher level model our model captur known exploit individu system eg given version web server contain vulner allow remot user gain access local user certain host run version server model check use check exploit strung togeth achiev greater degre access obtain individu exploit contrast approach aim discov individu exploit model legitim behavior system anoth import differ model finit enabl use wide avail model check tool smv spin perform vulner analysi contrast need deal infinit state system finit model cannot captur compon file system file ad renam remov bound mani time oper may repeat model securityrel behavior system section first describ model small subset unixbas system subset captur simplifi view file system oper system facil suffici uncov nontrivi vulner analysi process begin short descript languag use model describ enough detail understand model complet descript languag relev purpos paper henc includ here model languag describ model use model languag similar csp extend objectori capabl sinc underli model checker base prolog languag mani featur model languag similar prolog addit syntact featur similar use promela model languag use spin verif system languag system model collect concurr execut process commun other process view object intern state encapsu late cannot access process commun among process take place via method invoc method invoc synchron caus invok process block method invoc complet return valu sent back object instanc class class definit consist definit encapsul state definit extern visibl method definit local method otherwis known privat method helper function singl inherit support languag thu class definit form class classnamedatamembernam baseclassnamedatamembernam fmethoddefng object creat invok class name paramet correspond data mem ber use syntax method defin use follow syntax like predic prolog languag method invoc languag alway return boolean valu addit argument method may get instanti result invoca tion featur use commun return valu use convent return paramet appear input paramet method invoc languag support basic data type boolean integ float string usual oper type also support use construct complex express valu or variabl basic type languag also support compound type base algebra type system similar provid prolog type use repres structur data file name file content content entir file system two common compound type tupl list assum differ process execut concurr languag use interleav semant determin result concurr execut lowest level oper assign perform atom method bodi consist sequenc oper oper return boolean valu valu true denot success complet oper fals denot failur method invoc begin execut first oper sequenc oper succe next oper execut on oper sequenc succeed say entir sequenc succe otherwis sequenc fail return valu fals case method invoc return fals indic failur oper either primit compound primit oper either method invoc applic predefin predic equal relat opera tion note equal predic semant prolog particular bind valu variabl compound oper construct primit oper use follow construct atom execut atom opseq semant opseq except oper within opseq execut atom ie execut interleav execut process altern opseq jj opseq succeed either opseq opseq succe other wise fail note opseq execut opseq fail parallel composit opseq j opseq result concurr execut oper opseq opseq either sequenc succeed entir construct succe ifthenels opseq opseq els opseq result execut opseq succe opseq execut success failur determin success failur ifconstruct opseq fail opseq execut success failur determin success failur ifconstruct guard command g opseq jj g opseq jj jj gn opseqn follow semant one guard evalu true say gk chosen arbitrarili correspond oper sequenc opseqk execut sequenc fail altern guard evalu true chosen oper sequenc correspond guard execut none oper sequenc correspond guard evalu true succeed guard construct fail otherwis succe simplic restrict guard contain predefin oper equal check cannot contain method invoc loop construct loop operationsequ construct mean operations quenc execut repeatedli precis behavior specifi use recurs definit loop semant oper failur similar prolog failur occur execut backtrack point altern execut path could taken variabl bind made point point failur undon execut proce altern path note impli a oper may succeed mani time possibl differ variabl bind b oper opseq jj opseq possibl opseq succeed subsequ oper follow altern may fail case execut may backtrack altern construct point opseq may tri addit detail languag provid togeth exampl below model file system state file system model set tupl form filenam owner group permiss content file name repres list name abc would repres abc owner group repres integ permiss field captur usual unix permiss inform file file content repres normalc normal file whose content given c linkf symbol link anoth file f simplifi present repres directori file howev directori structur captur implicitli way file name effect mean inform directori level permiss cannot repres directli must propag repres permiss file contain directori file system behavior captur filesystem class shown below note use prologstyl convent variabl name start capit letter constant class function name start lower case letter file system support oper read write file write oper also use file creation remov oper provid file delet file attribut ownership permiss chang use oper chmod chgrp chmod file system model captur hard link symbol link creat use symlink oper file oper make use helper function call resolv first resolv symbol link real file name perform permiss check class filesystem public method chownfugo resolvefugrootf chngownerfo number helper function getcont updatefil use method definit helper function straightforward these provid definit getcont below omit other interest conserv space getcontentf c memberfugpnormalc s helper function resolv nontrivi provid definit below paramet are file name f resolv user group identifi u g respect permiss check need done option argument opt return resolv name f fifth paramet resolv method fail either file name exist permiss check fail memberfogpnormalc s check tupl present set permiss check root check user u file owner resolvelinkf f option omit els resolv method use helper function resolvelink latter recurs function keep follow symbol link normal file name identifi check file name f present file system note state file system captur list member predic use search specifi element list f present resolvelink fail otherwis content f form linkf resolvelink invok recurs follow link otherwis must normal file henc f return resolv name note definit resolvelink correctli captur fact permiss check done symbol link symbol link resolv resolv proce check file permiss note check done userid u correspond root otherwis permiss check proce base valu option opt option read write execut correspond permiss check option owner permiss check oper need one check userid provid paramet file owner model unix process unix process model use base class call unixproc captur behavior common process plu deriv class per program wish model state unixproc object character real effect usergroup identifi plu inform group known system addit contain refer file system object valu command line argument provid helper function correspond roughli system call class unixprocuid euid gid egid arglist fs usergroup definit sever similar method omit correspond forkexecf unix fsresolvefeuidegidexecf fsresolvefeuidegidsetuidf fsgetownerf euid els fsresolvef euid egid setgidf fsgetgroupfegid els fsgetcontentf programc f must contain program createc uid euid gid egid arglist fs usergroup creat languag construct result creation new object belong class first argument state object correspond exactli paramet suppli creat method omit subclass unixproc defin extern access method make use method provid unixproc class also need provid main function get execut soon process creat process termin and object destroy main function termin base unixproc defin lpr class follow level file system lpr either copi file print spool directori link symbol depend upon command line option addit usual process paramet lpr take argument name file print option indic file copi spool directori print symboliclink spool directori class lpru eu g eg file opt fs ug atom n use creat temporari name spool file readvarspoollpcount n fsresolvefileugreadf accessibl file check u subsequ oper symlinkvarspoollpn file perform root privileg els readfilec similar manner defin behavior highli simplifi mail receiversend follow mail server oper store everi incom email messag spool directori correspond recipi simplic model act store way lose previou content spool file class mailerf ug unixprocroot root sy sy fs ug sendu m writevarspoolmailu m final model action comsat mail notifi program look file etcutmp identifi termin user log in whenev new messag receiv user comsat print messag user termin repres content etcutmp list record add addit helper function file system model support write read structur file particular interest helper function call readrec allow access specif record whose first compon specifi argument readrec class comsatf ug unixprocroot root sy sy fs ug main loop readvarspoolmailrcvr msg readrecetcutmp rcvr tti writetti msg loop construct indic oper insid loop execut forev process kill oper make use unbound variabl rcvr variabl treat existenti quantifi oper amount bind variabl arbitrari valu domain thu comsat nondeterminist choos file mail directori correspond user log in print messag user termin datanondetermin captur use unbound variabl key mechan simplifi model develop model user user behavior also highli nondeterminist natur hesh select arbitrari file system may read file overwrit arbitrari content user may also run arbitrari command send arbitrari messag arbitrari user arbitrari choic data valu captur use unbound variabl arbitrari choic among command captur guard command construct within loop guard command construct within loop indic user keep perform action indefinit class userugfsug unixprocuuggfsug main loop true readf c true writef c true runlpr arg true mailersendu m final put class defin far singl system model use class call init note use j oper denot parallel composit multipl process class initf ug main mailerf ug comsatf ug useru g fs ug detect system vulner approach use model check techniqu analyz behavior system model simplest case secur properti invari properti must hold everi state system instanc simpl model describ previou section model legitim way modifi password file eg passwd henc constanc password file desir system invari section describ complex tempor properti depend order event specifi one import featur model check techniqu abil gener counter exampl sequenc state lead violat given properti ap plicat counterexampl correspond step attack use exploit system vulner howev current model check tool cannot use is sinc mani compon system model describ section infinit mani reachabl state eg state file system current model check tool work mainli finitest system henc develop prototyp model checker base close xmc system system develop one author paper xmc handl certain class infinitest system use implicit represent state space use constraint xmc system implement use xsb tabl logic program system cast model check problem queri evalu problem tabl provid stronger termin properti xsb comparison untabl logic program system particular comput solv equat use iter procedur eg fixpoint iter program easili thu make xsb ideal platform rapid implement program analyz modelcheck xmc transit relat system model treat extern databas verif problem solv run reachabl queri databas prototyp follow approach signific differ reachabl queri made infinit transit system case vulner analysi infinit handl exploit follow featur xsb system follow xmc repres state system model use term differ prototyp term may contain logic unbound variabl repres unknown data system model use constraint term relat state system model finitest case handl xmc state repres ground ie variablefre term relat state simpl tabl prototyp relat state repres possibl nonground term use equal constraint among variabl use power tabl xsb identifi similar state in case state differ name bound variabl reus comput state similar one encount earlier seen again implement translat highlevel model system prolog databas a set fact repres system transit relat note section model languag resembl prolog mani way factor consider simplifi translat al gorithm in fact translat similar describ translat process describ valuepass process algebra logic program rule repres transit relat although translat algorithm conceptu simpl implement still requir signific effort given small scale model found easier perform translat manual follow first assum properti verifi specifi formula tempor logic describ notion intent model see section elimin need encod complex secur properti tempor logic model check procedur implement reachabl queri evalu use xsb system model check infinitest system infinit state space system aris two factor data nondetermin in finit branch factor execut histori infinit long path handl use differ featur model checker infinit due data nondetermin handl term constraint recal data nondetermin aris unbound variabl system model term constraint captur possibl valu variabl succinctli constraint repres manipul xsb system itself need program instanc consid problem verifi whether etcpasswd overwritten system model section observ exampl system evolv arbitrari user choos perform write action file user send mail logicprogrammingbas model checker neither user messag need bound particular valu repres logic variabl unif backtrack automat gener case interest bind variabl valu lead vulner instanc user send mail process comsat enabl send notif use write destin specifi etcutmp note that point neither content permiss etcutmp known model checker tri case turn bind variabl need set valu etcutmp unread requir entri the destin notifi incom mail found notif sent system revert back origin state hand destin notif present etcutmp write issu sinc content etcutmp unknown note left variabl destin etcpasswd inde possibl chang password file model thu model check algorithm conclud etcutmp specifi etcpasswd one notif destin possibl violat system secur infinit execut sequenc handl abstract sequenc finit possibl re peat segment certain kind particular import abstract bound length sequenc captur unknown or dontcar valu variabl automat abstract infinit execut sequenc instanc consid user write action arbitrari file system model section constitut progress sinc enabl state chang imposs befor lack progress easili captur term con straint state write oper arbitrari file f file content repres variabl say c f state write oper file content chang c f simpli variant ie ident modulo variabl renam origin content effect write oper known say new content new state instanc ie subsum by old state henc new transit possibl thu see progress seen chang modulo term subsumpt scenario assum noth known initi state system file content relev permiss etc system initi state at least par tialli known user write action chang system state instanc constraint etcutmp refer etcpasswd may longer true arbitrari write action done access permiss etcutmp allow write action succeed thu state system arbitrari write action differ initi state sy tem model checker explor system evalu state conclud potenti vulner long etcutmp modifi arbitrari user variabl abstract alon insuffici gener employ approxim lose inform either ignor state chang thu prune execut sequenc ignor condit state chang thu repeat execut sequenc note abstract may incomplet sens vulner origin model may present abstract model howev limit reason case assum system vulner exploit human attack use intuit expertis come attack scenario impli sequenc action would perform achiev intrus typic short sequenc thu may accept miss vulner requir long sequenc action base assumpt method use search procedur iter deepen stop search predetermin depth search procedur use program tabl capabl xsb gener counterexampl counterexampl trace produc model checker correspond directli attack scenario henc set counterexampl use drive intrus detect note that even finitest case infeas enumer possibl counterexampl overcom problem avoid explicit enumer counter exampl instead choos repres use finitest automaton automaton repres set c counterexampl exampl c c correspond path automaton automata represent succinct use directli intrus detect moreov automaton construct inspect memo tabl built model check tabl entri form state automaton depend entri form transit automatabas represent counterexampl extend natur case infinit state system well case state automaton associ set variabl transit specifi condit valu automata abil repres gener counterexampl parameter respect specif system configura tion gener counterexampl leav initi state system unbound use data nondetermin lazili bind state variabl explain earlier comsat exampl automata repres gener exampl instanti particular system configur paramet check vulner thu automata gener respect configur howev automata must regener system capabl chang eg new servic ad note gener infinitest system may finit represent set counterexampl howev note abstract use bound length counter exampl sequenc therebi make possibl find finit represent set counter exampl beyond invari properti comsat exampl explain earlier properti interest invari gener howev one would interest path properti instanc may password chang program passwd system allow user modifi hisher password thu chang content password file clearli execut path password file chang passwd program system administr correspond vulner path properti encod tempor logic elimin degener path superus chang password file chang passwd pro gram done ad anteced origin safeti properti violat degener path problem aris context vulner analysi descript degener path tend becom larg sinc mani degener case instanc may mani differ way superus chang password file overwrit it use editor use passwd command etc enumer degener path impract sinc tempor logic formula becom larg difficult understand henc like contain error address problem propos follow approach origin safeti properti left unchang order elimin degener path develop second model call intent model intent model captur intend outcom execut everi program intent state term file may written execut cours execut program system model vulner contain path unsaf state exist correspond path intent model exampl intent model mail daemon would write file directori usrspoolmail intent model lpr would write file directori usrspoollp intent model passwd program would write etcpasswd file intent model default refer normal file name correspond absolut file name symbol link would appropri case mail daemon lpr situat symbol link permit made explicit intent model instanc intent model cp program state overwrit file provid argument regardless whether symbol link not intent model use model checker must disregard intend path ie path everi action also intent model simpl way leav model checker unchang prune away path counterexampl automaton clearli effici techniqu elimin intend path develop topic current research analysi result current implement find vulner express violat invari properti report violat distinguish valu initi system configur paramet sequenc event lead violat present result scenario condit specifi configur paramet exploit path lead violat vulner due comsat given simpl model unix system describ section current implement identifi follow vulner would ultim enabl password file overwritten vulner found use queri check reachabl _writeetc passwd _ state arbitrari process write etcpasswd first vulner identifi trivial one correspond case password file worldwrit even though obviou vulner nevertheless interest discoveri given model even mention file etcpasswd use data nondetermin model implement use termconstraint enabl us deriv scenario fsresolveetc passwdugwritef scenario userugfsugwriteetc passwd m way read follow exist file etcpasswd writabl user u belong group g user write password file arbitrari data m second vulner identifi comsat vulner describ introduct happen user u permiss write theetcutmp file note vulner identifi even model checker provid inform origin state system virtu way term constraint handl modelcheck abl infer appropri relationship must hold content etcutmp file password file well file permiss must hold vulner exploit fsresolveetc utmpugwritef scenario userugfsugwriteetc utmp u etc passwd userugfsug invok mailersendu m mailerwritevar spool mail u m comsatreadvar spool mail u m comsatreadrecetc utmp u etc passwd comsatwriteetc passwd m scenario read follow first step user u write file etcutmp record u etcpasswd next step user u invok mailer program send messag user u caus mailer write messag spool file varspoolmailu fourth step comsat program read spool file fifth step comsat read record etcutmp indic u log termin etcpasswd thi record written first step scenario overwrit etcpasswd mail messag m note although scenario mention three user u u u three existenti quantifi variabl mean user third vulner similar second one user directli overwrit spool file instead use mailer updat spool file order thi user must write permiss spool file extra condit captur condit fsresolveetc utmpugwrit fsresolvevar spool mail uugwrit scenario userugugwriteetc utmp u etc passwd userugugwritevar spool mail u m comsatreadvar spool mail u m comsatreadrecetc utmp u etc passwd comsatwriteetc passwd m anoth attack scenario interest variat previou attack requir write permiss etcutmp bring togeth two known exploit one involv use symbol link comsat vulner mention abov although develop model ourselv realiz model contain vulner noteworthi spite simplic model use model check procedur identifi vulner unknown us fsresolvevar spool mail uugwritef scenario userugfsugsymlinkvar spool mail u etc utmp userugfsug invok mailersendu u etc passwd mailerwritevar spool mail u u etc passwd userugfsug invok mailersendu m mailerwritevar spool mail u m comsatreadvarspoolmailu m comsatreadrecetc utmp u etc passwd comsatwriteetc passwd m scenario user u first symbol link spool file varspoolmailu etcutmp second step user u invok mailer send messag user u messag bodi consist singl record u etc passwd third step mailer write record onto spool file varspoolmailu sinc spool file link etcutmp file first step record actual written etcutmp file note step happen mailer blindli overwrit spool file correspond user u without check a whether user in particular u write permiss file b whether symbol link rest step exploit ident previou vulner vulner due lpr analysi abstract system model lpr make temporari spool file name constant ie make count modulo instead combin symbol link standard spool file name convent introduc follow vulner fsresolvefugwritef fsresolveetc passwdugreadf scenario userugfsugwritefc userugfsugrunlpr userugugrunlpr f sinc start initi state correspond unbound variabl file print initi state scenario show file creat later read also requir read permiss password file conclud remark paper present new modelbas approach analyz configur vulnerabili tie wherea previou approach reli expert knowledg codifi caus configur vulner step necessari approach consequ approach identifi previous exploit vulner also discov new one never exploit exampl demonstr capabl discov vulner knowledg vulner never encod system model analysi abl detect vulner even identifi vulner whose presenc system model unknown us result analysi use mani way first obviou use reconfigur system elimin vulner identifi modelbas analysi reconfigur system reanalyz ensur most vulner elimin second use feed counterexampl gener analysi intrus detect system intrus detect system identifi attempt exploit vulner identifi analysi may abl prevent succeed third way use analysi begin minim inform initi state system case analysi gener assumpt initi system lead vulner assumpt correspond vulner caus encod configur checker cop satan main challeng use approach present paper one scale although model checker easili handl model describ paper realist system model much larger make significantli harder perform accur analysi howev believ temporari difficulti author paper well number research develop better better model checker abl handl larger larger system second challeng effort requir develop model investig sourc code analysi techniqu help autom model gener process r taxonomi secur fault rule base analysi secur check check race condit file access critic analysi vulner taxonomi tabl evalu delay gener logic program design synthesi synchron skeleton use branchingtim tempor logic automat verif finitest concurr system use tempor logic specif comput aid verif state art futur direct optim compil effici model check cop secur checker system model checker spin tempor logic reactiv concurr system specifi cation commun concurr specif verif concurr system cesar xmc logicprogrammingbas verif toolset effici modelcheck use tabl resolut use model check analyz network vulner oldt resolut tabul xsb logic program system v tr commun sequenti process automat verif finitest concurr system use tempor logic specif old resolut tabul tempor logic reactiv concurr system tabl evalu delay gener logic program formal method model checker spin commun concurr optim compil effici model check specif verif concurr system cesar effici model check use tabl resolut symbol model check design synthesi synchron skeleton use branchingtim tempor logic use model check analyz network vulner rule base analysi comput secur ctr wei li rayford b vaughn yogind s dandass approach model network exploit use exploit graph simul v n p august gordon thoma rohrmair gavin low use dataindepend analysi intrus detect system theoret comput scienc v n p june xinm ou sudhakar govindavajhala andrew w appel mulval logicbas network secur analyz proceed th confer usenix secur symposium p juli august baltimor md peng ning dingbang xu learn attack strategi intrus alert proceed th acm confer comput commun secur octob washington dc usa peng ning dingbang xu hypothes reason attack miss intrus detect system acm transact inform system secur tissec v n p novemb