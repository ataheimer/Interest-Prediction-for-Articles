t theoret analysi communicationinduc checkpoint protocol rollbackdepend trackabl a abstractrollbackdepend trackabl rdt properti state rollback depend local checkpoint onlin trackabl use transit depend vector paper address three fundament issu design communicationinduc checkpoint protocol ensur rdt first prove follow intuit commonli assum literatur fact fals protocol forc checkpoint stronger condit must take most mani forc checkpoint protocol base weaker condit result impli common approach sharpen checkpointinduc condit piggyback control inform messag may alway yield effici protocol next prove optim onlin rdt protocol take fewer forc checkpoint rdt protocol possibl commun pattern final sinc compar checkpointinduc condit suffici compar protocol perform present formal techniqu compar perform sever exist rdt protocol b introduct distribut comput consist finit set process connect commun network commun synchron exchang messag network local checkpoint snapshot local state process save nonvolatil storag surviv process failur reload volatil memori case failur reduc amount lost work process record local state say process take local checkpoint distribut comput thu associ checkpoint commun pattern defin set messag local checkpoint global checkpoint set local checkpoint one process global checkpoint consist messag sent checkpoint receiv anoth checkpoint comput consist global checkpoint import work one interest design implement system ensur depend applic run mani protocol propos select local checkpoint order form consist global checkpoint see survey remark local checkpoint taken independ risk consist global checkpoint ever form thi wellknown unbound domino effect occur rollbackrecoveri avoid domino effect kind coordin determin local checkpoint requir coordin achiev price synchron mean addit control messag anoth approach name communicationinduc checkpoint achiev coordin piggyback control inform applic messag case process select local checkpoint independ call basic checkpoint protocol requir take addit local checkpoint call forc checkpoint order ensur progress consist recoveri line forc checkpoint taken accord certain condit test time messag receiv basi control inform piggyback messag gener fact two local checkpoint causal relat necessari suffici condit belong consist global checkpoint hidden depend make imposs belong consist global checkpoint depend character fact cannot track transit depend vector solv problem wang defin rollbackdepend trackabl rdt properti checkpoint commun pattern satisfi properti depend local checkpoint onlin trackabl ie trackabl simpl use transit depend vector rdt two noteworthi properti ensur set local checkpoint pairwis causal relat extend form consist global checkpoint enjoy effici calcul minimum maximum consist global checkpoint contain given set local checkpoint consequ rdt properti applic larg famili depend problem as softwar error recoveri deadlock recoveri mobil comput distribut debug etc moreov combin appropri messag log protocol rdt allow solv depend problem pose nondeterminist comput comput piecewis determinist sinc rdt properti wide rang applic mani problem becom import pragmat issu design effici communicationinduc checkpoint protocol satisfi rdt properti number forc checkpoint size piggyback control inform domin factor price paid henc main question context is design effici rdt protocol less number forc checkpoint smaller size piggyback control inform common intuit literatur if protocol forc checkpoint weaker condit must forc least mani checkpoint protocol stronger condit necessarili true note stronger condit subset weaker condit actual tradeoff number forc checkpoint size piggyback control inform paper give theoret analysi problem first counterexampl previou two statement enumer demonstr optim onlin protocol term number forc checkpoint sinc common intuit prove invalid interest techniqu compar use protocol also propos techniqu use compar mani exist rdt protocol literatur remark result theoret point view also practic one consid task design effici protocol rdt properti paper structur five main section section defin comput model introduc definit element rollbackdepend trackabl theori section discuss imposs problem sever techniqu compar use protocol address next section section depict hierarchi graph compar famili rdt protocol marshal discuss context final conclud paper section preliminari checkpoint commun pattern distribut comput consist finit set p n process fp commun synchron exchang messag assum order pair process connect asynchron reliabl direct logic channel whose transmiss delay unpredict finit process run processor processor share common memori bound rel speed fail accord failstop model process execut intern send receiv statement intern statement involv commun p execut statement sendm put messag channel p p j p execut statement receivem block least one messag direct p arriv messag withdrawn one input channel receiv p execut intern send receiv statement model intern send receiv event process distribut comput sequenti word process p produc sequenc event sequenc finit infinit event produc distribut comput model partial order set wellknown defin follow definit relat hb set event satisfi follow three condit b event process come b hb b event sendm b event receivem hb b hb hb distribut comput associ checkpoint commun pat tern compos distribut comput h set local checkpoint k k figur checkpoint commun pattern ccpat defin h figur show exampl checkpoint commun pattern ccpat c ix repres xth checkpoint process sequenc event occur p c call checkpoint interv denot ix call process id x index checkpoint checkpoint interv assum process p start execut initi checkpoint c i rollbackdepend trackabl first briefli introduc concept zpath causal doubl zpath concept rollbackdepend trackabl detail subject pleas consult paper previous cite definit zpath sequenc messag m t best knowledg notion introduc first time netzer xu name zigzag path zpath m say zpath ix jy exampl pattern ccpat depict figur path m zpath k i howev path m zpath rest paper use follow notat zpath first last messag denot first last let two zpath whose concaten also zpath concaten repres delta introduc notion causal zpath zpath causal receiv event messag except last one preced send event next messag sequenc zpath noncaus causal zpath one messag trivial causal simplic casual zpath also call causal path definit zpath ix jy causal doubl exist causal path ix jy x x y previou definit everi causal path obvious causal doubl itself exampl zpath m pattern ccpat figur noncaus causal doubl causal path m follow concept rollbackdepend trackabl introduc wang defin differ equival definit checkpoint commun pattern ccpat satisfi rdt properti noncaus zpath causal doubl ccpat word checkpoint commun pattern satisfi properti sens depend local checkpoint need onlin trackabl sinc depend pass along causal path pcmpath given checkpoint commun pattern ccpat necessari check everi noncaus zpath causal doubl ensur ccpat satisfi rdt properti name consid certain embed subset noncaus zpath import subset pcmpath introduc definit causal path ix jy prime everi causal path ix jy x x satisfi receivelast hb receivelast intuit prime path ix jy first one includ exist interv ix ie new depend p j s current state transit depend causal past p j s current state pcmpath delta zpath concaten causal path singl messag m prime sendm hb receivelast pattern ccpat shown figur path m prime m prime path m pcmpath follow theorem direct consequ theorem checkpoint commun pattern ccpat satisfi rdt properti pcmpath causal doubl ccpat idea behind theorem accord definit rdt sinc depend local checkpoint must onlin trackabl new depend pass along zpath end due new depend includ prime causal path firstli pcmpath causal doubl necessari suffici ensur rdt properti note exploit follow transit depend track mechan propos literatur detect exist prime path system process process p maintain sizen transit depend vector tdv repres current interv index or equival checkpoint index next checkpoint p record highest index interv process p j current state transit depend tdv piggyback applic messag sent upon receipt messag process decid evalu vector prime path encount accord theorem order ensur rdt properti pcmpath causal doubl need broken forc checkpoint pcmpath delta whose breakpoint ix receipt last process p distinguish delta causal doubl inform carri messag pcmpath causal doubl also visibl doubl defin follow order broken definit visibl doubl causal doubl causal path receiv last hb sendlast figur show exampl visibl doubl intuit causal doubl pcm path visibl process receipt messag last path causal doubl belong causal past last note definit causal doubl pcmpath necessarili visibl doubl noncaus doubl one must nonvis doubl base forego discuss theorem deduc character rdt respect protocol base entirecaus histori corollari checkpoint commun pattern produc protocol base entirecaus histori satisfi rdt properti pcmpath visibl doubl last figur visibl doubl pcmpath interv ix anoth interv ix process p call pcmpath pcmcycl x pcmcycl causal doubl call nondoubl pcmcycl exampl path m figur pcmcycl nondoubl remaind paper sake clariti refer pcmpath process anoth differ one pcmpath contrari pcmpath process one pcmcycl pcmpath pcmcycl call pcmcondit imposs problem section discuss imposs problem first disprov truth follow common intuit literatur protocol forc checkpoint weaker condit must forc least mani checkpoint protocol stronger condit word even though condit involv two differ protocol inclus subordin relationship may imposs compar two protocol term number forc checkpoint motiv problem sinc forc checkpoint chang given checkpoint commun pattern consequ affect later condit test soon two protocol differ decis forc checkpoint two result checkpoint commun pattern possibl strongli diverg futur thu perhap imposs compar two protocol also overthrow concept tradeoff number forc checkpoint size piggyback control inform rdt protocol last subsect given proof demonstr anoth imposs problem optim onlin protocol ensur rdt properti scenario quit common area onlin algorithm due knowledg futur inform common intuit necessarili true two counterexampl enumer speciou statement mention previ ousli result show fact definit need formal proof comparison two differ protocol therefor propos techniqu compar use protocol next section counterexampl cpn protocol break pcmpath everi pcmcycl sendfirst cpm protocol break pcmpath everi cmcycl delta a cmcondit concaten causal path necessarili prime singl messag sendm hb receivem hb sendfirst easili verifi cpn cpm break noncaus doubl pcmpath nondoubl pcmcycl henc two protocol rdt protocol theorem need piggyback tdv applic messag note appli consequ evalu size piggyback control inform paper pleas refer paper detail obvious cpm forc checkpoint weaker condit cpn result shown figur a cpn must take two forc checkpoint the diamond box make consid checkpoint commun pattern satisfi rdt properti howev cpm need one forc checkpoint make pattern ensur rdt depict figur b counterexampl show cpm forc fewer checkpoint cpn given checkpoint commun pattern thu disprov common intuit besid overthrow common intuit follow counterexampl also demonstr necessarili tradeoff number forc checkpoint size piggyback control inform counterexampl let nononvisiblydoubledpcm nnvdpcm protocol break nonvis doubl pcmpath nondoubl pcmcycl no pcmpath protocol break pcmpath nondoubl pcmcycl similarli sinc protocol break nonvis doubl pcmpath nondoubl pcmcycl initi checkpoint forc checkpoint basic checkpoint a figur scenario counterexampl a cpn b cpm accord corollari also rdt protocol moreov sinc nnvdpcm decid whether pcmpath visibl doubl need piggyback control inform nopcmpath nnvdpcm take one forc checkpoint see figur a nopcmpath see figur b henc counterexampl also show protocol piggyback less control inform nopcmpath outperform one piggyback control inform nnvdpcm checkpoint commun pattern term number forc checkpoint idea behind counterexampl forc checkpoint taken protocol base stronger condit make cmpath rightmost part consid checkpoint commun pattern becom noncaus doubl pcmpath thu anoth checkpoint necessari forc break pcmpath howev forc checkpoint taken protocol weaker condit give rise scenario initi checkpoint forc checkpoint basic checkpoint a figur scenario counterexampl a nnvdpcm b nopcmpath optim onlin protocol take two categori onlin protocol consider problem two categori onlin protocol base entir causal histori transit depend track ie piggyback tdv messag control inform respec tive shown optim protocol follow descript given checkpoint commun pattern counterexampl redrawn figur denot ccpat directli follow lemma sinc pcmcycl m nondoubl lemma process p need forc least one checkpoint point b make ccpat satisfi rdt entirecaus tdv onlin rdt protocol lemma forc checkpoint taken point c b process p process p must take anoth forc checkpoint satisfi rdt entirecaus tdv onlin rdt protocol ccpat c ccpat initi checkpoint c b figur checkpoint commun pattern ccpat ccpat c forc checkpoint taken point c b process p zpath becom noncaus doubl pcmpath sinc turn prime henc p forc anoth checkpoint break pcmpath satisfi rdt entirecaus tdv onlin rdt protocol scenario shown figur a qed consid follow theorem theorem optim onlin protocol base entir causal histori term number forc checkpoint protocol optim given checkpoint commun pat tern protocol less number forc checkpoint it see checkpoint commun pattern ccpat depict figur sinc protocol cpm counterexampl need one forc checkpoint make ccpat satisfi rdt protocol forc checkpoint point c b by lemma protocol must forc two checkpoint protocol take one checkpoint point c cannot optim optim protocol ani must take exactli one forc checkpoint point c accord lemma howev onlin protocol cannot optim forc one checkpoint cut pattern ccpat c shown left region dot line figur due causal ccpat posit protocol cpn counterexampl take zero forc checkpoint ccpat c therefor optim onlin protocol base entir causal histori term number forc checkpoint qed mention earlier counterexampl protocol cpm cpn piggyback transit depend vector henc corollari similar proof previou theorem corollari optim onlin protocol base transit depend track tdv term number forc checkpoint techniqu comparison fda vs protocol wang propos fixeddependecyaftersend fda checkpoint protocol break pcmcondit subsect two assert fda outperform protocol forc checkpoint weaker condit fdass protocol forc checkpoint stronger condit better fda term number forc checkpoint demonstr first prove former assert true let c f denot condit fda base ie break pcm condit cpw denot protocol take forc checkpoint weaker condit fdass base condit denot cw obvious c f subset cw repres relat c f cw let ccpat f ccpat w repres checkpoint commun pattern produc protocol fda cpw respect sinc ad forc checkpoint cannot make pcpath ie prime causal path origin checkpoint commun pattern becom nonpc path directli follow lemma lemma pcpath origin checkpoint commun pattern still pcpath checkpoint commun pattern produc protocol defin extra pcpath nonpc path origin becom pcpath due forc checkpoint taken protocol follow two lemma lemma extra pcpath ccpat f also extra pcpath ccpat w proof assum exist extra pcpath ccpat f extra pcpath ccpat w extra pcpath produc forc checkpoint taken it thu exist pcpath condit sendfirst ccpat f fda forc process take checkpoint break c f condit form checkpoint made becom extra pcpath say produc obvious causal past similarli pcpath either origin pcpath figur observ process lemma extra pcpath produc anoth pcpath causal past thu also causal past repeatedli forego observ sinc messag causal past finit eventu obtain origin pcpath n previou progress shown figur lemma n also pcpath ccpat w henc cpw must forc process take checkpoint not necessarili checkpoint one ccpat f receiv n last nearest previou messagesend event avoid n form c f condit cpw also need break sinc c f cw forc checkpoint make ngamma ccpat w becom extra pcpath sinc ccpat f also extra pcpath messagesend event receiv n last nearest previou messagesend event name cannot exist causal path prevent ngamma becom prime reason ngamma also becom pcpath ccpat w final also becom extra pcpath ccpat w lead contradict qed lemma fda never forc two consecut checkpoint two consecut condit c w if ani pcpath pcpath figur scenario lemma checkpoint forc cpw proof prove lemma show cpw must forc least one checkpoint two consecut forc checkpoint taken fda see scenario shown figur two consecut checkpoint forc fda exist two continu condit pcpath latter c f condit ccpat f lemma lemma also pcpath ccpat w therefor cpw forc one checkpoint pcpath nearest previou messagesend event prevent c f condit form shown hollow diamond figur checkpoint obvious two consecut checkpoint forc fda qed consequ deriv follow monoton properti theorem cpw take nth forc checkpoint later fda doe n proof induct given checkpoint commun pattern exactli cpw fda forc checkpoint taken clear cpw must forc first checkpoint later fda reason c f cw suppos cpw take kth checkpoint later fda doe accord lemma cpw take th checkpoint later fda doe qed let f ckptcp denot number forc checkpoint taken protocol cp appli previou theorem obviou f ckptcpw f ckptfda russel algorithm protocol present name norec aftersend nra fixeddependencyinterv fdi wang respec tive rdt protocol definit nra break cmpath fdi forc checkpoint whenev pcpath encount henc belong famili cpw theorem know fda better two protocol term number forc checkpoint begin demonstr latter assert aforement begin valid also let cp denot protocol take forc checkpoint stronger condit fdass condit base c obvious c c f let ccpat repres checkpoint commun pattern produc protocol cp similarli consid follow lemma lemma extra pcpath ccpat also extra pcpath ccpat f proof assum exist extra pcpath ccpat extra pcpath ccpat f sinc cp also break certain pcmcondit observ lemma obtain origin pcpath n caus becom extra pcpath lemma n also pcpath ccpat f henc fda must forc process take checkpoint not necessarili checkpoint one ccpat receiv n last nearest previou messagesend event avoid n form c f condit fda need break forc checkpoint make ngamma ccpat f becom extra pcpath sinc ngamma ccpat also extra pcpath messagesend event receiv n last nearest previou messagesend event reason ngamma also becom pcpath ccpat f final also becom extra pcpath ccpat f lead contradict qed similar descript lemma follow lemma prove lemma cp never forc two consecut checkpoint two consecut checkpoint forc fda therefor obtain corollari straightforward way corollari fda take nth checkpoint later cp doe n so assert f ckptfda f ckptcp hold rdt protocol bhmr propos break nonvis doubl pcmpath pcmcycl includ nondoubl pcmcycl thu belong famili cp side effect forego corollari give formal proof show bhmr outperform fda term number forc checkpoint instead simul result nopcmcycl vs fda anoth interest result techniqu compar nopcmcycl fda appli corollari protocol nopcmcycl break nonvis doubl pcm path pcmcycl outperform fda base condit stronger fdass howev find nopcmcycl actual equival protocol fda shown follow theorem theorem pcmcycl nonvis doubl pcmpath broken checkpoint commun pattern visibl doubl pcmpath also broken proof visibl doubl pcmpath delta shown figur a sinc must exist prime path visibl doubl delta m without loss gener assum prime figur a know causal past last show case analysi delta broken a delta last prime pcmcycl delta last delta broken thu pcmpath b delta last prime exist causal path process p necessarili receiv last otherwis turn nonprim shown figur a without lost gener assum nearest causal path p first pcmcondit pcmcondit broken theorem assumpt forc checkpoint make delta last becom prime sinc first causal path p receiv last consequ broken not pcmpath first visibl doubl pcmpath shown figur b clearli causal past last thu causal past also causal past last repeatedli appli forego observ sinc messag causal past last finit eventu obtain pcmcondit n delta n first either nonvis doubl pcmpath pcmcycl therefor need broken forc checkpoint make becom prime pcmpath broken reason ngamma delta ngamma first also broken final pcmpath delta also broken qed accord previou theorem protocol nopcmcycl fact break pcmcondit equival fda result show first last a b figur scenario theorem reduc redund size piggyback control inform adopt fda instead nopcmcycl nopcmcycl need extra inform distinguish visibl doubl pcmpath pcm vs pescm baldoni et al propos constrain character rdt properti pescm design protocol pescmcondit compos pcmcondit delta elementari simpl besid prime interest subsect lie fact exist pcmcondit impli exist pescm condit posit consequ becom unnecessari take stronger condit piggyback control inform consider protocol first introduc definit term elementari simpl definit zpath elementari travers sequenc p sequenc process travers repetit definit causal path simpl two event receivem sendm i occur interv name elementari zpath travers process onc simpl causal path includ local checkpoint instanc checkpoint commun pattern shown figur path m neither elementari simpl travers process p j twice local checkpoint c k includ path m elementari simpl definit everi causal path contain elementari causal path elementari causal path contain prime causal path start interv end point thu also prime pecmcondit defin pcm condit properti elementari addit prime directli follow theorem corollari theorem exist pcmcondit impli exist pecmcondit posit corollari exist nondoubl pcmcondit impli exist nondoubl pecmcondit posit next begin demonstr lemma below lemma pecpath prime elementari causal path contain pescpath prime elementari simpl causal path proof note nonsimpl causal path written compon simpl prove lemma show last simpl path contain pecpath prime of cours elementari depict figur pecpath l prime exist prime path point x point point preced point y sinc causal path receivelast hb turn nonprim lead contradict qed accord theorem corollari previou lemma easili verifi follow theorem corollari true theorem exist pcmcondit impli exist pescmcondit posit corollari exist nondoubl pcmcondit impli exist nondoubl pescmcondit posit idea underli previou result protocol nopescm break pescmcondit protocol nononvisiblydoubledpescm break nonvis doubl pescmpath nondoubl pescmcycl present exactli fda nnvdpcm respect howev piggyback control inform sake necess distinguish simpl path intuit break nondoubl pcmcondit order satisfi rdt theorem figur pecpath achiev goal break nondoubl pescmcondit scenario necessarili pescmcondit pcmcondit break former elimin latter reason previou result hold famili rdt protocol figur depict hierarchi graph compar famili communicationinduc checkpoint protocol satisfi rdt properti plain arrow protocol cp anoth protocol cp indic f ckptcp f ckptcp dot arrow indic piggyback control inform cp less cp line two arrow mean equival line mark x mean incompar protocol cbr checkpointbefoerec bottom figur checkpoint place everi messagereceiv event easili verifi fdi nra forc fewer number checkpoint cbr figur marshal discuss previou section note famili includ mani exist rdt protocol literatur therefor result help wide rang practic applic nopcmpath nopcmcircl fda nra fdi cbr figur compar famili rdt protocol conclus paper provid theoret analysi rdt protocol context imposs problem address first shown common intuit literatur convinc definit need formal proof demonstr one protocol better anoth one rigor demonstr usual found necessarili worthi adopt protocol base stronger condit piggyback control inform also prove optim onlin protocol ensur rdt properti scenario quit common area onlin algorithm due knowledg futur inform moreov techniqu compar use protocol propos show techniqu exploit compar mani exist protocol literatur henc result provid guidelin design evalu effici communicationinduc checkpoint rdt protocol acknowledg author wish express sincer thank jeanmichel helari irisa michel raynal irisa whose comment help improv present paper would like also thank jeff westbrook valuabl discuss onlin algorithm tsai kuo work support nation scienc council taiwan roc grant nsc e r consist global checkpoint base direct depend track distribut snapshot determin global state distribut system a survey rollbackrecoveri protocol messagepass system system structur softwar faulttoler checkpoint rollbackrecoveri distribut system experiment evalu multiprocessor cachebas error recoveri necessari suffici condit consist global snapshot consist global checkpoint contain given set local check point the maximum minimum consist global checkpoint applic guarante deadlock recoveri deadlock resolut rollback propag checkpoint distribut applic mobil comput causal distribut breakpoint when piecewis determin almost true a communicationinduc checkpoint protocol ensur rollbackdepend trackabl rollbackdepend trackabl optim character protocol time clock order event distribut system effici distribut recoveri use messag log optimist recoveri distribut system state restor system commun process optim checkpoint local record dominofre rollback recoveri tr ctr roberto baldoni jeanmichel hlari michel raynal rollbackdepend trackabl visibl character proceed eighteenth annual acm symposium principl distribut comput p may atlanta georgia unit state jichiang tsai properti rdt communicationinduc checkpoint protocol ieee transact parallel distribut system v n p august b gupta z liu z liang design direct depend base fast recoveri algorithm distribut system acm sigop oper system review v n p januari b gupta s k banerje rollforward recoveri scheme solv problem coast forward distribut system acm sigop oper system review v n p juli d manivannan mukesh singhal quasisynchron checkpoint model character classif ieee transact parallel distribut system v n p juli jm hlari a mostefaoui r h b netzer m raynal communicationbas prevent useless checkpoint distribut comput distribut comput v n p januari junlin lin margaret h dunham lowcost checkpoint techniqu distribut databas distribut parallel databas v n p decemb