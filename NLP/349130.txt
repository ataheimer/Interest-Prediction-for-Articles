t improv precis inca prevent spuriou cycl a inequ necessari condit analyz inca finitest verif tool abl check properti larg concurr system inca check properti concurr system gener system inequ must integ solut properti violat may howev integ solut inequ correspond execut violat properti inca thu accept possibl inconclus result exchang greater tractabl describ method elimin one two main sourc inconclus result b introduct finitest veric tool deduc properti nite state model comput system use check properti freedom deadlock mutual exclus use resourc eventu respons re quest model repres execut system perhap make use abstract nitest veric tool take account execut research partial support nation scienc foundat grant ccr view nding conclus present author interpret necessarili repres ocial polici endors either express impli nation scienc foundat us govern system moreov nitest veric tool appli stage system develop appropri model construct tool thu repres import complement test especi concurr system nondeterminist behavior lead dierent execut aris input data main obstacl nitest veric concurr system state explos problem number state concurr system reach is gener exponenti number concurr process system problem confront analyst immediatelyeven small system number reachabl state larg enough straightforward approach examin state complet infeasibleand complex result tell us way avoid complet everi method nitest veric concurr system must pay price accuraci rang applic practic inequ necessari condit analys inca nitest veric tool use check properti system larg state space inca approach formul set necessari condit exist execut program violat properti condit inconsist execut violat properti condit consist analysi inconclus sinc condit necessari sucient may still case execut program violat properti inca thu accept possibl inconclus result exchang greater tractabl two main sourc inconclus result paper show one these caus cycl nite state automata repres compon concurr system elimin seem moder cost next section describ inca approach section explain techniqu improv inca preci sion fourth section present preliminari data applic nal section summar paper discuss issu relat precis inca inca complet discuss inca approach along care analysi express power contain paper use small and quit contriv exampl sketch basic inca approach show certain cycl automata correspond compon concurr system lead imprecis inca analysi refer reader want detail basic approach basic inca approach regard concurr system collect commun nite state automata transit state fsa correspond event execut system inca treat fsa network ow regard occurr transit state state t correspond event e unit ow node node t sequenc transit particular fsa correspond event segment execut system thu repres ow one state fsa anoth check properti concurr system use inca analyst speci way execut might violat properti term sequenc segment exe cution suppos analyst want show event b never preced event execut system violat properti execut occur b occur inca could speci singl segment run start execut occurr b requir occur somewher segment it could also speci sequenc two segment rst run start execut occurr a second start immedi rst end b former specic gener ecient latter may provid addit precis case see section inca provid queri languag allow analyst specifi variou aspect segment call interv inca queri languag execut gener equat describ ow within fsa requir ow node equal ow out accord speci sequenc segment system execut ad equat inequ relat certain transit dierent fsa accord semant commun system inca produc system equat inequ execut satis analyst specic and therefor violat properti check correspond integ solut system equat inequ inca use standard integ linear program ilp method determin whether integ solut integ solut exist execut violat properti properti hold execut concurr sy tem integ solut howev know properti violat system equat inequ repres necessari condit exist execut violat properti possibl solut exist correspond real execut see concret work consid ada program shown figur program describ three concurr process task task begin rendezv ing task entri c enter loop select statement nondeterminist choos rendezv entri entri b readi commun appropri entri ac packag simpl task task entri a end t entri b entri c task packag bodi simpl task bodi task bodi begin begin accept c tc loop loop select ta accept a end loop loop end t select accept a accept c exit task bodi end t accept b loop accept a figur small exampl cept commun entri a enter loop accept rendezv entri accept one entri c instead accept commun entri b tri forev repeatedli rendezv entri a figur show fsa construct inca pro gram state transit number refer transit exampl repres occurr rendezv two task gure transit label entri correspond rendezv take place suppos wish check occurr rendezv entri b cannot preced rendezv entri a describ earlier may specifi violat segment execut run start execut occurr rendezv b contain rendezv a ow equat task describ possibl ow initi state task one state task could end segment sinc segment end rendezv entri b repres transit number fsa correspond task transit number fsa correspond task t know fsa must state fsa must state end segment ow equat therefor describ ow start state end state ow equat describ ow start state end state t fact rendezv occur segment impli fsa must state end segment ow equat describ ow state state produc ow equat let x variabl measur c figur fsa exampl ing ow along transit number i state gener equat set ow equal ow out must howev take account implicit ow initi state fsa implicit ow end state ow thu exampl equat state sinc ow state initi state ow transit similarli equat state sinc ow transit implicit ow sinc ow fsa end state complet system equat inequ must add equat ect fact two task particip rendezv must agre number time occur instanc need equat say number occurr rendezv entri fsa fsa t also need inequ express requir least one occurr rendezv a use state thi full system equat inequ use check properti rendezv entri b cannot preced rendezv entri shown figur the descript actual somewhat over simpli inca perform sever optim reduc size system inequ real system inequ produc inca would smaller ex ampl inca would observ cannot ow along transit violat execut becaus segment execut must end transit would elimin variabl x system would also form constant propag elimin variabl equat essenti research nitest veric tool flow equat state equat commun equat entri equat x requir inequ occur x figur system equat inequ exampl view aim amelior state explos problem interest system properti approach taken inca avoid enumer reachabl state system inher composit sens equat inequ gener automata correspond individu process rather singl automaton repres full concurr system size system equat inequ essenti linear number process system assum size process bound furthermor use properli chosen cost function solv problem guid search solut ilp nphard problem gener standard techniqu solv ilp problem branchandbound method potenti exponen tial practic howev ilp problem gener concurr system larg total unimodular subproblem seem particularli easi solv experi suggest time solv problem grow approxim quadrat size system inequ and thu number process system comparison approach nitest verica tion method show perform method vari consider system properti veri inca frequent perform well as better than tool spin smv inca approach also extend check time properti realtim system prove trace equival certain class system sourc imprecis system equat inequ gener inca repres necessari condit violat properti veri note earlier howev repres necessari sucient condit solut system equat inequ may correspond actual execut two main reason thi rst order event occur strictli speak equat inequ gener inca refer total number occurr variou event segment execut directli impos restrict order event occur within segment fact ow equat singl fsa typic impli fairli strong condit order commun equat relat occurr event dierent fsa impos strong restrict order occurr event dierent process see whi consid system compris two process rst process begin tri commun second process channel then complet commun tri commun second process channel b second process tri complet commun revers order system obvious deadlock equat gener inca would say number commun channel rst process equal number second process allow solut commun occur thi slight oversimpl inca would actual detect deadlock case complic exampl sever process mechan inca provid directli constrain order event dierent process use addit segment execut often enough elimin solut correspond real execut system expens restrict rang applic inca return point nal section paper second sourc imprecis exist cycl fsa consid ow equat state shown figur transit selfloop state ow along transit count ow state state equat x constrain variabl x all simpli cancel x term similarli variabl x x constrain ow equat appear variabl constrain commun equat three variabl otherwis unconstrain equat restrict solut set fact although system figur execut prex end rendezv entri b contain rendezv entri a solut system equat inequ shown figur x x x x x x equal x x x equal solut requir number rendezv least met set unconstrain variabl x x figur show fsa transit ow indic bold arc ow fsa two connect compon one initi state state expect one made ow cycl state connect ow state state obviou ow fsa correspond actual execut must connect spuriou solut one correspond real execut exampl illustr problem much independ interest problem howev occur c figur solut disconnect cycl frequenc analysi interest sy tem instanc recent analysi chiron user interfac develop system encount solut disconnect cycl tri verifi properti check case abl reformul properti specifi addit segment verifi properti allow us elimin solut choos event repres highlevel requir modic howev repres consider expens increas analyst eort veri cation time next section describ techniqu elimin solut one compon ow fsa elimin spuriou cycl straightforward approach relat problem well known optim liter atur formul travel salesman problem integ program problem essenti ensur solut repres singl tour visit citi rather collect disconnect subtour visit proper subset citi standard approach elimin solut disconnect subtour add inequ prevent solut visit citi subset u unless solut includ arc citi u one u thu variabl x ij solut repres tour salesman goe directli citi citi j otherwis standard formul travel salesman problem would includ j inequ enforc requir citi enter left exactli onc elimin possibl subtour subset u would add inequ x ij requir salesman travel citi outsid u citi u of cours need inequ like everi subset u size least n n number citi case prevent solut ow disconnect cycl c add inequ requir that ow c must ow enter c outsid littl complic situat travel salesman problem case know solut must enter citi exactli onc case want requir ow one state make c unless ow along one transit c instanc want requir ow transit exampl ow transit gener would need quadrat inequ xx x integ quadrat program is howev much harder integ linear program would like avoid introduc quadrat inequ standard techniqu impos upper bound b variabl ie assum transit occur b time replac quadrat inequ linear inequ integ solut x x b exactli we note impos upper bound variabl would mean inca analysi longer strictli conserv system inequ solut x less equal b know execut transit occur b time violat properti sinc b taken quit larg restrict unlik seriou one practic problem approach may requir mani extra inequ number subtour elimin travel salesman problem essenti number subset set citi clearli exponenti number citi similarli number cycl fsa essenti equal number subset set state construct small concurr ada program line code fsa one task state distinct subset state form least one cycl integ program problem mani inequ infeas better method requir practic method section describ method prevent spuriou cycl requir fsa segment execut new variabl new inequ number state fsa number transit basic idea essenti follow suppos solut system equat inequ origin gener inca fsa segment execut attempt construct subgraph vertic fsa whose edg subset posit ow solut requir i ow vertex v solut edg termin v must occur subgraph ii vertex v subgraph assign depth dv way depth given node greater predecessor subgraph origin solut disconnect cycl choos subgraph span tree edg ow take depth vertex distanc root tree vertex solut disconnect cycl c howev cannot construct subgraph see whi suppos could construct subgraph let v vertex c dv du u c sinc ow v solut v must predecessor u subgraph sinc cycl c disconnect ow start initi state fsa state u must also lie c u predecessor v subgraph dv du contradict minim dv c cours want consid possibl solut system equat inequ gener inca one time attempt construct subgraph separ solut instead add new variabl inequ lead augment system equat inequ whose integ solut correspond exactli integ solut origin system appropri subgraph construct describ procedur gener augment system case singl fsa f singl segment execut variabl x origin system correspond transit f introduc new variabl variabl correspond edg subgraph otherwis state v f introduc new variabl dv bound n integ least maximum length nonselfintersect path fsa instanc n taken number state f variabl dv depth v gener inequ involv new variabl variabl correspond transit state u f state v gener inequ rst inequ say must x correspond edg subgraph solut posit ow along edg second inequ requir dv greater du edg u v subgraph edg subgraph ie inequ read dv du n bound dv du make vacuou final let inv denot number transit state v state v f initi state gener inequ sum taken transit state b upper bound variabl as note earlier b taken quit larg x j inequ satis vacuous x j posit inequ forc j posit mean that solut ow state v edg termin v belong subgraph argument sketch begin section prove follow theorem show method elimin solut disconnect cycl theorem let p system equat inequ gener inca check particular properti given concurr system let p augment system construct p describ abov solut assign valu variabl p well addit variabl thu obtain assign valu variabl p solut p project set integ solut p variabl take valu b disconnect cycl exactli equal set project integ solut p variabl take valu b gener queri specifi one execut segment situat bit complic gener case inca construct owgraph follow first creat one copi fsa segment speci queri copi optim independ remov unnecessari state transit base restrict impos queri segment seen exampl section inca determin queri state fsa could end segment add connect edg possibl end state segment correspond state segment edg connect ow repres event one segment execut ow next segment final initi node ad connect edg certain state rst segment task nal node ad incom connect edg possibl end state nal segment task owgraph actual structur inca use gener ilp system algorithm describ section actual appli subset vertic owgraph rather whole owgraph therebi elimin spuriou solut disconnect cycl contain subset given subset w vertic owgraph one form new graph v follow creat vertex v vertex w also add initi nal vertex v edg join two vertic w creat correspond edg v edg origin outsid w termin w creat correspond edg v initi vertex correspond vertex edg origin w termin outsid w creat correspond edg v correspond vertex nal vertex edg v associ ilp variabl variabl associ correspond edg origin owgraph appli algorithm v gener new variabl inequ ad inca origin produc owgraph argument given go through restrict algorithm way mani practic ap plicat suppos exampl solut contain singl disconnect cycl clear cycl must lie within singl segment singl task owgraph edg state one segment state preced segment edg state one task anoth now appli cycleelimin algorithm entir owgraph might expens term time memori gener new variabl constraint time memori need ilp tool solv new system case make sens appli algorithm problemat segment problemat task typic segment behav quit independ exist spuriou cycl one segment relat exist spuriou cycl segment one might tempt conserv possibl appli cycleelimin algorithm vertic involv oend cycl usual fruitless as often not anoth spuriou solut found expand cycl includ vertic howev matter much cycl expand still must lie entir singl segment singl task therefor best strategi might appli algorithm entir problemat segment task soon one spuriou cycl appear there preliminari experi current version inca consist line common lisp inca write le describ system equat inequ standard format the mp format use commerci packag call cplex read le solv system we also use separ program translat ada program nativ input languag inca optim inca use reduc number variabl inequ make introduct new variabl inequ somewhat complic integr method inca involv substanti program eort initi explor eect appli method therefor chosen proceed modifi mp le produc inca written java program read le le describ owgraph produc new mp le repres augment system equat inequ compar perform cplex origin system augment system stage howev cannot measur long would take inca gener augment system equat inequ experi use inca version harlequin lispwork cplex version sun enterpris two processor gb memori run solari upper bound b repres maximum number time edg may travers violat execut taken use default option cplex except follow chang mip strategi nodeselect set mip strategi branch set mip limit solut set the rst two affect choic made branchandbound algorithm third stop search soon integ solut found ilp problem ran cplex time took averag time time report collect use time command includ user system time scalabl version exampl section rst experi creat scalabl version simpl exampl describ section given integ modi ada program figur n copi task altern outer select statement new copi task call entri t in detail replac task n copi itself call tc tcn bodi t replac rst accept c line n copi replac bodi text begin rst accept end last n copi itself befor wish verifi rendezv entri never preced rendezv entri b inca construct fsa n node n edg the pictur slightli dierent one might expect ad start vertex end vertex inca perform trim fsa distinct subset vertex set cycl n inca nd spuriou solut involv disconnect cycl t appli algorithm section portion owgraph come fsa task t howev yield ilp problem cplex report integ solut thu verifi never preced b n number variabl incagener ilp system n n number constraint equa tion inequ n number variabl new system number constraint time take cplex nd spuriou solut origin system time take determin inconsist augment system shown figur time modest second fact dwarf time take inca gener intern represent problem origin ilp system minut seem howev larg n substanti increas number constraint augment system due larg number edg fsa t begin signic impact time solv ilp problem time conclus result cycl elimin spuriou solut without cycl elimin figur cplex time scale simpl exampl spuriou cycl chiron second experi involv chiron user interfac system chiron client compris abstract data type depict artist maintain map adt visual object appear screen runtim compon provid coordin particular certain event indic chang state adt dene adt wrapper task noti dispatch task whenev event occur dispatch maintain array event record artist interest noti event artist regist unregist event indic current interest noti receiv event adt wrapper dispatch loop artist appropri array call entri artist notifi event chiron architectur highli concurr even toy chiron interfac repres line ada code compar perform sever nitest veric tool flaver inca smv spin check number properti chiron interfac two artist n dierent kind event n rang one properti wish verifi system call properti dispatch noti artist right event exampl dispatch receiv event e adt wrapper wish show notifi artist event e noti appropri artist e formul properti inca queri take segment fact abl verifi properti use inca system number kind event n flaver spin abl verifi properti least scale problem inca need decompos dispatch task subsystem entail creat new task dispatch ei maintain array event ei dispatch task left interfac pass regist unregist notic request appropri dispatch ei way addit concurr introduc if intern commun dispatch subsystem hidden new system observ equival origin one decompos system advantag n increas size dispatch ei fsa remain constant although number task increas gener decomposit greatli improv perform inca properti inca yield inconclus result problem disconnect cycl task dispatch e second segment get around problem reformul properti use dierent event repres highlevel properti depend prior veric properti relat event use origin new formul cumbersom timeconsum onc properti reformul howev perform inca decompos system consider better tool inca time alreadi roughli order magnitud better time tool inca could verifi properti much larger valu n dierenc perform tool properti two version chiron system typic observ properti implic discuss use cycl elimin algorithm describ here abl verifi origin properti directli case node edg problemat taskseg n henc n algorithm add variabl constraint ilp system n number variabl origin system n accord n congruent modulo respect thi ect way chose artist regist event scale number event number constraint augment system similarli valu n case elimin spuriou cycl add constant number variabl constraint n increas cplex time n origin system cplex found spuriou solut result analysi inconclus augment system properti conclus veri given figur again time second repres small portion total analysi time for minut spike cplex time augment system seem due occurr certain numer problem particular system cost unnecessarili prevent spuriou cycl also tri ad cycl elimin variabl constraint system alreadi yield conclus re sult might yield insight margin cost inca add cycl elimin default problem experi use anoth properti time event conclus result cycl elimin spuriou solut without cycl elimin figur time chiron properti case use properti b say artist never unregist event unless alreadi regist event restrict check singl artist event result properti requir segment formul inca queri use decompos dispatch version client code inca veri properti without need cycl elim inat n number variabl inca gener ilp system for n n accord n congruent modulo respect number constraint similarli n appli cycleelimin algorithm recal separ dispatch ei n event type segment in experi discuss previou section appli algorithm one fsa one segment entail ad new variabl system n ad new constraint n time requir cplex nd conclus result case graph figur although ilp system augment case quit larg variabl constraint larger n still appear cplex determin inconsist system short time less second exampl typic real cost introduc cycl elimin inca might lie gener new ilp system solv it conclus futur work time event conclus result cycl elimin conclus result without cycl elimin figur cplex time chiron properti b nitest veric tool alway provid conclus result problem analyz tool walk graph reachabl state concurr system never report system might deadlock fact system deadlockfre assum cours graph correctli repres reachabl state space system tool must abl store full set reachabl state unabl report result system whose reachabl state space exce storag avail tool inca deliber overestim collect possibl execut system thu accept possibl inconclus result or spuriou report possibl fault order increas rang system appli inca two main sourc imprecis represent execut system rst fact semant restrict order occurr event dierent concurr process gener repres equat inequ use inca second sourc imprecis fact equat inequ allow solut ow fsa repres concurr process may cycl connect initi state paper shown imprecis caus second sourc may elimin specic case inconclus result often address care reformul properti check although may requir veric addit properti justifi reformul process requir substanti amount eort part human analyst well consider cost carri necessari veric also sometim address inconclus result manual insert special inequ prevent disconnect ow small number specic cycl problem gener approach number cycl may well exponenti size concurr system cycl requir separ inequ even feasibl autom gener inequ result ilp problem would far larg solv number new variabl inequ introduc method present paper linear number state transit fsa repres process concurr system analyz report result preliminari experi aim assess cost increas time solv system equat inequ appli method experi suggest cost rel small especi eort human analyst taken account plan carri addit experi type integr techniqu inca toolset also evalu time need gener addit variabl inequ also investig approach elimin imprecis caus repres restrict order event dierent process fulli repres restrict impos semant program languag design notat may practic might limit applic inca way store full set reachabl state limit applic tool base explor graph reachabl state therefor explor method allow analyst control degre restrict order repres exampl one approach consid formul ow commun equat way hold everi stage execut end reformul ow commun equat therefor enforc restrict order event dierent process also determin region ndimension euclidean space n number variabl system equat inequ look point satisfi full system equat inequ reach take certain integers step region success reduc kind imprecis import appli inca approach mani system interprocess commun access share data r autom deriv time bound uniprocessor concurr system empir comparison static concurr analysi techniqu empir evalu three method deadlock analysi ada task evalu deadlock detect method concurr softwar practic method bound time event concurr realtim system toward scalabl composit analysi use integ program verifi gener safeti live properti tr practic techniqu bound time event concurr realtim system empir evalu three method deadlock analysi ada task program autom deriv time bound uniprocessor concurr system toward scalabl composit analysi use integ program verifi gener safeti live properti evalu deadlock detect method concurr softwar compar finitest verif techniqu concurr softwar