t quantit evalu regist pressur softwar pipelin loop a softwar pipelin loop schedul techniqu extract loop parallel overlap execut sever consecut iter one drawback softwar pipelin high regist requir increas number function unit degre pipelin paper analyz regist requir softwar pipelin loop also evalu effect perform addit spill code spill code need number regist requir softwar pipelin loop larger number regist target machin spill code increas memori traffic reduc perform final compil appli transform order reduc number memori access increas function unit util paper also evalu neg effect regist requir transform might produc loop b introduct current highperform floatingpoint microprocessor tri maxim exploit parallel by heavili pipelin function unit make aggress use parallel combin trend current futur highperform microprocessor exploit effect amount avail parallel aggress schedul techniqu softwar pipelin requir softwar pipelin instruct schedul techniqu exploit instruct level parallel ilp loop overlap execut success iter differ approach gener softwar pipelin schedul loop modulo schedul class softwar pipelin algorithm reli gener schedul iter loop schedul repeat regular interv depend violat resourc usag conflict aris modulo schedul propos begin sinc then mani research paper appear topic incorpor product compil drawback aggress schedul techniqu softwar pipelin increas regist requir addit increas either stage function unit number function unit current trend microprocessor design tend increas number regist requir softwar pipelin loop regist requir schedul extrem import compil sinc valid schedul must fit avail number regist target ma chine way research effort produc optimalnearoptim modulo schedul minimumreduc regist requir optim method mainli base linear program approach unfortun optim techniqu prohibit comput cost make impract product compil practic modulo schedul approach use heurist produc nearoptim schedul reduc regist requir approach tri reduc regist requir schedul appli postpass process propos perform regist alloc softwar pipelin loop number regist requir larger avail number regist spill code introduc reduc regist usag differ altern gener spill code softwar pipelin loop propos evalu spill code also reduc perform paper show perform memori traffic aggress in term ilp machin heavili degrad due lack regist avoid perform degrad big regist file requir addit number read write port increas number function unit number regist number port neg effect area requir regist file access time regist file new regist file organ propos big regist file in term regist access port without degrad either area access time organ use combin registersensit softwar pipelinig techniqu result better perform show techniqu reduc effect regist pressur complementari paper regist requir pipelin floatingpoint intens loop evalu sever studi perform first regist requir loop invari machineindepend characterist loop studi section section carri studi regist requir loop variant function latenc number function unit section studi cumul regist requir loop variant invari show loop high regist requir repres high percentag execut time perfect club section consid effect limit size regist file perform memori traffic purpos spill code ad loop requir regist avail final section analyz effect regist requir optim tri improv perform reus data increas function unit usag relat concept experiment framework overview modulo schedul softwar pipelin loop schedul iter divid stage execut consecut iter distinct stage overlap number stage one iter term stage count sc number cycl per stage initi interv ii execut loop divid three phase ramp phase fill softwar pipelin steadi state phase softwar pipelin achiev maximum overlap iter ramp phase drain softwar pipelin steadi state phase execut pattern oper execut stage achiev iter piec code term kernel correspond one stage steadi state phase initi interv ii two success iter bound either loopcarri depend graph recmii resourc constraint architectur resmii lower bound ii term minimum initi interv mii max recmii resmii reader refer extens dissert calcul resmii recmii regist requir valu use loop correspond either loopinvari variabl loop variant variabl loop invari repeatedli use never defin loop execut loop invari singl valu iter loop invari requir one regist regardless schedul machin configur loop variant valu gener iter loop and therefor differ valu correspond iter natur softwar pipelin lifetim valu defin iter overlap lifetim valu defin subsequ iter lifetim loop variant measur differ way depend execut model machin assum variabl aliv begin produc oper start last consum oper overlap lifetim differ iter pattern length ii cycl indefinit repeat obtain pattern indic number valu live given cycl shown maximum number simultan live valu maxliv accur approxim number regist requir schedul valu lifetim greater ii pose addit difficulti sinc new valu gener previou one use one approach fix problem provid form regist renam success definit valu use distinct regist renam perform compil time use modulo variabl expans mve ie unrol kernel renam compil time multipl definit variabl exist unrol kernel rotat regist file use solv problem without replic code renam differ instanti loop variant execut time paper assum presenc rotat regist file experiment framework experiment evalu done use innermost loop perfect club benchmark suit suitabl softwar pipelin loop obtain ictineo compil ictineo sourceto sourc restructur develop top polari intern represent combin high lowlevel inform includ basic transform allow us obtain optim data depend graph total loop suitabl softwar pipelin use set includ innermost loop subroutin call condit exit loop condit structur bodi ifconvert result loop look like singl basic block loop repres total execut time perfect club measur hppa addit show effect aggress optim individu loop also use livermor loop loop schedul wide rang vliwlik target configura tion differ number function unit latenc tabl show differ configur use along paper function unit fulli pipelin except divid pipelin all label differ configur pxli x number function unit kind latenc number stage mostli use function unit is adder multipli consid constant latenc load store divis squar root independ configur differ metric use along paper evalu perform one side regist requir evalu comput maximum number simultan live valu maxliv shown alloc strategi almost alway achiev maxliv lower bound particular wand strategi use endfit adjac order almost never requir maxliv regist second execut time approxim ii obtain modulo schedul time trip count loop final memori traffic approxim evalu number memori access need execut loop consid memori access defin graph spill code introduc due finit regist file regist requir loop invari loop invari valu repeatedli use loop iter never written it is defin enter loop use it redefin least loop finish loopinvari variabl either store regist memori but sinc memori bandwidth without doubt perform limit factor current processor even simpl optim compil tri hold regist execut loop purpos loopinvari variabl load memori regist enter loop use them even assum memori bandwidth restrict load variabl regist enter loop save instruct bandwidth loadstor architectur ie almost current processor anoth sourc loop invari invari comput ie comput produc result iter loop comput extract loop where perform everi iter comput enter loop also memori bandwidth instruct bandwidth partial result comput held regist optim term loopinvari remov one optim perform ictineo compil fact consid load store oper comput also extract loopinvari remov optim figur show exampl figur b show lowlevel represent loop remov loopinvari comput figur c show loop remov loopinvari comput notic q loopinvari variabl loop load regist enter them cj also loopinvari variabl innermost loop extract it outermost loop v v loop invari which assum alloc regist comput v loopinvari comput therefor extract innermost loop extract loop invari lead smaller innermost loop the one execut time less oper origin one were addit multipl memori access optim one addit multipl memori access ictineo compil perform among optim aggress extract loopinvari comput use optim depend graph evalu regist requir loop due loop invari figur show cumul distribut requir loop invari loop gener loop loop invari instanc loop loop invari loop less invari nevertheless loop high number loop invari instanc loop invari requir loop invari regist requir loop variant unlik loop invari number regist requir loop variant schedul depend characterist so regist requir depend schedul techniqu target machin configur schedul perform well topolog loop section interest effect machin configur regist requir main characterist influenc final schedul therefor regist requir number stage function unit number function unit is degre pipelin degre parallel purpos gener softwar pipelin schedul perfect club loop target configur shown tabl figur show cumul distribut regist configur notic product latenc function unit number function unit goe up number regist need loop also increas note number function unit slightli bigger effect number regist requir degre pipelin ha mainli due fact latenc function unit kept constant configur small number loop requir regist loop variant loop bodi loop invari store oper loop typic use initi data structur anoth region loop regist requir regist requir loop influenc number stage due fact loop arithmet opera tion is bodi load store oper loop regist requir hold valu load store basic use copi data structur combin regist requir although special architectur cydra separ regist file loopinvari variabl global regist file loopvari variabl rotat regist file current superscalar microprocessor softwar pipelin also appli singl regist file store set variabl therefor great interest know combin regist pressur loopvari variabl plu loopinvari variabl figur show cumul distribut regist requir loop perfect club softwar pipelin configur tabl interest notic loop schedul regist without ad spill code less aggress configur pl contrari loop schedul regist aggress configur pl regist avail would abl schedul loop respect also approxim loop it vari depend configur requir small number regist less figur one conclud regist requir extrem high regist might seem enough configur use even though observ small loop repres small percentag execut time time spent big loop which gener higher regist requir figur show dynam regist requir loop weight execut time graph figur similar one figur instead repres percentag loop requir certain amount regist repres percentag time spent loop requir certain amount regist data gather figur show small loop requir less regist portion execut time about regist avail loop schedul without ad spill code repres execut time even machin regist loop schedul without ad spill code repres execut time even more big percentag execut time perfect club spent loop requir regist effect limit regist file previou section infinit number regist assum section studi effect limit amount regist perform limit number regist regist alloc fail find solut number regist avail addit action must taken propos sever altern schedul softwar pipelin loop regist constraint purpos experi use best option term perform loop add spill code current microprocessor floatingpoint regist integ reg ister think futur gener microprocessor enlarg regist file regist at least float pointregist file sinc studi target float point intens applic studi effect regist file regist regist compar ideal case infinit number regist ad spill code gener valid schedul given number regist produc two neg effect one hurt perform indirectli sinc spill code add new load store oper might interfer memori subsystem caus addit cach miss effect affect perform directli new oper ad might necessari increas ii loop reduc throughput even hypothet case perfect memori system figur show number memori access requir execut loop six configur use notic number memori access configur spill code ad also predict fact number memori access increas number regist reduc also observ growth memori access dramat aggress configur instanc configur pl regist requir access ideal machin infinit regist file memori access regist anyway difficult predict perform degrad addit access without simul memori subsystem scope paper case easili predict direct effect perform spill code execut time loop larger ii figur show number cycl requir execut loop six configur infinit number regist regist regist notic that expect fewer regist mean lower perform more cycl requir execut loop gener aggress machin configur is bigger perform degrad instanc pl machin speedup regist file doubl regist regist instead pl machin speedup doubl regist file data gather experi conclud simpli ad function unit without care number regist result perform figur lower expect due neg effect additon spill code instanc doubl number function unit ie go pl pl produc speedup number regist limit machin regist speedup respect howev number regist doubl togeth number function unit ie pl regist pl regist speedup optim regist requir addit effect latenc number function unit regist requir loop also increas certain optim appli loop order see advanc optim affect regist requir loop handoptim livermor loop loop perfect club optim applic consid common optim loopinvari remov common subexpress elimin redund load store remov dead code remov assum appli compil follow subsect present brief descript optim studi effect appli optim perform regist requir loop unrol loop unrol optim use compil current micro processor allow better usag resourc sever iter schedul togeth increas number instruct avail schedul also reduc loop overhead caus branch index updat case achiev effici iter overlap softwar pipelin unrol requir match number resourc requir loop resourc processor also schedul loop fraction mii exampl assum loop addit processor adder recurr addit resourc limit schedul loop schedul cycl loop execut peak machin perform loop unrol schedul obtain new loop addit new loop schedul iter new loop correspond two iter origin loop averag iter complet cycl unrol loop execut peak machin perform unrol increas regist requir bigger loop tempor variabl store usual requir regist tabl show effect unrol loop regist requir loop use unrol result better usag avail resourc unfortun also produc increas regist requir which seen section degrad perform number avail regist less regist requir common subexpress elimin across iter common subexpress elimin across iter cseai extens inner loop common subexpress elimin optim appli almost optim compil consist reus valu gener previou iter reus data store regist and sinc valu use across iter one physic regist requir order overwrit live valu new instanti variabl extens loop common subexpress elimin optim sophist sens appli loop requir depend analysi know valu current iter use iter object optim reduc number oper loop bodi lead lower ii even appli optim final ii lower worthwhil appli number memori access reduc exampl consid loop figur whose unoptim bodi shown figur b ad loop variant gener oper subindex associ iter gener instanc repres valu gener first oper iter i convent common subexpress elimin step recogn load valu zi therefor oper v remov subsequ use v substitut use v optim produc output loop shown figur c notic optim loop requir oper instead common subexpress elimin optim detect valu v previou iter v equival valu therefor oper requir calcul v remov use substitut v done oper produc loop bodi figur d notic result loop bodi oper tabl show ii memori traffic loop without appli cseai notic case improv memori traffic ii both also interest notic that even though optim reduc number oper loop therefor number lifetim per iter regist requir increas case mainli due fact loop variant must preserv across sever iter backsubstitut backsubstitut techniqu increas parallel loop singl recurr therefor limit parallel increas number oper execut per iter instanc consid livermor loop shown figur a recurr weight limit mii adder cycl latenc loop schedul ii cycl use backsubstitut onc loop becom one shown figur b recurr limit schedul loop weight obvious case two addit instead one transform loop execut ii cycl doubl perform avoid part increas oper optim appli common subexpress elimin across iter exampl reduc number load number addit way reduc increment oper perform unrol well backsubstitut appli unrol livermor loop togeth backsubstitut obtain loop figur c notic loop requir addit comput two iter origin loop loop figur c execut ii cycl perform two iter perform loop figur b requir fewer oper backsubstitut appli number oper per iter in creas ii reduc gener bigger loop requir regist tempor valu store addit reduc ii requir regist tempor valu new valu creat iter tabl show effect perform regist requir appli backsubstitut livermor loop notic loop case ii becaus case schedul use fail find schedul cycl even though exist block block regist level wellknown optim context dens matrix linear algebra block transform appli multipl nest loop find opportun reus subscript variabl replac memori refer involv refer temporari scalar variabl alloc regist block basic consist unrol outer loop restructur bodi innermost loop memori refer reus iter held regist use block reduc number memori access loop memorybound reduct number memori refer improv maximum perform also reduct memori refer improv perform due less interfer memori subsystem final innermost loop bound recurr sever iter outermost loop one iter innermost loop improv resourc usag unfortun block increas size loop gener increas regist requir also enlarg lifetim loop variant must store regist longer time reus later enlarg lifetim also contribut increas regist requir transform loop versu origin one tabl show ii effect ii per iter memori traffic regist requir block appli basic matrix matrix kernel conclus paper evalu regist requir softwar pipelin loop evalu regist requir loop invari loop variant loop perfect club shown empir regist requir loop variant increas latenc number function unit result corrobor theoret studi done also shown loop high regist requir take import proport execut time repres numer applic also evalu effect regist file size number memori access perform shown memori traffic high growth regist file small machin configur ag gressiv also perform even hypothesi perfect memori system degrad small regist file final done limit evalu effect advanc opti mizat shown advanc optim increas perform reduc memori traffic expens increas regist requir suggest that practic optim must perform care loop excess optim high regist requir offset benefit optim appli even produc wors result futur work integr advanc optim ictineo compil order perform extens evalu effect optim perform tradeoff perform degrad due higher regist requir acknowledg work support ministri educ spain contract tic cepba european center parallel barcelona r mip r processor next gener risc system famili superscalar instruct execut alpha microprocessor approach scientif array process architectur design apbfp famili softwar pipelin schedul techniqu easili schedul horizont architectur high perform scientif comput softwar pipelin effect schedul techniqu vliw ma chine circular schedul new techniqu perform softwar pipelin parallelis loop exit pipelin architectur iter modulo schedul algorithm softwar pipelin loop realist resourceconstrain softwar pipelin algo rithm modulo schedul multipl initi inter val hypernod reduct modulo schedul softwar pipelin parisc compil compil cydra regist requir pipelin processor minim regist requir resourceconstrain softwar pipelin optimum modulo schedul minimum regist requir swing modulo schedul lifetim stage schedul techniqu reduc regist requir modulo schedul resi new methodolog regist optim softwar pipelin regist alloc use cyclic interv graph new approach old problem regist alloc softwar pipelin loop meet new model loop cyclic regist alloc heurist registerconstrain softwar pipelin principl cmo vlsi design system per spectiv partit regist file vliw preliminari analysi tradeoff use sack organ regist file vliw machin digit set new standard reduc impact regist pressur softwar pipelin systol array optim compil overlap loop support cydra perfect club benchmark effect perform evalu supercomput uniform represent highlevel instructionlevel transform polari next gener parallel compil convers control depend data depend livermor fortran kernel comput test numer perform rang cydra department super comput design philosophi unrol loop fortran softwar pipelin comparison improv improv regist alloc subscript variabl tr principl cmo vlsi design system perspect softwar pipelin effect schedul techniqu vliw machin cydra department supercomput overlap loop support cydra improv regist alloc subscript variabl parallel loop exit pipelin architectur circular schedul regist alloc softwar pipelin loop regist requir pipelin processor partit regist file vliw lifetimesensit modulo schedul compil cydra design tfp microprocessor iter modulo schedul minim regist requir resourceconstrain rateoptim softwar pipelin softwar pipelin optimum modulo schedul minimum regist requir modulo schedul multipl initi interv stage schedul hypernod reduct modulo schedul heurist registerconstrain softwar pipelin softwar pipelin systol array optim compil convers control depend data depend mip r processor superscalar instruct execut alpha microprocessor resi use sack organ regist vliw machin schedul techniqu easili schedul horizont architectur high perform scientif comput nonconsist dual regist file reduc regist pressur swing modulo schedul ctr javier zalamea josep llosa eduard ayguad mateo valero softwar hardwar techniqu optim regist file util vliw architectur intern journal parallel program v n p decemb david lpez josep llosa mateo valero eduard ayguad widen resourc costeffect techniqu aggress ilp architectur proceed st annual acmiee intern symposium microarchitectur p novemb dalla texa unit state javier zalamea josep llosa eduard ayguad mateo valero twolevel hierarch regist file organ vliw processor proceed rd annual acmiee intern symposium microarchitectur p decemb monterey california unit state david lpez josep llosa mateo valero eduard ayguad costconsci strategi increas perform numer program aggress vliw architectur ieee transact comput v n p octob javier zalamea josep llosa eduard ayguad mateo valero improv spill code gener softwar pipelin loop acm sigplan notic v n p may