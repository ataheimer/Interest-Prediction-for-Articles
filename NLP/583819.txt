t elimin java array bound check presenc indirect a java languag specif state everi access array need within bound array ie array length differ techniqu differ program languag propos elimin explicit bound check techniqu implement offtheshelf java virtual machin jvm underli principl techniqu bound check remov jvmcompil enough inform guarante sequenc access eg insid forloop safe within bound techniqu elimin array bound check develop program languag support multithread andor enabl dynam class load two characterist make tech niqu unsuit java techniqu develop specif java address elimin array bound check presenc indirect is index store anoth array indirect array object optimis applic array indirect paper propos evalu three implement strategi implement java class class provid function java array type int object class use instead indirect array strategi enabl jvm examin one class time obtain enough inform remov array bound check b introduct java languag jsgb speci avoid common error made softwar develop arguabl memori leak array indic outofbound type inconsi tenci featur basic pillar make java attract languag softwar develop basic pillar java build rich api distribut network graphic program builtin thread featur even import consid signic eort devot make java program portabl cost enhanc languag featur iswa perform rst gener java virtual machin jvm ly bytecod interpret concentr provid function perform much reput java slow languag come earli perform benchmark immatur jvm nowaday jvm third gener characteris by mix execut interpret bytecod machin code gener justintim prole applic execut select applic compil transform timeconsum section applic perform modern jvm increas steadili get closer c c compil see exampl scimark benchmark pm java grand forum benchmark suit bspf epc especi commod processorsoper system despit remark improv jvm standard compil transform eg loop reorder still includ overhead intrins languag specic remain java grand forum group research highperform comput constitut explor potenti benet java bring research area perspect forum observ limit note solut jav jav pbg bmpp thi overhead intrins languag specic paper address array bound check java languag specic requir that array access check run time access outsid bound less zero greater equal length array throw arrayindexoutofboundsexcept specic case consider elimin array bound check presenc indirect exampl consid array access foo indic indic foo java onedimension array type int array foo access trough indirect array indic two check perform run time rst check access indic scope paper reader interest techniqu implement java jvmscompil elimin check kind array access second check access foo kind array bound check subject paper array bound check elimin java program two thing accomplish perform point view rst direct reward elimin check at least two integ comparison second indirect reward possibl compil transform due strict except model speci java instruct capabl caus except inhibitor compil transform except aris java program uservis state program look like everi preced instruct execut succeed instruct execut except model prevent gener instruct reorder follow section motiv work provid descript problem solv section describ relat work section present three implement strategi enabl jvm examin one class time decid whether array bound check remov solut describ class includ multiarray packag jsr jsr strategi gener process understand perform deliv java librari oolala luj lfg lfga lfgb independ jsr section evalu perform gain elimin array bound check kernel array indirect also determin overhead gener introduc class instead indirect array section summaris advantag disadvantag strategi conclus futur work present section motiv descript problem array indirect ubiquit implement spars matrix oper matrix consid spars element matrix zero less element nonzero element kind matrix aris frequent comput scienc engin cse applic physic phenomena model dierenti equat combin dierenti equat stateoftheart solut techniqu produc spars matric ecient storag format data structur spars matric reli store nonzero element array exampl coordin coo storag format data structur spars matrix consist three array size two type int indx jndx valu oat point data type given index k element kth posit indx jndx repres row column indic respec tive element kth posit array valu correspond matrix element element store valu zero figur present kernel spars matrixvector multipl matrix store coo gure illustr exampl array indirect kernel describ commonli use iter solut system linear equat it estim cse applic requir solut system linear equat one stage anoth joh public class examplesparsebla public static void mvmcoo int indx int jndx doubl valu doubl vectori doubl vectorx int figur spars matrixvector multipl use coordin storag format array indirect also occur implement irregular section multidimension array mmg solut nonspars system linear equat pivot gvl consid set statement present figur statement comment access execut without problem hand statement comment access would throw arrayindexoutofboundsexcept except tri access posit array foo int doubl foo indx access foo indx access b figur java exampl array indirect diculti java compar main stream program languag sever thread run parallel one access array indx thu possibl element indx modi statement comment execut even jvm could check class load make sure thread could access indx new class could load invalid analysi relat work relat work divid a techniqu elimin array bound check b escap analysi c eld analysi relat eld analysi d precursor present work ibm ninja compil multidimension array packag survey techniqu improv perform java applic found kcsl elimin array bound check best knowledg none publish techniqu per se exist compilersjvm i optimis array bound check presenc indirect ii suitabl adapt justintim compil iii support multithread iv dynam class load techniqu base theorem prober si nl xmr heavi weight algorithm base data owstyl publish extens mcm gup gup kw asu cg languag provid multithread anoth techniqu base type analysi applic function languag xp linear program solver also propos rr bodik gupta sarkar develop abcd array bound check demand algorithm bg java design time constraint analys program appli transform runtim abcd target businesskind applic spars represent program includ inform multithread thu algorithm although interest purpos cannot handl indirect sinc origin problem multithread strategi propos section provid cheapli extra inform enabl abcd elimin check presenc indirect escap analysi four paper publish confer describ escap analysi algorithm possibl optimis java program optim alloc object heap vs stack remov synchron cg wr escap analysi tri determin whether object creat method thread anoth object escap scope creator escap mean anoth object get refer object and thu make live not garbag collect beyond execut method thread object creat it three strategi present section requir simpl escap analysi strategi provid inform class invari everi instanc variabl escap object otherwis dierent thread get access instanc variabl updat them possibl break desir class invari field analysi relat field analysi eld analysi gr relat eld analysi ar techniqu look one class time tri extract much inform possibl inform use exampl resolut method call object inlin relat eld analysi look relat among instanc variabl object aggarw randal ar demonstr relat eld analysi use elimin array bound check class follow iter pattern ghjv strategi present follow section make use concept eld analysi object provid meaning class invari repres instanc variabl eld howev actual algorithm test relat use previou work eld analysi demonstr elimin array bound check given ar cannot appli presenc indirect ibm ninja project multidimension array packag ibm ninja group focus numer intens applic base array java midki moreira snir mm develop loop version algorithm iter space nest loop would partit region prove except null check array bound check synchronis occur found exceptionfre syncronisationfre region tradit loop reorder transform appli without violat strict except model ninja group design implement multidimension array packag mmg replac java array discoveri safe region becom easier elimin overhead introduc use class develop semant expans wmmg semant expans compil strategi select class treat languag primit compil prototyp static compil known ninja success implement elimin array bound check togeth semant expans multidimension array packag loop reorder transform ninja compil compat specic java sinc support dynam class load semant expans techniqu ensur comput use directli multidimension array packag suer overheard although compil compat java mean techniqu develop could incorpor jvm techniqu would especi attract quasistat compil sbmg paper extend ninja group work tackl problem elimin array bound check presenc indirect strategi describ section gener class incorpor multidimension array packag propos java specic request jsr jsr accept jsr dene standard java multidimension array packag direct consequ ninja group work strategi describ section common goal produc class jvm discov invari simpli examin class and therebi deriv inform elimin array bound check class provid function java array type int and thu substitut them object class would use instead indirect array three strategi gener three dierent class natur multidimension array librari one describ jsr jsr figur describ public method three class implement three class extend abstract class intindirectionmultiarrayd packag multiarray public class runtimemultiarrayexcept extend runtimeexcept public class uncheckedmultiarrayexcept extend runtimemultiarrayexcept public class multiarrayindexoutofboundsexcept extend runtimemultiarrayexcept public abstract class multiarray public abstract class multiarrayd extend multiarray public abstract class multiarrayd extend multiarray public abstract class multiarray extend multiarray public final class booleanmultiarray extend multiarray public final class multiarray extend multiarray public abstract class intmultiarrayd extend multiarrayd public abstract int get int public abstract void set int i int valu public abstract int length public abstract class intindirectionmultiarrayd extend intmultiarrayd public abstract int getmin public abstract int getmax figur public interfac class substitut java array int multidimension array packag multiarray part class invari jvm discov common three strategi valu return method getmin getmax alway lower bound upper bound respect element store common part invari comput exampl use algorithm constraint propag propos abcd algorithm suitabl justintim dynam compil bg ection mechan provid java interfer three strategi exampl program use ection access instanc variabl method without know name even privat instanc variabl method access way program read write instanc variabl and therebi violat visibl rule circumst happen depend secur polici inplac jvm order avoid interfer hereaft secur polici assum to secur manag inplac allow program creat new secur manag replac exist one ie permiss setsecuritymanag createsecuritymanag grant see java allow program chang current secur polici ie permiss getpolici set polici insertprovid removeprovid write secur polici le grant see javasecuritysecuritypermiss javaiofilepermiss allow program gain access privat instanc variabl method ie permiss suppressaccesscheck grant see javalangreflectreflectpermiss jvm test assumpt linear time invok specic method java langsecuritymanag javasecurityaccesscontrol object startup assumpt impli loss gener sinc author knowledg cse applic requir ection access privat instanc variabl method addit describ secur polici assumpt repres good secur manag practic gener purpos java program authorit detail descript java secur see gon rst strategi simplest given problem aris parallel execut multipl thread trivial situat occur thread write indirect array word part problem disappear indirect array immut immutableintmultiarrayd class second strategi use synchron mechan dene java object class name mutableimmutablestateintmultiarrayd either two state default state mutabl state allow write read state immut state allow read second strategi thought way simplifi gener case trivial case propos rst strategi third nal strategi take dierent approach seek immut index outsid bound array con gener arrayindexoutofbound except ie jvm need includ explicit bound check number thread access writingread simultan indirect array irrelev long everi element indirect array within bound array access indirect third class valueboundedintmultiarrayd enforc everi element store object class within rang zero given paramet paramet must greater equal zero cannot modi pass constructor immutableintmultiarrayd method given class divid constructor queri command mey constructor method class execut without anomali creat new object class addit java constructor must name class queri method return inform state instanc variabl object method modifi state object depend express sever instanc variabl command method chang state object modifi instanc variabl class immutableintmultiarrayd follow simpl idea make object im mutabl consid abstract class intindirectionmultiarrayd see figur method get length getmin getmax queri method method set command method and class abstract declar constructor figur present simpli implement class immutableintmultiarrayd order make immutableintmultiarrayd object immut command method implement simpli throw uncheckedmultiarrayexcept obvious queri method modifi instanc variabl instanc variabl data length min declar final instanc variabl everi instanc variabl initialis constructor public final class immutableintmultiarrayd extend privat final int data privat final int length privat final int min privat final int max public immutableintmultiarrayd int valu int temp auxmin auxmax new int length int public int get int return datai els throw new multiarrayindexoutofboundsexcept public void set int int valu throw new uncheckedmultiarrayexcept public int length return length public int getmin return min public int getmax return max figur simpli implement class immutableintmultiarrayd note statement bytecod term jvm write instanc variabl occur constructor instanc variabl privat final two condit almost enough deriv everi object immut anoth condit instanc variabl whose type primit escap scope class escap analysi word instanc variabl creat method class none method return refer instanc variabl declar privat life span instanc variabl exceed uncheckedmultiarrayexcept inherit runtimeexcept uncheck except and thu method need neither includ signatur provid trycatch claus declar instanc variabl type array final indic array assign instanc variabl assign appli instanc variabl howev element assign array modi without restrict creator object exampl instanc variabl data escap scope class constructor implement shown figur also escap scope class nonpriv method getarray see figur includ class case number thread get refer instanc variabl array modifi content see figur public final class immutableintmultiarrayd extend public immutableintmultiarrayd int valu int temp auxmin auxmax int public object getarray return data figur method enabl instanc variabl array escap scope class immutableintmultiarrayd public class examplebreakimmut public static void main string arg int new int figur exampl program modi content instanc variabl data member everi object class immutableintmultiarrayd use method constructor implement figur consid algorithm check bytecod constructor write instanc variabl everi instanc variabl privat final instanc variabl whose type primit escap class algorithm determin whether class produc immut object ob iv complex b number bytecod iv number instanc variabl henc algorithm suitabl justintim compil jsr java standard multidimension array packag jvm recognis class produc invari without check constructor provid class immutableintmultiarrayd ineci term memori requir constructor impli point execut program would consum doubl necessari memori space hold element indirect array constructor includ mainli sake clariti complet implement class provid constructor read element le input stream implement method set includ specic test paramet access instanc variabl data test ensur access data bound test kind implement everi method set get subsequ class hereaft clariti test omit implement subsequ class mutableimmutablestateintmultiarrayd figur present simpli nonoptimis implement second strategi idea behind strategi ensur object class mutableimmutablestateintmultiarray two state mutabl state default state element store object class modi read at user risk immut state element store object class read modi strategi reli synchron mechan provid java implement class everi object java associ lock execut synchron method synchron block critic section given object synchron method thread start execut method must rst acquir lock object upon complet thread releas lock appli synchron block point time one thread execut synchron method synchron block given object java syntax standard java api provid concept acquir releas object lock thu java applic contain special keyword invok method standard java api access lock object concept part specic execut java applic detail multithread java found jsgb lea consid object indx class mutableimmutablestateintmultiarrayd implement class see figur enforc indx start mutabl state state store boolean instanc variabl ismut valu kept equival boolean express reader null mutabl state implement method get set expect object indx chang state thread invok synchron method passtoimmut state mutabl indx chang instanc variabl ismut fals store thread execut method instanc variabl reader synchron method method whose declar contain keyword synchron synchron block set consecut statement bodi method declar synchron surround claus synchron object fg public final class mutableimmutablestateintmultiarrayd extend intindirectionmultiarrayd privat thread reader privat final int data privat final int length privat int min privat int max privat boolean ismut public mutableimmutablestateintmultiarrayd int length new int length public int get int return datai public synchron void set int int valu ismut tri wait catch interruptedexcept e throw new uncheckedmultiarrayexcept public int length return length public synchron int getmin return min public synchron int getmax return max public synchron void passtoimmut ismut tri wait catch interruptedexcept e throw new uncheckedmultiarrayexcept public synchron void returntomut reader threadcurrentthread els throw new uncheckedmultiarrayexcept figur simpli implement class mutableimmutablestateintmultiarrayd state immut thread execut method stop state becom mutabl explan waitnotifi thread commun mechan clarifi stop mean sen tenc wait notifi method part standard java api member class javalangobject java everi class subclass directli indirectli javalangobject and thu everi object inherit inherit method wait notifi method part commun mechan java thread exampl thread execut method passtoimmut indx immut state thread start execut synchron method acquir lock indx check state need wait state indx mutabl thread itself cannot forc state transit need wait anoth thread provok transit rst thread stop execut invok method wait indx method make rst thread releas lock indx wait second thread invok method notifi indx reacquir lock prior return wait sever thread wait indx ie invok wait one thread noti second thread invok notifi indx proce explain mutabl state indx immut state get method implement expect set method cannot modifi element data indx return mutabl state object indx return mutabl state thread success provok transit mutabletoimmut invok indx synchron method return tomut transit complet thread noti thread wait indx state transit given complex match lockingwaitnotifi logic statement byte code write instanc variabl author consid jvm incorpor test kind class invari thu possibl jvm recognis class part standard java api automat provid class invari note requir prove class invari instanc variabl class mutableimmutablestateintmultiarrayd escap scope class valueboundedintmultiarrayd figur present simpli implement third strategi implement class valueboundedintmultiarrayd ensur object store element greater equal zero less equal paramet paramet upperbound pass everi object constructor cannot modi public final class valueboundedintmultiarrayd extend privat final int data privat final int length privat final int upperbound privat final int lowerbound public int upperbound new int length public int get int return datai public void set int int valu valu lowerbound valu upperbound els throw new uncheckedmultiarrayexcept public int length return length public int getmin return lowerbound public int getmax return upperbound figur simpli implement class valueboundedintmultiarrayd implement method get previou strategi implement method set includ test ensur element rang store method getmin getmax contrast previou class return actual minimum maximum store element lower zero upper bound inform thread java waitnotifi mechan found jsgb lea test jvm need perform extract class invari includ escap analysi instanc variabl class describ section and mention introduct section respect common part invari construct constraint use data ow analysi modic instanc variabl previou class jvm also recognis class produc invari without check usag class section revisit matrixvector multipl kernel matrix spars store coo format see figur order illustr three dierent class use figur present kernel but follow recommend ninja group facilit loop version the statement insid forloop produc nullpointerexcept arrayindexoutofboundsexcept use synchron mechan new implement check paramet null access indx jndx within bound check made prior execut forloop check fail none statement forloop execut method termin throw except implement sake clariti omit check gener loop free alias exampl variabl fib aux alias array accord declar figur int systemoutprintlnar output alias true figur exampl array alias note check ensur access vectori vectorx within bound requir travers complet local copi array indx jndx local copi array necessari sinc indx jndx escap scope method make possibl exampl anoth thread modifi content check execut forloop creation local copi memori ineci approach overhead copi check element element maximum minimum similar or greater than overhead explicit check figur present implement mvmcoo use three class describ previou section check nulliti replac line comment indic check would place implement mvmcoo immutableintmultiarrayd complet other includ comment statement complet implement would appear due class invari implement includ check access vectori vectorx check pass jvm nd loop free arrayindexout ofboundsexcept nullpointerexcept implement mvmcoo immutableintmultiarrayd valueboundedint multiarrayd ident statement dierent method signatur implement mutableimmutablestateintmultiarrayd build previou implemen tation rst need ensur object indx jndx immut state implement also requir object return state mutabl upon complet abnorm interrupt public class examplesparseblaswithninja public static void mvmcoo int indx int jndx doubl valu doubl vectori doubl vectorx throw sparseblasexcept indx null jndx null valu null vectori null vectorx null indxlength valuelength jndxlength valuelength int els throw new sparseblasexcept figur spars matrixvector multipl use coordin storag format ninja group recommend experi section report two set experi rst set determin overhead array bound check cse applic array indirect second set also cse applic determin overhead use class propos section instead access directli java array word experi seek experiment lower bound perform improv achiev array bound check elimin upper bound overhead due use class introduc section lower bound array bound check togeth strict except model speci java inhibitor optimis transform see ninja project improv perform upper bound techniqu semant expans wmmg propos author optimis oolala lfgb lfga remov sourc overhead use class instead java array consid exampl matrixvector multipl matrix coo format mvmcoo matrix oper kernel iter method gvl solv system linear equat determin eigenvalu matrix iter natur method impli oper execut repeatedli sucient accuraci achiev upper bound number iter reach experi consid iter method execut mvmcoo time result report four dierent implement see figur mvmcoo four implement mvmcoo deriv use java array ja implementa tion object class immutableintmultiarrayd ima implement class mutabl immutablestateintmultiarraydmima implement class valueboundedintmulti arrayd vbma implement experi consid three dierent squar spars matric matrix market collect bpr three matric are utm size nonzero element srmtm size entri symmetr sdktm size entri symmetr implement take advantag symmetri and thu srmtm sdktm store oper use nonzero element vector vectorx vectori see implement figur initialis random number public class kernelsparsebla public static void mvmcoo immutableintmultiarrayd indx immutableintmultiarrayd jndx doubl valu doubl vectori doubl vectorx throw sparseblasexcept nullcheck int els throw new sparseblasexcept public static void mvmcoo doubl valu doubl vectori doubl vectorx throw sparseblasexcept idem implement mvmcoo immutableintmultiarrayd throw statement includ returntomut indx andor jndx els throw new sparseblasexcept public static void mvmcoo doubl valu doubl vectori doubl vectorx throw sparseblasexcept idem mvmcoo immutableintmultiarrayd figur spars matrixvector multipl use coordin storag format ninja group recommend class describ figur accord uniform distribut valu rang zero respect experi perform ghz pentium iii mb run window servic pack java sdk standard edit jove an static java compil version associ java runtim environ standard edit program compil ag o the hotspot jvm is execut ag server xmsmb xmxmb jove use follow two congur rst hereaft refer jove creat execut window program use default optimis paramet optim level lowest level second congur name jovenocheck congur plu ag elimin everi array bound check experi run time result shown averag execut time second timer accur millisecond run total execut time mvmcoo record recal execut one experi impli program loop execut time mvmcoo tabl present execut time ja implement compil two congur describ jove compil fourth column give overhead induc array bound check overhead percentag execut time matrix jove s jovenocheck s overheard srmtm tabl averag time second ja implement mvmcoo tabl present execut time four implement mvmcoo case jvm hotspot server part describ java sdk environ tabl give overhead implement propos section respect ja implement ima implement produc greatest overhead matric middl sit imma implement bv implement alway produc smallest overhead matrix ja s ima s imma s vbma s tabl averag time second four dierent implement mvmcoo matrix ima tabl overhead implement mvmcoo use propos class respect ja implement although section omit them second set experi run also linux pentium solarissparc platform equival java environ omit result consist present below discuss thu far develop assum three class incorpor multidimension array packag propos jsr follow paragraph tri determin whether one class best whether packag need one class consid rst class mutableimmutablestateintmultiarrayd object indx class order obtain benet array bound check elimin use indx indirect array program need follow step chang state indx immut execut action normal insid loop acess element store indx chang state indx back mutabl exampl step implement matrixvector multipl use class mutableimmutablestateintmultiarrayd see figur third step omit possibl accident indirect array indx becom useless purpos array bound check elimin thread or thread abandon execut without adequ clean up would stop wait indenit noti cation indx return back mutabl state anoth undesir situat aris sever thread execut parallel and least two thread need indx jndx anoth object class time depend order execut alias object deadlock occur one might think two undesir situat could overcom modifi implement class maintain adequ list thread reader instead one thread reader howev omiss third step lead starvat writer given undesir situat inher two strategiesclass experi section show perform benet favor class mutableimmutablestateintmultiarrayd decis disregard class discuss look scenario cse applic two remain class use word function class immutableintmultiarraydand valu boundedintmultiarrayd contrast function requir cse applic rememb class although public interfac provid dierent function name suggest class immutableintmultiarrayd implement method set without modifi instanc variabl simpli throw uncheck except see figur hand class valueboundedintmultiarrayd provid expect function method long paramet valu method posit less equal instanc variabl upperbound see figur variou scenario cse applic lufactoris dens band matric pivot strategi gauss elimin spars matric llin applic need updat content indirect array gvl exampl llin mean new nonzero element creat zero element exist befor thu gauss elimin algorithm creat new nonzero matrix element progress assum matrix store coo format indirect array indx jndx need updat row column indic respect new nonzero element given cse applic indirect array remain unalt initialisa tion reason includ class immutableintmultiarrayd would perform howev perform evalu reveal case therefor conclus incorpor class valueboundedintmultiarrayd multidimension array packag conclus array indirect ubiquit cse applic specic array access java current techniqu elimin array bound check applic array indirect suer overhead explicitli check access indirect array build previou work ibm ninja jalapeno group three new strategi elimin array bound check presenc indirect present strategi implement java class replac java indirect array type int aim three strategi provid extra inform jvm array bound check presenc indirect remov normal java array type int extra inform would requir access whole applic ie dynam load heavi weigh algorithm remov array bound check combin loop version as use ninja group mm mmga mmg construct constraint base data ow analysi abcd algorithm bg experi evalu perform benet elimin array bound check presenc indirect overhead estim percentag execut time experi also evalu overhead use java class replac java array otheself jvm overhead vari class percentag execut time evalu three strategi also includ discuss advantag disadvantag overal third strategi class valueboundedintmultiarrayd best take dierent approach seek immut object number thread access indirect array time irrelev long everi element indirect array within bound array access indirect class enforc everi element store object class valu zero given paramet paramet must greater equal zero cannot modi pass constructor remain problem overhead program use class valueboundedint multiarrayd instead java array author propos set transform lfga lfgb java librari oolala luj lfg paper demonstr set transform design oolala enough optimis away overhead use class valueboundedintmultiarrayd prepar futur work concentr develop algorithm suitabl justintim dynam compil determin appli set transform r jalapeno virtual machin optim array subscript rang abcd elimin array bound check demand escap analysi object orient languag matrix market web resourc test matrix collect benchmark java c fortran scienti reexamin sreedhar samuel midki practic judo java dynam optim marmot optim compil java design pattern element reusabl object orient softwar fiel analysi get use lowcost interprocedur inform fresh look optim array bound check optim array bound check use ow analysi matrix comput make java work highend comput numer method sofwar approach jove optim nativ compil java technolog java languag spec cation elimin redund array subscript rang check concurr program java design principl pattern mikel luj mikel luj mikel luj mikel luj java virtual machin speci optim rang check object orient softwar construct harissa hybrid approach java execu tion design implement certifi compil scimark java applic way ahead time wat compil symbol bound analysi pointer implement array bound checker overview ibm java justintim compil java middl age enabl java comput scienc composit pointer escap analysi java program safeti check machin code elin array bound check depend type tr fresh look optim array bound check optim array subscript rang check optim array bound check use flow analysi reexamin myampersandldquooptim array subscript rang checksmyampersandrdquo elimin redund array subscript rang check objectori softwar construct nd ed matrix market elimin array bound check depend type design implement certifi compil escap analysi java escap analysi objectori languag remov unnecessari synchron java composit pointer escap analysi java program marmot flop megaflop practic judo safeti check machin code symbol bound analysi pointer array indic access memori region abcd field analysi quicksilv oolala techniqu obtain high perform java program benchmark java c fortran scientif applic relat field analysi ninja project implement array bound checker numer method java numer comput java middl age optim rang check ctr sudarshan m srinivasan srikanth kandula christoph r andrew yuanyuan zhou flashback lightweight extens rollback determinist replay softwar debug proceed usenix annual technic confer usenix annual technic confer p june juli boston