t model check java program use structur heurist a describ work troduc heurist search java pathfind model checker target java bytecod rather focus heurist aim particular kind error such deadlock describ heurist base modif tradit branch coverag metric structur measur thread interdepend present experiment result show util heurist argu use structur heurist class b introduct recent interest model check softwar written real program languag use heurist direct explor explicitst model checker heuristicguid search clearli direct nding error rather verifi complet correct softwar connect model check test made particularli clear idea combin paper present one fruit product intersect eld show appli nding error program primari challeng softwar model check model check state space explos problem explor behavior system is say least dicult number behavior exponenti possibl input content data structur number thread program vast array techniqu appli problem rst hardwar veric now increasingli softwar veric mani techniqu requir consider nonautomat work present basic heurist framework discuss creation user dene heurist tool paper elsewher itali expert appli well softwar hardwar techniqu aim reduc size total state space must explor repres symbol reduc memori time need explor altern approach concentr verifi correct program deal state space explos attempt nd error rather reduc overal size state space attempt nd counterexampl state explos exhaust memori heurist model check usual aim gener counterexampl search bugcontain part state space rst obvious know gener part program state space go contain error even error present howev use measur explor program structur in particular branch structur thread interdepend structur believ model checker often improv abil nd error program although one strongest advantag model check gener counterexampl veric fail tradit depthrst search algorithm tend return long counterexampl heurist search succe almost alway produc much succinct counterexampl paper explor heurist model check softwar written java program languag use heurist base coverag measur deriv world softwar test introduc notion structur heurist classic heurist use model check present and describ motiv de velop success novel heurist class paper organ follow section describ heurist model check examin relat work introduc variou search algorithm use section brie present java pathfind model checker implement heurist search new heurist dene describ detail section also includ experiment result present conclus consid futur work nal section heurist model check heurist direct model check state space explor order depend evalu function state function the heurist usual intend guid model checker quickli error state prioriti queue q empti q best f remov q successor state alreadi visit goal termin store figur algorithm bestrst search result counterexampl often shorter one produc depthrst search base algorithm tradit use explicitst model checker grow bodi literatur model check use heurist larg concentr heurist tailor nd certain kind error common heurist includ measur length queue give prefer block oper use ham distanc goal state godefroid khurshid appli genet algorithm techniqu rather basic heurist search use heurist measur outgo transit state similar mostblock heurist see tabl reward evalu assert measur messag exchang secur protocol heurist also use symbol model check reduc bottleneck imag comput without necessarili attempt zero error bloem ravi thu draw distinct propertydepend systemdepend heurist note propertydepend heurist appli explicit state model check sens explor state space dierent order remov bottleneck event entir space must explor howev suggest classic propertydepend heurist propertyspec heurist reli featur particular properti queue size block statement deadlock distanc control data ow fals valuat assert structur heurist attempt explor structur program way conduc nding gener error heurist use flaver would exampl latter concentr primarili structur heurist rene notion examin heurist heurist also use gener test case and furthermor model checker use test case gener approach applic test case gener appli coverag metric use test usual model check goal nding error program search algorithm number dierent search algorithm combin heurist simplest bestrst search use heurist function h comput tness f greedi fashion figur algorithm similar except like dijkstra shortest path algorithm add length path f heurist function h admiss is hs guarante less equal queue q empti q empti prioriti queue remov q successor state alreadi visit goal termin store remov k best element q figur algorithm beam search length shortest path goal state guarante nd optim solut for purpos shortest counterexampl compromis guarante optim breadthrst search ecienc return solut bestrst search beamsearch proce even like breadthrst search use heurist function discard k best candid state depth figur queuelimit techniqu use beamsearch may also appli bestrst search remov worst state q without expand children whenev insert result q contain k state thi cours introduc incomplet model check run termin without report error indic error exist state space howev given advantag heurist search abil quickli discov fairli short counterexampl practic queuelimit eectiv bugnd tactic experiment result section show vari util dierent search strategi none heurist examin admiss lack theoret optim gener less ecient bestrst search heurist valu sometim much larger path length case behav much like bestrst search far awar combin bestrst search limit size queue store state pend discuss given name literatur heurist search bestrst search queue limit nd deep solut might dicult beamsearch reach unless queue limit k small specic introduct queuelimit heurist search model check appear genuin novel rais possibl use incomplet method focu model check discoveri error rather veric exampl partial order reduct techniqu usual requir cycl check may expens overconserv context heurist search howev queuelimit consid natur experi appli partial order reduct without cycl check gener approach remain one model check rather test store state alreadi visit crucial obtain good result experi one notabl except see discuss section java pathfind java pathfind jpf explicit state onth model checker take compil java program ie bytecod classl analyz path program deadlock assert violat linear time tempor logic ltl properti jpf uniqu built custommad java virtual machin jvm therefor requir translat exist model checker input notat dspin model checker extend spin handl dynam memori alloc function close relat system jpf model checker java support nondetermin model check context often import analyz behavior program aggress environ possibl action order must consid reason ad method special class call verifi allow nondetermin express for exampl verifyrandom nondeterminist return valu rang inclus model checker trap execut evalu possibl valu import featur model checker exibl choos granular transit state analysi bytecod sinc model checker execut bytecod instruct negrain analysi support level individu bytecod un fortun larg program bytecodelevel analysi scale well therefor default mode analyz code linebylin basi jpf also support atom construct denot verifybeginatom verifyendatom call model checker trap allow larger code fragment group singl transit model checker consist two basic compon state gener includ jvm inform schedul state storag facil requir keep track execut state visit default explor jpf depthrst gener state space option limit search maximum depth chang schedul inform one chang way state space gener default stack use record state expand next henc default df search analysi algorithm includ algorithm check deadlock assert violat violat ltl properti algorithm work instruct state gener compon gener new state backtrack old state check state jvm api call eg check deadlock reach heurist jpf implement state gener compon sinc mani heurist requir inform jvm natur way implement adapt schedul state explor next eg trivial case breathrst search one chang stack queue bestrst also use beamsearch straightforward implement algorithm list section use prioriti queue within schedul heurist search capabl current limit deadlock assert violat check none heurist search algorithm particularli suit cycl detect import part check ltl properti addit limit experiment data improv cycl counterexampl live properti encourag heurist search jpf also provid number addit featur includ user introduc heurist interfac jvm wellden api access program variabl etc sum two heurist use order analysi state heurist valu alter number element prioriti queue limit search depth limit structur heurist consid follow heurist structur heuri tic is intend nd error target specic particular assert statement in variant deadlock rather explor structur aspect program branch structur thread interdepend code coverag heurist code coverag achiev test measur adequaci test word qualiti set test case although directli address correct code test achiev high code coverag test without discov error inspir condenc code correct case point avion industri softwar certi ight structur coverag specic modi conditiondecis coverag mcdc achiev test test literatur vast number structur code coverag criteria simpli cover statement program cover possibl execut path focu branch coverag requir everi branch point program possibl branch taken least onc mani industri branch coverag consid minimum requir test adequaci face it one might wonder coverag model check worth sinc model checker typic cover state space system analysi henc denit cover structur code howev model check java program program often innitest larg nite state space model checker cannot cover due state cover previous untaken branch receiv best heurist valu state reach take branch receiv next best heurist valu state cover branch alreadi taken rank accord mani time branch taken wors score assign frequent taken branch figur basic branchcoverag heurist resourc limit typic memori calcul coverag therefor serv purpos test show adequaci partial model check run test coverag tool calcul branch coverag model check requir us keep track whether structur branch point option taken sinc jpf execut bytecod statement mean simpl extens need introduc whenev if relat ifstat code tableswitch relat casestat execut keep track choic made howev unlik simpl branch coverag also keep track mani time branch taken rather whether taken not consid coverag separ thread creat execut program rst benet featur model checker produc detail coverag inform exhaust memori without nding counterexampl search entir state space addit coverag metric use measur set test case seem plausibl use coverag heurist priorit explor state space might use one approach use coverag metric heurist would simpli use percentag branch cover on perthread global basi heurist valu we refer coverag heurist howev approach work well practic see section instead slightli complex heurist prove success figur motiv behind heurist make use branch structur program avoid pitfal direct heurist coverag heurist like fall local minima explor path cover larg number branch futur increas coverag heurist behav essenti breadthrst manner unless path actual increas coverag default system explor state heurist valu fifo manner result breadthrst explor program branch choic howev frontier much deeper along path previous increas coverag still advanc explor structur interest path heurist delay explor repetit portion state space those take branch repeatedli nondeterminis choic determin mani time execut loop instanc heurist delay explor multipl iter loop along certain path search along path skip loop execut onc thu achiev deeper coverag structur examin possibl behavior termin loop path beyond loop continu free branch involv previous uncov branch explor continu howev one path lead loop return explor iter rst loop execut latter loop onc number option modifi basic strategi count may taken global over entir state space explor path particular state reach allow us examin either combin choic along path tri maxim branch choic entir search order along path less relev prin cipl pathbas approach use take certain branch particular combin execut respons error global count use simpli exercis branch better way nd error instanc latter would program one larg nondeterminist choic begin result differ class shallow execut one lead error state branch count may allow persist state reach without cover branch last branch count path state reach may use instead give state second best heurist valu see figur allow us increas tendenc explor path improv coverag without quit prone fall local minima coverag heurist count path sum reduc search sensit individu branch choic variou method also appli count taken execut individu bytecod in struction rather branch equival idea statement coverag tradit test practic eect class heurist increas explor portion state space nondeterminist choic thread interleav result possibl previous unexplor lessexplor branch taken experiment result refer number heurist experiment result tabl addit basic heurist indic whether heurist measur path state append path global op tion result beam search also note denit branch basic branchcoverag heurist coverag measur percentag branch cover state higher coverag receiv better valu bf breadthrst search df depthrst search depth n indic stack depth limit n mostblock measur number block thread block thread result better valu interleav measur amount interleav thread see section random use randomli assign heurist valu tabl heurist search strategi deo realtim oper system develop honeywel enabl integr modular avion ima current use within certain small busi aircraft schedul timecrit softwar task develop routin code inspect led uncov subtl error timepartit could allow task starv cpu time sequenc unanticip api call made near timeperiod boundari would trigger error inter estingli although avion softwar need test high degre mcdc coverag certi ight error uncov test model check use rediscov error use translat promela the input languag spin model checker later java translat origin c code use detect error version use abstract nd error see discuss section result tabl version java code abstract away innitest counter straightforward translat origin c code java coverag heurist inde appear easili becom trap local minima and admiss use search necessarili help comparison result use heurist also give result breadthrst search bf depthrst search df depthrst search limit certain maximum depth essenti innit state system such version deo limit depth practic way use df seen nding proper depth dicult larg depth may result extrem long counterexampl use pure random heurist doe fact nd counterexampl deo howev counterexampl consider longer take time memori produc coverag heurist also appli success heurist deo system store visit state turn ing test simul rather model check essen tialli without state storag heurist fail nd counterexampl exhaust memori thread interleav heurist dierent kind structur heurist base maxim thread interleav test gener schedul cannot control directli often miss subtl race condit deadlock reli unlik thread schedul one way expos concurr error step execut append thread execut thread histori pass histori make heurist valu return wors time thread execut appear histori valu proport to far back histori execut current number live thread figur basic interleav heurist reward demon schedul assign better heurist valu state reach path involv switch thread case structur attempt explor depend thread precis order nonlock variabl access thread instanc anoth thread also access variabl lead race condit result deadlock assert violat path prefer one access thread continu onward perhap escap effect race condit read justalt valu calcul heurist keep possibl limit histori thread schedul path figur experiment result may deepspac spacecraft ran set experi wherebi spacecraft control aibas system call remot agent unfortu nate one experi softwar went deadlock state restart earth caus error time unknown studi like compon caus error identi error found appli model check java version code error due miss critic section caus race violat occur certain thread interleav introduc deadlock result tabl use version code faith origin system also includ part system involv deadlock experi here exampl present interest space indic beamsearch certainli perform well time gener perform well bestrst search heurist admiss optim advantag come play gener appear requir judici choic queuelimit necessari bestrst search final dine philosoph tabl show interleav heurist scale quit larg number thread df fail uncov counterexampl even small problem size interleav heurist produc short counterexampl thread mostblock heurist design detect deadlock gener return larger counterexampl in case size queue limit larger factor thousand longer time interleav heurist even importantli scale well larger number explor length max depth branch path branch branch global branch coverag path fail coverag coverag global fail random df depth df depth df depth result state storag turn branchglob tabl experiment result deo system result obtain ghz athlon jpf limit mb time second memori megabyt fail indic failur due run memori length column report length counterexampl if one found max depth column report length longest path explor the maximum stack depth depthrst case explor length max depth branch path queue fail branch path queue fail branch path queue branch global queue fail branch global queue fail branch global queue fail random fail df depth df depth interleav fail interleav queue interleav queue interleav queue interleav queue fail interleav interleav queue interleav queue interleav queue interleav queue interleav queue beam interleav queue beam interleav queue beam interleav queue beam fail mostblock mostblock queue fail mostblock queue fail mostblock queue fail mostblock queue mostblock mostblock queue mostblock queue mostblock queue mostblock queue tabl experiment result remot agent system explor length max depth branch path fail random fail mostblock fail mostblock queue mostblock queue mostblock queue mostblock queue interleav fail interleav queue interleav queue interleav queue interleav queue mostblock queue mostblock queue mostblock queue mostblock queue interleav queue interleav queue interleav queue interleav queue mostblock queue interleav queue interleav queue interleav queue interleav queue tabl experiment result dine philosoph thread report number philosoph thread result search success next smaller version problem result shown indic that fact fail search tend succeed larger size key dierenc approach use properti specic heurist structur heurist seen dine philosoph exampl search wellknown deadlock scenario increas number philosoph high enough for exampl becom imposs explicitst model checker tri possibl combin action get deadlock heurist or luck requir propertyspec heurist applic tri maxim number block thread mostblock heurist tabl sinc thread block deadlock java pro gram wherea structur heurist may observ deal highli concurr program henc may argu error may well relat unexpect interleav henc use heurist favor increas interleav search interleav heurist tabl although result mean conclus still worth note specic exampl structur heurist perform much better propertyspec heurist dine philosoph remot agent exampl also perform experi turn storag interleav heurist result essenti unchang minor variat length counterexampl number state search believ return previous visit state case requir action sequenc given good heurist valu interleav heurist for exampl dine philosoph altern pick drop fork thread mostblock heurist howev success search becom unsuccess remov state storag introduc possibl nontermin search exampl mostblock heurist without state storag may even termin case godefroid khurshid appli genet algorithm techniqu similar implement dine philosoph written c rather java seed genet search randomli version run thread report success rate averag search time second on slower machin use result suggest dierenc may much result heurist use someth like mostblock vs interleav heurist genet search itself applic heurist dierent search framework interest avenu futur studi choosefre heurist abstract base overapproxim system behavior popular techniqu reduc size state space system allow ecient model check jpf support two form over approxim predic abstract typebas abstract via bandera tool howev overapproxim well suit errordetect sinc addit behavior introduc abstract lead spuriou error present origi nal elimin spuriou error activ area research within model check commun jpf use novel techniqu elimin spuriou error call choosefre search techniqu base fact overapproxim introduc nondeterminist choic abstract program present origin therefor choosefre search rst search part state space contain nondeterminist choic due abstract error found socal choosefre portion state space also error origin program although techniqu may seem almost naiv shown work remark well practic rst implement techniqu search choosefre state space current implement use heurist give best heurist valu state fewest nondeterminist choic statement enabl ie allow choosefre state space search rst continu rest state space otherwis thi also allow choosefre combin heurist deo exampl abstract use predic abstract typebas abstract predic abstract deo precis abstract ie introduc new behavior present origin henc focu typebas abstract specic use rang abstract allow valu concret valu repres one abstract valu appropri variabl use choosefre heurist discov rang abstract heurist search report choosefre error length second heurist nding feasibl counterexampl abstract seen onth underapproxim overapproxim from abstract system behavior heurist awar fall similar categori one reduc infeas execut sequenc flaver tool conclus futur work heurist search techniqu tradit use solv problem goal known wellden measur exist close one goal aim heurist search guid search use mea sure achiev goal quickli fewest step possibl also tradit use heurist search model check heurist dene regard properti check advoc complementari approach focu heurist search structur state space search case java program state space gener believ structur heurist replac propertyspec heurist rather propos use complementari approach furthermor sinc test domain long use notion structur code coverag seem appropri investig similar idea context structur heurist model check shown realist exampl deo heurist base branch coverag a rel structur coverag measur give encourag result worth note much stronger coverag measur mcdc help uncov error test ie coverag achiev bug found conjectur use code coverag heurist model check lead class error found coverag measur test uncov exampl branch coverag typic littl use uncov concurr error use heurist model check allow model checker evalu interleav might lead error branch coverag found deadlock remot agent exampl wherea tradit test fail number possibl avenu futur work experiment result make clear rather daunt array paramet avail use heurist search least heurist search algorithm queue size must select hope explor practic select option gather experiment data determin if instanc appear proper queue size limit essenti check program larg number thread possibl would attempt appli algorithm learn techniqu nding good paramet heurist model check develop structur heurist renement present also open problem instanc analog structur explor data structur program control structur explor branchcoverag heurist imagin heurist might relat particular kind error interleav heurist relat concurr error r use model check gener test specic test gener recognit formal method automat valid tempor safeti properti interfac softwar test techniqu symbol guid search ctl model check model check abstract model check right algorithm right time compar data flow analysi algorithm finit state veri direct explicit model check hsfspin partial order reduct direct model check verisoft tool automat analysi concurr reactiv softwar explor larg state space use genet algorithm construct abstract state graph pv heurist model check java program formal basi heurist determin minimum path cost formal analysi remot agent flight lazi abstract algorithm autom protocol veri state spin autom softwar featur veri dynam extens spin protocol veri classic search strategi test case gener constraint logic program rtca special committe modular increment analysi concurr softwar system autom framework structur testdata gener model check program use predic abstract reduc objectori program model check valid guid search state space tr softwar test techniqu nd ed model check abstract valid guid search state space model check bandera symbol guid search ctl model check verif time partit deo schedul kernel use predic abstract reduc objectori program model check direct explicit model check hsfspin automat valid tempor safeti properti interfac right algorithm right time toolsupport program abstract finitest verif lazi abstract dspin heurist model check java program partial order reduct direct model check find feasibl counterexampl model check abstract java program explor larg state space use genet algorithm construct abstract state graph pv counterexampleguid abstract refin state spin autom framework structur testdata gener modular increment analysi concurr softwar system model check program use model check gener test specif ctr neha rungta eric g mercer contextsensit structur heurist guid search model check proceed th ieeeacm intern confer autom softwar engin novemb long beach ca usa kevin seppi michael jone peter lamborn guid model check bayesian metaheurist fundamenta informatica v n p april madanl musuvathi shaz qadeer iter context bound systemat test multithread program acm sigplan notic v n june guillaum brat doron drusinski dimitra giannakopoul allen goldberg klau havelund mike lowri corina pasareanu arnaud venet willem visser rich washington experiment evalu verif valid tool martian rover softwar formal method system design v n p septembernovemb jianbin tan georg s avrunin lori a clark shlomo zilberstein stefan leue heuristicguid counterexampl search flaver acm sigsoft softwar engin note v n novemb jianbin tan georg s avrunin lori a clark heuristicbas model refin flaver proceed th intern confer softwar engin p may oksana tkachuk sreeranga p rajan applic autom environ gener commerci softwar proceed intern symposium softwar test analysi juli portland main usa dimitra giannakopoul corina s pasareanu jamieson m cobleigh assumeguarante verif sourc code designlevel assumpt proceed th intern confer softwar engin p may robbi matthew b dwyer john hatcliff bogor extens highlymodular softwar model check framework acm sigsoft softwar engin note v n septemb alexand pretschner heiko ltzbeyer jan philipp model base test increment system develop journal system softwar v n p march cyril artho howard barring allen goldberg klau havelund sarfraz khurshid mike lowri corina pasareanu grigor rosu koushik sen willem visser rich washington combin test case gener runtim verif theoret comput scienc v n p may john penix willem visser seungjoon park corina pasareanu eric engstrom aaron larson nichola weining verifi time partit deo schedul kernel formal method system design v n p march