t logicbas subsumpt architectur a describ logicbas ai architectur base brook subsumpt architectur architectur axiomat differ layer control firstord logic fol use independ theorem prover deriv layer output given input implement subsumpt lower layer higher layer use nonmonoton reason principl particular use circumscript make default assumpt lower layer nonmonoton retract assumpt higher layer draw new conclus also give formal semant approach final describ layer design task robot control system implement use architectur control nomad mobil robotour system combin virtu use representandreason paradigm behavioraldecomposit paradigm allow multipl goal servic simultan reactiv also allow highlevel task toler differ chang elabor knowledg runtim final allow us give commonsens knowledg robot report sever experi empir show feasibl use fulli express fol theorem prover robot control architectur benefit claim abov b introduct brook rodney brook provid decomposit problem robot control layer correspond level behavior rather accord sequenti function form within set introduc idea subsumpt is complex layer could depend lower reactiv layer could also influenc behavior result architectur one could servic simultan multipl potenti conflict goal reactiv fashion give preced high prioriti goal realiz hardwar architectur lack declar make difficult implement higherlevel reason make semant unclear furthermor increas hardwar complex new layer introduc scale problem fi nalli reli hardwar specif architectur specif orient toward robot control applic softwar agent softwarebas intellig agent problem extend similar architectur complex task goal agent necessarili physic alreadi rais discuss gener line minski stein but knowledg practic ai architectur develop along line paper describ architectur model spirit brook subsumpt architectur reli logic framework wider applic extend manner describ abov logicbas subsumpt architectur includ set logic theori correspond layer sens brook archi tectur layer suppli separ theorem prover allow system layer oper concur rentli use approxim nonmonoton reason model connect theori allow layer make nonmonoton assump tion layer perform independ perform layer thu support reactiv iti demonstr architectur model brook first two layer show empir layer greatest demand reactiv suffici fast second per controlloop cycl empir result show generalpurpos theorem prover use intellig agent without sacrif reactiv remaind paper organ follow give brief introduct brook system logic ai describ gener architectur embodi collect theori use decoupl interact exhibit complex behavior then describ represent first two layer brook system describ subsumpt gener oper system implement use theorem prove negationasfailur techniqu give formal semant approach use circum scription discuss implement issu conclud comparison relat work sketch futur direct work first step toward creat gener logicbas ai architectur effici scalabl support reactiv architectur longterm goal background brook subsumpt architectur brook show decompos system parallel task behavior increas level compet oppos standard function decomposit advantag wherea typic function decomposit might resembl sequenc sensor task recognit motor control brook would decompos domain follow avoid object monitor chang identifi object plan action reason object behavior increas level compet potenti benefit approach includ increas robust concurr support increment construc tion eas test underli assumpt complex behavior product simpl mechan interact complex environ focu simplic led design individu layer compos simpl state machin modul oper asynchron without central control gener differ layer complet in depend exampl decomposit abov wander explor depend robot abil avoid object often system may abl servic multipl goal parallel despit depen denc howev occasion goal one layer conflict anoth layer instanc would expect higher prioriti goal overrid lower prioriti one address issu subsumpt architectur provid mechan higher layer may interfer oper lower layer first possibl higher layer observ state lower layer second possibl higher layer inhibit output andor suppress that is overrid input modul lower layer consequ compet layer adjust behavior reactiv layer time possibl high prioriti task lower layer such halt object deadahead continu high preced simpli allow higher layer tamper particular task brook brook describ detail first three layer one particular robot control system implement use subsumpt architectur con cept first two shown figur briefli describ three layer here avoid basic layer system endow robot obstacl avoid capabl obstacl appear directli ahead robot path halt collid gener whenev obstacl vicin use direct distanc respect robot comput new head move away obstacl much possibl detail layer accept sonar read robot surround sonar modul output map vicin base read ing collid modul check obstacl directli ahead and is forc robot stop regardless modul do feelforc modul use map calcul combin repuls forc surround object exert robot runaway modul check forc signific enough pay attent and case is determin new head speed robot move away forc turn modul command robot make requir turn pass speed forward modul which halt state command robot move forward specifi speed away robot get smaller speed comput runaway modul wander wander layer consist two modul which togeth avoid layer caus robot move around aimlessli otherwis oc cupi everi often wander modul choos new random direct robot move in avoid modul combin output avoid layer feelforc modul comput overal head suppress input avoid layer turn modul henc wander mode activ overrid default head comput avoid layer explor layer begin add primit goaldirect behavior robot repertoir robot period check see idl and so choos locat distanc head toward explor explor mode inhibit wander layer remain less track toward destin howev like wander layer take advantag avoid layer capabl prevent collis model layer paper the first two layer suffici demonstr propos refer reader brook detail logic circumscript sinc earli day ai logic held promis serv main knowledg represent languag futur intellig machin mccarthi last decad theorem prover becam wide spread formal verif tool late robot system wield logic emerg eg shanahan gi acomo lesper levesqu logic paradigm mccarthi circumscript mccarthi one first major nonmonoton reason tool sinc debut nonmonoton reason line work expand sever textbook exist give fair view nonmonoton reason use eg brewka antoni brewka dix konolig dm gabbay sandewal shanahan motiv nonmonoton reason vari formal common sens reason elabor toler repres uncertainti belief revis expand motiv here reader may look shanahan mccarthi pearl antoni detail direct mccarthi circumscript formula mccarthi feelforc runaway turn forward avoid wander collid sonar head turn fwd object wander_head encod sensor_read robot head forc robot robot speed figur layer brook subsumpt architectur robot control system say theori a paramet relat function sequenc minim element ap z still consist allow vari z order allow p becom smaller take exampl follow simpl theori then circumscript block vari noth ing circt block equival minim block conclud block world mention origin theori logicbas subsumpt architectur section dedic describ propos ar chitectur first give intuit account approxim semant system describ architectur detail give idea goal embodi it final describ build system approxim brook propos way intuit logicbas subsumpt architectur lsa compos sequenc logic theori suppli theorem prover theori commun underneath sequenc those subsum modifi control behavior lowerlevel the ori asid collect theori sensor affect theori manipul affect theori more precis result found theorem prover descript follow assum architectur use control cylindr robot sonar sensor perimet wheel control motion sensor manipul assum at stage want system base premis work loop follow first physic sonar collect data assert form logic axiom sonar readingsonar dist axiom ad appropri theori sequenc theori compris system time assert input come layer higherlevel theori both kind input replac cycl new input then ask theorem prover layer find requir output layer output specifi action ma nipul reach conclus transmit relev one those output specifi action manipul robot manipul and robot execut request action loop start again figur illustr process theori theori sensor effector figur abstract diagram lsa iter sonar read replac previou input new one logicbas subsumpt architectur follow gener pattern make sure loop fast enough time get conclus world differ world base conclus eg make sure robot fall cliff plan way avoid cliff edg notic that fact sever loop differ time for differ layer theorem prover reactiv loop one count speed overal loop describ behavior achiev next section architectur behavior decomposit first import idea borrow brook architectur decompos domain along behavior line rather along standard sequenti function line chang paradigm make possibl view robot control problem set loos coupl process and henc paralleliz claim get similar perform benefit appli paradigm logic version subsumpt architectur build lsa repres layer axiomat layer behavior is layer input output state includ depend support task layer in architectur layerinput layeroutput predicatesfunct intend go either fromto sensorsactu fromto lower layer ignor interlay interact moment output layer determin run separ theorem prover layer onli treatment represent buy us benefit first axiomat layer gener much smaller whole system cycl less comput expens run one theorem prover whole compound axiomat second decoupl differ layer behavior way becom possibl achiev reactiv behavior brook system lower layer control basic behavior need wait higher layer complet comput respond situat rather sinc lower layer trust autonom if higher layer ac tive lower layer still behav validli layer simpler axiomat gener cycl time comput output shorter higher complex layer lead overal high perform import if exampl want robot continu avoid obstacl tri plan next line action note that although modul import construct brook architectur represent modul serv mostli syntact sugar provid conceptu clariti regard oper layer given theori denot hasten point out howev rel independ modul axiomat could also exploit eg separ theorem prove session determin intermedi modul output make possibl pipelin oper layer subsumpt principl cours layer fulli independ fundament featur brook subsumpt architectur abil higher layer observ interfer oper lower layer particular suppress inhibit capabl provid mean otherwis independ layer may interact allow highlevel goal overrideadjust default lowlevel reactiv behavior adopt view that togeth taskbas decomposit idea coupl approach repres import natur paradigm intellig agent gener robot control particular see stein howev implement idea logic set rais follow issu gener one layer overrid anoth two disagre particular modul input be therefor two correspond theori inconsist need formal higherlay theori preced lowerlay way a conflict fact either theori hold overal state system b event conflict overal state side higher layer c independ fact eg input either layer remain unchang number techniqu develop logic com muniti nonmonoton techniqu belief re vision applic chosen use circum scription although agre approach may equal interest appropri circumscriptionbas subsumpt describ earlier layer logic theori distinguish three part logic theori bodi level sensori latch input latch output see figur bodi layer constant theori layer latch use accept input replac everi cycl rather accumul it output simpli output sentenc prove layer includ latch follow assum arbitrari level theori layer languag l distinguish input languag l ae l constitut languag allow latch layer languag theori influenc serv assert come sensor higherlevel layer output languag ae l use limit queri theori ask languag includ output assert lowerlevel layer use actuat control implement idea subsumpt let layer assumpt input may later adjust higherlevel layer assumpt take form abnorm bodi l input sensor output latch bodi sensor output latch l input figur detail look two layer predic ab whose negat precondit sentenc languag l bodi layer assumpt also take form close worldassumpt cwa minim predic l minim vari l make sure assumpt propag exam ple higherlevel layer assert in lowerlevel layer exist object previous exclud use cwa cycl particular layer first assert layer latch sentenc higher layer may infer in respect output languag higher layer appli as sumption circumscrib ab predic input predic enforc cwa theori vari predic function l theorem prover obtain appropri output for layer take account as sert interfer higher layer formal let layer theori layer i ab addit abnorm constant symbol c set predic l wish assert cwa then subsumpt achiev use parallel circumscript polici implement point view mani time formula substitut simpl extern logic mechan interfer determin valu minim predic discuss issu section semant ignor mechan run behind scene moment eg ignor time differ theorem prover differ layer consid entir system layer one logic theori formal logic theori follow let layer ab c mention abov then combin system describ equival circlay circlay model brook system part describ logic theori correspond roughli layer brook subsumpt ar chitectur divid theori conceptu correspond layer modul mention figur simplic omit part descript refer reader appendix a layer differ slightli brook instead implement random wander layer support simpl movement toward goal locat goal locat specifi layer which imagin first construct plan explor then step plan assert theori layer via subsumpt latch next goal locat is layer make simpl calcul determin eight quadrant surround goal posit locat see figur layer assert theori layer by way anoth subsumpt latch exist virtual push object oppos quadrant avoid capabl layer effect push robot away object robot head direct goal although may deviat direct path depend physic object vicin figur quadrant push object cycl layer theorem prover layer ask find requir action modul turn forward describ below attempt prove fwdhead speed turnhead angl head speed head angl instanti proof result translat appropri robot command input layer sonar data output layer input languag includ symbol sonar read sonar direct object direct distanc halt robot output includ fwd turn sonar sonar modul take input physic sonar assert form axiom schema sonar readingsonar dist translat map object the type symbol defin appendix dist sonar readingsonar sonar directionsonar dist sonar number reason implic sonar object minim object circumscript below reason includ axiom state one object point collid take predic object check see detect object lie directli front us object ahead halt robot object ahead feelforc feelforc dirti work comput combin repuls forc differ detect object forc direct forc x forc forc runaway ab avoid head ab avoid head speed forc strength assum robot radian refer point straight ahead front sonar number sonar number consecut counterclockwis nsonar gamma feelforc may implement librari function rather logic theori gain much logic represent implement effici procedur logic represent use librari function anyway turn need turnhead angl turnhead angl forward halt robot need turnhead angl need fwdhead speed fwd head speed need turnhead angl fwd circumscrib theori final add parallel circumscript formula input layer current locat data robot output layer input languag includ symbol got move cmd curr locat output includ note that unlik layer coordin layer term fix coordin system independ robot locat simpl move push objectquadrantx push quad push objectquad circumscrib theori again add parallel circumscript formula implement issu implement theori use pttp theorem prover stickel b stickel a stickel sun ultra creatord mb ram run solari quintu prolog underli interpret pttp theori yet implement physic robot yet simul done abovedescrib machin help us identifi point difficulti use theorem prover task control intellig agent robot abl maintain posit cartesian space origin posit last zero eg power on choic theorem prover first difficulti encount fact find suitabl theorem prover theori includ sever mathemat comput such sever trigonometr function see appendix a much better suit systemat algorithm theorem prover sinc also want algebra sophist theori need semant attach examin mani theorem prover none seem support semant attach easili conveni control theorem prove process via strategi otherwis prover examin close otter a resolut theorem prover acl an industrialstrength version boyer moor theorem prover atp a model elimin theorem prover major difficulti encount not difficulti encount all inabl append semant attach ea ili complex make theorem prover run given platform inabl control infer process easili lack document addit also examin proof checker pv a proof checker hol getfol found unsuit due need least human intervent pttp prolog technolog theorem prover modelelimin theorem prover given theori made claus not necessarili disjunct without quantifi pttp produc set prologlik horn claus make sure sound unif produc avoid negationasfailur proof produc prolog infer algorithm also make sure infer algorithm complet use id iter deepen proof space togeth ensur pttp sound complet theorem prover one featur like pttp that despit lack suitabl document although fair number exampl theorem prover easi custom relianc underli languag it implement prolog lisp allow easi use semant attach collect exampl togeth pttp softwar illustr and despit difficulti incur use semant attach builtin predic such algebra gave us rel troubl either instal use httpwwwcsutexaseduusersmooreaclacl dochtml manualhtml httpwwwcomlaboxacukarchiveform methodsholhtml run pttp theori embodi feelforc modul c function get forc need input return forc vector strength direct work call prolog bagof oper collect object exist proof found simpli comput sum forc subject object cwa close world assumpt achiev limit size proof longer specifi constant we experi littl got constant object proof around object got second proof happen experi further final get forcel ab other treat builtin functionspred given underli prolog evalu which turn may call c function get forc prolog pred icat way one manag get semant attach without need abl prove mani properti algebra formula rest theori stay same provis constant nsonar min dist incorpor aid predic nsonarsx min disti ran theori differ simul sensori input result sampl run shown figur appendix result achiev second depend whether turn need lean toward second forward move need lean mostli toward second worth mention comput get forc appli cach of comput forc sinc pttp appli cach result major improv effici from sever second proof use simpl scheme due fact everi proof reprov get forc mani time nonmonoton consider mention abov way treat nonmonoton experi use naf negationa failur default prove wrong certain amount time treat fals particular three point nonmonoton requir cwa object world halt robot assum fals unless otherwis prove ab avoid allow complet overrid forc constraint input layer layer assum fals sinc use facil overrid implement level cwa object look proof longer halt robot proposit relat work work show theorem prover use implement robot control also show extend version brook subsumpt architectur implement use theorem prover logic theori extend version propos gener architectur build intellig agent notic includ specif action theori l show theori influenc l compar work shanahan shana han shanahan baral tran baral tran reiter et al reiter lespranc et al reiter shanahan describ mapbuild process use abduct abduct special specif scenario spatial occup nois one may wish includ implement theori algorithm abid logic theori account abduct contrast work implement algorithm rather use generalpurpos theorem prover show use theorem prover control long theori remain small rel simpl describ way join theorem prover theori structur allow larger theori interact complic behavior establish although control theori much simpler shanahan fact includ version origin theori present shanahan upper layer also sinc robot sophist mobil robot inclus theori take account differ sensor sonar instead switch work baral tran baral tran focus relationship member famili action languag gelfond lifschitz giunchiglia kartha lifschitz kartha reactiv control modul defin control modul form stimulusrespons sr agent see nilsson state defin set fluent valu either sensori memori sequenc rule defin action agent take given condit state provid way check sr modul correct respect action theori ar final provid algorithm creat sr agent action theori work although deal reactiv seem abl deal worldcomplex model sensor mani possibl input valu account sever input fluent one decid use algorithm describ baral tran produc simpl sr modul complex algorithm which worstcas exponenti number fluent allow end life time also lack hierarchyoftheori model use work final work reiter levesqu colleagu levesqu et al giacomo lesper anc levesqu reiter lespranc et al reiter giacomo reiter soutchanski focus languag golog and vari ant specif highlevel robot action paradigm planner computesplan golog program offlin let robot execut golog program onlin languag includ among other test truth condit perform primit action perform sequenc action nondeterminist choic two action nondeterminist iter use hierarch model reason merg plan execut work split plan execut plan done off line also use logic semant golog program given use situat calculu mccarthi hay discuss futur work last year logic approach ai got reinvigor posit result differ frontier plan eg work bibel selman kautz kautz mcallest selman sens ai architectur eg shanahan lesper et al giacomo lesper levesqu paper present logicbas architectur formal brook subsumpt architec ture use circumscript implement subsumpt do combin reactiv advantag brook architectur declar advantag logic produc first cut architectur perform sens plan act concurr moment system partial implement level onli simul comput besid implement system mobil robot futur work plan includ expand layer describ paper contain plan layer map creat layer eg creat map world po sibli follow work shanahan layer contain belief world eg may want doubt conclus certain locat believ moment ago distant locat reason chang done world put us new locat etc project also serv experi elabor toler layer approach acknowledg wish thank mark stickel allow us use pttp sourc both prolog lisp provid help answer inquiri regard use research support arpa onr grant n nation physic scienc consortium npsc fellowship r reason relat theori action reactiv control nonmonoton reason overview nonmonoton reason logic foundat common sens robust layer control system mobil robot repres action chang logic program reason concurr execut execut monitor highlevel robot pro gram indeterminaci ramifica tion action indirect effect preliminari report encod plan proposit logic logic approach highlevel robot program progress report kuiper foundat logic approach agent program golog logic program languag dynam domain philosoph problem standpoint artifici intel ligenc program common sens mechanis thought process formal common sens elabor tol eranc societi mind artifici intellig reason uncertainti natur action knowledg action logic foundat describ implement dynam system featur fluent robot common sens informat situat solv frame problem logic account common sens informat situat mobil robot postmodular system architectur principl cognit robot th intern confer autom deduc tion prolog technolog theorem prover implement extend prolog compil prolog technolog theorem prover new exposit implement prolog logic theori appendix draw entir logic theori version brook subsumpt architectur exampl brook object obj sonar number sum forc search cost proof search cost proof search cost proof proof goal infer second proof goal needturn infer second tr applic circumscript formal commonsens knowledg autom deduct theori resolut societi mind prolog technolog theorem prover implement extend prolog comput relationship circumscript negat failur principl metareason frame problem situat calculu prolog technolog theorem prover introduct hol situat view represent control build brain bodi repres action behaviorbas robot computeraid reason reinvent shakey interpol theorem nonmonoton reason system logicbas subsumpt architectur spatial agent implement logic express languag effici approxim triangul minimum treewidth decisiontheoret highlevel agent program situat calculu ccgolog highlevel robot control logic prolog technolog theorem prover layer resourceadapt agent robocup simul dynam subsumpt architectur program intellig agent