t compiletim schedul dynam construct dataflow program graph a abstractschedul dataflow graph onto processor consist assign actor processor order execut within processor specifi fire time schedul decis made runtim overhead excess real system reduc overhead compiletim decis made assign andor order actor processor compiletim decis base known profil avail actor compil time profil actor inform necessari schedul execut time commun pattern howev dynam construct within macro actor condit datadepend iter make profil actor unpredict compil time construct propos assum profil compiletim defin cost minim decid profil assumpt runtim statist avail compiletim decis profil dynam construct shown optim bold assumpt expect nearoptim case propos schedul techniqu implement one rapid prototyp facil ptolemi paper present preliminari result perform synthet exampl b introduct ataflow graph represent either program languag intermedi represent compil suitabl program multiprocessor parallel extract automat represent node actor dataflow graph repres either individu program instruct group thereof execut accord preced constraint repres arc also repres flow data dataflow graph usual made hierarch hierarch graph actor may repres anoth dataflow graph call macro actor particularli defin datadepend macro actor datadepend actor macro actor execut sequenc intern dataflow graph data depend cannot predict compil time exampl macro actor contain dynam construct datadepend iter recurs actor said dataindepend datadepend schedul task consist assign actor pro cessor specifi order actor execut processor specifi time s ha depart comput engin seoul nation univers seoul korea email shacompsnuackr e lee depart electr engin comput scienc univers california berkeley berkeley ca usa email ealohmeecsberkeleyedu execut task perform either compil time run time fullydynam schedul schedul decis made run time flexibl balanc comput load processor respons chang condit program case program larg amount nondeterminist behav ior static assign actor may result poor load balanc poor schedul perform then fulli dynam schedul would desir howev runtim overhead may excess exampl may necessari monitor comput load processor ship program code processor via network run time furthermor usual practic make global optim schedul decis run time paper focu applic moder amount nondeterminist behavior dsp applic graphic applic then schedul decis made compil time better order reduc implement cost make possibl reliabl meet time constraint compiletim processor schedul rich distinguish histori effort focus determinist model execut time actor processor p k fix datadepend actor program graph even restrict domain applic algorithm accomplish optim schedul combinatori complex except certain trivial case therefor good heurist method develop year also schedul techniqu appli complet expand dataflow graph assum actor assign processor indivis unit simpler howev treat datadepend actor schedul indivis unit regard macro actor schedul unit greatli simplifi schedul task prasanna et al schedul macro dataflow graph hierarch treat macro actor matrix oper schedul unit then macro actor may assign one processor therefor new schedul techniqu treat macro actor schedul unit devis compiletim schedul assum static inform actor known defin profil actor static inform actor necessari given schedul techniqu exampl use list schedul techniqu profil actor simpli comput time actor processor commun requir actor actor includ profil schedul tech ha lee compiletim schedul dynam construct dataflow program graph niqu requir inform profil macro actor would number assign processor local schedul actor assign processor dataindepend macro actor matrix op erat profil determinist howev profil datadepend actor dynam construct cannot determin compil time sinc execut sequenc intern dataflow subgraph vari run time construct assum profil somehow compiletim main purpos paper show defin profil dynam construct compiletim crucial assumpt reli approxim runtim statist dynam behavior compil time simul may proper method gather statist program run embed dsp system sometim runtim statist could given programm graphic applic scientif applic optim choos profil dynam con struct minim expect schedul length program assum quasistat schedul figur actor datadepend actor schedul result shown gantt chart horizont axi indic schedul time vertic axi indic processor compil time profil actor assum run time schedul length program vari depend actual behavior actor a note pattern processor avail actor b start execut preserv run time insert idl time then actor execut remain static schedul follow schedul strategi call quasistat schedul first propos lee dsp applic strict applic quasistat schedul requir synchron actor guarante compil time runtim synchron necessari long pattern processor avail consist schedul one gener impract assum exact runtim behavior actor known compil time therefor synchron actor usual perform run time case necessari enforc pattern processor avail insert idl time instead idl time insert synchron requir execut actor execut order actor chang schedul order actual schedul length obtain runtim synchron proven much differ quasistat schedul would produc henc optim criterion profil dynam construct base quasistat schedul strategi make analysi simpler ii previou work determinist schedul heurist assum static inform actor known almost none address defin static inform datadepend actor pioneer work issu done martin estrin calcul b c d a fig a dataflow graph consist five actor among actor datadepend actor b gantt chart compiletim schedul assum certain execut time actor a c run time actor take longer second processor pad noop d actor take less first processor idl make pattern processor avail schedul one dark line quasistat schedul mean path length actor dummi termin actor level actor list schedul exam ple two possibl path divid condit construct actor dummi termin actor level actor sum path length weight probabl path taken thu level actor base statist distribut dynam behavior datadepend actor sinc expens comput mean execut time instead usual use static inform datadepend actor even though mean execut time seem reason choic mean optim addit approach common drawback datadepend actor assign singl processor sever limit multiprocessor system two group research propos quasistat schedul techniqu independ lee loeffler et al develop method schedul condit datadepend iter construct respect approach allow one processor assign dynam construct figur show condit compar three schedul method figur b local schedul branch shown two branch schedul three processor total number processor lee method overlap local schedul branch choos maximum termin processor hard realtim system proper choic otherwis may ineffici either one branch like taken size like branch much smaller hand loeffler take local schedul like branch profil condit strategi ineffici branch equal like taken size assum branch much larger final condit evalu replac condit assign make construct static graph modifi illustr figur c scheme true fals branch sched ieee transact comput vol no juli a ifthenels construct b local schedul two d lee method e leoffler method c fullystat schedul fig three differ schedul condit construct a exampl condit construct form datadepend actor whole b local determinist schedul two branch c static schedul modifi graph use condit assign d lee method overlap local schedul branch choos maximum processor e loeffler method take local schedul branch like execut ule result one branch select depend control boolean immedi drawback ineffici becom sever one two branch small actor anoth problem occur unselect branch gener except condit dividebyzero error method condit adhoc appropri gener solut quasistat schedul effect datadepend iter construct construct make effect use processor cycl iter schedul one iter pad noop make pattern processor avail termin pattern start figur equival processor occupi amount time iter then pattern processor avail iter construct independ number iter cycl scheme break construct cannot util processor effect one iter cycl fig quasistat schedul datadepend iter con struct pattern processor avail independ number iter cycl recurs construct yet treat success static schedul data flow paradigm recent proper represent recurs construct propos but explain schedul recurs construct onto multiproc sor finit resourc careless exploit parallel recurs construct may caus system deadlock summari dynam construct condit datadepend iter recurs treat properli past schedul effort either static schedul dynam schedul adhoc method introduc proven unsuit gener so lution earlier result datadepend iter demonstr systemat approach determin profil datadepend iter actor could minim expect schedul length paper extend analysi gener dynam construct next section show dynam construct assign profil compiletim also prove given profil optim unrealist as sumption experi enabl us expect decis nearoptim case section contain exampl datadepend iter recur sion condit respect show profil dynam construct determin known runtim statist implement techniqu ptolemi framework preliminari simul result discuss section final discuss limit method mention futur work iii compiletim profil dynam construct actor assign compiletim profil static schedul assum quasistat schedul strategi propos scheme decid profil construct averag schedul length minim assum actor except dynam construct dataindepend object suitabl hard realtim system bound worst case be havior also assum dynam construct uncorrel assumpt may isol effect dynam construct schedul length sep arat case interdepend actor may group actor anoth macro actor decid optim profil larg actor even though decis profil new macro actor would complic case approach still valid nest dynam construct appli propos scheme inner dynam construct first simplic exampl paper one dynam construct dataflow graph runtim cost actor i c sum total comput time devot actor idl time due quasistat schedul strategi proce sor figur runtim cost datadepend actor sum lightli comput time darkli shade area actor c immedi idl time dynam construct schedul length certain iter written schedul total number processor system r rest comput includ idl time may result within schedul end therefor minim expect schedul length minim expect cost datadepend acha lee compiletim schedul dynam construct dataflow program graph tor dynam construct assum r independ decis profil actor i assumpt unreason preced constraint make r depend choic profil consid exampl situat dynam construct alway critic path processor effect use then decis profil construct directli affect idl time end schedul includ r hand enough parallel make effect use unassign processor execut time actor small rel schedul length assumpt valid realist situat like fall two extrem select optim compiletim profil actor i assum statist runtim behavior known compiletim valid assumpt vari larg extent depend applic digit signal process applic given program repeatedli execut data stream simul use obtain necessari inform gener howev may use wellknown distribut exampl uniform geometr distribut make analysi simpl use statist inform choos profil give least expect cost runtim compiletim profil profil datadepend actor local schedul determin number assign processor comput time taken assign processor overal algorithm profil decis follow assum dynam behavior actor express paramet k distribut pk total number processor n number processor assign actor ank actor cost paramet n k pk probabl paramet k next section illustr propos scheme datadepend iter recurs condit respect show profil decid runtim statist iv data depend iter datadepend iter number iter cycl determin runtim cannot known compiletim two possibl dataflow represent datadepend iter shown figur number adjac arc indic number token produc consum actor fire figur a sinc upsampl actor produc token time fire iter bodi consum one token fire iter bodi must fire time fire upsampl actor figur b f iter bodi sourc a b fig datadepend iter repres use either dataflow graph shown graph a use number iter known prior commenc iter b use otherwis number iter need known prior commenc iter here token come rout select actor iter bodi d arc connect control input select actor indic initi token arc valu fals ensur data come f input consum first time select actor fire first input token consum control input select actor valu true function t indic iter finish produc token valu fals itera tion output iter function f rout around switch actor test function t produc token valu fals mani variat two basic model datadepend iter previou work consid subset datadepend iter simultan execut success cycl prohibit figur b figur a restrict unless iter bodi contain recurr therefor gener previou method permit overlap cycl success iter cycl invok complet iter cycl detect intercycl depend sequenti languag main task parallel compil maxim parallel dataflow represen tation howev reveal depend rather easili presenc delay feedback arc assum probabl distribut number iter cycl known approxim compil time let number iter cycl random variabl known probabl mass function pi simplic set minimum possibl valu let number assign processor n total number processor assum block schedul local schedul iter bodi remov unnecessari complex illustr although propos techniqu applic overlap execut schedul block schedul assign processor assum avail synchron begin thu execut time one iter cycl n assign processor n display figur a denot n time must ieee transact comput vol no juli elaps one iter next iter enabl time could zero data depend iter given local schedul one iter cycl decid assum number iter cycl xn number overlap cycl kn two paramet xn kn chosen profil datadepend iter actor determin shown figur b subscript n n n xn kn repres function n number assign processor breviti omit subscript n variabl without confus use profil datadepend macro actor global schedul perform make hierarch compil note pattern processor avail execut construct differ execut address schedul iter bodi paper sinc standard problem static schedul x x next iter cycl execut a fig a block schedul one iter cycl datadepend iter actor quasistat schedul construct use fix assum number x cycl iter cost actor sum dot area execut time dark area idl time due iter display possibl case depend actual number cycl b accord quasistat schedul polici three case happen runtim actual number cycl coincid assum number iter cycl iter actor caus idl time cost actor consist execut time actor oth erwis assign processor idl iter take fewer x cycl figur c els processor well idl figur d expect cost iter actor cn k x sum individu cost weight probabl mass function number iter cycl expect cost becom x pintx x combin first term first element second term reduc e method choos three paramet n k x order minim expect cost equat first assum n fix sinc cn k x decreas function k fix n select maximum possibl number k number k bound two ratio n latter constraint necessari avoid idl time iter cycl processor result k set next step determin optim x valu x optim expect cost decreas vari x gamma therefor obtain follow inequ sinc posit inequ x k equal inequ becom inequ show previou work special case gener method now decid optim valu x k given number n choos optim n next question answer sinc simpl function n close form n minim cn k x exist unfortun howev may use exhaust search possibl valu n select valu minim cost polynomi time moreov experi show search space n often reduc significantli use criteria experi show method rel insensit approxim probabl mass function use wellknown distribut nice mathemat properti approxim reduc summat term close form let us consid geometr probabl mass function paramet q approxim distribut number iter cycl model class asymmetr bellshap distribut geometr probabl mass function mean nonneg integ r use inequ findx ha lee compiletim schedul dynam construct dataflow program graph therefor inequ optim valu x satisfi use floor notat obtain close form optim valu follow furthermor equat simplifi use factx get now simplifi formula optim profil iter actor similar simplif possibl also uniform distribut k equal result coincid previou result report v recurs recurs construct instanti part comput termin condit sat isfi high level program languag support construct sinc make program compact easi understand howev number selfinstanti call depth recurs usual known compiletim sinc termin condit calcul runtim dataflow paradigm recurs repres macro actor contain self actor figur self actor simpli repres instanc subgraph within sit recurs actor one self actor function actor ident repres datadepend iter actor shown figur b previou section includ special case tail recurs construct accordingli schedul decis recurs actor translat datadepend iter actor gener recurs construct may one self actor number self actor recurs construct call width recurs real applic width recurs two recurs construct width depth illustr figur b c assum node depth comput tree termin condit discuss limit assumpt later also assum runtim probabl mass function depth recurs known approxim compiletim potenti parallel comput tree gener recurs construct may huge sinc node depth execut concurr maximum degre parallel howev usual known compiletim exploit parallel construct consid resourc limit may restrict parallel order deadlock system restrict parallel case maximum degre parallel larg recogn difficult problem solv dynam dataflow system approach propos effici solut take degre parallel addit compon profil recurs construct suppos width recurs construct k let depth recurs random variabl known probabl mass function pi denot degre parallel d mean descend depth comput graph assign differ processor group descend recurs construct depth call ground construct figur a denot size processor group n total number processor devot recurs becom nk then profil recurs construct defin three paramet assum depth recurs x degre parallel d size processor group n approach optim paramet minim expect cost recurs construct exampl profil recurs construct display figur b let sum execut time actor ac h figur and let sum execut time actor b then schedul length l x ground construct becom l x d run time processor idl actual depth recurs differ assum depth recurs illustr figur c d actual depth recurs smaller assum depth x assign processor idl otherwis processor well idl let r sum execut time recurs besid ground construct basic cost r equal nk gamma runtim cost c becom assum x less d x cost c becom therefor expect cost recurs construct d sum runtim cost weight probabl mass function x ieee transact comput vol no juli ac ac ac test f b c depth self actor function fx testx true els return a return hfcxfcx c fig a exampl recurs construct b dataflow represent self actor repres recurs call c comput tree recurs construct two self actor depth recurs two ac ac ac b nk l x ac ac ac construct ground a ac ac ac c ac ac ac d fig a reduc comput graph recurs construct width degre parallel b profil recurs construct schedul length ground construct function assum depth recurs x degre parallel d quasistat schedul construct depend actual depth recurs c x d x manipul first assum n fix sinc expect cost decreas function d select maximum possibl number d number bound processor constraint nk sinc assum assum depth recurs x greater degre parallel d optim valu next decid optim valu x observ x optim expect cost decreas x vari gamma therefor get ha lee compiletim schedul dynam construct dataflow program graph rearrang inequ get followingx nk note similar inequ datadepend iter particular k two formula equival expect optim valu x depend shown may need use iter comput obtain optim valu x start let us consid exampl probabl mass function depth recurs geometr paramet q execut depth recurs proceed depth depth inequ optim x satisfi nk result x becom nk now assum n fix sinc transcendent function n depend expect cost upon size processor group n clear in stead examin possibl valu n calcul expect cost equat choos optim n give minimum cost complex procedur still polynomi usual reduc significantli sinc search space n reduc criteria case geometr distribut depth recurs expect cost simplifi case number child function one simplifi formula geometr distribut coincid datadepend iter except overhead term detect loop termin recal analysi base assumpt node depth comput tree termin condit assumpt roughli approxim realist assumpt call independ assumpt node depth equal probabl termin recurs independ other equal probabl consid probabl node depth termin recurs assumpt expect number node certain depth assumpt even though describ differ behavior independ assumpt shape profil would shown figur degre parallel maxim moreov recurs processor schedul length ground construct howev optim schedul length l x ground construct would differ length l x proport number execut recurs construct insid ground construct number integ independ assumpt belong subset f assumpt sinc probabl mass function number like complic independ assumpt sacrific perform choos suboptim schedul length simpler assumpt vi condit decis make capabl indispens requir program languag gener applic even signal process applic dataflow represent ifthenels local schedul branch shown figur a b assum probabl p true branch branch select known fals branch branch select probabl ij finish time local schedul ith branch jth processor let j finish time jth processor optim profil condit construct determin optim valu f j g minim expect runtim cost construct ith branch select cost becom therefor expect cost cn feasibl obtain close form solut j max function nonlinear discontinu instead numer algorithm develop initi take maximum finish time branch schedul processor accord lee method defin ff initi variabl ff repres excess cost per processor expect cost branch select run time defin bottleneck processor branch processor fjg satisfi branch fig repeat next step choos set bottleneck processor theta branch onli decreas j ffi j theta variat expect cost becom deltac set theta need updat updat theta repeat step now consid exampl shown figur suppos initi profil algorithm lee profil shown figur a ieee transact comput vol no juli happen loeffler profil specif ex ampl optim profil determin algorithm display figur b a initi profil b optim profil fig gener optim profil condit construct figur a initi profil b optim profil gener propos algorithm mway branch construct case construct realiz mway branch prefer use case construct use nest ifthenels construct gener propos algorithm proof optim beyond scope paper detail discuss refer given number assign processor propos algorithm determin optim profil obtain optim number assign processor comput total expect cost number choos minimum vii exampl propos techniqu schedul datadepend actor implement ptolemi heterogen simul prototyp environ develop ucberkeley usa one key object ptolemi allow mani differ comput model coexist system domain set block obey common comput model exampl mix domain system shown figur synchron dataflow sdf domain contain dataindepend actor perform compiletim schedul two branch condit construct repres sdf subsystem local schedul gener static schedul use local schedul branch dynam dataflowddf domain execut propos algorithm obtain optim profil condit construct topmost sdf domain system regard ddf domain macro actor assum profil perform global static schedul ddf fig exampl mix domain system topmost level system sdf domain dynam constructifthenels ddf domain turn contain two subsystem sdf domain branch appli propos schedul techniqu sever synthet exampl preliminari experi experi serv full test proof gener techniqu howev verifi propos techniqu make better schedul decis simpl adhoc decis dynam construct mani applic target architectur assum share bu architectur processor commun overlap comput test effect propos techniqu compar follow schedul altern dynam construct method assign processor dynam con struct method assign one processor dynam construct method appli fulli dynam schedul ignor overhead method appli fulli static schedul method correspond previou research quasistat schedul techniqu made lee loeffler et al data depend iter method approxim model situat implement dynam construct singl big atom actor simul third model list possibl outcom repres dataindepend macro actor possibl outcom replac dynam construct dataindepend macro actor perform fullystat schedul schedul result method nonrealist sinc ignor overhead fulli dynam schedul strategi nonetheless give yardstick measur rel perform schedul decis modifi dataflow graph may use fulli static schedul method condit construct may evalu branch select one multiplexor actor datadepend iter construct alway perform worst case number iter comparison use averag schedul length program perform measur exampl consid construct datadepend iter shown figur number insid actor repres execut length increas parallel pipelin graph begin construct schedul decis made construct mani processor assign iter bodi mani iter cycl schedul explicitli assum number iter cycl uniformli distribut determin optim number assign processor compar expect total cost shown tabl i sinc iter bodi util two processor effect expect total cost first two column close how ever schedul determin assign one processor slightli better rather parallel iter bodi schedul automat parallel iter cycl chang paramet may want parallel iter bodi first iter cycl next ha lee compiletim schedul dynam construct dataflow program graph up bodi fig exampl construct top level subsystem associ construct also display number insid actor repres execut length actor propos techniqu consid tradeoff parallel inner loop parallel outer loop nest loop construct main problem parallel compil sequenti program result gantt chart exampl shown figur fig gantt chart displi schedul result processor propos schedul techniqu exampl figur profil construct identifi number iter cycl run time less equal schedul length exampl schedul period greater schedul length increas therefor averag schedul length exampl becom averag schedul length schedul decis compar tabl ii propos techniqu outperform realist method achiev ideal schedul length method exampl assign processor iter bodi method worsen perform sinc fail exploit intercycl parallel confin dynam construct singl actor method give worst perform expect sinc fail exploit intercycl parallel parallel iter bodi sinc rang number iter cycl big assum worst case iter method bad exampl howev reveal shortcom propos techniqu assign processor iter bodi exploit parallel iter bodi well intercycl parallel averag schedul length becom slightli better schedul result propos techniqu calcul expect total cost decid optim number processor assign iter bodi account global effect decis sinc differ expect total cost propos techniqu best schedul signific shown tabl i nonoptim propos techniqu could anticip improv perform propos techniqu add heurist expect total cost significantli greater optim one perform schedul assign number compar perform propos techniqu choos best schedul result search assum number iter cycl optim profil faultless either sinc propos techniqu find local optimum propos techniqu select assum number iter cycl prove howev best assum number exampl even though perform differ neglig although propos techniqu alway optim certainli better schedul method demonstr tabl ii experi dynam construct well nest construct perform obtain similar result propos techniqu outperform adhoc decis result quasistat schedul could least faster schedul decis current exist littl slower ideal and highli unrealist fullydynam schedul nest dynam construct compiletim profil inner dynam construct affect outer dynam construct gener tradeoff exploit parallel inner dynam construct first outer construct first propos techniqu resolv conflict automat refer detail discuss let us assess complex propos scheme number dynam construct includ nest one number processor n total number profil decis step order nd ond determin optim profil also consum ond time unit therefor overal complex order nd memori requir order od magnitud number profil maintain also order nd viii conclus long datadepend behavior domin dataflow program schedul decis made compil time better sinc reduc hardwar softwar overhead schedul run time compiletim decis task assign andor order need static inform call profil actor heurist compiletim decis assum static inform task use adhoc approxim paper propos systemat method decid profil dynam construct defin compiletim profil dynam construct assum local schedul bodi dynam ieee transact comput vol no juli expect total cost construct function number assign processor number assign processor expect total cost na ii perform comparison among sever schedul decis averag schedul length ideal construct defin cost dynam construct choos compiletim profil order minim expect cost cost dynam construct sum execut length construct idl time processor runtim due differ compiletim profil actual runtim profil discuss detail comput profil three kind common dynam construct condit datadepend iter recurs comput expect cost requir statist distribut dynam behavior exampl distribut number iter cycl datadepend iter must known approxim compiletim particular exampl use ex periment perform degrad rapidli stochast model deviat actual program be havior suggest compil use fairli simpl techniqu estim model implement techniqu ptolemi part rapid prototyp environ illustr effect propos techniqu synthet exampl paper mani exampl result preliminari indic potenti practic applic promis propos techniqu make local optim decis dynam construct shown propos techniqu effect amount data depend dynam construct small but admittedli cannot quantifi level techniqu break down acknowledg author would like grate thank anonym review help suggest research part ptolemi project support advanc research project agenc us air forc under rassp program contract fc state california micro program follow compani bell northern research cadenc dolbi hi tachi luckygoldstar mentor graphic mitsubishi mo torola nec philip and rockwel r data flow languag synchron data flow compiletim schedul assign dataflow program graph datadepend iter determinist processor schedul multiprocessor schedul account interprocessor commun a gener approach map parallel comput upon multiprocessor architectur task alloc schedul model multiprocessor digit signal process hierarch compil macro dataflow graph multiprocessor local memori recurr iter condit static schedul block diagram languag path length comput graph model comput the effect oper schedul perform data flow comput hierar chical schedul system parallel architectur tdfl tasklevel dataflow languag ptolemi framework simul prototyp heterogen sy tem program partit reconfigur multiprocessor system compiletim schedul dataflow program graph dynam construct tr ctr d ziegenbein k richter r ernst j teich l thiel represent process mode correl schedul proceed ieeeacm intern confer computeraid design p novemb san jose california unit state karsten strehl lothar thiel dirk ziegenbein rolf ernst jrgen teich schedul hardwaresoftwar system use symbol techniqu proceed seventh intern workshop hardwaresoftwar codesign p march rome itali jack s n jean karen tomko vikram yavag jignesh shah robert cook dynam reconfigur support concurr applic ieee transact comput v n p june yuri markovskiy eylon caspi randi huang joseph yeh michael chu john wawrzynek andr dehon analysi quasistat schedul techniqu virtual reconfigur machin proceed acmsigda tenth intern symposium fieldprogramm gate array februari monterey california usa chanik park sungchan kim soonhoi ha dataflow specif system level synthesi graphic applic proceed confer asia south pacif design autom p januari yokohama japan thi michal karczmarek jani sermulin rodric rabbah saman amarasingh teleport messag distribut stream program proceed tenth acm sigplan symposium principl practic parallel program june chicago il usa jin hwan park h k dai reconfigur hardwar solut parallel prefix comput journal supercomput v n p januari praveen k murthi etan g cohen steve rowland system canva new design environ embed dsp telecommun system proceed ninth intern symposium hardwaresoftwar codesign p april copenhagen denmark l thiel k strehl d ziegenbein r ernst j teich funstat