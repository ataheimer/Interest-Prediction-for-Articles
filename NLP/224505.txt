t exact methodolog schedul design space a abstract paper describ exact solut methodolog implement renssela voyag design space explor system solv schedul problem dimension d design space usual design space which trade area schedul length plu third dimens repres clock length unlik design space explor methodolog reli bound estim methodolog guarante find global optim solut schedul problem furthermor methodolog effici prune search space elimin provabl inferior design point through care select candid clock length tight bound number function unit type schedul length b introduct highlevel synthesi process solv schedul problem view process explor dimension d design space axe repres time schedul length area ideal total area often simplifi function unit area realiti howev design space small part much larger design space one larger design space present de mich illustr figur design space highlevel synthesi view dimension d space axe repres schedul length area clock cycl length well typic schedul algorithm explor one slice larger design space slice correspond fix clock length chosen priori design clock length depend mani factor includ delay function unit storag element glue logic wire well clock skew valu unknown schedul therefor estim stage design process given lack detail inform design forc make ad hoc frequent arbitrari guess clock length unfortun elimin entir dimens search space thu even optim schedul explor one slice design space produc schedul optim one clock length better schedul may exist differ clock length better schedul found motiv need explor larger design space consid problem schedul wellknown ellipt wave filter p ewf benchmark varieti materi base upon work support nation scienc foundat grant no mip dept electr comput system engin z depart comput scienc schedul length area length figur larger dimension d design space clock cstep ns cstep ns cstep ns tabl resourceconstrain schedul result ewf resourc constraint find fastest possibl schedul assum vdp modul librari use multipl delay ns addit delay ns forc choos clock length schedul algorithm use design would probabl choos either clock length ns ns execut delay either addit multipl given clock length optim schedul support multicycl oper such ilpbas schedul voyag design space explor system would produc result shown line label tabl consid line tabl repres other perhap less obviou choic clock length resourc constraint fastest design correspond clock length ns design would found schedul methodolog limit ad hoc guess thu import explor number candid clock length find global optim solut paper present exact solut methodolog implement voyag design space explor system find global optim solut schedul problem design space methodolog make problem tractabl care prune provabl inferior point design space provabl effici exact algorithm solv individu problem cours small clock length also result larger number control step thu larger complex control unit howev note clock length ns compar ad hoc guess result schedul almost fast one correspond ns clock faster correspond ad hoc guess th int symp system synthesi cann franc septemb timeconstrain schedul tcsd read dfg modul librari time constraint comput minim set candid clock length clock length perform timeconstrain schedul tc present result user evalu timeconstrain schedul tc comput tight lower bound number function unit type use lower bound resourc constraint solv trc decis problem feasibl schedul found increas resourc constraint solv trc decis problem figur voyag timeconstrain schedul tcsd methodolog paper present two methodolog solv clock determin schedul problem guarante find global optim design far effici exhaust search design space one methodolog solv timeconstrain schedul problem figur solv resourceconstrain schedul rcsd problem figur methodolog implement ren selaer voyag design space explor system core methodolog roughli methodolog comput set candid clock length candid clock length optim solv schedul problem howev straightforward implement core methodolog take much long solv even small benchmark thu import solv schedul problem small provabl minim set candid clock length solv schedul problem effici possibl optim solut found reason amount time sinc search space tc rc problem larger trc problem methodolog solv tc rc problem gener miss constraint effect convert easiertosolv trc problem tc problem methodolog comput constraint number function unit type rc problem comput time constraint length schedul sinc constraint also found effici entir methodolog effici timeconstrain schedul tcsd voyag methodolog solv timeconstrain schedul problem outlin figur methodolog begin read data flow graph dfg execut delay relev function unit modul librari overal time constraint minim set candid clock length determin see section base execut delay relev function unit modul librari ewf modul librari describ earlier candid clock length would gener clock length resourceconstrain schedul rcsd read dfg modul librari resourc constraint comput minim set candid clock length clock length perform resourceconstrain schedul rc present result user evalu resourceconstrain schedul rc comput tight lower bound schedul length use lower bound time constraint solv trc decis problem feasibl schedul found increas time constraint solv trc decis problem figur voyag resourceconstrain schedul rc timeconstrain schedul perform result present user evalu solv tc problem effici voyag ilp formul trc problem describ section use follow first tight lower bound number function unit type comput use method sketch section bound use resourc constraint trc problem solv decis problem trc produc feasibl schedul schedul guarante optim not resourc constraint increas process repeat tcsd solut methodolog rel effici follow reason first function unit lower bound comput polynomi time solv two linear program lp second trc solv decis problem rather optim problem use formul wellstructur requir few ani branch branchandbound search final function unit lower bound highli accur in almost everi case lead immedi feasibl so lution practic lower bound seldom increas solv trc again thu tcsd problem solv quickli even mediums benchmark see section effici methodolog increas goal find schedul fewest number function unit case tc problem solv trc problem fu lower bound compar number fu requir best previou schedul new bound smaller trc problem solv explain abov new bound larger need solv trc problem sinc would requir function unit best solut found far resourceconstrain schedul rcsd voyag methodolog solv resourceconstrain schedul problem similar see figur methodolog read resourc constraint gener minim set candid clock use clock length determin algorithm describ section clock length resourceconstrain schedul perform solv rc problem effici voyag ilp formul trc problem section use fol low first tight lower bound overal length schedul comput section bound use time constraint trc problem solv decis problem trc produc feasibl schedul schedul guarante optim not time constraint increas process repeat rc problem solv quickli even mediums benchmark see section effici methodolog increas goal find shortest schedul case rc problem solv trc problem schedul length lower bound compar length best previou schedul new bound smaller trc problem solv explain abov new bound larger need solv trc problem sinc would result longer schedul best solut found far advantag solut methodolog summari voyag exact solut methodolog twofold advantag previou methodolog guarante optim result solut techniqu base effici prune search space unlik design space explor methodolog reli bound estim make problem tractabl methodolog gener minim set candid clock length could possibl correspond optim design optim solv either tc rc problem clock length thu guarante find global optim result furthermor although methodolog may appear first glanc perform exhaust schedul realiti quit effici three reason first minim set candid clock length gener schedul perform valu second instead directli solv tc rc problem miss constraint gener convert problem trc problem smaller search space moreov constraint tight also gener effici final trc formul use care design wellstructur therefor usual find optim solut branch determin candid clock length one import paramet need schedul algorithm length system clock howev determin clock length requir detail analysi clock skew wire delay glue logic de lay setup propag delay storag element etc quantiti larg unknown highlevel syn thesi fortun although detail analysi necessari later design process need highlevel synthesi macroscop structur circuit determin one appropri model clock length highlevel synthesi present chaiyakul gajski clock length assum compon datapath delay control delay wire delay three control delay wire delay cannot meaning estim schedul fortun delay play major role schedul problem becaus resourc util datapath primarili affect delay datapath unit thu schedul use datapath delay determin clock length ignor control wire delay realiz actual clock length determin later longer due delay furthermor oper execut delay comput assum busbas architectur pointtopoint interconnect topolog mean exist one bu two function unit andor storag unit port setup time propag delay regist let delay tristat driver delay function unit type k denot delay k execut delay k registerto regist transfer execut oper type k given as throughout remaind section set use denot set k s found given dfg discuss voyag methodolog determin candid clock length necessari measur qualiti one clock length respect clock length particular oper one measur commonli use oper slack defin follow definit given clock length c slack k oper type k given by voyag methodolog determin minim set candid clock length rang c c rang bound c minimum clock length possibl implement design control one goal voyag design space explor methodolog find minim set noninferior clock length c rang need examin order find global optim solut unfortun clock determin problem usual ignor favor ad hoc decis estim which demonstr later ignor much design space lead inferior design exampl sever previou clock estim scheme use delay slowest function unit estim clock length realist approach use contigu rang integ candid clock length heurist evalu attempt provid guidanc best clock length choos howev approach choos clock length befor independ of schedul thu best estim sinc never possibl guarante better schedul differ clock length exist therefor may seem first global optim solut schedul problem cannot found without optim solv schedul problem everi possibl clock length prohibit expens exhaust search fortun exhaust search necessari corazao et al combin clock length determin problem oper templat match made suggest reduc number candid clock length howev number candid clock length reduc even further shown theorem a similar observ made chen et al present without proof follow theorem show certain clock length rang c c must explor find global optim clock length c chain consid ere clock length assum integ theorem c integr divid least one regist transfer delay formal k c least one proof consid clock period c k c k optim basic schedul gener use c clock length show c optim found anoth clock period c lead faster schedul number function unit cstep origin schedul ceg new clock period c found c ffl use definit k c definit valu c deriv substitut c furthermor sinc c c also follow dd k c e dd k ce two relat impli dd k c regist transfer take number control step new clock c origin clock c henc origin schedul still valid new clock c howev c less c result faster execut time number cstep function unit remain same corollari use integ clock length noninteg clock c gener applic theorem replac c least one k k summari theorem corollari give method determin small set candid clock length ck provabl contain optimum clock length c set comput denot ceil integr divisor delay k fall rang c c practic size ck less integ rang c c similar theorem develop schedul support chain schedul support oper templat howev theorem present due lack space optim solv schedul problem highlevel synthesi basic schedul problem problem determin control step oper execut care formal analysi schedul problem abl develop wellstructur integ linear program ilp formul schedul problem particular trc problem voyag formul trc problem summar follow denot set op erat denot schedul interv asap oper binari variabl x is use indic whether oper schedul cstep s feasibl schedul valu variabl must satisfi three type constraint assign constraint a ensur oper schedul onto exactli one cstep preced constraint p ensur oper alway schedul predecessor resourc constraint r ensur schedul use avail number function unit type trc problem problem determin whether feasibl schedul exist satisfi constraint written succinctli as vector zero r coeffici matric due assign constraint preced constraint resourc constraint respect detail voyag schedul ilp formul found bound number function unit discuss earlier section import gener tight lower bound number function unit type bound use resourc constraint convert tc problem easierto solv trc problem furthermor bound must comput effici prefer polynomialtim algorithm function unit lowerbound problem view relax function unit minim problem unfortun mani possibl relax problem therefor mani possibl function unit lowerbound problem ideal would like find tightest bound possibl relax effici solut methodolog one approach form fu lowerbound problem fu minim problem relax preced constraint oper work awar two methodolog comput fu lower bound manner relax consid jain and similar relax tighter relax base method origin propos fernandez bussel theorem work describ fulli take differ approach start formal descript fu minim problem find minimum valu k number function unit type k k relax problem form gener descript entir class fu lowerbound problem the problem special case gener class final select one lowerbound problem produc tightest possibl bound solv problem thu approach formal entir class fu lowerbound problem guarante produc tightest possibl bound practic verifi bound produc exact case furthermor solut function unit lowerbound problem found solv two lp which done polynomi time thu develop function unit lowerbound methodolog guarante produc tightest bound possibl preced relax polynomi time even though origin formul ilp formul bound length schedul previou section briefli describ voyag method gener tight lower bound number function unit search space tc problem could reduc solv problem effici describ section section present similar method gener tight lower bound schedul length rc problem solv effici one earli formul schedul length lowerbound problem presenc resourc constraint present howev bound produc approach loos recent algorithm produc tighter bound base jackson earliest deadlin rule edrul base theorem origin given fernandez bussel theorem furthermor algorithm appli iter hu et al appli fernandez theorem langevin appli edrul produc even tighter bound although cost increas algorithm complex investig problem shown relax ilp formul rc problem form gener descript entir class schedul length lowerbound problem much manner fu lowerbound function unit lower bound select one lowerbound problem produc tightest possibl bound the problem special case gener class solv prob lem thu approach formal entir class schedul length lowerbound problem guarante produc tightest bound possibl preced relax polynomi time experiment result demonstr accuraci perform voy ager schedul methodolog conduct seri experi use wellknown ellipt wave filter ewf p discret cosin transform dct benchmark use vdp modul librari give datapath delay ns addit ns subtract ns multipl benchmark perform timeconstrain schedul tcsd resourceconstrain schedul rcsd use methodolog present section ellipt wave filter ewf tcsd result ewf present tabl show two time constraint clock length candid set lead feasibl schedul the clock length lead infeas schedul regardless number function unit avail time constraint ns three clock length ns ns ns led minimum number function unit these schedul ns clock dd mult e requir fewest control step and thu potenti time clock cstep ns mult add time constraint ns time constraint ns tightest tabl ewf tcsd result ns cs ns cs ns cs ns lb lb tabl ewf rcsd result smaller control would prefer note ns clock one obviou ad hoc guess d add may requir addit multipli find fastest possibl design critic path length use deriv tightest possibl time constraint ns time constraint one clock length ns led feasibl schedul thu guarante fastest design rcsd result ewf shown tabl schedul length interest shown boldfac lowerboundedbi rcsd methodolog shown gray along lowerbound schedul length describ section trc problem solv clock length sinc would result schedul longer shortest schedul found previou clock length ns ns clock length correspond fastest schedul again interest note neither clock length obviou ad hoc guess dd mult e dd mult e dd add e mean fastest schedul might miss use convent methodolog furthermor although clock length ns would correspond larger number control step and perhap larger control small clock length result overal fastest schedul small clock granular tend reduc oper slack discret cosin transform dct tcsd result dct present tabl first set result time constraint ns correspond design run mhz eight clock length produc feasibl schedul one ns led minimum number function unit find fastest possibl design critic path length use deriv tightest possibl time constraint ns one clock length ns led feasibl schedul thu guarante fastest design rcsd result dct present tabl ns clock length d sub correspond fastest schedul time clock cstep ns mult add sub time constraint ns mhz ns tightest tabl dct tcsd result clock cstep ns lb lb tabl dct rcsd result methodolog run time voyag design space explor methodolog consist three main task comput minim set candid clock length comput tight bound number function unit schedul length solv trc problem minim set candid clock length comput quickli bound comput solv two linear program polynomi time discuss section final trc formul use voyag care construct well structur mean convergeson optim solut faster arbitrari formul motiv need solv tc rc problem first comput bound solv result trc problem consid result solv tc problem directli time constraint ns ns clock ewf benchmark even wellstructur formul voyag solv problem directli took hour cpu time use lindo sun sparcstat contrast spent sec comput lower boundson number function unit sec solv trc problem solv problem two order magnitud less time larger benchmark dct time constraint ns ns clock spent sec comput lower bound number function unit sec solv trc problem again directli solv tc problem case took hour gener best design exampl gener within second howev small clock length eg ns ilp trc problem becom quit larg case would taken hour find exact solut fortun even case bound produc fairli quickli could often obviat need solv trc problem clock length describ section summari paper defin new problem schedul problem present exact solut methodolog solv problem without resort timeconsum exhaust search solut methodolog exact guarante find optim clock length schedul furthermor effici prune inferior point design space care select candid clock length an import design paramet often determin guesswork estim tight bound number function unit length schedul r simpl algorithm multiprocessor schedul meet dead line time model high level synthesi comput lower bound function unit schedul analyz exploit structur constraint ilp approach schedul problem optim modul set clock cycl select dsp synthesi instruct set map perform optim bound number processor time multiprocessor optim schedul improv lower bound schedul optim problem lower bound iter time number resourc function pipelin data flow graph modul select pipelin synthesi predict systemlevel area delay pipelin nonpipelin design recurs techniqu comput lowerbound perform schedul synthesi optim digit circuit system clock estim base clock slack minim salsa new approach schedul time constraint comprehens lower bound estim behavior descript synthesi optim clock scheme estim implement bound real time dsp applic specif circuit estim architectur resourc perform highlevel synthesi applic algorithm regist transfer level synthesi system ar chitect workbench vlsi technolog inc tr system clock estim base clock slack minim time model highlevel synthesi comprehens lower bound estim behavior descript analyz exploit structur constraint ilp approach schedul problem comput lower bound function unit schedul instruct set map perform optim modul select pipelin synthesi synthesi optim clock scheme synthesi optim digit circuit algorithm registertransf level synthesi ctr h juan s bakshi d gajski clock optim highperform pipelin design proceed confer european design autom p septemb geneva switzerland m narasimhan j ramanujam improv comput perform ilpbas problem proceed ieeeacm intern confer computeraid design p novemb san jose california unit state ann mignott olivi peyran reduc complex ilp formul synthesi proceed th intern symposium system synthesi p septemb antwerp belgium anand raghunathan niraj k jha iter improv algorithm low power data path synthesi proceed ieeeacm intern confer computeraid design p novemb san jose california unit state ranga vemuri sriram govindarajan iyad ouaiss meenakshi kaul vinoo srinivasan shankar radhakrishnan sujatha sundaraman satish ganesan awartika pandey preetham lakshmikanthan autom design synthesi partit adapt reconfigur hardwar hardwar implement intellig system physicaverlag gmbh heidelberg germani