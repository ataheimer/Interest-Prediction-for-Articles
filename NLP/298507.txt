t syntact versu comput view approxim a attempt reconcil two distinct view approxim class syntact comput syntact class max snp permit structur result natur complet problem comput class apx allow us work class problem whose approxim well understood result provid syntact character comput class give comput framework syntact classesw compar syntact defin class max snp comput defin class apx show everi problem apx place ie approximationpreserv reduct problem max snp method introduc simpl yet gener techniqu creat approximationpreserv reduct show wellapproxim problem reduc approximationpreserv manner problem hard approxim correspond factor reduct follow easili recent nonapproxim result max snphard problem demonstr gener techniqu appli class max snprmax min fpi_ cliqu problem set cover problem respect complet problemsth syntact natur max snp use papadimitri yannakaki j comput system sci pp provid approxim algorithm everi problem class provid altern approach demonstr result use syntact natur max snp develop gener paradigm nonoblivi local search use develop simpl yet effici approxim algorithm show algorithm find good approxim max snp problem yield approxim ratio compar best known varieti specif max snphard problem nonoblivi local search provabl outperform standard local search degre approxim achiev effici result algorithm b introduct approxim np optim npo problem investig past via definit two differ type problem class syntacticallydefin class max snp computationallydefin class apx the class optim problem constant factor approxim found polynomi time former use obtain structur result natur complet problem latter allow us work class problem whose approxim complet determin attempt develop linkag two view approxim problem therebi obtain new insight type class show natur gener max snp render ident class apx unexpect valid papadimitri yannakakiss definit max snp attempt provid structur basi studi approxim sideeffect resolv open problem identifi complet problem max np techniqu extend gener theorem use creat approxim hierarchi also develop gener algorithm paradigm guarante provid good approxim max snp problem may also applic background motiv wide varieti class defin base directli polynomialtim approxim problem contain within eg apx constantfactor approxim problem pta problem polynomialtim approxim scheme fpta problem fullypolynomialtim approxim scheme advantag work class defin use approxim criterion allow us work problem whose approxim wellunderstood crescenzi panconesi recent also abl exhibit complet problem class particularli apx unfortun complet problem seem rare artifici seem provid insight natur problem class research direct find approximationpreserv reduct known complet artifici problem class natur problem therein view understand approxim latter second famili class npo problem studi defin via syntact consider base syntact character np due fagin research direct initi papadimitri yannakaki follow panconesi ranjan kolaiti thakur led identif approxim class max snp rmax syntact prescript definit class prove use establish complet problem moreov recent result arora lund motwani sudan szegedi establish hard approxim complet problem max snp within specif constant factor unless natur wonder hardest problem syntact subclass apx bear relat np though comput view allow us precis classifi problem base approxima biliti yield structur insight natur question as certain problem easier approxim other canon structur hardest repres problem given approxim class and on furthermor intuit speak view abstract identif of reduct establish natur complet problem class syntact view hand essenti structur view syntact prescript give natur way identifi canon hard problem class perform approximationpreserv reduct establish complet problem attempt tri find class mention properti ie natur complet problem captur problem specifi approxim success typic focu relax syntact criteria allow wider class problem includ class howev case seem inevit class cannot express enough encompass problem given approxim syntact defin approxim class strictli contain class npo strict contain shown syntact consider alon result could show class contain p would separ p np would expect everi class natur would miss problem p inde case current definit explor differ direct studi structur syntact defin class look closur approximationpreserv reduct advantag closur maintain complet problem set manag includ p closur for problem p reduct simpli use polynomi time algorithm comput exact solut becom interest exampl compar closur max snp denot max snp apx posit resolut ie max would immedi impli nonexist pta max snphard problem sinc known pta strict subset apx p np hand uncondit neg result would difficult obtain sinc would impli p np resolv question affirm exact natur result obtain depend upon precis notion approxim preserv reduct use defin closur class max snp strictest notion reduct avail literatur lreduct due papadimitri yannakaki introduc new notion reduct call ereduct slight extens lreduct use reduct defin class max snp show equal apxpb class polynomi bound np optim problem approxim within constant factor use slightli looser definit approxim preserv reduct and particular ptasreduct crescenzi et al extend includ apx max snp build upon result identifi interest hierarchi approxim class interest sideeffect result posit answer question papadimitri yannakaki whether max np complet problem syntact view seem use obtain structur complex result also develop paradigm design effici approxim algorithm exploit syntact natur max snp develop gener paradigm design good approxim algorithm problem class therebi provid comput view it refer paradigm nonoblivi local search modif standard local search techniqu show everi max snp problem approxim within constant factor algorithm turn perform nonoblivi local search compar bestknown approxim algorithm sever interest repres problem max snp intrigu possibl coincid rather hint univers paradigm variant thereof result relat extent ausiello protasi defin class glo for guarante local optima npo problem properti local optimum solut ratio valu global local optimum bound constant follow glo subset apx shown fact strict subset show max snp problem contain glo therebi establish max snp contain glo contrast notion nonoblivi local search guarante provid constant factor approxim problem max snp fact result indic nonoblivi local search significantli power standard local search deliv strictli better constant ratio also provid constant factor approxim problem glo independ work alimonti use similar local search techniqu approxim specif problem contain glo max snp papadimitri yannakaki hint definit max snp state that minim problem place class lreduct maxim problem summari result section present definit requir state result particular definit e reduct apx apxpb max snp max snp section show max gener theorem allow equat closur syntact class appropri comput class outlin section also develop approxim hierarchi base result notion nonoblivi local search nonoblivi glo develop section section illustr power nonoblivi first show oblivi local search achiev perform ratio max sat even allow search exponenti larg neighborhood contrast simpl nonoblivi local search algorithm achiev perform ratio establish paradigm yield k approxim max ksat section provid altern character max snp via class problem call max kcsp shown simpl nonoblivi algorithm achiev bestknown approxim problem therebi provid uniform approxim max snp section illustr power class algorithm show achiev bestknown ratio specif max snp problem vertex cover which contain glo impli max snp contain glo glo strict subset nonoblivi glo section appli approxim travel salesman problem final section appli techniqu improv longstand approxim bound maximum independ set boundeddegre graph preliminari version paper appear preliminari definit given npo problem p instanc p use jij denot length opt i denot optimum valu instanc solut i valu solut denot v i s assum polynomi time comput function take posit integ valu see precis definit npo solut instanc npo problem p error ei notic definit error appli uniformli minim maxim problem level approxim perform ratio approxim algorithm optim problem p perform ratio rn if given instanc p oe solut valu within multipl factor r optim valu refer rapproxim perform ratio r alway comput solut error r gamma ereduct describ precis approxim preserv reduct use paper variou notion approxim preserv reduct exist literatur cf reduct use refer ereduct for errorpreserv reduct seem strictest see ereduct essenti lreduct papadimitri yannakaki differ one rel minor aspect problem p ereduc problem p denot exist polynomi time comput function f g constant fi map instanc p instanc p opt i opt relat polynomi factor map solut solut ei remark ereduct essenti strictest possibl notion reduct requir error p linearli relat error p notion reduct literatur exampl f reduct p reduct crescenzi panconesi enforc condit one import consequ constraint ereduct sensit ie p map ereduct good solut provid structur inform good solut i thu reduct real optim problem decis problem artifici encod optim problem implaus p e p impli p well approxim p fact ereduct fptaspreserv reduct import benefit reduct appli uniformli level approxim case exist definit fptaspreserv reduct literatur exampl fptaspreserv reduct crescenzi panconesi much unrestrict scope share import properti ereduct note crescenzi panconesi show exist problem p pta problem thu undesir situat problem p pta fptaspreserv reduct problem p pta remark lreduct papadimitri yannakaki enforc condit optima instanc p linearli relat optima instanc p map appear unnatur restrict consid reduct allow arbitrari polynomi time comput real differ lreduct ereduct ereduct linear relat optima satisfi lreduct intuit howev studi approxim desir attribut simpli error correspond solut close linearli relat somewhat artifici requir linear relat optimum valu preclud reduct problem relat scale factor instanc seem desir two problem whose object function simpli relat fix polynomi factor interreduc reason definit approximationpreserv reduct relax lreduct constraint motiv precis consider let c class npo problem use notion ereduct defin hard complet problem respect c well closur polynomiallybound subclass definit hard complet problem problem p said chard problem p e p chard problem p said ccomplet addit p c definit closur closur c denot c set npo problem p p e p p c remark closur oper maintain set complet problem class definit polynomi bound subset polynomi bound subset c denot cpb set problem p c exist polynomi pn instanc p comput syntact class first defin basic comput class apx definit apx npo problem p class apx exist polynomi time comput function map instanc p solut constant c instanc p class apxpb consist polynomi bound npo problem approxim within constant factor polynomi time let fapx denot class npo problem approxim within factor f obtain hierarchi approxim class instanc polyapx logapx class npo problem polynomi time algorithm perform ratio bound polynomi logarithm respect input length precis form definit provid section let us briefli review definit syntact class definit max snp max np max snp class npo problem express find structur maxim object function denot input consist finit univers u finit set bound ariti predic p finit structur f quantifierfre firstord formula class max np defin analog except object function natur extens associ weight everi tupl rang univers quantifi modifi object find maxim v i x wxfi weight associ tupl x exampl max ksat max ksat problem is given collect claus n boolean variabl possibl weight claus disjunct precis k liter find truth assign satisfi maximum weight collect claus fix integ k max ksat belong class max snp result papadimitri yannakaki adapt show k max ksat complet ereduct class max snp definit rmaxk rmaxk class npo problem express find structur maxim object function singl predic fi s y quantifierfre cnf formula occur k time claus occurr neg result panconesi ranjan adapt show max cliqu complet ereduct class rmax class npo problem express find structur minim object function singl predic fi s y quantifierfre cnf formula occur k time claus occurr posit result kolaiti thakur adapt show set cover complet ereduct class min f max snp closur apxpb section establish follow theorem examin implic proof base result arora et al effici proof verif theorem max remark seem weak max snp captur polynomi bound apx problem remov use looser form approximationpreserv reduct defin closur particular crescenzi trevisan defin notion ptaspreserv reduct apxpb use result conjunct theorem easili seen max weaker reduct necessari allow reduct finegrain optim problem coarser polynomiallybound optim problem cf follow surpris consequ theorem theorem max papadimitri yannakaki implicitli introduc closur class conjectur same would interest see equal shown independ result arora et al also obtain follow resolut problem pose papadimitri yannakaki find complet problem max np theorem max sat complet max np follow subsect establish max snp apxpb idea first ereduc minim problem apxpb maxim problem therein ereduc maxim problem apxpb specif complet problem max snp viz max sat sinc ereduct forc optima two problem involv relat polynomi factor easi see max snp apxpb combin establish theorem reduc minim maxim observ fact p belong apx impli exist approxim algorithm constant c c henceforth use ai denot v i ai first reduc minim problem p apxpb maxim problem p apxpb latter obtain mere modifi object function p follow let p object function v i instanc solut p verifi optimum valu instanc p alway lie ai c ai thu approxim algorithm p ffi error solut optimum p ie opt i optim valu v i obtain c c c thu solut p error ffi solut p error c impli ereduct np languag max sat follow theorem adapt result arora lund motwani sudan vazirani critic ereduct maxim problem max sat theorem given languag l np instanc x n one comput polynomi time instanc f x max sat follow properti formula f x claus depend n exist constant ffl gamma fflm claus f x satisfi truth assign x l f x complet satisfi x l truth assign satisfi claus f x given truth assign satisfi claus f x truth assign satisfi f x complet construct polynomi time properti may immedi obviou construct given arora lund motwani sudan szegedi easi verifi provid reduct properti properti obtain fact assign satisfi claus actual close in term ham distanc valid codeword linear code uniqu errorcorrect codeword obtain corrupt codeword satisfi claus f x properti requir bit care provid brief sketch may ensur idea revert back pcp model redefin proof verif game suppos origin game properti x l exist proof verifi accept probabl otherwis x l verifi accept probabl augment game ad proof th bit prover use follow bit set prover choos play old game els effect give up game verifi turn first look th bit proof set perform usual verif els toss unbias coin accept turn head clear x l exist proof verifi alway accept also x l proof caus verifi accept probabl greater final set th bit prover creat proof verifi accept probabl exactli proof system transform cnf formula desir form reduc maxim max sat alreadi establish that without loss gener need worri maxim problem consid problem p let polynomialtim algorithm deliv capproxim p c constant given instanc p let bound optimum valu obtain run input i note may stronger bound priori polynomi bound optimum valu instanc length jij import consequ p c opt i gener sequenc np decis problem l given instanc i creat p formula f use reduct theorem ith formula obtain np languag l consid formula follow featur ffl number satisfi claus f exactli ffl guarante theorem ffl given assign satisfi claus f construct polynomi time solut valu least j see thi observ follow assign mani claus must satisfi claus least j formula f let largest index happen clearli j furthermor properti theorem construct truth assign satisfi f complet truth assign use obtain solut v i order complet proof remain shown given truth assign error ffi ie satisfi max claus f find solut error ei constant fi show possibl cfflffl main idea behind find solut use second properti find good solut use good truth assign f suppos given solut satisfi max claus sinc max use second featur construct solut fflm c readili seen assum obtain hand error solut obtain run capproxim algorithm p given therefor choos immedi obtain solut larger valu among error fi ffi thu reduct inde ereduct gener reduct approxim hierarchi section describ gener techniqu turn hard result approxim preserv reduct start list kind constraint impos hard reduct approxim class optim problem observ end restrict obey known hard result correspond approxim class definit addit problem npo problem p said addit exist oper map pair instanc instanc opt definit downward close famili famili function said downward close g f constant c g n ogn c impli g f function g said hard famili f g f exist constant c g n ogn c function g said complet f g hard f g f downward close famili f class f apx consist problem approxim within ratio gjij function g f definit canon hard np maxim problem p said canon hard class f apx exist transform constant n c gap function g hard famili f given instanc x sat n n variabl n n c x n instanc p follow properti ffl x sat opt ffl x sat opt ffl given solut v i s ngn truth assign satisfi x found polynomi time canon hard np minim problem analog defin opt formula satisfi opt given solut valu less ngn one construct satisfi assign polynomi time reduct theorem f downward close famili function addit npo problem w canon hard class f apx problem f apx ereduc p proof let p problem fapx approxim within c let w problem shown hard within factor g g complet f start special case p w maxim problem describ function f g constant fi requir ereduct let p instanc size n pick n cn ogn describ reduct need specifi function f g function f defin follow let denot nplanguag fij opt i ig i creat instanc oe w size n l opt oe n ngn otherwis defin construct function g given instanc p solut fi comput solut follow manner first use find solut also comput second solut follow let j largest index solut project solut instanc oe j v turn impli find solut wit solut one among yield larger object function valu show reduct hold cn consid follow two case case j m case v i m thu ff gamma approxim solut i argu best ff gamma fi approxim solut oe start follow upper bound cn gn gammagn thu approxim factor achiev given nm case and henc s approxim within factor fi ffl approxim oe within factor ffl case j m let flm note fl ff gamma flfl approxim solut i bound valu solut oe cn qualiti thu case also find by virtu solut qualiti fi ffl solut qualiti s consid gener case p w maxim problem case minim problem transform work one minor chang creat oe np languag consist instanc i i exist case p minim problem w maxim problem first ereduc p maxim problem p proceed befor reduct proce follow object function p defin v i begin with easi verifi p fapx impli let fi approxim solut instanc p show best fi approxim solut instanc p assum without loss gener fi multipli opt iv i s get impli upon rearrang thu reduct p p ereduct final last remain case ie p maxim problem w minim problem dealt similarli transform p minim problem p remark theorem appear merg two differ notion rel eas approxim optim problem one notion would consid problem p easier p exist approxim preserv reduct p p differ notion would regard p easier one seem better factor approxim other statement essenti state two comparison inde same instanc max cliqu problem chromat number problem polyapx interreduc other observ motiv search interest function class f class f apx may contain interest optim problem applic follow consequ oftheorem theorem a b set cover canon hard approxim within factor wlog n briefli sketch proof theorem hard reduct max sat cliqu canon class apxpb polyapx logapx express class fapx downward close function famili problem max sat max cliqu set cover addit thu appli theorem remark would like point almost known instanc hard result seem shown problem addit particular true max snp problem max cliqu chromat number set cover one case hard result seem directli appli addit problem longest path howev case close relat longest st path problem easili seen addit hard result essenti stem problem lastli interest optim problem seem addit problem relat graph bisect partit also happen notabl instanc hard approxim result achiev local search max snp section present formal definit paradigm nonoblivi local search describ appli gener max snp problem given max snp problem p recal goal find structur maxim object function v i x fi s x subsequ discuss view kdimension boolean vector classic local search start review standard mechan construct local search algorithm ffiloc algorithm p base distanc function ds ham distanc two kdimension vector ffineighborhood structur given ns u univers structur call ffioptim algorithm comput ffioptimum perform seri greedi improv initi structur iter move current structur constant ffi ffiloc search algorithm polynomiallybound npo problem run polynomi time becaus ffl local chang polynomi comput ffl number iter polynomi bound sinc valu object function improv monoton integr amount iter optimum polynomiallybound nonoblivi local search nonoblivi local search algorithm base tupl hs initi solut structur must independ input fi s realvalu function refer weight function realvalu distanc function return distanc two structur appropri chosen metric distanc function comput time polynomi ju j thu befor constant ffi nonoblivi ffi local algorithm termin time polynomi input size classic local search paradigm call oblivi local search make natur choic function fi s distanc function d ie choos v i s ham distanc howev show later choic alway yield good approxim ratio formal notion gener type local search definit nonoblivi local search algorithm nonoblivi local search algorithm local search algorithm whose weight function defin x r r constant f s quantifierfre firstord formula profit p real constant distanc function arbitrari polynomialtim comput function nonoblivi local search implement polynomi time much way oblivi local search note consid polynomiallybound weight function profit fix independ input size gener nonoblivi weight function direct search direct actual object function fact see exactli reason power allow better approxim definit nonoblivi glo class problem nonoblivi glo consist problem approxim within constant factor nonoblivi ffi local search algorithm constant ffi remark make observ definit would perfectli reason allow weight function nonlinear stay definit purpos paper allow constant number predic weight function enabl us prevent encod arbitrarili complic approxim algorithm structur kdimension vector conveni metric distanc function ham distanc assum underli metric unless otherwis specifi howev found sometim use modifi thi exampl modifi ham distanc complement vector consid distanc it final sometim conveni assum local search make best possibl move bound neighborhood rather arbitrari move improv weight function believ increas power nonoblivi local search power nonoblivi local search show exist choic nonoblivi weight function max ksat assign optim respect weight function yield perform ratio k respect optim first obtain tight bound perform oblivi local search max sat establish perform significantli weaker bestknown result even allow search exponenti larg neighborhood use follow notat fix truth assign set claus exactli liter true and set claus s w s denot total weight claus s oblivi local search max sat show strong separ perform oblivi nonoblivi local search max sat suppos use ffiloc strategi weight function f total weight claus satisfi assign ie follow theorem show oblivi ffi local strategi cannot deliv perform ratio better rather surpris given will allow nearexponenti time oblivi algorithm theorem asymptot perform ratio oblivi ffi local search algorithm max sat posit ratio still bound ffi may take valu less n proof show exist input instanc max sat may elicit rel poor perform ratio ffi local algorithm provid construct input instanc assum n ffi input instanc compris disjoint union four set claus say defin below ijn ijn ffiin ijn clearli without loss gener assum current input assign satisfi claus g g none claus g g satisfi flip assign valu k ffi variabl would unsatisfi precis kn gamma claus g number claus g flip variabl occur unflip variabl hand flip assign valu k ffi variabl satisfi kn gamma claus g next show denot set claus n variabl given claim follow assign valu n variabl k ffi variabl assign valu fals satisfi kn gamma claus pn ffi proof prove simultan induct n ffi statement true instanc pn ffi n ffi nonneg integ n base case includ trivial verifi true allow valu ffi name assum statement true instanc pn consid instanc pn ffi statement trivial true g choic k ffi variabl q assert trivial true assum k on delet claus contain variabl z z pn ffi get instanc pn gamma consid three case case case reduc problem find upper bound maximum number claus satisfi set k variabl fals pn gamma use induct hypothesi conclud n claus satisfi thu assert hold case howev may directli use induct hypothesi case observ sinc induct hypothesi set k gamma variabl pn gamma fals satisfi n claus assign valu fals set k variabl satisfi claus henc assert hold case also case case z j satisfi one claus remain variabl satisfi claus induct hypothesi ad two term see assert hold case analyz case base whether precis claus remain variabl satisfi n claus use induct hypothesi thu assert still hold otherwis z satisfi precis claus remain n claus use induct hypothesi sum two term get n gamma kk upper bound total number claus satisfi thu assert hold case also see bound tight simpli consid situat k variabl set fals ffi total number claus satisfi given assum claus weight lemma allow us conclud ffiloc algorithm cannot increas total weight satisfi claus start assign optim assign hand satisfi claus choos vector thu perform ratio ffiloc algorithm say r ffi bound asymptot converg next show bound tight sinc local algorithm achiev it howev so make anoth intrigu observ name ffi n ratio r ffi bound see local algorithm ensur perform ratio consid optim assign z let ff denot set claus contain variabl z liter claus ff satisfi z similarli let fi denot set claus contain variabl z precis one liter satisfi claus fi furthermor precis liter contain variabl z complement valu assign variabl z exactli set claus ff becom satisfi set claus fi longer satisfi sinc z optim must case w ff w fi sum inequ variabl get inequ observ claus get count twice claus get count exactli onc thu fraction weight number claus satisfi local assign bound henc perform ratio achiev local algorithm bound combin upper bound deriv earlier conclud r may summar result follow lemma perform ratio r ffi ffi local algorithm max sat use weight function posit integ on furthermor ratio still bound ffi may take valu less n oblivi local search max sat illustr power nonoblivi local search show achiev perform ratio max sat use local search simpl nonoblivi weight function theorem nonoblivi local search achiev perform ratio max sat proof use nonoblivi weight function consid assign z optim respect weight function without loss gener assum variabl renam unneg liter get assign valu true let p ij n ij respect denot total weight claus contain liter z j z j respect sinc z optim assign variabl z j must satisfi follow equat gamma p j gamma p j n j n j sum inequ variabl use obtain follow inequ immedi impli total weight unsatisfi claus local optimum time total weight claus thu algorithm ensur perform ratio remark result achiev use oblivi weight function instead modifi distanc function correspond distanc hypercub augment edg node whose address complement other gener max ksat also design nonoblivi weight function max ksat local strategi ensur perform ratio k weight function f form coeffici c s specifi later theorem nonoblivi local search achiev perform ratio k proof again without loss gener assum variabl renam unneg liter assign true current truth assign thu set set claus unneg liter denot chang current weight flip valu z j is set easi verifi follow equat d thu algorithm termin know f sum valu j use fact get follow inequ determin valu s coeffici term left hand side uniti verifi achiev goal thu coeffici w s right hand side equat weight claus satisfi bound k time total weight claus worthwhil note regardless valu chosen coeffici c local search csp max snp introduc class constraint satisfact problem problem max snp exactli equival problem class furthermor everi problem class approxim within constant factor nonoblivi local search algorithm constraint satisfact problem connect syntact descript optim problem approxim nonoblivi local search made via problem call max kcsp captur problem max snp special case definit kari constraint let set boolean variabl kari constraint z size k subset z kari boolean predic definit given collect c weight kari constraint variabl g max kcsp problem find truth assign satisfi maximum weight subcollect constraint follow theorem show max kcsp problem univers max snp problem contain special case problem max snp theorem a fix k max kcsp max snp moreov kcsp instanc correspond instanc problem comput polynomi time nonoblivi local search max kcsp suitabl gener nonoblivi local search algorithm max ksat yield follow result theorem nonoblivi local search algorithm perform ratio k max kcsp proof use approach similar one use previou section design nonoblivi weight function f weight version max kcsp problem local algorithm yield perform ratio problem consid constraint least one satisfi assign constraint replac monomi conjunct k liter monomi evalu true correspond liter assign repres satisfi assign constraint furthermor monomi precis one satisfi assign assign monomi weight constraint repres thu assign variabl satisfi monomi total weight w also satisfi constraint origin problem total weight w denot monomi true liter assum weight function f form assum variabl renam current assign give valu true variabl know variabl z j f given equat befor use fact optim assign f sum valu j write follow inequ determin valu s coeffici term left hand side uniti verifi achiev goal thu coeffici w s k right hand side equat total weight claus satisfi least k time total weight claus least one satisfi assign conclud follow theorem theorem everi optim problem p max snp approxim within constant factor uniform nonoblivi local search algorithm ie problem express kcsp perform ratio k nonoblivi versu oblivi glo section show exist problem constant factor approxim obtain ffi local search algorithm oblivi weight function even allow ffi grow input size howev simpl local search algorithm use appropri nonoblivi weight function ensur constant perform ratio max csp first problem instanc max csp given collect monomi monomi and precis two liter object find assign maxim number monomi satisfi show instanc problem everi exist instanc one whose local optima valu vanishingli small fraction global optimum input instanc consist disjoint union two set monomi say g g defin below ijn ijn clearli consid truth assign satisfi monomi g none monomi g claim assign ffi optim respect oblivi weight function see thi observ complement valu p ffi variabl unsatisfi least ffip monomi g hand satisfi precis p ffi ffip z ffi local optimum optim assign hand name monomi g thu n perform ratio achiev ffi local algorithm asymptot diverg infin alreadi seen section local nonoblivi algorithm ensur perform ratio problem sinc problem max snp obtain follow theorem theorem exist problem max snp oblivi algorithm approxim within constant perform ratio ie max snp glo vertex cover ausiello protasi shown vertex cover belong class glo and henc exist constant ffi oblivi ffiloc search algorithm comput constant factor approxim fact exampl use show perform ratio ensur ffiloc search asymptot diverg infin howev show exist rather simpl nonoblivi weight function ensur factor approxim via local search fact algorithm simpli enforc behavior standard approxim algorithm iter build vertex cover simpli includ endpoint current uncov edg assum input graph g given structur v feg v set vertic encod edg graph solut repres ari predic iter construct repres maxim match clearli endpoint maxim match constitut valid vertex cover vertex cover twice larg vertex cover graph thu encod vertex cover comput algorithm algorithm start initi empti relat iter one new pair includ it nonoblivi weight function use below let encod valid match graph g make follow observ obtain either delet edg it includ edg incid edg properti fi fi m thu local search never move relat encod valid match g ffl hand relat correspond encod match g larger match encod fi encod maxim match g alway exist relat neighborhood larger weight itself two observ combin fact start valid initi match the empti match immedi allow us conclud optim relat alway encod maxim match g establish follow theorem local search algorithm use nonoblivi weight function achiev perform ratio vertex cover problem theorem glo strict subset nonoblivi glo implicit formul correspond lower triangular matrix represent match edg travel salesman problem tsp problem travel salesman problem restrict complet graph edg weight either clearli satisfi triangl inequ papadimitri yannakaki show problem hard max snp natur weight function tsp is weight tour use show local algorithm yield perform ratio algorithm start arbitrari tour iter check exist two disjoint edg a b c d tour delet replac edg a c b d yield tour lesser cost theorem local search algorithm use oblivi weight function achiev perform ratio tsp proof let c optim solut let let permut vertic c occur order v consid optim solut o unit cost edg e o associ unit cost edg e c follow let consid edg e c claim either e e must unit cost suppos not tour c obtain simpli delet e e insert edg e cost least one less c c optim thu contradict let uo denot set unit cost edg let uc set unit cost edg c form imag uo map sinc edg e uc imag unit cost edg incid v sinc tour two edg uo map e thu ju c j ju j henc costo bound shown tight theorem exist tsp instanc optim solut cost n o exist certain optim solut cost n o maximum independ set bound degre graph input instanc maximum independ set problem bound degre graph denot misb graph g degre vertex g bound constant d present algorithm perform ratio problem algorithm use two local search algorithm larger two independ set comput algorithm give us claim perform ratio refer two algorithm framework algorithm character local algorithm weight function simpli ji thu start initi empti set easi see iter correspond independ set g conveni way look algorithm follow defin swap process delet vertic includ j vertic set v gamma set s iter algorithm perform either howev interpret j applic swap thu algorithm may view execut swap iter algorithm termin neither two oper applic let denot optim independ set produc algorithm furthermor let optim independ set let make follow use observ ffl sinc vertex perform impli vertex v gamma must least one incom edg ffl similarli sinc swap perform impli ji gamma x j vertic gamma precis one edg come thu vertic gamma x must least two edg enter set rather straightforward consequ two observ follow lemma lemma algorithm perform ratio d misb proof two observ impli minimum number edg enter vertic gamma x hand maximum number edg come vertic vertic gamma x bound ji gamma x jd thu must rearrang get yield desir result nearli match approxim ratio d due hochbaum note result hold broader class graph viz kclaw free graph graph call exist independ set size k larger vertic independ set adjac vertex lemma appli d next object improv ratio use algorithm combin algorithm follow lemma use slightli differ count argument give altern bound approxim ratio algorithm constraint size optim solut lemma real number c d algorithm perform ratio d gamma c misb optim valu proof note earlier vertex v gamma must least one edg come set least vertic must least two edg come therefor follow inequ must satisfi thu final observ lemma show algorithm yield better approxim ratio size optim independ set rel small algorithm simpli classic greedi algorithm algorithm conveni includ framework use direct local search let ni denot set neighbor vertic weight function simpli ji jd difficult see start empti independ set local algorithm direct search weight function simpli simul greedi algorithm greedi algorithm exploit situat optim independ set rel larg size use fact exist larg independ set g ensur larg subset vertic g rel small averag degre follow two lemma character perform greedi algorithm lemma suppos exist independ set x v averag degre vertic x bound ff ff greedi algorithm produc independ set size least proof greedi algorithm iter choos vertex smallest degre remain graph delet vertex neighbor graph examin behavior greedi consid two type iter first consid iter pick vertex outsid x suppos ith iter pick vertex exactli k neighbor set x remain graph sinc one k vertic must also least k edg incid them loos least k edg incid x suppos p iter occur let observ secondli consid iter greedi select vertex x loos vertic x x independ set thu total size independ set construct greedi algorithm least p cauchyschwartz inequ therefor rearrang obtain thu result follow lemma nonneg real number c gamma perform ratio d gamma c misb optim valu least d gamma cjv jdc proof observ averag degre vertic bound jv gamma ojdjoj thu use fact joj d gamma cjv know algorithm comput independ set size least joj henc suffici determin rang valu c take follow inequ satisfi substitut bound valu ff rearrang term equat yield follow sinc c must strictli bound d quadrat equat satisfi choic combin result lemma choos largest allow valu c get follow result theorem approxim algorithm simpli output larger two independ set comput algorithm perform ratio perform ratio claim essenti d improv upon longstand approxim ratio d due hochbaum howev recent flurri new result problem berman furer given algorithm perform d even d fix constant halldorsson radhakrishnan shown algorithm run kcliqu free graph yield independ set size least nd combin algorithm cliqueremov base scheme achiev perform ratio d acknowledg mani thank phokion kolaiti help comment suggest thank also giorgio ausiello pierluigi crescenzi guid us intricaci approxim preserv reduct avail literatur it r new local search approxim techniqu maximum gener satisfi problem approxim solut np optim problem proof verif hard approxim problem optim problem local optima effici probabilist checkabl proof approxim maximum independ set bound degre graph introduct theori complex complet approxim class gener firstord spectra polynomialtim recogniz set comput intract guid theori np complet improv approxim independ set boundeddegre graph effici bound stabl set approxim npcomplet optim problem approxim longest path graph syntact versu comput view approx imabl approxim properti np minim class hard approxim minim problem quantifi approxim travel salesman problem distanc one two analysi local search problem heurist tr ctr bruno escoffi vang th pascho complet approxim class beyond apx theoret comput scienc v n p august angel evripidi bampi laurent gourv approxim pareto curv local search bicriteria tsp problem theoret comput scienc v n p januari jame b orlin abraham p punnen andrea s schulz approxim local search combinatori optim proceed fifteenth annual acmsiam symposium discret algorithm januari new orlean louisiana jukka suomela approxim identifi code locatingdomin code inform process letter v n p june cristina bazgan bruno escoffi vang th pascho complet standard differenti approxim class polydapx dptascomplet theoret comput scienc v n p june friedrich eisenbrand fabrizio grandoni complex fix paramet cliqu domin set theoret comput scienc v n p octob alex character np optim amort queri complex proceed thirtysecond annual acm symposium theori comput p may portland oregon unit state jianer chen xiuzhen huang iyad a kanj ge xia polynomi time approxim scheme parameter complex discret appli mathemat v n p januari moni naor kobbi nissim commun preserv protocol secur function evalu proceed thirtythird annual acm symposium theori comput p juli hersonisso greec harri b hunt iii madhav v marath venkatesh radhakrishnan s s ravi daniel j rosenkrantz richard e stearn parallel approxim scheme class planar near planar combinatori optim problem inform comput v n p februari