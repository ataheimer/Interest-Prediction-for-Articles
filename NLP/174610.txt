t nestedgraph model represent manipul complex object a three recent trend databas research objectori deduct databas graphbas user interfac draw trend togeth data model call hypernod model singl data structur model hypernod graph whose node graph hypernod type type too nest graph give theoret foundat hypernod type show type check tractabl show also convent typeform oper simul graph type includ cyclic type hypernod model come equip rulebas queri languag call hyperlog complet respect comput updat defin oper semant hyperlog show evalu perform effici discuss also use hyperlog support databas brows essenti featur hypertext databas compar work graphbas data modelsunlik previou graphbas model hypernod model provid inher support data abstract via nest graph final briefli discuss implement dbm base hypernod model b introduct recent databas research focuss deduct objectori databas deduct databas extend relat data model rulebas comput rule enabl deriv further intent tupl store extension tupl deriv tupl use pure queri purpos insert databas convers objectori databas start semant data model typic support object ident inherit complex object extend featur method encapsul objectori program thu deduct objectori databas larg complementari former support extension intent defin relat fundament data abstract concept classif identif inherit encapsul convers latter support abstract concept support relat natur alli henc recent research aim integr two paradigm integr gener taken rout extend logicbas deduct databas languag featur object ident set function method inherit contrast paper report upon graphbas approach integr use graph two firstli graph formal defin wellunderstood structur secondli wide accept graphbas formal consider enhanc usabl complex system graph use conjunct number convent data model exampl hierarch network model entityrelationship model recent extens thereof complex object variou semant data model graph hypergraph also use recent data model tool right give comparison recent work approach section paper direct graph also foundat hypertext databas databas graph consist node refer unit store inform typic text name link link connect two node sourc destin link travers either forward from sourc destin backward from destin sourc process travers name link examin text associ node call brows typic simpl queri facil consist stringbas search provid use identifi initi set node prior brows featur hypertext dynam creation new node link motiv previou research outlin abov develop graphbas data model call hypernod model support object ident arbitrarili complex object wellsuit implement hypertext databas contrast graphbas model use nest possibl recurs defin graph term hypernod hypernod pair ne node direct edg node hypernod thu unlik graphbas model hypernod model provid inher support nest inform label hypernod uniqu serv object identifi illustr hypernod figur repres coupl c consist two peopl per per whose children nest within hyper node figur show children person per would becom visibl expos hypernod label per per observ figur hypernod differ hypergraph generalis node hypernod oppos generalis edg hyperedg name bob surnam smith child per person name mari surnam jone child per person fig exampl hypernod name jill surnam smith child none person per person name jack surnam jone child none person fig hypernod note label c perper figur superscript tag coupl person respec tive explain sequel tag indic type associ hypernod type give us mean defin databas schema enforc constraint structur content hypernod type too repres nest graph queri updat use formal hypernod also note use node none person figur denot not present hypernod model come equip comput power declar languag call hyperlog model languag share featur deduct objectori databas common deduct databas languag hyperlog rulebas support deriv databas updat common objectori databas hypernod model support arbitrarili complex object data abstract concept classif via type identif via uniqu label encapsul via nest graph show structur inherit also support natur nest graph structur in paper use nest hypergraph treatment equal applic simpler nest graph hypernod model also show method support parametris hyperlog program hypernod model support main featur hypertext databas string arbitrari length support primit type unstructur text repres text node hypernod encapsul within number hypernod henc text share set text fragment easili repres node hypernod annot link repres hypernod singl incom edg sourc node singl outgo edg destin node hypernod encapsul annot inform exampl actual link label descript semant link creator link date creation nest hypernod abstract tool greatli facilit design brows dens connect databas graph uniqu model final hyperlog support databas brows generalpurpos declar queri latter facil use creat context brows first introduc hypernod model present paper expand upon work sever direct includ express represent comput effici infer support hypertext implement issu also describ recent work extend model includ type extend hyperlog perform delet well insert outlin paper follow section discuss fundament hypernod model name hypernod type also discuss represent express type check complex section give syntax semant hyperlog discuss complex evalu hyperlog program comput updat express also show hyperlog use databas brows section compar work graphbas languag model section briefli describ prototyp implement conclud section summari result hypernod model section discuss fundament model name hypernod type defin hypernod repositori section defin type type repositori section also examin effici type check section illustr use type via extend exampl base upon flight book databas final section discuss represent express model hypernod hypernod repositori section introduc underli data structur hypernod model name hypernod defin hypernod repositori set graphdefin equat defin hypernod valu assign indetermin set equat solv begin recal definit direct graph direct graph order pair n e n finit set node e n n finit set direct edg simplic use term graph direct interchang similarli term edg direct edg also use notat n n interchang n edg purpos hypernod model need two disjoint set constant finit set primit node p countabl infinit set label l assum set p includ alphanumer string element p denot identifi start lowercas letter element l denot identifi start uppercas letter graph hypernod model defin equat form e g l ne graph n p l term equat hypernod equat exampl follow p p n n label name spous titl ms mr a b floyd tring primit node hypernod repositori or simpli repositori finit set hypernod equat satisfi follow two condit two equat left hand side h label appear right hand side equat exist equat label left hand side given hypernod repositori hr denot labelshr set label appear equat hr primhr set primit node appear equat hr exampl four equat satisfi criteria hypernod repositori note condit h correspond entiti integr requir sinc equat view repres realworld entiti similarli condit h correspond referenti integr requir sinc requir exist entiti referenc hypernod repositori view store set graph may refer graph via label altern sinc hypernod repositori set equat would like uniqu solut indetermin ie label g l welldefin domain domain cannot univers wellfound set sinc hypernod equat may cyclicli defin for exampl equat defin p p abov howev appeal aczel theori nonwellfound set solv hypernod repositori non wellfound set subsum wellfound set includ circular set ie set may contain themselv shown set setdefin equat of hypernod repositori special case uniqu solut univers nonwellfound set thu hypernod repositori hr uniqu solut univers nonwellfound set solut assign label g left hand side equat nonwellfound set term set hypernod denot hyp hr g simpli hypg hr understood context hypernod hypg order pair ne n set primit node hypernod e n n we note order pair ab view set aab exampl given hypernod repositori consist four equat ppn n abov ignor node set graph simplic spousenametitlemrinitialbsurnametringspous spousenametitlemsinitialasurnamefloydspous note set hypn hypn wellfound one set hypp hypp non wellfound one sinc contain themselv type type repositori next two section extend model incorpor type also graph defin type repositori type analog hypernod equat hypernod repositori hypernod defin mean hypernod particular type show test hypernod repositori welltyped perform polynomi time respect size repositori section illustr type via extend exampl base upon flight book databas purpos defin type assum avail two disjoint set constant finit set primit type tp everi primit node n p uniqu primit type tp countabl infinit set type label tl everi label hypernod repositori tag uniqu type label cf type object identifi objectori databas analog primit node label distinguish primit type type label use identifi start lowercas letter former identifi start uppercas letter latter assum everi type t primit otherwis distinguish primit node none denot not present see below node use model miss incomplet inform final assum set primit type includ type string type defin mean equat form mf graph tp tl call equat type equat type reposi tori tr finit set type equat satisfi condit h h hypernod repositori section again appeal theori nonwellfound set solv type repositori ie assign valu univers nonwellfound set call valu type denot hyp tr t hypt tr understood context valu take form pair mf set primit type type f m m also make reason assumpt primit node label distinct primit type type label ie p l tp thu overlap data hypernod meta data type hypernod type repositori merg one repositori well uniform storag data meta data mean meta data queri updat use formal data name hyperlog type hypernod defin recurs follow given hypernod ne type mf say ne type mf exist homomorph f n preserv type satisfi follow condit condit stipul hypernod must contain node edg conform node edg intend type condit stipul hypernod must contain least one instanc everi node edg intend type last two condit restrict sinc primit node none use place miss inform type individu hypernod generalis type hypernod repositori follow hypernod reposi tori hr welltyp respect type repositori tr everi label g labelshr hyp hr g type hyp tr t follow theorem state test hypernod repositori welltyped tractabl result follow observ order test hypernod repositori welltyped fix homomorph f map primit node label type check criteria equat hr equat hr check maximum n node e edg right hand side hypernod type equat test achiev time proport mn e theorem test whether hypernod repositori hr welltyp respect type repositori tr perform time polynomi number equat hr maximum size individu equat flight book databas exampl illustr type consid databas store inform book flight passeng schema databas specifi type flight_bookings_schema figur use equationbas pictori represent graph interchang also omit type tag label understood context fig exampl schema rf flight_bookings_schema airlin airport flight_bookings_schema contain six type i rf shown figur repres rout flight fli each rout follow number flight ii pt shown figur repres passeng ticket each passeng bought one ticket iii tc shown figur repres ticket coupon each ticket consist number coupon notic share graph ticket graph tc pt iv fc shown figur repres flight coupon each flight book number coupon v airlin airport shown figur contain known airlin airport respect fig rout flight fli them rf airport to_att airline_att flight date_of_dep_att time_of_dep_att time fig passeng ticket passeng dependents_att name_att passeng date_of_issue_att fig ticket coupon class status_att class_att date_of_issue_att coupon fig flight coupon time_of_dep_att date_of_dep_att flight class status_att class_att coupon fig set type airlin airport airport airlin remain type need fulli specifi flight_bookings_schema airlin airport shown figur time date fare name shown figur final nat shown figur fig type airport airlin airport name_att code_att string name_att code_att string fig type date fare time name string string hours_att initial_att amount_att currency_att month_att day_att make sever observ type fig natur number type i edg type use repres attribut exampl flight_no_attnat rout adopt convent primit type end _att repres attribut name one primit node primit type node appear instanc exampl primit node flight_no airlin appear figur assum type flight_no_att airline_att respect practic user introduc new primit type set tp time popul type introduc new primit node set p ii edg type also use repres binari relationship exampl routeflight rf gen eral relationship manytomani due fact instanc defin homomorph type howev cardin constraint enforc within updat program give exampl section below iii possibl defin recurs type exampl passeng whose depend also type passeng nat contain itself iv type nat use repres natur number hypernod model repres hypernod contain primit node none nat success natur number success nest see figur describ calcul perform number section v hypernod type flight_bookings_schema flight book databas typic instanc one node type rf pt tc fc airlin airport repres routeflight passengerticket ticketcoupon flightcoupon relat also airlin airport note flight_bookings_schema schema design use hypernod model compar entityrelationship er approach howev two fundament differ two model approach stress firstli type directli model complex object may hierarch cyclic cannot model directli use er diagram secondli type encapsul type exampl flight_bookings_schema encapsul rf tc fc pt airlin airport ticket encapsul date fare encapsul encourag stepwis schema design and case schema larg mani interconnect render schema much easier display comprehend illustr specif instanc type figur show four hypernod r two version r note r type rout first version r sinc condit t t section violat r amend type rout replac name flight_no ad edg airlin air specifi edg attribut from_att to_att result r r r fig rout r pari london airto airlin flight_no london athen airflight_no airlin airairlin name none airport airflight_no airlin figur show first three natur number figur show hypernod air air type airlin note air two code fig first three natur number nonefig two airlin ba british airway name code code oa olymp olymp airway namenam figur show hypernod european american asian european american type airlin asian violat condit type correct ad primit node none airlin fig set airlin european an american incorrectli type asian asian american none airlin figur show hypernod pt pt type pt note depend nest finit depth final figur show hypernod n n type name f type fare type date enforc meaning date either achiev defin appropri primit type day fig two instanc passengerticket relationship passeng f none fare date_of_issu name depend depend name date_of_issu fare month year via updat program fig name n n fare f date d smith a mr smith m mr amount currenc titl initi surnam surnam initi titleyearday month express represent type type check constitut power data model integr check tool sinc allow databas schema repres enforc also storagelevel optimis carri base type informa tion hypernod model typecomplet sens allow typeform oper graph definit appli arbitrarili mani time also cyclic type passeng figur cyclic hypernod p p section support bear two point mind show convent typeform oper simul use graph definit given type t repres set type hypernod type contain one node type empti set type repres hyper node empti type airlin airport figur instanc european american figur illustr set type given type n attribut name n such flight_no_att airline_att from_att to_att repres record type type rout flight figur time date fare name shown figur illustr record type note record type bipartit graph also note construct differ usual idea record sinc attribut multivalu ie may one edg eman instanc type t enforc singl valu encod updat program hyperlog given record type t repres relat type sett compon type record type may record type nest relat also repres type flight figur ticket figur illustr nest relat type given type repres map type type rf pt tc fc shown figur illustr map type exampl type exampl instanc nat_to_nat ident function id map natur number itself map greater map natur number smaller natur note partial map repres without violat type correct so long least one edg map exampl map greater element sourc edg maxim number maxnum sink edg final given type record type attribut type n contain primit constant first second nth respect gener then given type n type defin t r t r instanc heterogen set isol node aris particip edg t edg aris edg t manipul hypernod section introduc hyperlog declar queri updat languag hypernod model hyperlog program consist set rule bodi rule consist number graph call queri may contain variabl act templat match equat hypernod repositori head rule also queri indic updat if ani undertaken match graph bodi evalu program compris repeat match set rule hypernod repositori updat infer section describ syntax hyperlog section defin match queri rule bodi hypernod repositori section describ infer updat queri head rule section defin oper semant hyperlog program via fixpoint oper address effici express issu hyperlog section address effici infer comput updat express conclud section brief discuss databas brows support hyperlog chosen rulebas languag hypernod model two main reason firstli highlevel declar natur languag blend well graphbas data model secondli languag express see below fact complet respect comput databas updat consequ program frequent invok optimis builtin without compromis semant languag candid optimis arithmet function databas brows function syntax hyperlog purpos hyperlog assum countabl infinit set variabl v avail denot element v uppercas identifi end alphabet assum set variabl v set label l disjoint also assum variabl type superscript type tp tl howev often omit superscript understood context hyperlog rule a possibl empti set graph bodi singl graph head call graph queri queri may variabl label may variabl node set also node edg may negat mean absent intuit formal queri equat form e ne graph ii n disjoint union two set n n n contain posit node n contain neg node iii e disjoint union two set e e e contain posit edg e contain neg edg condit iv restrict edg posit node clearli posit edg contain neg ie absent node imposs also sinc edg contain neg node neg edg contain neg node meaningless simplic denot node n n n edg three exampl queri which inform find rout flight number rout airlin air which inform check whether rout flight number greater nat_to_nat x nat x find number greater equal use greater map section hyperlog program finit set rule rule express form queri exampl give program ignor node set graph simplic gener transit depend passeng place inform map trans_dep passeng passeng hyperlog program p repres label graph follow rule p add node set n two graph q r bodi add edg set e edg r bodi q assum label p r bodi drawn set program rule name prog whose member distinct set hypernod label l set type label tl exampl program repres graph shown figur deps_prog bodi bodi uniqu identifi drawn prog in subsequ figur program often dispens outer program label note figur rule head share rule graphic represent program figur give exampl rule bodi also share semant share rule head di junction head infer bodi true convers semant share rule bodi conjunct rule head infer rule bodi true final note graphic represent program hypernod type graph encapsul within requir uniqu label for exampl two graph label trans_dep figur queri rule bodi queri bodi rule act templat match equat hypernod repositori defin match process need concept substitut variabl constant appropri type substitut q set assign x x distinct variabl v c distinct element l p type x applic substitut q queri e equat eq result substitut x left hand side right hand side queri c given hypernod repositori hr queri match queri respect repositori substitut q variabl queri constant drawn exist equat extend definit set queri q q q n substitut q match set queri match queri q taken separ note definit assum herbrand univers close world assumpt allow us infer negat node edg absenc posit match cf nonmonoton formal exampl given hypernod repositori contain follow rout set possibl match four queri xr y xr y xr respect queri rule head queri head rule indic updat undertaken match queri bodi rule rule r program p may thu modifi equat hypernod repositori ad delet node edg right hand side accord posit neg node edg head r furthermor may variabl appear head r appear bodi denot set variabl new r case head r match exis equat repositori set new equat gener one posit variabl new r label left hand side new equat hitherto unus hypernod repositori program p chosen nondeterminist also p consist number rule r r r set new label gener set variabl new r new r pairwis disjoint clearli new label may left dangl refer execut program p thu relax condit h definit hypernod repositori section assum equat dangl label g null graph nullt defin follow type t illustr hypernod program program deps_prog figur gener transit depend passeng place inform map trans_dep pass_to_pass trans_dep trans_dep fig program gener depend passeng depend passeng passeng passeng depend x z z program figur gener greater relat natur number assum natur number contain node set distinguish hypernod label number program figur place result hypernod passeng pay fare ticket program figur add passeng p depend passeng p delet null valu might fig program gener greater relat greater number greater z z greater number nat fig program find passeng pay usdollar passeng amount z nat passeng fare greaterz nat currenc passeng result amount z nat passeng fare greaterz nat currenc passeng result p first record depend p note edg p none passeng also delet also note that semant updat program passeng number depend fig program add p depend p passeng none passeng depend passeng program figur replac old time departur flight fl flight new time by typecorrect fl must old time fl program illustr cardin time_of_dep attribut limit fig program replac time departur flight fl t time_of_dep flight final program figur restructur inform passeng store number map cf function data model rather one hypernod per passeng cf relat data model fig program restructur passeng inform number map pass_to_str pass_to_str pass_to_str pass_to_pass surnam titl string string string z surnam initi titl passeng name depend initi conclud section note possibl write hyperlog rule delet equat thu practic garbag collect achiev outsid hyperlog oper semant hyperlog program section specifi oper semant hyperlog via ari oper inferphr p hyperlog program hr hypernod repositori inferphr return new hypernod repositori differ hr insert delet infer hr fire parallel rule p oper fixphr comput fixpoint p respect hr success applic inferphr begin defin two binari oper set equat given two set equat hr hr consist i everi equat hr hr g labelshr labelshr ii everi pair equat hr left hand side g equat hr hr consist i everi equat hr g labelshr ii everi pair equat hr left hand side g equat now let r rule q q q q n program p head q queri q match set queri q q q n given q let q new substitut new r defin follow i new ii one match q q let q new arbitrari one match new label superscript appropri type denot singleton set qqq new n eq po r q singleton set qqq new n eq r q note equat neg r q may right hand side graph sinc may case edg n n e case n n n n final defin main oper inferphr provid set infer insert set infer delet intersect ie provid wish infer made presenc conflict sinc want declar semant equal hold defin inferphr old hypernod repositori hr conclud defin oper fixphr comput fixpoint hypernod program p respect hypernod repositori hr a fix k follow proposit state fixphr inde hypernod repositori ie satisfi condit h h section proof proposit follow easili definit inferphr proposit fixphr hypernod repositori cours comput fixpoint might termin exampl follow program gener successor nat natur number x nat assum represent natur number use assum alreadi repositori clearli program carri gener successor ad infinitum rule contain variabl head bodi way nontermin aris exampl follow program insert delet per c ad infinitum follow proposit state that comput fixphr termin result repositori uniqu gener new label choic substitut q new proof follow observ nondeterminist step inferphr proposit fixphr uniqu draw new label l choic q new conclud section note fixphr defin ignor typecorrect new repositori fact static type check program perform fixpoint comput program p typecorrect rule r p typecorrect rule q q q q n typecorrect queri q partial type final queri q partial type graph n n e e satisfi condit section respect type t make number observ firstli verifi queri bodi rule partial type prevent evalu program priori typeincorrect secondli queri head rule partial type contain insert hypernod repositori fixphr must well type we recal section null graph nullt assum dangl label type t thirdli delet rule head may caus condit t t section violat situat allow occur either signal runtim error insert as part oper partial type graph appropri node edg nullt order simplifi program specif adopt latter solut effici infer section examin effici inferphr oper begin observ inferphr decid sinc given repositori hr finit number match q queri q respect hr due fact finit number constant drawn hr furthermor rule match q bodi r q new either chosen arbitrarili finit number exist substitut obtain finit number new label consid two aspect effici inferphr complex find match queri respect hypernod repositori potenti number match queri next theorem state find match queri respect hypernod repositori gener npcomplet theorem find substitut q match queri q respect repositori hr npcomplet proof first show nphard show problem contain subgraph isomorph known npcomplet subproblem let q posit queri form g n e element n variabl type let equat hr result follow sinc q requir onetoon map ne ne next show problem np given queri first guess substitut q queri respect hr equat hr left hand side qq done remain show test whether equat match queri perform time polynomi size ne ne result follow sinc examin definit match given section see test perform time proport nn despit neg result find match less expens case certain graph exampl case graph repositori graph queri tree problem solv polynomi time size repositori practic much data recordbas correspond graph repositori forest see exampl graph previou exampl forest equival one tree whose root label graph match queri tractabl respect number match queri may exist exponenti number match exampl given queri n element n variabl type equat number match nn n negat node queri also lead complex consid exampl match follow rule bodi string clearli may larg number match all string constant databas name person per problem avoid allow variabl appear neg bodi rule without also appear posit there then given rule q q q q n variabl appear n also appear n j construct substitut q q q q n match posit inform first thi techniqu commonli known rang restrict exampl rang restrict string rule bodi name peopl thu string x neg variabl problem neg inform neg constant node also lead addit complex occur within queri variabl label consid exampl match follow case hyperlog evalu least make use type inform search match within hypernod type person reduc cost find match posit inform problemat clearli given queri variabl n greater number possibl substitut variabl again type tag variabl narrow number choic edg inform if ani also help here addit recordbas data whose attribut valu polynomi bound eg singlevalu attribut number match queri polynomi size repositori express comput clearli hyperlog power languag respect express comput updat fact comput complet updat complet first demonstr comput complet hyperlog show simul counter program known comput complet counter program manipul natur number store variabl call counter four oper allow counter x counter denot assign addit counter program support sequenti composit goto statement condit upon counter variabl simul counter hyperlog equat distinguish left hand side ctr nat ctr nat ctr nat say recal natur number repres success nest primit node none nat sequenc fire rule counter program use set distinguish label current step contain node set hypernod label seq step step start program hypernod assum exampl assign zero counter ctr achiev insert node set delet nonzero element alreadi assign valu ctr counter ctr achiev follow rule ad one ctr achiev follow rule may gener new natur number nat subtract one ctr achiev follow rule test ctr zero achiev use queri bodi rule final sequenti fire rule condit goto achiev associ step rule updat seq hypernod current step exampl assum program four step goto statement step simul follow rule conclud section examin express hyperlog respect databas updat first defin updat context defin concept updat complet analog previou work relat databas given type repositori tr defin set insttr contain hypernod repositori welltyp respect tr defin updat partial recurs map insttr insttr cgener c gener introduc intuit mean that apart set distinguish constant c which may empti set structur databas relev updat valu constant data base case updat u cgener follow hold given finit set c constant whose type contain primtr labelstr hr insttr isomorph r map primit node primit node label label invari c ruhr equal urhr renam newli gener label set c may thought constant primit node label appear explicitli updat program thu queri languag updat complet hypernod model precis defin set updat defin abov updat complet hyperlog particular follow similar result logicbas languag compar semant use hyperlog databas brows consid queri and updat databas partial specifi content hypernod contrast brows allow user navig structur databas independ actual valu case hypernod model navig follow edg either forward backward descend node parent graph ascend parent graph node show navig oper implement hyperlog gener difficult user predict type hypernod encount brows databas order facilit brows introduc type supertyp everi type ie consid hypernod primit node type ani first defin three type instanc type context typic contain two node one type current_hyp contain hypernod type current_nod contain specif node within hypernod current context thu record hypernod cur_hyp contain current hypernod navig cur_nod contain specif node within current hypernod current brows current hypernod updat hypernod old say hypernod new rule similarli current node updat old new rule observ rule verifi new current node inde node set current hypernod order navig forward store hypernod cur_out current_nod node connect current node edg outgo initialis previou content cur_out use rule store next node cur_out use rule similarli order navig backward store hypernod cur_in current_nod node connect current node edg incom initialis previou content cur_in cur_out store previou node cur_in use rule order navig upward store hypernod cur_up current_nod hypernod contain current hypernod initialis previou content cur_up use rule final order navig downward store hypernod cur_down current_nod node contain node set current node if primit node initialis previou content cur_down use rule brows use hyperlog investig particular shown hyperlog support declar queri content structur hypertext databas databas construct associ hypernod fragment text use hypernod store name link fragment histori hypernod record user navig databas number altern trail set store navig function support includ display hypernod and associ text four oper describ abov comparison relat work section compar hypernod model hyperlog relat languag model begin logicbas databas languag iql semant hyperlog partli deriv next consid three recent graphbas data model final consid recent work hypergraphbas model iql incorpor objectident type rulebas queri languag updat complet fixpoint semant hyperlog similar discuss label gener semant differ iql invent object ident gener new label necessari consequ new graph infer wherea iql gener object ident assign valu independ event also iql type construct use tupl set union intersect constructor hyperlog one generalpurpos graph constructor simul these next compar hypernod model three recent graphbas data model logic data model ldm good graphlog ldm databas schema direct graph instanc consist column tabl associ entiti particular type valu also ldm schema graph use three type node basic for primit data type composit for tupl type collect for set type wherea repres tupl type set type one generalpurpos graph constructor graphlog queri languag oper databas compris direct label graph a semant net edg graph repres predic unlik hyperlog graphlog queri formul graph whose edg annot predic transit closur thereof or gener regular express queri graph match databas graph return subgraph thereof good graphicallyrepres function data model associ transform languag good emb semant node edg graph node printabl nonprint edg singlevalu multivalu queri good transform languag graph call pattern match subgraph total instanc graph cf match queri hypernod repositori contrast hyperlog rulebas updat good instanc graph updat five graphicallyrepres primit oper add delet node edg oper call abstract incorpor pattern summari featur common model databas consist singl flat graph drawback that practic complex object consist mani interconnect node hard present user clear way contrast hypernod databas consist set nest graph uniqu featur model provid inher support data abstract abil repres realworld object separ databas entiti good allow abstract oper gener nonprint entiti connect other relat entiti level cf nest set graph within graph unlik good graphlog label edg hypernod model howev attain data model express encapsul edg would label good graphlog within one hypernod similar label exampl repres set good edg hypernod conclud section review recent work hypergraphbas data model comparison work model first observ hypergraph model hypernod encapsul content hyperedg within hypernod contrast multilevel nest provid hypernod cannot easili captur hypergraph hypergraph use model pageori hypertext databas node hypergraph associ page inform hyperedg consist relat set label direct edg node direct edg share hyperedg queri hypergraph navig use number predefin brows forward backward along direct edg set mark node mark new set node read set page associ current mark node queri current state save reset current state view creat databas hypergraph updat number primit oper unlik hypernod model hypergraph type updat semant con strain also unlik hyperlog queri databas content support hypergraphbas model data access present aim integr brows queri model entiti repres node relationship hyperedg result hypergraph transient last durat queri session start consist one hyperedg contain databas entiti hyperedg ad respons user queri stage hypergraph travers move within hyperedg hyperedg hyperedg via common node number differ work own firstli databas entiti assum type store tupl singl flat relat secondli attribut entiti repres graphic within hypergraph exist underli relat thirdli although brows graphbas queri consist specifi booleanvalu express valu attribut henc hybrid model brows queri obtain describ data model call groovi graphicallyrepres objectori data model valu groovi realworld entiti repres mean instanc object schema show represent object schema mean hypergraph lead natur formalis notion subobject share structur inherit also show instanc object schema repres hypergraph label object identifi groovi conceptu data model influenc develop hypernod model supersed recent work type hyperlog implement system architectur implement current come end twoyear project whose goal implement prototyp dbm base hypernod model tailor need hypertext databas architectur system shown figur graphbas user interfac hyperlog evalu transient hypernod store storag manag figur hypernod databas system architectur architectur storag manag store hypernod type program index manag support effici three oper i given label g return uniqu graph ne ii given primit node n return set label g g r equat g iii given label g return set label g g r equat g detail descript storag manag appear briefli storag manag support number object store object store contain graph one type two object store reserv storag type program associ object store label tabl map label physic address graph defin therebi implement oper i abov oper ii implement use simpl prefix btree oper iii implement extend hash scheme oper invok hyperlog evalu match queri evalu comput fixpoint program respect repositori verifi program correctli type updat hypernod amass transient hypernod store infer step evalu current use bottom up naiv evalu hyperlog program although look optimis fixpoint comput draw exist optimis techniqu logic databas languag semina evalu present hypernod model graphbas data model store nest graph form equat manipul via rulebas languag key innov model formal foundat graph set theori use graph throughout level user interfac physic level inher support data model concept object ident complex object encapsul provis type type check associ queri languag hyperlog support queri brows allow deriv databas updat uniform storag data hypernod meta data type procedur data hyperlog program examin effici type check shown perform polynomi time also examin express represent comput updat model shown hyper log comput updat complet although evalu hyperlog program intract gener case discuss case evalu becom tractabl compar model graphbas model comparison highlight advantag nest graph type instanc lev el final briefli discuss prototyp dbm architectur implement current research effort direct toward tailor hypernod dbm need hypertext includ optimis hyperlog support version provis specialpurpos access method implement effici brows text retriev oper acknowledg hypernod project support financi uk scienc engin research council grant number grg r procedur declar databas updat languag object ident queri languag primit fixpoint extens firstord logic dataloglik languag formal model object orient databas logic program databas ps entityrelationship model toward unifi view data extend databas relat model captur mean introduct survey mendelzon a hypertext databas implement use hypernod model johnson d three principl represent semant network graphori object databas model visual formal databas model m hypernod model associ queri languag objectori data model formalis hypergraph logic languag data knowledg base complex object model semant issu deduct databas logic program close world databas relat model relationvalu attribut function data model data languag daplex research direct objectori program data model flexibl hypertext databas system storag manag hypernod model principl databas knowledgebas system transient hypergraphbas model data access tr relat model relationvalu attribut hypertext introduct survey algorithm spirit comput visual formal principl databas knowledgebas system vol databas model survey applic research issu logic languag data knowledg base data model flexibl hypertext databas system object ident queri languag primit untyp set invent comput queri fixpoint extens firstord logic dataloglik languag logic program databas complex object model entityrelationship approach transient hypergraphbas model data access hypernod model associ queri languag objectori data model formalis hypergraph graphlog graphori object databas model procedur declar databas updat languag function data model data languag daplex three principl represent semant network extend databas relat model captur mean entityrelationship modelmyampersandmdashtoward unifi view data comput intract new approach databas logic objectori databas storag manag hypernod model ctr stefan g hild alexandra poulovassili hyperlog system databas queri brows proceed workshop advanc visual interfac may gubbio itali sankhayan choudhuri nabendu chaki swapan bhattacharya gdm new graph base data model use function abstractionx journal comput scienc technolog v n p may mark leven alexandra poulovassili kerima benkerimi sara schwartz eran tuv implement graphbas data model complex object acm sigmod record v n p dec manoj chavda peter t wood toward odmgcompli visual object queri languag proceed rd intern confer larg data base p august alexandra poulovassili stefan g hild hyperlog graphbas system databas brows queri updat ieee transact knowledg data engin v n p march mark leven georg loizou graphbas data model ramif ieee transact knowledg data engin v n p octob giorgio busatto hansjrg kreowski sabin kusk abstract hierarch graph transform mathemat structur comput scienc v n p august salvator t march charl a wood gove n allen research frontier object technolog inform system frontier v n p juli