t studi termin negoti dialogu a dialogu repres power mean solv problem use agent explicit knowledg represent exhibit goalori behaviour recent year comput logic gave relev contribut develop multiag system show logicbas formal effect use model implement agent knowledg reason interact use gener dialogu among agent prove properti termin success paper discuss mean termin agent dialogu identifi tradeoff ensur dialogu termin therefor robust agent system achiev complet problem solv then build exist negoti framework dialogu obtain product combin reason activ two agent logic program defin syntact transform exist agent program purpos ensur termin negoti process show transform make exist agent system robust possibl situat nontermin dialogu reduc class reachabl solut specif applic domain resourc realloc b introduct dialogu one exibl interact pattern multiag system someth complet xed protocol total free convers intuit dialogu pure reactiv questionansw sequenc client server architectur frame rigid protocol rather kind interact ground express enough knowledg represent dialogu start gener need achiev explicit goal goal initi dialogu could exampl persuad anoth parti nd inform verifi assumpt case negoti dialogu instanc agent need negoti oper environ limit resourc avail goal dialogu obtain resourc gener idea appli dierent scenario dierent mean recent year comput logic gave relev contribut develop multiag system prove eectiv model implement agent knowledg reason interact work argument per suasion certain circumst consid suitabl techniqu strategi support convers goal achiev led mani argument framework often tri embrac hard problem result good descript model them lack time execut model sadri et al describ logicbas approach negoti take account persuas argument classic understand ing hand allow prove properti termin correct complet strength approach propos execut model use achiev implement system area negoti gener result dialogu proper tie like termin success author consid use logicbas languag negoti identifi two import comput problem use logicbas languag negoti problem determin agreement reach negoti problem determin particular negoti protocol lead agreement paper tackl problem termin agent dialogu start discuss mean termin agent dialogu show tradeo ensur termin dialogu therefor robust agent system achiev complet problem solv then show idea appli practic concret case negoti framework build agent dialogu obtain product combin reason activ two agent perform abduct deriv logic program show agent program transform order ensur termin negoti process dene three dierent degre transform show make agent robust possibl situat nontermin dialogu reduc class solut found specic applic domain resourc realloc agent dialogu termin robust vs com plete agent societi categor term open exibl stabil trust claim wherea open societi support open ex ibil close societi support stabil trust author suggest two class societi semiopen semiclos balanc tradeo aspect mani situat need societi support them case dialogu problem determin tradeo still hold dialogu use mean let heterogen agent communi cate despit dierenc among them without necessarili stick given protocol hand let agent openli join societi control individu access them problem could aris divers instanc dialogu last forev work focus negoti dialogu let us start describ intend dialogu let us exampl dene formal next section follow dialogu inspir agent ask agent b resourc a nail need carri task ie hang pictur request refus ask b reason whi purpos acquir addit inform nding altern solut goal exampl gener dialogu sequenc altern dialogu move performa tive perform messag form tellsend recipi subject time time particular understood transact time concept termin negoti dialogu recov idea certain point agent make nal move cours agent suppos recogn move intend termin dialogu agent make nal move agent could keep exchang messag without get end exampl show dialogu two particularli overpolit agent exchang greet exampl situat exampl could due fact agent program forc repli incom greet equal greet imagin loop condit like could unpredict aris time put togeth open societi agent independ program obviou solut problem could forc agent tell thing twice measur realli solv problem exampl show agent could exchang slightli dierent messag still get stuck loop condit exampl then could think introduc restrict measur eg base messag pattern prevent agent tell messag whose pattern previou one dialogu could result prevent agent nding solut or agreement case negoti could found otherwis exampl show possibl success dialogu would solv resourc realloc problem agent obtain screw b therefor execut plan achiev goal hang pictur dialogu would permit agent b prevent make move propos exchang such mean promis perform inherit twice exampl still unless consid gener and therefor restrict pattern threat nontermin remain exampl could evok familiar situationth pattern could be case tell a b hello underlin indic whatev ground express spent moment life deal small children exampl challeng perform also deriv mean ask justic dialogu partner said exampl end realiz intuit follow reduc set dialogu move agent exchang cours dialogu reduc univers reachabl solut negoti problem think choic extent dialogu constrain certain pattern must left system design next section describ concret negoti framework rstli introduc extend make use logic formal framework cours agent dialogu rule knowledg express agent abduct logic program base that introduc sever syntact transform program make robust variou degre nontermin ect discuss tradeo final section prove theorem determin bound maximum length dialogu measur term number exchang messag extend result dialogu sequenc abduct negoti dialogu framework go sketch section deriv compos knowledg represent includ abduct logic program alp languag proofprocedur commun layer agent provid suitabl architectur includ particular planner commun layer share blackboard agent post retriev messag far knowledg represent say agent declar ativ represent goal g belief b intent i ie plan achiev goal agent access belief mean predic haveresourc needresourc similar way intent intendintent purpos negoti agent obtain miss resourc retain avail one necessari plan current intent focu paper termin issu space limit describ framework detail here although need give intuit abduct proofprocedur adopt agent order prove termin result section negoti framework classic understand abduct reason mechan allow nd suitabl explan certain observ goal base abduct program gener abduct program express term tripl logic program set abduc predic ie open predic use form explain sentenc ic set integr constraint given goal g abduct aim nding set abduc predic suppos true thu enlarg p order entail g adopt automat proof procedur support suitabl agent cycl instanc observethinkact implement concret concept entail respect knowledg base express abduct logic program term execut proof procedur within agent cycl allow produc hypothes explan consist agent constraint ic certain phase agent cycl reach constraint play major role abduct sinc use drive formul hypothes prevent procedur gener wrong explan goal reason abduct origin use diagnosi expert system recent time mani dierent understand abduct reason conceiv abduct use eg plan schedul hypothes made refer task schedul constraint use eg prevent task overlap resourc con ict argument framework abduct propos build argument knowledg base abduct use model agent dialogu follow argument approach particular abduc hypothes dialogu per form abduct agent program provid dialogu constraint red time agent expect produc dialogu move eg time anoth agent send request resourc move produc hypothesi must assum true order keep knowledg base consi tent agent knowledg consid consist agent repli partner move accord current statu knowledg base use abduct agent dialogu context oppos less formal approach sever advantag among possibl determin properti dialogu itself relationship hold specic implement due oper semant adopt abduct proofprocedur follow show dialogu constraint taken simpl agent program exampl constraint express term conditionact rule lead particular case percept anoth agent dialogu move observ phase express new dialogu move action phase instanc rst constraint exampl read if agent receiv request anoth agent x resourc r ha tell x accept request rule interpret think phase iff abduct proof procedur frame observethinkact agent cycl ifftermin program paper make concret assumpt syntax languag knowledg base agent except assum contain notion liter complement sentenc true fals languag equip notion entail that everi ground liter languag either liter complement entail liter complement entail time iff rewrit abduct proofprocedur consist number infer rule two basic infer rule unfold backward reason propag forward reason implic obtain repeatedli appli infer rule proof procedur either integr constraint given program alp result rewrit neg liter fals a describ proofprocedur detail here focu issu proof termin give character class ifftermin program ie abduct logic program ifftre ground queri nite intuit reason program ifftermin recov presenc program rule constraint whose combin lead innit propag unfold possibl identifi three case gener follow p q repres liter unfold unfold here sake simplic consid ground program thu assum p ic alreadi instanti result could gener nonground program unfold propag propag propag case p unfold propag q vice versa ad innitum order character class program termin dene properti acicl tailor case alp relationship iff proof procedur iffacicl fact alp iffacycl ifftermin alp iffacycl found level map jj that everi ground instanc everi claus ifdenit p say everi ground instanc everi integr constraint ic say k neg liter say bodi integr constraint presenc level map ensur situat occur agent program call iffacycl program accept fact cannot guarante termin agent get stuck innit branch deriv tree produc therefor dialogu move all follow alway requir agent program accept work build result identi class agent program ensur termin negoti dialogu sequenc dialogu dialogu let us formal dene intend dialogu sequel capit letter stand variabl lowercas letter stand ground term denit perform dialogu move perform dialogu move instanc schema form tellx y utter receiv perform time perform utter subject content per form express given content languag denit languag negoti languag negoti l possibl innit set possibl non ground per form given l dene two possibl innit subset perform il fl l call respect initi move nal move exampl languag negoti follow taken initi nal move l are g paper interest negoti exchang resourc assum alway exist request move initi move languag negoti denit agent system agent system nite set a x ground term repres name agent equip knowledg base kx assum agent system agent share common languag negoti well common content languag given agent x a equip l dene set l x perform schemata x receiv utter l x perform schemata x utter receiv note allow agent utter perform themselv sequel often omit x clear context simpli write l l alp framework outgo perform abduc impli denit allow word exist rule agent program contain outgo perform head negoti protocol speci set dialogu constraint dene follow denit dialogu constraint given agent system a equip languag negoti l agent dialogu constraint x possibl nonground ifthen rule form utter pt receiv c conjunct liter languag knowledg base x variabl dialogu constraint implicitli univers quanti outsid perform pt refer trigger next move c condit dialogu constraint intuit mean dialogu constraint pt agent x follow certain time dialogu agent utter perform pt correspond instanc dialogu constraint trigger and condit c entail knowledg base x x receiv next time behaviour dialogu constraint achiev employ automat proof procedur within observethinkact agent cycl said befor execut proof procedur within agent cycl allow produc dialogu move immedi dialogu constraint red concret exampl dialogu constraint allow agent x accept request exampl trigger tell y a request give r condit have r next move tell a y accept request refer set dialogu constraint associ agent x sx call agent program x often omit x clear context unimport order abl gener dialogu two agent program must properli combin exhibit two import properti determin exhaust say agent program determinist exhaust gener exactli one next move pt condit c except pt nal move call p space note c gener might depend sever time point possibl necessarili includ therefor indic explicitli time variabl it accept exhaust determinist agent program exampl program found denit dialogu dialogu two agent x set ground perform fp that given p utter time p utter agent x viz y p i if ani utter agent viz x p utter agent fx yg exist ground dialogu constraint condit dialogu fact sequenc perform condit agent utter altern dialogu condit dialogu gener dialogu constraint togeth given knowledg base determin whether condit trigger dialogu constraint entail dialogu ground nal move name p ground instanc perform fl intuit dialogu begin initi move accord given languag negoti kind dialogu relev purpos start request resourc r knowledg represent chose refer framework call miss rs set resourc agent miss start execut intent i request dialogu initi agent x whose intent contain r set miss resourc denit request dialogu request dialogu respect resourc r intent agent x dialogu agent that consequ dialogu agent intent might chang accord way intent modi classic type termin request dialogu given sequel assum termin request dialogu given resourc r intent i return intent ensur termin consid dialogu particular iff deriv obtain interleav resolut step made two agent therefor extend termin result dialogu program termin dialogu program argu possibl reason innit deriv tree still mutati mutandi section let us consid three case see occur knowledg distribut two agent b put left side rule constraint name agent whose program contain it assum agent program accept unfold unfold unfold propag unfold propag propag propag a forbidden program accept requir b repres possibl caus nontermin sinc q abduc therefor possibl commun b third case let us consid pt tellb a subject t qt tella b subject t appar threat termin instanc case exampl subject hello could therefor introduc restrict dialogu protocol order prevent situat cost reduct space reachabl solut explain exampl way pass comput thread agent dialogu partner b abduc repres dialogu move head one as diaolgu constraint three degre restrict order tri prevent propag caus innit dialogu move gener case make sure integr constraint agent program trigger innit mani time purpos dene transform map element p domain accept exhaust determinist agent program anoth element s domain dene follow denit agent program transform given languag l agent x agent program sx p transform respect given set liter dene follow way otherwis therefor correspond restrict p check t transform function call restrict accord program element codomain accept program restrict accord partner agent produc move trigger dialogu constraint whose condit restrict veri agent jump nal state thu interrupt dialogu easi prove that given transform function associ restrict p check t p check t ground possibl instanti pt exhaust determinist program exhaust determinist program ie map p p choic restrict made sever way dene three dierent kind restrict formal ect consider section i check made ground instanc predic ii check made predic pattern iii check made order let us consid one one case i check made ground instanc predic restrict applic dialogu constraint prevent trigger twice instanc dialogu move dierent time line character dialogu given prevent situat innit pure loop one exampl gener constraint agent a restrict case could be check guarante termin nite number step though shown exampl check predic pattern could implement case restrict check case check made predic pattern restrict polici alreadi mention drawback limit particular situat exampl could caus agent contain program follow dialogu constraint tellb a anyth solut could establish order among dialogu constraint agent go on let us point problem nontermin agent start negoti dialogu although result independ thi fact true dialogu termin either agent hand broadli speak one start one expect wait repli vice versa now intuit agent start negoti process let us say a ideal draw tree possibl dialogu root initi move let us say tella b request correct tree could drawn knew bs program exactli assumpt want make howev rst approxim assum b constraint ha then gener tree node possibl dialogu move branch integr constraint lead one move anoth one exampl tree languag l negoti program dene figur purpos draw tree goe initi move possibl nal move order function allow order dialogu move consid ongo dialogu valid far tree graph explor one direct the one lead nal move import notic agent program p allow us draw tree order that order function must exist call exist function acycl section case ifftermin program function exist possibl adopt polici iii easi imagin dialogu two agent nonacycl program like termin formal instanc order function call rank function dene follow request accept refus challeng justifi refus promis refus accept request accept refus challeng justifi refus promis refus accept figur dialogu tree denit rank function rank function map languag l set natur number n procedur dene given agent program p follow two step first label perform l appli one follow rule rule produc chang label p l label yet p l label yet p l alreadi label let labelp r then ic possibl appli label languag ie possibl complet procedur nite mani step mean program acycl otherwis label languag let r max pl labelp r nite then rank dene labelp rank function rankp n n n dene p l restrict turn out check is move higher rank made move lower rank worth notic introduct restrict modifi exist languag rank call polici check order restrict previou one sinc allow jump backward one branch anoth one and again possibl success dialogu could reject hand appli accept exhaust determinist program enough ensur termin state follow theorem theorem finit termin dialogu check order let b two agent provid accept exhaust determinist pro gram let as program restrict accord check order polici therefor dialogu b termin nite mani move particular r maximum rank dialogu move move proof proof theorem given induct given dialogu agent b start a let r maximum rank dialogu move as program denit rank node rank must leav therefor nal move leav rank r initi move have p j nal dialogu termin p j nal rankp utter b ie j even p j must comput a either nal move rank rankp j p j nal rankp utter ie j odd p j must comput b either nal move move next move p j nal dialogu termin otherwis p j rank denit therefor move p j rank r r r j now dialogu two move rank next move last one sinc cannot two move rank maximum rank r maximum number move comput dialogu r nonnal move utter either agent exist uniqu next move p j sinc agent program exhaust determinist moreov reason requir either parti comput dialogu move termin nite number step sinc program accept therefor dialogu termin move termin dialogu sequenc easili extend termin result case dialogu sequenc formal dene aim collect nite mani miss resourc missingi respect intent i whose cost dene cardin missingi space formal describ dialogu sequenc dialogu still would like give intuit sketchi proof second theorem go enunci follow dialogu sequenc dene agent cannot ask resourc twice agent within sequenc sinc dialogu modifi agent intent dialogu sequenc fd associ seri intent fi agent intent result initi intent denit termin sequenc dialogu sequenc dialogu si respect initi intent agent termin when given n intent n exist possibl request dialogu respect n start could due two reason either miss resourc intent ie costi n as program constraint start request order ensur termin could program agent everi singl dialogu set miss resourc rather shrink grow size agent program dialogu decreas cost intent call agent selfinterest ration case given system n agent intent i length lengthsi sequenc si dialogu respect intent i ie number dialogu si bound product n costi possibl prove termin properti hold selfinterest ration agent whose program restrict accord check order polici theorem termin sequenc dialogu restrict agent program let system n agent si sequenc dialogu respect initi intent selfinterest ration agent a let agent program accept exhaust determinist particular let as program restrict accord check order polici si termin nite mani dialogu move particular r maximum rank dialogu move accord as rank function si termin move proof sketch number dialogu si bound product costi dialogu termin r move whole sequenc dialogu termin termin ncostir dialogu move end would like make parallel concept restrict introduc ensur termin negoti dialogu selfinterest ration assumpt theorem inde selfinterest ration could consid limit reduc space agent program ect reduct space achiev solut resourc realloc problem it easi imagin situat two negoti agent get stuck local maximum none want give away resourc result respect due reduct weak notion complet introduc work dealt problem termin dialoguebas agent negoti build exist dialogu framework cours dialogu determin rule constraint embodi agent program introduc sever syntact transform rule modifi program toward better robust two result proven determin upper limit maximum length dialogu sequenc dialogu measur term number exchang messag result gener reect exist tradeo need ensur termin negoti process loss term reachabl state univers possibl solut problem address negoti r argument dialogu negotia tion categori arti dialogu team format iff proof procedur abduct logic program relat truth mainten abduct role abduct logic program logic program multiag system reach agreement argumen tation agent reason negoti argu dialogu negoti agent varieti dialogu sequenc logic agent negoti among selfinterest comput limit agent commit dialogu basic concept interperson reason languag negoti tr loop check logic program reach agreement argument specul comput multiag belief revis logic program toward multiag system categori artifici societi dialogu team format dialogu negoti ctr ralf schweimeier michael schroeder parameteris hierarchi argument semant extend logic program applic wellfound semant theori practic logic program v n p januari pietro baroni massimiliano giacomin giovanni guida selfstabil defeat statu comput deal conflict manag multiag system artifici intellig v n p juli iyad rahwan sarvapali d ramchurn nichola r jen peter mcburney simon parson liz sonenberg argumentationbas negoti knowledg engin review v n p decemb