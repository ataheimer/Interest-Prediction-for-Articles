t integr test interact control datapath a system consist interact datapath control util builtin self test bist datapath control tradit test separ isol compon environ system test work facilit test datapathcontrol pair integr fashion key approach addit logic system interact exist control push effect control fault data flow observ datapath regist rather directli control output result reduc bist overhead need datapath control test independ allow complet test interfac datapath control includ fault manifest isol fault coverag overhead result given four exampl circuit b introduct system consist interact datapath control typic design synthes test datapath control independ even though two oper insepar pair separ caus difficulti even datapath control design current address are m nourani dept electr engin univers texa dalla po box ec richardson dept electr engin univers akron akron oh c papachrist dept eec case western reserv univers euclid avenu cleveland oh permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit direct commerci advantag copi show notic first page initi screen display along full citat copyright compon work own other acm must honor abstract credit permit copi otherwis republish post server redistribut list use compon work work requir prior specif permiss andor fee c associ comput machineri inc testabl taken separ two taken combin testabl may sever degrad dey et al addit separ test datapath control may result neglect controlstatu signal use commun two moreov fault seen modul interact other fault due phenomena like crosstalk reflect bakoglu fault creat signal slew among core receiv signal sparmann et al fault caus excess power consumpt circuit nourani et al few ani synthesi tool address issu test datapath control interact pair integr way main goal work test controllerdatapath pair realist quickli without neglect signal use commun two key success integr system test controllerdatapath pair provid method propag observ effect certain control fault datapath observ datapath regist rather control output way avoid test hardwar overhead associ observ control output directli approach test interconnect datapath control effect would separ test datapath control moreov approach detect certain type redund control fault that although may affect overal system function controllerdatapath pair deleteri effect system increas power consumpt time approach substanti increas overal system cost basi techniqu addit small finit state machin fsm interact main control fsm purpos make control fault observ datapath regist state machin design work independ implement detail designfortest techniqu design tool use synthes control datapath relat work mani wellknown problem control optim work present devada newton ashar devada lagnes thoma appli finit state machin fsm decomposit techniqu improv control area perform import state assign discuss demich et al devada et al among other recent effect control design power consumpt explor landman rabaey work benini demich use special state assign reduc power benini et al add combin logic origin control avoid inact state transit selftest design base bist builtinselftest research involv control focus test plan test schedul abadir breuer kime saluja jone et al hellebrand wunderlich use addit test regist implement system function support selftest pipelinelik control mmc control scheme breuer lien abl test chip modul via boundari scan bu local dedic test control discuss joersz kime reduc overal test overhead heurist exampl eschermann wunderlich use special state assign feedback polynomi mukhereje et al use onehot encod breuer et al employ microprogram hardwir implement control method propos kuo et al add addit edg fsm make correspond architectur testabl author hsu patel note fsm easili control requir long synchron sequenc propos method improv fsm testabl none approach use unifi model test controllerdatapath pair instead datapath control test separ differ test session approach basic test scheme similar bhatia jha propos control output signal multiplex datapath primari output thu make directli observ observ control datapath fault separ gener impli test time due separ test session overhead due direct observ each dey et al observ even control datapath testabl separ combin usual much lower coverag degrad opinion occur due correl depend control signal then improv testabl author propos redesign control break correl control signal organ paper paper organ follow section present system model test datapathcontrol pair issu central test control present section issu includ classif type fault control impact control fault nonfunct aspect system manufactur power section detail solut integr datapathcontrol test experiment result shown section conclud remark section model system model introduc carletta papachrist datapath repres behavior data flow graph dfg node repres oper addit multipl edg repres transfer data structur datapath consist arithmet logic unit alu mul tiplex regist buss respons data comput assum datapath compos function block like shown figur behavior control view state diagram specifi time step variou oper data flow graph done work control implement structur finit state machin use random logic tradit approach test controllerdatapath pair shown figur pair complet split two part test independ control datapath test differ time multiplex may use share test resourc exampl one tpgr one multiplex use instead two tpgr shown figur tradit design designfortest decis made one compon without think compon use context pair approach control datapath ms alu multiplexerbu rl regist r fig one function block defin datapath style control statu done misr tpgr data data statu misr tpgr a b start control control fig separ test a control b datapath control start done data data control statu tpgr misr fig complet integr test datapath control advantag test compon design intend there fore fault coverag individu compon high design allow howev approach undesir test interfac control datapath requir larg amount insert disadvantag address complet integr approach shown figur integr approach controllerdatapath pair treat insepar unit two part test simultan one motiv treat controllerdatapath pair integr system shown figur figur show control datapath singl control line extend one other independ test control line would tap output control could observ control line misr control datapath fig illustr disadvantag separ test fault coverag time clock separ integr a datapath fault coverag time clock separ integr b control fig fault coverag curv datapath control differenti equat solver test separ test togeth pair directli misr even though arrang allow good observ control still segment control line shown figur dot line observ control line extend far datapath may control multipl regist multiplex even part segment test test datapth difficult ensur coverag complet line particular test line seri segment may miss problem due phenomena like crosstalk reflect signal skew show oper overal system note control datapath laid separ block control line may significantli longer length wire may therefor suscept fault integr test observ control datapath ensur test entir control line figur use differenti equat solver exampl compar separ integr test controllerdatapath pair separ fault coverag curv shown datapath control seen curv fault coverag degrad datapath control test togeth control observ control statu line reduc integr test line longer directli access goal research achiev high qualiti integr test overcom difficulti work concentr exclus test control integr environ focu enhanc observ control line datapath addit extra logic system work complement previou work report carletta papachrist develop scheme datapath test integr way work datapath exercis accord normal behavior even test guidelin base highlevel testabl metric given modifi controllerfunct irredund fault cfi controllerfunct redund fault cfr redund fault systemfunct irredund fault systemfunct control fault design number fault are cfr cfi sfi sfr poli fig classif control fault percentag fault belong categori exampl control ing datapath ensur qualiti test suffici two piec work use togeth ensur full integr system test control fault analysi classifi stuckat fault intern control sever group shown figur carletta et al first divis base whether fault affect function control function mean inputoutput behavior synthes control oper normal mode fault never affect output synthes control normal mode control function redund cfr cfr fault detect even direct observ control output normal mode oper detect fault may requir exampl applic transit design left unspecifi perhap state control unus state input combin never occur work fummi et al show control resynthesi use remov fault concern note stuckat fault insid control may affect control output sequenti way caus control output chang one control step control state diagram kind fault call controllerfunct irredund cfi affect output control least one time step control run normal mode fault kind caught independ test control oper control normal mode observ control output directli divid controllerfunct irredund fault two sub group base whether fault affect function datapathcontrol pair system systemfunct irredund sfi fault fault chang inputoutput behavior system whole fault control clearli affect function perform datapath exampl fault whose effect chang care specif multiplex select line caus oper done incorrect data therebi affect chang result comput systemfunct redund sfr fault fault affect inputoutput behavior system even though affect inputoutput behavior control one exampl system function redund fault fault affect bit control output time step bit dont care specif exampl fault may affect multiplex select line time step multiplex idl time step regist driven multiplex load select line multiplex dont care multiplex take part registertoregist transfer depend control synthes select line either although actual valu select line make differ term signal propag local area multiplex signal never written regist never use comput therefor affect function perform datapath fault control caus select line valu chang way observ chang datapath function datapath affect differ fault classif model fummi et al subtl import fummi et al fault distinguish term control function specifi design wherea consid function synthes control design specif output may unspecifi wherea synthes version specif valu chosen output byproduct synthesi fummi et al fault affect care specif control output view irredund howev systemfunct redund fault affect even care specif output control sens fault due redund logic within system even control datapath redund consid separ combin system may redund exampl suppos fault control caus regist load time step load extra load overwrit import part comput de tectabl howev extra load may write regist current hold comput valu hold comput valu use again case extra load affect function datapath possibl determin whether fault caus chang regist load line time step systemfunct redund analyz lifespan variabl bound regist variabl aliv time step extra load serv redo previou comput fault systemfunct redund tabl show fault three exampl control present complet result section break categori control fault control systemfunct redund synthes control sfr fault exist trivial carletta et al show key remov sfr fault care consider mean dont care specif context controllerdatapath pair requir analysi lifespan variabl bound regist datapath control specifi way like contain sfr fault particular control system util gate clock design regist load necessari save result comput like contain signific number sfr fault input power w clock data line load line latch regist stop random fix random fix run random random stuckat run fix random a fault power presenc w increas multipl effect b tabl i power consumpt watt a four bit storag compon b four bit implement differenti equat solver presenc sfr fault power nonfunct effect sfr fault synthesi method use control impact mani kind controllerfunct redund systemfunct redund fault exist control carletta et al presenc fault affect function system howev fault may caus undesir nonfunct effect whether detect fault import depend concern design group respons manufactur reliabl qualiti assur one nonfunct effect systemfunct redund fault increas power consumpt excess power consumpt may undesir right also caus degrad system perform chip heat up sfr fault caus harmless unnecessari load garbag valu regist result unnecessari power consumpt regist combin logic driven regist essenc fault undermin gate clock scheme use low power design show extent effect power measur dynam power consumpt bit storag element implement use compon micron vccdp datapath librari vlsi technolog compass design autom tool compass design autom ran compass toolset power enabl switch report averag power consumpt larg number random pattern tabl a show experi measur power consumpt fix mean fix signal randomli select valu kept unchang entir simul process random mean signal driven random pattern note even data input storag element fix consider amount power consumpt compon due clock signal systemfunct redund stuckat fault load line caus dramat increas power consumpt random data input power consumpt latch rise watt fix input power consumpt rise watt increas power one latch worst case j averag simul nonembed storag element verifi phenomenon occur storag element embed circuit repeat power simul complet design implement differenti equat solver here care inject fault systemfunct redund throughout experi function datapath remain faultfre case tabl ib summar result fault correspond two differ systemfunct redund singl stuckat fault two specif regist load line presenc fault caus increas overal power consumpt presenc fault caus increas column label multipl effect reflect worst case scenario particular exampl regist load often possibl without disrupt datapath function scenario multipl regist load multipl time increas power consumpt dramat anoth exampl undesir nonfunct fault effect presenc fault may indic manufactur problem take exampl aitken one manufactur problem seen real integr circuit crack insul layer time metal migrat crack form short systemfunct redund fault caus manufactur problem may indic seriou problem come short form therefor worth detect design solut section describ solut control test problem add small finit state machin fsm system fsm piggyback onto origin control interact control way effect controllerfunct irredund cfi fault systemfunct irredund redund sfi sfr within control push data flow observ output datapath regist goal scheme follow ffl scheme work exist adhoc systemat synthes control datapath pair without architectur chang ffl overhead scheme less overhead requir separ test scheme ffl scheme complement test scheme control datapath indic design make possibl detect sfr interfac fault ffl fault observ directli control output whether systemfunct redund irredund made observ datapath regist scheme key method push effect control fault control datapath interfac datapath regist condit done success explor section section show implement detail scheme explain finit state machin ad x z c e x z c ed e a b c fig propag fault effect control line data flow a multiplex select line b regist load line c closer view regist load line case system ensur necessari condit present observ fault datapath regist section show observ cost reduc observ singl bit pertin datapath regist rather whole regist propag control fault section discuss propag effect controllerfunct irredund cfi fault within control datapath cfi fault caus least one output control chang least one time step control schedul bar detail gate level analysi control want sure catch cfi fault within control must sure detect chang control line one time step key approach ensur chang control line caus chang data flow datapath follow consid multiplex select line fault effect regist load line stuckat effect regist load line stuckat effect separ figur a show fault effect select line multiplex at point a fault caus wrong path multiplex select time step control schedul time step exampl multiplex may pass incorrect valu instead correct valu x notic point b long x y turn alu perform oper correct xz effect fault propag datapath point c preserv fault effect propag point d regist must load time step otherwis result erron oper z never written therefor lost figur b illustr fault effect regist load line at point e suppos first fault caus load line stuckat time step case regist load be thu keep old valu rather obtain new valu ct notic output regist at locat d ct gamma ct ie miss load would written new valu regist assum system design redund comput done case least test pattern regist load line stuckat time step regist load be notic regist output at locat d new valu inadvert load differ old valu refer figur b see number way happen first all multiplex select line could chang valu sinc last time regist load operand alu come differ sourc notic long new sourc suppli differ data valu old sourc ie x y altern valu x may chang sinc x come anoth regist datapath possibl new valu written x case inadvert load caus xt z overwrit correct valu fault discuss regist primari output regist multiplex select regist load subsequ time step must serv propag erron valu regist output observ point exampl case regist load line stuckat time step inadvert load caus fault notic valu regist use least inadvert load take place note figur sole exampl method restrict specif architectur style multilevel multiplex fanout output arithmet logic unit multiplex regist invalid argument elabor shortli explain control fault observ implement purpos fsm add system allow us detect chang control output valu look output datapath regist rather directli control output themselv justifi method look singl function block datapath as shown figur singl time step would like abl detect chang multiplex select line regist load line time step follow requir ffl justif depend content regist load time step i ffl scheme work regardless valu ms rl method work freez origin control expand time step two time step first two step known valu differ suppos normal oper load regist accomplish complement multiplex select line load regist second two step control signal normal oper produc origin control unfrozen make transit next normal mode state illustr figur figur show test control time step normal would produc control signal ms expand two time step one produc one produc ms note side effect ms rl ms rl ms rl ms ms rl ms rl ms ms rl ms b oper test control a normal mode oper select regist load fig state diagram illustr ad fsm interact origin control ms ms ms ctl_clock rlrl r r r control test_mod mask mask ms rl ctl_clock ms rl fig one possibl logic implement fsm ad scheme slow execut control schedul factor two logic implement fsm need effect chang quit inexpens figur show one possibl implement elabor role ad fsm allow detect cfi fault within control best describ figur detail differ case note tabl show typic activ compon see figur time step howev simplic subscript shown figur r r denot content regist r multiplex select line ms ms respect also ms f denot multiplex select least one bit faulti due control fault ms f denot complement r f denot content regist r two situat ms ms ms ms ms ms rl ms ms f f sa rl faultfre circuit regist r observ content regist r ms rl detect sa ms detect faulti circuit ms rl sa rl faultfre circuit regist r observ content regist r ms ms ms ms ms ms ms ms ms f f sa ms detect faulti circuit ms rl detect a case r suppos load b case r suppos load fig effect interact control piggyback typic regist r time step figur show control fault caus chang control output ms rl line given time step observ check content regist r figur split two case case faultfre system regist load new valu time step i part a figur show content regist r faultfre case presenc three differ kind fault effect stuckat rl stuckat rl stuckat ms arrow show differ content regist indic fault detect figur easili seen fault caus rl stuckat ms stuckat time step detect note fault caus rl stuckat time step like one rl suppos fault controllerfunct redund target techniqu alu ms ms ms activ path fig activ path multilevel multiplex fanout case faultfre system regist load new valu time step i result case shown part b figur arrow show fault caus rl stuckat ms stuck at time step detect note fault caus rl stuckat time step rl suppos fault controllerfunct redund target techniqu mention earlier method push control fault data flow restrict specif architectur style fact figur ms refer select line multiplex forward data time step exampl figur show activ path data flow step fmsmsmsg ms indic select line three multiplex includ two multilevel multiplex complement desir effect is forward incorrect data alu similarli rl refer regist load data alu whether directli indirectli through mux figur exampl fanout multiplexeralu output regist driven alu could even benefici test sinc effect fault travel control datapath time step potenti influenc compon erron valu load check featur stem fact multiplex select line complement storag element load addit control state observ control fault import point effect fault move control line data flow move singl bit line multibit bu fault effect may seen one line bu figur c show transfer fault effect regist load line nbit wide data flow individu bit data flow shown move regist load line fault effect locat e locat d data bit fault effect chang bu locat depend specif valu data notic bit data x y specif notic bit data bu locat bit x equal bit y practic standpoint test datapath use reason larg number random pattern possibl observ control line fault without observ bit datapath bu singl bit suffic becaus bit choos like least pattern caus chang bit i explor argument quantit suppos pattern written regist random uniform distribut uncorrel time let c t denot bit tth pattern written regist observ bit regist output detect error affect regist load line whenev c word fault escap detect c tgamma pattern written regist assum c t random signal happen probabl must take valu n pattern probabl take particular valu given pattern therefor assumpt probabl fault escap detect drop exponenti test session length quit small even short test session note bit regist output observ probabl fault escap detect would even smaller n bit regist probabl would nn acknowledg practic circuit alu particular influenc random signal assumpt c t remain random often valid bit signal exampl alu multipli input first two bit output remain zero time probabl far ideal valu empir observ major arithmet logic alu random reduct invalid argument almost bit use observ seen exampl system fault coverag curv figur show effect observ singl bit either signific bit least signific bit regist versu observ datapath regist bit curv correspond singl bit observ rise bit slowli full observ curv reach final fault coverag one easili perform behavior simul regist transfer level datapath find bit success use observ previou work harmanani et al present random analysi dataflow graph base entropi simul tool analyz behavior comput random bit and overal signal gener alu experiment result section demonstr approach use sever exampl circuit circuit synthes high level descript use syntest synthesi system harmanani et al output syntest regist transfer level datapath state diagram control logic level synthesi done use asic synthes compass design autom suit entropi binari signal x defin as jxj denot bit width x p xi denot probabl x state i fault coverag time clock phase full observ msb observ lsb observ fig fault coverag curv propos test scheme control differenti equat solver datapath regist bit observ versu observ least signific bit regist tool compass design autom use finit state machin implement control base micron cmo librari vlsi technolog test pattern gener regist tpgr necessari builtin selftest bist synthes use compasss test compil fault coverag curv found result logic level circuit use att gentest fault simul att gentest use singl stuckat fault model probabl alias within misr neglect fault within tpgr test circuitri although datapath control test togeth separ fault coverag curv control clarifi result work four exampl circuit eight bit wide datapath first evalu third degre polynomi d second exampl implement differenti equat solver standard high level synthesi benchmark gajski et al third exampl anoth high level benchmark known facet exampl gajski et al final fourth exampl well known fifth order ellipt filter kung et al basi comparison show fault coverag transistor count result three differ test scheme togeth test correspond complet integr test datapath con troller addit hardwar ad intern system case drive input system tpgr observ system output make chang datapathcontrol interfac piggyback test correspond new test scheme facilit integr controllerdatapath test add piggyback finit state machin interfac datapath control drive input system tpgr observ one bit datapath regist separ test correspond independ test control separ system case drive input control tpgr observ control output directli transistor count given entir system given test scheme includ datapath control circuitri necessari test fault coverag time clock separ test piggyback test togeth test a polynomi evalu fault coverag time clock separ test piggyback test togeth test b differenti equat solver fault coverag time clock separ test piggyback test togeth test c facet benchmark fault coverag time clock separ test piggyback test togeth test d wave benchmark fig fault coverag curv control four exampl circuit piggyback test scheme includ transistor count ad finit state machin fault coverag result four exampl shown part a b c d figur respect fault coverag control onli fault coverag graph vertic axe show fault coverag percentag control fault detect horizont axe show time function clock cycl test control run normal mode case polynomi schedul five control step separ togeth scheme after exampl clock control run schedul time piggyback scheme action ad finit state machin serv slow speed twice slow clock control run schedul time see one penalti approach take approxim twice long fault coverag curv satur use piggyback scheme effect seen four exampl circuit howev seriou limit control test still quit short especi compar test datapath may easili order magnitud longer carletta papachrist expect togeth test scheme result low fault coverag control four exampl due fact difficult observ control output datapath scheme systemfunct redund fault go undetect hand sep bitwidth input data dout bitwidth output data r number regist number multiplex select line number statu line a paramet system size togeth piggyback separ test scheme test scheme test scheme width tpgr associ mux width misr dout associ mux gate xor r b test circuitri requir term paramet tabl ii test circuitri requir three test scheme arat test scheme good job test control scheme observ control output directli test scheme capabl catch controllerfunct irredund fault includ systemfunct redund one see curv piggyback scheme final fault coverag nearli high separ case indic piggyback success push systemfunct redund fault datapath tabl ii summar test circuitri need three test scheme term key system paramet includ tpgr misr mux associ them exampl mux need control whether data input datapath come tpgr as test mode system input as normal mode singl misr use test datapath control mux need determin compon drive misr given time tabl iii show rel size system implement three test scheme four exampl circuit overhead given rel overhead togeth test scheme sinc togeth scheme repres minim amount test circuitri use bist scheme togeth test scheme lowest area test circuitri sinc attempt made observ extra control datapath line drawback howev low fault coverag extrem separ test scheme highest fault coverag highest observ also highest area overhead rang exampl shown middl piggyback test scheme fault coverag almost good separ test scheme area overhead much lower overhead advantag piggyback scheme separ scheme aris two sourc first reduc area requir tpgr compar separ scheme due fact separ scheme tpgr must least wide enough gener test bit input datapath data control onc contrast piggyback scheme control line driven control tpgr must wide input data one extra bit start input control togeth piggyback rel separ rel design test scheme test scheme overhead test scheme overhead poli facet tabl iii rel size system three test scheme number transistor overhead figur rel size system togeth test scheme design togeth piggyback separ tpgr misr tpgr misr tpgr misr poli facet tabl iv compar tpgr misr overhead three test scheme number transistor togeth test scheme rel togeth method two test scheme similar save number associ multiplex often result signific area save second sourc reduc area requir misr due indirect observ control line datapath regist separ scheme requir misr wide enough watch output datapath output control whichev wider onc consid system control output outnumb datapath output misr must least big r m r number regist number multiplex select line piggyback scheme contrast requir misr wide enough watch r bit thu see larger comparison r save area misr similar save associ multiplex necessari share misr test datapath control thu circuit number control output outnumb number datapath output reason larg compar r see signific reduct amount observ circuitri need circuit may signific reduct amount observ circuitri may even grow slightli howev state benefit like detect fault would caus excess power consumpt still exist seen result test scheme requir slightli observ circuitri two circuit differenti equat solver number datapath output outnumb number control output save misr width possibl facet exampl eleven regist load line two multiplex select line here small rel r offset addit logic need finit state machin requir piggyback approach gener mani design number multiplex select line outnumb regist load line especi distribut multiplexor buse tristat buffer onehot encod multiplexor control use two circuit use piggyback scheme result reduct amount observ circuitri conclus paper propos scheme facilit test datapath control pair advoc test pair integr way rather test datapath control complet independ separ system environ test scheme add small finit state machin system serv enhanc observ control output control fault observ output regist datapath experiment result show use scheme result onethird test overhead requir scheme datapath control test sepa rate fault coverag good nearli good addit integr scheme control line use commun control datapath thoroughli test r construct optim test schedul vlsi circuit builtin test hardwar find defect fault model optimum heurist algorithm approach finit state machin decomposit state assign low power dissip ieee custom integr circuit conf automat synthesi gate clock power reduct sequenti circuit behavior synthesi hierarch testabl con trollerdatapath circuit condit branch comput design concurr control multipl bit structur test mainten control modul contain testabl chip synthesi control full testabl integr datapathcontrol pair testabl analysi insert rtl circuit base pseudorandom bist behavior testabl insert data pathcontrol circuit compass design autom mustang state assign finit state machin target multilevel logic implement decomposit factor sequenti finit state machin controllerbas designfor testabl techniqu controllerdatapath circuit optim synthesi selftest finit state machin synthesi testabl larg complex control method testabl insert rtl behavior structur syntest environ systemlevel design test effici pprocedur synthesi fast selftest control structur distanc reduct approach design testabl distribut hardwar approach builtin self test scheme overlay concurr test vlsi circuit test schedul testabl vlsi circuit vlsi modern signal process optim testabl architectur finit state machin architectur partit system level design synthesi optim hot code onchip control bist hardwar scheme integr controllerdatapath fault test fast identif robust depend path delay fault tr architectur partit system level design scheme overlay concurr test vlsi circuit highlevel synthesi effici procedur synthesi fast selftest control structur fast identif robust depend path delay fault activitysensit architectur power analysi control path controllerbas designfortest techniqu controllerdata path circuit behavior testabl insert datapathcontrol circuit scheme integr controllerdatapath fault test synthesi control full testabl integr datapathcontrol pair vlsi modern signal process behavior synthesi hierarch testabl controllerdata path circuit condit branch synthesi testabl larg complex control testabl analysi insert rtl circuit base pseudorandom bist find defect fault model distanc reduct approach design testabl optim testabl architectur finit state machin