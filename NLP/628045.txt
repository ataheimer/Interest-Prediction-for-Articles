t dynam negoti resourc manag data intens applic suit a abstractin contemporari comput network comput variou applic domain make increas demand system move data one place anoth particularli form soft realtim constraint brute forc techniqu implement applic type domain demand excess system resourc even though actual requir differ part applic vari accord way use moment sophist approach provid applic abil dynam adjust resourc requir accord precis need well avail system resourc paper describ set principl design system provid support soft realtim applic use dynam negoti next execut level abstract introduc specif mechan implement principl util principl execut level abstract shown design three resourc manag facilit dynam applic adapt gryphon epartpcip dqm architectur b introduct emerg class applic program stimul rapid evolut comput hardwar network distribut applic data intens requir divers data type beyond tradit numer charact type audio video stream move one comput anoth timesensit natur move stream data and similar target applic tradit hard realtim applic applic often refer soft realtim applic contrast hard realtim sy tem everi deadlin must met applic consid success although deadlin met distribut virtual environ dve one exampl soft realtim applic dve support logic world contain variou share entiti user interact entiti world use multimedia workstat dve dataintens sinc share inform must dissemin throughout network user machin mani class applic exhibit similar data movement characterist includ multimedia system imagebas inform system imag process system video conferenc virtual realiti purpos oper system manag resourc facil use process distribut data among object tradit gener purpos oper system design builtin polici resourc manag provid best effort satisfi resourc request accord rel inflex gener fair polici besteffort resourc manag polici typic includ support deadlin manag particularli precis natur deadlin manag depend applic semant soft realtim applic import specif data movement task depend import two entiti involv transfer one moment may import system user move data locat locat b user direct comput perform task depend b wherea minut later interact b may far less import sinc user shift focu anoth set comput entiti exampl suppos object contain video clip share two user joe betti two differ workstat interconnect network joe betti discuss video clip might import workstat high fidel move imag screen video continu run suppos joe betti shift attent differ set object longer necessari support data transfer rate requir high fidel video particularli maintain data transfer video clip use resourc need joe betti new activ resourc manag polici support applic sometim call usercentr type polici stress system cannot satisfi resourc request run process resourc alloc best satisfi desir user past year focus resourc manag techniqu support soft realtim data movement earli experiment indic oper system perform inadequ support type data movement howev observ effect resourc bottleneck could minim os employ alloc polici resourc direct applic or part applic need moment yet could chang user activ chang resourc manag polici need sensit dynam need user context applic therefor effort focus defin experi way system provid effect support applic as origin report confer paper paper deriv two primari contribut paper first identif set three principl guid develop soft realtim applic along explan mechan execut level implement three principl principl base requir dataintens soft realtim applic may collect requir resourc avail principl defin guidelin programm develop soft realtim applica tion serv requir system provid accompani support inform execut level abstract map resourc usag good defin uniqu mechan design applic manag realtim perform execut level abstract one concret mechan implement softwar embrac principl second contribut paper present evalu three specif aspect soft realtim support illustr util principl execut level mani contemporari applic target domain written objectori program requir support distribut object object manag polici crucial overal data movement perform gryphon distribut object system provid mean applic influenc system object placement cach consist polici gryphon use execut level tradeoff share object consist versu network bandwidth analysi experi show manag polici match applic strategi remot object refer perform improv sever order magnitud applic frequent need move larg amount stream data one devic anoth eg network display data move devic sometim need filter eg compressdecompress data extrapol miss section realtim parametricallycontrol inkernel pipe rtpcip mechan provid mean in sertremov kernellevel filter use move data devic execut perform agent epa employ anoth form execut level level determin confid reliabl applic pipelin servic request estim epa select level execut base applic servic estim configur pipelin control rtpcip oper adjust filter prioriti epartpcip facil provid form soft realtim control previous avail use inkernel pipe mechan gener soft realtim applic need certain resourc level order meet deadlin applic written dynam modifi process accord avail resourc cpu network bandwidth etc dynam qualiti servic resourc manag dqm use execut level allow applic dynam negoti cpu alloc result applic implement broad rang soft realtim strategi possibl system section explain system design principl show execut level provid mechan implement them section introduc gryphon distribut object system explain use execut level discuss perform approach section present epartpcip mechan show allow applic provid one approach soft realtim control inkernel filter mechan section explain dqm mechan use execut level discuss sever aspect behavior section summari conclus variou research address differ aspect soft realtim support eg see one problem mani studi inher definit term soft realtim mean applic almost alway meet deadlin comput prioriti elev deadlin missrat high applic period lengthen miss mani deadlin etc one conclus draw divers perspect characterist import one context anoth unfortun would difficult design os behav properli casebycas basi follow one might consid meta approach framework way applic make requir known os respons cast specif soft realtim requir framework respons applic design studi base meta approach best explain consid set underli principl deriv studi variou soft realtim applic particularli dve care consid type os support applic requir section explain rational principl principl themselv execut level realiz principl remaind paper show principl appli three differ aspect system support motiv principl target applic substanti data movement unit unit applic object compound object one intend repres person dve thread etc applic unit need abl chang import interact unit accord inform known runtim eg focu user attent base inform rel import unit chang dynam reflect best interest user repres target class applic built prototyp virtual plan room vpr multiperson dve support freeform commun manner similar electron meet room distribut virtual environ vpr world collect object vrml represent behavior vari complex compound object repres human particip an avatar becom part world user enter vpr basic role vpr provid realtim audio video support across network render object user screen accord user avatar orient provid environ one add domainspecif extens vpr clientserv system person use workstat implement humancomput interfac henc client machin must render visibl artifact vrml descript appropri object world caus behavior such modif object reflect appropri client vpr develop use begin explor system softwar design organ might wellsuit soft realtim applic programm environ quickli learn design object use differ strategi perform work accord perceiv import work user graphic object video stream focu user attent ie user orient avatar eye directli video stream object consider system resourc use render imag user realli care it three peopl use vpr two engag high frequenc manipul complex share object third person probabl want use inordin workstat resourc track minor chang share object user engag video stream system unabl deliv full frame per second user often choos run video playback frame per second rather fluctuat frame per second network bandwidth workstat rel underutil local resourc oversubscrib local resourc momentarili import network bandwidth process chang accordingli exampl applic throughput and therefor end user satisfact would improv workstat receiv uncompress data stream remot site rather decompress stream local receiv system design principl base experi vpr variou underli system develop rel straightforward set principl direct ongo system research though principl sim ple highlight characterist soft realtim applic domain current oper system address realtim mani aspect target applic domain involv period comput process must done repeatedli accord regularli occur deadlin exampl display frame updat must occur least time per second mani system design support per second howev user often abl toler certain failur meet deadlin especi mean anoth aspect user work receiv higher qualiti servic failur mode soften deadlin requir vari accord exact natur applic mix occasion miss deadlin accept provid regular consist miss deadlin small amount time may accept applic may abl scale back servic time requir make possibl system make dead line applic may abl scale back resourc usag unit meet deadlin etc principl resourc manag support divers definit applic failur provid suffici mechan react miss deadlin applic knowledg oversubscrib multithread system resourc manag must block thread alloc resourc other best effort resourc manag builtin polici guid way alloc resourc environ dve rel import thread chang accord natur relev object attent user resourc manag need addit inform perceiv situat inform avail runtim via applic principl applic provid inform singl number eg prioriti repres resourc util need resourc manag design use knowledg influenc alloc strategi dynam negoti convent environ applic make request re sourc assum resourc avail applic will turn provid best servic flexibl environ applic might request amount resourc k resourc manag unabl satisfi resourc manag could respond applic say offer k unit resourc base period usag form admiss hard realtim qualiti servic qo technolog applic could respond say would will chang say period would need k unit resourc etc is applic resourc manag potenti enter negoti whenev applic ask resourc assur resourc avail case period comput natur soft realtim comput make difficult applic provid optim request sinc know state system resourc hard realtim system and mani soft realtim system request made use worst case estim unfortun worst case request tend tie resourc time realli need aggrav oversubscript problem realtim system determin behavior admiss time requir applic unequivoc determin maximum amount resourc ever need hard realtim system support dynam admiss must analyz new request context extant resourc commit target domain applic may enter leav system time threadsobject may frequent chang resourc need suggest resourc request chang natur individu negoti might chang whenev unit make resourc request principl resourc manag interfac design level alloc negoti two parti negoti initi either parti time execut level mechan dynam negoti principl discuss respons soft realtim applic resourc manag commun interfac them first principl focus applic behavior applic address differ form soft realtim deal miss deadlin second principl address interfac applic resourc manag interact one anoth third principl concern resourc manag oblig negoti polici principl suggest resourc manag philosophi need applic assum part respons resourc alloc strategi principl yet fit within gener framework multiprogram oper system requir natur applicationsystem program interfac enhanc address principl other also recogn kind shift interfac could substanti improv overal system perform singleappl multiprogram domain eg see principl suggest framework applic resourc manag pose resourc alloc scenario one anoth accomplish provid languag interact ensur two parti prepar interact one anoth principl realiz use softwar abstract call execut level applic execut level defin design implement softwar applic execut level provid mechan design select soft realtim strategi still respons applic develop howev strategi select execut level allow applic specifi resourc requir consist strategi implement set execut level repres vari strata resourc alloc applic abl oper simplest case execut level applic are differ level differ resourc type applic unit provid highest qualiti servic abl acquir r j unit j resourc type applic writer also design first altern strategi use r j unit j resourc type provid degrad servic eg graphic figur may render well period may need longer frame updat rate may lower applic written run oversubscrib environ commonli use form execut level matter cours without system support exampl graphic program frequent use wirefram repres geometr solid certain phase graphic edit tabl show set execut level relat kind graphic program techniqu use vpr the tabl repres amount cpu time use variou render option vpr simpl move object chang process time rang execut level vari render light polygon frame per second max smooth x wirefram x smooth x smooth x wirefram x smooth x wirefram x wirefram x tabl vari resourc usag vpr paramet render mode wirefram flat shade smooth shade number specif light sourc number polygon those mark x use twice mani polygon mark x tabl show frame per second gener cpu time use percentag highest level opengl perform character organ similar perform measur show applic exhibit differ execut level cpu requir vari much factor see justif use execut level applic execut level defin total order resourc vector system resourc type underli theori approach none project describ paper current address one resourc type thu rel easi defin total order level increas ie qualiti solut decreas resourc requir also decreas fundament constraint approach make applic defin notion soft realtim even though resourc requir versu level monoton practic applic would normal linear level increas the qualiti applic servic decreas usual point applic provid servic exampl video frame rate stream video applic fall frame per second qualiti effect zero execut level mechan enabl applic resourc manag implement soft realtim consist principl describ abov figur a repres convent thread thread thread applic resourc resourc manag a convent thread thread thread applic negoti resourc resourc manag mechan execut level b execut level figur execut level api resourc manag relationship among thread applic resourc use the undirect solid line dash line figur repres control flow among resourc resourc manag applic best effort approach resourc manag polici built resourc manag time design interact polici modul set applic figur b show new framework logic compon call negoti mechan interact applic use execut level conceptu negoti mechan appear convent applic resourc manag negoti mechan appear resourc manag capabl dynam negoti applic framework applic abl creat tactic defin manag soft realtim express resourc need resourc manag the negoti mechan use execut level support principl negoti mechan extens work done convent thread thread thread applic negoti mechan execut level object store gryphon orb figur orb gryphon resourc manag provid modul dynam negoti support principl execut level suffici languag support dynam negoti though problem shift applic negoti modul design distribut object manag studi realtim pipe control studi dynam qo manag studi employ differ approach design implement modul remaind paper consid studi detail gryphon distribut object manag network bandwidth limit resourc manag share aspect work object orient system natur studi distribut object manag mean address network bandwidth perform eg see gryphon enhanc convent distribut object manag such corba orb purpos gryphon support dynam negoti object placement polici accord need applic state system resourc figur describ gener architectur gryphon approach in context figur applic use corba idl interfac normal object refer enc supplementari languag describ object placement cach polici prefer applic supplementari part languag call polici hint set hint constitut one execut level eg distribut view object may use strong consist model one level weaker form consist lower level negoti mechan defin execut level order applic use definit direct gryphon accord observ perform system negoti mechan detect shortag network bandwidth lower execut level applic free bandwidth gryphon design analyz hint inform receiv applic set polici orb gryphon system support fundament principl describ section follow principl soft realtim use execut level applic variabl object coher object placement variou timeli updat polici principl applic knowledg applic suppli inform regard locat cach for level form per user per object updat granular consist requir principl dynam negoti applic dynam modifi object coher place ment timeli polici exampl user chang focu one set object anoth repres execut level realtim applic wide varieti object refer pattern exampl follow scenario repres one recur class vpr applic there also type though three illustr approach scenario gener radic differ set requir object manag scenario a learn laboratori dve use laboratori student small group student conduct variou experi student may brows differ experi without commun student join group work peopl laboratori number static object complex vrml specif eg lab apparatu document avatar move infrequ object move all scenario b collabor fli unoccupi air vehicl siewert built unoccupi air vehi cle floater test variou part epartpcip work see section vpr use fli floater ie one navig floater manipul virtual vpr scenario group peopl navig floater collabor work within vpr avatar virtual space togeth see object room scenario c weather model applic weather model highli data comput in tensiv end result weather inform display dve weather data partit small region subset intens process perform partit first phase process complet data fring subset distribut process comput continu scenario implement system like vpr object share across mani workstat caus substanti network traffic convent distribut object manag provid locat transpar though experi vpr show distribut compon need substanti influenc object locat polici without flexibl applic could make perform tradeoff base access demand sever techniqu reduc network traffic due remot object refer placement object store host x frequent referenc onli host y traffic delay applic could reduc store object host y cach object store host x frequent read host z keep copi object host z reduc network traffic consist object store host x rapidli chang arbitrari host read host y traffic process overhead host reduc allow keep outofd copi object as oppos updat ys copi time xs copi chang gryphon approach base idea applic compon capabl choos among techniqu sinc applic behavior critic factor benefit techniqu tabl repres relationship applic hint level scenario level hint semant central locat strong consist distribut locat cach locat best locat cach locat best locat cach strong strong consist locat best locat cach sequenti sequenti consist locat best locat app direct cach app direct cach n locat best locat cach updat propag updat frequenc tabl execut level scenario b b which differ primarili number object movement applic implement scenario b would use decreas amount network bandwidth decreas level higher level number scenario applic would inspir run lower higher level compon miss soft deadlin is level produc behavior though applic provid inform level level i overal system benefit due reduc network traffic distinct level relat use singl object storag locat versu distribut object multipl storag server would unusu applic option includ emphas central server caus higher network traffic level n applic fidel erod sinc level host machin allow chang object becom inconsist due lack updat propa gation the differ among level number updat host will miss scenario c tabl differ set data refer pattern two scenario and consequ oper differ set resourc alloc criteria scenario b data distribut host machin perform local comput best locat strong consist case again lower highernumb level repres situat use less network bandwidth mean applic must work achiev result bandwidth avail system level hint semant locat strong consist distribut locat strong consist locat best locat sequenti consist locat best locat cach locat best locat app direct cach app direct cach n locat best locat cach app direct cach differ algorithm tabl execut level scenario c perform analysi analyz perform gryphon system implement model base scenario and other discuss use character traffic pattern result differ object manag vpr object state chang object move it may also chang due behavior though simplif suffici analysi assum singl messag use move object messag small fit one network data packet tabl show paramet character messag traffic tabl show valu repres three scenario scenario notabl larg number object mani move also mani process use object final video fidel requir good scenario mani characterist scenario a except number object greatli reduc s repres differ kind applic mani move object object updat time rel high updat rate howev frame updat rate zero paramet use deriv equat three metric vpr amount network traffic vpr process messag per second tapp amount network traffic nonvpr process messag per second n number move object number object modifi process u updat rate move object l number process use object v number vpr process number static not move object f updat rate display frame r ratio updat get propag tabl paramet use model network traffic c weather model tabl characterist scenario use evalu gryphon system total total traffic network messag per second use model scenario gryphon system perform compar central distribut corba object manag system orb central corba object manag central orb singl server store object refer object requir remot refer addit sinc orb special knowledg applic send receiv messag requir determin state object orb central amount traffic server like bottleneck system orb distribut corba object manag distribut configur orb object randomli equal distribut among process orb central local object result messag traffic now access would gone central orb go process object locat distribut address implicit bottleneck due central configur vpr first part express repres read oper local client second part repres read extern client data store local server note express includ refer due frame updat a dve need render object would implicitli read object frame updat rate system gryphon locat polici object manag includ gryphon capabl act locat hint like system object evenli distribut across process case assum locat client make modif system gryphon locat cach polici object manag includ gryphon capabl act locat cach hint model reflect fact data push client instead pull via request messag ie remov x multipli reflect absenc send messag system gryphon locat cach consist polici configur full gryphon system model scenario scenario b scenario c system system system system system system scenario scenario b scenario c system system system system tapp comparison system scenario scenario b scenario c system system system system system total comparison tabl gryphon system perform comparison tabl summar network messag traffic use load gener three scenario support five differ object manag configur highlight result are system central corba system distribut corba subject substanti traffic other almost everi scenario due requir support locat transpar and support cach applicationfavor object placement substanti impact scenario c consequ gryphon perform much better system locat transpar cach system result larg perform gain scenario b result unnecessari cach consist updat scenario c network traffic scenario system zero sinc analysi show infrequ read small portion data case load neglig gener tabl show gryphon approach significantli reduc messag traffic rate compar approach total messag traffic total gryphon system fraction percent central distribut corba system three scenario work illustr object polici cast execut level support principl also show rel perform differ level experi result report inkernel pipelin modul thread control aspect work focus support continu media flow devic sever studi shown emb applicationspecif code kernel perform oper specif data stream eg see howev approach allow applic influenc way resourc alloc compon address applicationspecif tradeoff realtim parametr control inkernel pipe rtpcip facil provid mean insert ingdelet filter program intofrom logic stream two devic filter parametr control negoti mechan see figur execut perform agent epa negoti mechan interact userspac part applic dynam adjust schedul prioriti achiev soft realtim control pipelin epartpcip support principl soft realtim follow principl soft realtim divers form comput express term deadlin confid execut time reliabl analog execut level principl applic knowledg applic provid desir deadlin confid reliabl expect execut time rather simpl prioriti epa principl dynam negot epa support negoti manag pipelin admiss polici base rel execut time reliabl request deadlin con fidenc request confid deadlin may renegoti onlin epa polici admiss confid negoti deriv extens deadlin monoton schedul admiss polici relax hard realtim requir cpu schedul applic filter devic devic epa kernel user filter filter execut level parametr control figur epartpcip architectur ment worstcas determinist execut time provid epa provid confid reliabl semant onlin monitor actual reliabl admiss test order describ epa abl provid execut control term deadlin confid execut time reliabl review deadlin monoton hard realtim schedul show extend implement epa aspect work goal dynam negoti polici alloc resourc use move data one node anoth within one node one devic disk anoth devic sound card rtpcip architectur use exist techniqu creat modul embed kernel space extens devic driver cf devic interfac modul connect arbitrari pipestag filter pipelin dynam configur insert filter sourc sink devic interfac applic userspac monitor summari inform kernel order control movement data sourc sink devic purpos epa interact userspac applic modul pipelin specif provid statu inform userspac program accept paramet control behavior filter modul ensur data flow pipelin accord realtim constraint estim modul execut time soft realtim pipelin control threadbas oper system environ pipe modul execut control kernel thread schedulertyp besteffort schedul long system becom overload pipe facil provid satisfactori servic overload condit epa dynam comput new prioriti thread execut modul provid schedul alloc cpu thread immin deadlin sinc hard realtim system guarante task admit system complet prior prespecifi deadlin are necess conserv process time estim express term worst case execut time wcet admiss base assumpt everi task use maximum amount resourc schedul ensur admit task execut deadlin continu media applic soften deadlin requir thread continu media pipe must usual meet deadlin accept occasion miss one system overloadedth frequenc miss deadlin highth epa reduc load condit reconfigur pipelin eg remov compress filter trade network bandwidth cpu bandwidth epa design driven experi practic rather use wcet comput schedul use rang valu associ confid level specifi execut time addit requir applic provid execut time estim rang confid slightli complex approach describ use rialto applic load pipelin stage must specifi follow paramet servic type common modul singl pipelin guarante reliabl besteffort comput time wcet guarante servic expect execut time with specif distribut normal distribut mean specifi number sampl reliabl servic none besteffort servic input sourc devic interfac design input output block size desir termin soft deadlin confid reliabl servic d term soft confid term confid soft minimum r min optim r opt time output respons releas period expect minimum interarriv time aperiod io period epadm approach thread schedul approach schedul rtpcip thread execut base branch hard realtim schedul theori call deadlin monoton dm dm consist fixedprior schedul thread period natur assign prioriti invers relat deadlin exampl thread smallest deadlin assign highest prioriti dm proven optim schedul polici set period thread deadlin everi thread less equal period thread addit concept epadm thread schedul pipelin stage base definit soft termin deadlin term util potenti damag system control applic see figur figur show respons time util damag relat soft termin deadlin well earli respons epa signal control applic either deadlin miss specif abort thread complet termin deadlin likewis epa buffer earli respons later releas r opt r min worst case signal control applic handl deadlin miss accord specif perform goal use epa interfac renegoti servic applic miss termin deadlin damag catastroph ie termin deadlin hard deadlin pipelin must configur guarante servic rather reliabl servic dm theori appli directli inkernel pipelin mechan dm appropri hard realtim system epadm schedul test eas restrict dm admiss requir allow thread admit expect execut time in term execut confid interv rather requir determinist wcet expect time determin use offlin estim execut time base confid interv knowledg expect time refin onlin epa time thread run relax wcet admiss requir complex process incorpor pessimist wcet conserv assumpt eg cach miss pipelin stall need reduc util performanceori pipelin toler occasion miss deadlin especi probabl deadlin miss quantifi beforehand earliest comput time distribut c high term signal abort r min buffer bestcas execut hold earli respons time releas start time latest desir respons termin c low soft signal respons failur dropout degrad desir optim respons desir respons earliest possibl respons util curv wcet expect r opt buffer desir respons interv context switch overhead respons util respons damag figur execut event show util desir respons evalu epadm schedul test base execut durat describ confid interv result probabilist perform predict perthread basi term expect number miss soft termin deadlin simplif formula thread assum contribut maximum amount interfer loos defin amount time spent execut thread one question confid number miss soft termin deadlin larg function confid epa user execut time exampl thread execut time confid pass admiss test expect miss associ deadlin time less suffici but necessari schedul test dm use part determin schedul epadm schedul polici shown figur assum comput time express normal distribut the normal distribut assumpt requir greatli reduc number offlin sampl need compar assum distribut max i interfer time higher prioriti thread preempt execut number time period thread run number time thread k execut period thread base period execut time thread k c low i shortest execut durat thread i c high i longest execut durat thread i j period eq from probabl theori normal distribut c low high low high i i eq epadm admiss test low high i soft term i soft term i term i figur schedul formula epadm polici thread j z p low i z p high i unit normal distribut quantil execut time thread i exampl illustr use epadm schedul theori assum two thread normal distribut execut time worstcas execut time wceti known comparison attribut thread shown tabl thread schedul base epadm schedul admiss test thread probabl complet execut soft least express p c low soft simi larli probabl p c high term likewis thread respect deadlin confid low soft thread c exp n trial z p low conf soft z p high conf term wcet soft term tabl paramet exampl thread equat figur use determin schedul two thread use execut time confid desir soft term confid thread use eq c high c low thread shorter deadlin two thread assign highest prior iti therefor interfer term max i zero simplifi schedul test thread case equat appli thread becom c low high i soft term i use c high formula show use c low formula show thread schedul thread use eq c high c low use eq loworhigh softorterm max softorterm term mean max thread interrupt twice period thread case thread might execut termin epa term evalu c high yield evalu c low yield formula satisfi thread schedul exampl show epadm schedul approach support soft realtim comput necessari guarante everi instanc period comput complet execut deadlin fact although shown here use wcet basic dm formula result lack schedul thread wcet statist extrem cannot guarante gener rtpcip mechan conjunct epadm schedul approach offer new flexibl support devicetodevic process need dve thread creat execut monitor order deliv predict quantifi perform accord applic need oper system overhead kept minimum amount dynam interact applic code oper system low dynam negoti schedul also gener case need control soft realtim execut applic dve soft realtim applic must abl modifi resourc consumpt and consequ qualiti output given time base rel import data user amount physic resourc avail applic import concurr execut applic section discuss work appli dynam negoti cpu schedul support soft realtim applic execut middlewar dynam qo manag dqm alloc cpu individu applic accord dynam applic need correspond user sati faction applic abl trade individu perform overal user satisfact cooper maxim user satisfact select reduc increas resourc consumpt avail resourc requir chang qualiti servic qo approach appli schedul provid oper system support soft realtim applic execut qo system allow applic reserv certain amount resourc initi time subject resourc avail guarante resourc avail applic durat execut appli schedul mean applic reserv fix percentag cpu sole use avail cpu cycl commit new applic begin execut applic finish free enough cpu new applic request met soft realtim environ applic need reason assur rather absolut assur resourc avail request qo hard realtim environ ment system make strict guarante servic requir applic make strict statement resourc need result applic environ must use worst case estim resourc need soft realtim system applic make optimist estim resourc need expect oper system gener abl meet need demand inform applic unabl so sever oper system design creat design interfac support form soft realtim oper new oper system interfac allow process either negoti oper system specif amount resourc rt mach rialto specifi rang resourc alloc mmoss specifi measur applic import use comput fair resourc alloc smart system provid mechan use reduc resourc allot grant run appli cation even though system abl alloc resourc aggress hypothesi soft realtim applic still perform accept sinc averag case resourc requir may significantli lower worstcas estim resourc alloc benefit amort set execut applic creat resourc manag mechan oper system develop assum possibl applic adjust behavior accord avail resourc without provid gener model applic develop environ extrem applic may forc dynam adapt strategi resourc alloc less requir averagecas execut mercer et al suggest dynam resourc manag could creat deal situat processor overload rialto research use mechan develop applic repertoir though appar attempt defin gener model use dqm framework see figur applic construct take advantag mechan without particip directli detail negoti protocol framework base execut level applic program construct use set strategi achiev goal strategi order rel resourc usag rel qualiti output dqm interpret resourc usag inform oper system execut level inform commun applic balanc system load overal user sati faction avail resourc across collect applic section describ experi conduct evalu approach dqm framework support fundament principl assert paper soft realtim thread thread thread applic execut level cpu schedul figur dqm architectur process follow principl soft realtim dqm support gener soften realtim process execut level applic may modifi period algorithm implement arbitrari soft realtim polici principl applic knowledg applic provid three piec inform per execut level resourc need benefit provid period principl dynam negot dqm dynam adjust applic level runtim base applic deadlin miss current system state execut level dqm aspect work applic execut character set quadrupl level runtim applic specifi maximum cpu requir maximum benefit set quadrupl level resourc usag benefit period dqm level repres maximum benefit maximum cpu usag number execut level level cpu benefit periodm tabl quadrupl exampl applic highest level provid maximum benefit use maximum amount resourc lower execut level repres larger number exampl applic might provid inform shown tabl indic maximum amount cpu applic requir cpu run maximum level level provid userspecifi benefit tabl show applic run rel high benefit maximum resourc alloc level alloc reduc qualiti result substanti less dynam qo manag dqm dqm dynam determin specif alloc profil best suit need applic user conform requir impos resourc avail deliv oper system runtim applic monitor determin deadlin miss notifi dqm event respons dqm inform applic level execut modif execut level caus applic intern chang algorithm use execut allow dqm leverag mechan provid system rt mach rialto smart order provid cpu avail applic dqm dynam determin level run applic base avail resourc benefit resourc avail determin differ way cpu overload determin incid deadlin miss run applic cpu underutil determin cpu idl time current dqm done read cpu usag low prioriti applic situat cpu overload and consequ miss deadlin level select reduc overal cpu usag maintain adequ perform set run applic similarli situat cpu underutil level select increas overal cpu usag four resourc alloc polici examin use dqm distribut applic miss deadlin applic autonom select next lower level variat polici allow applic rais level success met n consecut deadlin n applicationspecif polici could use conjunct rt mach reserv mmoss smart fair polici even proport option event deadlin miss even option reduc level applic current use cpu assum applic equal import therefor attempt distribut cpu resourc fairli among run applic event underutil polici rais level applic current use least cpu time proport option use benefit paramet rais lower level applic highest lowest benefitcpu ratio polici approxim schedul use smart system optim polici use applic userspecifi benefit ie import util prioriti applicationspecifi maximum cpu usag well rel cpu usag benefit inform specifi level determin qo alloc cpu resourc maxim overal user benefit polici perform well initi qo alloc experi shown execut level choic fluctuat wildli result second option implement restrict chang level polici similar valuebas approach propos alpha kernel hybrid polici use optim specifi initi qo alloc use differ algorithm decid level modifi dynam resourc avail chang two option implement use absolut benefit benefit densiti benefitincrement cpu usag determin execut level chang applic maximum benefit max cpu usag no level level cpu benefit applic maximum benefit max cpu usag no level level cpu benefit applic maximum benefit max cpu usag no level level cpu benefit applic maximum benefit max cpu usag no level level cpu benefit tabl synthet program characterist dqm experi experi present section repres vpr applic synthet appli cation synthet applic consum cpu cycl attempt meet deadlin accord specifi execut level without perform use work synthet applic gener random program meet desir gener criteriarandom total qo requir ment absolut benefit number execut level rel qo requir benefit level synthet applic period natur constant period second applic must perform work everi period reflect complet variabl real applic simplifi analysi result data given set applic data gener run applic dqm record sampl current level expect cpu usag actual cpu usag applic well total cpu usag total benefit applic current system idl time applic ran total second period result indic adequ observ perform polici steadi state experi run applic level simplifi comparison present here singl repres set synthet applic use execut level inform applic set shown tabl applic level associ benefit cpu usag number figur a show execut level result given applic set run dqm distribut polici skip valu skip valu indic number miss execut level applic applic applic applic a execut level fraction cpu applic applic applic applic sum b cpu usag figur perform distribut skip deadlin must occur success applic reduc execut level skip valu mean applic react instantli lower level regardless transient natur overload situat execut level seen chang rapidli begin system start state cpu overload ie combin qo requir complet set applic run highest level level approxim cpu th sampl applic stabil level oper within avail cpu resourc addit level adjust applic th sampl due addit miss deadlin probabl result transient cpu load gener nonqo applic lack chang begin wild fluctuat end graph result startup termin applic begin end experi combin slightli longer second data record sampl interv figur b show cpu usag applic experi total request cpu usag design sum start approxim twice avail cpu drop applic adjust stabl level note also adjust sampl lower total cpu usag approxim figur a show cpu usag distribut polici skip valu use larger skip valu desensit algorithm deadlin miss level adjust made everi rd deadlin miss rather one result longer initi period stabil reach result less overshoot give applic time stabil a distribut skip fraction cpu applic applic applic applic sum b fair proport figur cpu usag level adjust stabil reach sampl two small adjust sampl howev overal cpu usag stay close durat experi essenti overshoot observ figur b result run applic fair polici use even option shown central polici make decis attempt give applic equal share cpu polici gener produc result nearli ident distribut polici set applic figur b show result run applic fair polici use proport option version polici attempt distribut share avail cpu cycl applic proport applic benefit previou polici cpu percentag use applic approxim same polici cpu usagebenefit ratio approxim applic fact ratio close equal reach given execut level defin applic figur show cpu usag applic run optim polici polici reach steadi state oper immedi applic enter system level use avail cpu cycl polici optim cpu alloc maxim total benefit set applic produc overal benefit number compar polici note also polici optim benefit necessarili util polici shown result stabl steadi state yield addit deadlin miss requir correct howev polici least stabl given figur cpu usag optim fraction cpu fairproport optim a applic fraction cpu fairproport optim b sum figur perform four polici chang cpu resourc caus applic enter leav system figur a show plot applic four differ polici figur b show sum cpu usag four polici shown figur a graph give indic time requir applic reach steadi state along cpu util result alloc figur a particular summar differ variou polici optim polici select feasibl valu immedi level applic unchang durat experi distribut fair even polici reach steadi state valu although take differ amount time reach state distribut polici take slightli longer fair proport polici reach steadi state time distribut fair polici although alloc slightli less case gener experi show given set levelbas applic possibl creat dqm dynam adjust applic execut level maxim user satisfact within avail resourc even absenc underli qo soft realtim schedul mech anism four dqm decis polici demonstr rang possibl inher model dqm extend support extens use execut level summari conclus nextgener multimedia applic requir time deliveri complex data across within node dynam comput environ user requir chang frequent write execut applic deliv manag data accord rapidlychang requir requir new support oper system develop tool paper introduc set principl evolv work design dve resourc manag support it principl address soft realtim commun applic knowledg support dynam negoti paper also present framework execut level implement principl execut level use three differ context gryphon distribut object manag epartpcip facil dqm support soft realtim applic gryphon project paper shown approach use adjust object storag strategi compens scarc network bandwidth epartpcip studi describ execut level use provid realtim support kernel pipelin use confid reliabl paramet execut level dqm studi demonstr execut level use implement gener dynam negoti top besteffort oper system includ measur reflect behavior system acknowledg author nutt brandt griff partial supportedbi nsf grant no iri jim mankovich design almost singlehandedli built three differ version vpr sever graduat student particularli chri gantz help us particip group discuss virtual environ humancomput interfac realtim soft realtim perform prototyp system r hard realtim schedul ing deadlin monoton approach survey qo architectur extens safeti perform spin oper system realtim applic execut dyanam qualiti servic assur schedul hard realtim system review design qo control atm base commun system exploit inkernel data path improv io throughput cpu avail evalut soft realtim handl method soft realtim framework schedul ipc mechan continu me dia tailor locat polici distribut object system dynam qualiti servic resourc manag multimedia applic gener purpos oper system iii support usercentr modular realtim resourc manag rialto oper system cpu reserv time constraint effici object cach corba compliant system construct reliabl distibut commun system corba processor capac reserv oper system support multimedia applic highli avail design agil applicationsawar adapt mobil resourc manag virtual plan room softwar support virtual plan room resourc centric approach multimedia oper system www page httpwww resourc alloc model qo manag architectur design globe widearea distribut system tr ctr ingray chen shengtun li ile yen adapt qo control base benefit optim video server provid differenti servic multimedia tool applic v n p februari scott a brandt gari j nutt flexibl soft realtim process middlewar realtim system v n p janmarch eyal de lara yogesh chopra rajnish kumar nilesh vaghela dan s wallach willi zwaenepoel iter adapt mobil client use exist api ieee transact parallel distribut system v n p octob