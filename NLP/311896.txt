t stagger consist checkpoint a abstracta consist checkpoint algorithm save consist view distribut applic state stabl storag tradit consist checkpoint algorithm requir differ process save state time caus content stabl storag potenti result larg overhead stagger checkpoint taken variou process reduc checkpoint overhead paper present simpl approach arbitrarili stagger checkpoint approach requir process take consist logic checkpoint compar consist physic checkpoint enforc exist algorithm experiment result ncube present b introduct applic execut larg number processor either distribut environ multicomput ncube subject processor failur consist checkpoint commonli use techniqu prevent complet loss comput upon failur consist checkpoint algorithm save consist view distribut applic state stabl storag often disk use stabl storag loss comput upon failur bound take consist checkpoint adequ frequenc tradit consist checkpoint algorithm requir differ applic process save state time caus content stabl storag multipl processor share stabl storag potenti result signific perform degrad clearli processor access separ stabl stor age content occur howev mani instal multicomput distribut system requir multipl processor share stabl storag stagger checkpoint taken variou process reduc overhead consist checkpoint reduc stabl storag content observ plank plank propos techniqu stagger checkpoint howev techniqu result limit stagger process checkpoint stagger moreov previou algorithm much control checkpoint stag gere ideal one would like abl stagger checkpoint manner appropri given system system processor abl make inmemori copi entir process state checkpoint stagger trivial case checkpoint first taken in memori written stabl storag one time paper consid system feasibl make inmemori copi entir process state situat may occur becaus either i memori size small ii memori may share process multipl applic make inmemori copi process one applic may caus process applic swap degrad perform paper present simpl approach arbitrarili stagger checkpoint differ stabl storag access network network content becom bottleneck approach requir process take consist logic checkpoint compar consist physic checkpoint enforc exist algorithm stagger elabor later physic checkpoint copi process state logic checkpoint obtain save suffici inform eg messag recov process state object paper show checkpoint stagger control manner independ applic commun pattern present differ variat algorithm illustr approach interest practic experiment result one version algorithm ncube multicomput present paper organ follow section discuss relat work section discuss notion logic checkpoint section present consist checkpoint algorithm propos chandi lamport plank section present propos algorithm section present experiment result variat propos scheme discuss section section summar paper relat work plank first observ stabl storag content problem consist checkpoint suggest checkpoint stagger solut degre stagger plank algorithm base chandylamport algorithm limit checkpoint mani process stagger contrast algorithm allow arbitrari control stagger checkpoint plank also present anoth approach stagger checkpoint applic wormhol rout network algorithm also permit arbitrarycontrol stagger fowler zwaenepoel present algorithm determin causal breakpoint for purpos debug part breakpoint algorithm establish consist recoveri line use algorithm similar our approach consid modif algorithm facilit checkpoint stagger algorithm design debug purpos variou possibl checkpoint stagger differ approach establish checkpoint consid long et al discuss evolutionari checkpoint approach similar logic checkpoint algorithm stagger checkpoint scheme allow stagger also assum synchron commun upper bound commun delay assumpt made propos scheme wang et al introduc term logic checkpoint present algorithm determin recoveri line consist consist logic checkpoint failur occur recoveri line use recov failur goal determin latest consist recoveri line use inform save stabl storag messag log independ checkpoint scheme also effect determin recoveri line consist consist logic checkpoint failur occur scheme failurefre oper process allow independ take checkpoint log messag hand scheme coordin logic checkpoint failur occur logic checkpoint use recov futur failur one consequ approach scheme log messag messag make logic checkpoint consist log stagger checkpoint taken variou process tend increas elaps time sometim call checkpoint latenc checkpoint algorithm progress previou work show larg increas checkpoint latenc accept accompani even small decreas checkpoint overhead therefor techniqu stagger interest even though may result greater checkpoint latenc logic checkpoint process said determinist state depend initi state messag deliv determinist process take two type checkpoint physic checkpoint logic checkpoint process said taken physic checkpoint time process state time avail stabl storag process said taken logic checkpoint time adequ inform save stabl storag allow process state time recov physic checkpoint trivial logic checkpoint howev convers true physic checkpoint taken two differ way one possibl save entir process state stabl storag second possibl take increment checkpoint that is differ current state state previou physic checkpoint need save return increment physic checkpoint logic checkpoint process figur physic checkpoint logic checkpoint checkpoint soon again summar three approach take logic checkpoint time although three approach equival approach may attract applic approach approach feasibl system approach one approach establish logic checkpoint time take physic checkpoint time log on stabl storag messag deliv process time approach essenti ident present wang et al figur present exampl wherein process p take physic checkpoint time messag m deliv process p time establish logic checkpoint process p time messag m log stabl storag summar approach as physic checkpoint logic checkpoint approach essenti purpos behind save messag abl recreat state time may also achiev take physic checkpoint time take increment checkpoint time increment checkpoint taken save on stabl storag chang made process state time summar approach as physic checkpoint increment checkpoint logic checkpoint note earlier physic checkpoint may taken use increment checkpoint method therefor possibl complet elimin physic checkpoint howev necessarili desir figur illustr thi assum physic checkpoint p time taken increment chang state previou physic checkpoint p also logic checkpoint time taken increment chang state time time interv p p figur increment checkpoint approach logic checkpoint much larger time interv therefor size increment state save establish physic checkpoint p like much larger save establish logic checkpoint algorithm stagger physic checkpoint wherea logic checkpoint contend stabl storag consid situat physic checkpoint p taken all case increment state save consist modif made state time checkpoint p taken therefor size increment state least larg save establish p appar later would defeat stagger algorithm introduc signific stabl storag content take logic checkpoint therefor often desir take physic checkpoint first possibl increment checkpoint follow increment logic checkpoint evolutionari checkpoint scheme long et al also take increment checkpoint similar procedur approach two approach take physic checkpoint prior desir logic checkpoint follow log addit inform either messag increment state chang third approach convers two approach here physic checkpoint taken time addit enough inform save undo effect messag receiv time relev messag whose effect must undon antimessag save stabl storag notion antimessag similar use time warp mechan undo record databas system antimessag correspond messag use undo state chang caus messag m figur illustr approach logic checkpoint process p establish time process p deliv messag time physic checkpoint taken time antimessag correspond messag log stabl storag antimessag name respect antimessag messag applic time process m m stabl storag state notat figur antimessag log logic checkpoint m m state state process figur recov logic checkpoint use antimessag recov state say s process p time process initi physic checkpoint taken time antimessag sent process order antimessag deliv revers order messag deliv shown figur final state process p ident state or logic checkpoint time summar approach as antimessag log logic checkpoint antimessag possibl form applic itself may consist copi old process state modifi messag similar copyonwrit chandylamport algorithm chandi lamport present algorithm take consist checkpoint distribut system assum process commun use first infirstout unidirect commun channel bidirect channel model two unidirect channel simplic assum commun graph fulli connect algorithm present next essenti ident note chandylamport algorithm applic strongli connect graph algorithm also gener strongli connect graph chandylamport assum certain process name p design checkpoint coordin algorithm coordin process p initi consist checkpoint algorithm send marker messag channel incid on direct away p immedi take checkpoint thi physic checkpoint process say q receiv marker messag along channel c take follow step q taken checkpoint begin send marker channel incid on direct away q q take checkpoint q record state channel c empti els q record state channel c sequenc messag receiv along c q taken checkpoint q receiv marker along c plank stagger scheme plank suggest process send marker take checkpoint rather take checkpoint unlik algorithm abov simpl modif introduc stagger checkpoint howev checkpoint stagger experi use chandylamport algorithm incorpor plank modif rest paper modifi algorithm refer chandi lamportplank algorithm clp breviti observ plank observ stagger scheme work better origin nonstagg algorithm i degre synchron or commun amongst process rel small ii messag volum rel small messag volum amount inform commun messag figur horizont axi indic degre synchron applic vertic axi indic messag volum shown figur synchron frequent andor messag volum larg better avoid stagger checkpoint extrapol plank result follow that region given stagger algorithm work best shrink degre stagger greater stagger benefici applic less synchron small messag volum paper alter conclus work provid user abil choos degre stagger approach achiev complet control stagger checkpoint unlik plank stagger work best stagger work best larg messag volum small messag volum synchron frequent synchron infrequ less stagger work best figur checkpoint stagger perform qualit observ stagger consist checkpoint extent checkpoint stagger use clp algorithm depend applic commun pattern also algorithm implement eg whether marker sent asynchron not hand propos algorithm stagger checkpoint manner desir mani variat possibl depend checkpoint desir stagger illustr assum object stagger checkpoint ie two checkpoint overlap time later illustr situat overlap checkpoint desir propos algorithm name stagger summar follow stagger physic checkpoint consist logic checkpoint stagger consist checkpoint propos algorithm coordin logic checkpoint rather physic check point section assum first approach describ section take logic checkpoint use thu logic checkpoint taken log messag deliv process sinc recent physic checkpoint purpos discuss assum checkpoint coordin name process name p p ngamma n number process present propos algorithm consist two phase follow illustr present assum processor share singl stabl storag section consid situat multipl stabl storag avail algorithm stagger physic checkpoint phase checkpoint coordin p take physic checkpoint send take checkpoint messag process p process p receiv take checkpoint messag take physic checkpoint send take checkpoint messag process p j mod n process p receiv take checkpoint messag process p initi second phase algorithm name consist logic checkpoint phase process take physic checkpoint continu execut messag deliv process take physic checkpoint but complet next phase log stabl storag procedur ensur physic checkpoint taken process stagger one process take physic checkpoint time physic checkpoint taken process necessarili consist consist logic checkpoint phase phase similar chandi lamport algorithm differ chandylamport algorithm phase origin chandylamport algorithm requir process take checkpoint process take logic checkpoint not physic checkpoint chandylamport algorithm logic checkpoint taken ensur messag deliv sinc physic checkpoint taken previou phase log stabl storag exact algorithm phase provid below initi coordin p initi phase receipt take checkpoint messag process p send marker messag channel incid on direct away p also p take logic checkpoint ensur messag deliv sinc physic checkpoint log the number messag log somewhat reduc discuss later process say q receiv marker messag along channel c take follow step q taken logic checkpoint begin send marker channel incid on direct away q q take logic checkpoint ensur messag deliv on channel qs recent physic checkpoint log els q ensur messag receiv channel c sinc recent logic checkpoint log messag receiv channel c marker receiv channel log similar chandylamport algorithm messag sent process logic checkpoint receiv receiv logic checkpoint log part channel state note messag log establish logic checkpoint may log time instant receiv time logic checkpoint establish implement due insuffici memori ncube messag log immedi receipt algorithm establish consist recoveri line consist one logic checkpoint per process algorithm reduc content stabl storag complet stagger physic checkpoint howev content introduc second phase algorithm process log messag scheme perform well messag volum rel small compar checkpoint size figur illustr algorithm assum system consist three process process act coordin initi physic checkpoint phase take physic checkpoint send take checkpoint messag p process p take stagger checkpoint first phase process p receiv take checkpoint messag process p initi consist logic checkpoint phase process p content potenti reduc take logic checkpoint send marker consist logic checkpoint phase physic checkpoint logic checkpoint applic messag take_checkpoint messag marker messag notat physic checkpoint phase consist logic checkpoint phase process process consist recoveri line process figur exampl send marker messag p take logic checkpoint log messag stabl storag process p receiv marker messag process send marker p take logic checkpoint log messag stabl storag similarli process p take logic checkpoint log messag stabl storag messag also log second phase as repres channel state messag log proof correct correct follow directli proof correct chandylamport algorithm recoveri failur process roll back recent physic checkpoint reexecut use log messag restor process state logic checkpoint belong recent consist recoveri line note that stagger algorithm design assum desir stagger checkpoint pattern stagger desir algorithm easili modifi achiev pattern section illustr exampl perform evalu implement propos algorithm stagger chandylamportplank clp algorithm ncube multicomput singl disk stabl storag note perform scheme close depend underli hardwar softwar implement scheme natur applic program clearli singl scheme perform well applic object demonstr propos scheme perform well certain circumst implement clp stagger marker sent process sent asynchron use interrupt or signal suffici care taken ensur marker appear firstinfirstout fifo order respect messag even though marker sent asynchron marker sent process sent without use interrupt marker sent asynchron checkpoint algorithm may make progress case synchron or commun infrequ stagger benefici circumst necessari ensur algorithm progress without explicit commun applic process therefor process send asynchron marker return issu use asynchron marker later section first applic use evalu stagger synthet program name syncloop similar program use plank pseudocod program present use clike syntax syncloopit size m char states initi state repeat iter time perform floatingpoint multipl synchron process process state size and checkpoint size control size paramet size chosen experi checkpoint size process syncloop approxim mbyte process repeat loop perform comput the amount comput control paramet loop repeat iter time synchron achiev mean alltoal messag exchang choos larg valu degre synchron program minim small m hand impli process synchron frequent figur present experiment result stagger clp scheme synchron interv figur time two consecut synchron synchron interv approxim equal time requir perform comput ie multipl iter loop synchron interv horizont axi figur determin divid iter execut time syncloop without take checkpoint checkpoint overhead obtain as execut time consist checkpoint gamma execut time without checkpoint measur that is five checkpoint per execut program instanc syncloop applic execut five time checkpoint overhead averag five execut figur present overhead measur experi cube dimens curv label figur experi ndimension cube consist n processor label a h figur use match curv correspond legend top right corner figur figur observ that fix dimens synchron interv becom smaller checkpoint overhead grow scheme small synchron interv stagger scheme perform much better chandylamportplank scheme howev synchron interv larg propos scheme achiev signific improv dimens processor two scheme achiev essenti ident perform observ figur that given instanc applic dimens increas overhead stagger well clp increas howev increas overhead clp much greater stagger checkpoint overhead second synchron interv second syncloop a clp d b stagger d c clp d a b c d stagger d f stagger d d figur checkpoint overhead syncloop label a h use match curv correspond legend top right corner figur measur present impli parallel applic larg granular thu requir infrequ commun synchron propos stagger algorithm perform well exampl applic coarsegrain parallel figur present measur simul program sim simul program sim evalu expect execut time task use rollback recoveri state size process sim approxim kbyte simul program complet parallel process synchron begin complet simul synchron pattern repres best possibl scenario stagger checkpoint seen figur checkpoint overhead stagger remain constant independ dimens synchron infrequ hand overhead clp increas dimens checkpoint overhead second dimens stagger figur measur sim applic fair note stagger alway outperform clp note figur algorithm stagger tend perform poorli degre synchron andor messag volum larg illustr thi figur a present measur program name fft repeatedli evalu fast fourier transform data point frequent interact process checkpoint size process approxim mbyte applic overhead stagger larger clp perform stagger improv reduc amount inform log use optim similar unlik origin stagger algorithm necessari log messag data content sent process checkpoint overhead second dimens a use stagger algorithm checkpoint overhead second dimens modifi stagger b use modifi stagger algorithm figur measur fft applic take physic checkpoint messag suffici log order inform ie send receiv sequenc number sender receiv identifi recoveri messag alway reproduc sender process therefor log order inform suffici figur b plot overhead stagger algorithm modifi implement optim overhead modifi algorithm lower origin stagger algorithm see figur a howev overhead still much better clp fft applic perform frequent commun hard achiev overhead better clp variat theme a process cluster exploit multipl stabl storag algorithm stagger present assum process share singl stabl storag howev system process may share multipl stabl storag instanc number process may number stabl storag may system modifi propos stagger algorithm make use stabl storag minim content stabl storag achiev partit process cluster number cluster ident number stabl storag cluster associ uniqu stabl storag process within cluster access associ stabl storag algorithm stagger modifi use multipl stabl storag differ origin stagger algorithm first phase ie stagger checkpoint phase illustr modifi stagger checkpoint phase exampl consid system consist process stabl storag process name denot cluster number j denot process number within cluster stabl storag avail process divid cluster contain process each process p cluster identifi checkpoint coordin cluster i process p also identifi global checkpoint coordin figur depict first phase modifi algorithm process p process p process p process p process p process p messag denot take_checkpoint consist logic checkpoint phase not shown here stagger physic checkpoint phase figur process cluster util multipl stabl storag global checkpoint coordin p initi phase algorithm ie stagger physic checkpoint phase send take checkpoint messag checkpoint coordin cluster process p take physic checkpoint send take checkpoint messag process p process p ij ij receiv take checkpoint messag take physic checkpoint send take checkpoint messag process p km global coordin p receiv one take checkpoint messag process cluster initi consist logic checkpoint phase thi phase ident second phase origin stagger algorithm essenti procedur guarante one process access stabl storag time first phase stabl storag use save physic checkpoint b approach take logic checkpoint discuss far assum logic checkpoint taken take physic checkpoint log subsequ receiv messag propos algorithm easili modifi allow process use three approach present earlier in section establish logic checkpoint fact differ process may simultan use differ approach establish logic checkpoint c asynchron marker arriv asynchron marker inform destin process mean or signal spite asynchron natur marker appear appropri posit fifo channel sent call marker sent interrupt synchron marker for lack better terminolog asynchron marker process soon arriv synchron marker may process long time particularli destin process need messag correspond channel marker if ani sent asynchron affect perform stagger clp algorithm note previous implement marker sent process asynchron marker synchron plank address distinct asynchron synchron marker one variat make clp imit stagger particularli applic infrequ synchron commun follow clp algorithm ensur marker sent process process j asynchron modulo number process thu process take checkpoint algorithm make progress even process commun other also process send one asynchron marker algorithm would tend reduc content stabl storag infrequ synchron commun rule tend stagger checkpoint differ process ie algorithm becom similar stagger variat could also use reduc stabl storag content consist logic checkpoint phase stagger algorithm summari paper present algorithm take consist logic checkpoint propos algorithm ensur physic checkpoint taken variou process stagger minim content access stabl storag experiment result ncube suggest propos scheme improv perform compar exist stagger techniqu particularli process synchron infrequ messag size larg paper also suggest variat propos scheme includ approach stagger checkpoint multipl stabl storag avail acknowledg thank refere confer version paper jame plank yimin wang comment earlier draft paper fft program use experi written akhilesh kumar vidya iyer wrote part checkpoint layer use experi research support part nation scienc foundat grant mip texa advanc technolog program grant c r the perform consist checkpoint distribut share memori system distribut snapshot determin global state distribut system introduct databas system the perform consist checkpoint manetho transpar rollbackrecoveri low overhead limit rollback fast output commit causal distribut breakpoint virtual time distribut system fault toler use messag log check point evalu consist logic checkpoint lowlat concurr checkpoint parallel program an evolutionari approach concurr checkpoint libckpt transpar checkpoint unix effici checkpoint mimd architectur optimist recoveri asynchron approach faulttoler distribut system on checkpoint letenc on stagger checkpoint lazi checkpoint coordin bound rollback propag progress retri softwar error recoveri distribut system tr ctr guohong cao mukesh singhal checkpoint mutabl checkpoint theoret comput scienc v n p januari partha sarathi mandal krishnendu mukhopadhyaya concurr checkpoint initi recoveri algorithm asynchron ring network journal parallel distribut comput v n p may partha sarathi mandal krishnendu mukhopadhyaya selfstabil algorithm checkpoint distribut system journal parallel distribut comput v n p juli guohong cao mukesh singhal mutabl checkpoint new checkpoint approach mobil comput system ieee transact parallel distribut system v n p februari