t detect coarsegrain parallel use interprocedur parallel compil a paper present extens empir evalu interprocedur parallel compil develop part stanford suif compil system system incorpor comprehens integr collect analys includ privat reduct recognit array scalar variabl symbol analysi array subscript interprocedur analysi framework design provid analysi result nearli precis full inlin without associ cost experiment system show capabl detect coarser granular parallel previous possibl specif parallel loop span numer procedur hundr line code frequent requir modif array data structur privat reduct transform measur sever standard benchmark suit demonstr integr combin interprocedur analys substanti advanc capabl automat parallel technolog b introduct symmetr sharedmemori multiprocessor built latest mi croprocessor wide avail class comput pow research support part air forc materi command arpa contract fc arpa contract dabtc nsf cise postdoctor fellowship jet propuls laboratori fellowship intel corpor att bell laboratori nsf young investig award er machin hardwar technolog advanc make pervas parallel comput possibl ever import tool develop simplifi parallel program parallel compil automat locat parallel comput sequenti program particularli attract program tool free programm difficult task explicitli manag parallel program unfortun today commerci avail parallel compil effect get good perform multiprocessor parallel develop vector compil technolog tend success parallel innermost loop parallel inner loop adequ multiprocessor two reason first inner loop may make signific portion sequenti comput thu limit parallel speedup limit amount parallel second synchron processor end inner loop leav littl comput occur parallel synchron point cost frequent synchron load imbal potenti overwhelm benefit parallel multiprocessor power vector machin execut differ thread control simultan thu exploit coarser granular parallel thu parallel compil target multiprocessor effect must identifi outer paralleliz loop extract coarsegrain parallel requir two major improv standard parallel techniqu advanc array analys loop often paralleliz unless compil modifi data structur access exampl common iter loop defin use variabl compil must give processor privat copi variabl loop paralleliz anoth exampl compil parallel reduct eg comput sum product maximum data element processor comput partial reduct local updat global result end compil tradit perform privat reduct tranform scalar variabl find outer parallel loop compil must abl perform transform array variabl well interprocedur analysi program written modular style natur coarsegrain parallel loop span multipl pro cedur reason procedur boundari must pose barrier analysi one way elimin procedur boundari perform inlin substitutionreplac procedur call copi call procedureand perform program analysi usual way practic solut larg program ineffici time space interprocedur analysi appli dataflow analysi techniqu across procedur boundari much effici analyz singl copi procedur although much research devot interprocedur analysi parallel adopt practic primari obstacl progress area effect interprocedur compil substanti harder build intraprocedur counterpart moreov inher tradeoff perform analysi effici obtain precis result success interprocedur compil must tackl complex compil process maintain reason effici without sacrif much precis develop automat parallel system fulli interprocedur system incorpor standard analys includ today automat parallel data depend analysi analys scalar variabl includ constant propag valu number induct variabl recognit scalar depend reduct recognit addit system employ analys array privat array reduct recognit implement techniqu extend previou work meet demand parallel real program interprocedur analysi design practic provid nearli qualiti analysi program fulli inlin paper present comprehens evalu effect system locat coarsegrain parallel comput larg collect program specfp na perfect benchmark suit demonstr techniqu system significantli improv perform automat parallel code increas portion program execut parallel reduc synchron overhead result parallel outer loop rather inner one remaind paper organ seven section section present type advanc analys requir parallel full applic section overview requir precis effici interprocedur analysi section overview parallel analysi system section compar work automat parallel system section devot empir evalu system follow conclus parallel analysi techniqu parallel coarsegrain outer loop requir compil incorpor mani techniqu beyond standard analys current avail commerci parallel compil section briefli describ parallel analysi techniqu give exampl extract real program encount experi motiv need advanc analysi techniqu analysi scalar variabl scalar parallel analysi scalar parallel analysi locat data depend scalar variabl data depend occur memori locat written one iter loop might access read written differ iter case say loop carri depend cannot safe parallel scalar depend analysi determin whether parallel may enabl privat reduct transform scalar symbol analysi parallel compil perform data depend analysi array check loopcarri depend individu array element array data depend analysi effect subscript express affin function loop indic loop invari within domain data depend analysi shown equival integ program integ program potenti expens data depend problem found practic simpl effici algorithm develop usual solv problem exactli reason parallel compil incorpor host scalar symbol analys put array indic affin form includ constant propag valu number induct variabl recognit analys provid integ coeffici subscript variabl deriv affin equal relationship among variabl system also propag inequ relat relat constraint integ variabl impos surround code construct if loop use array subscript relat nonlinear variabl propag affin relat among scalar suffici parallel loop exampl scientif code often linear access conceptu multidimension array result subscript express cannot express affin function enclos loop indic loop nest figur a perfect benchmark trfd illustr situat figur b show inform determin symbol analysi loop access array xrsij induc depend iter outer loop sinc index mrsij never valu two differ iter a nonlinear induct variabl trfd b symbol inform figur nonlinear analysi exampl analysi array variabl scalar parallel analys describ depend privat reduct must gener appli array variabl array dataflow analysi array privat simpl exampl motiv need array privat k loop figur a line loop taken na sampl benchmark appbt to concis present exampl use fortran array notat place actual loop although array locat tm defin use differ iter outer loop valu flow across iter consequ safe parallel loop privat copi tm access process find privatiz array requir dataflow analysi previous perform scalar variabl appli individu array element analysi call array dataflow analysi array privat initi array privat usual appli case iter first defin valu array use howev also applic loop whose iter use valu comput outsid loop privat copi must initi valu parallel execut begin word array privat illeg iter refer valu gener preced iter loop exampl array privat initi shown figur b figur show portion line loop perfect benchmark spec see section here part array ze second row modifi referenc remaind array modifi a array privat appbt uvglob read entir kth column array ze b interprocedur array privat initi spec c recogn region across loop figur array analysi exampl loop array ze privatiz outer loop give processor privat copi second row initi origin valu recogn complic region data flow analysi array intrins difficult analysi scalar variabl necessari keep track access individu array element case read write array may appear multipl loop read write oper may interleav compil must keep precis enough inform analysi maintain effici figur b also part line loop spec illustr complex problem statement array notat correspond doubli nest loop compil determin array w privatiz infer collect write oper w complet defin read array reduct recognit compil recogn simpl reduct accumul variabl sum figur a reduct array variabl also common scientif code potenti sourc signific improv parallel result spars array reduct spars comput pose usual consid insurmount problem parallel compil array part subscript express compil cannot determin locat array read written case a scalar reduct b spars reduct cgm jbeg le jend c multipl reduct statement interprocedur reduct mdljdp figur reduct analysi exampl loop contain spars comput still parallel comput recogn reduct exampl loop figur b constitut main comput na sampl benchmark cgm observ access spars vector commut associ updat locat thu safe transform reduct paralleliz form figur c excerpt line loop make main comput benchmark mdljdp outer loop paralleliz spars reduct perform interprocedur exampl also demonstr reduct loop may consist multipl updat array interprocedur analysi issu interprocedur dataflow analysi support interprocedur optim much spaceeffici manner inlin analyz singl copi procedur captur precis interprocedur inform requir flowsensit approach deriv analysi result along possibl control flow path program precis effici flowsensit interprocedur analysi difficult inform flow procedur caller repres call context procedur invok calle repres side effect invoc exampl straightforward interprocedur adapt tradit iter analysi analysi might carri program represent call supergraph individu control flow graph procedur program link togeth procedur call return point iter analysi structur slow number control path inform flow larg analysi also lose precis propag inform along unrealiz path analysi may propag call context inform one caller procedur return sideeffect inform differ caller regionbas flowsensit analysi system use regionbas analysi solv problem unrealiz path slow converg perform analysi effici two separ pass program proceed bottomup call graph first pass analyz procedur obtain descript sideeffect behavior form transfer function transfer function turn insert call site comput transfer function caller second topdown pass call graph dataflow inform call context appli transfer function deriv final analysi result procedur use similar approach within procedur summar code region eg loop behavior bottomup pass propag context region topdown pass select procedur clone regionbas analysi approach describ abov precis may still lost compar full inlin second pass deriv call context pro cedur analysi must repres conserv approxim inform contribut program path procedur approxim affect precis analysi procedur invok along path contribut differ inform avoid loss precis incorpor call context analysi techniqu call select procedur clone compil replic analysi result procedur determin dataflow inform along path program contribut significantli differ call context replic done select accord uniqu dataflow inform expos manag analysi cost usual obtain precis full inlin interprocedur framework differ dataflow problem share mani common for exampl support paramet pass use interprocedur framework manag complex implement allow code reus regionbas analysi select procedur clone techniqu encapsul common interprocedur framework part fiat tool develop interprocedur analysi system fiat facilit ad new interprocedur analys provid parameter templat drive flowsensit analysi clone analysi problem implement instanti templat function comput solut dataflow equat interprocedur parallel system suif extend fiat significantli support array dataflow analysi flowsensit analysi parallel analysi algorithm section overview parallel analysi algorithm describ differ phase analysi fit togeth descript found elsewher scalar analysi system interprocedur scalar analysi encompass scalar parallel analysi scalar symbol analysi scalar parallel analysi simpl flowinsensit analysi interprocedur analysi consid control flow within procedur provid inform locat scalar depend scalar reduct recogn privatiz scalar com plex requir bottomup flowsensit regionbas analysi find upwardsexpos read loop boundari interprocedur symbol analysi combin constant propaga tion valu number induct variabl recognit analysi perform regionbas analysi two pass call graph procedur region summar scalar valu map describ variabl valu exit arbitrari express variabl valu entri topdown pass determin symbol valu integ variabl term loop indic loop invari select clone base symbol valu use procedur analysi also provid support analyz nonlinear array subscript analysi recogn higherord induct variabl such mrsij mi loop figur a provid approxim inform array analysi set addit linear inequ constraint simpl approach captur requir analyz mani nonlinear subscript express without need adopt sophist nonlinear depend test separ topdown interprocedur context analysi propag contextu relat in looprel term obtain symbol analysi enclos predic loop bound context relat repres set system linear equal similar array summari descriptor describ below array analysi summari tradit data depend analysi solv integ program problem everi pair array access loop in terest on analysi becom prohibit expens larg loop particularli interprocedur set one way improv effici summar array access region code data depend analysi appli small number sum mari summari also provid represent use array dataflow analysi describ below mani differ design summari trade effici precis repres summari set array access list system linear inequ array indic equat affin express outer loop indic loopinvari valu constrain inequ deriv loop bound represent data access set system allow us trade precis effici necessari exampl union two summari combin two system one comput inexpens loss inform result further repres multipl region array essenti captur exampl figur cd repres array summari convex hull would necessari precis creat summari access outsid enclos loop project away loop index variabl use fouriermotzkin project enhanc integ domain similarli transform access summari across procedur call equat array subscript variabl formal paramet subscript variabl actual paramet constrain declar type formal actual project elimin formal paramet subscript replac actual paramet subscript strategi transform summari across procedur boundari provid gener mechan analyz array reshap number size array dimens alter call similar approach array reshap also recent adopt creussilet array dataflow analysi singl array dataflow analysi use determin array involv data depend locat privatiz array recogn reduct array dataflow analysi bottomup interprocedur analysi loop procedur program use regionbas analysi framework describ abov analysi comput follow four set summari program region array section definit written mustwrit may written write may read read may read written exposedread data depend test loop comparison read write set determin disjoint differ iter loop array involv data depend may yield privatiza tion array privat write set exposedread set differ iter disjoint array privat analysi extens tu padua approach algorithm requir privatiz array read locat upwardsexpos begin loop iter approach gener captur case one figur c array reduct array reduct recognit perform simpl algorithm integr array dataflow analysi recogn reduct begin locat commut associ min max oper memori locat mark correspond represent access summari reduct type accord oper bottomup interprocedur propag array dataflow analysi ensur access potenti reduct array within current loop reduct oper type loop evalu whether variabl carri depend cannot privat involv reduct comput variabl comput reduc everi region describ summari reduct type simpl algorithm suffici power recogn parallel reduct figur ac put togeth analysi techniqu built use regionbas analysi frame work select clone figur put togeth analysi phase demonstr entir analysi system could execut four pass program call graph scalar modif refer reduct perform initi flowinsensit pass analys could fold next pass flowinsensit implement perform effici relat work late s seri paper present result interprocedur parallel analysi common approach determin section array modifi referenc procedur call enabl parallel loop contain call whenev invoc modifi array element distinct referenc modifi invoc techniqu shown effect parallel linear algebra librari flowinsensit pass ffl find modifi referenc variabl ffl find scalar reduct bottomup pass scalar analysi ffl find privatiz scalar ffl summar symbol behavior sideeffect topdown pass scalar analysi appli call context symbol valu map symbol analysi ffl extract propag program controlflow constraint inequ iti relat ffl select clone base two analys bottomup pass array analysi ffl summar mustwrit write read exposedread ffl find data depend intersect write read ffl find privatiz array intersect write exposedread ffl recogn array reduct record reduct oper type figur phase interprocedur parallel analysi recent fida system develop ibm obtain precis array section partial inlin array access see section irigoin et al develop pip system interprocedur analysi system part environ parallel program recent pip extend incorpor interprocedur array privat pip similar work lack three import featur pathspecif interprocedur inform obtain select procedur clone interprocedur reduct extens interprocedur scalar dataflow analysi scalar privat polari system univers illinoi also current develop advanc state art parallel technolog fundament differ system polari polari perform interprocedur analysi instead reli full inlin program obtain interprocedur inform polari group demonstr good coverag result program parallel obtain automat although report full inlin feasibl eight mediums program approach difficulti parallel larg loop contain thousand line code commerci parallel compil initi interprocedur analysi system notabl convex applic compil perform flowinsensit array analysi interprocedur constant propag obtain pathspecif inform inlin procedur clone appli parallel research demonstr good speedup result program present here program parallel programm direct instruct compil ignor depend privat certain vari abl know commerci system current employ flowsensit array analysi particularli interprocedur array privat empir evalu interprocedur parallel analysi describ previou section implement part stanford suif compil section provid empir evalu result parallel analysi collect benchmark program previou evalu interprocedur parallel system provid static measur number addit loop parallel result interprocedur analysi compar result recent empir stud i examin spec perfect benchmark suit consid loop contain call set program suif system abl parallel greater five time loop key differ two system suif contain full interprocedur array analysi includ array privat reduct recognit see section static loop count howev good indic whether parallel success specif parallel one outermost loop profound impact program perform dynam measur provid much insight whether program may benefit parallel thu addit static measur benchmark suit also present seri result gather execut program parallel machin present overal speedup result well measur factor determin speedup also provid result identifi contribut analysi compon system focus advanc array analys benchmark program evalu parallel analysi measur success parallel three standard benchmark suit describ tabl fortran program specfp sampl na benchmark perfect specfp set floatingpoint program use benchmark uniprocessor architectur compil omit four studi parallel analysi current avail for tran omit alvinn ear two c program spice program mix fortran c code also omit fpppp contain type error origin fortran sourc program consid contain littl looplevel parallel the program present alphabet order program name na suit eight program use benchmark parallel comput nasa provid sampl sequenti program plu applic inform intent rewritten suit differ machin use nasa sampl program except embar substitut embar version apr separ first call function initi static data call lastli perfect set origin sequenti code use benchmark parallel compil present result program here spice contain pervas type conflict paramet mismatch origin fortran sourc violat fortran standard interprocedur analysi flag error program consid littl looplevel parallel program parallel complet automat system without reli user direct assist paral leliz made modif origin program program produc valid result execut parallel suif compil system suif fulli function compil take fortran c input languag for experi consid fortran program onli parallel code output spmd singl program multipl parallel c version program compil nativ c compil varieti architectur result c program link parallel runtim system current run sever busbas share memori architectur sgi challeng power challeng digit multiprocessor scalabl sharedmemori architectur stanford dash kendal squar ksr two major compon automat parallel suif first analysi compon locat avail parallel code compon encompass interprocedur parallel analys present paper in addit suif in except correct type declar paramet pass arcd bdna dyfesm mgrid mdg spec violat fortran semant program length descript doduc line mont carlo simul line equat motion wave line d particl simul tomcatv line mesh gener ora line optic ray trace line equat motion singl precis line shallow water model sucor line quantum physic hydrod line navierstok line nasa ame fortran kernel na appbt line block tridiagon pde applu line parabolicellipt pde appsp line scalar pentadiagon pde buk line integ bucket sort cgm line spars conjug gradient embar line random number gener fftpde line d fft pde mgrid line multigrid solver perfect adm line pseudospectr air pollut model arcd line d fluid flow solver bdna line molecular dynam dna dyfesm line structur dynam flo line transon inviscid flow mdg line moleclar dynam water mgd line depth migrat ocean line d ocean simul qcd line quantum chromodynam line spectral analysi weather simul track line missil track trfd line electron integr transform tabl benchmark program clude c pointer analysi support parallel c program outsid scope paper second major compon parallel code optim gener specif full suif system incorpor data loop transform increas granular parallel improv memori behavior program optim elimin unnecessari synchron paper howev adopt simpl parallel code gener strategi includ optim order focu effect parallel analysi compil parallel outermost loop analysi proven paralleliz compil suppress parallel array reduct overhead involv expect overwhelm benefit addit runtim system estim amount comput paralleliz loop use knowledg iter count run time run loop sequenti consid finegrain parallel benefit iter parallel loop evenli divid processor time parallel loop spawn applic advanc analys experiment framework current support isol contribut interprocedur scalar analys know analys import exampl performancecrit loop program embar mdljdp ora spec would parallel without one interprocedur scalar privat scalar reduct recognit select procedur clone base interprocedur constant present static dynam measur assess impact array analysi compon defin baselin system serv basi comparison throughout section baselin refer system without advanc array analys perform intraprocedur data depend capabl privat array recogn reduct note baselin system much power exist parallel compil contain interprocedur scalar analysi discuss section static measur tabl give count number loop suifparallel program requir particular techniqu paralleliz tabl count paralleliz loop includ nest within parallel loop would consequ execut parallel parallel strategi first column give number loop paralleliz baselin system next three column measur applic intraprocedur version advanc array analys measur effect includ reduct recognit privat reduct recognit privat respect next set four column interprocedur data depend analysi similarli sixth eighth column measur effect ad interprocedur reduct recog nition privat reduct recognit privat respect see tabl advanc array analys applic major program benchmark suit sever program take advantag interprocedur array analys although techniqu appli uniformli program frequenc applic rel small set program demonstr techniqu gener use observ mani loop requir new array techniqu howev loop parallel advanc array analys often involv comput and shown below make substanti differ overal perform dynam measur also measur dynam impact advanc array analys contribut analysi compon measur record specif array analys appli parallel loop instrument sequenti code determin execut time loop present execut time percentag total comput time figur c measur taken run program singl processor mhz sgi challeng result report rel term applic larg class processor note even interprocedur analysi use parallel say comput mean noninterprocedur parallel find parallel all may parallel inner loop term overal percentag time spent parallel region parallel coverag overal observ rather good coverag abov program specfp na program perfect benchmark third program spend execut time loop requir advanc array analysi techniqu graph also demonstr import parallel singl loop requir one advanc analysi techniqu be exampl program mdljdp contain two loop requir interprocedur reduct two loop program spend time intraprocedur interprocedur array reduct p p p p array privat p p p p doduc sucor hydrod na appbt buk fftpde mgrid perfect arcd bdna ocean track trfd tabl static measur number loop use techniqu suifparallel loop execut long time also larg largest loop suif parallel spec consist line code origin loop invok procedur loop contain subroutin call differ procedur within loop interprocedur privatiz array interprocedur reduct array array access independ loop illustr advantag interprocedur analysi inlin parallel larg program instead loop fulli inlin would contain nearli line code effect advanc analys section establish advanc techniqu applic mani program section address effect tech niqu provid quantit data show techniqu effect previou techniqu parallel program benchmark suit metric result parallel speedup measur overal effect parallel system also highli machin depend speedup depend number processor sensit mani aspect architectur cost synchron interconnect bandwidth memori subsystem furthermor speedup measur effect entir compil system parallel analysi focu paper exam ple techniqu improv data local minim synchron greatli improv speedup obtain thu precis captur well parallel analysi perform use two follow metric parallel coverag coverag introduc section import metric measur effect parallel analysi amdahl law program low coverag get good parallel speedup exampl even program coverag ideal speedup processor high coverag indic compil analysi locat signific amount parallel comput granular parallel program high coverag guarante achiev parallel speedup due number factor granular parallel extract particularli import factor frequent synchron slow down rather speed up finegrain parallel comput quantifi adm qcd mdg track bdna dyfesm arcd trfd spec appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp wave us us us ms ms ms sec ocean parallel coverag granular parallel applic comput d onprocessor specfp na perfect adm qcd mdg track bdna dyfesm arcd trfd spec appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp wave ocean adm qcd mdg track bdna dyfesm arcd trfd spec appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp wave ocean data depend analysi array reduct array privat array reduct array privat procedur techniqu baselin suif intraprocedur data depend analysi array privat arrayreduct interprocedur scalar analysi interprocedur scalar analysi data depend analysi adm qcd mdg track bdna dyfesm arcd trfd spec appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp wave ocean figur dynam measur suif baselin compil properti defin program granular averag execut time parallel region figur b c show comparison parallel coverag granular achiev suif baselin compil sake complet also present set speedup mea surement program benchmark suit rel short execut time well fine granular parallel shown figur c program cannot util larg number processor effect experi run program processor mhz sgi challeng speedup calcul ratio execut time origin sequenti program parallel execut time result shown figur d discuss benchmark figur b show advanc array analys dramat increas parallel coverag program word major loop requir sophist array analys contain loop parallel use convent techniqu new parallel loop also rather coars grain observ figur c overal compil achiev good result parallel specfp coverag program speedup achiev result also show coverag necessari suffici high speedup program fine granular parallel even high coverag sucor tomcatv nasa tend lower speedup anoth import factor affect speedup data local two program tomcatv nasa poor memori behavior perform program improv significantli via data loop transform improv cach local techniqu minim synchron na benchmark advanc array analys suif import success parallel na benchmark seen figur bd compar suif baselin system observ array analys two import effect enabl compil locat significantli parallel two program cgm embar also increas granular parallel appbt appsp parallel outer loop instead inner loop nest insid it observ seem like moder improv coverag appbtfrom nearli is sig nific differ correspond chang ideal speedup processor improv coverag granular na translat good speedup result six eight program yield speedup two buk low coverag surpris implement bucket sort algorithm applu although high coverag finegrain yield speedup overal advanc array analys import na half benchmark suit would speed without techniqu perfect benchmark display figur bd advanc array analys significantli improv parallel coverag bdna qcd bdna addit parallel loop provid reason granular lead speedup granular increas spec trfd speedup achiev case trfd although littl parallel speedup observ spec improv baselin system confirm valid prefer outer loop parallel whole suif doubl number program achiev speedup overal parallel perfect success two benchmark suit figur indic two basic problem half program coverag furthermor parallel found rather finegrain paralleliz loop take less s uniprocessor fact runtim system suppress parallel finegrain loop perfect result would much wors thu coverag low system exploit fraction parallel extract examin difficulti parallel perfect determin feasibl automat parallel identifi possibl futur research direct found program simpli paralleliz implement program contain lot input output eg mgd spec speedup depend success parallel io further dusti deck featur program use equival construct ocean obscur inform analysi contrast specfp na program cleanli implement thu amen automat parallel mani program particularli ocean adm mdg key comput loop safe parallel beyond scope techniqu implement suif ocean adm contain nonlinear array subscript involv multipl induct variabl beyond scope higherord induct variabl recognit alway extens automat parallel system improv effect program nonetheless fundament limit static parallel program cannot parallel compiletim informa tion exampl main loop adm paralleliz problem size unknown compil time even promis solut program check loop paralleliz run time use dynam inform interprocedur analysi optim play import part approach improv effici runtim test deriv highli optim runtim test hoist less frequent execut portion program possibl even across procedur boundari interprocedur analysi system provid excel start point work area advanc analysi also form basi use interact parallel system even analys strong enough determin loop paralleliz result use isol problemat area focu user attent them exampl compil find program qcd line interprocedur loop would paralleliz small procedur examin procedur reveal random number gener user potenti modifi run parallel request littl help user compil parallel loop perform tediou privat reduct transform automat summari tabl summar impact improv advanc array analys coverag granular speedup three benchmark suit first row contain number program report benchmark suit second row show mani program coverag increas ad advanc array analys third row give number program increas granular but similar coverag result advanc array analys fourth row show signific improv affect overal perform either improv coverag increas granular fold speedup conclus paper present extens experiment result use fulli interprocedur automat parallel system demonstr interprocedur array dataflow analysi array privat reduct recognit key technolog greatli improv success automat parallel find coarsegrain parallel perfect number program improv coverag increas granular improv speedup tabl summari experiment result compil increas parallel coverag lower synchron cost improv speedup work discov effect interprocedur parallel system depend strength individu analys abil work togeth integr fashion comprehens approach parallel analysi system much effect automat parallel previou interprocedur system commerci avail compil program analysi suffici find avail parallel program seem imposs unlik pure static analysi could discov parallelismeith correct parallel requir dynam inform avail compil time difficult analyz case benefit support runtim parallel user inter action aggress static parallel built provid good start point investig techniqu acknowledg author wish thank patrick sathyanathan alex seibulescu contribut design implement system rest suif group particularli jennif anderson chri wilson provid support infrastructur upon system built r data comput transform multiprocessor perform analysi parallel compil perfect benchmark program rang test depend test symbol methodolog procedur clone interprocedur array region analys practic depend test symbol analysi basi paral leliz interprocedur analysi parallel interprocedur analysi parallel design experi fiat framework interprocedur analysi transform interprocedur symbol analysi implement interprocedur bound regular section analysi empir studi precis interprocedur array analysi interprocedur analys program environ semant interprocedur paralleliza tion overview pip project safe approxim algorithm interprocedur pointer alias effici interprocedur analysi program restructur parallel program effici way break multiloop depend equat effici exact data depend analysi convex applic compil precis interprocedur data flow algorithm empir investig effect limit automat parallel direct parallel call statement compil optim elimin barrier synchron automat array privat improv local parallel nest loop tr direct parallel call statement effici interprocedur analysi program parallel restructur semant interprocedur parallel effici exact data depend analysi practic depend test delinear safe approxim algorithm interprocedur alias improv local parallel nest loop rang test empir studi precis interprocedur array analysi compil optim elimin barrier synchron data comput transform multiprocessor precis interprocedur data flow algorithm implement interprocedur bound regular section analysi perform analysi parallel compil perfect benchmark program fiat automat array privat polari symbol analysi interprocedur array region analys interprocedur analysi parallel ctr michael g burk ron k cytron interprocedur depend analysi parallel acm sigplan notic v n april mari w hall jennif m anderson saman p amarasingh brian r murphi shihwei liao edouard bugnion monica s lam maxim multiprocessor perform suif compil comput v n p decemb saman p amarasingh jennif m anderson christoph s wilson shihwei liao brian r murphi robert s french monica s lam mari w hall multiprocessor softwar perspect ieee micro v n p june hwansoo han chauwen tseng pete keleh elimin barrier synchron compilerparallel code softwar dsm intern journal parallel program v n p octob e gutirrez o plata e l zapata compil method parallel execut irregular reduct scalabl share memori multiprocessor proceed th intern confer supercomput p may santa fe new mexico unit state manish gupta rahul nim techniqu specul runtim parallel loop proceed acmiee confer supercomput cdrom p novemb san jose ca byoungro sungdo moon mari w hall measur effect automat parallel suif proceed th intern confer supercomput p juli melbourn australia manish gupta sayak mukhopadhyay navin sinha automat parallel recurs procedur intern journal parallel program v n p decemb martin rinard pedro diniz elimin synchron bottleneck objectbas program use adapt replic proceed th intern confer supercomput p june rhode greec shihwei liao amer diwan robert p bosch jr anwar ghuloum monica s lam suif explor interact interprocedur parallel acm sigplan notic v n p aug radu rugina martin rinard automat parallel divid conquer algorithm acm sigplan notic v n p aug heidi e ziegler mari w hall pedro c diniz compilergener commun pipelin fpga applic proceed th confer design autom june anaheim ca usa edouard bugnion jennif m anderson todd c mowri mendel rosenblum monica s lam compilerdirect page color multiprocessor acm sigplan notic v n p sept sungdo moon byoungro mari w hall evalu automat parallel suif ieee transact parallel distribut system v n p januari shihwei liao zhaohui du gansha wu gueiyuan lueh data comput transform brook stream applic multiprocessor proceed intern symposium code gener optim p march pierr palatin yve lhuillier olivi temam capsul hardwareassist parallel execut componentbas program proceed th annual ieeeacm intern symposium microarchitectur p decemb yuanshin hwang parallel graph construct oper program cyclic graph parallel comput v n p septemb sungdo moon byoungro mari w hall combin compiletim runtim parallel scientif program v n p august yuanshin hwang joel h saltz identifi parallel program cyclic graph journal parallel distribut comput v n p march martin c rinard pedro c diniz commut analysi new analysi framework parallel compil acm sigplan notic v n p may silviu ru guobin christoph alia lawrenc rauchwerg region array ssa proceed th intern confer parallel architectur compil techniqu septemb seattl washington usa yuan lin david padua compil analysi irregular memori access acm sigplan notic v n p may mahmut taylan kandemir compil techniqu improv wholeprogram local acm sigplan notic v n p march sungdo moon mari w hall evalu predic array dataflow analysi automat parallel acm sigplan notic v n p aug kathryn s mckinley compil optim algorithm sharedmemori multiprocessor ieee transact parallel distribut system v n p august heidi ziegler mari hall evalu heurist automat map multiloop applic fpga proceed acmsigda th intern symposium fieldprogramm gate array februari monterey california usa mahmut taylan kandemir improv wholeprogram local use intraprocedur interprocedur transform journal parallel distribut comput v n p may martin c rinard pedro c diniz elimin synchron bottleneck use adapt replic acm transact program languag system topla v n p may martin c rinard pedro c diniz commut analysi new analysi techniqu parallel compil acm transact program languag system topla v n p nov g vranes michael stumm leo budin analyt predict perform cach coher protocol ieee transact comput v n p novemb michael beynon chialin chang umit catalyurek tahsin kurc alan sussman henriqu andrad renato ferreira joel saltz process largescal multidimension data parallel distribut environ parallel comput v n p may radu rugina martin c rinard symbol bound analysi pointer array indic access memori region acm transact program languag system topla v n p march mari w hall saman p amarasingh brian r murphi shihwei liao monica s lam interprocedur parallel analysi suif acm transact program languag system topla v n p juli