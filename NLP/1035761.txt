t constraintbas structur network protocol a complex design protocol led composit techniqu design verifi protocol propos techniqu base notion parallel composit protocol view composit protocol interleav execut compon protocol subject set constraint use constraint build block defin sever constraintbas structur structur combin properti compon protocol differ way instanc compon protocol multifunct protocol structur composit protocol perform individu function concurr perform one depend order initi compon protocol provid infer rule infer safeti live properti composit protocol properti deriv compon protocol other deriv structur mechan the set constraint use combin compon protocol b introduct distribut protocol typic complex perform sever function modul perform variou function may interact one anoth complex manner make design verif protocol difficult task sever formal specifi protocol propos provid basic oper process synchron modular design protocol sever structur techniqu protocol specifi formal pro pose structur techniqu follow separ concern paradigm function protocol first decompos subfunct protocol variou subfunct design separ combin use fix set rule obtain protocol entir problem advantag techniqu allow design focu one aspect subfunct time addit certain case properti composit protocol infer compon protocol sequenti composit one structur techniqu allow design protocol perform multipl function sequenc let two protocol p perform first subtask q perform second subtask sequenti composit p q requir p execut q site i exampl p perform connect establish q data transfer protocol p q denot protocol first establish connect transfer data suffici condit deriv infer properti combin protocol exampl show compon protocol deadlock free properli termin composit protocol also deadlockfre properli termin mani multifunct protocol sever activ may perform concurr case combin compon protocol execut interleav manner interact one anoth refer parallel composit protocol wherein compon protocol execut concurr sever formal base parallel composit propos propos notion superimposit parallel composit basic comput p control protocol q case q observ event p constrain execut exampl deadlock avoid protocol superimpos basic comput which control basic comput prevent deadlock methodolog propos oper constraint which form proposit ad guard send statement p q constrain execut constraint p may includ variabl q union construct propos also allow interleav execut compon protocol without constraint propos techniqu parallel composit protocol model parallel composit interleav execut compon protocol p q subject set constraint constraint local natur describ interact p q i paper studi two type constraint synchron inhibit describ interact use constraint build block defin sever constraintbas structur combin set compon protocol structur combin properti compon protocol differ way use structur show sever exist protocol redesign modular fashion synchron constraint requir certain action p q synchro nize constraint use combin p q produc multifunct protocol perform function p q concurr exampl problem nprocess mutual exclus decompos subproblem enforc mutual exclus pair process use synchron constraint combin twoprocess mutual exclus protocol one pair process obtain nprocess protocol combin protocol data transfer protocol flow control also design protocol transfer data flow control inhibit constraint specifi process may requir q inhibit initi p q constraint use inhibit execut one protocol which may alreadi execut initi anoth protocol inhibit constraint use exampl design multifunct protocol potenti perform function specifi compon protocol must perform one them exampl design leader elect protocol elect site leader must elect one them give set rule infer safeti live properti composit protocol safeti live properti composit protocol infer compon protocol wherea infer structur impos constraint proof system close relat one project method verifi protocol propos project techniqu alreadi design protocol decompos purpos analysi techniqu view invers project method exampl p q compos obtain r project r variabl messag p give protocol ident p except guard may addit boolean conjunct show differ protocol obtain impos differ constraint set compon protocol mention abov sequenti composit allow construct multifunct protocol perform function sequenc model sequenti composit use order constraint p q i techniqu propos paper also view composit term set constraint allow construct multifunct protocol either perform compon function concurr perform one them togeth order constraint propos techniqu use design complex protocol also advoc use techniqu conjunct stepwis refin techniqu first simpl protocol mayb ineffici one correct deriv use techniqu refin stepmann optim it paper organ follow next section present formal specifi protocol section discuss exampl section present composit principl section describ properti composit protocol final conclud section model protocol p set process model commun channel p p j sequenc ch ij messag messag form mpara list type messag para list list paramet statement j marg list execut p caus marg list append end ch ij statement i mpara list execut p j remov messag head ch ij if exist messag type head channel store content messag para list execut i mpara list block exist messag type head channel p follow normal form init l l ena l init initi action use specifi initi valu variabl therefor assum contain local comput a l guard action l label ena l guard l comput associ action guard ena l form bool l rec l bool l boolean express rec l receiv statement both part option bool l rec l evalu true bool l true messag indic rec l receiv that is head channel comput l may contain send statement local comput execut altern statement l l ena l gamma l involv evalu guard action execut action x ena x true statement s involv repetit execut statement s figur give twoprocess mutual exclus protocol mut i j process j protocol singl token circul process process hold token enter critic section variabl hold ij true hold token variabl ext set true want enter critic section hold token check whether pend request one exist enter critic section by set true check made check ij set true exit critic section set fals check ij true hold token critic section send token j protocol site j similar except initi section hold set fals denot set variabl appear p varp denot set messag sent receiv p messp state p defin valu variabl varp use predic initp character initi state p thi predic reflect assign made init state channel p p j valu ch ij state system tupl s state process repres state channel initi state system state channel empti initp event associ action event occur comput associ action execut use denot event correspond true rtoken ij j token gamma hold ij trueenter ij check ij hold ij gamma check ij true ext gamma check ij gamma j token check ij hold ij falserequest ij gamma ext true figur protocol mut i j site th execut action a assum execut event atom respect event execut protocol maxim sequenc initi state l event e l enabl state g l execut comput associ e l transform state g l g l say reachabl g exist sequenc em e l transform state g l g l l m defin proposit initiatep follow initiatep initi fals becom true action loop statement p execut inform whether p site initi sinc init use specifi initi valu onli p consid initi execut action loop statement also defin initi initi pn activ p initi pn say p initi p exist execut p p send messag receiv messag inform initi protocol process start protocol send messag process without first receiv messag protocol one initi assert invari p true initi state p state reachabl initi state defin relat follow ff fi execut p iff follow hold x ff true g x exist state g x fi hold g ff fi execut p inform ff fi impli ff becom true fi becom true futur exampl ext mut i impli want enter critic section eventu so prove properti assum follow strong fair condit action enabl infinit often execut cannot delay indefinit composit approach let p q two compon protocol composit protocol r framework structur set interact compon protocol interact protocol specifi set constraint constraint local natur ie specifi process site therefor r deriv process site with p q compon protocol r constraint introduc constraint use exampl synchron constraint synchron constraint action p q requir execut synchron ie system treat p q singl action enabl ena p ena q true synchron constraint use design protocol perform multipl function concurr function may impos differ restrict common action synchron constraint ensur restrict compon protocol satisfi first set exampl protocol use synchron constraint involv problem decompos subproblem subproblem origin problem smaller size exampl mutual exclus problem three site decompos three subproblem involv mutual exclus pair site figur show twoprocess mutual exclus protocol mi j pair i j site threeprocess protocol mut obtain combin m m m follow mut want ensur in protocol m maintain in requir enter which set true execut receiv permiss in form token mut ensur in similar way impos synchron constraint enter enter ensur mut enent enent true assign valu true which maintain invari similar constraint need enforc site protocol extend nprocess mutual exclus protocol anoth exampl consid protocol sender send set data item number receiv synchron manner sender send data item receiv receiv acknowledg receiv send next data item consid correspond protocol data ri sender singl receiv ri iter protocol iter sender send next data item wait acknowledg increment next origin protocol obtain combin synchron action increment next which share variabl ensur next data item sent acknowledg receiv receiv anoth class multifunct protocol design use synchron constraint consist protocol involv distinct type subproblem consid protocol data f low shown figur protocol data perform function send sequenc data item array sdata sender receiv r store rdata data data item sent variabl use increment action send data item readi transmiss we assum higher layer protocol produc data item set readyx true place data item x sdatax protocol f low perform function flow control protocol send req messag r credit whenev credit left receiv req messag r send credit spend increment use action spend whenev credit avail protocol dataf low perform data transfer flow control obtain execut data f low interleav manner synchron constraint action spend send each action impos differ constraint variabl use increment discuss later use increment spend send execut result data item sent readi transmiss credit avail add properti dataf low increment fashion f low avail use use avail gamma use use data use readyus use use low r grant grant sreqx gamma grant data r next recr sdatay gamma next figur data flow control protocol instanc channel may reorder messag dataf low guarante sdatai guarante order deliveri compos low protocol seq ensur order deliveri messag impos restrict array rdata updat receiv site notion superimposit composit mechan model use synchron constraint superimposit requir p superimpos q messag type q action send ingreceiv q must synchron action sendingreceiv p sinc superimposit framework design reason control protocol synchron allow sendingreceiv action onli inhibit constraint inhibit constraint specifi pair p indic initi p execut q must inhibit use constraint describ interact wherein one protocol may inhibit execut anoth protocol constraint use deriv sever type multifunct protocol shown follow exampl certain multifunct protocol may requir one compon protocol explicitli termin anoth compon protocol exampl connect manag protocol typic perform follow two function connect establish disconnect disconnect protocol initi time initi protocol execut data transfer phase inhibit case site both sender receiv initi process belong disconnect protocol termin process belong connect protocol specifi interact disconnect protocol termin connect establish protocol implement p termin q specifi p inhibit q termin relat asymmetr one gener may allow p q inhibit one anoth relationship use design multifunct protocol perform one possibl multipl function time consid case compon protocol singl initi p q initi site i defin conf lict relat specifi p q inhibit other case initi one inhibit initi other p q initi differ site initi concurr case specifi prioriti relationship say p prioriti q q inhibit initi concurr implement specifi p inhibit q p j initi p q inhibit p j thu q initi first lead initi q select execut figur give threeprocess travers protocol travers initi network three site ident protocol node send messag contain ident set leader true receiv ack messag protocol perform function elect leader obtain leaderelect protocol combin travers travers travers specifi constraint traversei prioriti traversej j constraint implement rule travers initi node larger ident encount travers smaller ident travers smaller ident inhibit anoth exampl consid simpl connect establish protocol sent gamma captureid sent trueelect win gamma leader true recd recd figur process travers algorithm initi site establish connect j consid composit connect connect fullduplex protocol connect allow direct concurr design combin connect connect constraint howev connect one direct allow specifi connect prioriti connect or viceversa initi differ site case initi connect establish time connect establish consid protocol connect connect allow establish connect one site time for instanc server client server may allow connect one client time achiev specifi use sequenti composit combin result protocol get iter protocol connect establish disconnect protocol return initi state choic avail establish connect either direct connect connect conflict protocol as initi site use combin constraint mani complex protocol design illustr section set compon protocol structur differ way use differ set constraint although protocol discuss design befor use techniqu make design modular and help understand overal structur protocol aim make disciplin use constraint combin protocol welldefin structur discuss abov order ensur properti combin use infer rule next section develop framework formal restrict constraint composit principl section give formal definit composit techniqu discuss algorithm obtain composit protocol consid composit two compon protocol onli let two compon protocol assum p q share messag but p q may share variabl composit protocol r obtain p q specifi one type constraint synchron constraint inhibit constraint constraint given p q constraint composit protocol involv interleav execut p q subject specifi constraint follow section discuss composit use synchronz constraint inhibit constraint composit use synchron constraint synchron constraint specifi use set synchp q pair a b belong synchp q specifi action b subject synchron constraint b action belong p q respect i section give first give algorithm obtain composit protocol r p q constraint discuss rule infer r p q present algorithm defin certain restrict constraint ensur properti compon protocol combin use welldefin rule first defin notion match action action ap aq p q respect match action updat variabl action enter enter comput check true ext true ext fals check true ext true ext fals match denot set action p q updat variabl exampl fenter request request g say p q match protocol action sharedp q belong p q exist distinct match action q p the match function onetoon exampl protocol mut mut match sinc fenter enter g fexit exit g frequest request g match pair action say action p belong synchp q a b synchp q action b q requir follow restrict must match everi match pair action must belong synchp q belong synchp q ena involv receiv messag note addit action requir present restrict s addit pair action also restrict given defin match infer rule given folow possibl defin way use constraint associ infer rule less restrict will gener impli complex infer rule extrem case allow arbitrari constraint specifi provid infer rule thi would requir analysi composit protocol directli sinc channel share restrict requir ensur deadlock freedom framework assum p q share messag extend framework allow messag share relax allow action receiv share messag in case match action b also involv receiv share messag algorithm gener composit protocol section discuss algorithm obtain composit protocol r p q synchp q constraint implement sever way instanc creat control process node superimpos p q enforc constraint follow give implement constraint creat singl process r p q constraint a initi action p q respect initi action r a action loop statement r obtain follow action p q ffl synchp q a ena gamma r ffl let ena gamma c c c action sharedp q b enb gamma match action ab r ab new label case say action ab obtain fuse action b deriv three process mutual exclus protocol use protocol figur discuss befor mut mut match henc first obtain combin mut mut synch set as protocol three process obtain combin mut mut protocol mut follow pair match action enter req belong sharedm also match combin protocol obtain mut shown figur properti composit protocol present rule enabl us infer properti composit protocol compon protocol let f p set formula hold true hold rtoken token gamma hold truertoken token gamma hold check hold hold gamma check true check gamma hold check gamma token check hold falsestoken hold check in gamma token check fals hold falserequest gamma ext true figur three process mutual exclus protocol refer variabl varp let ef p set formula refer variabl varp proposit form ch ij messag set ef p allow refer number messag channel posit messag channel let r protocol obtain combin p q synchp q follow lemma allow us infer invari r p q condit s updat share variabl q p made p q readi make updat henc updat share variabl made consist manner lemma ef p invari p invari r know in invari mut i j then correspond invari mut mut use lemma infer i invari mut use share variabl invari relat variabl p q also infer exampl protocol low grant next which impli receiv never receiv data item grant permiss infer invari grant use an invari f low use next an invari data invari infer constraint impos lemma reflect natur structur impos synchron constraint let occur proposit true event e occur defin earlier refer th execut action a lemma a b synchp q ff occura invari p invari q ff fi invari r exampl mut let recd sent auxiliari variabl indic number time receiv token number time sent token then recd invari mut sinc token initi occurent x invari mut henc recd invari mut which use show mut process send token readi send one again addit invari design proof rule gener safeti properti exampl p satisfi ff unless fi execut i ff true g either ff remain true subsequ state exist ff true g k true g j ff unless fi p ff fi ef p ff unless fi r inform follow fact state g k belong q cannot invalid ff if cannot refer variabl ff a e k sinc invalid ff e k cannot invalid ff discuss live properti first give set proof rule infer live properti protocol follow let fffg ffig mean ff true execut fi true execut a ff fi via p follow hold invari p fffg ffig action b fff enbg b fff fig further ff fi p one follow true invari action p set formula b disjunct formula s let firstch ij denot messag head channel ch ij protocol p free unspecifi recept exist reachabl state g state g j firstch ij action p j receiv enabl g p free unspecifi recept messag m ch ij commun channel need ensur r free unspecifi recept restrict s follow lemma lemma p q free unspecifi recept r free unspecifi recept follow assum r free unspecifi recept give infer rule deriv live properti r lemma ff fi via p ff fi ef p synchp q ff fi r say local p deriv involv applic rule l action synchp q corollari lemma have corollari ff fi local p ff fi r combin mut mut exampl hold check in hold local mut therefor hold composit protocol consid case a b belong synchp q ff fi via c action obtain fuse b assum ff hold r state g then ena hold g show c eventu execut thi enb must becom true sinc thu follow lemma lemma a b synchp q ff fi via p ena ff enb r invari r ff fi r consid flow control protocol shown figur know readyy data infer properti low follow infer use invari lemma follow invari invaraint f low then use rule l use avail use local f low use composit protocol then rule l use use lemma readyy hold composit protocol special case identifi check c alway execut irr spectiv ff i exampl show a b synchp q p impli ff fi r thi instanc shown follow class composit let iter protocol p execut action execut action iter p q similar synchp exampl would satisfi given restrict the synchron constraint must respect cyclic order condit gener iter protocol two process composit use inhibit constraint discuss composit use inhibit constraint requir inhibit constraint specifi use set inhibitp q consist pair process p belong inhibitp q initi p inhibit that is initiatep becom true action q execut requir inhibitp q satisfi follow restrict use inhibit constraint specifi termin prioriti conflict relat defin relat domin follow p q belong domin p termin q p prioriti q requir domin relat acycl algorithm gener composit protocol use follow rule deriv composit process r p q b let initi action p q p q respect introduc two new variabl enabl p enabl q then initi action r b action loop statement r obtain follow let action p first appli rule a modifi action a appli b modifi the rule appli modifi action q a p modifi a ena gamma fals els modifi b q modifi ad enabl p conjunct guard a addit involv command new action new enabl p introduc r new new label optim rule b first action loop statement execut p known need add enabl q fals action section discuss deriv threeprocess leader elect protocol combin travers protocol protocol construct algorithm use constraint discuss section shown figur properti composit protocol inhibitp q nonempti share variabl allow howev case protocol inhibit addit action ad modifi channel contentsm therefor invari refer channel content may preserv henc follow lemma lemma inhibitp q nonempti f p invari p invari r use lemma infer leader recd recd invari leader elect protocol fact invari travers lemma refin special case exampl ef p invari p termin q p prioriti q p q conflict initi p invari r intuit initi p impli p inhibit q therefor execut p impact q henc invari refer channel content preserv gamma sent sent gamma captureid sent sent gamma captureid sent win gamma leader figur three process elect algorithm recal initi p true execut p initi initi activ p true process p initi let enabl enabl pn definit initi p activ p fals intial state stabl predic onc becom true remain true hand enabl p true initi state stabl enabl p assign fals q lemma a p termin q initi p invari r b p prioriti q initi p invari r c p q conflict initi p invari r corollari ff initi p fi activ q invari p q respect ff f p fi f q p prioriti q p conflict ff invari r consid leader elect protocol discuss earlier know leader activ ravers leader initi ravers invari travers travers respect sinc travers prioriti travers invari composit protocol similarli use corollari show protocol obtain combin connect connect connect establish one direct protocol obtain combin connect connect establish either sinc p q share commun channel need ensur r free unspecifi recept addit transit ad rule bb follow lemma lemma p q free unspecifi recept r free unspecifi recept consid case inhibitp q nonempti initi protocol enabl exist pair q p possibl ff becom true p inhibit fi never becom true there fore gener state exist pair q ff fi p ff enabl p fi r thi howev may suffici infer interest live properti r follow lemma exploit properti inhibit constraint infer addit live properti lemma let ff fi p ff fi ef p p termin q p prioriti q p q conflict ff initi p fi q prioriti activ corollari true fi p p true fi q q inhibitp q empti true applic corollari consid composit travers travers sinc true leader travers true leader travers corollari infer true composit protocol use lemma also show true activ p p true activ q q p prioriti q p q conflict true activ p phi activ q r thi reflect natur composit dictat one becom activ conclus present framework compos protocol use synchron inhibit constraint synchron constraint allow deriv multifunct protocol perform compon function concurr inhibit constraint use design multifunct protocol perform one compon function demonstr use constraint design sever protocol present set rule infer safeti live properti composit protocol model sequenti composit set protocol execut order constraint propos formal view composit protocol concurr execut compon protocol subject set constraint futur work involv develop unifi formal allow order synchron inhibit constraint find mani composit protocol requir combin constraint for instanc order synchron constraint two protocol sever type control protocol structur use inhibit constraint exampl consid snapshot protocol record global state typic initi whenev chang network state observ node dynam network snapshot protocol progress node detect chang again may reiniti protocol node requir particip new initi initi protocol consid new execut inhibit old execut model would requir extens framework allow messag share protocol interact use inhibit constraint part futur work r two normal form theorem csp program finit state descript commun protocol composit approach superimposit distribut snapshot determin global state distribut system parallel program design decomposit method analysi design finit state protocol disciplin construct multiphas commun protocol decomposit distribut program commun close layer commun sequenti process methodolog construct commun protocol multipl concurr function improv method construct multiphas commun protocol hierarch correct proof distribut algo rithm construct multiphas protocol design distribut algorithm mean formal sequenti phase reason latticestructur proof techniqu appli minimum span tree algorithm tr hierarch correct proof distribut algorithm composit approach superimposit relat notat state transit system disciplin construct multiphas commun protocol distribut snapshot commun sequenti process improv method construct multiphas commun protocol design distribut algorithm mean formal sequenti phase reason extend abstract decomposit method analysi design finit state protocol