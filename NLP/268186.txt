t bound delay time analysi class csp program a describ algebra techniqu perform time analysi class asynchron circuit describ csp program includ martin probe oper restrict orcaus guard select either complet free mutual exclus descript transform safe petri net interv time delay specifi place net time analysi perform determin extrem separ time two commun action csp program possibl time execut system formal defin problem propos algorithm solut demonstr polynomi run time nontrivi parameter exampl petri net node reachabl state analyz use techniqu b introduct much work past decad synthesi speedindepend quasidelay insensit circuit develop paper basic result allow design reason about thu synthes nonspeedindepend time circuit whether design time asynchron circuit good idea debat ad infinitum event design appli seat pant techniqu design time circuit year work use verifi design vision howev much broad includ complet synthesi methodolog develop robust highperform time design descript methodolog beyond scope paper major motiv address difficult time analysi problem asynchron circuit specifi use csp set concurr process descript transform safe petri net input time analysi algorithm analysi determin extrem case separ time two commun action csp specif time execut determin tight bound separ time commun action system event provid inform use answer mani differ tempor question exampl may wish know bound cycl period asynchron compon use drive clock signal synchron compon similar inform use gener worstcas amort perform bound may also perform minimum separ analys order determin feasibl remov circuitri speedindepend implement algorithm perform sort analys use mani context mani level abstract separ analys highlevel use help design choos among potenti design perform given comput lower level use determin correct implement eg whether isochron fork assumpt valid relat work time analysi verif concurr system come varieti differ research commun includ realtim system vlsi cad oper research time automata one power model autom verif method exist time automaton number clock timer whose valu use guard transit automaton model extens studi sever algorithm exist determin time properti time automata untim case time automata suffer state explos problem construct cross product compon specif furthermor verif time proport product maximum valu clock also proport number permut clock improv runtim complex burch extend trace theori discret time still use automatabas method verif approach also suffer exponenti runtim size delay valu avoid factori associ permut clock orbit use convex region repres set time state thu avoid explicit enumer individu discret time state orbit base petri net model augment time inform petri net base approach includ time petri net time petri net time petri net fix delay associ transit time petri net use gener model delay rang associ transit paper compos seven section follow introduct descript csp specif languag translat petri net time untim execut semant petri net introduc section algorithm perform time analysi petri net describ section section present parameteriz exampl use benchmark perform algorithm final section summar contribut paper specif describ specif languag show translat specif intermedi form suitabl time analysi csp program specifi comput use csp martin style simplifi time analysi restrict express power specif languag first exclud disjunct guard correspond orcaus known difficult second requir semant properti untim execut either choic guard complet free all guard ident true one guard evalu true shall see section allow use untim execut determin possibl time behavior import simplif time analysi problem restrict still allow analysi larg interest class csp program includ mani program specifi implement abstract asynchron control circuit syntax restrict csp program p shown tabl figur a show simpl csp program three process tabl syntax restrict csp p program statement c commun action e express b guard term termin symbol x x repres variabl identifi commun channel respect petri net csp specif translat safe petri net direct input time analysi net n tupl s finit disjoint nonempti set respect place transit f s theta t theta s flow relat petri net sigma pair n n net initi mark see detail petri net model graphic petri net repres bipartit graph whose node whose edg repres flow relat f circl repres place straight line repres transit initi mark shown dot token figur b show simpl petri net element x preset postset x defin fy fy mark repres global state system transit enabl mark input place mark ie fire enabl transit produc new mark construct remov token place preset ad token place postset t transform fire denot tim let mi denot set mark reachabl mark translat csp petri net csp specif translat safe petri net petri net transit use model commun synchron place use model control choic petri net construct syntax direct translat map amount introduc singl token correspond program counter commun process variabl x model two place x x x true x mark otherwis x mark construct net process transit combin correspond match commun action figur show simpl csp specif correspond petri net a c e f b figur a csp specif b correspond petri net sigma two complic translat one consist label petri net transit correspond commun action occur differ number time connect process label problem illustr simplest form follow csp program compos divid two counter connect trivial environ x commun p connect two x commun p solv label problem introduc separ label possibl pair commun action exampl introduc two label x x choic possibl commun obtain net shown figur figur petri net individu process divid two counter second complic translat probe construct x probe commun action x complet immedi split two first half implement guard select statement second half implement actual commun action figur illustr translat properti petri net petri net obtain csp specif follow properti figur petri net incomplet csp program ffl petri net safe ie never one token place choic place ie jsfflj either extend free choic uniqu choic place extend free choic place uniqu choic one successor transit ever becom enabl denot number transit sffl enabl mark place uniqu choic m place net figur b execut semant repres set untim execut introduc notion process intuit process unfold petri net repres one possibl finit execut petri net process use give time semant petri net process defin set legal assign time stamp transit process process petri net sigma net n label lab we subscript s f distinguish net sigma net n acycl without choic ie without branch place n lab must satisfi appropri properti interpret execut sigma figur show process petri net figur b true choic net place nondeterminist select either transit c d process repres execut first time transit c fire next time transit fire denot untim execut petri net sigma set process sigmag safe petri net finit number reachabl mark process properti cut place correspond reachabl mark sigma lemma therefor suffici long process contain repeat segment process repres potenti infinit e c f figur process petri net sigma figur b place transit process label use lab function name correspond place transit sigma set process pisigma finit graph call process automaton vertic process automaton correspond mark sigma edg annot segment process let v denot vertex correspond initi mark consid path p process automaton vertex u v denot u p v p process obtain concaten process segment annot edg p process automaton properti pref p v path process automaton pref set prefix defin partial order process construct process automaton without first construct reachabl graph concurr net size process automaton equal size reachabl graph howev high degre concurr process automaton consider smaller figur show process automaton associ process petri net figur b process figur construct f e figur left process automaton petri net figur b three process segment annot edg shown right label element sigma sigma time execut incorpor time petri net model associ delay bound place net lower delay bound ds r gamma upper delay bound ds r gamma fg r gamma set nonneg real number satisfi delay bound restrict possibl execut petri net time execut net token ad place s earliest becom avail transit sffl later latest ds unit later transit must fire avail token place fflt unless fire transit disabl fire anoth transit fire instantan formal time assign process function map transit process time valu definit let sigma safe petri net let process sigma consid cut c let enabl sigma set transit enabl correspond mark c time assign transit enabl earliest latest global fire time given starttimeb denot set element map lab note c lab gamma fflt nonempti enabl mark c function starttim take place return time token enter place labb ie e transit e set starttimeb time assign consist cut c if time assign process consist consist place cut c process let pi time sigma set time execut sigma time pisigma exist consist time assign restrict csp specif section craft set untim time process underli petri net equival allow us use process automaton enumer possibl process without refer time inform perform time analysi process individu prove thi need two lemma first state alway possibl find time assign satisfi definit second lemma state simpl structur properti extend free choic place lemma let sigma safe petri net sigma earliestt latestt process sigma time assign not necessarili consist proof definit earliest latest fact place s lemma let sigma petri net let sigma extend free choic place proof contradict assum fflt fflt place assum without loss gener fflt fflt definit extend free choic place follow ffl premis lemma sffl thu also ffl simpl fact pre postset xffl x ffli ffl fflt contradict assumpt theorem let sigma safe petri net choic either extend free choic uniqu choic pi time proof clearli pi time sigma pisigma show pisigma pi time sigma ie exist consist time assign pisigma prove cut c b c constraint subsum constraint lemma follow process exist consist time assign observ labbffl labbffl thu labbffl enabl nonempti labbffl enabl let c cut let b place c trivial satisfi bffl let e one element bffl all place b process jbfflj let place sigma correspond b ie labb observ state labe enabl consid two case labe element sffl enabl reduc e latestlab choic place either extend free choic uniqu choic extend free choic lemma definit latest follow minim idempot labe reduc e latestlab uniqu choic definit uniqu choic thu labe element sffl enabl condit reduc e latestlab time analysi formal defin time semant petri net state time analysi problem present algorithm solv problem problem formul given two transit petri net sigma sigma wish determin extremecas separ time relat fire let b pi set tripl dst i pisigma src dst transit process labt src labt dst set b pi use describ possibl process distinguish transit src dst appropri relationship time analysi perform is b pi consist time assign determin largest ffi smallest delta transit src dst must relat order time analysi yield interest inform consid find maximum time consecut fire transit figur b correspond maximum cycl time transit separ a occurr a src dst transit must restrict element b pi properti transit src dst label a exampl one element b pi process figur src dst leftmost rightmost transit label a respect relationship src dst defin backward rel index specifi two number fi fl refer transit ref sigma particular find correspond transit src dst follow procedur start end process move backward look transit found continu move backward look fith transit start src simultan find flth transit dst found includ h src dst b pi specif separ analysi petri net sigma thu consist three transit ref sigma two constant fi fl n call fi fl occurr indic rel transit ref let pisigma fi fl ref denot set tripl h src dst pisigma src dst relat describ abov one commun action csp program may map mani transit sigma transit consid equival perform time analysi instead specifi separ individu transit specifi set transit ie separ analysi specifi two occurr indic fi fl three set transit sigma from to ref final formul is straightforward given commun action determin transit includ set sometim may also want consid sever csp commun action equival respect separ analysi we see exampl section conveni achiev ad correspond petri net transit appropri to ref set sequel discuss maximum separ analysi ie find delta separ ffi found maximum separ analysi t src dst accomplish comput b pi use revers role to fi fl b ctse algorithm let delta b maximum separ src dst particular execut b delta b consist time assign maximum separ execut given show element b pi construct obtain delta section describ algorithm comput delta b process automaton repres possibl execut howev whatev topolog dst process cannot influenc maximum separ two transit portion process follow src dst therefor ignor process b pi end termin process segment includ two transit src dst let p process contain src dst path p process automaton start decompos process p p path process automaton minim process segment contain src dst process segment call termin segment let pi u finit set process segment path v u process automaton pi u process p b pi figur show two termin process segment belong pi v atoa separ analysi exampl exampl process b pi construct p v e c f figur two termin process label use lab separ analysi next transit petri net figur b algorithm comput delta b phrase algebra term segment process correspond element algebra use denot element process segment algebra allow us reus analysi shorter process comput delta b oper algebra associ the detail shown next section two oper algebra choic j concaten fi approach analyz infinit set b pi enumer process b increas length unfold process automaton use breadthfirst travers travers automaton backward start termin segment element algebra store node v process automaton let v k denot algebra element store node v process automaton k th iter initi v vg travers process automaton backward element algebra compos use fi two path seri combin use j two path parallel choic oper combin backward path reach mark process automaton illustr show backward travers reconverg correspond process automaton figur two termin process figur exampl v whenev node v reach k th unfold v repres maximum separ execut repres unfold denot delta k valu maxim valu previou unfold delta kg follow delta k lower bound delta given node v process automaton comput upper bound unfold bound denot v k let c vertex cut process automaton upper bound delta k th unfold delta cg delta k less equal delta k k stop unfold report exact maximum separ possibl upper lower bound converg case bound may still provid use inform delta rang main loop ctse algorithm shown figur algorithm ctseg vg v f unfold onceg return figur ctse algorithm comput delta given process automaton g runtim algorithm depend size represent algebra element size element may larg number path two node relat element ie exponenti number iter k practic prune drastic reduc element size comput delta b section describ algebra use ctse algorithm algebra use reformul algorithm mcmillan dill determin maximum separ two event acycl graph algebra present algorithm comput delta b introduc two algebra first min algebra r fg phi element ident element phi second algebra denot element f function repres set pair singleton set fhl uig u rowvector length n repres columnvector length n andomega denot inner product min algebra gener set fhl repres function associ two binari oper function function maxim f phi g function composit fomega g follow function maxim defin set union f phi g function composit gomega h defin fx m hgx m m notic use lefttoright function composit m function compositionomega distribut function maxim phi element ident element function maxim composit respect two pair represent function remov sinc x m minx m m proper applic observ greatli simplifi represent function acycl time separ event algorithm present algebra formul mcmillan dill algorithm comput delta b place transit comput pair f m f f rfg algorithm shown figur inform algorithm work follow maxim valu t dst need find time assign maxim t dst minim t src first element f repres longest path use ds transit dst second element repres shortest path use gammad src algebra f part complic fact delay given place assign ds ds f part must repres longest path respect delay assign shortest path comput detail see find maximum separ repres f m pair evalu f comput sum longest shortest path comput delta b maxim f m pair initi mark delta b pair fflg ffl denot set fs similarli ffl denot set fs j g decomposit algebra formul allow decomposit comput use matric consid process segment repres comput algorithm two n theta matric f m given vector mvalu ffl m algorithm deltab element backward topolog order place s comput pair f ae migomega f f m pair store ae pair store transit t comput pair f ae dst phiff place j tfflg otherwis ae phi fm place j tfflg otherwis figur algorithm comput deltab find vector mvalu ffl phi m illustr use process segment figur shown figur associ delay rang place ie place s comput express refer mvalu comput element x process backward topolog order comput gammaomega ms substitut substitut asomega distribut phi associ repres comput matrix form use phi figur process segment figur similar matrix construct fpart process segment comput is igomega fs substitut substitut substitut igomega fh ms deltaomega distribut phi definit ofomega express depend mvalu intern element eg mt express fs mvalu node comput linear express mvalu place ffl linear express encod vector u length jfflj vector product comput mvalu intern node u store eg express use fs repres vector express fcomput matrix form use given process segment denot correspond function mvalu matric f m algebra element defin singleton set ff mg defin two oper fi j choic oper defin set union composit oper complex compos two segment function need refer mvalu ffl rather ffl shift function make refer mvalu ffl multipli uvector f m singleton function fhl uig obtain function fhl ig nonsingleton function shift shift pair matrix function shift elementwis use notat f m denot shift matrix f matrix m singleton set composit oper defin as theta nonsingleton set multipli appli distribut law prune consid element ff g remov f set show pair compos left right result scalar scalar greater composit f suffici condit elimin follow let ie k largest differ element differ neg rowvector appropri length entri set condit use elimin entir execut path analysi central obtain effici algo rithm sophist condit use inform particular comput possibl may increas effici algorithm upper bound comput consid determin upper bound v k node v process automaton determin nontrivi upper bound backward path v v consid ie need bound infinit set algebra element construct backward path oe simpl path p comput p p simpl write p simpl path p simpl cycl p finit may contain cycl introduc upper bound oper r properti thu express righthand side upper bound lefthand side express r oper recurs appli path simpl path henc bound infinit set finit set algebra element construct path consist simpl cycl follow simpl path end v r oper defin follow assum f m k theta n k matrix form vector lenght contain k ident matrix size k oper rf m defin hi z vector length contain function z fh ig function z largest element f ie z f function f f effect r oper appli function z part f matrix ident upper bound determin individu pair set node v upper bound given f m pair less equal present global lower bound delta k pair remov set prune backward execut path must consid order f m pair multipli greatli affect runtim algorithm exampl consid precomput node process automaton algebra express upper bound ie node comput algebra element set simpl path follow simpl cycl go backward know compos element pair prune represent therefor may effici multipli pair iter even though allow reus work previou iter experi upper bound express becom larg precomput better recomput iter effect prune take place precomput r simpl cycl observ key achiev polynomi runtim exampl describ follow section benchmark exampl eager stack replic singl process linear array provid effici implement lastin firstout memori refer eager stack eager stack contain interest mixtur choic concurr repres excel parameteriz exampl explain analys perform algorithm also benchmark implement algorithm eager stack stack capabl store n element construct n equival process arrang linear array process four port in put get port put get connect port out respect stage right figur show block diagram put get environ stage eager stack put get put get figur block diagram stage eager stack csp specif singl stage is boolean variabl b rb use control commun adjac right stage valu b indic whether stage hold valid data valu rb mirror valu b stage right concurr occur posit must creat space must fill in choic whether put get made environ potenti propag throughout entir stack order avoid overflow underflow condit environ interact stack must attempt put n element alreadi store stack must attempt get stack empti follow process repres suitabl environ ep ut get j process unfold n time actual data x elimin simplic get construct repeat guard command trail chosen repeat otherwis number parenthesi refer number item stack time commun perform put stack full get commun possibl nice properti exampl port name occur number time along compat choic path adjac process thu identifi superscript number occurr port name program use petri net transit p commun put port stage port stage similarli g denot commun get port stage port stage figur possibl stack indic whether empti full make environ behav accordingli complic stage stack time analysi numer interest time separ analysi perform eager stack determin minimum maximum separ consecut put commun environ process maximum separ analysi stage stack would correspond to set delay commun action rang get maximum separ obtain fill empti stack three put oper empti three get oper final insert one element a put oper maximum separ achiev third fourth put oper minimum separ exchang set negat result case possibl interest analysi might minimum maximum separ consecut put get commun correspond minimum maximum respons time stack equival minimum maximum cycl period environ must includ petri net transit correspond put get commun environ thu result delay rang commun action fix delay valu eager stack constant respons time ie time environ perform either put get oper next oper independ size stack n case introduc uncertainti delay valu maximum respons time turn n linear stack size howev look maximum respons time amort put get commun action get follow maximum separ delta divid delta m obtain amort separ shown below deltam predict although maximum separ two consecut oper increas linearli n amort number oper respons time converg fact maximum respons time converg independ n sens eager stack constant respons time even delay uncertain run time execut time ctse algorithm eager stack variou size n shown tabl use delay rang size specif ie number place number transit size flow relat given n tabl js sigma j jt sigma j jf sigma j respect number node reachabl graph shown jrgj column note reachabl graph construct perform time analysi report give idea complex net separ analysi denot delta maximum separ consecut put oper delta maximum separ consecut put get oper cpu time obtain sparc mb memori tabl run time ctse algorithm eager stack variou size figur show cpu time two separ analysi plot function size petri net orbit is author knowledg develop effici tool answer tempor question petri net specif orbit construct time reachabl graph ie state reachabl given time inform note orbit capabl analyz larger class petri net specif one describ here partial order techniqu also use orbit reduc state space explos howev time construct time reachabl graph eager stack increas exponenti size n time cpu second decstat mb ie two order magnitud slower ctse algorithm orbit ran memori conclus describ algorithm solv import time separ problem class petri net contain choic concurr practic algorithm abl analyz net consider size demonstr exampl whose petri net specif consist node reachabl state report polynomi runtim result singl parameteriz exampl expect similar result specif exhibit limit choic abund concurr acknowledg thank chri myer stanford univers mani fruit discuss well suppli orbit runtim work support nsf yi award mip petri net size jf sigma j figur doubl logarithm plot cpu time two separ analys function petri net size jf sigma j darpacsto microsystem program onr monitor contract nj r theori time automata synchron linear model verif time depend system use time petri net relat net csp partial order behavior structur petri net interleav partial order concurr formal comparison trace algebra automat verif realtim concurr system minimum maximum delay problem realtim system comput aid verif use partial order improv automat verif method time analysi digit circuit theori minmax function practic applic effici time separ event algorithm algorithm exact bound time separ event concurr system program vlsi commun process delayinsensit circuit algorithm interfac time verif synthesi time asynchron circuit petri net theori model system perform evalu asynchron concurr system use petri net automat verif time circuit modular construct partial order semant petri net tr ctr ken steven shai rotem steven m burn jordi cortadella ran ginosar michael kishinevski marli roncken cad direct high perform asynchron circuit proceed th acmiee confer design autom p june new orlean louisiana unit state