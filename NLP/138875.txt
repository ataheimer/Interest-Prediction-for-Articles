t file system continu media a continu media file system cmf support realtim storag retriev continu media data digit audio video disk cmf client read write file session guarante minimum data rate multipl session perhap differ rate nonrealtim access proceed concurr cmf address sever interrel design issu realtim semant fo session disk layout accept test new session disk schedul polici use simul compar differ design choic b introduct current disk drive raw data rate million bit per second mbp more rate suffic mani form digit audio motion video continu media cm data audio data rate kbp mbp compress video rang one sever mbp howev disk access via generalpurpos file system data rate seen client gener lower may vari unpredict develop continu media file system cmf whose client read write file session guarante minimum data rate multipl session perhap differ data rate coexist cmf handl nonrealtim traffic concurr realtim session author address dp anderson east francisco blvd san rafael ca y osawa mo busi develop divis storag system group soni corpor okata atsugi kanagawa japan r govindan cs divis eec depart uc berkeley berkeley ca work perform univers california berkeley support nsf infrastructur grant cda nsf pyi grant ccr california micro program sun microsystem provid data rate guarante cmf address follow interrel issu realtim semant cmf client interfac describ section flexibl welldefin realtim semant disk layout section give cmf assumpt disk layout accept test section describ cmf determin new session accommod altern polici order disk read write oper discuss section sever broad class cm data server envis workstat file system handl voic mail messag well data networkaccess archiv data resourc lectur hypermedia document etc research educ and advent bisdn network commerci inform servic offer movi news music hundr thousand concurr client highlevel issu secur name index file structur differ among class deal issu here howev common need store retriev data stream predict realtim perform thu concept techniqu cmf appli class cmf meant serv part distribut system handl integr audio video endtoend perform guarante cannot cours achiev disk schedul alon cmf conform metaschedul model provid mechan make guarante role cmf larger context discuss section client interfac cmf client access realtim file session session fifo buffer data transfer client cmf concret assum cmf part os ker nel client kernel process fifo circular buffer physic memori altern discuss section semant session flow data session necessarili smooth period instead session semant defin term logic clock run fix rate fifo stop catch client posit cmf promis stay ahead logic clock given posit amount the cushion semant allow cmf handl variabler file nonuniform access simpl way cmf guid client behavior need know data timestamp file intern session creat use int direct read write file_id name int offset fifo buffer time cushion int rate direct read request_sess request session given file read sequenti start given offset henceforth assum zero session cannot accept error code return otherwis session establish id return start_clock start session logic clock client remov cushion amount data call thi appropri valu cushion depend client maximum delay handl data see section client notifi via rpc except end file reach cmf provid seek oper flush data current fifo reposit read write point describ semant read session formal use follow notat see figur a r rate argument request_sess cushion argument request_sess start time start_clock call index next byte put fifo cmf time index next byte remov fifo client time valu logic clock time size fifo buffer byte logic clock c t zero increas rate r whenev follow read session axiom must hold start client cmf read b write session offset file zero stop clock a read session offset file cmf client read zero stop clock figur semant read write session describ term put pointer logic clock c t shade rectangl repres data fifo condit say cmf overflow fifo cmf allow client read ahead logic clock byte client read beyond write point cmf therefor provid guarante minimum data rate long client keep read upper bound actual data rate client cmf principl work arbitrarili far ahead logic clock write session client transfer data fifo buffer cmf move data buffer disk describ semant write session use notat abov case p t index next byte insert fifo client g t index next byte remov cmf logic clock c t increas rate r whenev follow write session axiom must hold start see figur condit say client overflow fifo cmf remov data fifo fast enough client alway write ahead logic clock least cmf read beyond write point file creation nonrealtim access cmf support realtim nonrealtim file realtim file creat use create_realtime_fil boolean expand int size int max_rat expand indic whether file dynam expand not size give fix size max_rat maximum data rate byte per second file read written cmf reject creation request lack disk space max_rat high nonrealtim oper may perform either type file cmf provid two nonrealtim servic class interact background interact access optim fast respons background high throughput perform guarante nonrealtim oper symmetri read write describ session accept schedul algorithm redund treat read write session separ avoid observ follow symmetri read write suppos write session w fix paramet start b r timevari paramet consid imaginari read session r start b r paramet see figur disk block written cmf w advanc p w thu correspond disk block read cmf r file byte offset cmf read client write a write session client read cmf write equival read session figur interchang emptyful readwrit write session a transform read session b equival respect schedul claim suppos w write session r defin abov c r t start r satisfi read session axiom eq w satisfi write session axiom eq proof g t substitut definit c w t result defin c r t thu logic clock advanc r exactli advanc w rate equival read write axiom follow substitut eq eq so point view schedul cmf read write essenti equival main differ initi condit empti buffer write session correspond full buffer read session describ cmfss algorithm schedul session accept refer read session use cmf interfac ideal client might read byte fifo everi r second begin moment session accept gener howev uniform neither necessari desir exampl data may group larg chunk for exampl video frame need singl moment data may longterm rate variat perhap variabler compress client may delay initi io synchron multipl session client may paus resum io session client may work ahead fill intermedi buffer improv overal perform cmf interfac accommod requir show thi start defin notion tempor data variabl bound rate file f paramet r e th byte f timestamp j see figur word amount data time interv length in digit video file exampl r maximum longterm data rate e maximum number byte per frame timestamp may explicit embed data implicit suppos client read boundedr file f say file read real time start buffer size n byte read ie remov fifo time n byte i intuit mean client read file fast enough get data time slow enough n byte addit buffer space need cmf interfac allow client read boundedr file real time use limit buffer space suppos client creat session read boundedr file f paramet r e session begin time possibl client read f real time start e r buffer size e proof given appendix implicit flow control provid cmf interfac accomplish goal well client paus session simpli stop remov data fifo logic clock stop soon thereaft data rate bufferrequir guarante remain valid client resum read the pauseresum equival shift timestamp remain data byte offset data timestamp kb kb figur boundedr file contain timestamp data exampl repres file framessecond video data vari number byte per frame frame shown vertic bar file paramet r e number byte timestamp interv length cannot exceed tr suppos client play sever file transmit via network connect differ cmf server synchroni singl workstat io server workstat handl synchron begin output suffici data receiv connect as done exampl acm server cmf handl case client intervent logic clock paus initi synchron period resum thereaft client can hardwar fast enough read arbitrarili far ahead logic clock workahead data buffer in distribut applic buffer may spread across mani node protect playback glitch allow improv system respons transient workload system integr issu implement altern implement cmf run userlevel process unix access scsi disk via unix raw disk interfac commun client via tcp connect architectur howev possibl see figur exampl cmf could implement either kernel user level client control interfac could provid either system call for local client onli remot procedur call client data interfac the mechan data remov read session fifo take sever form gener approach data sent flowcontrol network connect establish part request_sess call data remov fifo whenev protocol allow it client userlevel process machin cmf fifo could sharedmemori buffer memorymap stream final data consum io devic machin cmf fifo might resid kernel memori access directli io devic interrupt handler altern differ perform implic exampl kernellevel implement might lower cpu schedul overhead most work could done interrupt level improv control physic memori howev issu address cmf disk schedul buffer alloc etc appli regardless altern chosen endtoend schedul typic applic cm data handl mani share hardwar resourc disk cpu network bu memori etc provid applic determinist endtoend perfor manc must integr schedul resourc cmf design serv part metaschedul scheme cmresourc model scheme resourc reserv session fix workload delay bound parameter workload delay let resourc work ahead realtim stream respons quickli nonrealtim workload cmf session cushion paramet allow adjac resourc typic cpu looser delay bound exampl suppos client run host cmf as figur c cpu process data send next resourc say net work client determin upper bound cpu time per unit data requir reserv session cpu resourc session delay bound say easi show follow suppos situat client success creat cmf session cushion start session process amount data say time thereaft process data without voluntarili paus time client process least rt byte data r session data rate control data system call client d c a io devic audiovideo fifo cmf fifo client cmf client fifo client cmf rpc data fifo cmf system call call system kernel user figur cmf prototyp userlevel process commun client network connect a altern could implement os kernel client data access system call b memorymap stream c devic interrupt d note would hold cushion less cpu delay bound would possibl logic clock stop claim gener boundedr file provid use version claim make unrealist assumpt client cpu process instantan schedul precis instant disk layout assumpt assum cmf use singlespindl disk drive disk oper done sequenti disk read written block fix size a multipl hardwar sector size cmf reserv schedul algorithm mandat particular disk lay out instead assum layout allow follow bound function u f v f obtain given file f u f n upper bound time read n logic contigu block f includ seek rotat time independ posit disk head start block number read upper bound time need read n block file f start block bound need tight slack bound may howev caus session reject unnecessarili function u v take account sector interleav interrupthandl latenc cpu time use cmf itself featur such track buffer disk con troller bad sector detect disk initi exampl disk layout cmf prototyp use contigu alloc file begin point within cylind fill remaind cylind zero adjac cylind part final cylind number sector per block fix paramet ignor cpu overhead factor bound function layout easi deriv assum l seek_min l seek_max bound track seek time worstcas seek time respect l block time read one block l rotat rotat time n number block per cylind further more assum control trackbuff read track local buffer immedi seek it henc entir track read rotat latenc neglig regardless order sector read possibl bound function rotat l rotat k number cylind store n block f start offset j number block f first last cylind account cpu overhead would necessari leav gap block perhap interleav them modifi u v accordingli contigu layout polici feasibl readonli file system disk space abun dant flexibl variant bsd unix file system layout could use realtim file might consist cluster n contigu block everi sequenc k cluster constrain singl cylind group n k perfil paramet relat max_rat paramet file bound function u v comput n k size cylind group disk paramet overhead read write alloc map index block alloc compact strategi would pose complex set issu discuss here accept test cmf accept new session data rate requir togeth exist session guarante thi suffici condit exist static schedul that cyclic read fix number block session satisfi rate requir session worstcas assumpt enough buffer space avail section give algorithm decid whether schedul exist algorithm construct shortest schedul minim static schedul also play import role dynam schedul see section properti static schedul suppos session n read file f f n rate r r n oper set f assign posit integ cmf perform oper set seek next block file f read block file everi session the order oper specifi section upper bound elaps time s oper f whole respect data read f sustain session period r block size byte denot period f f period data read f sustain session data read f last longer worstcas time take perform f call workaheadaug set wa hold l f f equival amount data read session oper set f fit correspond fifo say f feasibl hold if size fifo buffer use cushion paramet section inequ reflect worst case fraction block alreadi buffer client use none cushion oper sequenc f pair p f p permut n f oper set cmf perform oper sequenc oper f order pn f call workaheadaug f workaheadaug likewis f feasibl f feasibl durat data buffer session beyond client cushion given r paramet call workahead denot w t say starv w becom neg file system state w t time vector w t w n t let f oper sequenc suppos enough data buffer that f perform immedi session starv oper complet say state safe rel f hold j recal l j worstcas time need j s oper follow two claim show cmf accept set session feasibl workaheadaug sequenc order p import simplic assum ident permut f workaheadaug feasibl system state safe rel f proof let w state buffer full j r r w safe rel f the final three step use eq suppos feasibl workaheadaug oper sequenc f assum time state w safe rel f cmf satisfi read session axiom eq proof prove defin disk schedul polici call static polici satisfi axiom polici follow repeatedli appli schedul given f follow except point start block read immedi skip next session sinc read block could caus buffer overflow clear polici preserv eq consid particular session k one cycl f start time let denot time k s oper end eq hold sinc c t advanc r bytessecond oper k either read full amount truncat either case sinc f workaheadaug let e denot time cycl end combin eq eq clock rate bound r see w k remain posit therefor starvat occur cycl by eq state w end cycl remain safe rel f henc static schedul polici maintain read session axiom session minim feasibl show cmf satisfi data rate set session feasibl wa describ algorithm comput minim feasibl f the feasibl l f least clearli minim feasibl exist feasibl exist suppos session n given let durat one block data set number form kd k t oper figur diagram proof claim show workahead w k session k one cycl static schedul polici start cycl k enough workahead last time oper finish amount data read suffic least l f exce length e cycl therefor w k alway posit ie k never starv see figur let denot interv t let f denot oper set note f differ f addit block session whose data period divid henc sequenc f easi comput note also oper set f l f l f proof sequenc f f must read least block session feasibl f f f feasibl proof f must read least mani block session f therefor sinc f feasibl f follow algorithm comput minim wa thi minim oper set f f infeas ie alloc b n buffer space client fifo feasibl wa minim feasibl wa go proof suppos algorithm stop step return j let f minim wa let f possibl j sinc f feasibl claim workaheadaug algorithm would termin iter also figur block data session durat depend data rate set multipl period defin set interv within interv uniqu minimallength oper set f enumer f find minim feasibl wa possibl j sinc l f l f contradict minim l f therefor from claim must l f minim wa final suppos algorithm termin step suppos feasibl exist f j argument j f read least mani block session f buffer alloc feasibl f feasibl f contradict buffer space allot suppos fix amount b buffer space avail cmf client fifo space divid among variou client cmf perform best session work ahead time see section word buffer space alloc session beyond need client cushion roughli proport data rate r cmf therefor use follow polici let r session j alloc byte alloc round up need multipl memoryalloc block size disk schedul polici complet disk block io cmf decid disk block read write next issu appropri command seek read write disk devic driver algorithm decis constitut disk schedul polici polici must prevent starvat current session must delay return request_sess call newli accept session safe so also handl nonrealtim workload effici polici realtim cpu schedul earliestdeadlinefirst immedi relev seek section describ sever possibl disk schedul polici polici defin term slack time defin slack time if particular time enough data buffer session cmf free non realtim oper workahead realtim session amount slack time denot h comput follow suppos minim f take worstcas time permut n let f oper sequenc p f f perform immedi workahead session j fall call slack time session j cmf safe defer start f period min let p order session increas valu workahead w then among permut p p give maxim valu h proof consid permut p w increas particular suppos denot slack time two session revers order two session p new slack time e c c e see figur slack time session remain unchang henc minimum slack time decreas revers order therefor consid increasingworkahead order p session let f denot p denot correspond slack time particular moment import note h impli starvat occur occur h base pessimist assumpt interfil seek need prior everi oper wa exampl h multiblock file oper cmf compel finish current oper start new would incur interfil seek realtim schedul polici describ sever possibl disk schedul polici polici avoid starva tion rel perform discuss section staticminim polici a special case static polici describ section simpli repeat minim wa greedi polici longest possibl read session iter comput slack time h find session smallest workahead read block period h word devot entir slack time read ahead cyclic plan polici differ greedi tri distribut current slack time among session way maxim futur slack time augment minim f h second addit read these read done session immedi read f polici distribut workahead identifi bottleneck session that h smallest schedul extra block it updat h h repeat h exhaust result time figur slack time maxim order session increas workahead suppos sequenc two session j order bold line repres worka head w slack time b c shown denot maximum time need oper preced time bound oper session revers order two session slack time e simpl algebra show c global slack time minimum session slack time result follow schedul determin number block read leastworkahead session read complet procedur repeat greedi cyclic plan polici leastworkahead session servic immedi therefor valu h use polici comput minimum slack time session except leastworkahead session yield aggress version polici polici skip next session buffer size limit reach point buffer full oper done client subsequ remov suffici data fifo polici restart greedi staticminim low cpu overhead prototyp mip workstat three session use microsecond per schedul decis cyclic plan build schedul one block time use cpu time proport buffer space transit session limit util nonrealtim oper nonrealtim oper n worstcas latenc l safe start l h how ever polici servic nonrealtim oper whenev safe may tend low forc schedul short realtim oper close minim wa caus system run ineffici may prefer nonrealtim oper h exce nonzero threshold avoid seek overhead rapidli altern realtim nonrealtim oper cmf use follow slack time hysteresi polici nonrealtim workload interact oper start whenev h h initi interact oper start h h howev h fall h interact oper start h exce h similarli background oper done within hysteresi interv h oper start interact oper elig start section examin effect hysteresi hysteresi paramet system perform session startup newlyaccept session said start request_sess call return must occur system state safe respect new wa special mechan need handl startup phase suppos session n current activ session n accept yet start let f n f n denot feasibl wass set n n respec tive n start follow cmf adjust fifo buffer size accord procedur describ section shrink buffer discard data end fifo need it must later reread data disk schedul goe startup mode polici chang follow nonrealtim oper queu later execut schedul purpos slack time h comput rel f n howev cyclic plan polici alloc slack time workahead done rel f n use session order new session appear first howev io n done phase system state safe respect f n read f n n block n start read complet system state safe n session call n allow return f n becom system wa system leav startup mode step omit write session equival read session start full buffer section perform section studi effect disk schedul polici hardwar paramet cmf perform studi use simul chose use real io version cmf schedul vagari unix poor perform scsi disk io restrict avail disk wrote cmf prototyp disk io oper option simul rather perform simul keep track disk head radial rotat posit model latenc realist action eg cpu execut model instantan ou unless otherwis state simul use cyclic plan polici assum disk mbp transfer rate ms worst case seek time block size byte number concurr session figur show maximum number concurr session accept cmf function total buffer space shown two differ session data rate kbp mbp graph curv given three differ disk type ms maximum seek time mbp transfer rate cdc wren v ms maximum seek time mbp transfer rate cdc wren iii and ms maximum seek time mbp transfer rate soni optic disk disk transfer rate impos upper bound number concurr session accept unbound buffer space need limit approach reach limit wren v disk requir mb mbp session mb kbp se sion effici depend length oper minim wa kbp session requir proport longer therefor buffer space number accept session fix disk higher seek time need longer minim therefor buffer space perform disk schedul polici sinc nonrealtim oper done enough slack time import criterion disk schedul polici quickli increas slack time studi thi simul cmf three concurr mbp session nonrealtim traffic mb system buffer size result figur see cyclic plan perform slightli better greedi slack low greedi quickli catch up staticminim cannot long oper perform much wors higher slack level appropri hysteresi valu cmf maintain moder slack level steadyst oper thu dynam polici prefer respons time interact traffic studi effect realtim traffic interact traffic simul fix number session togeth interact request read randomli posit block disk interact request arriv poisson mean arriv rate l defin respons time interact request time arriv start disk oper delay oper itself includ seek includ effect hysteresi paramet notic heavi load otherwis slack remain high hysteresi exercis figur plot mean interact respons time mbp ms mbp ms ms mbp ms mbp ms ms number session kbp number session b kb mb mb gb kb mb mb buffer space buffer space mbp figur number session accept cmf depend avail buffer space disk transfer rate impos upper limit number session reach limit mbp disk requir mb buffer space mbp session mb kbp session figur disk schedul polici build slack differ rate aggress cyclic plan solid line aggress greedi dot staticminim dash polici shown the nonaggress version shown perform slightli wors h differ valu h heavi load observ that fix h increas h interact respons time drop steepli rise gra dualli h nearli equal h interact respons poor system switch rapidli realtim nonrealtim oper caus high seek over head h increas oscil becom less frequent respons improv sinc interact request queu slack build h h respons degrad h increas past certain point h respons best h h second h small eg sec figur slack build slowli h h respons poor similar effect observ h exce hmax h max denot upper bound h impos buffer space sinc difficult fill buffer simultan interact respons time millisecond upper hysteresi limit second lower lower lower lower figur effect hysteresi limit h h mean respons time non realtim request interact class experi conduct mb total buffer h max second interact arriv per second three mbp session base observ reason rule thumb valu h figur plot mean interact respons time function arriv rate differ valu system buffer size interact arriv rate low system slack stay near h ure interact request servic without wait realtim traffic higher arriv rate in figur per second kb case per second mb interact respons degrad slack sometim reach lower hysteresi limit h interact request block slack reach h throughput background traffic estim effect realtim traffic background traffic throughput simul three mbp session singl background task sequenti read long contiguouslyalloc file defin background throughput fraction fraction residu disk bandwidth ie disk bandwidth taken realtim session use background task reason discuss section low h b small close h max h small case sinc throughput rather respons time goal penalti h larg found maxim plot with hysteresi limit buffer space analyt approxim mean respons time mean arriv rate per second figur mean interact respons time function arriv rate differ valu total buffer space experi four concurr mbp session hysteresi limit use kb mb case respect infinit buffer curv obtain analyt model file system mg queue time second arrivalssecond arrivalssecond slack time second figur variat slack time h presenc interact nonrealtim traffic three mbp session start time zero system mb buffer space h max second hysteresi limit h interact arriv rate low per second case h stay near h max high arriv rate per second h oscil hysteresi limit fraction background throughput kb mb mb mb total buffer space figur background throughput function total buffer space realtim workload three mbp session buffer space increas h longer period background io henc less seek overhead session startup time write session usual start immedi see section studi startup time read session ran simul request six session arriv time zero figur show start time session differ success start time increas workahead exist session increas accommod new minim wa becom longer session ad startup time order one second similar startup time consum vcr howev larg applic requir instantan respons interact music perform use sound store disk problem solv store initi segment sound file memori relat work structur issu multimedia file share parallel composit annot etc address xerox etherphon system sun multimedia file system northwestern network sound system project concentr perform schedul issu system cannot make perform guarante project address perform without hard guarante abbott give qualit discuss disk schedul playback multipl audio track compar balanc polici readahead divid among session shortestseekfirst pol ici analysi not howev provid accept test perform guarante park english describ system support singl channel audio playback non realtim traffic may concurr access disk caus avail disk bandwidth chang session number start time figur six mpb session request arriv simultan time zero actual start time stagger shown altern disk bandwidth reserv audio channel propos chang data rate channel dynam accommod nonrealtim workload high data rate chosen workahead stream fix threshold strategi guarante minimum data rate yu et al discuss layout interleav data stream differ data rate compact disk guaranteedperform playback assumpt singl session fix rate small buffer nonrealtim traffic restrict our gemmel christodoulaki describ file system support multipl audio channel playback concurr nonrealtim traffic like cmf work provid basi hard perform guarante howev differ cmf sever respect channel must constant data rate must start time schedul polici static system repeatedli appli singl feasibl audio channel reserv time oper sequenc servic nonrealtim traffic nonrealtim traffic static polici may perform wors cmf cmf interrupt wa allow nonrealtim traffic start immedi cmf use accumul system slack handl long burst nonrealtim traffic rangan vin describ system combin disk input displaydevic output multipl data stream give express admiss control assumpt stream equal data rate disk schedul polici similar staticminimum conclus continu media file system cmf provid guaranteedperform read session sever session coexist nonrealtim workload singl disk central idea cmf includ follow semant cmf session interfac support rang client requir includ variabler data start stop synchron multipl stream client workahead semant defin rigor section includ provid flexibl client cpu schedul layout cmf requir bound function u v obtain section mandat particular disk layout session accept decid session request accept cmf check feasibl section exist disk schedul found dynam polici greedi cyclic plan perform better staticminim polici concurr nonrealtim access cmf handl nonrealtim well realtim file access disk space dynam use either purpos cmf use slack time hysteresi polici schedul nonrealtim access appropri paramet polici allow long nonrealtim oper complet without interrupt refin futur work follow observ suggest possibl improv cmf first session graph workahead w function time roughli sawtooth function consid two session opposit phase schedul cycl gener less maxw share buffer space possibl improv nonrealtim perform increas number session accept second schedul polici could take disk head posit account variou way exampl could yield session order effici smallestworkaheadfirst section similarli use polici scan order nonrealtim oper could improv perform although present cmf algorithm context singlespindl disk drive equal applic disk array file stripe across multipl disk clientlevel session could compos session multipl disk disk reserv schedul describ here could use provid session data rate higher underli disk drive could improv loadbalanc avail even session data rate lower individu disk acknowledg discuss vassilio polimeni georg homsi mark moran contribut cmf design r effici edit digit sound disk metaschedul distribut continu media a continu media io server synchron mechan effect schedul file memori oper principl delaysensit multimedia data storag retriev schedul ipc mechan continu media schedul algorithm multiprogram hard realtim environ a fast file system unix a variabl rate strategi retriev audio data secondari storag a case redund array inexpens disk raid design file system digit audio video a network sound system unix the multimedia file system manag store voic etherphon system effici placement audio data optic disk realtim applic tr fast file system unix manag store voic etherphon system case redund array inexpens disk raid effici placement audio data optic disk realtim applic schedul ipc mechan continu media design file system digit video audio continu media io server synchron mechan variabl rate strategi retriev audio data secondari storag principl delaysensit multimedia data storag retriev schedul algorithm multiprogram hardrealtim environ metaschedul distribut continu media ctr d jame gemmel harrick m vin dilip d kandlur p venkat rangan lawrenc a row multimedia storag server tutori comput v n p may tat seng chua cheng hian goh beng chin ooi kianle tan replic strategi reduc wait time videoondemand system multimedia tool applic v n p septemb simon s y shim taisheng chang david h c du jenwei hsieh yuewei wang perform scalabl multimedia server sharedstorag cluster multimedia tool applic v n p septemb ravi jain john werth j c brown introduct special issu inputoutput parallel comput system acm sigarch comput architectur new v n p dec raymond t ng jinhai yang maxim buffer disk util new ondemand proceed th intern confer larg data base p septemb jenwen ding yuehmin huang resourcebas stripe effici stripe strategi video server use heterogen disksubsystem multimedia tool applic v n p januari stephen child file system interfac support distribut multimedia applic proceed th acm sigop european workshop support compos distribut applic p septemb sintra portug yuehmin huang jenwen ding shiaoli tsao constant time permut effici block alloc strategi variablebitr continu media data vldb journal intern journal larg data base v n p april raymond t ng paul shum optim clip order multiclip queri vldb journal intern journal larg data base v n p decemb hiroshi tezuka tatsuo nakajima simpl continu media storag server realtim mach proceed annual technic confer usenix annual technic confer p januari san diego ca dwight makaroff gerald neufeld norman hutchinson evalu vbr disk admiss algorithm continu media file server proceed fifth acm intern confer multimedia p novemb seattl washington unit state silvano maffei design implement configur mixedmedia file system acm sigop oper system review v n p oct huang hungm ho pin demand page base access frequenc video file video server journal system softwar v n p decemb philip kwok chung tse clement h c leung improv multimedia system perform use constantdens record disk multimedia system v n p jan divyesh jadav alok choudhari p bruce berra evalu design tradeoff highperform mediaondemand server multimedia system v n p jan prashant j shenoy harrick m vin effici support interact oper multiresolut video server multimedia system v n p may babak hamidzadeh tsunp j to priorit admiss strategi improv userperceiv perform interact vod server multimedia tool applic v n p januari jonathan chienliang liu david h c du simon s y shim jenwei hsieh mengjou lin design evalu gener softwar architectur ondemand video server ieee transact knowledg data engin v n p may rajesh krishnan dinesh venkatesh thoma d c littl failur overload toler mechan continu media server proceed fifth acm intern confer multimedia p novemb seattl washington unit state ramzi r yehia imad mahgoub storag system multimedia classif extens distribut parallel databas v n p oct tsunp j babak hamidzadeh dynam realtim schedul strategi interact continu media server multimedia system v n p march ketil lund vera goebel adapt disk schedul multimedia dbm proceed eleventh acm intern confer multimedia novemb berkeley ca usa kyungoh lee heon y yeom effect admiss control mechan variablebitr video stream multimedia system v n p juli prashant j shenoy harrick m vin effici support scan oper video server proceed third acm intern confer multimedia p novemb san francisco california unit state divyesh jadav alok n choudhari p bruce berra techniqu increas stream capac highperform multimedia server ieee transact knowledg data engin v n p march wonjun lee difu su duminda wijesekera jaideep srivastava deepak kenchammanahosekot mark foresti experiment evalu pf continu media file system proceed sixth intern confer inform knowledg manag p novemb la vega nevada unit state h vin p goyal a goyal statist admiss control algorithm multimedia server proceed second acm intern confer multimedia p octob san francisco california unit state jayanata k deysircar jame d salehi jame f kuros towsley provid vcr capabl largescal video server proceed second acm intern confer multimedia p octob san francisco california unit state asit dan dinkar sitaram onlin video placement polici base bandwidth space ratio bsr acm sigmod record v n p may michael vernick chitra venkatramani tzicker chiueh adventur build stoni brook video server proceed fourth acm intern confer multimedia p novemb boston massachusett unit state prashant shenoy harrick m vin cello disk schedul framework next gener oper system realtim system v n p janmarch prashant j shenoy harrick m vin cello disk schedul framework next gener oper system acm sigmetr perform evalu review v n p june banu zden rajeev rastogi avi silberschatz multimedia support databas proceed sixteenth acm sigactsigmodsigart symposium principl databas system p may tucson arizona unit state weifeng shi shahram ghandeharizadeh trade memori disk bandwidth videoondemand server proceed acm symposium appli comput p februari march atlanta georgia unit state hui guo guobin shen zhiguang wang shipeng li optim stream media proxi applic journal network comput applic v n p januari chenghan tsai edward th chu taiyi huang wrrscan ratebas realtim diskschedul algorithm proceed th acm intern confer embed softwar septemb pisa itali rodney van meter minxi gao latenc manag storag system proceed th confer symposium oper system design implement p octob san diego california a l n reddi jim wylli k b r wijayaratn disk schedul multimedia io system acm transact multimedia comput commun applic tomccap v n p februari deepak r kenchammanahosekot jaideep srivastava io schedul digit continu media multimedia system v n p juli hsungpin chang rayi chang weikuan shih rueichuan chang gsr global seekoptim realtim diskschedul algorithm journal system softwar v n p februari w g aref i kamel s ghandeharizadeh disk schedul video edit system ieee transact knowledg data engin v n p novemb craig s freedman david j dewitt spiffi scalabl videoondemand system acm sigmod record v n p may fabio panzieri marco roccetti synchron support groupmembership servic reliabl distribut multimedia applic multimedia system v n p jan schedul data layout polici nearlin multimedia storag architectur multimedia system v n p sept domin mazzoni roger b dannenberg fast data structur diskbas audio edit comput music journal v n p juli wonjun lee jaideep srivastava bikash sabata qosawar admiss control dynam resourc provis framework ubiquit multimedia comput environ journal supercomput v n p april nevzat hurkan balkir gultekin ozsoyoglu deliv present multimedia server vldb journal intern journal larg data base v n p decemb rayi chang weikuan shih rueichuan chang realtim disk schedul multimedia applic withdeadlinemodificationscan scheme realtim system v n p sept banu zden alexandro biliri rajeev rastogi abraham silberschatz lowcost storag server movi demand databas proceed th intern confer larg data base p septemb nabil j sarhan chita r da cach schedul nadbas multimedia server ieee transact parallel distribut system v n p octob david p anderson devic reserv audiovideo edit system acm transact comput system toc v n p may murthi devarakonda impact applic scale divers file system proceed th workshop acm sigop european workshop match oper system applic need septemb wadern germani banu zden rajeev rastogi avi silberschatz storag retriev continu media data proceed third intern confer inform knowledg manag p novemb decemb gaithersburg maryland unit state xiaoy jiang prasant mohapatra effici admiss control algorithm multimedia server multimedia system v n p juli martha l escobarmolano shahram gandeharizadeh dougla ierardi optim resourc schedul continu display structur video object ieee transact knowledg data engin v n p june michael k bradshaw bing wang lixin gao jim kuros prashant shenoy towsley subhabrata sen period broadcast patch servic implement measur analysi internet stream video testb proceed ninth acm intern confer multimedia septemb octob ottawa canada ginkou chiungshien wu meichian liu baoshuh p lin effici realtim data retriev scalabl multimedia storag proceed fifth acm intern confer multimedia p novemb seattl washington unit state divyesh jadav alok choudhari design implement highperform mediaondemand server ieee parallel distribut technolog system technolog v n p june michael k bradshaw bing wang subhabrata sen lixin gao jim kuros prashant shenoy towsley period broadcast patch servic implement measur analysi internet stream video testb multimedia system v n p juli jason gait optim unix databas file oper ieee softwar v n p may richard staehli jonathan walpol constrainedlat storag access comput v n p march andrea vogel brigitt kerherv gregor v bochmann jan gecsei distribut multimedia applic qualiti servic survey proceed confer centr advanc studi collabor research p octob novemb toronto ontario canada