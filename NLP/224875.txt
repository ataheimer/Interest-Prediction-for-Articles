t hybrid decis diagram a abstract function map boolean vector integ import design verif arithmet circuit mtbdd bmd propos repres class function discuss relationship method describ gener call hybrid decis diagram often much concis show implement arithmet oper effici hybrid decis diagram practic one main limit bmd sinc perform arithmet oper function express notat expens order extend symbol model check algorithm handl arithmet properti essenti abl comput bdd set variabl assign satisfi arithmet relat paper give effici algorithm purpos moreov prove class linear express time complex algorithm linear number variabl b introduct function map boolean vector integ import design verif arithmet circuit paper investig repres manipul function effici previou paper propos two way mtbdd bdd array repres class function use binari decis diagram recent bryant chen propos binari moment diagram bmd repres class function paper show bmd function mtbdd result appli invers reedmul transform func tion furthermor comput use techniqu develop transform matrix case kroneck product number ident theta matric show kroneck product theta matric behav similar way fact transform obtain kroneck product matric mani case concis bmd gener idea transform matrix kroneck product differ matric way obtain represent call hybrid decis diagram hdd concis either mtbdd bmd similar strategi use becker howev techniqu work boolean domain suitabl function map boolean vector integ use techniqu transform matric origin function result function must boolean valu techniqu hand work integ allow integ valu handl wider rang function moreov obtain larger reduct factor sinc choic transform ma trice techniqu appli boolean function often achiev compar sometim better result dynam variabl reorder thu case serv altern dynam variabl reorder conjectur combin techniqu togeth may result reduct neither techniqu achiev alon one main limit bryant chen work perform arithmet oper function repres bmd expens show oper implement bmd hybrid decis diagram well although worst case complex oper exponenti algorithm work quit well practic addit show logic oper perform hybrid decis diagram use repres boolean function properti want verifi arithmet circuit express arithmet relat order extend symbol model check algorithm handl properti essenti abl comput bdd set variabl assign satisfi relat bryant chen provid algorithm thi paper give effici algorithm purpos moreov prove class linear express time complex algorithm linear number variabl techniqu handl arithmet oper relat use intens verif srt divis algorithm similar one use pentium paper organ follow section give basic properti mtbdd use remaind paper particular section show matrix oper implement section describ relationship bmd invers reedmul transform section also introduc kroneck product show use gener bmd next section introduc hybrid decis diagram provid experiment evid show use represent section main section paper section show arithmet oper implement section give effici algorithm comput set assign satisfi arithmet relat express term hybrid decis diagram paper conclud section brief summari discuss direct futur research multitermin binari decis diagram order binari decis diagram bdd canon represent boolean formula propos bryant often substanti compact tradit normal form conjunct normal form disjunct normal form also manipul effici henc bdd becom wide use varieti cad applic includ symbol simul verif combin logic and recent verif sequenti circuit bdd similar binari decis tree except structur direct acycl graph rather tree strict total order place occurr variabl one travers graph root leaf algorithm linear complex exist comput bdd represent f f g bdd formula f g z function map boolean vector length integ suppos possibl valu f function f partit space b boolean vector n set fs g g let f characterist function say f normal form f x repres sum repres bdd integ termin node call dag multitermin bdd mtbdd arithmet oper fi mtbdd perform follow way give effici algorithm comput fx fi gx ffl f leaf leaf g appli fi f first argument i i z z z z z ae ae ae ae ae z z z z z ae ae ae ae ae f figur bdd f g i z z z z z ae ae ae ae ae i z z z z z ae ae ae ae ae i z z z z z ae ae ae ae ae figur bdd f fi g ffl g leaf leaf f appli fi g second argument otherwis f g form figur bdd f fi g depend rel order x x j given figur result diagram may normal form order convert normal form reduct phase need algorithm phase essenti ident reduct phase bryant algorithm construct bdd let k theta l matrix z easi see repres z y x bit vector bit vector j therefor matric integ valu repres integ valu function use represent shown abov also perform variou matrix oper use mtbdd represent particular matrix multipl comput follow way suppos two matric b dimens b product b c dimens k theta treat b integervalu function comput product matrix c mean sum possibl assign y practic mx y comput as way variabl elimin perform addit although oper work well mani case worst case complex exponenti number variabl integ function also repres array bdd bdd boolean valu correspond one bit binari represent function valu gener quit expens perform oper use represent kroneck transform recent bryant chen develop new represent function map boolean vector integ valu represent call binari moment diagram bmd function instead shannon expans use expans equal f merg common subexpress dag represent function obtain prove paper give compact represent certain function exponenti size repres mtbdd directli close relationship represent invers reedmul transform matrix invers reedmul transform defin recurs gamma linear mtbdd represent let binari represent repres column vector valu ith entri fi distinguish function correspond column vector invers reedmul transform obtain multipli transform matrix column vector b use techniqu describ previou section theorem mtbdd b f isomorph bmd f proof theorem easi prove induct number variabl base case number variabl function constant b mtbdd b f bmd f termin node therefor isomorph i i i r gammapsi x n gamma ngamma i i gamma gamma n i r gammapsi figur mtbdd n induct step let root bmd f mtbdd b f x n left child root bmd f bmd f j xn right child bmd f j f repres column vector upper half f j xn bottom half f j xn invers reedmul matrix gamma result transform therefor gamma theta vector repres mtbdd left child mtbdd invers reedmul transform f j xn right child mtbdd invers reedmul transform f induct hypothesi children isomorph children root bmd f therefor bmd f isomorph mtbdd b f kroneck product two matric defin follow n anmc c b mb invers reedmul matrix repres kroneck product n ident matric gamma omega omega z invers reedmul transform uniqu respect transform defin kroneck product theta matric may also provid concis represent function map boolean vector integ particular reedmul matrix r n walsh matrix w n repres kroneck product shown below r r omega z w omega omega z although kroneck transform perform matrix multipl effici way comput it well known properti kroneck product igammaomega theta matrix k ident matrix size k theta k transform form i igammaomega iomega kgammai call basic transform let let g function repres mtbdd basic transform igammaomega comput result observ kroneck transform perform seri basic transform moreov prove order basic transform affect final result fact kroneck product nonsingular theta matric use transform matrix produc canon represent function entri theta matrix restrict among f gammag six interest matric matric either singular would produc bdd isomorph one six matric appli transform function discuss paper transform partit two group three each mtbdd result appli transform group complex base exampl complex xy kroneck transform base matrix obtain complex gener formula c d c j constant prove result mtbdd size formula transform exceed nmnm induct number total variabl base case variabl trivial simplic let suppos x n top variabl right child transform mtbdd induct hypothesi size left child exceed similar manner show left child transform mtbdd induct hypothesi size exceed n therefor total size transform bdd upper bound nm possibl use bmd repres boolean function discuss gen eral bmd appear better ordinari bdd repres boolean function order see true consid boolean reedmul transform sometim call function decis diagram fdd transform obtain appli modulo oper termin node bmd consequ size fdd alway smaller size bmd sinc invers boolean reedmul transform boolean reedmul tran format fdd fdd origin bdd therefor everi function f jfdd f j jbdd f j exist anoth function f boolean reedmul transform f jbdd f particular bmd fdd represent middl bit multipli still exponenti hybrid decis diagram previou section discuss transform repres kroneck product number ident theta matric transform matrix kroneck product differ theta matric still canon represent function call transform obtain matric hybrid transform similar strategi tri becker howev techniqu work boolean domain use techniqu transform matric origin function result function must boolean valu techniqu hand work integ allow integ valu handl wider rang function moreov obtain larger reduct factor sinc choic transform matric appli idea reduc size bdd represent function sinc known polynomi algorithm find hybrid kroneck transform minim bdd size use greedi algorithm reduc size restrict entri matrix set f gammag six matric tri variabl select matrix give smallest bdd size bdd obtain transform call hybrid decis diagram hdd tri method isca benchmark circuit case abl reduc size bdd represent factor howev reduct magnitut usual occur origin function bad variabl order dynam variabl order use method give much smaller reduct factor exampl circuit without reorder reorder circuit jinputj output jbddj jbmdj jhddj jbddj j bmd j jhddj tabl experiment result hybrid transform isca circuit tri sever techniqu increas number possibl matric first techniqu involv increas number entri matric accomplish allow entri take larger valu use complex number g unfortun neither extens improv result significantli second techniqu involv use transform matric kroneck product larger matric exampl tri hybrid kroneck transform base theta matric instead theta matric although abl reduc bdd size even use techniqu time take find transform much bigger sinc number possibl consider larger note techniqu achiev compar sometim better result dynam variabl reorder thu case serv altern dynam variabl reorder conjectur combin techniqu togeth may result reduct neither techniqu achiev alon arithmet oper hybrid decis diagram order make techniqu describ previou section use desir abl perform variou arithmetr oper hybrid bdd paper consid case addit multipl two integ suppos f transform f matrix g transform g matrix use techniqu discuss previou section scalar multipl simpl perform find sum two function also simpl transform appli sum must determin first suppos use transform matrix result next consid perform multipl choos transform matrix f delta g suppos top level variabl x assum top level transform f invers assum also top level transform g invers omega b b i i z z z z z ae ae ae ae ae z z z z z ae ae ae ae ae l f l r figur bdd f g i z z z z z ae ae ae ae ae l f delta g r figur bdd f delta g b b theta consequ b b b b b b f r delta g l b b b b b b f r delta g l b b b b f r sinc f delta g l f delta g r comput term f l delta comput transform product recurs manner store intermidi result total number recurs call comput f delta g jf jjg j addit need comput worst case complex still exponenti howev practic algorithm work quit well exampl tabl show time take comput hybrid decis diagram hybrid decis diagram timesec tabl experiment result comput abl add multipli function perform standard logic oper exampl equat inequ frequent use abl comput set assign make f f one exampl follow inequ extrem import correct radix srt float point divis algorithm divisor remaind inequ regard array boolean variabl order verifi correct algorithm necessari determin set assign variabl make inequ true find set assign satisfi inequ reduc problem find set assign make function f posit equat handl similar manner straightforward way solv problem convert f mtbdd pick termin node correct sign howev work well gener function mtbdd exponenti size hybrid bdd polynomi size exampl let f function differ linear size bmd bdd set assign satisfi f linear size mtbdd size f exponenti develop algorithm substanti reduc cost comput relat certain function process need know sign function valu thu find valu subhdd sign conclud assign subhdd valu relat consequ need continu expand subhdd obtain good algorithm problem necessari determin effici subhdd uniform sign achiev comput upper lower bound subhdd algorithm given determin inform intermedi result store algorithm take time linear number bdd node boundvaluesf upper lower begin iff termin node let a a a invers matrix node f easi prove algorithm give lower upper bound function repres hybrid bdd let l stand lower u stand upper etc let f l stand leftf f r stand rightf suppos recurs call children produc correct valu l f l u l f r u l f l u l f r u l f l u l f r u theta f l f r l therefor lower upper give correct bound f improv algorithm comput bdd set assign make function f posit given below similar algorithm use find set assign make function zero bdd greaterthanf begin iff termin node iffvalu els boundvaluesf upper lower ifupp iflow let a a a invers matrix node f returnbddifthenelselevelf left right algorithm work extrem well verif arithmet circuit follow theorem guarante effici algorithm set linear express hybrid decis diagram bmd formula occur du verif srt divis algorithm class express form n x x x xx mn c c figur c s integ constant use variabl order x n constant bmd f shown figur lemma f repres bmd number recurs call greater procedur comput bdd f level cannot exceed proof suppos consid recurs call bmd node x ij top variabl invers transform matrix bmd node theta reedmul matrix thu recurs call procedur greater appli either left child sum children bmd node recurs call variabl must sum subbmd figur top variabl x ij right children ancestor subbmd right children ancestor node subbmd constant node valu c k l k l j sum right children rewritten form j integ constant therefor bmd node top variabl x ij form shown figur otherwis c c k otherwis appli procedur bound valu bmd upper bound comput equal prove induct structur bmd base case trivial induct step consid node variabl two case first case m case induct hypothesi upper equal sinc right branch constant x x xx c c c figur bmd node explor level x ij upper c j therefor similar proof obtain case m way abl prove lower bound comput procedur henc c c c c c c gamma k upper neg algorithm return constant fals likewis gamma k lower posit algorithm return constant true therefor recurs call children occur gamma gamma k sinc integ theta gamma recurs call theorem complex greater f on proof n level level take recurs call recurs call take time on comput upper lower bound valu therefor total time case linear inequ new bmd gener form constant g exist bmd rememb constant without actual ad bmd abl avoid gener new bmd node introduc techniqu complex comput greater f reduc on j exampl begin section relationship time take comput inequ number bit shown figur summari direct futur research paper discuss relationship mtbdd bmd also describ gener call hybrid decis diagram often much concis effici implement arithemet oper hybrid decis diagram also given comput bdd set variabl assign satisfi arithmet relat import reason arithmet circuit give effici algorithm purpos moreov prove class linear express time complex algorithm linear number variabl number direct futur research current use greedi algorithm choos appropri transform matrix level hybrid decis timesec no bit figur time comput gamma delta divisor delta remaind delta divisor diagram although seem unlik effici algorithm find optim transform may possibl develop better heurist would permit even concis represent hybrid decis diagram transform matric node one level must same allow transform matric differ freedom select transform and therefor abl reduc represent further final algorithm solv arithmet relat work extrem well linear equat inequ although current algorithm handl nonlinear equat inequ well may possibl extend algorithm find new algorithm handl complic nonlinear equat inequ r algebra decis diagram applic introcut matrix analysi verif arithmet function binari moment diagram symbol model check state beyond spectral transform larg boolean function applic technolog map effici represent manipul switch function base order kroeneck function decis diagram fast ofdd base minim fix polar reedmul express applic boolean algebra switch circuit design error de tection tr graphbas algorithm boolean function manipul symbol model check spectral transform larg boolean function applic technolog map effici represent manipul switch function base order kroneck function decis diagram fast ofdd base minim fix polar reedmul express verif arithmet circuit binari moment diagram algebra decis diagram applic introduct matrix analysi nd ed ctr m thornton r drechsler spectral decis diagram use graph transform proceed confer design autom test europ p march munich germani yirngan chen randal e bryant acv arithmet circuit verifi proceed ieeeacm intern confer computeraid design p novemb san jose california unit state jame smith giovanni de mich polynomi method compon match verif proceed ieeeacm intern confer computeraid design p novemb san jose california unit state jame smith giovanni de mich polynomi method alloc complex compon proceed confer design autom test europ pe januari munich germani m clark m khaira x zhao word level model checkingavoid pentium fdiv error proceed rd annual confer design autom p june la vega nevada unit state method coverag metric function verif proceed confer design autom test europ proceed march munich germani rolf drechsler bernd becker stefan ruppertz kbmd verif data structur ieee design test v n p april yirngan chen randal e bryant phdd effici graph represent float point circuit verif proceed ieeeacm intern confer computeraid design p novemb san jose california unit state jame smith giovanni de mich polynomi circuit model compon match highlevel synthesi ieee transact larg scale integr vlsi system v n p r drechsler use wordlevel inform formal hardwar verif autom remot control v n p june christoph scholl bernd becker thoma m wei wordlevel decis diagram wlcd divis proceed ieeeacm intern confer computeraid design p novemb san jose california unit state rolf drechsler wolfgang gnther stefan hreth minim wordlevel decis diagram integr vlsi journal v n p decemb loui kruger somesh jha eujin goh dan boneh secur function evalu order binari decis diagram proceed th acm confer comput commun secur octob novemb alexandria virginia usa christoph scholl bernd becker thoma wei wlcd complex wordlevel decis diagramsa lower bound divis formal method system design v n p may jin yang aloysiu k mok farn wang symbol model check eventdriven realtim system acm transact program languag system topla v n p march martin keim rolf drechsler bernd becker michael martin paul molitor polynomi formal verif multipli formal method system design v n p januari jawahar jain jame bitner magdi s abadir jacob a abraham donald s fussel index bdd algorithm advanc techniqu repres verifi boolean function ieee transact comput v n p novemb rolf drechsler bernd becker stefan ruppertz kbmd new data structur verif proceed european confer design test p march stefan hreth rolf drechsler formal verif wordlevel specif proceed confer design autom test europ pe januari munich germani randal e bryant binari decis diagram beyond enabl technolog formal verif proceed ieeeacm intern confer computeraid design p novemb san jose california unit state pejman lotfikamran mohammad hosseinabadi hamid shojaei mehran massoumi zainalabedin navabi ted data structur microprocessor verif proceed confer asia south pacif design autom januari shanghai china s hreth r drechsler dynam minim wordlevel decis diagram proceed confer design autom test europ p februari le palai de congr de pari franc john lafferti alexand vardi order binari decis diagram minim trellis ieee transact comput v n p septemb christoph kern mark r greenstreet formal verif hardwar design survey acm transact design autom electron system toda v n p april edmund m clark berndholg schlingloff model check handbook autom reason elsevi scienc publish b v amsterdam netherland