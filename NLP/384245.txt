t improv memori perform sort algorithm a memori hierarchi consider sort algorithm design implement play import role significantli improv execut perform exist algorithm mainli attempt reduc capac miss directmap cach reduc type cach miss occur common setassoci cach tlb restructur mergesort quicksort algorithm integr tile pad buffer techniqu repartit data set studi show substanti perform improv obtain use new method b introduct sort oper fundament mani larg scale scientif commerci applic sort algorithm highli sensit memori hierarchi comput architectur algorithm execut well sensit type data set restructur standard algorithm effici sort algorithm such mergesort quicksort exploit cach local effect approach improv perform highend system ex work support part nation scienc foundat grant ccr ccr eia air forc offic scientif research grant afosr sun microsystem grant eduenafo permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit direct commerci advantag copi show notic first page initi screen display along full citat copyright compon work own other acm must honor abstract credit permit copi otherwis republish post server redistribut list use compon work work requir prior specif permiss andor fee permiss may request public dept acm inc broadway new york ny usa fax permissionsacmorg xiaodong zhang stefan a kubricht ist restructur algorithm eg mainli attempt reduc capac miss directmap cach paper report substanti perform improv obtain exploit memori local reduc type cach miss conflict miss tlb miss present sever restructur mergesort quicksort algorithm implement fulli use exist processor hardwar facil such cach associ tlb integr tile pad techniqu properli partit data set cach optim sort fundament subroutin often repeatedli use mani applic program thu order gain best perform cacheeffect algorithm implement done care precis algorithm design program level focu restructur mergesort quicksort algorithm cach opti mizat result contribut summar follow appli pad techniqu abl effect reduc cach conflict miss tlb miss fulli consid algorithm design tile mergesort multimergesort two mergesort alter nativ optim improv cach overal perform experi differ highend workstat show algorithm achiev execut time reduct compar base mergesort reduct versu fastest tile multimergesort algorithm partit data set base data rang abl exploit cach local quicksort unbalanc data set two quicksort altern significantli outperform memorytun quicksort flashsort unbalanc data set cacheeffect sort algorithm design architectur data set depen dent algorithm design includ paramet data cach size associ tlb size associ ratio data set size cach size well other measur simul demonstr interact algorithm machin the essenti issu consid sort algorithm design tradeoff reduct cach miss increas instruct count give execut time model quantit predict tradeoff also give analyt predict number cach miss sort algorithm cach optim show increas instruct count due effect cach optim much cheaper cycl lost differ type cach miss data set consist number element one element may byte integ byte integ byte float point number byte doubl float point number use unit element specifi cach capac size cach cach line alway multipl element practic ident unit practic meaning architect applic program mer make discuss straightforward algorithm architectur paramet use describ cacheeffect sort algorithm size data set c data cach size l size cach line k improv memori perform sort algorithm delta cach associ number set entri tlb cach k associ p memori page size besid algorithm analysi perform measur differ highend workstat also conduct simul provid perform insight simplescalar tool set famili simul studi interact applic program comput architectur simul tool take applic program binari compil simplescalar instruct set architectur a close deriv mip instruct set gener statist concern program relat simul architectur statist gener includ mani detail execut trace avail measur comput cach miss l l tlb run sort algorithm differ simul architectur memori hierarchi similar highend workstat observ follow perform factor l l cach miss per element compar data cach miss tlb miss per element compar tlb miss instruct count per element compar algorithm complex reduct rate total execut cycl compar cycl save percentag base mergesort memorytun quicksort algorithm compar evalu experiment analyt test sort algorithm varieti data set use byte integ element data set use some probabl densiti function number gener describ random data set obtain call random number gener random c librari return integ rang equilik function equilikelyab return integ rang b bernoulli function bernoullip return integ return integ pascal function pascalnp return integ return integ n return integ data set unbalanc function return integ rang call rand c librari n data set size return integ max cacheeffect mergesort algorithm section first briefli overview two exist mergesort algorithm cach local well merit limit present two new mergesort altern address limit experiment perform evalu measur present section xiaodong zhang stefan a kubricht tile mergesort multimergesort lamarca ladner present two mergesort algorithm effect use cach first one call tile mergesort basic idea partit data set subarray sort individu mainli two purpos avoid capac miss fulli use data load cach replac algorithm divid two phase first phase subarray length c half cach size sort base mergesort algorithm exploit tempor local algorithm return base mergesort without consid cach local second phase complet sort entir data set second mergesort call multimergesort address limit tile mergesort algorithm first phase first phase tile mergesort second phase multiway merg method use merg sort subarray togeth singl pass prioriti queue use hold head list merg algorithm exploit cach local well number subarray second phase less c howev instruct count significantli increas algorithm conduct experi analysi two mergesort algorithm show sort perform improv two reason first algorithm significantli reduc capac miss suffici reduc conflict miss mergesort basic oper merg two sort subarray destin array cach low associ conflict map occur frequent among element three subarray second reduc tlb miss consid algorithm even data set moder larg tlb miss may sever degrad execut perform addit effect normal data cach miss experi show perform improv multimerg algorithm sever machin modest although decreas data cach miss heap structur significantli increas tlb miss new mergesort altern aim reduc conflict miss tlb miss minim instruct count increas present two new altern restructur mergesort cach local tile mergesort pad multimergesort tlb pad tile mergesort pad pad techniqu modifi data layout program conflict miss reduc elimin data layout modif done runtim system softwar compiletim compil optim pad algorithm level full understand data structur expect significantli outperform optim system method second phase tile mergesort pair sort subarray sort merg destin array one element time two subarray select sort comparison sequenc data element two differ subarray destin array potenti conflict cach block may map block directmap cach way associ cach improv memori perform sort algorithm delta directmap cach total number conflict miss tile mergesort worst case approxim log number pass second phase sort repres conflict miss per comparison conflict miss per element placement destin array comparison respect order chang base address potenti conflict cach block insert l element or cach line space separ everi section c element data set second phase tile mergesort pad element significantli reduc cach conflict second phase mergesort compar data size number pad element insignific addit instruct count increment result move element subarray new posit pad also trivial call method tile mergesort pad directmap cach total number conflict miss tile mergesort pad ndlog log c number pass second phase sort repres number conflict miss per element pad ad one conflict miss per comparison reduc conflict miss placement elimin compar two approxim see tile mergesort pad reduc conflict miss tile mergesort our experiment result show execut time tile mergesort sun ultra workstat directmap cach reduc tile mergesort pad execut time reduct mainli come reduct conflict miss figur show exampl data layout two subarray second phase tile mergesort modifi pad conflict miss reduc exampl directmap cach hold element figur type line repres pair comparison action store select element destin array letter m figur repres cach miss without pad conflict miss merg two sort subarray destin array pad ad figur show l left figur l right figur miss base mergesort tile mergesort tile mergesort pad simul sun ultra machin simplescalar machin l directmap cach kbyte l way associ cach kbyte experi show pad reduc l cach miss compar base mergesort tile mergesort miss conflict cannot reduc tile l cach miss reduct tile mergesort pad almost tile mergesort mean pad effect reduc conflict miss l machin conflict miss significantli reduc l way associ cach delta li xiao xiaodong zhang stefan a kubricht x x x x x x x x pad pad destin array cach two sort subarray conflict conflict fig data layout subarray modifi pad reduc conflict missesk k k k k per element data set size in element l miss per element base mergesort tile mergesort tile mergesort paddingk k k k k per element data set size in element l miss per element base mergesort tile mergesort tile mergesort pad fig simul comparison l cach miss left figur l miss right figur mergesort algorithm random data set simul sun ultra l cach miss curv left figur base mergesort tiledmergesort overlap capac miss second phase tile mergesort unavoid without complex data structur size work set two subarray destin array normal larger cach size shown potenti conflict miss could reduc pad phase howev pad may complet elimin conflict miss due random order data set despit thi experiment result present improv memori perform sort algorithm delta section appendix use differ data set consist show effect pad sun ultra multimergesort tlb pad second phase multimergesort algorithm multipl subarray use complet sort entir data set effect use cach singl pass make use heap hold head multipl list howev sinc head come list multimerg practic work set much larger base mergesort where three subarray involv time larg work set caus tlb miss degrad perform we explain tlb structur follow paragraph experi indic multimergesort significantli decreas number data cach miss howev also increas tlb miss offset perform gain although rise instruct count lead addit cpu cycl multimergesort perform degrad algorithm come mainli high number tlb miss sinc memori access much expens cpu cycl tlb translationlookasid buffer special cach store recent use virtualphys page translat memori access tlb gener small fulli associ setassoci cach entri point memori page k kbyte tlb cach miss forc system retriev miss translat page tabl memori select tlb entri replac data access larger amount data memori page tlb hold tlb miss occur exampl tlb cach sun ultrasparciii processor hold fulli associ entri point page kbyte p page tlb sun ultrasparciii processor hold theta element repres moderatelys data set sort practic one data array oper time thu tlb hold limit amount data sort processor tlb fulli associ setassoci exampl tlb pentium ii pentium iii processor way associ k simpl block base number tlb entri work well multipl page within tlb space rang may map tlb set entri caus tlb cach conflict miss second phase multimergesort insert p element or page space separ everi sort subarray data set order reduc elimin tlb cach conflict miss pad chang base address list page unit avoid potenti tlb conflict miss figur give exampl pad tlb tlb directmap cach entri number element list multipl page element pad list data set map tlb entri pad list map differ tlb entri multimergesort oper larg data set size list multipl number tlb miss per element close tlb pad averag tlb miss per element multimergesort algorithm xiaodong zhang stefan a kubricht pad tlb data array tlb ps ps ps pad data array fig pad tlb data layout modifi insert page space multipl locat k becom approxim k tlb ts number averag miss tlb set entri approxim deriv figur show l miss tlb miss mergesort algorithm simul pentium ii simplescalar l way set associ cach kbyte l way associ cach kbyte tlb way set associ cach entri simul show multimergesort multimergesort tlb pad lowest l cach miss see left figur figur multimergesort highest tlb miss significantli reduc tlb pad see right figur figur exampl verifi approxim tlb miss multimergesort substitut paramet pentium ii approxim per element multimergesort tlb pad close experiment result in right figur figur show section multi mergesort tlb pad significantli reduc tlb miss improv overal execut perform tradeoff instruct count increas perform gain figur show instruct count total cycl save percentag mergesort algorithm compar base mergesort simul pentium ii simul show multimergesort highest instruct count tile mergesort lowest instruct count take advantag low l miss multimergesort significantli reduc tlb miss pad multimergesort tlb pad save cycl larg data set compar base mergesort even though rel high instruct count also show tiledmergesort pad gain perform improv pentium ii machin way set associ cach conflict miss major concern improv memori perform sort algorithm delta k k k k k per element data set size in element l miss per element base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad per element data set size in element tlb miss per element base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig simul comparison l cach miss left figur tlb miss right figur mergesort algorithm random data set simul pentium iik k k k k instruct per element data set size in element instruct per element base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad cycl save data set size in element cycl save vs base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig simul comparison instruct count left figur save cycl percentag right figur mergesort algorithm random data set simul pentium ii cacheeffect quicksort first briefli evalu two exist quicksort algorithm concern merit limit includ cach local present two new quicksort altern memori perform improv experiment result report next section xiaodong zhang stefan a kubricht memorytun quicksort multiquicksort lamarca ladner paper present two quicksort algorithm cach optim first one call memorytun quicksort modif base quicksort instead save small subarray sort end memorytun quicksort sort subarray first encount order reus data element cach second algorithm call multiquicksort algorithm appli singl pass divid full data set multipl subarray hope smaller cach capac perform gain two algorithm experi report modest implement two algorithm simul machin variou highend workstat obtain consist perform also found quicksort altern cach optim highli sensit type data set algorithm work well unbalanc data set new quicksort altern practic quicksort algorithm exploit cach local well balanc data challeng make quicksort perform well unbalanc data set present two quicksort altern cach optim work well balanc unbalanc data set flash quicksort flashsort extrem fast sort balanc data set maximum minimum valu first identifi data set identifi data rang data rang evenli divid class form subarray algorithm consist three step classif determin size class permut move element class use singl temporari variabl hold replac element straight insert sort element class use sedgewick insert sort reason algorithm work well balanc data set number element store subarray first two step quit similar suffici small fit cach capac make flashsort highli effect on howev data set balanc unbalanc amount element among subarray gener caus ineffect cach usag make flashsort slow insert sort on worst case compar pivot process quicksort classif step flashsort like gener balanc subarray favor cach optim hand quicksort outperform insert sort unbalanc subarray take advantag flashsort quicksort present new quicksort altern call flash quicksort first two step one flashsort last step use quicksort sort element class inplac flash quicksort employ anoth cach optim improv tempor local flash quicksort hope improv overal perform altern call inplac flash quicksort algorithm first third step one flash quicksort second step addit array use hold permut element improv memori perform sort algorithm delta origin flashsort singl temporari variabl use hold replac element cach line normal hold one element data structur singl variabl minim chanc data reusag use addit array attempt reus element cach line replac reduc instruct count copi data element although approach increas requir memori space improv cach overal perform simul result figur show instruct count left figur l miss right figur memorytun quicksort flashsort flash quicksort inplac flash quicksort unbalanc data set simul pentium iii faster processor mhz larger l cach kbyte pentium ii instruct count curv flashsort high present left figur figur figur show instruct count memorytun quicksort also began increas rapidli data set size grew contrast instruct count flash quicksort inplac flash quicksort littl chang data set size increas simul also show l miss memorytun quicksort flashsort increas much rapidli flashsort inplac flashsort algorithm simul result consist algorithm analysi show effect new quicksort altern unbalanc data set instruct per element data set size in element instruct per element unbalanc data set memorytun quicksort flashsort flash quicksort inplac flash quicksortk k k k k per element data set size in element l miss per element unbalanc data set memorytun quicksort flashsort flash quicksort inplac flash quicksort fig simul comparison instruct count left figur l miss right figur quicksort algorithm unbalanc data set simul pentium iii the instruct count curv flashsort high present left figur measur result perform evalu implement test sort algorithm discuss previou section data set describ section sgi workstat sun ultra workstat pentium ii pc pentium iii pc data size xiaodong zhang stefan a kubricht workstat sgi sun ultra pentium pentium processor type r ultrasparciii pentium ii pentium iii xeon clock rate mhz l cach kbyte memori latenc cycl tabl architectur paramet machin use experi use experi limit memori size focu cach effect method use lmbench measur latenc memori hierarchi differ level machin architectur paramet machin list tabl specif l cach refer l data cach ls uniform hit time l l main memori measur lmbench unit convert nanosecond ns cpu cycl compar algorithm algorithm execut time collect gettimeofday standard unix time function report time unit cycl per element cpe execut time theta clock rate execut time measur time second clock rate cpu speed cyclessecond machin program run n number element data set perform result data set quit consist analysi sinc perform sort algorithm use differ data set differ machin consist principl present perform result mergesort algorithm use random data set machin plu perform result data set ultra show effect tile mergesort pad perform result quicksort algorithm use random unbalanc data set machin mergesort perform comparison compar mergesort algorithm base mergesort tile mergesort multimergesort tile mergesort pad multimergesort tlb pad proport machin memori capac scale mergesort algorithm nk nm element algorithm show effect larg data set figur show comparison cycl per element among algorithm sgi sun ultra improv memori perform sort algorithm delta measur show multimergesort tlb pad perform best execut time reduc compar base compar tile mergesort compar multi mergesort element hand tile mergesort pad perform best ultra reduc execut time compar multimergesort compar base mergesort compar tile mergesort element multimergesort tlb pad ultra also well improv multimergesort base mergesort tile mergesort element reason super perform improv come long memori latenc cycl make cach miss reduct techniqu highli effect improv overal perform sort algorithm l cach size sgi rel small kbyte tlb frequent use memori access thu tlb pad effect addit l l cach way associ data cach pad effect pad directmap cach contrast ultra s l cach direct map l time larger o thu data cach pad effect tlb pad order show effect tiledmergesort pad lowassoci cach system sun ultra plot perform curv mergesort algorithm use data set ultra appendix experi show tiledmergesort pad consist significantli outperform mergesort algorithm ultra exampl tile mergesort pad achiev execut time reduct zero data set compar base mergesort tile mergesort multimergesort respect use data set also show tile mergesort pad achiev execut time reduct compar base mergesort reduct compar tile mergesort reduct compar multimergesort figur show comparison cycl per element among mergesort algorithm pentium ii pentium iii measur machin show multimergesort tlb pad perform best reduc execut time compar multimergesort compar base mergesort compar tile sort element l l cach machin way set associ thu issu data cach conflict miss concern as discuss section sinc tlb miss degrad perform multimergesort algorithm pad tlb becom effect improv perform summari tile mergesort pad machin directmap cach highli effect reduc conflict miss multimergesort pad perform well machin quicksort perform comparison use random data set unbalanc data set test quicksort algorithm machin quicksort algorithm are memorytun quicksort flashsort flash quicksort inplac flash quicksort delta li xiao xiaodong zhang stefan a kubrichtk k k k k cycl per element data set size element mergesort random data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb paddingk k k k k cycl per element data set size element mergesort ultra random data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig execut comparison mergesort algorithm sgi sun ultra k k k k k cycl per element data set size element mergesort pentium ii random data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb paddingk k k k k cycl per element data set size element mergesort pentium iii random data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig execut comparison mergesort algorithm pentium ii pentium iii figur show comparison cycl per element among mergesort algorithm random data set left figur unbalanc data set right figur sgi machin perform result mergesort algorithm use random data set compar memorytun algorithm slightli outperform other contrast perform result use unbalanc data set significantli differ expect execut time flash quicksort inplac flash quicksort stabl memorytun quicksort flashsort perform much wors data set size increas time curv flashsort even high present right figur figur figur show comparison cycl per element among mergesort improv memori perform sort algorithm delta cycl per element data set size element quicksort random data set memorytun quicksort flash quicksort inplac flash quicksort cycl per element data set size element quicksort unbalanc data set memorytun quicksort flash quicksort inplac flash quicksort fig execut comparison quicksort algorithm random data set left figur unbalanc data set right figur sgi o the time curv flashsort high present right figur algorithm random data set left figur unbalanc data set right figur sun ultra machin ultra algorithm show littl differ execut time flash quicksort inplac flash quicksort show strong effect unbalanc data set exampl data set increas k element execut time flashsort time higher three algorithm the curv high plot figur data set increas element execut time memorytun quicksort time higher flash quicksort inplac flash quicksort execut time flashsort time higher other figur figur show comparison cycl per element among mergesort algorithm random data set left figur unbalanc data set right figur pentium ii pentium iii machin respec tive measur pentium random data set show flashsort flash quicksort inplac flashsort similar execut perform reduc execut time around compar memori tune quicksort again flash quicksort inplac flash quicksort significantli outperform memoryturn quicksort algorithm unbalanc data set two pentium machin predict model perform tradeoff essenti issu consid sort algorithm design algorithm design memori optim tradeoff optim achievementth reduct cach miss optim effortth increment instruct count optim object improv overal performanceto reduc execut time base algorithm tradeoff object quantit predict execut time model xiaodong zhang stefan a kubricht cycl per element data set size element quicksort ultra random data set memorytun quicksort flash quicksort inplac flash quicksort cycl per element data set size element quicksort ultra unbalanc data set memorytun quicksort flash quicksort inplac flash quicksort fig execut comparison quicksort algorithm random data set left figur unbalanc data set right figur ultra the time curv flashsort high present right figur cycl per element data set size element quicksort pentium ii random data set memorytun quicksort flash quicksort inplac flash quicksort cycl per element data set size element quicksort pentium ii unbalanc data set memorytun quicksort flash quicksort inplac flash quicksort fig execut comparison quicksort algorithm random data set left figur unbalanc data set pentium ii the time curv flashsort high present right figur execut time algorithm comput system base amdahl law express ca theta mr theta mp ic instruct count algorithm cp number cycl per instruct cpu algorithm ca number cach access algorithm execut mr cach miss rate algorithm improv memori perform sort algorithm delta cycl per element data set size element quicksort pentium iii random data set memorytun quicksort flash quicksort inplac flash quicksort cycl per element data set size element quicksort pentium iii unbalanc data set memorytun quicksort flash quicksort inplac flash quicksort fig execut comparison quicksort algorithm random data set left figur unbalanc data set pentium iii the time curv flashsort high present right figur execut mp miss penalti cycl system execut time base algorithm base express base theta cp base theta mr base theta mp execut time optim algorithm opt express ic base ic opt instruct count base algorithm optim algorithm ca base ca opt number cach access base algorithm optim algorithm mr base mr opt cach miss rate base algorithm optim algorithm respect optim algorithm tile mergesort tile mergesort pad number cach access kept almost base algorithm type algorithm combin equat predict execut time reduct rate optim algorithm follow base base theta cp base theta mr base theta mp deltam repres miss rate reduct deltai base repres instruct count increment order obtain posit execut time reduct rate must model describ quantit tradeoff instruct count increas miss rate reduct give condit optim algo xiaodong zhang stefan a kubricht rithm improv perform base algorithm follow deltai c deltam r ca theta mp multiphas optim algorithm differ cach access pattern phase multimergesort multimergesort tlb pad combin equat ca base ca opt obtain condit optim algorithm improv perform base algorithm follow deltai c deltam r theta ca mp deltam r theta base theta ca base gamma mr opt theta ca opt architectur relat algorithm relat paramet predict model architectur relat paramet cp mp machin depend easili obtain algorithm relat paramet ic ca mr either predict algorithm analysi obtain run program simul architectur simplescalar algorithm relat paramet also predict run algorithm rel small data set overs cach capac target machin use predict model paramet simplescalar simul abl predict execut time reduct rate optim algorithm studi show predict result use model close measur result error rate conclus examin develop cacheeffect algorithm mergesort quicksort algorithm test repres processor product date show effect simul provid insight perform evalu show mergesort algorithm architectur depend quicksort algorithm data set depend techniqu pad partit also use algorithm cach optim machin depend architectur paramet implement method present paper cach size c cach line size l cach associ k number entri tlb cach memori page size p paramet becom commonli known user paramet also defin variabl program adapt chang user machin machin therefor program easili portabl among differ workstat acknowledg mani student advanc comput architectur class offer spring particip discuss cacheeffect sort algorithm impl mentat particularli arun s mangalam made initi suggest combin quicksort flashsort also appreci alma riska zhao zhang zhichun zhu comment work help simul improv memori perform sort algorithm delta cycl per element data set size element mergesort ultra equilik data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb paddingk k k k k cycl per element data set size element mergesort ultra bernoulli data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig execut comparison mergesort algorithm sun ultra use equilik data set left figur bernoulli data set right setk k k k k cycl per element data set size element mergesort ultra geometr data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb paddingk k k k k cycl per element data set size element mergesort ultra pascal data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig execut comparison mergesort algorithm sun ultra use geometr data set left figur pascal data set right set xiaodong zhang stefan a kubrichtk k k k k cycl per element data set size element mergesort ultra binomi data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb paddingk k k k k cycl per element data set size element mergesort ultra poisson data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig execut comparison mergesort algorithm sun ultra use binomi data set left figur poisson data set right setk k k k k cycl per element data set size element mergesort ultra unbalanc data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb paddingk k k k k cycl per element data set size element mergesort ultra zero data set base mergesort tile mergesort tile mergesort pad multimergesort multimergesort tlb pad fig execut comparison mergesort algorithm sun ultra use unbalanc data set left figur zero data set right set r simplescalar tool set avoid conflict miss dynam larg directmap cach comput architectur quantit approach the influenc cach perform sort portabl tool perform analysi the flashsort algorithm first cours data transform elimin conflict miss implement quicksort program cachemin runtim approach exploit cach local smp cacheoptim method bitrevers tr atom avoid conflict miss dynam larg directmap cach influenc cach perform sort cacheoptim method bitrevers cachemin implement quicksort program ctr chen ding yutao zhong compilerdirect runtim monitor program data access acm sigplan notic v n supplement p februari ranjan sinha justin zobel use random sampl build approxim tri effici string sort journal experiment algorithm jea ranjan sinha justin zobel cacheconsci sort larg set string dynam tri journal experiment algorithm jea v ne protect rfid commun suppli chain proceed nd acm symposium inform comput commun secur march singapor ranjan sinha justin zobel david ring cacheeffici string sort use copi journal experiment algorithm jea gayathri venkataraman sartaj sahni srabani mukhopadhyaya block allpair shortestpath algorithm journal experiment algorithm jea song jiang xiaodong zhang tokenord lru effect page replac polici implement linux system perform evalu v n p may alloc job known unknown memori demand ieee transact parallel distribut system v n p march jame d fix setassoci cach perform search tree proceed fourteenth annual acmsiam symposium discret algorithm januari baltimor maryland bernard m e moret tandi warnow reconstruct optim phylogenet tree challeng experiment algorithm experiment algorithm algorithm design robust effici softwar springerverlag new york inc new york ny bernard m e moret david a bader tandi warnow highperform algorithm engin comput phylogenet journal supercomput v n p may gerth stlting brodal rolf fagerberg kristoff vinther engin cacheoblivi sort algorithm journal experiment algorithm jea