t lower bound select median a present reformul non lower bound bent john proceed th annual acm symposium theori comput pp number comparison need select median n element reformul use weight function apart give intuit proof lower bound new formul open possibl improv it use new formul show pairform median find algorithm ie median find algorithm start compar lfloor nrfloor disjoint pair element must perform worst case least n comparison provid strong evid select median requir least cnon comparison c b introduct sort select problem receiv extens attent comput scientist mathematician long time comparison base algorithm solv problem work perform pairwis comparison element rel order element known case ith largest element among n input element found case select sort comparison base comput model quit well understood determinist algorithm model decis tree intern node repres comparison two element everi leaf repres result comput sinc must least mani leav decis tree possibl reorder n element algorithm sort n element use least dlog ne n log n n log e comparison worst case all logarithm paper base logarithm best known sort method call merg insert knuth due lester ford jr selmer johnson sort n element use n log n n thu gap upper lower bound narrow error second order term bound n problem nding median special case select ith largest order set n element although much eort put nding exact number requir comparison still annoy gap best upper lower bound current known know sort could select median rst sort select middlemost element quit evid could better much better question receiv somewhat surpris answer blum et al show determin median linear time use n comparison result improv upon schnhage paterson pipping present algorithm use n school comput scienc raymond beverli sackler faculti exact scienc tel aviv univers tel aviv israel email doritcheckpointcom zwickposttauacil depart numer analysi comput scienc royal institut technolog stockholm sweden email fjohanhstaffanugnadakths d dor j h astad s ulfberg u zwick main invent use factori massproduc certain partial order easili merg other remain best algorithm almost year dor zwick push number comparison littl bit n on ad green factori recycl debri merg process use algorithm rst nontrivi lower bound problem also present blum et al use adversari argument n lower bound subsequ improv n on pratt yao yap later munro poblet improv no respect proof last two bound long complic fussenegg gabow prove n on lower bound median use new proof techniqu bent john use basic idea gave short proof improv lower bound n current best avail thu uncertainti coecient n larger nding median sort even though linear term second order term case sort sinc method base proof bent john let us describ detail given decis tree comparison base algorithm invent method prune yield collect prune tree then lower bound number prune tree number leav obtain nal argument say leav prune tree almost disjoint give lower bound size decis tree section reformul proof bent john assign weight node decis tree weight node v correspond total number leav subtre root v prune tree v occur proof bent john weight root approxim n show everi node v decis tree child whose weight least half weight v weight leav small proof formul way becom transpar one easili studi individu comparison rule bad algorithm point view mani problem nding maxim minim element order set nding maxim minim element order set optim algorithm start make bnc pairwis comparison singleton element refer algorithm start way pair form discuss whether optim pairform algorithm partial order particular question pose open problem aigner exampl found chen show pairform algorithm alway optim interest note algorithm pairform still open problem whether optim pairform algorithm nding median section use new approach prove pairform algorithm use least n comparison nd median dor zwick recent abl extend idea describ obtain n lower bound tini number comparison perform worst case median select algorithm lower bound select median bent john revisit bent john prove n on comparison requir select median result fact gener provid lower bound number comparison requir select ith largest element n concentr median select although result like bent john extend gener i although proof given bent john rel short simpl present reformul two reason thi rst proof get transpar second formul make easier studi eect individu comparison theorem bent john find median requir n comparison proof determinist algorithm nding median repres decis tree intern node v label comparison b two children node v ab v ab repres outcom b b respect assum decis tree contain redund comparis element whose rel order alreadi establish consid univers u contain n element everi node v subset c u make follow denit everi comparison b v b c outcom b everi comparison b v b c outcom b proceed proof select median requir n parison present proof somewhat weaker result assum u contain show select two middlemost element requir comparison proof case slightli simpler yet demonstr main idea use proof theorem dene weight function node weight function satis follow three properti i weight root non ii intern node v child whose weight least half weight v iii weight leaf small everi node v decis tree keep track subset size may contain largest element respect comparison alreadi made let av contain set call upper half compat v assign weight estim far solut algorithm is assum element largest weight everi av dene weight node v dene superscript w a use shall shortli dene second weight function w b d dor j h astad s ulfberg u zwick case w b b tabl weight set av children node v rel weight v root r subset size u upper half compat r also ar weight nd promis consid weight w a set av node v label comparison b weight vs children depend element b belong and minim maxim a four possibl case consid tabl weight given rel weight w v zero indic longer compat child thu contribut weight weight w vab a exampl a w a otherwis seen v alway least one child weight least half weight v furthermor one four case w a leaf v decis tree correspond state algorithm two middlemost element found therefor one set left av sinc identi minimum element maximum element a get w so follow path root tree repeatedli descend child largest weight will eventu reach leaf perform least n prove select median also requir least n ison make median well dene assum problem aris argument weight leav select median two middlemost element consid necessarili small enough possibl know median without know relat element which contain element remedi follow node v algorithm close determin minimum element a essenti forc determin largest element instead done move element creat set g set lower half compat v median maximum element b suitabl choic max v max v b set b lower half compat v may contain smallest element u keep track bs multiset bv root r let ar contain subset size u befor let br empti exchang bs algorithm proce lower bound select median case tabl weight set b bv children node v rel weight v weight set b dene weight b estim far algorithm solut assum element b smallest element weight node v dene begin algorithm in upper part decis tree weight node still sum weight as therefor dene av bv rest exactli node v except root simpli copi av bv parent node remov set upper lower half compat v respect ensur weight everi leaf small follow if av ne select element min v a compar fewest number element a remov set av add set bv note root jmin r quantiti decreas one comparison leaf reach leaf v median known thu av empti lemma let av bv dene rule describ abov then everi intern node v label b child least half weight v ie wv ab wv wv ab wv proof tabl give weight set av vs children rel weight v similarli tabl give weight set b bv vs children rel weight w v v b v w v b everi av b bv remain check weight decreas lower half compat set b replac upper half compat set a cover lemma lemma remov av b ad place bv fewer n comparison perform path root v a proof set av replac set ne element case element min v a compar fewest number element a compar least n element a get element min v a compar d dor j h astad s ulfberg u zwick least n element a least n comparison perform path root v contradict get therefor compar fewer n element thu jmax v bj jmax v n consequ get aj thu requir know weight root larg weight decreas fast remain shown weight leav rel small establish follow lemma lemma leaf v in median known wv proof clearli set compat leaf set contain largest element set b contain smallest element sinc get w sinc exactli element remov b obtain correspond a copi b bv let comparison tree correspond median nding algorithm height least n done otherwis start root repeatedli descend child whose weight least half weight parent trace path whose length least n on theorem follow let us see current formal give room improv exist origin proof n lower bound obtain show node v decis tree correspond median nding algorithm child whose weight least half weight v consid node v along path obtain start root repeatedli descend child larger weight leaf reach could show sucient mani node path weight strictli larger half weight parent would obtain improv lower bound median select wv length path therefor depth least n improv lower bound pairform algorithm let v node comparison tree element x singleton v compar v element two element x form pair v element x compar v neither compar element pairform algorithm algorithm start construct concentr comparison involv element part pair obtain better lower bound pairform algorithm theorem pairform algorithm nding median must perform worst case least n proof easi see comparison involv two singleton delay one compar second time therefor restrict attent comparison tree partial order correspond node contain two pair allow one pair enough algorithm allow construct two pair fa bg fa compar element fa bg element fa g focu attent node decis tree element pair compar second time number nonsingleton m v node number nonsingleton lower bound select median r r r r r r r r fig six possibl way a b c may divid a note c necessarili singleton element may part larger partial order m bv empti thu consid tabl rest section recal av denot collect subset u size upper half compat v hl u subset u arbitrari size let ag let whl v contribut set ahl v weight v ie breviti write v fh h r gfl l g v w v w fh h r gfl l g v proceed describ intuit lie behind rest proof consid tabl last section if node v decis tree two case a b equal like precis contribut w ab v w ba v two case total weight v equal must least one child v whose weight greater half weight v diculti improv lower bound bent john lie therefor node contribut two case a b almost equal fact easili seen look origin proof given suppos v node element pair fa bg compar arbitrari element c number nonsingleton v m assum without loss gener b weight set av vs children depend element a b c belong a whether c minim maxim a six possibl way divid element a b c shown figur weight set vs children rel weight w v one six case given tabl tabl similar tabl previou section c play role b one import dierenc howev a b c a rst row tabl weight v ac equal weight v weight halv may case rst row tabl contribut w abc v case a b c weight v neglig must least one child v whose weight greater half weight v improv lower bound obtain show contribut case a b roughli equal element partial order singleton contribut case a b c non neglig larger number singleton partial order larger rel contribut weight w abc v weight wv v thu whenev d dor j h astad s ulfberg u zwick case w b b c b tabl weight set av children node v rel weight v element pair b compar arbitrari element c element pair compar second time make small gain intuit made precis follow lemma lemma v node element pair b compar element c number singleton v least m p w ac v w ca v proof inequ follow easili consid entri tabl obtain second inequ exampl note wv ac w cab w ac v second inequ follow worth point tabl lemma need assum b use stronger condit b pair stronger condit crucial howev sequel especi lemma make use lemma need bound rel contribut dierent case follow lemma use tool determin bound lemma let e bipartit graph let minim degre vertic v v respect let maxim degre vertic v v respect assum posit weight function w dene vertic g wv v r proof let denot two vertic connect edg e lower bound select median inequ follow exchang role v v use lemma obtain follow basic inequ lemma v node b pair number non singleton v m one inequ relat weight w abc v weight w acb v obtain move one element pair b a inequ lose factor element b join togeth factor introduc element b separ factor introduc proof present proof inequ w abc v v proof inequ almost ident construct bipartit graph e whose vertex set v dene edg acb v singleton suppos edg min v element extrem respect extrem respect note b min v get w everi set size m number singleton least m m get therefor minim degre vertic v v maxim degre v v m inequ w abc v therefor follow lemma use basic inequ obtain lemma v node b pair number non singleton m proof present proof rst inequ proof two inequ similar use inequ lemma get rst inequ follow d dor j h astad s ulfberg u zwick readi show v node element pair compar second time v child whose weight greater half weight v combin lemma lemma get wv ac wv consequ get coecient wv right hand side minim two express whose maximum taken equal happen plug valu two express get easi check f pairform comparison comparison two singleton compar form pair pairtouch comparison comparison element pair compar second time pairform algorithm number singleton decreas pairform comparison pairform comparison decreas number singleton exactli two explain abov pairform comparison alway delay pairform comparison immedi follow comparison touch pair fa bg pairform comparison comparison touch pair g consid path trace root repeatedli descend child larger weight consequ discuss get ith pairtouch comparison along path perform number nonsingleton partial order i follow therefor remark made end previou section depth comparison tree correspond pairform algorithm least log lower bound select median r r r r r r r r r r r r r c r r c r r c r r c r r c r r c r r c r fig nine possibl way a b c may divid a case w tabl weight set av children node v rel weight v element pair b compar element pair c d complet proof theorem worst case proof obtain algorithm convert element quartet quartet partial order obtain compar element contain two disjoint pair proof abov analyz case element pair b compar arbitrari element c element c also part pair tighter analysi possibl perform anaylsi improv theorem theorem pairform algorithm nding median must perform worst case least n proof consid comparison element pair b compar element pair c d nine possibl way divid element a b c among depict figur may assum without loss gener element compar either c d let v node comparison tree b c pair one comparion c perform let av weight set vs children rel weight w v one nine case given tabl two possibl comparison c consid separ follow equal easili veri lemma b c pair v d dor j h astad s ulfberg u zwick follow inequ analog inequ lemma lemma b c pair v number nonsingleton v m consid rst comparison c examin tabl use equal lemma get wvacwvac w abcd v minim express subject equal lemma inequ lemma fact weight nine case sum wv amount solv linear program solv linear program get seem intuit clear comparison bad comparison algorithm point view adversari like answer d inde solv correspond linear program get wvad everi may disregard comparison consider easi verifi f result get lower bound complet proof theorem lower bound select median conclud remark present reformul n on lower bound bent john number comparison need select median n element use new formul obtain improv lower bound pairform median nding algorithm mention dor zwick recent extend idea describ obtain n lower bound gener median nding algorithm tini believ lower bound pairform algorithm obtain substanti improv improv seem requir howev new idea obtain improv lower bound pairform algorithm may import step toward obtain lower bound gener algorithm signicantli better lower bound bent john paterson conjectur number comparison requir select median log n n r produc poset find median requir n comparison time bound select partial order product select median median select requir tournament problem count approach lower bound select problem art comput program lower bound determin median progress select lower bound comput ith largest element new lower bound median relat problem tr ctr krzysztof c kiwiel floyd rivest select algorithm theoret comput scienc v n p novemb