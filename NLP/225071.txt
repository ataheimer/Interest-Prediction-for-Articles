t instruct select use binat cover code size optim a address problem instruct select code gener embed dsp microprocessor processor highli irregular datapath convent code gener method typic result ineffici code instruct select formul direct acycl graph dag cover convent method instruct select use heurist break dag forest tree cover independ breakup result suboptim solut origin dag altern dag cover problem formul binat cover problem solv exactli heurist use branchandbound method show optim instruct select dag case accumulatorbas architectur requir partial schedul node dag augment binat cover formul minim spill reload show irregular data transfer cost typic dsp datapath model binat cover formul b introduct increasingli common microarchitectur embed system integr microprocessor microcontrol rom asic singl ic microarchitectur current found mani divers embed system eg fax modem laser printer cellular telephon programm compon embed system applicationspecif instruct processor asip generalpurpos microprocessor sparc microcontrol intel digit signal processor tmsc paper focus dsp applic domain embed system increasingli use mani system use processor tmscx dspx adsp famili fixedpoint dsp microprocessor irregular datapath code size matter great deal embed system sinc program code resid onchip rom size directli translat silicon area cost design often devot signific amount time reduc code size code fit avail rom exceed onchip rom size could requir expens redesign entir ic result compil automat gener small dens code result signific product gain well believ gener best code embed processor requir tradit optim techniqu also new techniqu take advantag special architectur featur decreas code size paper present one effort develop techniqu address problem instruct select code gener embed dsp microprocessor emphas decreas code size although techniqu also increas execut speed instruct select formul direct acycl graph dag cover convent method instruct select use heurist break dag forest tree cover optim independ independ cover tree may result suboptim solut origin dag tree heurist formul inher preclud use complex instruct case intern node share altern dag cover problem formul binat cover problem solv exactli heurist use branchandbound method present basic binat cover formul instruct select section iii unlik heurist formul tree good heurist procedur solv cover problem like elud difficulti face tree formul section iii ignor data transfer cost node dag formul use obtain preliminari instruct select pattern dag cover two node given binari dag select binari dag transform gener dag second step instruct select take account data transfer cost perform section iv gener work aho et al give binat cover formul optim code gener oneregist machin take account spill reload cost next provid formul section v take account irregular data transfer cost gener machin model ii motiv exampl fig show simplifi model datapath texa in strument popular tmsc architectur tmsc accumulatorbas machin addit usual alu separ multipli take input regist memori place result p regist note generalpurpos regist accumul import featur architectur dsp architectur certain instruct assum operand specif locat regist memori deposit result specif regist exampl mpi instruct assum multipli multiplicand come memori regist write result p regist anoth exampl addt instruct add operand memori shift amount specifi regist accumul also unusu find complex instruct dsp typic exampl includ addwithshift eg tmsc add addt multiplyaccumul eg dsp mac util instruct essenti gener compact effici code convent heurist break dag tree prohibit use complex instruct case intern node share addit heurist may introduc unnecessari store intermedi valu consid subject dag pattern dag shown fig convent treecov first break dag node n therebi prohibit use pattern d fig a show result abu ar agu dbu mem alu acc x x fig tmsc datapath simplifi model cost a b c d fig a subject dag bd pattern dag ing treecov fig b show optim dag cover even pattern d use treecov may still result ineffici code instanc use treecov might first evalu node n store memori evalu node n n howev datapath fig possibl let intermedi result remain p regist evalu n n use instruct apac add content p regist accumul without destroy former sequel show solv problem select complex instruct problem data transfer use binatecov formul instruct select first problem easili taken account basic dag cover formul section iii second problem tackl section iv section v iii basic formul formul section assum target machin data transfer regist regist memori zero cost subject dag correspond basic block given program subject dag cover use pattern dag correspond individu machin instruct pattern dag associ cost dag cover problem cover subject dag set pattern dag minimum cost a b fig two cover subject dag fig cover matrix three step associ dag cover match pattern graph subject graph gener cover matrix creat express condit lead legal cover cover minimum cost obtain use branchand bound algorithm altern heurist method use find cover low cost step rel straightforward pattern match step boolean variabl call correspond success match pattern graph subject graph g let node subject graph n node n j g cover set match possibl match exampl subject dag mark fig cover matrix column correspond distinct match let column row correspond disjunct claus s repres cover constraint basic dag cover formul two differ set row ie disjunct claus ffl row first set repres differ way particular node n j g cover use differ match subject graph fig a cover matrix shown fig first row matrix m node n indic node n cover either match match indic fig therefor put s entri correspond column column s column similarli next row indic either need select cover node n note first set row need claus cover root node select particular match necessit select match cover node connect input see below ffl match allow node intern match feed node match result second set row match ensur nonleaf input match output match nonleaf input mean intern node in contrast primari input dag serv input node let nonleaf input match set match k output node w k view disjunct express boolean variabl correspond match select match impli satisfi write express translat claus claus correspond distinct row cover matrix match gener addit row nonleaf input cover matrix fig second set row correspond addit claus match implement nonleaf node n output anoth match done use match alon therefor gener claus m correspond third complement claus put entri correspond column put entri correspond column s column fourth row gener match select would requir select cost match costm simpli cost associ pattern dag step select set column cover matrix cumul cost column minimum everi row either entri correspond select column entri correspond unselect column exampl end select minimum total cost correspond cover fig b reader verifi select disjunct claus fig asid note tree cover method would abl discov optim solut fig b sinc subject dag would broken three tree cover independ would result cover fig a cost problem call binat cover problem variabl present true complement form problem npcomplet receiv consider attent exact solut given techniqu improv recent without compromis optim heurist method given first solv binat cover problem zero data transfer cost determin match use pattern dag one oper eg pattern dag fig b origin dag modifi reflect use complex oper thu new dag node two input second step binat cover perform new dag accur model spill data transfer cost step describ next two section iv focu oneregist machin accumulatorbas archi tectur architectur accumul spill memori reload memori account larg fraction in struction binat cover formul must take cost account order find optim instruct select major complic model memori spill spill valu depend chosen instruct schedul howev sinc perform instruct select yet know schedul therefor choos instruct determin partial schedul instruct binat cover partial schedul determin ad boolean variabl correspond adjac constraint pair node dag connect edg a previou work aho et al present optim code gener algorithm on dag two differ model oneregist machin noncommut machin avail oper are op load store denot accumul denot memori commut machin avail oper are op op load store find model inadequ follow reason first applic given dag ternari higher ariti oper depend complex pattern chosen first step binat cover second noncommut model take commut oper account exampl evalu express b c valu b must first load accumul ad c howev b c express accumul may alreadi contain c immedi evalu b addit commut ad accumul b perfectli accept commut model hand assum first operand oper memori gener machin commut noncommut oper believ best way handl commut treat oper independ use separ pattern commut form oper wherev necessari rather assum commut machin model present compact binatecov formul optim code gener noncommut oneregist machin take account commut individu oper follow section oper binari ternari higher ariti oper eas exposit concentr binari oper howev techniqu gener higherar oper b definit let h direct graph ucycl h set edg would form cycl edg consid undirect h contain ucycl said ucycl otherwis uacycl use term dacycl dcyclic dcycl case direct edg consid worm direct path dag node path appear consecut schedul wormpartit set disjoint worm edg said select respect wormpartit belong worm partit associ wormpartit direct graph g node g correspond worm d edg node g whenev edg node worm w node worm w think deriv g given wormpartit success merg node connect select edg implod edg wormpartit said legal valid schedul deriv g node worm appear consecut schedul henceforth shall denot origin express dag g induc graph wormpartit d suffici condit wormpartit legal g dacycl thi condit howev alway necessari see theorem adehi c g a schedul b adeh fg ci f g adeh fg ci b g f ac hi schedul ac f bdeg hi denot worm fig worm schedul a adag wormpartit deriv schedul b anoth wormpartit schedul c illeg wormpartit fig illustr concept worm wormpartit relat schedul graph shade node g a b two differ wormpartit dag along correspond schedul shown schedul deriv schedul g expand node g back node d note schedul node worm place consecut c illeg wormpartit shown partit give rise cycl g schedul exist place node worm consecut c fundament adjac claus select edg indic headnod tailnod place adjac schedul follow fundament adjac claus or fundament claus must a b fig a reconverg dag worm b cycl g due worm node multipl fanout one fanout edg may select node multipl fanin one fanin edg may select clearli fundament claus necessari wormpartit legal dag simpli state schedul node may one immedi predecessor one immedi successor let e boolean variabl take valu edg select otherwis fundament claus are node n everi pair fanout edg j n everi pair fanin edg j n satisfi claus gener abov cost ek s equal zero howev choos ek impli spill reload associ cost describ section ive follow theorem show fundament claus suffici uacycl dag theorem subject dag uacycl fundament claus suffici word wormpartit satisfi fundament claus legal proof uacycl select edg merg head tailnod edg result dag remain uacycl repeat process cannot possibl creat ucycl therefor merg node accord select edg wormpartit ucycl much less dcycl appear g impli wormpartit legal ucycl fundament claus becom in suffici good exampl one reconverg path fig note hand select edg part ucycl creat dcycl g thu need focu write addit claus ucycl d claus ucycl sinc ucycl may lead dcycl g need add claus prevent happen let c ucycl d arbitrarili choos direct travers c forward direct label edg forward backward accordingli theorem forward edg or backward edg u cycl select implod select edg result dcycl convers least one forward edg least one backward edg select ucycl remain dacycl implos proof edg ucycl select implod ucycl backward edg remain sinc g node node worm fig dcycl g alway find ucycl produc edg implod ucycl direct implod ucycl also dcycl least one forward edg least one backward edg select implod ucycl least two edg point opposit direct henc implod ucycl remain dacycl therefor necessari cycl select edg orient possibl that even select edg satisfi condit everi cycl includ composit cycl still dcycl g is possibl dcycl g aris anoth caus ucycl d follow theorem show imposs therebi establish suffici condit theorem g dcyclic exist ucycl forward edg or backward edg select therefor claus deriv theorem satisfi everi ucycl d g dacycl wk node dcycl g also denot correspond worm d definit g exist node edg them similarli exist edg node worm path in one direct other denot p path v u ucycl d furthermor regardless orient path p s ucycl everi edg direct opposit e s select recal edg p select edg turn compactli write claus requir least one forward edg one backward edg select follow fk boolean variabl forward edg ucycl d claus ensur edg select similar claus written backward edg henc two claus ucycl suffic new variabl introduc formul mere addit claus one import except need made regard selfloop g which address consid portion dag shown fig choos path abcd which forward edg ucycl dcycl result g in accord theorem howev dcycl self loop easili verifi worm thu chosen actual a b abcd fig a portion dag select worm b induc selfloop g legal schedul abcd node worm name ad appear consecut admiss exampl show selfloop make wormpartit illeg lemma theorem follow state formal lemma let c selfloop g correspond ucycl must consist two reconverg path furthermor u v endpoint reconverg path one path must edg u v proof loopedg c correspond singl edg node u worm node v worm edg u v anoth path p u v the worm respect d u must predecessor v otherwis dag would dacycl thu two reconverg path edg u v path p theorem dcycl wormpartit g selfloop g legal convers dcycl g contain one node g illeg proof selfloop aris sole kind reconverg path describ lemma long path part worm thu schedul node consecut preced relat requir edg u v violat hand one node dcycl g schedul node one worm consecut unsuccess node current worm depend node anoth worm turn depend current worm light theorem claus requir selfloop instead claus consist singl variabl requir edg u v select prescribedclearli choos edg would lead nontrivi dcycl g if hand reconverg path singl edg eg oper take operand node neither cycl reconvergenceclaus necessaryth fundament claus describ section ivc ensur one edg select e claus reload spill depend oper take operand edg select spill reload may requir comput describ precis write claus activ spill reload fig a show fragment dag consid edg cb whose correspond boolean variabl e four case consid edg match use e left operand accumul b immedi c acc mem acc a b c fig spill reload accord adjac node spill c reload edg cb necessari match use e case spill c requir node b immedi follow c destroy content accumul valu need b later also reload necessari immedi b schedul take leftoperand accumul match use e immedi follow c spill still requir take left operand memori reload necessari match use e previou case spill requir let spillc denot match transfer valu c accumul memori immedi c comput reloadcb denot match load valu c memori accumul immedi b schedul express condit follow claus similar claus prescrib edg e well everi node possibl match it given dag complex pattern select fundament claus ucycl claus claus reload spill ad claus node match claus node match simpl oneregist machin sinc choic node input come from shown fig v a target architectur assum target architectur model conveni model model resourc class assum either one element infinit number element resourc class one element perform separ pass storag alloc schedul shown section ii typic fix point dsp irregular datapath certain regist special use consequ complet oper result may avail use anoth oper take operand regist exampl mpi oper requir one operand come treg regist memori thu data transfer necessari move operand desir regist tree cover methodolog model cost transfer model associ cost unit product product nontermin left rightsid section show incorpor data transfer binat cover formul addacc preg fig data transfer b exampl consid fragment express dag fig oper cover match requir left operand come memori right operand come treg regist howev match produc result preg regist match transfer content preg regist memori requir henc write requir select match event select similar claus also prescrib match node c construct claus base exampl section vb describ gener procedur construct claus necessari data transfer add claus claus summar end section iv everi pair node n n given dag connect edg possibl match n possibl match j n write match q ij indic transfer result match locat requir j result write operand memori j requir read regist preg q ij correspond match move data memori preg similarli move across differ regist class write regist acc j read regist acc ij disjunct adjac constraint output node input node j spillreload match cf section ive assum adjac constraint satisfi schedul guarante correct data transfer without spillreload satisfi adjac constraint necessari correct data transfer multipleregist machin inbetween instruct exist write regist acc howev relax assumpt would requir lifetim analysi regist larg number claus instruct select partial schedul use binat cover optim complet schedul gener exploit lifetim analysi case due datapath constraint possibl move content one locat anoth locat via singl move exampl suppos direct path preg regist memori way accomplish move preg memori accumul case two move requir q ij repres conjunct two correspond match fig match alter fundament claus a b e fig a ucycl dag b modifi ucycl vi discuss present twopass strategi first step select complex oper second step select match minim data transfer cost transform dag step perform simultan solv singl binat cover problem answer ye number claus binat cover becom larg reason select complex oper affect fundament adjac claus claus ucycl fundament claus correspond mark edg dag fig e howev match select fundament claus becom incorpor write follow claus done match correspond complex pattern cover edg dag manner cover e exampl abov dag uacycl fundament claus suffici modif enough howev ucycl claus modifi gener case modif result larg number claus sinc choos complex pattern chang ucycl dag understand consid fig match select fig a effect dag modifi one shown fig b new ucycl begin node s mean write claus correspond new ucycl match select not note ucycl begin level node dag ie node whose input leav new ucycl introduc due complex oper even new ucycl gener still modifi origin ucycl claus sinc edg e cover fundament claus case vii ongo work present formul instruct select problem binat cover formul captur data transfer memori spill cost commonli associ dsp processor preliminari experi indic exact binat cover appli smalltomoder size basic block tmsc processor optim solut better produc tree cover heurist mani case larg basic block entir procedur howev comput effici heurist strategi requir two avenu explor first larg basic block broken simpler block cover use exact binat cover algorithm second heurist restrict number match therefor claus cover matrix investig viii acknowledg thank richard rudel olivi coudert help binat cover formul research support part advanc research project agenc contract dabt c part nsf young investig award match fund mitsubishi corpor r optim code gener express tree code gener express common subexpress optim code gener embed memori nonhomogen regist architectur boolean relat incomplet specif logic network new idea solv cover problem art program embed system minim tant network method minim number intern state incomplet specifi machin code optim techniqu embed dsp microprocessor logic synthesi vlsi design memori bank regist alloc softwar synthesi asip tr compil principl techniqu tool code optim techniqu embed dsp microprocessor new idea solv cover problem optim code gener embed memori nonhomogen regist architectur memori bank regist alloc softwar synthesi asip optim code gener express tree code gener express common subexpress art program embed system ctr marku lorenz peter marwedel phase coupl code gener dsp use genet algorithm proceed confer design autom test europ p februari rainer leuper code select media processor simd instruct proceed confer design autom test europ p march pari franc rainer leuper peter marwedel function inlin code size constraint embed processor proceed ieeeacm intern confer computeraid design p novemb san jose california unit state rainer lauper hdlbase model embed processor behavior retarget compil proceed th intern symposium system synthesi p decemb hsinchu taiwan china mahesh mehendal g venkatesh s d sherlekar optim code gener multiplicationfre linear transform proceed rd annual confer design autom p june la vega nevada unit state rainer leuper regist alloc common subexpress dsp data path proceed confer asia south pacif design autom p januari yokohama japan marnix arnold henk corpora automat detect recur oper pattern proceed seventh intern workshop hardwaresoftwar codesign p march rome itali stan liao sriniva devada solv cover problem use lprbase lower bound proceed th annual confer design autom p june anaheim california unit state raul camposano behavior synthesi proceed rd annual confer design autom p june la vega nevada unit state steven bashford rainer leuper constraint driven code select fixedpoint dsp proceed th acmiee confer design autom p june new orlean louisiana unit state marnix arnold henk corpora design domainspecif processor proceed ninth intern symposium hardwaresoftwar codesign p april copenhagen denmark graphbas code select techniqu embed processor acm transact design autom electron system toda v n p oct j van praet d lanneer w geurt g goossen processor model code select retarget compil acm transact design autom electron system toda v n p juli ashok sudarsanam sharad malik masahiro fujita retarget compil methodolog embed digit signal processor use machinedepend code optimizaton librari read hardwaresoftwar codesign kluwer academ publish norwel ma jason cong yipe fan guol han zhiru zhang applicationspecif instruct gener configur processor architectur proceed acmsigda th intern symposium field programm gate array februari monterey california usa stefan schfer bernhard scholz optim chain rule placement instruct select base ssa graph proceedingsof th intern workshop softwar compil embed system april nice franc lar rder clausen ulrik pagh schultz charl consel gill muller java bytecod compress lowend embed system acm transact program languag system topla v n p may ashok sudarsanam sharad malik simultan refer alloc code gener dual data memori bank asip acm transact design autom electron system toda v n p april amir hormati nathan clark scott mahlk exploit narrow acceler datacentr subgraph map proceed intern symposium code gener optim p march david j kolson alexandru nicolau nikil dutt ken kennedi optim regist assign loop embed code gener acm transact design autom electron system toda v n p april nathan clark jason blome michael chu scott mahlk stuart bile krisztian flautner architectur framework transpar instruct set custom embed processor acm sigarch comput architectur new v n p may guido araujo sharad malik code gener fixedpoint dsp acm transact design autom electron system toda v n p april nathan clark amir hormati scott mahlk sami yehia scalabl subgraph map acycl comput acceler proceed intern confer compil architectur synthesi embed system octob seoul korea milenko drini darko kirovski hoi vo code optim code compress proceed intern symposium code gener optim feedbackdirect runtim optim march san francisco california chunho lee johnson kin miodrag potkonjak william h mangionesmith media architectur gener purpos vs multipl applicationspecif programm processor proceed th annual confer design autom p june san francisco california unit state nathan clark hongtao zhong scott mahlk processor acceler autom instruct set custom proceed th annual ieeeacm intern symposium microarchitectur p decemb nathan t clark hongtao zhong scott a mahlk autom custom instruct gener domainspecif processor acceler ieee transact comput v n p octob chunho lee johnson kin miodrag potkonjak william h mangionesmith explor hypermedia processor design space journal vlsi signal process system v n p feb milenko drini darko kirovski hoi vo ppmex program compress acm transact program languag system topla v n pe januari