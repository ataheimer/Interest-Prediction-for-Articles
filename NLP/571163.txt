t modular termin contextsensit rewrit a contextsensit rewrit csr recent emerg interest flexibl paradigm provid bridg abstract world gener rewrit more appli set declar specif program languag obj cafeobj elan maud natur approach studi properti program written languag model contextsensit rewrit system especi interest prove termin system therebi provid method establish termin eg obj program prove termin contextsensit rewrit exist transform method reduc problem termin transform ordinari term rewrit system tr transform howev seriou drawback particular seem support modular analysi termin problem paper show substanti part wellknown theori modular term rewrit extend csr via thorough analysi addit complic aris contextsensit precis mainli concentr termin properti obtain modular result correspond nice fact languag modular design program specif explicitli promot sinc also complement modular analysi techniqu b introduct programm usual organ program compon modul compon program easier de velop analyz debug test eventu programm want interest comput properti like termin hold whole program could prove individu compon program roughli speak ing modular properti mean contextsensit rewrit csr restrict rewrit forbid reduct select argument function way termin behavior rewrit comput improv prune all infinit rewrit sequenc sever method develop formal prove termin csr termin innermost contextsensit rewrit recent relat termin declar languag obj cafeobj maud languag exhibit strong orient toward modular design program specif set achiev modular proof termin desir instanc borrow appendix c figur show specif program use lazi list modul truthvalu nat introduc sort and constructor boolean natur number modul idnat provid special builtin syntact ident oper obj see modul ident appendix definit binari predic meaning provid rule attempt top bottom quit reason assumpt obj implement point view nevertheless discuss termin program depend fact way obj truthvalu obj nat nat obj idnat protect truthvalu var obj lazylist list list list list assoc idr nil strat obj inf protect lazylistnat list strat obj take protect lazylistnat list list strat figur modular specif obj d modul inf specifi function inf abl build infinit object list natur number follow number n modul take specifi function take abl select first n compon lazi list given second argument take fi nalli modul length introduc function comput length finit list here use strategi annot strat list constructor con in modul lazylist intend allow real termin behavior program due disallow recurs call infsn definit inf avoid useless reduct first compon list comput length instanc possibl obtain valu ss lengthtakesinf without risk nontermin although simpl program figur provid in claim justifi use result terest applic modular result instanc wherea possibl prove termin program use automat techniqu prove termin knuthbendix polynomi recurs path order see pretti simpl separ prove termin modul idnat inf take length then modular result permit formal proof termin ultim reli use pure automat techniqu recurs path order see exampl below moreov automat tool prove termin cime system also use prove termin correspond modul way user allow ignor detail termin proof techniqu onli reli use softwar tool go detail let us mention exist alreadi abund literatur rewrit contextsensit relat strategi cf eg preliminari basic subsequ assum gener familiar basic theori term rewrit cf eg given set a pa denot set subset a given binari relat r set a denot reflex closur r transit closur r reflex transit closur r element rnormal form exist b r b nfr set r normal form say b rnormal form a b rnormal form r b say r termin i infinit sequenc r r say r local confluent if everi a b c a whenev r b r c exist b r say r confluent if everi a b c a whenev r b r c exist d r confluent termin say r complet throughout paper x denot countabl set variabl f denot signatur ie set function symbol f g fix ariti given map ar f n set term built x said linear multipl occurr singl variabl term view label tree usual way posit p q repres chain posit natur number use address subterm t given posit p q denot concaten pq posit order standard prefix order given set posit p maxim p set maxim posit p wrt p posit q set posit denot empti chain set posit term post posit nonvari symbol denot posf t posx t posit variabl subterm posit p denot t p ts p term subterm posit p replac s symbol label root denot roott rewrit rule order pair l r written l r l r varl lefthand side lh rule l r righthand side rh tr set rewrit rule avail httpcimelrifr lr denot set lhss r instanc l lh l rule redex set redex posit posrt tr r leftlinear l lr l linear term given trss let r r tr rewrit at posit p written r or s t rule l r r p post substitut tr termin termin say innermost rewrit s written s p innermost termin contextsensit rewrit given signatur f map f pn replac map or fmap f f f arf let mf or mr determin consid symbol set fmap sake simplic iti appli replac map mf symbol signatur f assum whenev f f replac map specifi argument posit reduc symbol f accordingli set replac posit po t set posit replac redex contextsensit rewrit system csr pair r r tr replac map contextsensit rewrit csr onli contract replac redex rewrit s r p po t exampl consid tr r csr r correspond obj program figur with con replac here see detail correspond then have sinc po takesinf redex inf cannot rewritten normal form call r normal form csr r termin resp local confluent conflu ent complet termin resp local confluent confluent complet slightli abus terminolog shall also sometim say tr r termin csr r termin innermost csr contract maxim posit replac redex r p maxim po r t say r innermost termin termin modularproofsoftermin csr transform subsequ assum basic familiar usual notion notat terminolog modular rewrit cf eg say properti csrss modular under disjoint constructor share compos union if whenev two resp disjoint constructor share compos csrss r r properti union rr properti two csrss r disjoint signatur r di joint csrss r r constructor share share constructor symbol see definit detail final csrss r r compos share defin symbol provid share defin rule cf note disjoint trss share constructor share constructor trss compos termin csrss r usual prove demonstr termin transform tr r obtain r use transform simplest and trivial correct transform prove termin csrss ident r termin r termin everi replac map consid interact modular transform prove termin csr r imagin two main scenario first modular next transform mt first given r look or have decomposit modular eg disjoint constructorshar compos etc then prove termin for transform first transform next modular tm first transform r r look suitabl decomposit termin ensur termin r henc r second approach tm actual standard problem be abl achiev modular proof termin first approach mt succe st in way termin impli termin s entail termin s transform compat m ie possibl same modular criterion in way termin would impli termin relev work modular mention elsewher includ thi list highli incomplet typic invers implic trivial see httpwwwdsicupvesuserselpslucasmuterm tool muterm implement transform inde first requir s satisfi transform report literatur have fact modular definit base individu rule symbol signatur disregard interact ie actual s transform hand second requir fulfil mani transform in gener accord thi review main nontrivi correct transform prove termin csr regard suitabl modular proof termin contract transform let f signatur mf replac map contract transform non replac argument symbol f remov new contract signatur f l obtain possibl reduc ariti symbol function drop nonreplac immedi subterm term construct contract term join also transform replac argument correspond oper f l csr r contract r exampl consid csr r exampl is take accord definit dicult see that given trss s l also clear ms impli ms compo ie usual criteria modular preserv as are transform zantema transform zantema transform mark nonreplac argument function symbol disregard posit within term given z consist two part first part result r replac everi function occur left righthand side f a fresh function symbol ariti f which then includ f occur nonreplac argument function symbol directli it new function symbol use block reduct posi tion addit variabl x occur nonreplac posit lh l rewrit rule l r occurr x r replac activatex here activ new unari function symbol use activ block function symbol again second part r z consist rewrit rule need block unblock function symbol everi f f togeth rule activatex x problem activ new defin symbol defin rule new block symbol appear signatur mean that start compos modul z z compos block symbol same exampl consid trss correspond modul inf idnat figur view modul share constructor let exampl compos problem z block present z note that sinc rule activatex x present everi transform system compos best achiev appli transform instanc disjoint trss lose disjoint appli transform ferreira ribeiro propos variant zantema transform prove strictli power zantema one see transform problem regard modular giesl middeldorp transform giesl middeldorp introduc transform explicitli mark replac posit term by use new symbol activ given tr tr r activ mark r consist follow rule for l r r f f markfx xk unfortun unless r s transform never yield pair compos trss note two dier ent compos system r cannot share symbol defin symbol ie rule must coincid up renam variabl henc r impli dier at least constructor symbol howev if eg f fr fs new rule markfx xk r gm gm sinc mark defin gm gm compos thu proven follow theorem let r s dierent compos csrss then r gm gm compos note that sinc disjoint trss share constructor share constructor trss compos follow giesl middeldorp transform provid possibl mtanalysi termin csrss at least regard modular criteria consid here giesl middeldorp suggest slightli dierent present r mgm previou transform present symbol activ use anymor howev sinc regard modular conflict due use symbol mark new transform exactli problem giesl middeldorp also introduc transform complet ie everi termin csr r transform termin tr r c given tr replac map proper top r consist follow rule see detail explan l r r f f activefx x xk properc okc properfx xk unfortun dicult see that regard mtmodular analysi termin and due rule defin proper follow theorem let r s dierent compos csrss then r c c compos anontransform approach modular previou discuss show contract transform seem suitabl choic perform modular analysi termin csrss howev consid obj program figur repres csr r exampl note direct proof termin r possibl contract transform as shown exampl r l termi nate cours set modular use either hand note z exampl kbotermin resp rpotermin therefor r z which contain z z either kbo rpotermin moreov attempt prove termin r z use cime fail everi consid combin includ techniqu potenti deal nonsimpli termin trss like use depend pair togeth polynomi order proof criteria similarli termin r gm r c cannot prove either use kbo rpo see formal justif claim fact could even prove simpli termin see hand result section show mt tm approach abl provid simpler proof termin r henc termin r remain dicult automat prove follow section show situat dramat chang use direct modular analysi termin csr modular termin csr main section investig whether so known modular result ordinari term cf eg earli pioneer work toyama later survey stateoftheart modular rewrit like extend contextsensit rewrit sinc tr r view csr r modular result trss cover specif case csrss name replac restrict all yet interest case cours aris proper replac restrict paper concentr termin properti first studi obtain criteria modular termin csrss later well also consid weak termin properti surprisingli may help guarante full termin and con fluenc condit gener set consid also extent certain nondisjoint combin ordinari term rewrit deep understand disjoint union case appear indispens properli treat nondisjoint union reason mainli focu case disjoint union practic purpos obviou nondisjoint combin much interest yet lesson learn the nowaday fairli well understood modular analysi term rewrit suggest extrem care seemingli plausibl conjectur obviou fact modular termin disjoint union section investig modular termin disjoint union csrss simplic kind global assumpt assum consid csrss finit result but all also hold system arbitrarili mani rule first posit result modular termina tion neg one given rusi nowitch show absenc collaps rule absenc duplic rule suce termin disjoint union two termin trss later middeldorp refin gener criterion show suce one system collaps duplic rule care inspect proof actual show result also csrss even interestingli addit sourc gener aliz consid eg follow variant toyama basic counterexampl exampl system termin csrss well disjoint union the latter consequ theorem below toyama origin version union nontermin restrict collaps duplic care inspect two csrss interact show duplic rrule problem regard nontermin first two occurr x rh r rule becom block appli rule particular extract subterm two posit crucial toyama counterexampl work prohibit observ natur lead conjectur blockedinact variabl rhss count duplic definit rule l r csr r non duplic everi x varl multiset replac occurr x r contain multiset replac occurr x l r nondupl rule are cours order sensibl combin two csrss one requir basic compat condit regard respect replac restrict definit two csrss r said compat replac restrict share function symbol ie disjoint csrss trivial compat theorem let r two disjoint termin csrss let r union follow hold i r termin r noncollaps ii r termin r nonduplica ting iii r termin one system non collaps nondupl proof sketch proof idea point differ tr case three properti follow immedi follow observ infinit r deriv minim rank ie minim counterexampl have a infinit mani outer reduct step d b infinit mani inner reduct step destruct level c infinit mani duplic outer reduct step d a b prove trss cf eg minim counterexampl approach c prove small adapt instead wellfound measur there shown decreas name the multiset rank special subterm level take activ s ie count special subterm activ posit modif proof goe befor result were abl explain termin exampl without use sophist proof method combin system fact case trss syntact condit noncollapsing nondupl turn special case more precis consequ abstract structur theorem character minim counterexampl cf csrss power result also hold show thi first need anoth definit where r mean r provid r di joint definit tr r said termin fptermin short rgx y r said fptermin r gx y x gx y y theorem extend theorem let r two disjoint termin csrss union r nontermin one system fptermin system collaps proof quit nontrivi proof practic trss care inspect reveal abstract construct result transform minim counterexampl disjoint union counterexampl one system extend free project rule fresh binari oper work alreadi shown trss abstract power structur result lot less straightforward direct indirect consequ corollari mention two corollari termin modular nondeterminist collaps disjoint csrss corollari fptermin modular disjoint csrss next look the modular of weak termin properti construct involv trss must finit branch practic alway satisfi case infinit branch system handl similar involv abstract function base underli idea extract relev inform deeper alien subterm import properti later call ce termin howev realli tell natur slightli dierent properti call termin preserv nondeterminist collaps precis rather lengthi prefer use fptermin sinc natur express rewrit system addit project rule free ie fresh function csr nondeterminist collaps term reduc two distinct variabl in finit number contextsensit rewrit step modular weak termin proper tie weak termin properti clearli interest own sinc full termin may unrealist need realli correspond comput process model certain process program inher non termin still one may wish comput normal form certain input and guarante exist hand interestingli trss turn weak termin properti help order obtain modular way full termin properti certain assumpt definit let r csr r and said weakli termin wn weakli ter minat r and weakli innermost termin win innermost contextsensit rewrit relat weakli termin strongli innermost termin sin innermost contextsensit rewrit relat strongli termin ordinari trss wellknown and dicult prove weak termin weak innermost termin strong innermost termin modular properti cf eg wrt disjoint union surprisingli hold gener csrss shown follow counterexampl exampl consid disjoint csrss innermost termin fact even termin union r neither termin innermost termin ever r weakli innermost termin henc also weakli termin fa b ga b fga b ga b latter term r normal form even win wn modular gener csrss next illustr modifi version exampl exampl consid disjoint csrss fb a x fx x x and wn sin even sn union r neither win wn onli first innermost r step issu innermost reduc first argument f second one vice versa subsequ innermost step must use one first four necessarili yield cycl therefor fa b ga b innermost r normal form also r normal form all care inspect goe wrong here well inspect correspond proof contextfre case show problem come innermost redex which point block inact forbidden posit becom unblock activ later on condit need prevent phenomenon follow definit conserv block csr r said conserv block cb short follow hold everi rule l r r everi variabl x occur l inact posit occurr x r inact too condit now properti win wn sin turn inde modular csrss theorem modul crit win wn sin a win modular disjoint csrss satisfi cb b wn modular disjoint csrss satisfi cb c sin modular disjoint csrss satisfi cb proof a b c prove structur induct case trss cf eg condit cb ensur innermost term rewrit deriv construct proof induct step also still innermost ie proof goe csrss well relat innermost termin ter minat trss power criterion known sin impli henc equival to termin sn name equival hold local confluent overlay trss via modular sin trss gave rise immedi new modular result termin and com plete case contextfre rewrit cf for tunat equival criterion sin sn also extend csrss directli nontrivi proof requir care analysi subtl addit assumpt which vacuous satisfi trss definit csr r said context sensit overlay system overlay csr overlay critic pair l r r activ nonroot posit l r lefthomo geneou replac variabl lhrv short if everi replac variabl x l occurr x l r replac formal everi rule l r r everi variabl x l po similar claim recent made without proof remain unclear whether claim without condit lhrv true rewrit rule variabl common nonvari posit l l l unifi gener unifi observ definit overlay tr overlay csr vice versa when consid csr r tr r formal everi l r r everi x var l po theorem local complet criterion let r local confluent overlay csr satisfi lhrv let innermost termin termin proof sinc proof use essenti approach construct one trss focu dierenc problem aris due context sensit basic proof minim counterexam ple suppos infinit r deriv issu s dicult see one construct infinit minim deriv follow form with nontermin proper subterm termin henc complet sinc reduct step strictli pp p finit often po sibl eventu must root reduct step idea transform infinit deriv infinit innermost deriv way reduct step still proper and in nermost reduct step use rule wherea reduct technic achiev trss transform uniqu normal complet subterm given term touch top part given nontermin term formal tn maxim termin henc complet subterm t crucial and subtl issu make sure s guarante rule l r appli i still applic s posit p p ie pattern l destroy case trss guarante overlay properti combin complet more gener case overlay csrss may contextfre rewrit step pattern l strictli root would invalid argument account problem slightli modifi definit follow tn maxim termin henc complet subterm activ posit ie maxim complet subterm inact posit left untouch almost done howev still problem name variabl part lh l rule l r tr case get l csrss may problem for nonleft linear rule synchron normal within variabl becom imposs eg one occurr x activ anoth one inact consequ result transform term l would instanc l more l r applic avoid thi need addit requir lhrv also note normal perform account enabl synchron nonlinear vari abl adapt modif proof final goe tr case clearli stronger local version directli impli global complet criterion corollari theorem global complet criterion let r local confluent overlay csr satisfi lhrv r innermost termin also termin henc complet modular complet combin previou result get anoth new criterion modular termin csrss fact also modular complet theorem modular crit complet let r two disjoint termin csrss satisfi lhrv cb suppos r local confluent overlay disjoint union r also overlay termin confluent henc complet proof termin r clearli impli innermost termin r theorem thu yield innermost termin r r overlay csr too definit notion similarli lhrv cb also hold r sinc syntact properti pure rulebas now assumpt miss need appli theorem local confluenc inde guarante critic pair lemma theorem pp csrss which turn crucial reli condit lhrv henc appli theorem yield termin r togeth local confluenc show via newman lemma confluenc complet extens constructorshar case case trss justifi hope mani modular result hold disjoint union also extend gener combin natur next step constructor share union concentr case at most constructor share csrss slightli gener set union compos csrss beyond scope present paper touch expect approach analysi also applic set which alreadi trss technic rather complic definit csr r set defin function symbol r r set constructor current counterexampl statement theorem without lhrv assumpt current proof seem work without it remain investig whether impos linear restrict would help observ also lhrv properti play crucial role known local global confluenc criteria csrss littl known prove local confluenc csrss without lhrv cf c denot respect signatur set constructor defin function symbol r r said at most constructor share set share constructor rule l r r said share constructor lift rootr c r said share constructor lift constructor lift rule i rule l r r said share lift rootr variabl share constructor r said share symbol lift collaps constructor lift rule r layer preserv share symbol lift trss main problem disjoint union aris addit interfer two system mix term interfer stem a nonleft linear b rewrit step destroy lay ere structur mix term therebi potenti enabl new rewrit step possibl befor now a usual sever problem dealt synchron step howev b seriou issu main sourc almost problem disjoint union destruct step possibl via collaps rule cf eg theorem constructor share union interfer fusion previous separ layer also possibl via share constructor lift rule basic exampl term rewrit follow variant toyama counterexampl exampl two constructor share trss termin union admit cycl observ applic two constructor lift rule enabl applic rule previous possibl take addit sourc interfer account name besid collaps rule also constructor lift rule result disjoint union also extend constructor share case first let us look illumin exampl exampl consid two constructor share csrss share constructor c system obvious termin union admit cycl observ csr r share symbol lift nondupl tr duplic as csr wherea r constructor lift nondupl as csr next gener result need addit definit definit let f r f csr f f say f fulli replac n ariti f readi gener theorem constructor share case cf theorem theorem theorem extend let r two constructor share compat ibl termin csrss share constructor fulli replac union r nontermin one system fptermin system share symbol lift ie collaps constructor lift proof sketch proof idea proof similar one tr case ie theorem given minim counterexampl union ie infinit ground deriv minim rank let say top layer f abstract transform defin abstract concret syntact inner part term retain relev syntact finform may eventu pop fuse topmost f layer dierenc recurs definit abstract function use r instead abstract finform collect brought uniqu syntact form via fresh binari function symbol g fresh constant a prepar dicult show a contain infinit mani outer reduct step b outer step translat correspond outer r step d use rule posit c contain infinit mani inner reduct step destruct level henc must r step d inner step destruct level translat nonempti sequenc rewrit step d use onli project rule g ie inner step destruct level henc r r step translat possibl empti sequenc rewrit step d use r gx y x gx y y observ without assumpt share constructor fulli replac properti b d e need hold gener now c impli r share lift a b d e obtain infinit r gx y x gx y deriv d mean r fp termin note that case trss result hold finit csrss also finit branch one but contrast disjoint union case hold infinit branch system cf correspond counterexampl infinit branch constructor share trss roughli speak failur due fact that non replac constructor contextsensit make abstract transform interfer reduct step nonmonoton way without assumpt statement theorem hold gener wit exampl abov clearli csrss r r exampl fptermin union even termin note onli share constructor c fulli replac next let us consid extens syntact modular criteria theorem constructor share union theorem let r two constructor share compat termin csrss let r union follow hold i r termin r layerpr serv ii r termin r nonduplica ting iii r termin one system layer preserv nondupl proof proof essenti analog one theorem one disjoint csrss exampl readi give modular proof termin obj program figur consid csr r exampl constructor share compat union of note rpotermin use preced true fals henc s termin hand take rpotermin too use preced take nil inf length s henc t termin also polynomi termin easili prove use cime system sinc s layerpreserv nondupl theorem conclud termin r accord impli termin obj program exampl consid two constructor share trss c ie termin use wellfound polynomi order togeth giesl middeldorp show termin r cannot prove exist transform but complet one see section howev proof termin r report literatur yet now abl give simpl modular proof note r ter minat henc r r termin sinc r layerpreserv nondupl termin r theorem trss theorem whole number direct indirect corollari state concret modular criteria termin case constructor share union detail here rather focu result along line section cours neg counterexampl section exampl immedi extend constructor share case too yet posit result regard modular weak termin properti win wn sin extend disjoint csrss constructor share one theorem theorem extend a win preserv union constructor share csrss satisfi cb b wn preserv union constructor share csrss satisfi cb c sin preserv union constructor share csrss satisfi cb proof proof a b c essenti theorem abov name structur induct case analysi dierenc case share constructor root may topwhit topblack princip subterm in common modular terminolog cf eg constructor symbol root disturb reason proof condit cb ensur innermost term rewrit deriv construct proof induct step also still innermost ie proof go csrss well similarli obtain theorem theorem extend let r two constructor share compati ble termin csrss satisfi lhrv cb suppos r r local confluent overlay ing constructor share union r also overlay termin confluent henc complet proof analog proof theorem use theorem instead theorem relat work far know result first deal analysi modular properti csrss properti csrss fairli well investig especi regard termin proof techniqu also concern properti verif criteria cf eg recent interest develop includ particular approach giesl middeldorp prove innermost termin csrss via transform ordinari trss along line well rpostyl approach directli prove termin csrss without intermedi transform without recur ordinari trss comparison result approach latter one mention remain done perspect open problem paper start systemat investig modular aspect contextsensit rewrit almost exclus focuss termin properti cours begin research done shown that take addit complic aris contextsensit care account inde possibl extend coupl fundament modular result trss gener case csrss sens obtain result quit encourag also seem indic consider amount structur knowledg modular term rewrit taken contextsensit rewrit howev also turn coupl new phenomena ugli properti crucial interfer tradit approach trss particular turn syntact restrict cb lhrv replac play crucial role condit certainli consider restrict practic henc also thoroughli investig apart disjoint union case also shown obtain result disjoint union extend nice case share construc tor hand cours modular result alway help simpl exampl follow exampl two csrss constructor share termi nate union r termin too howev none modular result applic reader invit verifi intuit reason nonapplic gener modular result lie fact termin proof r must somehow exploit intern termin argument bit precis decreas first argument second rule lexicograph domin happen second argument make explicit consid also follow semant meaningless variant befor clearli r also termin howev union constructor share csrss r r becom nontermin nthsx failur modular criteria becom comprehens name syntact modular structur combin r former case got termin latter one nontermin thu unrealist expect applic gener modular result particular exampl yet consid still anoth system consid union termin compos csrss might wish conclud termin combin modular criterion seem hopeless word expect mani result hold constructor share csrss also extend union compos csrss which addit may share defin function symbol provid share defin rule cf extent also hierarch combin csrss cf eg howev sinc modular known errorpron domain concret claim care verifi subject futur work conclus present first step thorough modular analysi contextsensit rewrit paper mainli focuss termin properti result obtain encourag remain lot work done r rewrit that recurs path order contextsensit principl maud hierarch termin rewrit oper evalu strategi termin rewrit local strategi principl obj overview cafe specif environ algebra approach creat transform techniqu contextsensit rewrit system transform contextsensit rewrit system innermost termin contextsensit rewrit transform techniqu contextsensit rewrit system introduc obj gener su abstract relat restrict termin confluenc properti rewrit system termin confluenc properti structur rewrit system modular confluenc simplifi proof modular proof complet hierarch term rewrit system modular simpl termin term rewrit system share constructor termin combin compos term rewrit system modular noncopi term rewrit termin contextsensit rewrit rewrit termin ondemand rewrit termin obj program termin rewrit strategi annot transfinit rewrit semant term rewrit system termin canon contextsensit rewrit modular properti term rewrit system modular properti condit term rewrit system complet combin condit constructor system complet combin constructor system modular properti compos term rewrit system modular termin term rewrit system modular properti compos term rewrit system termin direct sum term rewrit system counterexampl termin direct sum term rewrit system churchross properti direct sum term rewrit system termin direct sum leftlinear complet term rewrit system termin contextsensit rewrit tr churchross properti direct sum term rewrit system counterexampl termin direct sum term rewrit system termin direct sum termrewrit system suffici condit termin direct sum term rewrit system modular simpl termin term rewrit system share constructor complet combin constructor system modular confluenc modular properti condit term rewrit system complet combin condit constructor system modular termin term rewrit system modular proof complet hierarch term rewrit system modular noncopi term rewrit modular termin italicritalicconsist leftlinear term rewrit system modular properti compos term rewrit system termin direct sum leftlinear complet term rewrit system rewrit principl obj contextsensit rewrit strategi termin rewrit strategi annot termin contextsensit rewrit rewrit contextsensit acrewrit transform contextsensit rewrit system transfinit rewrit semant term rewrit system termin canon contextsensit rewrit termin contextsensit rewrit recurs path order contextsensit hierach termin termin ondemand rewrit termin obj program overview cafe specif environmentan algebra approach creat verifi maintain formal specif network ctr beatriz alarcn ral gutirrez jo iborra salvador luca prove termin contextsensit rewrit muterm electron note theoret comput scienc entc p juli bernhard gramlich salvador luca simpl termin contextsensit rewrit proceed acm sigplan workshop rulebas program p octob pittsburgh pennsylvania jrgen giesl aart middeldorp transform techniqu contextsensit rewrit system journal function program v n p juli salvador luca contextsensit rewrit strategi inform comput v n p octob salvador luca prove termin contextsensit rewrit transform inform comput v n p decemb