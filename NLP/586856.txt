t adapt effici algorithm lattic agreement renam a sharedmemori system n independ asynchron process distinct name rang n commun read write share regist algorithm waitfre process complet execut regardless behavior process paper consid waitfre algorithm whose complex adjust level content system algorithm adapt to total content step complex depend actual number activ process k number unknown advanc may chang differ execut algorithmadapt algorithm present two import decis problem lattic agreement krenam step complex algorithm ok log k interest compon krenam algorithm on algorithm krenam improv best previous known krenam algorithm onnk step complexityth effici renam algorithm modifi on implement atom snapshot use dynam singlewrit multiread regist best known implement atom snapshot step complex on log n use static singlewrit multiread regist on use multiwrit multiread regist b introduct asynchron sharedmemori system contain n process run arbitrari speed commun read write share regist process distinct name rang waitfre algorithm process termin finit number step even process slow even stop take step complet step complex mani waitalgorithm depend n exampl collect uptod inform process typic requir read array index process name real distribut system need accommod larg number process ie n larg often small number process take part comput system step complex depend n n undesir prefer step complex adjust number process particip algorithm algorithm adapt to total content step complex depend total number process particip algorithm denot k k unknown advanc may chang differ execut algorithm step complex adapt algorithm adjust number activ process constant singl process particip algorithm gradual grow number activ process increas weaker guarante provid rangeindepend algorithm whose step complex depend n maxim number process clearli n fix execut advantag rangeindepend algorithm quit restrict requir priori knowledg n often difficult determin moreov extend abstract paper appear proceed th acm symposium principl distribut comput june pp depart comput scienc technion haifa israel hagitcstechnionacil leonfcstechnionacil support fund promot research technion moir anderson use term fast conflict paper attiya fouren algorithm union ok log lattic agreement algorithm renam algorithm ok log algorithm renam algorithm renam on log n algorithm renam on fig algorithm present paper doubl box indic main result step complex optim actual number particip process much lower upper bound yet show use tool construct adapt algorithm paper present adapt waitfre algorithm lattic agreement re name use read write oper along way improv step complex nonadapt algorithm renam figur depict algorithm present paper oneshot renam problem process requir choos distinct name rang size k bound function paper consid gener longliv renam problem process repeatedli acquir releas name adapt renam serv intermedi step adapt algorithm problem new name replac process origin name make step complex depend number activ process algorithm employ techniqu well effici adapt algorithm renam could deriv known algorithm best previous known algorithm renam linear name space onnk step complex yield ok step complex at best made adapt thu first present k gamma renam algorithm on step complex neither adapt rangeindepend algorithm base new shrink network construct consid novel algorithm contribut paper new linear renam algorithm employ rangeindepend algorithm renam on log n step complex process start adapt ok renam algorithm whose step complex ok simpl modif rangeindepend renam algorithm moir anderson then process reduc rang name ologn iter iter use new linear renam algorithm rangeindepend renam algorithm use construct adapt k gamma renam algorithm ok log complex algorithm process partit ologk disjoint set accord view obtain adapt lattic agreement algorithm describ below partit bound number process set allow employ rangeindepend k gamma adapt lattic agreement renam renam algorithm design bound differ set use disjoint name space coordin set requir lattic agreement problem process obtain compar by contain ment subset set activ process waitfre lattic agreement algorithm turn waitfre implement atom snapshot object on addit readwrit oper atom snapshot object allow process get instantan global view snapshot share memori thu simplifi design waitfre algorithm step complex adapt algorithm lattic agreement ok log k algorithm process first obtain name rang size ok use simpl algorithm ok step complex base reduc name process enter adapt variant tree use lattic agreement algorithm inou et al appendix c describ shrink network modifi get lattic agreement algorithm on step complex use dynam singlewrit singleread regist give implement atom snapshot complex previou implement atom snapshot either on log n step complex use static singlewrit multiread regist on step complex use multiwrit multiread regist renam problem introduc solv attiya et al messagepass model barnoy dolev solv problem sharedmemori model burn peterson consid lassign problem dynam alloc l distinct resourc process present waitfre lassign algorithm assum l number process tri acquir resourc algorithm exponenti step complex borowski gafni present algorithm oneshot k gamma renam use onnk readwrit oper anderson moir defin longliv renam present rangeindepend algorithm oneshot longliv renam algorithm use testset op erat moir anderson introduc build block later call split ter employ rangeindepend algorithm longliv renam use readwrit oper moir garay give rangeindepend longliv oknrenam algorithm use readwrit oper combin longliv renam algorithm obtain rangeindepend longliv renam algorithm step complex domin exponenti step complex burn peterson algorithm herlihi shavit show oneshot renam requir name impli rangeindepend renam algorithm provid optim name space name space provid adapt renam algorithm optim linear number activ process follow origin public paper afek merritt use algorithm obtain adapt waitfre k gamma renam algorithm ok step complex anoth paper present adapt collect algorithm ok step complex deriv adapt algorithm atom snapshot immedi snapshot renam paper emphas modular use collect oper make known algorithm adapt algorithm higher step complex present here algorithm adapt total number particip process is attiya fouren process ever perform step influenc step complex algorithm throughout execut use algorithm adapt current content whose step complex decreas process stop particip afek dauber touitou present implement longliv object adapt current content use loadlink storecondit oper recent paper present algorithm longliv renam collect snapshot adapt current content use readwrit oper lamport suggest mutual exclus algorithm requir constant number step singl process wish enter critic section use readwrit oper sever process compet critic section step complex depend rang name alur taubenfeld show behavior inher mutual exclus algorithm choy singh present mutual exclus algorithm whose time complexityth time consecut entri critic sectioni ok use readwrit oper afek stupp touitou use adapt collect algorithm deriv adapt version bakeri algorithm present anoth mutual execlus algorithm recent attiya bortnikov present mutual exclus algorithm whose time complex olog k algorithm employ unbalanc tournament tree structur adapt lattic agreement tree preliminari model sharedmemori model process appli oper share object process p model possibl infinit state machin process p distinct name id share object consid paper atom readwrit regist access read write oper readr oper chang state r return current valu store r writevr oper chang state r v multiwrit multiread regist allow process perform read oper singlewrit multiread regist allow singl process perform write oper process perform read oper singlewrit multiread regist dynam ident singl process write regist vari differ execut otherwis static event comput step singl process process determin oper perform accord state next state accord state valu return oper comput system captur sequenc event execut ff finit infinit sequenc event process perform event oe r appli read write oper singl regist chang state accord transit function constraint interleav event differ process reflect assumpt process asynchron bound rel speed consid execut ff algorithm a process number readwrit oper p perform ff step complex ff denot stepa ff maximum stepa ff process activ ff take step ff is stepa ff denot number activ process ff algorithm rangeindepend function f n n everi execut ff a stepa ff fn name step complex everi execut bound function total number process which known advanc depend rang initi name adapt lattic agreement renam diagon fig grid use ok renam depict algorithm adapt to total content function f n n everi execut ff a stepa ff fkff name step complex ff bound function number activ process ff clearli number activ process known priori waitfre algorithm guarante everi process complet comput finit number step regardless behavior process sinc kff bound by n follow adapt algorithm waitfre problem renam problem requir process choos distinct name rang depend number activ process name function n n everi execut ff process output distinct name rang g lattic agreement problem everi process p output v subset activ process eq view follow condit hold compar either v j simpl ok renam ok oper first step algorithm simpl adapt ok renam algorithm algorithm reduc rang name depend number activ process later stage use distinct name without sacrif adapt describ algorithm first sinc employ adapt algorithm present paper basic build block algorithm splitter moir anderson process execut splitter obtain down right stop one process obtain stop singl process execut splitter obtain stop two process execut splitter obtain valu way set process access splitter split smaller subset splitter arrang grid size n theta n figur process start upper left corner grid splitter direct process either continu move right grid obtain number associ current splitter grid spread process process eventu stop distinct splitter differ algorithm moir anderson algorithm number splitter row number splitter diagon splitter i j row column j figur show number number moir anderson appear squar bracket attiya fouren algorithm adapt kk renam procedur adapt kk privat i j integ initi row column indic privat move fdown right stopg initi direct move stop move splitteri j execut splitter grid posit i move increas row move right j increas column returni name base current splitter procedur splitteri j moir anderson share initi share yi j boolean initi fals xi j id yi j returnright els yi j true xi els returndown algorithm present pseudocod grid splitter say splitter i step away splitter top left corner grid shown section k process access grid process stop ok oper distinct splitter k gamma step away simpl count argument show splitter number rang g theorem algorithm solv kk renam ok step complex renam on oper explain introduct step complex adapt renam depend new linear renam algorithm neither rangeindepend adapt algorithm organ network reflector reflector two distinguish entranc process access reflector chang direct movement anoth process access reflector depend entranc enter reflector network consist n column number left right see figur column gammac top bottom process q name c start topmost reflector column c descend column c see anoth process access reflector then q move left right toward column output row exit column n gamma column c cgamma set process start column main properti network process cgamma enter column c distinct row among lowest js one therefor process cgamma access reflector column c or larger may interfer singl process descend column c algorithm declar privat variabl usag obviou initi valu import adapt lattic agreement renam process q descend column c access reflector row r process cgamma pass then q move column c remain row r process p cgamma access reflector q pass p move one row column c reflector q pass p move one row column c therefor process cgamma enter column c row move one row up process cgamma enter column c row r move one row down process q leav one free row row occupi two subset fqg leav column c distinct row sinc new name process row leav network output distinct name interact process column c guarante process cgamma move upper row column c activ two addit row occupi figur b q activ process leav column c exactli number row enter figur a thu activ process caus two row occupi k activ process leav network lowest row formal reflector two entranc two lower exit two upper exit process enter reflector entranc leav reflector exit see top left corner figur singl process enter reflector must leav lower exit one process leav lower exit possibl two process enter reflector leav upper exit reflector easili implement two boolean regist see algorithm reflector column c denot connect follow upper exit sc r connect entranc sc upper exit sc r connect entranc sc lower exit sc r connect entranc sc lower exit reflector sc r connect entranc reflector lowest reflector column c connect entranc reflector sc algorithm process name c start entranc upper reflector column c descend column c leav exit see anoth process reach bottom column point process leav exit next column move toward column column y enter exactli one reflector entranc leav exit see anoth process exit otherwis suppos p j enter reflector entranc f g process enter reflector entranc gammai sinc process write r gammai p j read fals r gammai leav reflector lower exit impli follow lemma lemma singl process enter reflector leav lower exit similar argument use proof next lemma lemma singl process enter reflector singl process enter reflector one process leav reflector lower exit proof assum p enter reflector p j enter reflector process read true r r algorithm exitp lemma hold otherwis without loss gener p read attiya fouren reflector fig network reflector k gamma renam depict fals r sinc p read fals r p j write r line p read r line therefor p j read r line p write r line consequ obtain true r algorithm exitp prove lemma recal c contain activ process start column everi process c valu local variabl row p access first reflector column c next lemma show process exit column distinct row lemma everi pair process proof proof induct column c base case lemma trivial hold sinc one process may access reflector column induct step suppos lemma hold column c two case adapt lattic agreement renam algorithm renam procedur shrinknam renam algorithm privat col row integ initi name start top reflector column name name descend column name exit reflectorrowcol enter els rowgammagamma row gammacol col reach lowest reflector column move toward column exit reflectorrow col enter els col rowgammagamma returnrow n procedur reflectorentr r r els returnup r case process start column c algorithm reflector column c access lemma everi process p c leav column algorithm figur a lemma hold induct hypothesi case suppos process q start column c let sc last reflector access q column c is q leav reflector sc access reflector lemma everi process p c enter column c row r higher exit column c have lemma everi process p c enter column c row r lower exit column c have consid process q algorithm q leav column c either exit lowest reflector column sc exit reflector q leav reflector sc gammac figur b algorithm process a b c fig illustr proof lemma column c q leav reflector sc algorithm lemma process p j c access sc r is rowp algorithm ae leav induct hypothesi equat impli case rowp everi pair process therefor process exit network differ row henc obtain distinct name next lemma show process c leav column c lowest row lemma everi process proof proof induct c base case process id sinc process access reflector s therefor algorithm rowp lemma hold induct step suppos lemma hold column c two case case process start column c process access reflector column c entranc figur a therefor lemma process induct hypothesi also sinc js c lemma follow inequ case suppos process q start column c induct hypoth esi process c access lowest js c reflector column c sinc process access upper reflector sc lemma q access reflector reach reflector sc r adapt lattic agreement renam a b fig illustr proof lemma column c access anoth process reach lowest reflector sc column figur b therefor q leav column c either exit reflector exit reflector sc algorithm impli accord algorithm process ae togeth induct hypothesi impli also lemma follow inequ lemma impli process leav network row sinc js n name chosen line rang process id reflector column id j exactli one reflector column id reflector requir constant number oper impli next theorem theorem algorithm solv k gamma renam step complex on network consist on reflector reflector implement two regist regist r reflector written process enter reflector entranc entranc reflector access singl process start column entranc access one process by lemma therefor use on dynam singlewrit singleread regist attiya fouren shrink shrink shrink shrink shrink shrink shrink renam algorithm fig rangeindepend algorithm k gamma renam depict algorithm rangeindepend k gamma renam n process procedur indrenamingn tempnam adapt kk height tree side tempnam mod tempnam tempnam shrinktempnam side mod bc returntempnam k gammarenam on log n oper rangeindepend k gamma renam obtain combin adapt ok renam nonadapt renam first name reduc rang size on algo rithm name use enter shrink network algorithm reduc rang size k gamma shrink network start name size on henc step complex simpl algorithm on algorithm present section obtain on log n step complex reduc name space gradual olog n iter so distinct copi shrink algorithm associ vertic complet binari tree height copi shrink design name rang size n gamma is employ network process start algorithm acquir name use ok renam name determin leaf start process perform shrink network associ vertex v path leaf root start column determin name obtain previou vertex ascend left subtre v start one first n gamma column network otherwis start one last column process output name obtain root vertic tree number bf order figur root number vertex v number left child number right child number copi algorithm associ vertex number denot shrink lemma everi vertex v process execut shrinkv obtain distinct temporari name rang proof proof induct d height v base case adapt lattic agreement renam algorithm adapt k gamma renam v adaptivela algorithm present r dlog jvje tempnam indrenam r algorithm els returntempnam execut algorithm process get distinct name rang g therefor one process access v left execut shrinkv temporari name one process access v right execut shrinkv temporari name thu execut shrinkv differ temporari name rang g theorem impli obtain distinct name rang f g therefor lemma hold induct step assum lemma hold vertic height d let v vertex height induct hypothesi algorithm access v left child distinct temporari name rang access v right child distinct name rang fn g thu process execut shrinkv distinct name rang distinct name rang g theorem therefor process obtain distinct name rang complet shrink root process perform shrink n vertic tree vertex requir on oper theorem impli follow theorem theorem algorithm solv k gamma renam on log n step complex renam ok log oper adapt k gamma renam algorithm process estim number activ process perform copi rangeindepend k gamma renam algorithm algorithm design number process may differ estim k number activ process perform differ copi algorithm instead consolid name obtain differ copi disjoint name space alloc copi number activ process estim size view obtain lattic agreement sinc view compar estim within constant factor see lemma algorithm process p belong set j size view view obtain lattic agreement partit guarante js j j j moreov number activ process k js dlog ke dlog ne copi algorithm denot indrenam indrenam dlog ne process j perform indrenam j design j process obtain name rang size js j name space ne overlap size linear k figur lemma view process set satisfi compar selfinclus properti lattic agreement size view k jsj k proof assum v view maxim size s let v view process s selfinclus properti impli compar attiya fouren adapt lattic agreement renam rangeindepend fig adapt k gamma renam properti impli v v therefor v impli jsj jv j k algorithm process p j jv j j lemma impli next lemma lemma k activ process js everi process sinc view contain activ process therefor impli next lemma lemma k activ process js lemma j process invok indrenam j therefor process p invok indrenam j obtain tempnam g theorem algorithm p return tempnam set name return process perform indrenam j denot namespac next lemma follow algorithm lemma namespac namespac dlog ne lemma k activ process return distinct name rang proof two activ process p p j execut copi indrenam obtain distinct name theorem otherwis obtain distinct name lemma lemma process invok indrenam j j dlog ke lemma process invok indrenam rang g theorem process p invok last nonempti copi indrenam dlog ke obtain temporari name rang algorithm p return name rang f dlog dlog ke name form use therefor name obtain algorithm map name space size k gamma dlog adapt lattic agreement renam thu output name rang whose size greater dlog correct algorithm follow lemma k activ process process perform adaptivela pre sent next section ok log oper lemma copi indrenam less k process invok therefor process complet indrenam ok log oper theorem algorithm solv k gamma renam ok log upper bound size name space k gamma tight algorithm assum process execut lattic agreement obtain maxim view with size access indrenam dlog ke process leav rang g unus sinc unknown whether previou copi indrenam empti not return name rang f dlog g k integr power output name rang size log k integr power output name rang size merritt privat commun note name reduc partit activ process set size integ activ process partit set adaptiverenam j design j particip obtain new name rang size js j algorithm k process activ adaptiverenam j access j dlog ke process access copi adaptiverenam j name space size p dlog log k gamma tend k process access last nonempti copi adaptiverenam dlog new name rang size k gamma thu size total name space lattic agreement ok log oper lattic agreement algorithm base algorithm inou et al algorithm process start distinct leaf base name complet binari tree height climb tree root vertex path perform procedur merg togeth two set view set contain compar view procedur call union leaf process use name input union inner vertic use view obtain previou vertex input union process output view obtain root specif union take two paramet input view v integ side f g return output view properti specifi next lemma lemma lemma input view process invok union compar satisfi selfinclus properti similarli input view process invok union output view process exit union compar output view process exit union contain input view appendix describ union detail explain next lemma lemma step complex union ok adapt algorithm use unbalanc binari tree r defin induct follow root v singl left child figur a r suppos r attiya fouren vr cr a b tr fig unbalanc binari tree use adapt lattic agreement algorithm defin identifi vertex v r last vertex inord travers r notic v r right child r r obtain insert new vertex v r right child v r insert complet binari tree c r height r left subtre v r figur b construct v r last vertex inord travers r vertic tree number follow root number vertex number left child number right child number figur construct leav r leav complet binari subtre therefor total number leav r follow simpl lemma prove appendix b state properti r lemma let w ith leaf r count left right depth w blog ic w number algorithm use log ngamma n leav process start algorithm obtain new name rang size kk use algorithm name determin leaf process start climb tree process new name x start algorithm x th leaf tree count left right sinc kk leav temporari name rang size kk lemma x th leaf number distinct copi union associ inner vertex tree process perform copi union associ vertic along path root return view obtain root simpl induct distanc vertex v leav show view obtain process execut union v satisfi compar self inclus properti base case v leaf claim trivial sinc singl process start leaf induct step follow immedi lemma henc view obtain root lattic agreement properti k activ process process p get uniqu name x simplic assum n power adapt lattic agreement renam algorithm adapt lattic agreement procedur adaptivela tempnam adapt kk blog tempnamec tempnam leaf correspond tempnam v fp g input processs name side mod calcul side bc calcul father v unionv side returnv g line lemma start leaf depth blog x therefor p access blog x vertic vertex execut union requir ok oper lemma thu total step complex algorithm ok log k impli follow theorem theorem algorithm solv lattic agreement ok log discuss work present adapt waitfre algorithm whose step complex depend number activ process lattic agreement renam readwrit asynchron sharedmemori model step complex algorithm ok log k clearli complex algorithmsth number step number size regist usedcan improv exampl algorithm ok renam ok step complex would immedi yield lattic agreement algorithm step complex also would interest see idea effici algorithm improv complex algorithm adapt current content acknowledg thank yehuda afek eli gafni help discuss yossi levanoni comment earlier version paper review mani suggest improv organ present r atom snapshot share memori result fast mutual exclus use localspin kexclus algorithm improv waitfre object implement renam asynchron environ adapt effici mutual exclus adapt waitfre algorithm lattic agreement renam atom snapshot use lattic agreement atom snapshot on log n oper partial equival sharedmemori messagepass asynchron failstop distribut environ ambigu choos adapt solut mutual exclus problem exponenti exampl two renam algorithm topolog structur asynchron comput new solut dijkstra concurr program problem fast longliv renam improv simplifi tr ctr michel raynal waitfre comput introductori lectur futur gener comput system v n p may hagit attiya faith ellen fich yaniv kaplan lower bound adapt collect relat object proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada wojciech golab danni hendler philipp woelfel o rmr leader elect algorithm proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa hagit attiya ari fouren eli gafni adapt collect algorithm applic distribut comput v n p april hagit attiya ari fouren algorithm adapt point content journal acm jacm v n p juli