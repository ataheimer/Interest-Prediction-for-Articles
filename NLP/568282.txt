t binari gener post correspond problem a give new proof decid binari post correspond problem pcp origin prove ehrenfeucht karhumki rozenberg proof complet somewhat shorter origin proof although use basic copyright elsevi scienc bv right reserv b introduct let b two nite alphabet h g two morphism post correspond problem pcp short determin exist nonempti word w prove post problem undecid gener word w call solut instanc h g pcp binari pcp assum size instanc h g two problem prove decid ehrenfeucht karhumki rozenberg shall give new shorter proof binari case although use basic idea proof combin ad detail proof make easier read also although restrict binari pcp shall achiev inform realli need binari case note also known jaj pcp remain und cidabl see decid statu open jaj anoth import problem gener pcp gpcp short consist two morphism gpcp tell whether exist word w w call solut shall denot instanc gpcp call begin word call end word note also gpcp known decid jaj see undecid jaj see pcp decid statu gpcp open alphabet size two bound basic idea instanc h g binari pcp either period ie reduc equival instanc binari gener pcp mark morphism prove two case decid recal morphism h call mark imag letter begin dierent letter ie hx hy start dierent letter whenev y decid proof period case see shall also present proof next section shall give new proof second case prove binari gpcp decid mark morphism proof case analysi rather long shall give new proof follow line prove gpcp decid mark morphism alphabet size sinc shall concentr binari case decid proof becom elementari shorter proof decid mark binari gpcp use idea reduc problem instanc nite mani new instanc least one new instanc solut origin one ha iter reduct shall nalli get nite mani new instanc decis easi do note pcp gpcp may alway assum imag alphabet b binari sinc b inject encod f g exampl encod therefor binari case shall assum shall rst x notat empti word denot word x said prex z denot x y prex length k denot pref k y also z xz x proper prex y and usual denot x y say x compar x x word x said sux z denot x and z x call proper sux denot x y also denot period case shall begin easier part solut consid rst instanc binari pcp one morphism period prove result shall need lemma state properti one counter languag contextfre languag see lemma let z monoid morphism addit group integ let r regular languag decid whether proof languag one counter languag one counter languag close intersect regular languag empti problem decid one counter languag even contextfre languag see exampl proof next theorem see also theorem pcp decid instanc h g h period proof let assum h period word dene morphism a dene regular set fg w r w gw u word lemma latter properti decid therefor claim follow note proof hold alphabet size binari case pcp gpcp morphism period dene map h word imag h cyclic shift imag h dene recurs h two word u v well known uv vu u v power common word follow maximum common prex h h length jhj lemma let z h maximum common prex h h mark morphism h m w f g moreov w jhwj m z h hw proof may assum symmetri jhj jhj assum rst clearli h m h m begin dierent letter maxim z h jhj juvj jhj ux h two possibl either jhj jhj h m sinc v x begin dierent letter h m mark see also figur still need prove h m morphism follow sinc therefor w h m h hwz h last part claim follow directli thi figur case note h alreadi mark z let h g h instanc binari pcp assum h g nonperiod let z h abov j may assum symmetri n follow lemma lemma instanc h g binari pcp solut instanc z z h binari gpcp solut proof obviou instanc h g pcp solut z g z h seen assum w solut assum rst instanc gpcp solut w ie z h h m z h therefor true assum h g solut w sinc h m g n mor phism get gwz g z therefor z h h m wz true z h h m z h prove claim mark pcp section shall consid solut method mark binari pcp proof lemmata section shall prove result alphabet size block instanc h g h mark pcp pair u v prex v danger confus also say block letter block letter block u v hu b gv word b rst letter imag block accordingli block minim nontrivi solut equat lemma let h g instanc mark pcp h letter a exist one block u v u particular instanc h g jaj block moreov block h g eectiv found proof consid pair u v word hu gv compar hu gv sinc h g mark exist uniqu hua gv hu gva compar hu gv gv hu respect sinc morphism mark clear rst letter u determin uniqu rst letter v claim follow induct latter claim evid sinc fu regular set instanc mark binari pcp h block letterg note ja j jaj although b sinc jaj block lemma dene successor g u v block letter lemma let h g instanc mark pcp successor instanc mark pcp ii solut ha proof i clear sinc dierent block word h and g begin dierent letter assum solut w w two factor letter solut sinc h w assum solut w block solut i k denit x exist block therefor claim follow denit successor give induct sequenc instanc note reduct instanc successor alreadi use reduct done onc dierenc shall iter reduct decid mark pcp eventu base fact successor sequenc dene nite mani distinct instanc author use two measur instanc mark pcp name size alphabet sux complex clear alphabet size ja j jaj note studi binari case know alphabet size decreas get unari case pcp becom decid straightforward lemma instanc mark pcp successor proof let exist least one block u v v let h function ps z minim length marked z uniqu therefor p inject function similarli dene inject function h g claim follow inject previou lemma togeth ja j jaj yield follow result lemma let instanc mark pcp exist number id n number n eectiv found previou lemma mean n consecut successor instanc begin cycl n lemma sequenc follow properti i size alphabet constant ii instanc mark pcp solut if n one letter solut proof case i follow denit n ii may assum n proof lemma case ii everi solut x solut x i i solut minimum length relat solut solut x lemma sinc g h cannot lengthdecreas jx j jx j chosen minimum length solut x also solut therefor necessarili jx morphism g letter occur x letter rst letter x alreadi solut proof lemma instanc loop one letter solut prove case ii theorem mark pcp decid proof construct successor sequenc meet one follow case alphabet size one sux complex goe zero cyclic sequenc rst two easi decid lemma decid third case check whether solut length one claim follow note also decid whether instanc mark pcp solut begin xed letter a sinc may map back found one letter solut proof lemma check whether one begin a block structur mark binari gpcp instanc binari gpcp reduc instanc sinc solut must shall extract denit successor mark binari pcp mark binari gpcp denit section appli alphabet size binari therefor use arbitrari alphabet domain alphabet whenev consid binari case shall mention instanc pcp neither mark period transform instanc mark gpcp done section assum instanc construct block h g case pcp shall also construct call begin block x y p exist r x p begin block uniqu and end word call end block or block precis hu block u u v v let end block hu gvg set end block letter a lemma let instanc mark xed letter set end block e ration relat eectiv found moreov i block letter e nite ii e innit union nite set nite number set word u v x proof without loss gener may assum end block found similarli found block letter a check rst v so v end block construct sequenc alway compar as lemma whenev hu z z check word w hu s w exist uniqu g mark consequ end block notic necessarili uniqu block letter block u v alway u u v v sequenc termin nite mani possibl z hu z claim i follow herebi consider e innit block letter sequenc order get innit mani possibl z possibl word x end block form jyj end block alway written xu k u equival xu u get desir form here sinc nite mani prex u v potenti end block ration e follow proof i ii shall call xu k yv k w xu k w yv k lemma ii extend end block instanc mark gpcp solut w block decomposit w begin block block minim solut hu easi see follow lemma hold lemma everi solut w uniqu block decomposit figur block decomposit solut w note that sinc block decomposit solut may consist end block necessari construct also set x y begin block moreov begin block exist innit lemma case studi lemma instanc binari mark gpcp binari case three choic solut block solut exactli one block use solut two block use solut express use block mean number dierent block block decomposit shall use next lemma prove solut type eectiv found lemma let x xed word decid whether pair xu k w yv k z solut k ie whether proof xu k w yv k z contain solut k obtain lefthand side depend k equat hold either uniqu k satisfi it therefor assum sinc case uniqu k guarante decid hold k hold k consequ dierenc jp hxu k wj constant may assum symmetri jp hxj least number jp gyv j jp hxj now sinc possibl overow p hxu k w p gyv k z uniqu length argument prove dierent case check solut clearli instanc decid sinc either one check whether xu k z sinc eectiv found prove claim case prove lemma let instanc mark binari gpcp abov decid whether solut type moreov decid contain solut proof solut w type w w either e p begin block end block word need check whether solut form consid set e p rst e p nite decis easi therefor assum extend end block xu k w yv k lemma decid whether extend end block contain solut note z sinc lemma ii may exist nite mani extend end block complet rst part proof second case solut form end block also reduc lemma sinc begin block uniqu end block one consid number end block nite decis easi extend end block say xu k w yv k search solut done lemma replac x also prove solut type eectiv found consequ lemma lemma decid whether instanc mark binari gpcp solut type proof assum one block use solut ie solut w form begin block t s block letter end block xed end decis whether solut t done lemma solut type harder case seem possibl extend end block assum therefor extend end block fact h g mark block t s extend end block necessarili begin dierent letter decid whether k solut also case reduc lemma two case assum rst n n n then n nonempti overow word compar word compar n solut n rst letter r make uniqu case assum solut rst letter r equal rst letter xu yv dierent rst letter s respect therefor compar cannot solut power greater xed eectiv nd construct pair word word construct solut block nite mani dierent overow pair suitabl possibl overow exist nd it hand overow exist overow twice pair longer compar sinc uniqu may replac x decid follow case that n solut necessarili xu k k moreov jtj jsj uniqu previou case exist enough check whether done lemma corollari get corollari unari gpcp decid proof sinc solut unari gpcp type claim follow lemmata shall concentr type solut note case extend end block may occur lemma next dene successor instanc mark gpcp assum begin block x y exist x x set p let successor h g let u v end block i u successor wrt u v s dene follow otherwis u v dene lemma instanc solut successor u solut end block u v moreov solut w written solut x y begin block u v end block i proof assum rst solut w block decomposit letter k begin block u end block clearli u v v u rst case hold p k u ie u v solut w case similar assum u solut w begin block lemma iii xh w solut i note begin block exist succ sor possibl solut e p case decid lemma hand end word disappear instanc decid next lemma lemma let instanc binari gpcp case gpcp decid proof let new symbol f g extend morphism h g follow way h g instanc mark pcp decid whether solut begin cycl instanc lemma reduc instanc successor end block problem approach lemma potenti innit mani successor extend end block solut instanc necessarili type instanc decid lemmata therefor may concentr case extend end block and sinc unari gpcp decid alphabet size lemma solut one successor ha sux complex goe zero step alway decid successor letter a thu solv origin problem otherwis lemma number n morphism start cycl clearli decid mark binari gpcp suce show solv cycl instanc morphism binari successor sequenc mean sequenc instanc mark gpcp successor p i notic set pair end word set ith member successor sequenc assum a begin block for condit a hold know instanc i dene possibl solut e p b satis instanc instanc reduc mark pcp decid lemma shall next show treat instanc begin cycl ie exist successor sequenc shall call instanc loop instanc length loop notic also p i p id sinc begin word construct block therefor begin word morphism previou instanc notic that sinc lemma alphabet size decreas block letter f g particular cannot extend end block lemma assum instanc cycl solut exist two case i p minim solut w initi letter w satis h a g a henc h a g a ii p minim solut w prex u p proof case i follow lemma sinc mark pcp solut solut length one case ii exist u p k k therefor hold j k but sinc instanc cycl p k get contradict sinc p hereaft assum p sinc case i reduc cycl instanc ha ga h would like upper bound length new end block loop demonstr limit number l that solut exist minim solut found sequenc shorter l moreov limit eectiv found main result follow thi follow assum p minim solut p u prex minim solut uniqu sinc assum p morphism mark consequ uniqu end block u v block decomposit minim solut follow exist uniqu successor sequenc instanc end block minim solut successor sequenc call branch minim solut note cannot determin end block minim solut desir limit obtain anyway let instanc branch minim solut w minim solut recal perman assum i impli also i lemma let w minim solut let p i i proof instanc share begin block mark morphism clearli w w id sinc minim solut cannot u p u prex recal p i w minim solut instanc i lemma solut w successor and p i consequ jwj jw j morphism noneras henc jw induct jw it t prove claim byproduct obtain lemma instanc occur twice successor sequenc solut proof proof previou lemma length minim solut decreas strictli instanc mark binari gpcp assum now symmetri end block u v instanc satis equat end block solut necessarili successor end word lemma let branch minim solut cycl instanc loop length d let also w minim solut p i prex p i proof suce take proof analog valu recal also t t lemma w w therefor shall next prove jh w s d j assum contrari jh w s d j proof lemma therefor henc js d contradict sinc js d follow jh w s d similarli prove jg w s d loss gener assum d sinc p compar jh w s d necessarili p figur prex properti previou lemma use proof last lemma give upper bound size end block branch minim solut occurr word u gw gblock cover solut w instanc p factor w u factor z u factor gv i gv note gblock cover occurr factor u in gw uniqu henc dene integ k gcover length occurr u in w lemma let branch minim solut cycl instanc loop length d d h i cover length i g cover length i g i cover length i h cover length iproof lemma d word iand iar cover prove case i one analog simplifi notat denot either show case h cover length gcover length s assum u v end block minim solut w i let also u rst letter u u v give us two case consid word u v equat obtain block construct letter a also block letter a necessarili h a ie h cover length see figur figur pictur case assum rst gcover length word gs word s clear gs share everi one block factor includ rst one sinc case hu cover singl gblock longer hu see figur illustr show h cover longer gcover gs figur block cover gu vertic line illustr block cover claim follow let w minim solut word beginn block i satis consequ w prex minim solut i show cover longer gcover gs sucient show block borderlin dh w cut map inject block borderlin p hwg figur let w word determin block borderlin eg w word prex w sinc g mark also determin block borderlin word p cut gs henc p hw p gy notic nalli word determin z uniqu sinc g inject z determin eg z h inject previou lemma give us tool recogn instanc branch minim solut let cycl instanc loop length consid instanc found rst reduct solut uniqu branch minim solut let maxim g hcover length end word follow lemma branch minim figur relat gs solut g h cover length alway less equal sequenc cycl instanc sux complex constant sinc block instanc imag successor i block length never previou lemma corollari let branch minim solut cycl instanc loop length d d end word longer mi decid result readi prove main result theorem binari mark gpcp decid proof alreadi prove mark binari gpcp decid unari case solut type found remain shown nd type solut ie solv binari mark gpcp cycl instanc cycl instanc block letter p i successor particular extend end block nite mani successor successor relat natur dene tree root successor vertic pair edg decis procedur base construct partial rst insert vertic depth the distanc root comput number maxim cover length end word instanc depth d vertic check whether solut type end block u v e p vertic alway decid solut lemma vertex solut successor remov hand solut also solut procedur may stop vertic depth greater d partial construct specic successor insert corollari branch minim solut includ partial construct nite mani instanc insert path successor sequenc partial construct eventu contain instanc twice thu solut lemma unless vertex solut vertex u u saw section binari pcp decid binari mark gpcp is therefor theorem follow corollari theorem binari pcp decid proof first one morphism period decid theorem instanc mark decid theorem otherwis construct equival instanc binari mark gpcp binari mark gpcp decid theorem decis procedur achiev reduc instanc binari mark gpcp nite mani simpler equival instanc continu reduct reduc instanc creat successor tree decis done path separ accord follow seven rule i get unari successor decid successor corollari ii get extend end block solut type case decid lemmata respect iii get end block u u decid lemma iv get instanc alreadi occur path instanc path cannot solut lemma v length end word break comput limit mi continu branch sinc branch minim solut corollari vi get end block u u e p solut also begin block possibl solut e p case decid lemma vii end block solut conclus open problem prove binari case post correspond problem decid solut base construct successor equival origin instanc decid sens reduct sucient mani time obtain instanc decis easi do note instanc binari gpcp also reduc instanc binari mark gpcp use almost similar argument lemma therefor also gave new proof decid binari gpcp open problem state follow immedi question decid pcp gpcp ternari case ie decid strongli mark pcp morphism strongli mark imag letter uniqu prex length see also also import open question consid form solut binari pcp let h g instanc binari pcp h nonperiod true solut set fu vg possibl equal word u v see also r gener post correspond problem list consist two word decid gener pcp decid mark morphism decid undecid mark pcp morphism handbook formal lan guag remark gener post correspond problem decis problem semithu system rule variant recurs unsolv problem formal languag tr formal languag morphism mark pcp decid remark gener post correspond problem decis problem semithu system rule ctr vesa halava tero harju juhani karhumki decid binari infinit post correspond problem discret appli mathemat v n p august vesa halava tero harju juhani karhumki michel latteux extens decid mark pcp instanc uniqu block theoret comput scienc v n p june vesa halava tero harju juhani karhumki undecid regular languag fundamenta informatica v n p april