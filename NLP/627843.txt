t effici bulkload gridfil a abstractthi paper consid problem bulkload larg data set gridfil multiattribut index techniqu propos rectilinear partit algorithm heurist seek minim size gridfil need ensur bucket overflow empir studi synthet data set data set drawn comput fluid dynam applic demonstr algorithm effici abl handl larg data set addit present algorithm bulkload data set larg fit main memori util sort entir data set creat gridfil without incur overflow b introduct develop scientif databas support retriev subset comput fluid dynam cfd data set retriev subset requir visual data explor data two threedimension thu requir multiattribut index specif interest partial qualifi fulli qualifi point queri gridfil well known multiattribut index techniqu basic idea partit attribut rang subrang therebi induc multidimension rectilinear partit entir multiattribut space enough partit chosen ensur tupl share subrang dimens fit disk page point queri satisfi two disk access one fetch pointer data page one fetch data page itself data wish store contain file creat cfd simul size data set anticip extens use data set requir provid fast organ new data fast retrivi exist data two dimension data typic larg set tupl form current data set measur ten megabyt project order magnitud larger soon although specif concern cfd data set larg physic orient data set common output wide spectrum scientif comput paper show quickli load entir data file gridfil index structur term bulk load note similar function requir relat databas reload relat chang platform recoveri reorgan relat databas relat analog data set work main contribut paper are partit algorithm requir two four order magnitud less cpu time known algorithm partit data gridfil block provid experiment result partit algorithm effici algorithm aggreg underutil logic gridbucket achiev better disk uti lizat provid experment result demonstr util aggreg phase complet algorithm bulkload larg data set significantli larger main memori guarante bucket overflow rest paper organ follow next section relat work prior effort section present gener problem detail provid exampl section present exist partit algorithm new algorithm aggreg algorithm section experiment compar execut time two algorithm varieti data set includ highli skew cfd data set also demonstr effect aggreg techniqu section present two phase bulkload algorithm end conclus plan futur work previou work bulkload b tree investig recent bulkload grid file consid singl paper awar li rotem srivastava main emphasi bulkload parallel grid file ie grid file distribut across multipl site share noth environ defin logic partit gridfil among site databas system physic partit portion gridfil locat one site bucket compos portion gridfil solut base dynam program logic partit physic partit parallel gridfil physic partit object function minim bucket overflow concern physic partit singl site although modifi version algorithm could use logic partit li et al algorithm optim partit one dimens given specif number partit fix partit dimens which like equal space detail fix partit lack li et al paper algorithm dynam find number partit find partit much quickli directli address issu select fix partit uniformli distribut data may suffici assum equal space partit case data skew show dynam program approach ineffici consid larg grid file li et al recogn problem themselv suggest sampl acceler algorithm howev sampl may introduc overflow handl may signific bucket overflow addit bucket must creat grid directori split number overflow within bucket larger bucket capac multipl new bucket need creat grid directori split multipl time earlier work inadequ assess risk sampl focus probabl block overflow rather than say averag number block overflow averag total number overflow tupl problem specif given li et al ie given fix partit fix number partit dynam program formul excel approach propos better reformul problem find smallest number partit total overflow zero freedom introduc allow arbitrari number partit enabl us use fast heurist algorithm instead expens dynam program algorithm possibl larger number bucket result increas number partit reduc via low cost aggreg algorithm thu partit algorithm capabl handl much larger grid file still guarante overflow achiev good bucket util although data set larg fit main memori data must first sort furthermor consid extens data set earlier work better understand effect posit skew cluster data typic cfd data set partit algorithm modif rectilinear partit algorithm develop nicol purpos loadbalanc irregular dataparallel comput two principl differ algorithm earlier one number subrang dimens consid fix present context upper limit number tupl bucket gener problem descript consid algorithm issu let us first examin gener problem exposit twodimension case algorithm gener immedi higher dimens also assum attribut rang partit number subrang rigor necessari address one would choos desir relationship number subrang dimens let set tupl a q attribut index attribut q rest tupl specif data set x coordin q array float point valu repres physic quantiti pressur densiti direct deriv inform chemic composit on eas exposit assum domain integ algorithm extend straightforward fashion realvalu attribut gener rang empir result report base extens let f n theta n frequenc matrix entri contain number tupl coordin i e use follow notat number tupl data set s number partit dimens maximum number tupl bucket hold number uniqu coordin valu dimens i vector cut dimens i specif c vector horizont cut c vector vertic cut p theta p occup matrix result appli cut vector c c s total seek pair c overflow equal zero whose number cut minim make concept intuit left hand side figur partit data set the horizont partit c divid domain bin note dash line c slightli offset clearli show occup bin case bin contain point bin contain bin contain bin contain bin contain bin contain bin contain bin contain thu occup matrix o ij is figur partit exampl left total overflow equal right total overflow equal assum total overflow partit bin contain point move posit second cut c posit i e let c shown right hand side figur total overflow would zero algorithm descript describ algorithm li et al own implement earlier algorithm present detail provid detail lack li et al paper wish show weve made everi effort optim perform dynam program solut section give partit algorithm describ method aggreg underutil bucket dynam program solut dynam program equat describ precis one given li et al reword formul describ specif optim algorithm solv equat assum alreadi partit horizont dimens ie c fix task find vector c minim total overflow let ri j n theta j f obtain restrict j consid column bin result partit horizont c let ov i j sum member column bin overflow exampl matrix left figur ov sinc middl bin tupl overflow observ two bin reduc overflow might consid partit ri vertic l gamma cut therebi creat p theta l submatrix bin attend total overflow valu may mani way partit column j ri l minimum possibl total overflow cost among possibl principl optim assert particular interest valu tov partit achiev cost solut equat aid precomput valu ov i j deriv op time follow c partit f p submatric k column sum entri column indic j inclus then pair column indic j r k i comput singl subtract ov i j comput op time set valu comput time proport n logp slightli comput a sort dimens accommod tupl set spars rel n theta n project data set onto coordin axi sort it essenti work theta array contain nonzero indic describ paper may thought ordin posit data project axi take advantag spars structur still comput proport logp dynam program equat express recurs column index j number cut l approach unravel recurs j inner index l outer one specif start solv tov j j given solv tov j j on l solv tov j l must make comparison actual must make one comparison everi nonzero column f column l gamma tupl set spars rel n theta n complex inner loop recurs op n outer loop execut give complex op n addit complex initi precalcul thu total complex op data set spars rel n theta n complex reduc op u number uniqu attribut valu dimens addit logt sort tupl need maintain spars represent rest paper assum data set spars rel n theta n spars data set especi relev sinc coordin unstructur cfd data set real asymptot complex omaxfp u henceforth call algorithm dp algorithm speed algorithm increas precalcul store valu j complex op u precalcul ov i proport op u thu includ term storag cost signific henc limit applic optim exampl u space requir store ov i j megabyt henceforth call algorithm dp algorithm describ calcul optim overflow cost partit given fix partit c far differ work li et al provid detail implement dynam program problem come first contribut paper determin fix partit determin number partit assum number partit dimens same thu result squar gridfil directori presum exist algorithm which given fix set cut one dimens find good set cut dimens paper li et al provid one such neglect specifi origin fix cut set follow nicol use algorithm basi iter method given fix cut one dimens find good cut other treat new cut fix find better one previous fix dimens iter maintain termin mechan trigger initi fix cut uniformli space gridfil applic idea applic cutfind algorithm attempt find cut yield zero overflow bucket termin partit session defin either overflowfre cutset discov specifi number iter we use cutset discov sole paramet partit session number partit p dimens partit session may view probe determin whether quickli discov overflowfre partit use cut dimens overal strategi intellig search p find smallest valu quickli determin desir partit cut assign might use approach abov result later report use dynam program solut li et al algorithm to report within framework skew data set may advantag number partit dimens differ aggreg phase describ later minim poor effici use squar region futur intend investig nonsquar region given squar region strict lower upper bound number partit need dimens are thu binari search find minim number partit p lowerbound p upperbound total overflow equal zero practic found faster start number partit equal theta lowerbound then total overflow greater zero keep doubl number partit partit valu found total overflow zero conduct binari search valu upper bound previou valu lower bound rectilinear partit come second contribut work altern rectilinear partit algorithm like li et al optim cut one dimens given fix set cut other discuss follow take c fix step algorithm seek defin column bucket whose width wide possibl without bucket column assign b tupl defin first column seek largest index j ov nondecreas j may identifi binari search use precalcul r k i j candid j requir op time comput ov j henc op log u time requir defin first column second column comput exactli first take index start point ie identifi largest j ov j process continu either p fewer adjac overflowfre column discov place last column suffer overflow former case partit session termin latter case may freez newli discov cut choos new cut dimens complex one partit session sever compon first ot log cost sort tupl dimens time optim one dimens first comput new r k j valu take ot logp time follow op log u cost alloc cut sinc partit session iter bound number time asymptot complex origin rectilinear applic shown converg unchang cut set given suffici mani iter algorithm would converg found prudent back away larger number partit small number iter fail find suitabl partit origin rectilinear partit problem shown nphard three dimens proof suffic show intract find minim p squar overflowfre partit exist tractabl rectilinear partit problem two dimens still unknown inform consid essenti differ partit algorithm li et al uninterest partit overflow expend comput energi minim nonzero overflow if given c possibl find c yield overflowfre partit algorithm find it none exist algorithm determin quickli contrast previou algorithm seek find c minim overflow uninterest whether minim overflow two three whether zero nonzero distinct permit us find overflowfre partit substanti less work previou algorithm seen empir result aggreg third contribut algorithm aggreg adjac bucket low util partit phase bucket may low util two adjac bucket util smaller may combin singl bucket even though gridfil directori contain two pointersthey ident follow partit appli aggreg scheme base observ let b equal bucket capac first assum grid directori size theta view four equal quadrant label nwnesesw defin procedur canmergeab return logic true neither b alreadi merg group level j sum util less defin procedur mergeab j merg b one bucket level j use canmerg merg defin recurs function function aggregatea j follow ga gc gb figur aggreg exampl consist theta gridfil alreadi merg group level return partit four quadrant nwnesesw sum util four quadrant less aggreg one bucket return canmergenwnej canmergeswsej then call mergenwnej mergeswsej canmergenwswj canmergenesej then call mergenwswj mergenesej canmergenwnej then call mergenwnej canmergeswsej then call mergeswsej canmergenwswj then call mergenwswj canmergenesej then call mergenesej call aggregatenwj aggregatenej aggregateswj aggregatesej assum grid file directori initi theta aggreg accomplish call aggreg i exampl consid grid directori left hand side figur bucket capac entri directori number tupl bucket merg whole one bucket merg two halv merg nw sw quadrant call aggreg strategi two remain quadrant practic restrict power two although current partit algorithm assum grid equal number partit dimens present aggreg algorithm gener case without loss gener assum shape grid directori n row column find largest n let g subdirectori grid directori compos first row let g subdirectori compos complement origin directori first aggreg g let div n number squar theta subdirectori fit g one squar subdirectori appli squar region aggreg algorithm abov left appli algorithm recurs two region right hand side figur show exampl theta grid directori subdirectori g compos ga gb gc squar power two region aggreg polici appli ga gb entir aggreg polici call recurs gc g algorithm could improv yield slightli better bucket util fast prove suffici need far depend use gridfil differ aggreg strategi use gridfil read onli cfd databas buddysystem pair approach need facilit split futur insert tupl necessari case region aggreg bucket need rectangular henc could allow aggreg result improv bucket util yet develop algorithm calcul aggreg sinc algorithm suffici need date hand gridfil use transact process environ tupl might later insert buddi pair must preserv experiment comparison section present experiment result two partit algorithm present run time bucket util result experi make attempt get smooth curv collect confid interv figur result one experiment run thu often nois presum use workstat job experi run sparc workstat saniti check code made run algorithm profil make sure time spent section code expect run time rp algorithm domin startup cost creat precalcul r k j sort record data set paper run time spent creat r k j time sort data point note even high cost creat r k j overal algorithm significantli faster r k j precalcul contrast run time dp algorithm domin actual partit sinc op u section present result singl partit given fix partit dimens follow section present result assum number partion initi partit known section present result uniformli distribut synthet data set section present result highli skew cfd data set section present bucket util result experi demonstr util aggreg phase fix partit given first compar dp dp rp algorithm assum fix partit exist one dimens conduct experi sinc exact scenario li et al propos algorithm note fix partit obtain specifi li et al consid data set tupl x coordin tupl chosen uniform distribut obtain initi horizont partit equal space cut within domain tabl present result number partit dimens vari assum bucket capac tupl column head second record amount cpu time use partit column head overflow total number tupl fit within bucket capac column head blocksov number block overflow overflow blocksov number ident dp dp algorithm sinc algorithm find exact partit differ run time first note rp algorithm one two order magnitud faster dp dp algorithm valu p convers dynam program algorithm minim total overflow better larg number partit thu specif problem object function formul li et al dynam program algorithm propos satisfi object function better rectilinear partit algorithm expens significantli comput premis work better partit suffici larg number partit ensur overflow note although dp algorithm smaller number tupl overflow result larger number bucket overflow number partit less block overflow rp algorithm use last column partit wherea dp algorithm use overflow block spread partit space consid case number partit rp algorithm use overflow block block tupl alloc them sinc tupl fit per block new block need creat one hand dp algorithm use overflow block tupl requir new block creat henc total overflow good indic optim partit propos better metric would number new block need hold overflow continu use total tupl overflow paper sinc algorithm dynam find number partit need make overflow zero number partit given uniformli distribut data assum number partit known initi fix partit given first consid run time algorithm uniformli distribut data x coordin tupl chosen uniform distribut n n depend experi report experi allow duplic data set point sinc cfd data duplic point verifi inclus duplic result similar rel perform first consid rel perform algorithm number tupl vari rp algorithm dp dp second overflow blocksov second second overflow blocksov e e e e e e tabl cpu time overflow fix partit given figur plot comput time second versu number tupl relat assum coordin valu uniformli distribut note yaxi logarithm top bottom plot comput time dp dp rp algorithm rememb dp algorithm dp algorithm except precomput store ov i ji j plot figur assum tupl fit per page plot figur assum tupl per page page size byte tupl size would byte respect tupl size byte may typic size transact process system tupl data set usual around byte number tupl increas run time dp algorithm becom long practic use relat byte tupl megabyt byte tupl megabyt henc reason expect suffici memori partit data set least tupl byte tupl figur dp algorithm requir second about hour tupl requir second hour time clearli prohibit dp algorithm requir second minut second minut tupl respect requir megabyt space hold precomput ov i j rp algorithm requir second tupl respect thu rp algorithm practic algorithm rp algorithm time faster dp dp algorithm tupl differ solut time unexpect given complex dp dp rp algorithm omaxfp u log tg log tg respect consid number uniqu attribut valu data set impact rel perform polici figur plot comput time second versu maximum attribut domain data set tupl assum tupl fit per page note yaxi logarithm curv top bottom dp dp rp algorithm run dp algorithm storag space precalcul ov i megabyt thu point plot maximum domain valu higher increas maximum domain valu increas number uniqu attribut valu data set dp dp algorithm highli sensit number uniqu valu data set convers rp algorithm rel insensit number uniqu valu maximum domain valu rp algorithm time faster dp dp algorithm maximum domain valu rp algorithm time faster dp algorithm experi section assum maximum domain valu mani cfd data set number uniqu valu almost equal number tupl thu even small valu consid tupl size effect rel perform two algorithm figur plot comput time second versu number tupl per page assum tupl attribut domain maximum yaxi logarithm number tupl per page decreas henc tupl size increas dp algorithm requir significantli comput convers rp algorithm rel insensit size tupl thu rp algorithm remain viabl algorithm wide rang tupl size degrad dp algorithm tupl size increas easi predict complex algorithm tupl size increas number tupl per bucket decreas henc number partit p increas would expect runtim rp algorithm increas also sinc complex rp algorithm op logu max major run time rp algorithm spent sort tupl creat r k j thu obscur sensit tupl size figur plot ratio comput time dp dp algorithm rel rp algorithm tupl size increas ratio increas number partit given unstructur cfd data consid run time algorithm highli skew data use actual data set unstructur grid cfd simul term grid use describ way coordin data set connect data set compos xy realvalu coordin data set comput model cross section airflow around aircraft wing figur plot data set set point x restrict rang plot sinc major data central region plot whole rang would make difficult distinguish point area high concentr point plot vertic horizont line partit line result run rp algorithm data set note one vertic line includ plot seen partit fix equal space partit would bad choic figur plot partit comput time versu number tupl three differ data set smallest data set tupl dp dp algorithm requir time comput rp algorithm partit data set tupl dp dp algorithm requir time comput rp algorithm thu dp algorithm especi impract highli skew data sinc dp algorithm requir hour tupl data set run tupl data set rp algorithm requir second partit tupl data set four order magnitud differ comput time surpris light result experi plot figur unstructur grid data set number uniqu attribut valu almost equal number tupl henc number tupl set increas rp algorithm dp algorithm bucket util bucket util partit preaggreg postaggreg partit preaggreg postaggreg e e e e e e e e e e e e e e e e tabl averag bucket util number tupl vari number partit need increas number uniqu attribut valu rp algorithm experi much increas comput time data set get larger sinc major time spent precalcul r k j initi sort data bucket util aggreg effect present averag bucket util previou experi aggreg phase complet tabl present util uniformli distribut data experi figur column label partit number partit direct smallest number algorithm return total overflow zero overal averag bucket util quit good would result insert tupl one time littl differ util dp rp algorithm addit aggreg phase significantli improv bucket util bucket util alreadi good experi run time aggreg phase minim less rp runtim henc worth aggreg even modest improv tabl present util uniformli distribut data experi figur littl differ bucket util two algorithm averag bucket util tend decreas number tupl per page decreas tupl fit per page bucket util aggreg better thu aggreg phase consider improv util case util poor runtim dp algorithm tupl per page excess henc present aggreg result paramet skew data aggreg phase result substanti save disk space tabl present util unstructur grid cfd data set three differ grid averag bucket util without aggreg poor improv significantli aggreg thu highli skew data aggreg essenti achiev good bucket util note tupl data dp algorithm sinc comput time tupl data set requir hour rp algorithm dp algorithm tupl bucket util bucket util perpag partit preaggreg postaggreg partit preaggreg postaggreg e e e e e e e e tabl averag bucket util tupl per page vari rp algorithm dp algorithm bucket util bucket util partit preaggreg postaggreg partit preaggreg postaggreg tabl averag bucket util unstructur grid cfd data twophas bulk load algorithm descript section describ two phase algorithm bulk load data set significantli larger avail buffer space suppos data set contain tupl suppos maximum tupl contain memori time appli rp algorithm approach two step first partit set group size fewer set contain point within rectangl xy plane howev collect set need rectilinear second step appli rp individu set merg individu grid file creat step elabor upon given find smallest perfect squar integ r r partit data set r group follow sort data set xcoordin valu may easili divid set r group r success element sort order serv partit data set along xaxi strip tupl strip may sort along yaxi point may separ group success point effectu divid strip rectangl rectangl contain permit number point remain appli rp group write bucket data disk one possibl partit group separ defin final grid file union separ defin gridfil recogn cut defin group one side data domain must propag r group and caus split grid directori each consid differ approach group partit build global grid file initi empti upon read group identifi set cut global grid file affect group treat immut seek find minimum number addit cut need avoid overflow requir simpl modif rp algorithm anoth optim first strip attribut index data set two phase algorithm appli coordin without requir io whole tupl partit set coordin creat overal grid directori bucket could fill make second pass data set may result faster load time tupl size larg data set and henc grid directori extrem larg anoth optim use two level directori scheme suggest top level directori one entri r subdirectori note would mean point access could requir three disk access instead two conclus futur work propos implement new rectilinear partit rp algorithm physic partit gridfil propos rp algorithm significantli faster recent propos dynam partit dp algorithm li et al number overflow rp permit necessarili larger dp algorithm which minim them howev argu minim number addit block creat due overflow actual better measur one rp algorithm find better solut dp algorithm consid use greedi algorithm dp algorithm kernel loop seek minim size grid file need achiev overflow synthet data set uniformli distribut integ rp algorithm two three order magnitud faster dp algorithm actual cfd data set whose index attribut highli skew real rpbase algorithm three four order magnitud faster dpbase algorithm also develop effici aggreg algorithm improv bucket util grid file result bulk load use rp dp partit algorithm algorithm minim overhead yield substanti improv bucket util bucket util partit poor aggreg phase necessari achiev reason bucket util index data highli skew also propos two phase bulk load algorithm sever optim load data set significantli larger avail buffer space algorithm guarante bucket overflow propos possibl altern sampl base method yet investig perform algorithm futur plan experiment compar two phase algorithm insert one tupl time sampl base method also intend consid sophist aggreg techniqu partit differ number partit attribut r fundament comput algorithm algorithm load parallel grid file algebra turbul model unstructur adapt mesh rectilinear partit irregular data parallel comput the grid file adapt symetr multikey file structur time space optim btree probalist method queri process sampl issu parallel databas system tr ctr y dora cai ruth aydt robert j brunner optim data load multiterabyt ski survey repositori proceed acmiee confer supercomput p novemb apostolo papadopoulo yanni manolopoulo parallel bulkload spatial data parallel comput v n p octob a rundenstein merg rtree effici strategi local bulk insert geoinformatica v n p march gisli r hjaltason hanan samet speed construct pmr quadtreebas spatial index vldb journal intern journal larg data base v n p octob