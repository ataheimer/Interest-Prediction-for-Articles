t exact algorithm find minimum transvers rank hypergraph a present two algorithm problem find minimum transvers hypergraph rank also known hit set problem problem natur extens vertex cover problem ordinari graph first algorithm run time on hypergraph n vertic need polynomi space second algorithm use exponenti space run time on b introduct hypergraph gener graph edg call hyperedg may consist vertic hypergraph rank k largest hyperedg contain k vertic transvers also known hit set vertex cover subset v vertic includ least one vertex everi hyperedg minimum transvers problem find transvers minimum cardin hypergraph npcomplet gener case hypergraph maximum rank k articl consid problem hypergraph rank find transvers minimum cardin equival find independ set maximum cardin transvers much wide studi hypergraph independ set find hypergraph transvers applic mani area exampl artifici intellig databas theori particular situat find small transvers larg rank hypergraph encount comput biolog comput evolutionari phylogeni close connect comput set minim transvers rh hypergraph h data mine problem research partial support cug nation graduat school comput scienc sweden find maxim specif sentenc interest databas furthermor minimum transvers problem natur gener vertex cover problem ordinari graph algorithm first exact algorithm awar solv problem time provabl lower o n algorithm relat problem could use solv minimum transver sal provid guarante particular niedermei rossmanith construct algorithm parameter version problem one tri find transvers smaller given paramet k run time o k n take closer look applic previou algorithm section relat result beyond one mention section approxim algorithm minimum transvers deal transvers hypergraph problem gener form main part paper present two algorithm minimum transvers one use polynomi space run o n one use exponenti space run o n time achiev bound two thing first use parameter algorithm case previous mention algorithm niedermei rossmanith import subcas algorithm low valu paramet proven possibl second use method analysi take number edg cardin consider without make analysi overli complic trick may use construct algorithm well articl structur follow section contain variou definit minor result need algorithm section deal topic previou algorithm problem section contain algorithm analys final section contain conclus preliminari basic definit hypergraph gener graph edg e arbitrari set call hyperedg vertic h sometim h given tupl v e v vertic e hyperedg purpos definit simpler nh number vertic jhj number edg h usual use n let hypergraph impli rank hypergraph defin runiform hypergraph call edg cardin k kedg edg cardin call loop degre vertex dx number edg e x e write hypergraph consider clear context defin k x k x h number kedg e x e hypergraph simpl if edg minh hypergraph edg eg word hypergraph minim hyperedg h obvious simpl n complet runiform hypergraph n vertic edg combin r vertic transvers independ set transvers h transvers transvers h exist ae equival transvers ordinari graph vertex cover independ set h e edg complement independ set transvers maxim minim set minim transvers h call transvers hypergraph rh hypergraph proof statement see h size smallest transvers h defin transvers hypergraph problem problem gener rh given hypergraph h natur know rh solv minimum transvers problem search rh smallest transvers ojt rhj time howev jt rhj may exponenti potenti larg o n turan number turan number n p r minimum jhj runiform hypergraph h theorem h uniform hypergraph l kgamma proof given r p n which alway true hypergraph de caen shown r set integ n q word jhj gammaq qn integ h possibl by definit turan number k solv q get one posit solut use solut get k note condit qn integ equival condit fkdeltan integ now fk function posit valu k contin monoton increas assum valu exclus therefor fk exist k k fk theorem make trivial statement sinc true everi uniform hypergraph h algorithm section take look algorithm relat problem could appli minimum transvers problem parameter hit set hit set equival minimum transvers problem uniform hypergraph nice algorithm parameter version problem one seek transvers jt j k given paramet k present niedermei rossmanith algorithm run time o k n easili modifi return minimum hit set parameter natur algorithm slower k larg faster k low gener case k may larg for hypergraph k achiev run time o n jhj limit theorem guarante better limit h thu better run time algorithm use algorithm take care otherwis difficult case detail found section transvers hypergraph applic algorithm found solv transvers hypergraph problem defin section algorithm includ classic algorithm berg improv kavvadia stavropoulo seem behav well experi theoret result exist algorithm theoret interest eiter gottlob mishra pitt algorithm either proven upper bound run time all best known upper bound o n mainli due fact algorithm design properti low total run time mind eg low predict delay output transvers anoth reason maximum size jt rhj h rank hypergraph unknown may high o n note also except algorithm kavvadia stavropoulo algorithm usual requir exponenti amount memori algorithm section present algorithm minimum transvers problem first present basic algorithm mintrh which need polynomi space analysi show modifi use exponenti space lower run time algorithm vertex x hypergraph fe hypergraph hg intuit hypergraph remain cover x includ transvers remain hypergraph x includ transvers sometim say mean x includ transvers vice versa vertex x domin anoth vertex x everi edg e h note loop x domin vertex observ use analyz algorithm polynomi space algorithm algorithm mintrh basic binari tree search use algorithm niedermei rossmanith base case present list case figur first applic case use algorithm return smallest transvers note two differ use min mina b set a b return set lowest car dinal minh hypergraph h hypergraph minim oper defin section algorithm mintrh input hypergraph h output smallest transvers h h empti return h simpl return mintrminh exist loop fxg h return fxg vertex x domin vertex return let x vertex maximum dx among vertic maximum exist least one edg h pick vertex x maximum x edg fx yg return maximum degre vertex h use nieder meier rossmanith algorithm final pick vertex x maximum dx return fig polynomi space algorithm minimum transvers algorithm use three reduct list case order manner vertex chosen branch design maxim creation loop edg number edg import featur analysi algorithm given next section prove correct algorithm case case correct case appar section case note unless edg fxg cannot cover correct case follow follow observ x domin everi edg cover cover mean exist minimum transvers exist anoth minimum transvers x case refer niedermei rossmanith paper everi remain case tri vertex v clearli exhaust search last case catch remain situat final note sinc assign done one vertex time sinc case take care loop empti edg never occur h analysi algorithm section perform analysi algorithm show run time o n analysi method kullmann use consid branch tree algorithm implicitli construct appli problem instanc let everi edg tree label real posit number t repres reduct complex occur along edg node v tree branch label branch tupl v associ branch number posit solut branch number denot t consid reduc tion mean case requir one branch examin thu implement without actual recurs occur local within node tree node branch tree least two children algorithm case reduct hypergraph none case appli said maxim reduc hypergraph associ node v branch tree maxim reduc hypergraph dealt node analysi use realvalu function f h deriv label edg branch tree specif label edg link node v associ hypergraph h child w v associ hypergraph h f exact definit f h given moment now need know f h f h label branch tree guarante posit condit f h nh everi label branch tree posit run time algorithm opolyn delta highest branch number tree polyn polynomi n proof thi discuss method found f h use function take nh number edg h henceforth name k consider specif f realvalu function word vale psik use finegrain measur complex usual n six subdivis one motiv use particular f h worstcas run time algorithm model use twovari recurs valu n settl pattern similar c ngammapsik function psik constant c anoth motiv seem natur n variabl edg slightli difficult n variabl one edg turn difficult two edg on matter mani edg have alway possibl remov singl assign might lead maxim reduc hypergraph edg import note howev correct bound given section reli upon either optim similar f h n realworld worstcas run time psik obey given rule get worstcas branch number c run time mintrh oc n use nonoptim psik constant c higher necessari eas present valu psik given tabl technic numer optim requir find valu avail beforehand simplifi proof make easier verifi claim process found explain proof note similar differ approach kullmann might order sinc problem solv relat detail comparison cours given without thorough review paper problem solv express roughli account edg accord nonlinear function complex analysi local analysi recurs perform kullmann account short claus correspond edg linearli instead use complic nonloc analysi get good upper bound kullmann method might provid tighter bound exchang proof bound complex lengthi main part section theorem give proof time complex mintrh first give small lemma concern time complex niedermei rossmanith algorithm lemma niedermei rossmanith algorithm run o n time uniform hypergraph h maximum degre less proof sinc maximum degre h jhj n set theorem section give us h dne ceil function ignor suffici larg n paramet niedermei rossmanith algorithm run time o n theorem mintr run o n time proof let k number edg h give branch number variou case algorithm use measur f valu psik given abov case case use recurs case reduct previous mention valu f h decreas applic reduct appli situat might temporarili increas f h edg remov case occur h contain least one loop so case reduc nh afterward result reduct f h least case case need examin detail n k chang branch branch assum branch examin let n k number variabl edg remain respect reduct appli assum domin vertic occur would lead easier branch two branch hx branch q edg remov loop new edg creat hx branch p edg turn edg q edg turn loop sinc h minim p edg new ie occur h uniqu disjoint loop k p also guarante everi loop fvg thu maximum number edg remov case q delta q total n worst case particular q alway case minimum k k formula branch number branch number case case subcas k formula branch number branch number case case subcas result branch divid case first branch one worst case branch case everi valu k achiev k minim branch use valu tabl find branch branch number instanc worstcas branch number note k branch number tabl contain formula calcul branch number case along actual branch number second again one worst case minim k valu k given tabl formula calcul branch number actual branch number case k domin worst case sinc part tupl increas increas k final q worst case valu k branch formula branch number valu q k branch number branch number case case subcas x listen tabl x k bring wors case sinc case case two subcas proven branch number less note vertex v v otherwis domin case would appli assum edg contain x fx yg fx zg know domin z x z taken care reduct loop fxg remov dz case least variabl remov branch number overestim gamma otherwis branch variabl x edg fx yg remov exactli one new edg creat thu k unchang branch number case case run time o n case sinc dx worst branch case final case algorithm proof complet find valu psik case analysi algorithm first perform precis valu psik known found numer optim explain optim perform branch b set valu psik calcul valu branch number b given formula given branch b vector correspond branch number enumer branch occur case analysi let x vector x contain valu psik run time mintrh ocx n want find x minim cx given condit psik cours branch b found case algorithm valu b x good enough regardless x branch includ optim note particular algorithm analyz section b x contin long condit x hold cx contin suffici condit standard algorithm achiev least local optimum exponenti space modif use idea robson lower time bound allow algorithm use exponenti space idea rememb result recurs algorithm subset v ae v jv j ff delta jv j ff store quickli access data structur like balanc tree solut calcul onc robson ordinari graph exactli one subgraph v ae v hypergrap howev sever differ hypergraph use vertic v may reach cours algorithm start hypergraph h vertic v edg fx reach hypergraph h vertic either assign assign made possibl fy zg h one way handl take care edg loop separ rememb result uniform hypergraph suppos hypergraph h vertic edg h h come set vertex therefor smaller edg cardin h exactli edg cardin h use vertic v exactli one uniform hypergraph everi v ae v unfortun method trivial extend algorithm niedermei rossmanith use way run time algorithm depend valu paramet k size vale psi k graph consequ algorithm potenti take o n run time regardless cach want find better bound run time thi cannot use algorithm version algorithm net result use algorithm instead use cach trick is state run time o n let mintrnonrh mintrh subcas call niedermei rossmanith algorithm remov algorithm still correct modif final case remain catchal case first give bound run time mintrnonrh proceed give detail modif use exponenti space lemma mintrnonrh take o n time hypergraph n vertic proof case analysi perform theorem valid modifi algorithm well final case give brief version proof here valu new psik call given tabl case still valid affect chang psik psi k case case analysi still valid need repeat here branch get new branch number tabl give branch formula new valu branch number case case case analysi still valid branch number still smaller reason old case remov final case new worst case psi possibl valu psi k cours deriv use method psik simpler way look upon robson idea imagin algo k formula branch number branch number case case subcas use psi k k formula branch number branch number case case subcas use psi k branch number branch number case case subcas x use psi k algorithm mintrexph input hypergraph h output smallest transvers h possibl taken lookup tree h empti return loop fxg h return fxg vertex x lie one edg return edg exist vertex lie one pick edg fx yg them return solut previous calcul return it otherwis pick edg fx rememb result fig helper function mintr n ffn rithm first fill tree subset v jv start work h halt recurs whenev reach hypergraph precalcul solut tree fill time polynomi n time size certain uniform h vertic pick edg fx branch h note assign made x second third branch first third branch etc branch equival look tree way polynomi local work need everi v ae v tree now rest algorithm let h n vertic hypergraph given initi call let mintr h mintrnonrh modifi call mintrexph given figur whenev use two differ type branch one hand branch hand standard branch branch correct former branch follow definit transvers correct latter branch obviou theorem mintr h use time space o n hypergraph h vertic v jv proof analysi view algorithm split one treefil part one search part fill tree use time space opolyn delta ffn one entri everi v ffn differ know max kffn ffn delta number entri tree ffn ffn alreadi note tree fill polynomi local work entri get bound form o n need asymptot ffn use stirl approxim see n e ignor detail polynomi factor ffn e e e polyn deltaff ff where again polyn part grow polynomi asymptot bound time space need part algorithm search part algorithm divid time spent mintr time spent mintrexp time spent mintr o gammaffn whole search tree mintrnonr algorithm view one search tree depth gamma ffn search tree depth ffn attach leaf size lower search tree o ffn sinc total time mintrnonr algorithm o n see upper search tree o gammaffn leav time spent mintrexp o ffn mintrexp use ffn vertic remain algorithm case reduct case take polynomi time case branch tupl better case appli with edg fx yg fx zg get loop fyg fzg branch number case final lead total work o n reach n remain vertic reach case small edg creat case use case met number edg b reach o b leav polynomi work leaf sinc edg pairwis disjoint b n time need ffn worst case mintrexp case combin two time o gammaffn call mintr exp spend o ffn time search tree total time o gammaffn ffn search part algorithm now two express balanc total run time mintr h sum off ff first part increas grow ff up second part decreas sum cours domin biggest term want find point balanc solveff ff get paramet run time memori usag whole algorithm o n conclus construct two algorithm minimum transvers prob lem one need polynomi space run o n time one need space time o n best knowledg first exact algorithm problem run time o n better r north holland extens theorem moon moser complet subgraph parameter complex framework systemat confront comput intractabil iti identifi minim transvers hypergraph relat problem complex dualiz monoton disjunct normal form comput intract guid theori npcomplet concret mathemat foundat comput scienc data mine evalu algorithm transvers hypergraph problem approxim color maximum independ set uniform hypergraph new method sat decis worstcas analysi gener maxim independ set boundeddegre hypergraph effici fix paramet algorithm hit set algorithm maximum independ set tr identifi minim transvers hypergraph relat problem complex dualiz monoton disjunct normal form data mine hypergraph transvers machin learn extend abstract gener maxim independ set boundeddegre hypergraph new method sat decis worstcas analysi approxim color maximum independ set uniform hypergraph concret mathemat comput intract evalu algorithm transvers hypergraph problem effici fixedparamet algorithm hit set ctr peter damaschk parameter enumer transvers imperfect phylogeni reconstruct theoret comput scienc v n p februari