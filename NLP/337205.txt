t deriv test plan architectur descript a b introduct recent year focu softwar engin continuosli move toward system larger dimens complex softwar product becom involv distribut applic run heterogen network emerg technolog commerci otheshelf cot product becom market realiti result applic increasingli design set autonom decoupl compon promot faster cheaper system develop base cot integr facilit architectur chang requir cope dynam underli environ develop system pose new challeng exacerb old one critic problem understand system compon integr correctli respect relev issu concern dynam integr inde compon integr result architectur mismatch tri assembl compon incompat interact behavior lead system deadlock livelock gener failur satisfi desir function nonfunt system properti context softwar architectur sa play signic role sa last year con sider academia softwar industri mean improv depend larg complex softwar product reduc develop time cost sa repres promis approach tackl problem scale softwar engin becaus suitabl abstract provid way make larg applic manag abl origin sa approach focu overal organ larg softwar system the use abstract individu compon approach make possibl design appli tractabl method develop analysi valid mainten larg softwar system crucial part develop process test new model method propos respect requir analysi design notabl uml approach test kind system remain neglect aspect paradox new approach specic address design larg scale softwar system howev system test problem diminish intensi especi true integr test fact due new paradigm center componentbas assembl system easili suppos softwar process unit test play minor role tester focu compon work plug togeth lot work devot analysi formal descript sa concern analysi consist correct sa rather exploit inform describ sa level drive test implement word assum sa descript correct investig approach specicationbas integr test wherebi refer model use gener test case sa descript gener deriv function test plan mean identifi class behavior relev test purpos function equival class collect system execut that although dierent detail carri inform content function veric tester expectationhop test execut among belong class would equal like expos possibl non con formiti specic identifi interest test class sabas test sequenc interact sa compon precis start architectur descrip tion carri static dynam inform rst deriv label transit system lt graphic describ sa dynam problem lt provid global monolith descript set possibl behavior system tremend amount inform atten graph quit hard softwar architect singl global model relev observ system behavior would use valid provid softwar architect key deciph lt dynam model key use abstract view lt call altss hesh easili visual relev behavior pattern identifi one meaning valid purpos test class approach correspond alt path howev test class select made necessari return lt retriev inform hidden abstract step order identifi lt path appropri renement select alt path also support approach follow describ detail variou step propos approach scope case studi section provid background inform recal cham formal use sa specic outlin case studi use work exampl section provid gener overview approach section give exampl use approach address specic issu section clarifi better relat alt path test specic final conclu sion summar paper contribut address relat work adl dynam architectur repres overal system structur model individu compon interact sa descript provid complet system model focuss architectur relev abstract key featur sa descript abil specifi dynam finit state machin petri net label transit system ltss use model set possibl sa behavior whole follow subsect brie recal cham descript sa descript deriv lt repres global system behavior concurr multius softwar system cham model cham formal develop berri boudol eld theoret comput scienc princip purpos dene gener comput framework molecul constitut basic element cham solut multiset molecul interpret dene state cham cham specic contain transform rule dictat way solut evolv ie state chang cham follow chemic metaphor term reaction rule use interchang term transform rule follow ing abus notat identifi r set rule set correspond label way cham descript model sa alreadi introduc elsewher summar relev notion structur cham specic system four part descript syntax compon system ie molecul repres solut repres initi state system set reaction rule describ compon interact achiev dynam behavior system set solut repres intend nal state system syntact descript compon given syntax molecul built follow perri wolf distinguish three class compon data element process element connect element data element contain inform use transform process element connect element glue hold dierent piec architectur to gether exampl element involv eect commun among compon consid connect element classic ect syntax appropri initi solut correspond initi static congur system requir initi solut contain molecul model initi state compon transform rule appli initi solut dene system dynam evolv initi congur one take advantag oper avor deriv lt cham descript paper describ lt deriv see recal lt denit reli on denit label transit system quintupl s set state l set label initi state sf set nal state transit relat state lt correspond solut therefor made set molecul describ state compon label lt arc denot transform rule let system move tail node state head node state also need denit complet path denit let l l l path lt p complet initi solut sn nal one although approach build cham descript sa worthwhil stress commit it choic cham formal dictat background use previou case stud i perfectli awar choic could made want make clear use specic formal central approach gener term done far summar follow assum exist sa descript adl descript lt deriv whose node arc label repres respect state transit relev context sa dynam also user router server timer alarmur alarmr c check acksr c user alarmur check check figur process channel assum state contain inform singl state compon label arc denot relev system state transit trmc casestudi teleservic remot medic care system trmc provid monitor assist user specic need like disabl elderli peopl trmc develop parco scientico e tecnologico dabruzzo current java prototyp run undergo sa base integr test typic trmc servic send relev inform local phonecent famili medic technic assist time noti critic circumst dene four dierent process user router server timer where user send either alarm check messag router process send alarm wait acknowledg router router wait signal check alarm user forward alarm messag server check state user control messag server dispatch help request timer send clock signal time unit figur show static trmc softwar architectur descript term compon connec tor box repres compon ie process el ement arrow identifi connector ie connect element in case channel arrow label refer data element exchang channel figur show reaction rule trmc cham specic portion lt trmc sa given fig whole lt around state note arc label correspond respect ie label trmc reaction rule denot initi state box state denot pointer state elsewher shown pictur to make reaction rule t user userocheck useroalarmuriackru t user userocheck useroalarmuriackru t userocheck ocheckus t userocheck ocheckus t oalarmuriackruus ialarmuroalarmrsiacksroackrurout t oalarmuriackruus ialarmuroalarmrsiacksroackrurout t oalarmrsiacksroackrurout ialarmrsoacksrserv t oalarmrsiacksroackrurout ialarmrsoacksrserv t oacksrserv t oackrurout t oackrurout t mrouter timer sent onofuncrout mrouter nosent figur trmc cham reaction rule graph readabl doubl arrow denot point gure cut lt path section introduc approach sabas test goal use sa specic refer model test implement system needless say exist thing ideal test plan accomplish goal clear contrari highlevel architectur descript system sever dierent sabas test plan could deriv one address valid specic function aspect system dierent interact scheme compon therefor assum start point approach softwar architect look sa dierent viewpoint choos set import pattern behavior submit test choic obvious driven sever factor includ specic applic eld critic schedul constraint cost like crucial step good test plan we give exampl possibl choic section abus terminolog refer select pattern behavior sa test criterion term want stress approach deriv dierent specic set test fulll function requir criterion choic impli gener sa test criteria adopt test sa two remark worth note here one deriv test specic aim valid highlevel interact sa compon test plan develop appli integr test stage second remark sinc concern test ie verifi softwar execut greatli base approach sa dynam particular start select sa test criterion primarili work sa lt graph deriv latter mean abstract as describ follow introduc obsfunct sa dynam sa test criterion initi deriv softwar architect inform term want translat form interpret within context sa specic order allow automat process intuit sa test criterion abstract away interest interact refer cham formal ism sa test criterion natur partit cham reaction rule two group relev interact ie one want observ test relev one ie interest in suggest consid interpret domain d map signic transform rule ie arc label lt distinct element map rule figur portion trmc lt therefor associ sa test criterion ob function function map relev reaction rule cham sa descript particular domain interest d precis have idea underli set express semant view eect transit rule system global state lt altss use obsfunct dene mean deriv lt automaton still express high level behavior want test accord select sa test criterion hide unrelev be havior automaton call alt for abstract lt lt obtain relabel accord function ob transit rs minim result automaton respect select equival trace bisimulationbas equiv alenc preserv desir system properti as discuss deriv complet path alt see de nition quit natur correspond high level specic test class sa we give exampl next section therefor task deriv adequ set test accord select sa test criterion convert task deriv set complet path appropri cover alt associ criterion via obsfunct attempt depict gener overview ap proach far deliber left unresolv concret issu importantli mean concret look sa select observ point ie meaning obsfunct and also alt deriv path select coverag criterion could ap pli devot next section answer question help exampl regard trmc case studi consid inform descript trmc section obviou safetycrit concern may want test way alarm messag ow system moment user send moment user receiv acknowledg cast term use previou section issu alarm msg receiv ack issu alarm msg ob t receiv ack ob t figur alarm ow obsfunct receiveack receiveack receiveack receiveack receiveack receiveack figur alarm softwar architect may decid import sa test criterion all behavior involv ow alarm messag system quit inform specic correspond obsfunct could formal dene figur shown includ interpret domain cham transit rule specic involv send alarm messag user user recept acknowledg alarm messag router note inform encod lt level arc label refer obsfunct appli reduct minim algorithm in case minim respect trace equival sinc preserv path deriv alt depict figur the shade circl repres initi state exampl also coincid nal one alt repres concis graphic way alarm ow handl alarm issu eg sendalarm system nondeterminist react one two possibl action elaborat ing alarm send back acknowledg receiveack receiv anoth alarm messag anoth user sendalarm note rather intuit appeal small graph regard much complex complet lt for trmc one hundr time bigger one could tempt consid rather thorough coverag criterion alt take complet path deriv xing maximum number cycl iter howev see better next section alt path actual correspond send first check msg send check msg send first check msg send check msg ob everi user sent check msg ob t user sent check msg ob t figur check ow obsfunct mani concret test case therefor less thorough coverag criteria seem practic particular found mccabe techniqu select basic path oer good compromis arc path coverag list alt test path deriv accord mccabe techniqu follow let us consid exampl path no three path devot verifi system correctli handl consecut recept two alarm messag issu two distinct user put three alt path list explicitli want distinguish test plan case that i ack messag sent rightli recept respect alarm messag path or acknowledg sent alarm receiv ii order alarm recept path nalli iii opposit order path three test class aim valid alarm messag seri two lost whichev order process in still consid trmc softwar architect could decid also check ow worth test thu analog way done alarm ow check ow obsfunct deriv figur correspond alt depict figur repres dierent observ trmc behavior reason far hyphotet scenario trmc system develop softwar architect deriv interest architectur behavior test altern scenario could trmc alreadi function one checkerr checkerr checkerr checkerr checkerr checkok checkerr checkok checkerr f g checkok checkerr figur check compon modi want chang aect sa specic want test whether modi compon still interact rest system conform sa origin descript case observ point softwar architect all interact involv compon if specic compon modi server correspond obsfunct given figur mccabe coverag criterion yield follow set test class exampl evid even deriv basic alt path blindli appli coverag cri terion somehow exploit semant behind element d instanc consid path abov interpret light mccabe coverag criterion aim cover transit fra state state c shorter path c would equal good purpos function test shorter path useless would perfectli equival alreadi taken path b a path fact test forward one alarm messag server therefor cover transit c instead select longer path b c serv purpos test consecut forward two alarm router ob router router router ob t router ob t figur compon base obsfunct frno frno frno frno figur compon base alt cation alt path specifi function test class high abstract level one alt path gener correspond mani concret test case ie test execut level implement system wellknown sever problem make test concurr system much dicult expens sequenti system for reason space discuss problem depth here see eg said simpli tradeo imagin gener tightli test specic event sequenc given much eort need tester forc execut sequenc point tester receiv high level test specic correspond alt path could choos among mani concret test execut conform them exampl consid path b b fig possibl test execut includ send alarm messag user immedi follow send alarm messag user anoth test execut could well includ two alarm messag router recept messag eg check clock still conform given high level test specic exibl rene test specic descend fact deriv alt complet lt deliber abstract away transit involv alarm ow user word concret execut howev dif ferent long conform path belong test class accord select sabas test criterion obsfunct altsbas list path cho sen go back complet lt observ select abstract hide ie precis see sa lt equival assumpt behind alt path test class select quit attract featur approach sa base test class select function test class deriv adhoc manual often case high level test stage equival assumpt test class reli upon remain implicit hardli recover system specic approach rst explicit abstract step requir alt deriv second go back alt complet lt easili identifi mani lt path fulll given alt path better explain mean exampl consid alt alarm ow fig state b equival under test assumpt made roughli forti state complet lt of cours automat identifi them onli valid lt subpath could travers reach forti state valid subpath exampl go initi state lt forti state equival state b alt without includ transform rule domain dene alarm ow obsfunct except last arc must correspond transform rule mani subpath would constitut valid rene ment abstract sendalarm transit path renement appli state arc alt path evid number potenti lt path one alt path soon becom huge cannot realist plan test case them pragmat question is select meaning lt path among mani rene alt path believ complet automat tool ie smart graph process algorithm could make good choic semant aspect function behavior tool could captur also sever nonfunct term equival refer usual mean test literatur ie denot test execut interchang respect given function structur test criterion specic tracebisimul equival use far graph figur lt test path factor take account prospect there fore softwar architect indispens support appropri graphic tool process aid exploit one side hisher semant knowledg sa dynam discern lt path equival respect alt abstract side hesh also take account relev factor captur sa descript safetycrit requir time cost constraint thu nalli expect softwar architect produc list alt path rene list lt path give list tester test specic valid system conform sa fig instanc show lt path valid renement path alarm ow alt s exampl shortest path could take instanti alt path includ indispens trmc transform rule fulll path precis lled light gray particular state equival state b alarm ow alt note fact enter arc label anoth forti lt state equival b fig semant dierenc could relev integr test purpos reach ie user send alarm user send check messag never possibl lt subpath reach could see analyz state inform associ lt node renement path softwar architect could decid pick one lt path includ order test check anoth user interfer alarm certain user conclus contribut paper consist approach use architectur descript system dene test plan integr test phase system implement approach start correct architectur descript reli label transit system represent architectur dynam mean observ notion softwar architect get dynam model suitabl abstract ect hisher intuit interest relev system architectur descript respect valid step eectiv step reli softwar architect judgement semant knowledg sa function nonfunct characterist summari propos approach consist follow step softwar architect select interest sa test criteria sa test criterion translat ob case criterion could also identifi sever relat obsfunct obsfunct alt automat deriv global lt correspond sa specic deriv alt set coverag path gener accord select coverag criteri on path alt correspond highlevel specic test class alt path softwar architect tool support inspect lt deriv one appropri lt path specifi rene transit sequenc architectur level approach allow softwar architect move across abstract order get condenc hisher choic better select rene test plan worth notic approach test plan path sequenc event the label path also set state describ state system term singl state com ponent much inform test plan respect one could deriv eg requir specic fact use sa lt also provid tester inform state compon use constrain system exercis given path relat work lot work devot test concurr realtim system specic driven implement base room carri comprehens survey outlin main dierenc approach work address dierent aspect model time intern nondetermin focu unit test ing either view concurr system whole specic look problem test singl compon insert given environmen t aim dierent want actual abl deriv test plan integr test thu although technic tool approach use obvious eg lt abstract event sequenc use context dierent goal dierenc emerg begin work architectur descript drive select abstract ie test criterion path ie actual test class approach dene alt path specifi high level test class lot common carver tai use sequenc constraint specic base test concurr program inde sequenc constraint specifi restrict appli possibl event sequenc concurr program select test similarli alt path sa fact current work toward incorpor within framework carver tai techniqu determinist test forc execut event sequenc rene lt path produc approach far architectur test concern topic rais interest receiv good deal attent recent year approach inde stem ground though knowledg besid project attempt concret attack problem pursu far futur aim achiev usabl set tool would provid necessari support approach far experi approach describ case studi run java prototyp exist way complet automat support respect alt denit criterion ident path select tool support could reli lt gener start cham descript also allow keep track state arc label work ongo gener alt gener implement graphic frontend cham descript denit believ success approach heavili depend avail simpl appeal support tool s eort goe two direct one side invest autom approach would also like take advantag exist environ possibl integr them eg involv experiment latter easi job experi approach requir exist correct architectur descript run implement case studi present could carri sinc project entir manag control requir specic code obvious often case result got far quit satisfactori real world case studi work moment alreadi run implement ask give model architectur structur condent provid interest insight valid approach r design toolset dynam analysi concurr java program softwar architectur practic chemic abstract machin approach integr test base architectur descript cot integr plug pray practic complet algorithm test realtim system use sequenc constraint speci uncov architectur mismatch compon be havior architectur reus hard project formal speci gener test case realtim system logic speci cation complex measur foundat studi softwar architectur httpwwwrationalcomumlindexjtmpl softwar test architectur level softwar architectur perspect emerg disciplin compon softwar tr chemic abstract machin foundat studi softwar architectur concurr workbench formal specif analysi softwar architectur use chemic abstract machin model gener test case realtim system logic specif softwar architectur softwar test architectur level compon softwar softwar architectur practic use sequenc constraint specificationbas test concurr program uncov architectur mismatch compon behavior cot integr architectur mismatch practic complet algorithm test realtim system approach integr test base architectur descript ctr mauro cioffi flavio corradini specif analysi time function trmc behaviour proceed th intern workshop softwar specif design p novemb myra b cohen matthew b dwyer jiangfan shi coverag adequaci softwar product line test proceed workshop role softwar architectur test analysi p juli portland main holger gies stefan henkler architecturedriven platform independ determinist replay distribut hard realtim system proceed workshop role softwar architectur test analysi p juli portland main antonia bertolino paola inverardi henri muccini explor journey architectur test definit code test execut proceed rd intern confer softwar engin p may toronto ontario canada luciano baresi reiko heckel sebastian thne dniel varr model valid serviceori architectur applic vs style acm sigsoft softwar engin note v n septemb henri muccini antonia bertolino paola inverardi use softwar architectur code test ieee transact softwar engin v n p march hong zhu lingzi jin dan diaper ganghong bai softwar requir valid via task analysi journal system softwar v n p march paola inverardi saladin project summari report acm sigsoft softwar engin note v n may