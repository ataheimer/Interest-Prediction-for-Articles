t analyt model design memori hierarchi a abstractmemori hierarchi long studi mani mean system build tracedriven simul mathemat analysi yet littl help avail system design wish quickli size differ level memori hierarchi firstord approxim paper present simpl analysi provid practic help unexpect result intuit come analysi appli specif parameter model workload local abl deriv closedform solut optim size hierarchi level verifi accuraci solut exhaust simul two case studi threelevel io storag hierarchi threelevel processorcach hierarchi one case configur recommend model perform within optim one result analysi first place spend money cheapest rather fastest cach level particularli small system budget anoth money spent nlevel hierarchi spent fix proport anoth level ad b introduct f ast memori storag system vital achiev good system perform cpu speed increas faster memori disk speed almost system use cach throughout disk memori processor subsystem improv averag time access data widen gap storag technolog make easi lose signific perform poor cach size unfortun littl practic help exist system design administr seek optim cach hierarchi exhaust simul take far long particularli hierarchi becom complex trial error run system usual imposs prior mathemat analys stop short provid muchneed intuit insight cach size assum avail memori technolog b jacob p chen t mudg advanc comput architectur laboratori depart electr engin comput scienc univers michigan ann arbor mi email bljeecsumichedu pmcheneecsumichedu tnmeecsumichedu s silverman chelmsford system softwar lab hewlett packard chelmsford email sethapollohpcom person use materi permit howev permiss reprintrepublish materi advertis promot purpos creat new collect work resal distribut server list reus copyright compon work work must obtain ieee materi present ensur time dissemin scholarli technic work copyright right therein retain author copyright holder person copi inform expect adher term constraint invok author copyright case work may repost without explicit permiss copyright holder arbitrari speed cost paper analyz perform gener nlevel memori hierarchi use parameter workload character intent deriv simpl intuit method quickli gener firstord approxim optim hierarchi organ end make sever simplif compar result obtain accur simul techniqu result simpl closedform solut size level hierarchi function workload local speed cost avail technolog amount money avail spend system valid model tracedriven simul threelevel processorcach hierarchi threelevel storag hierarchi cach size recommend model perform close optim perform determin exhaust simul littl money spend hierarchi model recommend spend cheapest slowest storag technolog rather fastest contrari convent wisdom focus satisfi mani refer possibl fastest cach level l cach processor file cach storag system interestingli reflect happen pc market processor cach among last level memori hierarchi ad discuss initi money best spent slow technolog hope paper help improv intuit configur cach model also suggest everi dollar spent nlevel hierarchi done fix proport everi dollar increas size everi level hierarchi one describ discuss analysi section iv ii previou work countless articl written memori hierarchi provid excel overview cpu disk cach gener focus twolevel hierarchi paper recent year use tracedriven simul investig aspect cach perform multiprocessor cach coher replac strategi tracedriven studi valuabl understand cach behavior specif workload easili appli workload unlik trace mathemat analysi lend well understand cach behavior gener workload though gener usual lead less accur re jacob et al analyt model design memori hierarchi sult mani research analyz memori hierarchi past chow show optimum number cach level scale logarithm capac cach hierarchi garciamolina rege demonstr often better slower devic less faster devic welch show optim speed level proport amount time spent servic request level studi two shortcom assum avail memori technolog arbitrari speed cost appli analys specif model workload local abl creat use technolog continuum characterist conveni analysi make analysi difficult system builder use fail appli specif model workload local make imposs provid easili use closedform solut optim cach configur result paper contain depend cach configurationth number level size hit rate level provid three main contribut beyond previou analys ffl extend previou analys appli gener solut specif model workload local thu abl provid closedform solut optim size workload level function two local paramet devic speed cost ffl discuss result equat mean intuit system design term gener local avail devic characterist ffl verifi model accuraci detail simul two memori hierarchi storag hierarchi consist ram disk tape threelevel processorcach hierarchi consist onchip cach l offchip cach l main memori perform cach configur recommend model almost alway within best perform obtain exhaust simul iii analysi section deriv analyt solut size level cach hierarchi analysi start prespecifi set technolog though result equat may use easili choos optim subset technolog univers technolog a system model a notat follow analysi hierarchi consist n cach level number n back store consid level n fig show typic hierarchi note hierarchi analyz start end anywher need begin immedi beneath cpu instanc simul io hierarchi begin onchip cach level sever layer main toward cpu level level level n back store level size sn tech cost cn c n access time fig gener cach hierarchi bottommost level back store consid part hierarchi storag level cach highest level shown label toward cpu instead cpu analyt hierarchi begin point necessarili immedi cpu assum inclus is data level contain level immedi beneath it memori could easili start disk level technolog level describ follow three paramet averag access time technolog cost technolog dollar per byte size level byte unknown variabl valu c known constant assum choic hierarchi technolog made first also assum hierarchi realist one level alway faster expens level total cost cach hierarchi system sum cost cach level n sake simplic assum linear cost model system budget b given by a stack distanc curv analysi cach perform depend mathemat descript workload local model fulli associ cach hierarchi maintain inclus effect assumpt discuss end section comput probabl refer hit cach level use stack distanc curv measur taken directli address stream stack distanc curv describ mani uniqu byte data separ two refer item instanc consid refer stream refer nth time datum referenc nonlinear model use would tend obscur discuss demonstr section v linear model give good result two uniqu data touch c b stack distanc one uniqu datum touch b stack distanc c c data touch b stack distanc two data touch stack distanc normal plot distribut stack distanc cumul probabl function probabl densiti function cumul probabl function show x valu mani refer made stack distanc x less mani refer separ last refer data less x uniqu piec data fig a relat well lrumanag fullyassoci cach cach size catch refer stack distanc those refer interven data cach size catch refer stack distanc on cumul probabl function p x indic proport access data stack distanc x smaller lrumanag fullyassoci cach size x would therefor hit ratio p x probabl densiti function deriv cumul probabl describ frequenc refer exactli stack distanc x fig b fig plot expect shape curv primarili use densiti function expect workload local fig b graph pair separ data data area densiti function x x describ probabl access separ last refer x less x piec uniqu data fulli associ cach exactli probabl refer miss cach size x hit next cach level size x cach fulli associ conflict miss oc cur size cach larg enough captur refer stream placement polici caus addit miss reason cach fulli associ may yield hit data old but due placement polici yet displac fig illustr differ fulli non associ cach fulli associ cach draw exact line probabl densiti curv separ cach hit cach miss base capac interrefer distanc non associ cach may specifi probabl distribut hit probabl densiti curv refer closer yaxi like hit refer farther yaxi paper conduct firstord analysi use fulli associ cach section v verifi analysi also accur non associ cach a averag time per refer chow welch use perform measur averag time per memori refer model follow time access level hierarchi p probabl level access hierarchi maintain inclus probabl necessarili sum one topmost level access everi singl refer hit miss p analysi stack distanc curv use comput p probabl access level equal probabl refer miss level it z pxdx px probabl densiti function averag system time spent per refer access level thu time refer level scale probabl pxdx total system time spent per refer sum time across level hierarchi sn pxdx size bottom storag level n appear equat sinc level assum contain data n intent infinit time refer level appear scale miss rate lowest cach level expect back store referenc miss lowest cach level fig illustr behavior access time function affect hierarchi organ graph repres twolevel hierarchi xaxi show percentag budget spent top level hi erarchi toward left repres money spent l cach toward right repres money spent l cach curv depict constant budget valu b hierarchi optim goal specifi memori hierarchi fastest averag access time t specif solv size hierarchi level s given access time cost technolog paramet describ workload local total system budget solut proce follow step use lagrang multipli get gener solut without constrain size nonneg appli spe cific parameter model workload local deriv closedform solut allow neg size solut account addit constraint size nonneg jacob et al analyt model design memori hierarchi lru stack distanc probabl refer lru stack distanc probabl refer a cumul probabl function b probabl densiti functionxx fig stack distanc curv function describ degre local workload show distribut mani uniqu byte workload touch refer item cumul probabl function plot hit rate versu cach size lrumanag cach use graph comput probabl workload refer hit given cach size a fulli associ b directmap fig fulli associ cach model vs directmap cach model fulli associ model clear cach access hit access miss size cach clear divid line separ two percentag hit therefor area curvea simpl integr probabl densiti function directmap case introduc element chanc particular line cach could thrown next cach refer could last cach unusu long period time depend particular address refer stream much difficult draw solid line hit miss line blur illustr b howev model probabilist know high probabl refer extrem those near time distant time hit miss respect howev middl rang chanc guess correctli grow wors depict darken shade grey b calculu variat first put cost function b appropri form obtain constraint function g function n variabl cost function b associ cost constraint g point minim know that lagrang multipli combin gradient eq get gammat form give us interest ratio call costperform ratio behavior psi ij describ later now necessari note psi ii eq total system cost eq yield n independ equat solv straightforward long px b model program behavior wish replac px eq specif function smith stone other note cach miss rate model oneterm polynomi function size form fix ff ff fi constant ff less zero ieee transact comput vol no octob percentag budget spent lpredict avg access time log fig behavior sensit access time function exampl access time twolevel hierarchi depend proport money spent level hierarchi curv repres constant budget valu follow rule also consist workload trace section v thu assum polynomi form p x px paper also use exponenti form similar result easiest start cumul probabl graph mention befor p x relat cach hit ratioan lrumanag cach size x would hit rate p x given input stream gener p x necessari p x infin ideal would form similar simplic conveni make follow chang ffl would like expon posit move x ff denomin ffl function blow replac x x ffl want deriv px simpl expon replac ff ff gamma ffl function defin would valu also would unitless scale valu x directli fi give us follow form p x differenti px rule first suggest smith rule thumb everi doubl cach size reduc cach miss solv recurr relat yield polynomi form ff fi constant ff neg fi scale term constant c fi local improv decreas fi increas ff given form px find size optim hierarchi first combin eq arriv follow ignor neg root valu posit independ equat n unknown n yield n sinc valid j independ equat form togeth eq total system cost n equat n unknown solv follow manner use exampl and sinc psi similar sequenc step perform turn yield gener form jacob et al analyt model design memori hierarchi phi phi phi phi phi phi phi phi phi phi phi system budget size level fig graph equat note everi solut linear solut neg valu nonzero valu budget zero artifact use lagrang multipli assum variabl take valu even neg one fix section undo effect neg solut note valu constant except b system budget eq say size hierarchi level increas linearli amount money spend system cost access time c constant deriv chosen technolog note denomin differ level hierarchi therefor rate increas differ level yintercept also differ everi level hierarchi shape curv shown fig b undo effect neg solut eq yield neg valu particularli small system budget obvious imposs neg amount memori level neg size actual zero size appear optim hierarchi lead concept crossov budget hierarchi level i call budget greater optim system includ level system money best spent hierarchi level hierarchi level part system part system cost averag access time find crossov budget note highest level hierarchi optim size less zero small budget calcul budget size neg remov level consider budget result equat ident origin subscript chang process repeat hierarchi obtain final equat process describ follow linear function b posit slope sinc everi cost access time posit everi simpl inspect rel cost access time technolog show sinc psi ji invers psi ij j therefor least look topmost cach level constant term yintercept linear equat eq neg mean optim size level neg posit similar reason optim size level itiv mean analyt optim solut trade cach level level n priori cannot tell whether posit neg yintercept look eq lead posit solut level point becom nonneg crossov point budget valu system budget less valu remov level consider without level appropri budget across remain level hierarchi level n lead new equat similar eq integr infin well new equat similar eq start sum level solv new equat unknown manner but without refer level mean equat b chang becom function one fewer variabl level hierarchi affect neither averag access time budget obtain gener solut size ith level reduc hierarchi obtain form ident origin equa tion except indic summat sum level level n mark end one iter appli procedur new set equat see size neg budget valu remov level analysi obtain new equat process repeat everi level hierarchi find crossov budget level given ieee transact comput vol no octob defin infin notat breviti gener find break system budget domain conveni collect interv valu given call ik valid interv level hierarchi appear valu interv by rememb b system budget independ variabl equat eq depict graphic fig pictur exampl level hierarchi cost access time technolog hierarchi constant need realist valu cost monoton decreas access time monoton increas one move hierarchi to larger i figur applic across choic technolog memori hierarchi use realist valu cost access time given budget workload character told find appropri cach organ one would first find crossov valu level hierarchi use eq would indic cach level present hierarchi budget valu k use next step next step use eq find size level budget valu interv indic valu k altern one could find cach size everi realist budget valu zero up here one would need use eq use valu k n iv discuss found closedform solut size level gener memori hierarchi given devic paramet cost speed avail system budget measur workload tempor local solut given eq a bottom line solut indic one spend one money first dollar go lowest level workload local repres two number obtain easili numer analysi curv fit one fit polynomi form p x eq roughli estim hit rate curv find ff fi without stack distanc measur real workload two point suffic exampl cach size one would expect catch refer stream hierarchi money ad system size level increas becom costeffect purchas next level up point on everi dollar spent system divid two level fix proport byte ad lower level higher level necessarili mean money spent lower level everi dollar split way becom costeffect add anoth hierarchi level top point everi dollar split three way byte ad lower level higher level becom costeffect add anoth level top sinc real technolog come arbitrari size hierarchi level increas step function approxim slope straight line b indepth look analysi closedform solut sever implic first note crossov budget level alway larger crossov budget level crossov budget level n mean optimum hierarchi small budget between consist sole slowest cheapest cach level level exist counterintuitivew includ ing author normal think ad fastest cach level first attempt speed averag access without concern worstcas access solut show intuit incorrectth slower cheaper cach level captur miss back store far valuabl prevent refer satisfi tape drive second access time optim access time hit higher hierarchi slowest cach level larg enough divert larg fraction miss back store at system budget ngamma start increas next higher cach level n gamma along lowest level crossov budget given level depend workload devic paramet eq decreas better tempor local is smaller valu fi larger valu ff expect better tempor local favor ad higher cach level sooner decreas devic higher cach level improv cost speed psi ij decreas lower cost faster time describ detail later technolog improv decreas crossov budget summar first conclus money spent given level money wast level larg enough lower level larg enough allow mani performancecrippl access back store second see that within region size level increas linearli system budget is within region addit dollar spent accord fix proport third note slope two crossov budget higher larger valu i decreas denomin slope jacob et al analyt model design memori hierarchi system budget size level size l cach size l cach size l cach system budget size level size l cach size l cach size l cach size l cach fig exampl solut two larger hierarchi threelevel hierarchi shown left fourlevel hierarchi shown right x x label repres crossov valu crossov budget lowest level hierarchi alway zero crossov budget next highest cach level follow on crossov budget equat linear curv simpli chang slope crossov budget adjust cost new level hierarchi graph produc valu c similar found tabl ii eq thu even one alloc money increas size fast cach level one still increas size lower cach level even faster rate level increas depend workload devic paramet ffl differ slope higher lower cach level decreas better tempor local is larger valu ff high local cach level increas size nearli rate ffl slope cach level increas devic cach level improv psi ij decreas lower cost faster time technolog improv decreas denomin eq henc increas rate size level increas c mean interact psi ij ff fi rememb psi ij follow form ij ratio costperform two lev el suggest level hierarchi character two number cost technolog level speed technolog level beneath it effect given cach level explain good job level cost per second cut mani dollar per byte cost save second refer next lower level ratio combin character entir hierarchi everi level get compar equat tempor local workload character two variabl ff fi variabl ff psi ij alway size increas faster cost may may increas faster appear psi ij bit accur say decreas cost level decreas access time technolog increas rel level i appear togeth ff alway expon psi ij costperform ratio psi ij indic good job one level reduc access time compar anoth level scale larg level relat one anoth ff term temper effect costperform ratio exampl local good ff larg the shape local curv steep ff small effect costperform ratio differenti level small result crossov budget closer yaxi make sens includ upper cach level smaller budget size differ level increas similar rate tradit character memori hierarchi pyramid differ size one level next much less local poor local good narrow tall pyramid local poor shape differenti curv less steep ff closer effect pronounc size differ level increas differ rate crossov budget much outwhen crossov budget occur size exist level much larger case local high result much broader hierarchi previou case take money add higher level base level much larger higher level get ad workload good local result tall thin hierarchi workload poor local result short wide hierarchi fi term scale unit be byte kilobyt megabyt etc effect scale crossov budget occur xaxi scale yintercept workload span enorm amount data conveni unit graph chosen mbyte fi tend larg push crossov budget out workload span ieee transact comput vol no octob smaller rang smaller unit fi chosen fi smaller draw crossov budget in d use model choos subset technolog model specifi optim size level given set technolog find crossov bud get model also determin higher level hierarchi exist howev model automat determin technolog middl hierarchi remov instanc consid hierarchi ram disk tape disk almost expens ram almost slow tape model suggest best way arrang three level given oper budget model attempt find weak link hierarchi except level top down model decid ram part hierarchi disk also kept exampl model may suggest configur disk level slightli larger ram level indirectli show disk technolog useless hierarchi sinc model take moment recommend configur easili use choos subset devic larger pool technolog similar przybylski dynam program approach hierarchi optim much simpler quickli search possibl subset process find best organ best subset technolog given budget point v verif analysi section iii make follow simplif ffl polynomi stack distanc curv perfectli model real workload particular cach would need infinit larg achiev hit rate polynomi stack distanc curv finit size need achiev real work load larg budget valu solut recommend endlessli increas size level optim design would ceas increas size level contain data trace ffl model assum fulli associ cach model level hierarchi ffl model ignor effect block size includ certain amount prefetch cach pollut ffl model distinguish read write behavior access treat readsthey incur delay issu rather forc cach consist cach overflow ffl model ignor compulsori miss affect perform predict eq howev effect optim hierarchi design sinc cach level size miss refer assum prefetch ffl perform technolog character singl access time chang size cach grow ffl cost function technolog strictli proport size extra cost first byte simplif make eq less accur predict hierarchi perform possibl affect optim hierarchi recommend eq goal section verifi gener hierarchi configur recommend eq inde achiev close optim perform end compar model abil recommend specif size gener hierarchi simul real technolog perform ex haustiv detail simul two hierarchi use two differ trace real applic specif real technolog first simul af server memori disk optic disk use month network file request trace second memori hierarchi onchip cach offchip cach main memori use applicationlevel virtual address trace workload a simul descript simul connect togeth devic modul cpu cach main memori disk drive optic disk cartridg tape robot devic modul simul variou cach keep track usag statist level item request present request next level down request time level time first access plu amount data transfer divid transfer rate storag hierarchi simul cach model writethrough fetchonwrit processorcach hierarchi simul cach model writeback fetchonwrit none simul cach fulli associ io cach set associ ram file cach way setassoci disk cach way setassoci offchip cach way set associ onchip cach model directmap simul differ way alloc money quantum money storag hierarchi simul processorcach hierarchi simul b storag hierarchi simul simul storag hierarchi similar plan file system live entir optic disk jukebox cach dram magnet disk tabl describ specif use simul analyt calcul constant valu variou c specif taken b workload data use workload io hierarchi simul collect log af server server see request servic client local af disk cach use one month worth trace client cach found captur mb data server jacob et al analyt model design memori hierarchi summari spec use storag hierarchi simul simul time access technolog capac block size cost per mb startup time bandwidth block ms mbsec ms buy mb magnet mbgb ms ms optic unlimit kbyte sec mbsec ms jukebox buy gb data singl file server april may full trace repres million record sever differ type af server request extract refer relev command fetchdata storedata removefil createfil removedir makedir rest command read write data exampl af use fetchstatu synchron local cach server trace analyz measur tempor local produc stack distanc curv fig use standard sumofsquar techniqu fit eq data found b optim configur fig show optim size hierarchi level predict analysi eq crossov budget disk level zero sinc lowest cach level hierarchi crossov budget dram around impli less spend cach level disk ram money alloc disk fig b show optim size hierarchi level determin simul simul written take account effect model ignor result notic differ instead two region realli three model predict size topmost level hierarchi remain zero crossov budget clearli crossov budget appear earlier simul result also model predict crossov budget slope ram line constant case simul re sult instead crossov budget appear earlier slope steadi middl region gener area model predict crossov budget occur slope ram curv realli take off region show local exploit small amount ram due effect model ignor evid analysi predict valu similar to as optim valu determin simul howev measur enough import perform lost use optim configur analysi fig show perform four configur system budget dollarssimul run time optim configur predict configur ram configur ram extrapol worst case observ worst case extrapol fig perform comparison storag hierarchi xaxi repres system budget yaxi repres averag time per simul refer time includ compulsori miss hierarchi consist two level ram magnet disk back store optic jukebox comparison measur optim run time run time predict optim configur also shown run time allram system worst observ configurationon half gigabyt cach disk rest budget devot entir ram amount ram last two configur insignific approach mb high budget valu ffl optim configur found simul ffl configur recommend analysi ffl alldram configur ffl configur mb disk remain fund devot dram worst observ case fig show predict optim configur never perform real optim con figur contrast two reason configur all dram disk mb disk remaind go dram perform much wors thu though configur recommend analysi differ optim configur perform lost use analyt model howev time save need simul substanti simul ran mani month comput time appli analysi took minut write appropri mapl script less second execut it lru stack distanc mbyte probabl refer cumul probabl curv curv fit cpf lru stack distanc mbytesprob refer probabl densiti curv curv fit pdf fig stack distanc curv af trace cumul probabl curv shown left probabl densiti curv right collect data shown dot line curv fit data shown solid line system budget dollarsoptim size mbyte mbyte ram system budget dollarsoptim size mbyte mbyte disk a analysi storag hierarchi system budget dollarsoptim size mbyte mbyte ram system budget dollarsoptim size mbyte mbyte disk b simul storag hierarchi fig optim configur storag hierarchi optim configur predict a measur b function system budget xaxi repres amount money avail yaxi repres optim size level hierarchi optim configur measur simul accur simul take account number thing ignor model write block size access time varianc real trace c processorcach hierarchi simul also simul typic threelevel virtual memori hierarchi consist onchip cach l offchip cach l main memori use pixiegener trace sever program spec benchmark suit dnasa espresso hydrod mdljdp mdljsp sucor jacob et al analyt model design memori hierarchi wave program chosen other larg cach footprint necessari make multilevel cach simul run reason amount time tabl ii describ specif use simul analyt calcul constant valu variou c cost onchip cach need bit explan one sens onchip cach complet free necessari part design cach appear nearli microprocessor hand infinit expens cannot arbitrarili increas size attempt find feasibl analyt medium assum cpu cost around k roughli half space devot cach typic cach day around kbyte thu k per megabyt number c workload trace analyz measur tempor local produc stack distanc curv fig use standard sumofsquar techniqu fit eq data found c optim configur fig show optim size hierarchi level predict analysi crossov budget l cach zero sinc lowest cach level hierarchi crossov budget l cach around sinc curv fit inaccur appli analyt approach raw data instead polynomi obtain graph fig b configur optim accord simul shown fig c error bar demonstr configur perform within optim ani appropri system budget within error bar would result perform within simul optim note granular analyt graph smaller simul simul alloc fund across hierarchi quanta analyt script alloc fund quanta fig c show optim size hierarchi level determin simul again simul written take account effect model ignor result slightli differ compar result taken polynomi curv fit simul result much like io hierarchi result model predict two region slope con stant simul result sever region slope constant l cach appear ear lier size realli take predict crossov budget small budget data suggest l cach effect reduc access time l cach consist probabl densiti curv fig refer lie within stack distanc littl lie region kb kb suggest l cach truli effect budget allow cach size kb compar well sharp jump l cach size and sharp declin l cach size budget point system budget dollarssimul averag access time cycl optim configur predict via raw data predict via polynomi l configur worst case observ fig perform comparison processorcach hierarchi xaxi repres system budget yaxi repres averag time per simul refer note time includ compulsori miss hierarchi consist two level onchip cach l offchip cach l back store main memori dram comparison measur optim run time run time predict optim configur also shown run time alll system alll system worst observ configur exactli alll configur compar simul result analyt result taken raw data much simi lariti show l present small budget valu size take around budget howev less inform actual system perform befor compar perform simul configur optim configur fig show perform five configur ffl optim configur found simul ffl configur recommend analysi appli polynomi curv fit ffl configur recommend analysi appli raw local data ffl alll cach configur ffl worst observ case which happen alll configur fig show configur predict via raw data perform within real optim configur except one place predict l cach size here perform sever time wors simul optim configur analyt result use polynomi fit curv equal alll configur crossov point at there drop within optim curv remain within point on contrast two perfectli reason configur all l l l l perform much wors again though configur recommend analysi differ optim configur perform lost ieee transact comput vol no octob ii summari spec use processorcach hierarchi simul simul time access technolog capac block size cost per mb startup time bandwidth block onchip kbkb cach buy kb offchip kbkb byte cycl bcycl cycl cach buy kb dram unlimit byte cycl bcycl cycl lru stack distanc kbytesprob refer cumul probabl function curv fit cpf lru stack distanc kbyte probabl refer probabl densiti function curv fit pdf fig stack distanc curv spec trace cumul probabl curv shown curv fit left probabl densiti shown right collect data shown dot line curv fit data shown solid line region kb kb probabl curv nonzero scale requir show data obscur thi vi conclus paper deriv simpl model determin optim size cach level nlevel cach hierarchi model base access time unit cost level total system budget cach level b twoparamet character workload local ff fi use specif form stack distanc curv abl deriv closedform solut size cach level interv be equat success recommend configur perform within optim verifi exhaust simul threelevel storag hierarchi threelevel processorcach hierarchi model led four observ configur cach hierarchi first common focu erron hit time rather miss time design hierarchi contrast model show miss time import system budget larg enough achiev high hit ratio lowest cach level impli first place spend money design cach hierarchi cheapest level rather fastest level specif applic principl cpu cach design awar larger offchip cach may yield better perform faster smaller onchip cach also tertiari storag becom com mon storag hierarchi design awar enough disk much import enough ram corollari first observ model recommend increas size slower cach level faster size faster cach level even make sens includ faster cach level third saw model within crossov budget interv size level increas linearli system budget fourth observ workload local interest effect shape memori hierarchi workload good local larg ff small fi optim memori hierarchi narrow is dif jacob et al analyt model design memori hierarchi system budget dollarsoptim size cach mbyte system budget dollar optim size cach kbyte a analysi processorcach hierarchi polynomi system budget dollarsoptim size cach kbyte system budget dollar optim size cach kbyte b analysi processorcach hierarchi raw data system budget dollar optim size cach kbyte system budget dollar optim size cach kbyte c simul processorcach hierarchi fig optim configur processorcach hierarchi optim configur predict a b measur c function system budget xaxi repres amount money avail yaxi repres optim size level hierarchi optim configur determin simul accur simul take account item ignor model includ write block size access time varianc real trace data a obtain polynomi curv fit data b obtain raw cumul probabl data itself error bar c indic configur rang l l give perform within optim configur ferenc size cach level small invers workload poor local small ff larg fi optim memori hierarchi wide is differ size cach level larg ieee transact comput vol no octob acknowledg enorm thank peter honeyman saar blumson dan muntz citi gracious allow us use af trace without data work would done b l jacob work partial support advanc research project agenc arpaaro contract number daalc daahg p m chen work partial support nation scienc foundat award number mip r af server log on optim storag hierarchi determin cach capac match storag hierarchi oper system theori stripe tape array perform memori optim mass storag hierarchi tradeoff twolevel onchip cach storag hierarchi optim procedur plan bell lab cach memori hierarchi design performancedirect approach a cach worm file system mass storag technolog cost perform size tradeoff differ level memori hierarchi two method effici analysi memori address trace data cach memori disk cachemiss ratio analysi design consider high perform comput architectur memori hierarchi configur analysi tr ctr bruce l jacob peter m chen seth r silverman trevor n mudg comment an analyt model design memori hierarchi ieee transact comput v n p octob juha alakarhu jarkko niittylahti scalar metric tempor local estim cach perform proceed confer design autom test europ p februari tanja van achteren rudi lauwerein francki catthoor systemat data reus explor methodolog irregular access pattern proceed th intern symposium system synthesi septemb madrid spain elizabeth s sorenson j kelli flanagan use local surfac character specint benchmark suit workload character emerg comput applic kluwer academ publish norwel ma santosh g abraham scott a mahlk automat effici evalu memori hierarchi embed system proceed nd annual acmiee intern symposium microarchitectur p novemb haifa israel tanja van achteren francki catthoor rudi lauwerein geert deconinck search space definit explor nonuniform data reus opportun datadomin applic acm transact design autom electron system toda v n p januari jason d hiser jack w davidson david b whalley fast accur design space explor embed system memori configur proceed acm symposium appli comput march seoul korea xing du xiaodong zhang zhichun zhu memori hierarchi consider costeffect cluster comput ieee transact comput v n p septemb j ph diguet s wuytack f catthoor h de man formal methodolog data reus explor hierarch memori map proceed intern symposium low power electron design p august monterey california unit state basilio b fraguela ramn doallo emilio l zapata probabilist miss equat evalu memori hierarchi perform ieee transact comput v n p march a i gerasimov model microprocessor wide command word cybernet system analysi v n p novemberdecemb trevor mudg strateg direct comput architectur acm comput survey csur v n p dec