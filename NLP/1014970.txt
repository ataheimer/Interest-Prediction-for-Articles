t fast distribut approxim algorithm posit linear program applic flow control a studi combinatori optim problem set distribut agent must achiev global object use local inform papadimitri yannakaki proceed th acm symposium theori comput pp initi studi problem framework distribut decisionmak must gener feasibl solut posit linear program inform local constraint extend model allow distribut decisionmak perform local commun acquir inform time explor tradeoff amount commun qualiti solut linear program decisionmak obtainour main result distribut algorithm obtain approxim optim linear program solut use polylogarithm number round local commun algorithm offer signific improv logarithm approxim ratio previous obtain awerbuch azar proceed th annual ieee symposium foundat comput scienc pp problem provid compar run time result appli directli applic network flow control applic distribut router must quickli choos alloc bandwidth connect use local inform achiev global object sequenti version algorithm faster consider simpler best known approxim algorithm capabl achiev approxim ratio posit linear program b introduct processor distribut environ must make decis base local data thu fast distribut algorithm must often without global inform system whole exactli comput mani target function distribut model quickli provabl hard howev quit surprisingli interest global optim problem close approxim base local inform modest amount local commun work motiv applic develop flow control polici must achiev global object function flow control mechan router network distribut avail network bandwidth across connect work rout polici determin rout network connect must use transmit packet problem regul rate connect may inject data along fix rout problem flow control connectionori ratebas approach flow control standard rout avail bit rate trac atm network expect becom wide use packetswitch network approach router network must make regulatori decis base local inform typic consist current transmiss rate connect use router exist flow control polici tri satisfi local object function maxmin fair howev mani practic scenario global object function depart comput scienc hebrew univers jerusalem israel yairbcshujiacil depart comput scienc boston univers boston byerscsbuedu depart comput scienc technion haifa israel dannycstechnionacil much work complet author aliat intern comput scienc institut berkeley california univers california berkeley research support part nsf oper grant ccr ncr grant usisrael binat scienc foundat work present paper appear preliminari form y bartal j w byer d raz appropri choic exampl commerci intranetwork user pay use network bandwidth possibl dierent rate administr would want use flow control polici maxim total revenu express flow control polici object posit linear program linear program entri constraint matrix nonneg complic issu problem router must gener feasibl solut linear program lp quickli base avail inform motiv applic relat applic papadimitri yannakaki consid problem distribut decisionmak assign valu set variabl linear program agent limit inform one scenario describ agent act isol must set valu singl primal variabl know constraint aect variabl lp context flow control object maxim total flow network correspond set connect know mani connect share router intend use edg capac safe algorithm set connect flow reciproc maximum number connect share edg connect hard see worstcas approxim ratio achiev safe algorithm maximum number connect share edg also prove safe algorithm achiev best possibl worstcas ratio agent may commun leav open possibl much better ratio obtain agent interact extend model allow comput proceed sequenc round agent commun fixeds messag immedi neighbor agent neighbor share one constraint lp goal determin number round necessari achiev approxim ratio optimum lp solut although focu applic flow control studi could also perform rang resourc alloc problem includ describ note similar model describ interact connect router theoret practic evalu flow control polici suggest cours central administr complet inform could solv problem exactli use one well known polynomialtim algorithm linear program see exampl recent much faster algorithm produc approxim solut posit linear program within factor optim design sequenti algorithm plotkin shmoy tardo repeatedli identifi global minimum weight path push flow along path recent faster approxim algorithm consid sever relat flow binpack problem use principl repeatedli choos good flow increment increas rate flow technic diculti balanc amount flow increas requir approxim achiev number need step ie run time algorithm global oper choos appropri unsatisfi constraint use moreov gener multicommod flow problem cannot formul posit linear problem unless number dual variabl number constraint exponenti case one must use separ oracl sinc polynomi mani flow handl posit linear program howev number constraint polynomi bound thu one increas dual variabl simultan approach taken algorithm lubi fast approxim algorithm posit lp nisan algorithm fast sequenti parallel implemen tation repeatedli perform global median select algorithm valu dual variabl choos threshold increas valu dual variabl threshold although algorithm ecient implement perform global oper make unsuit fast distribut impl mentat sinc emul global oper requir polynomi number distribut round interest much timeeci solut previous known result distribut flow control algorithm global object function algorithm awerbuch azar give logarithm approxim ratio also run polylogarithm number round algorithm base fundament result competit analysi determinist algorithm present produc solut posit linear program gener flow control problem build idea use algorithm algorithm close relat algorithm lubi nisan elimin need complex global select oper global normal step upon termin enabl fast implement distribut set simplif carri serial parallel set well dramat simpler implement save factor run time algorithm lubynisan final parameter algorithm quantifi tradeo number round qualiti approxim practic run algorithm number phase guarante constant number phase logarithm factor approxim logarithm number phase rest paper organ follow begin present algorithm first easili understand implement serial algorithm approxim solv posit linear program section section prove algorithm achiev approxim ratio analyz run time formul distribut model give explan correspond flow control polici posit linear program section section present distribut implement applic flow control problem explain modif analysi case sequenti approxim algorithm consid posit linear program repres follow standard form well known gener arbitrari posit linear program i assum linear program lp present algorithm normal form ij either satisfi y bartal j w byer d raz sequenti case one convert arbitrari lp standard form lp normal form linear time simpli divid constraint set amin where describ perform transform ecient distribut set section r f outer loop phase min inner loop iter od od j output fig sequenti posit lp approxim algorithm overview result parameter algorithm approxim solv posit linear program normal form given figur main theorem prove perform algorithm relat qualiti approxim run time follow theorem r lnm algorithm produc feasibl r approxim optimum primal linear program solut run nm ln m r time follow corollari clarifi tradeo run time qualiti approxim follow directli theorem corollari algorithm produc optimum nm ln m time r lnm algorithm produc approxim optimum nm r time proof of prove first claim corollari set theorem prove second set choos impli r theorem fast approxim algorithm posit lp descript algorithm sequenti implement algorithm present figur main bodi program bottom panel run sequenc phase number ultim depend desir approxim ratio within phase valu appropri primal variabl j increas monoton threshold reach refer set increas oper across primal variabl constitut inner loop main program iter algorithm note number iter per phase may vari demonstr time slot end phase nonneg set primal variabl j t dual variabl x t primal dual feasibl respect satisfi constraint below primal feasibl i dual feasibl j move pair feasibl solut sinc valu primal variabl increas monoton algorithm crucial care select variabl increas phase end algorithm use exponenti weight function employ varieti relat context includ so associ dual constraint measur associ primal constraint measur throughout algorithm valu dual variabl x tie valu neighbor primal variabl j exponenti weight function defin updateweight constant depend desir approxim ratio scale factor initi m grow geometr phase number reach f termin condit establish connect primal dual variabl valu j t less dual constraint ij x t violat satisfi sucient increas j relationship suggest follow idea algorithm employ start pair dual primal feasibl solut scale dual feasibl solut multipl factor make solut dual infeas caus dual constraint violat move back dual feasibl solut increas primal variabl j repeat process satisfactori approxim achiev hypothet depict intermedi primal dual feasibl solut end phase rel valu optim solut shown figur maintain invari valu intermedi primal feasibl solut monoton nondecreas time guarante provid intermedi dual feasibl solut linear program feasibl ensur valu intermedi primal feasibl solut necessarili smaller equal valu program denot opt similarli valu intermedi dual feasibl solut necessarili larger y bartal j w byer d raz equal valu program upon termin prove final and maxim primal feasibl solut within desir in case factor minim intermedi dual feasibl solut linear program dualiti impli final primal feasibl solut give desir approxim valu program sequenti implement present figur bottleneck oper recomput j iter take onm time fact run time bottleneck oper precis written oe e total number nonzero entri constraint matrix linear program multipli total number iter demonstr polylogarithm section bound total sequenti run time primal solut valu solut opt time dual solut y fig intermedi primal dual feasibl solut analysi algorithm section bound approxim ratio approxim algorithm present analysi sequenti run time later extend result straightforward way distribut case first prove claim made earlier end phase primal dual solut feasibl definit algorithm valu primal variabl increas monoton therefor valu intermedi primal solut also increas monoton thu carri analysi approxim ratio remain prove valu final primal feasibl solut valu minim dual feasibl solut factor apart proof use follow three fact follow initi paramet given initializeparamet figur fact fast approxim algorithm posit lp proof immedi follow definit fact fact r r proof definit definit also shorthand r suce show sinc r lnm olnm result follow directli fact e proof substitut f multipli e must show e r e r r e r r take natur logarithm side abov need show recal definit r r therefor enough prove follow sinc p clearli nonneg q show ln qp nonneg need p substitut p use show final inequ follow fact x ln x complet proof y bartal j w byer d raz feasibl recal algorithm maintain invari dual feasibl achiev prior increas fact dual feasibl end phase j j next prove j primal feasibl throughout execut algorithm use claim help perform induct proof conveni treat initi increas j initi valu iter everi iter feasibl i throughout execut algorithm prove two claim simultan induct iter algorithm proof let first step prove claim hold iter sinc also impli claim hold iter consid subsequ iter let v denot chang variabl v iter j y j j rate increas iter i final inequ hold induct hypothesi claim complet proof claim complet proof claim consid two case separ first consid valu prior iter proof iter give desir result next consid prior iter fix fix j j that fact choic e henc j ij definit increas rule algorithm never increas valu primal variabl fact primal variabl j increas iter therefor increas iter remain smaller induct hypothesi complet proof proof approxim ratio turn bound approxim ratio obtain algorithm state first half theorem r lnm algorithm produc feasibl r approxim optimum primal linear program solut use notat y j denot aggreg chang valu cours iter similar notat variabl begin follow lemma fast approxim algorithm posit lp lemma everi iter proof claim follow use inequ e z prior given iter let set indic primal variabl activ upcom iter ie variabl j whose valu increas iter recal variabl j may increas sever time phase lemma follow follow sequenc inequ final inequ hold definit s state prove next lemma requir precis descript notat consid chang valu dual variabl x cours phase proof let x denot sum x end current phase let x denot sum x end previou phase ie scale down let x denot chang sum x cours current phase defin x minimum dual feasibl solut obtain end phase let yl primal feasibl solut obtain end final phase fact claim respect impli x dual feasibl yl primal feasibl conjunct lemma below impli approxim result state claim linear program dualiti lemma proof prove lemma two separ case first easi case initi primal feasibl solut close approxim optimum second repeatedli appli lemma bound ratio x yl let x denot valu x initi j s y bartal j w byer d raz valu x first phase similarli let xl denot valu dual solut end final phase case i xl r let denot valu primal solut end first phase appli lemma iter compris first phase give sinc valu primal feasibl solut increas monoton throughout cours algorithm lemma hold follow sequenc inequ case ii xl r valu x scale factor follow end phase earlier definit impli that x rewrit express appli inequ e z use x x appli lemma yield l initi valu valu last phase algorithm ie l f use bound repeatedli compar xl x give us sinc xl dual feasibl optim solut bound by normal form program xl also note assumpt r lnm r use fact conjunct fact xl r use bound observ get e r r r r r final inequ hold substitut use therefor get yl conclud proof lemma case ii fast approxim algorithm posit lp run time algorithm provid far follow run time bound slightli weaker state theorem weaker bound present sinc natur translat time bound preced analysi extend directli distribut algorithm present section prove bound provid simpl improv appli sequenti case use give time bound state theorem sequenti algorithm run rnm r r time proof bound number phase measur chang increas factor per phase definit figur use fact final equal that log f r r r r bound number iter phase comput maximum number iter need increas j valu given j say j larg j ln show j larg j therefor j longer particip phase let set ik k ln initi everi iter increas factor therefor number iter j particip j becom larg log fact o use fact anoth applic fact bound number iter phase by r r r r note term r r cannot remov sinc r valu satisfi r lnm multipli earlier bound number phase use fact iter comput onm time complet proof claim prove time bound state second half theorem need give sequenti algorithm complet nm ln m r time run y bartal j w byer d raz time achiev algorithm perform exactli one iter per phase sequenti case accomplish increas candid j mere multipl factor per iter increas amount caus j reach valu directli note procedur straightforward implement sequenti case distribut case improv caus phase termin singl iter claim still hold the claim unaect achiev time bound state theorem distribut model consid follow model spirit papadimitri yannakaki distribut agent gener approxim solut posit linear program standard form present section associ primal agent n primal variabl j dual agent dual variabl x agent respons set valu associ variabl i j ij say dual agent primal agent j neighbor distribut round comput agent may broadcast fixeds messag neighbor ie one round primal agent j may broadcast one messag set dual neighbor dual agent may broadcast one messag set primal neighbor fix number round agent must choos feasibl valu variabl minim in case primal approxim ratio opt opt valu optim solut lp studi tradeo number round qualiti approxim ratio obtain applic flow control network perflow queu motiv follow map model primal agent dual agent n connect transmit data along fix path network connect correspond primal agent path travers order subset router compris network router correspond dual agent given time step t connect j transmit given rate network therebi establish valu j t primal variabl new flow valu stabil router use local load set valu primal variabl x t base simpl function the sum valu dual variabl along path sourc use control inform comput new flow valu comput sum connect transmit fixedlength control messag loop router along path back sourc mention earlier simpl natur model commun connect router correspond model previous suggest practic theoret studi flow control router capac c may share among connect util it connect accru benefit b j everi unit endtoend capac receiv therefor connect act primal agent router act dual agent follow posit linear program fast approxim algorithm posit lp routeriniti routerupd send routeriniti all routerupd all j j end phase activ connect call routerupd od end phase od fig distribut algorithm router clearli posit linear program convert standard form local oper synchron model round take time equal maximum roundtrip time experienc connect network howev synchron assumpt subsequ relax chang algorithm propos final note messag size use implement bound number bit polynomi log m log distribut approxim algorithm sever addit complic must address definit descript distribut algorithm provid figur router connect respect sinc global oper cannot perform ecient connect router must abl independ comput valu paramet describ serial implement case paramet fix valu the number node network paramet aect approxim ratio r assum valu known advanc connect router assum n number connect global known sequenti case knowledg paramet requir initi variabl j satisfi claim distribut set connect j instead comput local estim n comput two distribut round use initi satisfi claim final paramet use convert program normal form may global known case linear program cannot normal ecient approxim solv program distribut set add consider complex defer provid techniqu section connect router commun use messagepass model describ y bartal j w byer d raz send ii j send read ii j defin figur phase counter f iter counter within phase od end phase od output j termin fig distribut algorithm connect j section serial algorithm agent track time term phase it erat transmit valu variabl use send primit agent timestamp transmiss current phase number p iter t like wise receiv valu variabl use read primit agent specifi phase number p iter t wait receiv appropri valu simplic assum control messag reliabl flow path although practic retransmiss would like necessari also strict altern primal dual round elimin possibl deadlock implement messagepass primit enabl control altern connect router local level say control global synchron fact instant time connect separ area network might even work phase howev case given router work singl phase instant time therefor connect router current work phase either activ work phase idl await permiss proceed phase asid messagepass technic obstacl convert central algorithm distribut algorithm condit end phase central algorithm phase termin min k k sinc cannot hope track valu global express distribut model instead let connect j check whether j local independ condit satisfi connect j termin phase increment phase number inform neighbor router analysi feasibl bound qualiti approxim ident central algorithm case valu fast approxim algorithm posit lp primal variabl time correspond connect complet phase satisfi condit place primal variabl phase central implement similar statement hold respect valu dual variabl time correspond router complet phase i statement hold primal dual variabl independ irrespect fact phase complet time may occur uniformli across network distribut run time follow corollari claim hold corollari distribut algorithm run r r round distribut techniqu convert special form recal convert program standard form normal form divid constraint amax therebi set amin bound valu amax min known advanc exampl connect router bound min max valu edg capac benefit coecient estim bound may global known moreov valu impact run time algorithm depend valu entri matrix show solv problem standard form reduc solv problem special form similar form use lubi nisan valu depend aect approxim ratio obtain significantli aect run time algorithm moreov transform done distribut constant number round without global knowledg amax min precondit transform lp z standard form lp z special form gener feasibl solut z valu c approxim valu optim solut z within factor c opt c precondit satisfi perform follow transform bound valu ij z note valu depend extent bound valu lp rel valu constraint which could small c perform follow transform oper constraint c c otherwis transform lp follow properti y j primal feasibl solut z otherwis primal feasibl z j y j primal feasibl z primal feasibl z properti clearli true two properti requir short proof below y bartal j w byer d raz proof of properti take feasibl solut y j z let y j specifi fix valu i final inequ hold feasibl solut y j solut y feasibl z valu solut satisfi first inequ hold fact feasibl y j second inequ hold bound number router network final inequ hold definit proof of properti take feasibl solut y j z let y j specifi fix valu i c c c c final line hold bound optim solut z c solut feasibl gener approxim solut z perform transform special form comput use fast approxim algorithm posit lp algorithm transform solut y j use transform describ properti get primal feasibl solut lp that first inequ properti second base fact y j approxim valu z denot opt final inequ properti next need explain choos paramet c guarante precondit c opt c recal j denot set edg incid connect j denot set connect incid edg ki l kl quantiti local comput one round router i also let connect j defin rel easi show first inequ hold primal feasibl solut connect j use evalu minimum assign flow second inequ hold dual feasibl solut router assign weight x therefor set sequenti implement give nm lnmr r run time approxim distribut set sequenti case knowledg enough perform transform special form connect router may know valu describ techniqu distribut subdivid lp subprogram base local estim valu subprogram bound work special form then recombin solut way assign nonzero rate connect good estim prove reduc sum rate small factor defin set g q integ t clear connect belong exactli p set independ valu q router assign flow connect member g q iq minim valu g q nonempti eect mean algorithm run network p success time connect point view run p success algorithm use j approxim p trial reject ie given flow router final flow assign connect j averag flow given p independ trial prove procedur decreas sum rate addit factor y bartal j w byer d raz defin optx valu modifi lp flow assign connect set x dicult show optg q bound m thu set g q special form modifi lp connect g q satisfi precondit m therefor lp use turn bound approxim ratio consid particular q p let q uniqu integ interv defin g q q q dual feasibl set x g q iii l lg q impli opt g q q qualiti solut obtain therefor bound byp put everyth togeth distribut algorithm assum global knowledg approxim paramet r algorithm find primal feasibl r approxim optim solut termin r distribut round discuss studi problem distribut decisionmak local inform gener feasibl solut posit linear program result explor tradeo amount local commun agent may perform qualiti solut obtain measur approxim ratio provid algorithm obtain approxim ratio polylogarithm number distribut commun round prove nontrivi lower bound run time need obtain approxim remain open question challeng problem provid fast approxim algorithm gener linear program acknowledg would like thank christo papadimitri stimul discuss use insight formul stage work also thank dick karp mike lubi dorit hochbaum anonym sicomp refere help comment earlier version result present paper fast approxim algorithm posit lp r converg complex optimist rate base flow control algorithm local optim global object competit distribut deadlock resolut resourc alloc throughput competit onlin rout converg approxim maxmin flow fair logarithm time achiev global object use local inform applic flow control data network potenti function method approxim solv linear program prob lem theori practic ratebas flow control framework avail bit rate atm servic maxim throughput reliabl bulk network transmiss algorithm rate alloc packetswitch network feedback faster simpler algorithm multicommod flow fraction pack problem distribut graph algorithm global solut local data optim flow control i basic algorithm converg parallel approxim algorithm posit linear program linear program without matrix fast approxim algorithm fraction pack cover problem tr