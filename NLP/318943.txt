t effici pointsto analysi wholeprogram analysi a function program written languag c make extens use pointer autom softwar engin tool requir safe alia inform exist aliasanalysi techniqu suffici effici analysi larg softwar system may provid alia inform imprecis tool use it imprecis alia inform may reduc precis inform provid tool increas cost tool paper present flowinsensit contextsensit pointsto analysi algorithm comput alia inform almost precis comput andersen algorithm precis flow contextinsensit algorithm almost effici steensgaard algorithm effici flow contextinsensit algorithm empir studi show algorithm scale larg program better andersen algorithm show flowinsensit alia analysi algorithm algorithm andersen algorithm comput alia inform close precis comput expens flow contextsensit alia analysi algorithm b introduct mani autom tool propos use softwar engin function program written languag c make extens use pointer tool requir alia inform determin set memori locat access derefer pointer variabl atkinson griswold discuss issu must consid integr alia inform wholeprogram analysi tool argu that effect appli tool larg program aliasanalysi algorithm must fast thu propos approach use steensgaard algorithm flow contextinsensit aliasanalysi algorithm run nearlinear time provid flowsensit algorithm consid order statement program flowinsensit algorithm not contextsensit algorithm consid legal callreturn sequenc procedur program contextinsensit algorithm not alia inform tool howev experi show that mani case steensgaard algorithm comput imprecis alia inform imprecis advers impact perform wholeprogram analysi wholeprogram analysi affect imprecis alia inform two way first imprecis alia inform decreas precis inform provid wholeprogram analysi preliminari experi show size slice comput use alia inform provid steensgaard algorithm almost ten percent larger size slice comput use precis alia inform provid landi ryder algorithm flowsensit contextsensit aliasanalysi algorithm sec ond imprecis alia inform greatli increas cost wholeprogram analysi empir studi show take slicer five time longer comput slice use alia inform provid steensgaard algorithm comput slice use alia inform provid landi ryder algorithm similar result report result indic extra time requir perform wholeprogram analysi less precis alia inform might exceed time save alia analysi steensgaard algorithm one way improv effici wholeprogram analysi tool use precis alia inform precis alia inform provid flowsensit contextsensit algorithm eg potenti larg number iter requir algorithm howev make costli time space thu expens applic larg program andersen algorithm anoth flowinsensit contextinsensit aliasanalysi algorithm provid precis alia inform steensgaard algorithm less cost flowsensit contextsensit al gorithm algorithm howev may requir iter among pointerrel assign on program size requir entir program memori analysi thu algorithm may still expens time space applic larg program approach provid alia inform suffici precis use wholeprogram analysi maintain effici incorpor callingcontext flowinsensit aliasanalysi algorithm comput procedur alia inform hold statement proce dure algorithm three phase first phase algorithm use approach similar steensgaard process pointerrel assign comput alia inform procedur program second phase algorithm use bottomup approach propag alia inform call procedur calle call procedur caller final third phase algorithm use topdown approach propag alia inform caller calle pointerrel assign statement chang valu pointer variabl futur work includ extend algorithm handl function pointer use approach similar discuss refer paper present aliasanalysi algorithm main benefit algorithm effici comput alia solut high precis like steensgaard algorithm algorithm effici provid safe alia inform process pointerrel assign onc howev algorithm comput separ pointsto graph procedur singl procedur typic contain pointerrel variabl as signment algorithm comput alia set much smaller comput steensgaard algorithm provid alia inform almost precis comput andersen algorithm anoth benefit algorithm modular procedur stronglyconnect compon call graph memori thrice phase algorithm suitabl andersen analyz larg program paper also present set empir studi investig a effici precis three flowinsensit algorithm algorithm steensgaard algorithm andersen algorithm landi ryder flowsensit algorithm b impact alia inform provid four algorithm wholeprogram analysi studi show number interest result program studi algorithm andersen algorithm comput solut close precis comput flow contextsensit algorithm program andersen algorithm requir larg amount time algorithm comput alia inform time close steen gaard algorithm thu may scale larg program better an dersen algorithm alia inform provid algorithm andersen algorithm landi ryder algorithm greatli reduc cost construct systemdepend graph perform dataflow base slice algorithm almost effect andersen algorithm landi ryder algorithm improv perform construct system depend graph perform dataflow base slice result indic algorithm provid suffici precis alia inform wholeprogram analysi effici way thu may effect algorithm among four support wholeprogram analysi larg program flowinsensit contextinsensit aliasanalysi algorithm flowinsensit contextinsensit aliasanalysi algorithm comput alia inform hold everi program point algorithm process pointer relat assign program arbitrari order replac call statement set assign repres bind actual paramet formal paramet algorithm comput safe alia inform point relat pointerrel assign set locat point int incr_ptrint ptr return ptr incr_ptr buf p input ptr buf q r incr_ptr buf p input ptr buf q r incr_ptr buf p input ptr buf q r int input a input input input h_ h_ incr_ptr ptr input buf buf q r incr_ptr ptr input buf buf q r incr_ptr ptr input buf buf q r b input input c fig exampl program a pointsto graph use steensgaard algorithm b pointsto graph use andersen algorithm c lefthand side superset set locat point righthand side view steensgaard algorithm andersen algorithm build pointsto graph vertic pointsto graph repres equival class memori locat ie variabl heapalloc object edg repres pointsto relat among locat steensgaard algorithm forc locat point pointer equival class and process pointerrel assign forc lefthand righthand side assign point equival class use method new pointerrel assign process pointsto graph remain safe previouslyprocess pointer relat assign method let steensgaard algorithm safe estim alia inform process pointerrel assign onc figur b show variou stage construct pointsto graph exampl program figur a use steensgaard algorithm top graph label b show pointsto graph initi stage pointer except input point empti equival class steensgaard point graph similar alia graph algorithm process statement merg equival class point input equival class point p merg equival class illustr dot box steensgaard algorithm process statement similarli merg equival class illustr dash box algorithm process statement simul bind paramet return valu assign shown solid box figur middl graph label b show pointsto graph steensgaard algorithm process main repres object return malloc steensgaard algorithm process statement use h hstatement numberi bottom graph label b show pointsto graph steensgaard algorithm process entir program graph illustr steensgaard algorithm introduc mani spuriou pointsto relat andersen algorithm use vertex repres one memori locat algorithm process pointerrel assign ad edg forc lefthand side point locat pointsto set righthand side exampl algorithm process statement add edg forc p point input ad edg way howev may caus alia inform previouslyprocess pointerrel assign unsaf is pointsto set ss lefthand side superset pointsto set ss righthand side provid safe solut andersen algorithm iter previous process pointerrel assign pointsto graph provid safe alia solut figur c show variou stage construct pointsto graph use andersen algorithm exampl program top graph label c show pointsto graph construct andersen algorithm process main algorithm process statement simul bind paramet use assign shown solid box middl graph label c show pointsto graph andersen algorithm process statement algorithm forc h point buf caus alia inform unsaf statement provid safe solut andersen algorithm process statement again subsequ requir statement reprocess bottom graph label c show complet solut graph illustr andersen algorithm comput smaller pointsto set steensgaard algorithm pointer variabl howev andersen algorithm requir step steensgaard algorithm flowinsensit contextsensit pointsto analysi algorithm flowinsensit contextsensit pointsto analysi algorithm fic comput separ alia inform procedur program section first present definit use discuss algorithm next give overview algorithm discuss detail algorithm input buf r buf input buf r buf input buf r buf incr_ptr ptr incr_ptr buf buf global global buf buf ptr incr_ptr ptr incr_ptr phase phase phase input input buf buf buf buf buf incr_ptr incr_ptr buf fig pointsto graph construct fic algorithm definit refer memori locat program object name consist variabl possibl empti sequenc derefer field access say object name n extend anoth object name construct appli possibl empti sequenc derefer field access n case denot n e hn i n formal paramet object name actual paramet bound n call site c defin function c return object name e hai n global c return e hni exampl suppos p pointer point struct field in c languag e hpi lambdap e hlambdapi p e a hpi lambdapa anoth exampl p formal paramet function f lambdaq actual paramet bound p call site c f c lambdapa return qa extend pointsto graph repres structur variabl field access edg label field name connect vertex repres structur vertex repres field structur pointsto edg label repres pointsto relat pointsto graph label uniqu among edg leav vertex given object name n fic find access path phngi pointsto graph g first fic locat creat vertex n g n s variabl correspond then fic locat creat sequenc vertic path g label edg p match sequenc derefer field access n refer n k end vertex phngi associ vertex n g denot n k vhn gi note set memori locat associ vhn gi set memori locat alias n overview fic comput separ alia inform procedur use pointsto graph fic first comput pointsto graph gp procedur p process pointerrel assign p use approach similar steen gaard algorithm none pointer variabl appear p global variabl formal paramet none pointer variabl use actual paramet gp safe estim alia inform p how ever pointer variabl appear p global variabl formal paramet pointer variabl use actual paramet pointerrel assign procedur also introduc alias relat variabl gp must process captur alias three case pointerrel assign procedur introduc alias relat pointer variabl appear p first case pointerrel assign anoth procedur forc e hgi g global variabl appear p alias memori lo cation fic consid order statement must assum alia pair hold throughout program thu fic must consid alia pair p exampl figur a statement forc lambdabuf alias h alia pair must propag main main use buf fic captur type alia pair gp two step comput global pointsto graph g glob estim memori locat alias possibl global object name program updat gp use alia inform repres g glob second case assign procedur call p forc e hf alias e hf i f formal paramet f either formal paramet global variabl the return valu function view formal paramet alia pair e hf ie hf i propag call procedur p forc c e hf i alias c e hf i call site c exampl figur a statement function incr ptr forc lambdaincr ptr alias lambdaptr alia pair propag back main forc lambdar alias lambdaq fic map alia pair relat formal paramet alia pair relat actual paramet updat gp alia pair actual paramet third case assign procedur call p forc locat l alias e hai actual paramet bound f call site c p alia pair propag p forc e hfi alias l exampl statement forc lambdap input alia pair main figur propag incr ptr statement forc lambdaptr input alia pair fic propag type alia pair call procedur p updat gp fic three phase phase process pointerrel assign procedur initi build pointsto graph procedur phase phase handl three case discuss abov phase propag alia inform call procedur call procedur also build pointsto graph global variabl use alia inform avail far procedur phase process procedur revers topolog bottomup order stronglyconnect compon call graph within stronglyconnect compon phase iter procedur pointsto graph procedur stabil phase propag alia inform pointsto graph global variabl proce dure phase also propag alia inform call procedur call procedur phase process procedur topolog top down order stronglyconnect compon call graph phase iter procedur compon pointsto graph procedur stabil fic propag inform call procedur call procedur phase propag inform call procedur call procedur phase never propag inform invalid callreturn sequenc therefor fic contextsensit bottom graph figur depict pointsto graph comput fic exampl program figur graph show that use fic variabl divid equival class differ pointsto graph differ procedur exampl incr ptr h h input one equival class howev main input differ equival class h h fic creat separ pointsto graph main init incr ptr comput precis alia solut steensgaard algorithm exampl program graph also show fic comput smaller pointsto set p q andersen algorithm consid callingcontext solut comput andersen algorithm p must point locat point incr ptr call context solut comput fic p point locat point incr ptr incr ptr invok statement call context incr ptr point input algorithm descript figur show fic input p program analyz output l list pointsto graph one procedur one global variabl phase creat pointsto graph individu procedur first phase line fic process pointerrel assign procedur p p comput pointsto graph gp fic first find creat gp pointerrel assign rh then algorithm use merg variant join oper steensgaard algorithm merg v v one vertex merg also merg successor v v properli label uniqu among edg leav new vertex phase fic ignor call site except call site memoryalloc function call site algorithm use h hstatement numberi repres object return function final fic add p w w add gp l algorithm fic input p program analyz output l list pointsto graph one procedur one global variabl declar gp list procedur sort reversetopolog stronglyconnect compon call graph list procedur sort topolog stronglyconnect compon call graph begin fic foreach procedur p p phase foreach pointerrel assign lh rh find creat v lh v rh gp mergegp endfor l endfor w oe phase remov procedur head w foreach call site c p j p bindactualsc gp endfor bindglobalglobalsgp g glob gp bindlocglobalsgp gp updat foreach p s caller pk pk w add pk w endif endfor endif endwhil w oe phase remov procedur head w foreach call site c p p j endfor gp j updat foreach p j s calle p l p l w add p l w endif endfor endif endwhil fig fic flowinsensit contextsensit aliasanalysi algorithm pointsto graph top figur construct fic first phase main left init middl incr ptrright exampl program note pointsto relat introduc init pointsto relat buf h yet repres main pointsto graph follow two phase fic gather alia inform calle caller p build gp phase comput alias introduc callsit creat global pointsto graph second phase line procedur p fic comput alias introduc p s call site call site c procedur call bind find alia pair e hf ie hf i f p j s formal pointer paramet use depthfirst search gp j search begin vertic associ p j s formal paramet pointer type look possibl pair phe hf vertex impli e hf alias e hf i bind map type alia pair back p captur alia pair gp merg end vertic pha c e hf i gp pha c e hf i gp gp exampl fic call bind process call site statement figur bind find alia pair lambdaptr lambdaincr ptr g incr ptr then substitut ptr q incr ptr r creat alia pair lambdaq lambdar merg also search phe hfi gp j phe hgi gp j i f formal pointer paramet g global variabl end vertex similarli bind merg end vertic pha c e hfi gp phe hgi gp gp phase fic also call bindglob comput global pointsto graph g glob alia inform p bindglob find alia pair global variabl use depthfirst search gp search begin associ vertic global variabl gp look pair access path phe hg one vertex bindglob merg end vertic phe hg phe hg exampl fic process main phase call bindglob search g main find p hlambdabuf p hlambdabuf g main end vertex thu fic merg v hlambdabuf v hlambdabuf g glob i fic also comput memori locat alias e hgi g global locat l equival class repres vhe hgi gp i alia pair fic call bindloc look vhe hgi gp use depthfirst search locat l associ vhe hgi gp i merg vhl g glob vhe hgi g glob captur alia pair exampl fic process init phase merg vhh g glob v hlambdabuf associ i phase g glob complet phase comput alias introduc call environ third phase line fic comput set locat repres vertic gp j complet comput gp j fic first comput locat vertic gp j g glob let g global variabl appear gp j fic call bindloc look vhe hgi gp j use depthfirst search bindloc copi memori locat vhe hgi g glob vhe hgi gp j i exampl fic process main exampl figur copi h h fic also comput locat vertic gp j gp given p call p j call site c suppos bound formal paramet f c fic call bindloc copi locat vhe hai gp vhe hfi gp j captur fact alias locat e hai also alias e hfi exampl fic copi input v hlambdap g main v hlambdaptr g incr ptr p bound ptr statement phase set memori locat repres vertex complet complex fic algorithm theoret possibl construct program p o n distinguish locat n size p make aliasanalysi algorithm discuss paper exponenti time space size p practic howev total distinguish locat p on structur p typic limit number field let p number procedur p worstcas actual size pointsto graph comput procedur space complex fic op n absenc recurs procedur p process phase thu bind bindglob bindloc invok onumofcal time presenc recurs singl chang gp might requir one propag p s caller one propag p s calle gp chang os time thu bind bindglob bindloc invok onumofcallp s time pointsto graph implement fast findunion structur invoc bind bindglob bindloc requir os find oper fast findunion structur size op s let n numofcal absenc recurs n numofcal presenc recurs time complex fic on sp sffn ff invers ackermann function practic expect numofcal on thu expect run fic time almost linear size program practic empir studi investig effici precis fic impact wholeprogram analysi alia inform variou precis level perform sever studi compar algorithm steensgaard algorithm st andersen algorithm and landi ryder algorithm lr use prolang analysi framework paf implement pointsto graph fic steensgaard algorithm ander sen algorithm use implement landi ryder algorithm provid paf none implement handl function pointer setjumplongjump construct lefthand side tabl give inform subset subject program use studi allow algorithm captur alias introduc call librari function creat set stub simul effect function alias howev creat stub function would introduc alias call function becaus preliminari studi observ use stub forc steensgaard algorithm introduc mani addit pointsto relat exampl dixi detail complex analysi fic found twmc moria use studi slicer requir hour time limit set slice collect data tabl subject program time second comput alia solut line number number number program code cfg node procedur pra st fic lr loader ansitap dixi learn smail simul flex space bison larn mpeg play espresso moria use stub function would introduc alias call fic com pute averag thruderef mod wherea use stub comput averag thruderef mod see studi studi studi compar perform precis steensgaard algorithm fic andersen algorithm landi ryder algorithm subject program record time requir comput alia inform time averag number locat modifi derefer righthand side tabl show run time algorithm subject program collect data run system sun ultra workstat mb physic memori mb virtual memori tabl show that subject program flowinsensit algorithm run significantli faster landi ryder algorithm tabl also show that small program fic andersen algorithm run time close steensgaard algorithm howev larg program andersen algorithm take larg amount time fic still run time close steensgaard algorithm result suggest that larg program fic effici time andersen algorithm figur show averag number thruderef mod four algorithm graph show that mani program steensgaard algorithm comput imprecis alia inform might limit applic dataflow analys graph also show that subject program fic comput alia solut thruderef mod close comput andersen algorithm smail espresso fic comput smaller thrud mod andersen algorithm two program function similar incr ptr figur andersen algorithm lose precis consid call context graph show data landi ryder algorithm avail seven program analysi requir hour limit set analysi fig thruderef mod subject program tabl averag number summari edg s per call averag time t second comput summari edg call system depend graph raw data steensgaard program st fic lr fic lr loader ansitap dixi learn unzip smail simul flex space bison larn mpeg play solut comput fic andersen algorithm close comput landi ryder algorithm result suggest that mani dataflow problem alias obtain use fic andersen algorithm might provid suffici precis note that landi ryder algorithm use klimit techniqu collaps field structur handl recurs data structur pointsto set pointer p comput landi ryder algorithm may contain locat pointsto set p comput three flowinsensit algorithm thu andersen algorithm provid smaller alia solut landi ryder algorithm loader space studi studi investig impact alia inform provid four algorithm size cost construct one program represent systemdepend graph studi averag number summari edg per call cost comput summari edg system depend graph summari edg comput slice procedur respect memori locat modifi procedur use harrold ci slicer thu time requir comput summari edg might differ time requir comput summari edg use method eg nevertheless approach provid fair way compar cost comput summari edg use alia inform differ precis level tabl show result studi obtain result sun ultra workstat mb physic memori gb virtual memori tabl show use precis alia inform provid fic andersen algorithm landi ryder algorithm effect reduc averag number summari edg per call time comput summari edg construct systemdepend graph tabl show that subject program use alia inform provid fic almost effect use alia inform provid andersen algorithm algorithm even effect andersen algorithm espresso algorithm comput smaller pointsto set pointer variabl result suggest fic prefer andersen algorithm build systemdepend graph larg program fic run significantli faster andersen algorithm larg program studi studi investig impact alia inform provid four aliasanalysi algorithm size slice cost comput slice obtain slice run harrold ci slicer slice criterion interest without store reus inform tabl show result studi obtain result sun ultra workstat mb physic memori gb virtual memori tabl show that subject program use precis alia inform comput steensgaard algorithm significantli reduc time comput slice tabl also show that four program use precis alia inform significantli reduc size slice four program illustr except conclus drawn shapiro horwitz size slice hardli affect precis alia inform note five program slicer comput larger slice use alia inform provid landi ryder algorithm use provid fic andersen algorithm pointsto set comput landi ryder algorithm pointer p contain memori locat pointsto set comput steensgaard fic andersen algorithm p tabl show use alia inform systemdepend graph use slice program comput summari edg expens part construct graph similar result time report steensgaard shapiro andersen algorithm compar tabl averag size slice s averag time t second comput slice raw data steensgaard program st fic lr fic lr loaderi ansitapey dixiey learni unzipi smaili simulatori flexz spacez bisonz larnz mpeg playz espressoz data collect slice program z data collect one slice provid fic almost effect use alia inform provid andersen algorithm comput slice support conclus fic prefer andersen algorithm wholeprogram analysi relat work mani dataflow analysi algorithm eg includ fic use twophas interprocedur analysi framework first phase inform propag call procedur call procedur call statement encount summari call procedur use avoid propag inform call procedur second phase inform propag call procedur call procedur recent chatterje et al use unknown initi valu paramet global variabl summari procedur comput flowsensit alia analysi then use twophas interprocedur analysi framework comput flow contextsensit alia inform although algorithm improv worst case complex landi ryder algorithm comput alia inform precis still costli practic furthermor comparison two algorithm report known much chatterje et al algorithm outperform landi ryder algorithm number attempt design algorithm comput alia inform effici close steensgaard algorithm precis close andersen algorithm shapiro horwitz propos method divid program variabl k categori allow variabl belong categori equival class thu similar fic method comput smaller equival class provid smaller pointsto set pointer variabl steensgaard algorithm fic differ method howev use independ set equival harrold rothermel use similar approach class procedur thu fic benefit fact procedur refer small set program variabl fic also differ method fic contextsensit inform propag invalid callreturn sequenc final fic differ shapiro horwitz algorithm fic handl field structur wherea al gorithm assign field structur treat assign structur last differ difficult compar experiment result their howev experiment result report refer appear that averag fic comput alia inform closer andersen precis algorithm conclus present flowinsensit contextsensit pointsto analysi algorithm conduct sever empir studi c program compar algorithm aliasanalysi algorithm empir result show that although steensgaard algorithm fast alia inform comput algorithm imprecis use wholeprogram analysi empir result show use precis alia inform provid algorithm andersen algorithm landi ryder algorithm effect improv precis reduc cost wholeprogram anal ysi howev empir result also show andersen algorithm landi ryder algorithm could costli analyz larg program contrast empir result show algorithm comput alia inform almost precis comput andersen algorithm run time within six time steensgaard algorithm thu algorithm may effect algorithm support wholeprogram analysi futur work includ perform addit empir studi especi larg subject program compar algorithm alia analysi algorithm also conduct studi see imprecis alia inform comput algorithm affect variou wholeprogram analys acknowledg work support part grant microsoft inc nsf nyi award ccr ess award ccr ohio state univers thank anonym review made mani help suggest improv present paper r program analysi special c program lan guag effect wholeprogram analysi presenc pointer relev context infer program languag research group separ comput alia inform reus effici comput interprocedur definitionus chain interprocedur slice use depend graph safe approxim algorithm interprocedur pointer alias effect precis pointer analysi fast accur flowinsensit pointsto analysi effici contextsensit pointer analysi c program program decomposit pointer analysi step toward practic analys tr interprocedur slice use depend graph safe approxim algorithm interprocedur alias effici comput interprocedur definitionus chain contextsensit interprocedur pointsto analysi presenc function pointer effici contextsensit pointer analysi c program separ comput alia inform reus pointsto analysi almost linear time program decomposit pointer alias fast accur flowinsensit pointsto analysi effect wholeprogram analysi presenc pointer relev context infer reusedriven interprocedur slice flowinsensit interprocedur alia analysi presenc pointer effect presis pointer analysi pointsto analysi type infer program structur union ctr donglin liang maikel pen mari jean harrold evalu precis static refer analysi use profil acm sigsoft softwar engin note v n juli atana rountev satish chandra offlin variabl substitut scale pointsto analysi acm sigplan notic v n p may donglin liang mari jean harrold lightweight context recoveri effici accur program analys proceed nd intern confer softwar engin p june limerick ireland manuel fhndrich jakob rehof manuvir da scalabl contextsensit flow analysi use instanti constraint acm sigplan notic v n p may manuvir da unificationbas pointer analysi direct assign acm sigplan notic v n p may donglin liang maikel pen mari jean harrold extend evalu flowinsenstit contextinsensit pointsto analys java proceed acm sigplansigsoft workshop program analysi softwar tool engin p june snowbird utah unit state donglin liang mari jean harrold equival analysi gener techniqu improv effici dataflow analys presenc pointer acm sigsoft softwar engin note v n p sept marku mock manuvir da craig chamber susan j egger dynam pointsto set comparison static analys potenti applic program understand optim proceed acm sigplansigsoft workshop program analysi softwar tool engin p june snowbird utah unit state ana milanova atana rountev barbara g ryder precis call graph c program function pointer autom softwar engin v n p januari jamieson m cobleigh lori a clark leon j osterweil right algorithm right time compar data flow analysi algorithm finit state verif proceed rd intern confer softwar engin p may toronto ontario canada marku mock darren c atkinson craig chamber susan j egger program slice dynam pointsto set ieee transact softwar engin v n p august david j pearc paul h j kelli chri hankin effici fieldsensit pointer analysi c proceed acmsigplansigsoft workshop program analysi softwar tool engin june washington dc usa marku mock darren c atkinson craig chamber susan j egger improv program slice dynam pointsto data acm sigsoft softwar engin note v n novemb marku mock darren c atkinson craig chamber susan j egger improv program slice dynam pointsto data proceed th acm sigsoft symposium foundat softwar engin novemb charleston south carolina usa donglin liang mari jean harrold equival analysi applic improv effici program slice acm transact softwar engin methodolog tosem v n p juli sigmund cherem radu rugina region analysi transform java program proceed th intern symposium memori manag octob vancouv bc canada ami l souter lori l pollock omen strategi test objectori softwar acm sigsoft softwar engin note v n p sept michael hind anthoni pioli pointer analysi use acm sigsoft softwar engin note v n p sept chri lattner andrew lenharth vikram adv make contextsensit pointsto analysi heap clone practic real world acm sigplan notic v n june brian hackett radu rugina regionbas shape analysi track locat acm sigplan notic v n p januari g ryder safe approxim algorithm interprocedur pointer alias acm sigplan notic v n april alessandro orso saurabh sinha mari jean harrold classifi data depend presenc pointer program comprehens test debug acm transact softwar engin methodolog tosem v n p april sandrin blazi specifi automat gener special tool fortran autom softwar engin v n p decemb jongdeok choi manish gupta mauricio j serrano vugranam c sreedhar samuel p midkiff stack alloc synchron optim java use escap analysi acm transact program languag system topla v n p novemb chri lattner vikram adv automat pool alloc improv perform control data structur layout heap acm sigplan notic v n june david binkley mark harman analysi visual predic depend formal paramet global variabl ieee transact softwar engin v n p novemb martin hirzel daniel von dincklag amer diwan michael hind fast onlin pointer analysi acm transact program languag system topla v n pe april michael hind pointer analysi solv problem yet proceed acm sigplansigsoft workshop program analysi softwar tool engin p june snowbird utah unit state david binkley nicola gold mark harman empir studi static program slice size acm transact softwar engin methodolog tosem v n pe april david j pearc paul h j kelli chri hankin onlin cycl detect differ propag applic pointer analysi softwar qualiti control v n p decemb barbara g ryder william a landi philip a stock sean zhang rita altuch schema interprocedur modif sideeffect analysi pointer alias acm transact program languag system topla v n p march baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v n march