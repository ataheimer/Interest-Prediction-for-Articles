t gener algorithm parallel sort product network a abstractw gener wellknown oddeven merg sort algorithm origin due batcher show gener algorithm appli sort product networksif g arbitrari factor graph n node rdimension product contain nr node algorithm sort nr key store rdimension product g orfn time fn depend g show that factor graph g fn is most on establish upper bound orn time complex sort nr key product networkfor product network bound r eg grid lead asymptot complex on sort nr key optim sever instanc product network factor graph fnorm logn lead asymptot run time orm logn sort nr key network bound n eg hypercub asymptot complex becom orw show appli algorithm sever case wellknown product network well other introduc recent compar perform algorithm wellknown algorithm develop specif network well other result comparison led us conjectur propos algorithm probabl best determinist algorithm found term low asymptot complex small constant b introduct recent increas interest product network literatur partli due eleg mathemat structur product network partli due fact sever wellknown network hypercub grid tori instanc famili product network mani instanc product network propos recent product de bruijn network product petersen graph meshconnect tree which product complet binari tree gener class rout properti product network studi topolog embed properti product network analyz paper asid gener studi algorithm import class network paper make attempt toward fill gap present gener sort algorithm product network first version algorithm present here well gener algorithm sever differ problem propos expect research eventu develop varieti addit algorithm product network batcher present two effici sort network algorithm deriv network present number differ parallel architectur like shuffl exchang network grid cubeconnect cycl mesh tree one batcher sort network ha main compon subnetwork sort biton sequenc biton sequenc concaten nondecreas sequenc key nonincreas sequenc key rotat sequenc sort algorithm base method gener call biton sorter sever paper devot gener biton sorter main compon sort network propos batcher subnetwork merg two sort sequenc singl sort sequenc call oddeven merg network sever paper gener network merg k sort sequenc k gener call kway merg network exampl green construct network base merg drysdal young tseng lee parker parberri lisza batcher lee batcher construct network base multiway merg similarli algorithm base multiwaymerg concept present commonli known leighton columnsort algorithm initi object algorithm show exist boundeddegre onnod network olog n time network permut phase hardwir sort done ak network limit applic practic purpos howev aggarw huang show possibl use columnsort basi appli recurs parker parberri network cite also base modif columnsort algorithm behav nice number key larg compar number processor paper develop anoth multiwaymerg algorithm merg sever sort sequenc singl sort sequenc key multiwaymerg oper deriv sort algorithm show use approach obtain effici sort algorithm homogen product network basic spirit multiwaymerg algorithm somehow similar recent version columnsort page although develop independ outperform columnsort due fundament differ interpret basic concept first algorithm base seri merg process recurs appli columnsort base seri sort step time use sort n key columnsort hand use sever recurs call order merg second observ fundement relationship structur properti product network definit sort order abl avoid rout step requir columnsort algorithm among main result paper show time complex sort n r key n r node rdimension product graph bound or n also illustr special case product network run time or on olog n sort n r key grid meshconnect tree bound number dimens algorithm run asymptoticallyoptim on time rdimension hypercub algorithm asymptot complex or batcher oddeven merg sort algorithm hypercub although asymptot faster sort algorithm hypercub practic use reason number less key note howev random algorithm perform better hypercub network batcher algorithm practic adapt approach product network appear interest problem futur research product de bruijn network approach yield asymptot complex or log n time sort n r key reduc olog n time number dimens fix run time obtain product shuffleexchang network also product shuffleexchang network equival comput power ie asymptot complex algorithm product de bruijn network run time asymptot complex sort n r key n r node de bruijn shuffleexchang network batcher algorithm final summar main contribut paper to effect implement sort algorithm homogen product network ffl obtain gener upper bound run time requir sort homogen product network regardless topolog factor network use build it ffl show that sever import instanc homogen product network upper bound deriv match run time mostpopular algorithm develop specif network paper organ follow section present basic definit notat use paper section present multiwaymerg algorithm show use sort section show implement multiwaymerg sort algorithm homogen product network analyz time complex section appli algorithm sever homogen product network obtain correspond time complex conclus paper given section figur recurs construct multidimension product network a factor twodimension product c threedimension product definit notat definit notat relat product network let g nnode connect graph defin rdimension homogen product follow given graph g vertex set arbitrari edg set eg rdimension homogen product g denot pg r graph whose vertex set v whose edg set e pgr defin follow two vertic adjac pg r follow condit true x differ exactli one symbol posit differ symbol index paper assum rtupl label node pg r index delta delta delta r refer rightmost posit index r refer leftmost posit index intuit level construct pg r pg g describ refer figur let x node pg rgamma let up g rgamma graph obtain prefix everi vertex x pg rgamma u vertex x becom ux first place vertic pg rgamma along straight line shown figur then draw n copi pg rgamma vertic ident label fall column next extend vertex label obtain up g rgamma final connect column interconnect pattern factor graph g ux connect u x u construct use up g rgamma refer uth copi pg rgamma explicitli state fact up g rgamma uth copi dimens r extend notat allow us add new symbol posit vertex label purpos use up g mean vertex label pg extend insert valu u posit i result symbol posit j move posit allow us observ construct preced paragraph could restat up g posit i leftmost posit convers obtain up g subgraph eras dimensioni edg pg r process repeat recurs describ simpl extens notat use u vpg ij rgamma refer subgraph isomorph pg rgamma obtain eras connect dimens j pg r particular subgraph obtain distinguish uniqu combin u v valu index posit j respect notat similarli extend eras arbitrari number dimens order valu squar bracket correspond order superscript definit properti sort order arbitrari factor graph g vertex label defin ascend order data sort howev need defin order node pg r determin final locat sort key order defin known snake order rdimension product graph pg r snake order correspond order use label node g r suppos snake order alreadi defin pg rgamma then a up g r order pg rgamma u even revers order u odd b valu up g r preced valu vp g r snake order product graph close relat graycod sequenc fundament properti two consecut term sequenc differ exactli one bit deal nari symbol instead binari symbol therefor need use nari graycod sequenc first recal definit ham distanc ham weight let s z rtupl f ham distanc z ds absolut valu ham weight rtupl allow one element rtupl special all symbol defin later symbol rtupl all symbol index posit omit whenev rtupl involv comput ham distanc ham weight say sequenc q r nari graycod sequenc order r element rtupl f two consecut element unit ham distanc consequ ham weight two consecut term differ pariti use rq r denot sequenc obtain list element q r revers order definit show one way construct nari graycod sequenc arbitrari order recurs let uq k denot sequenc obtain prefix element q k symbol u u even prefix element rq k u u odd definit nari graycod sequenc order r denot q r obtain concaten sequenc insid curli bracket note q r fact snake order defin vertic rdimension product network pg r exampl ari graycod sequenc order r are g note q r could defin insert valu u posit definit rather leftmost posit observ allow us use uq denot subsequ q r contain valu u posit i especi interest subsequ uq given u element subsequ posit u u on given observ ident relationship q r snake order node pg r follow pg r contain sequenc key sort snake order key subgraph up g also sort snake order posit u etc whole sequenc consid divid q r n rgamma subsequ n consecut element each observ definit two element within subsequ would differ rightmost symbol onli thu distinguish particular subsequ element common symbol posit use denot group sequenc obtain q r fashion stand exampl given q abov group sequenc stand thu explicitli write here element g form ham weight g even form ham weight g odd moreov two success element still unit ham distanc given relat q r pg r element g identifi dimens gsubgraph pg r gsubgraph pg r node label valu symbol posit say gsubgraph even resp odd ham weight correspond element even resp odd extend notat write q rgamma identifi set pg subgraph dimens f g two consecut element q rgamma unit ham distanc thu element q rgamma order graycod sequenc again element rgamma even odd ham weight correspond subgraph said even odd multiwaymerg sort algorithm section develop basic step propos sort algorithm without regard specif network discuss even matter whether algorithm perform sequenti parallel subsequ section give implement detail product network sort sequenc defin sequenc key a multiwaymerg algorithm combin n sort sequenc a singl sort sequenc sinc case implement algorithm product network assum power n henc result sort sequenc j contain n k key heart propos sort algorithm multiwaymerg oper thu spend much time discuss merg process order build intuit understand basic idea merg oper assum key sort place twodimension block shown figur impli twodimension organ data product network implement algorithm product network row data contain store dimension subgraph product graph twodimension organ figur reader conveni visual happen data variou step algorithm use term row column order refer group key subject step algorithm use term row column interpret impli physic organ data two dimension array subject clarif initi assum sort sequenc differ row see figur also assum exist algorithm sort make assumpt effici algorithm yet section discuss sever possibl way obtain effici algorithm purpos purpos assumpt maintain gener discuss independ factor network use build product network show correct algorithm use zeroon principl due knuth mn figur initi situat merg process start sort sequenc repres horizont block a row zeroon principl state algorithm base compareexchang oper abl sort sequenc zero one sort sequenc arbitrari key multiwaymerg algorithm consid merg n sort sequenc singl larg sort sequenc initi situat pictur figur merg oper consist follow step distribut key sort sequenc among n sort subsequ subsequ b ij form equival write key n theta n array snake order as shown figur read key columnwis column j array becom b ij note subsequ b ij sort sinc key rel order appear figur illustr situat complet process n row contain n sort subsequ b ij b ij box figur correspond column key figur written horizont exampl i step merg n subsequ b ij found column j figur singl sort sequenc c j done parallel column recurs call multiwaymerg process total number key column m least n number key column figur n sort algorithm sequenc length n use we alreadi assum exist algorithm abov recurs call merg process would make much progress n thi point clear end section end step write result subsequ vertic n column length each situat step illustr figur mn figur distribut key among n subsequ b ij thick line repres key snake order mn figur situat step sequenc distribut n subsequ subsequ contain mn element still sort figur situat merg subsequ column key sort top bottom step interleav sequenc c j singl sequenc sequenc form simpli read theta n array figur rowmajor order start top row sequenc redrawn figur c j sequenc figur chang organ data figur ident figur except regard one big sequenc read rowmajor order prove almost sort situat shown figur key sort take valu zero one shade area repres posit zero white area repres posit one obtain read valu rowmajor order potenti dirti area window key sort length larger n fact shown lemma step clean dirti area start divid sequenc mn subsequ n consecut key each denot subsequ ith subsequ form first n row key figur or equival figur concaten obtain next n row concaten obtain e see figur a independ sort subsequ row figur a altern order use algorithm assum avail sort n key e transform sequenc f see figur b f contain key e sort nondecreas order even nonincreas order odd now appli two step oddeven transposit sequenc f ie vertic direct figur b first step oddeven tran posit pair sequenc f f i even compar element element two sequenc g g i form not shown figur g second step oddeven transposit g g i row figur sequenc obtain interleav order goe top bottom read success row left right shade area fill zero white area fill one boundari area n row shown lemma odd compar similar manner form sequenc h h i figur c show situat two step oddeven transposit final sort sequenc h nondecreas order gener sequenc figur d final sort sequenc j concaten sequenc need show process describ actual merg sequenc use zeroon principl mention earlier sort input sequenc zero one sequenc obtain complet step sort except dirti area never larger n proof assum merg sequenc zero one let z number zero sequenc rest key one step break sequenc n subsequ b ij easi observ way step implement number zero subsequ b ij bz therefor given i sequenc b ij differ number zero one start step column j compos subsequ b ij end step zero begin sequenc number zero sequenc c j sum number zero b ij fix j thu two sequenc c j differ n zero step interleav n sort sequenc sequenc take one key time sequenc c j sinc two sequenc c j differ number zero n sinc n sequenc interleav a b c d f f figur clean dirti area length window key mixtur one zero n show last step actual clean dirti area sequenc lemma sequenc j obtain by concaten sequenc snake order complet step sort proof know dirti area sequenc d obtain step length n divid sequenc consecut subsequ dirti area either fit exactli one subsequ distribut two adjac subsequ dirti area fit one subsequ e k initi sort oddeven transposit sequenc h contain exactli key sequenc e then last sort sequenc h final concaten sequenc yield sort sequenc j howev dirti area distribut two adjac subsequ e k two subsequ contain zero one figur a present exampl initi situat first sort zero locat one side f k side f k see figur b one two oddeven transposit affect distribut go move zero second sequenc first one first second two step h k fill zero h k fill one see figur c therefor one sequenc contain zero one combin last step sort sort sequenc entir sequenc j sort see figur d need special algorithm n key reader observ that end step dirti area still length n even merg n sequenc length n each thu make much progress appli multiwaymerg process case fundament properti merg process weak algorithm difficulti overcom number way keep run time low depend applic area basic idea merg algorithm exampl interest build sort network implement subnetwork base recurs updat n smaller valu merg sequenc length repeat recurs singl sequenc obtain paper focu develop sort algorithm product network assum avail special sort algorithm design twodimension version product network consider subsequ section discuss sever method obtain algorithm consid specif product network effici special algorithm import effect overal complex final sort algorithm propos approach case consid here turn result run time either asymptot optim close optim number dimens bound sort algorithm use algorithm algorithm sort sequenc length n easi obtain sort algorithm sort sequenc length n r r first divid sequenc subsequ length n sort subsequ independ then appli follow process one sequenc remain group sort sequenc obtain set n sequenc figur if sort n r key initi n rgamma group contain n sort sequenc length n merg sequenc group singl sort sequenc use algorithm shown previou section one sort sequenc termin otherwis go step implement homogen product network mainli focu implement multiwaymerg algorithm kdimension product network pg k detail sort algorithm trivial follow merg oper describ abov initi scenario n sort sequenc store n subgraph up g k pg k snake order sort algorithm start processor hold one key sort sort algorithm processor need enough memori hold two valu compar throughout discuss step implement illustr threedimension product graph g node interconnect pattern g irrelev discuss step step need comput rout recal section subgraph u vpg k kgamma up g k contain subsequ key sort snake dimens dimens dimens figur initi situat exampl dimension product graph a dimens dimens dimens b dimens dimens dimens figur step multiwaymerg algorithm order posit key subsequ respect total sort sequenc v therefor sequenc b uv alreadi store subgraph u vpg k kgamma sort snake order illustr figur three sequenc merg avail snake order three subgraph form remov edg dimens subgraph p g leftmost subgraph figur contain subgraph p g center contain subgraph p g rightmost subgraph contain exampl b uv contain n key fit one g subgraph gener b uv avail snake order u vpg k kgamma exampl u vpg realli correspond gsubgraph dimens ie column figur step step implement merg togeth sequenc subgraph u vpg k u valu one sequenc vp g merg done directli sort algorithm pg step done recurs call multiwaymerg algorithm subgraph vp g merg sort dimens dimens dimens figur step multiwaymerg algorithm sequenc store u vpg k subgraph illustr step figur clariti first show initi situat figur a situat figur dimens exchang show subsequ merg togeth explicitli b uv sequenc merg togeth column figur a result merg shown figur b c v sort snake order found subgraph vp g step step directli done reintroduc dimens connect pg k read key snake order pg k graph movement data involv step explicitli show result sequenc exampl figur switch dimens figur b reader observ figur key appear close fulli sort order compar figur figur d show final sort order fact know lemma case sort zero one left small dirti area impli everi key within distanc n final posit step last step clean potenti dirti area recal dimension subgraph pg k identifi group sequenc element g q kgamma identifi uniqu pg subgraph dimens f g pg subgraph order correspond group sequenc defin snake order subgraph step independ sort key subgraph dimens f g sort order altern consecut subgraph subgraph sort snake order use algorithm assum avail two dimens result step illustr figur a perform two step oddeven transposit subgraph first step key node odd pg subgraph compar key correspond node predecessor subgraph key exchang key predecessor subgraph larger figur b show result first step exampl key node exchang two key valu node second step oddeven transposit key node even pg subgraph compar and possibl exchang predecessor subgraph figur c show result second step figur key node exchang key node a dimens dimens dimens dimens dimens dimens b dimens dimens dimens c dimens dimens dimens d figur step multiwaymerg algorithm final sort within dimension subgraph end merg process figur d one point need examin detail that depend graph g node hold two key need compar possibl exchang may may adjac pg k g hamiltonian path node g label order appear hamiltonian path defin sort order g then two step oddeven transposit easi implement sinc involv commun adjac node pg k if howev g hamiltonian eg complet binari tree two node whose key need compar may adjac alway common g subgraph case permut rout within g may use perform compareexchang step follow first two node need compar key send key other then depend result comparison node either keep origin key key alreadi correct order drop origin key keep new order cover gener case comput run time below assum g hamiltonian thu implement compareexchang step use permut rout algorithm see whether g hamiltonian effect constant term run time complex function analysi time complex analyz time taken sort algorithm initi studi time taken merg process kdimension network time denot k n also denot time requir sort pg rn denot time requir permut rout g lemma merg n sort sequenc n kgamma key pg k take k step proof step take comput time step recurs call merg procedur dimens henc take kgamma n time step take comput time final step take time one sort pg two permut rout g for step oddeven transposit one sort pg therefor valu k n recurs express as initi condit yield deriv valu r n theorem factor graph g time complex sort n r key pg r proof algorithm section time taken sort n r key pg r time taken sort dimension subgraph merg block n sort sequenc increas number dimens express time follow r never smaller rn time obtain r or follow corollari present asymptot complex algorithm one main result paper corollari g connect graph time complex sort n r key pg r proof prove claim first comput complex sort algorithm rdimension toru refer result show g connect graph pg r emul comput n r node rdimension toru embed toru pg r dilat congest sinc embed constant dilat congest emul constant slowdown in fact slowdown need g hamiltonian cycl final use slowdown valu comput exact run time pg r comput complex sort rdimension toru basic need sort algorithm literatur sort n key twodimension toru snake order also need algorithm permut rout nnode cycl exampl use sort algorithm propos kund complex also known permut rout done nnode cycl n step henc sort n r node rdimension toru r gamma step sinc emul algorithm pg r requir slowdown factor arbitrari n r node rdimension product network sort complex applic specif network section obtain time complex sort use multiwaymerg sort algorithm present sever product network literatur so obtain upper bound valu n rn network use valu theorem yield desir run time grid schnorr shamir shown possibl sort n key n node dimension grid non time step also trivial show time perform permut nnode linear array rn valu n rn impli algorithm take r gamma step sort n r key n r node rdimension grid number dimens r bound express simplifi on algorithm asymptot optim r fix sinc diamet grid bound number dimens on valu may need travel far diamet network r bound diamet n r node grid mean run time algorithm optim valu factor r meshconnect tree mct network introduc extens studi obtain product complet binari tree due corollari sort n r node rdimension meshconnect tree or n time step r bound on run time run time asymptot optim r fix bisect width n r node rdimension mct on rgamma shown worst case may need move omegagamma n r valu across bisect network r fix algorithm bisectionbas lower bound factor r diameterbas lower bound use grid help tighten lower bound further diamet mct logarithm number node appear interest investig possibl sort lower run time or n r bound algorithm exist must use complet differ approach our valu n theorem cannot less on due on bisect width twodimension mct network hypercub hypercub fix hard sort snake order twodimension hypercub step permut rout onedimension hypercub take one step therefor time sort hypercub algorithm run time run time wellknown batcher oddeven merg algorithm hypercub fact batcher algorithm special case algorithm petersen cube petersen cube rdimension product petersen graph shown figur petersen graph contain node consist outer cycl inner cycl connect five spoke product graph obtain petersen graph studi like hypercub product petersen graph fix n therefor way graph grow increas number dimens sinc petersen graph hamiltonian twodimension product contain twodimension grid subgraph thu use grid algorithm sort key twodimension product petersen graph constant time consequ rdimension product petersen graph time constant involv small go unreason larg either may well figur petersen graph possibl improv constant develop special sort algorithm twodimension product petersen graph is howev outsid scope paper product de bruijn shuffleexchang network sort twodimension instanc use embed factor network present small constant dilat congest particular n node shuffleexchang network embed n node dimension product shuffleexchang network dilat congest also n node de bruijn network embed dimension product de bruijn network dilat congest sort n node shuffleexchang de bruijn network done olog n time use batcher algorithm thu sort n node dimension product shuffleexchang de bruijn network emul n node shuffleexchang de bruijn network step use theorem algorithm take or log n time step sort n r key again r bound express simplifi olog n r bound run time algorithm asymptot run time sort n r key n r node de bruijn shuffleexchang graph batcher algorithm again come across interest open problem see possibl sort product network asymptot less time unbound number dimens conclus paper present unifi approach sort homogen product network so present algorithm base gener oddeven merg sort algorithm obtain or n upper bound complex sort product network r dimens n r node time taken sort algorithm grid meshconnect tree bound number dimens on optim hypercub algorithm take or reach asymptot complex oddeven merg sort algorithm hypercub product network algorithm run time compar network instanc product de bruijn shuffleexchang graph run time or log n asymptot run time batcher algorithm n r node shuffleexchang de bruijn graph theoret point view interest investig better algorithm product network r bound sever interest altern appear feasibl although time investig them instanc could tri gener hypercub random algorithm product network r network complex sort graph problem simul crcw pram interconnect network sort network applic on biton sort network a unifi framework offlin permut rout parallel network a comparison sort algorithm connect machin cm determinist sort nearli logarithm time hypercub relat comput improv dividesortmerg sort network comput properti mesh connect tree versatil architectur parallel comput product network logarithm diamet fix degre a gener framework develop adapt faulttoler rout algorithm homogen product network processor interconnect some improv nonadapt sort algorithm search sort workpreserv emul fixedconnect network optim sort multidimension meshconnect comput a multiway merg sort network on sort multipl biton sequenc introduct parallel algorithm architectur array tight bound complex parallel sort a modulo merg sort network a gener biton sort network biton sort meshconnect parallel comput kway biton sort effici vlsi network parallel process base orthogon tree the fold petersen network new commun effici multiprocessor topolog construct sort network ksorter the cubeconnect cycl versatil network parallel comput productshuffl network toward reconcil shuffl butter fli an optim sort algorithm mesh connect com puter parallel process perfect shuffl sort meshconnect parallel comput a parallel sort scheme whose basic oper sort n element an econom construct sort network tr ctr yuhshyan chen chihyung chang tsunghung lin chunbo kuo gener faulttoler sort algorithm product network journal system architectur euromicro journal v n p march shanchyun ku biingfeng wang tingkai hung construct edgedisjoint span tree product network ieee transact parallel distribut system v n p march