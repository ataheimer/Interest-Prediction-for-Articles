t improv graph color regist alloc a describ two improv chaitinstyl graph color regist alloc first optimist color use stronger heurist find kcolor interfer graph second extend chaitin treatment remateri handl larger class valu techniqu complementari optimist color decreas number procedur requir spill code reduc amount spill code spill unavoid remateri lower cost spill valu paper describ techniqu experi build use regist alloc incorpor them provid detail descript optimist color remateri present experiment data show perform sever version regist alloc suit fortran program discuss sever insight discov repeat implement alloc b introduct relationship runtim perform effect use machin regist set well understood compil process decid valu keep regist point gener code call regist alloc valu regist access quickli valu memori high perform microprocessorbas machin differ access time order magnitud thu regist alloc strong impact runtim perform code compil gener memori latenc rise regist latenc not impact alloc perform increas addit featur like superscalar instruct issu increas program absolut demand regist machin issu two instruct singl cycl must two set operand readi place start cycl natur increas demand regist popular techniqu perform regist alloc base graph color paradigm alloc construct graph repres constraint alloc must preserv use graph color techniqu discov map valu procedur regist target machin map must observ constraint first graph color alloc built chaitin colleagu anoth approach call prioritybas color describ chow hennessi two techniqu form core around rich literatur emerg see section techniqu use build graph color alloc improv recent year sever import extens chaitin basic techniqu appear nevertheless problem remain practic problem appear either overspil poor spill choic former case alloc fail keep valu regist even though regist avail throughout lifetim latter case alloc choos wrong valu keep regist point code preliminari version result appear sigplan confer program languag design implement research support ibm corpor darpa onr grant nj author address depart comput scienc rice univers houston paper present two improv exist techniqu regist alloc via graph color improv address specif problem observ use chaitinstyl chowstyl alloc notion abstract storag alloc problem graph color date earli s see section first implement graph color regist alloc done chaitin colleagu pl compil chow hennessi later describ prioritybas scheme alloc base color paradigm almost subsequ work coloringbas alloc follow one two paper work follow chaitin scheme discuss regist alloc contain sever implicit assumpt work assum alloc work lowlevel intermedi code assembl code code shape optim phase alloc code refer unlimit number regist call prealloc regist virtual regist alloc work virtual regist instead work distinct live rang procedur singl virtual regist sever distinct valu interest differ part program valu becom separ live rang alloc discov separ live rang alloc physic regist target machin model regist alloc graph color problem compil first construct interfer graph g node g correspond live rang edg repres interfer thu edg g node live rang l node j l interfer l j is simultan live point cannot occupi regist live rang interfer particular live rang l call neighbor l graph number neighbor degre denot l ffi attract featur chaitin approach machinespecif constraint regist use repres directli graph thu graph repres constraint embodi program present target architectur singl unifi structur one key underli insight graph color alloc interfer graph repres constraint find alloc g compil look kcolor g is assign k color node g adjac node alway distinct color choos k match number machin regist map kcolor g feasibl regist assign underli code graph color npcomplet compil use heurist method search color guarante find kcolor kcolor graph kcolor discov valu spill is valu kept memori rather regist spill one live rang creat new differ interfer graph compil proce iter spill live rang attempt color result new graph practic chaitin style alloc rare requir three trip loop figur illustr chaitinstyl alloc proce seven phase renumb systemat renam live rang creat new live rang definit point use point union togeth live rang reach use implement model exampl classic disjoint set unionfind problem in paper pl compil type analysi call get right number name hewlettpackard precis architectur compil paper refer type analysi web analysi et al complet discuss interfer renumb build coalesc spill cost simplifi select spill code oe figur alloc build construct interfer graph implement close follow publish descript pl alloc interfer graph simultan repres bitmatrix collect adjac list coalesc attempt shrink number live rang two live rang l l j combin initi definit l j copi l otherwis interfer combin two live rang elimin copi instruct denot new live rang l ij alloc combin l l j construct imprecis conserv approxim set interfer l ij conserv updat let alloc batch togeth mani combin step perform coalesc possibl updat repeat build coalesc coalesc chang graph spill cost estim live rang runtim cost instruct would ad item spill spill cost estim comput number load store would requir spill live rang oper weight c theta c oper cost target architectur instruct loopnest depth simplifi construct order node creat empti stack repeat follow two step graph empti a exist node l l ffi edg graph place l stack color b otherwis choos node l spill remov l edg graph mark l spill node mark spill alloc insert spill code see below repeat alloc process spill requir proce select see below select assign color node graph order determin simplifi repeat follow step stack empti a pop live rang stack b insert correspond node g c give color distinct neighbor spill code invok simplifi decid spill node spill live rang convert collect tini live rang insert load use store definit requir understand work consid action simplifi select simplifi move l graph stack l ffi k live rang meet condit trivial color is receiv color independ color assign neighbor thu simplifi remov node prove node get assign color live rang remov degre neighbor lower thi turn may prove assign color select assign color node revers order remov thu color node graph trivial color simplifi order stack must true one sens order color constrain node first l get color l j precis simplifi prove l j color independ specif color chosen l exampl consid find threecolor simpl graph shown figur first simplifi remov node need spill them one possibl sequenc remov a c b d e next select reinsert node graph assign color node e insert first given color say red next ad get color except red run entir stack might result assign e red blue b green c red blue decis spill live rang made simplifi alloc cannot find node trivial color select node spill metric pick spill candid import chaitin suggest choos node smallest ratio spill cost divid current degre chaitin heurist guarante find minim color guarante find kcolor exist all graph color npcomplet exampl suppos want find twocolor diamond graph shown figur clearli one exist exampl w red x blue blue z red appli simplifi diamond graph present immedi problem node degre less two thu node select spill spill cost equal alloc make arbitrari choic exampl x x remov graph mark spill simplifi remov remain three node without spill sinc node mark spill alloc must insert spill code rebuild interfer graph tri again despit exist exampl like diamond graph chaitin techniqu produc good alloc practic sever factor contribut success alloc base global inform form precis interfer graph includ power mechan remov unneed copi coalesc final use spill cost guid gener spill code spill cost encod simpl inform controlflow graph improv chaitin work retain properti part parascop program environ built optim compil fortran run uniprocessor initi implement includ regist alloc use chaitin techniqu describ section alloc work well seem produc satisfactori alloc ffifl ffifl e c simpl graph z x diamond graph figur exampl graph mani long live rang subroutin mani deeplynest loop figur structur svd requir modest amount time space compil time howev debug part compil discov sever case produc obvious flaw alloc motiv problem particularli interest case aros code gener singular valu decomposit svd golub reinsch actual code softwar librari distribut forsyth malcolm moler book numer method two hundr fourteen line code exclud comment code contain thirtyseven doloop organ five differ loop nest first loop nest simpl array copi four larger complex loop nest follow figur show structur svd alloc spill mani short live rang defer larger longer live rang arraycopi loop spill loop indic limit even though sever regist unus loop studi understood regist alloc overspil badli situat provok behavior optim dozen long live rang extend initi portion code larg loop nest figur show long live rang span small arraycopi loop span much code high degre interfer graph addit larg spill cost referenc often insid deepli nest loop restrict graph much alloc must spill live rang initi alloc choos spill indic limit arraycopi loop choic correct valu smaller estim spill cost longer live rang alloc choos first unfortun spill help problem later loop nest allevi demand regist larg loop nest alloc must spill valu proce eventu spill longer live rang result unus regist arraycopi loop and indic limit kept memori improv know alloc overspil diamond graph svd reconsid alloc process exampl highlight differ problem diamond graph twocolor see inspect alloc fail approxim use decid whether x get color weak look kcolor alloc approxim x get color x degre less k suffici condit x get color necessari condit exampl x may k neighbor two neighbor may get assign color precis happen diamond graph svd alloc must spill live rang heurist pick spill candid select small live rang use shallow loop nest less expens spill unfortun spill product allevi regist pressur major loop nest time alloc make decis cannot recogn spill help similarli alloc cannot retract decis later spill live rang stay spill color heurist explor matula beck find twocolor diamond graph algorithm differ slightli chaitin approach simplifi graph repeatedli remov node smallest current degre versu chaitin approach remov node n n k node remov select color revers order delet fashion chaitin diamond graph heurist gener twocolor chaitin heurist fail pessimist assum neighbor node get differ color matula beck heurist discov two color capit case two neighbor receiv color unfortun matula beck scheme simpli find color notion find kcolor particular k mechan produc spill code real program seriou problem mani procedur requir spill code interfer graph simpli kcolor exampl svd routin must spill live rang optim color would elimin spill want algorithm combin matula beck stronger color heurist chaitin mechan costguid spill select achiev effect made two modif chaitin origin algorithm simplifi alloc remov node degre less k arbitrari order whenev discov remain node degre greater k choos spill candid node remov graph instead mark spill simplifi optimist push stack hope color avail spite high degre thu remov node order chaitin alloc spill candid includ stack possibl color select alloc may discov color avail node case leav node uncolor continu next node uncolor node must node chaitin method would spill see thi consid graph node color method node n insert graph remov chaitin method guarante color avail n method guarante properti node except spill candid thu uncolor node must spill candid is node chaitin would spill node receiv color alloc succeed node uncolor alloc insert spill code correspond live rang rebuild interfer graph tri again result alloc shown figur call optimist alloc decis insert spill code occur select rather simplifi rest alloc unchang chaitin scheme form alloc handl problem describ head section defer spill decis two power consequ first elimin nonproduct spill chaitin scheme spill decis made simplifi node assign color select node spill candid live rang spill scheme spill candid get place stack node select discov color avail live rang actual spill mechan effect allow alloc reconsid spill decis second late spill capit specif detail color assign provid stronger color heurist select color node x examin color xs current neighbor provid direct measur doe x get color rather estim answer is x particular two xs neighbor receiv color x may receiv color even though x k optimist alloc find twocolor diamond graph recal svd live rang i j m n earli spill candid spill cost small howev spill allevi regist pressur insid major loop nest thu alloc must spill larg live rang happen small live rang select spill candid place stack small live rang come stack select larg live rang spill alloc easili determin color avail small live rang earli arraycopi loop optimist color simpl improv chaitin pessimist scheme assum two alloc one optimist one pessimist use spill metric exampl chaitin metric spill cost divid current degre optimist alloc stronger color heurist follow sens color graph pessimist alloc color graph pessimist alloc not spill necessari optimist alloc spill subset live rang spill pessimist alloc optimist color help gener better alloc case elimin spill diamond graph one exampl mani case cost spill reduc is procedur execut fewer cycl due regist spill section present dynam measur improv implement techniqu backend ibm xl compil famili rs architectur result decreas twenti percent estim spill cost spec benchmark suit renumb build coalesc spill cost simplifi select spill code oe figur optimist alloc even optimist color alloc must spill live rang happen alloc choos least expens mechan accomplish spill particular recogn case cheaper recomput valu store retriev memori consid code fragment shown figur the notat p mean the content memori locat address p sourc note p constant first loop vari second loop regist alloc take advantag situat imagin high demand regist first loop forc p spill column show desir result upper loop p load need use loadimmedi instruct lower loop p load loop use loadimmedi chaitin column illustr code would produc chaitinstyl alloc entir live rang p spill memori load insert use store insert definit split final column show code would expect split alloc actual code might wors fact work remateri motiv problem observ experi live rang split unfortun exampl sort discuss literatur split alloc unclear best extend techniqu achiev ideal solut section divid two major subsect first present conceptu view approach remateri second discuss actual implement alloc sourc chaitin store p reload p reload p store p split store p reload p reload p figur remateri versu spill idea chaitin et al discuss sever idea improv qualiti spill code point certain valu recomput singl instruct requir operand alway avail comput call except valu neverkil note valu recalcul instead spill reload note uncoalesc copi never kill valu elimin recomput directli desir regist togeth techniqu term remateri practic opportun remateri includ immedi load integ constant and machin floatingpoint constant ffl comput constant offset frame pointer static dataarea pointer ffl load known constant locat either frame static dataarea ffl load nonloc frame pointer display valu must cheapli comput operand avail throughout procedur import understand distinct live rang valu live rang may compris sever valu connect common use sourc column figur p denot singl live rang compos three valu address label result express more subtli merg two valu head second loop chaitin alloc correctli handl remateri spill live rang singl valu cannot handl complex case like variabl p figur extend chaitin work take advantag remateri opportun complex multivalu live rang method tag valu enough inform allow alloc handl correctli achiev thi split live rang compon valu tag valu remateri inform form new live rang connect valu ident tag approach allow correct remateri multivalu live rang introduc new problem minim unnecessari split follow section describ find valu propag tag split live rang remov unproduct split discov valu find valu construct procedur static singl assign ssa graph represent transform code use valu refer exactli one definit achiev goal construct techniqu insert special definit call oenod point controlflow path join differ valu merg actual use prune ssa graph dead oenod elimin natur way view ssa graph procedur collect valu compos singl definit one use valu definit either singl instruct oenod merg two valu examin defin instruct valu recogn neverkil valu propag inform throughout ssa graph propag remateri tag propag tag use analog wegman zadeck spars simpl constant algorithm modifi lattic slightli repres necessari remateri inform new lattic power spars condit constant algorithm unnecessari earlier optim elimin controlflow path would detect nonexecut element may one three type top mean inform known valu defin copi instruct oenod initi tag inst valu defin appropri instruct neverkil remateri valu tag simpli pointer instruct bottom mean valu must spill restor valu defin inappropri instruct immedi tag addit meet oper u modifi correspondingli new definit is u u inst u inst inst inst inst u inst inst inst j note inst inst j compar instruct operandbyoperand basi sinc instruct operand modif affect asymptot complex propag propag valu tag particular inst valu defin copi instruct tag lower inst depend valu flow copi tag valu defin oenod lower inst valu flow node equival inst tag otherwis lower process tag valu ssa graph either instruct valu tag spill valu requir normal heavyweight spill if howev tag instruct remateri issu instruct specifi tag lightweight spill tag use two later phase alloc spill cost use tag comput accur spill cost spill code use tag emit desir code insert split propag oenod must remov valu renam recreat execut program consid exampl figur sourc column simpli repeat exampl introduc figur ssa column show effect insert oenod p renam differ valu compris ps live rang split column illustr copi necessari distinguish differ valu without oenod final column minim show singl copi requir isol neverkil valu p valu compris p avoid extra copi note p ident tag propag both may treat togeth singl live rang p similarli two connect valu inst tag would combin singl live rang purpos remateri copi place perfectli neverkil valu isol copi introduc algorithm remov oenod insert copi describ section cours alloc could insert copi suggest split column form live rang split idea discuss elsewher remov unproduct split approach insert minim number copi requir isol neverkil valu nevertheless color make copi superflu recal minim column figur neither p spill receiv color copi connect unnecessari real runtim cost copi elimin whenev possibl cannot simpli use coalesc would remov copi lose desir separ valu differ tag therefor use pair limit coalesc mechan remov unproduct copi sourc ssa split minim figur introduc split conserv coalesc straightforward modif chaitin coalesc phase conceptu add singl constraint coalesc combin two live rang result singl live rang spill bias color increas likelihood live rang connect copi get assign regist conceptu select tri assign color two live rang connect copi taken togeth two mechan remov unproduct copi implement chaitinstyl alloc extend natur accommod approach highlevel structur depict figur unchang sever lowlevel modif requir next section discuss enhanc requir renumb coalesc select renumb chaitin version renumb base defus chain long interest remateri adopt implement strategi renumb base prune ssa graph conceptu implement four step determin live basic block use spars dataflow evalu graph insert oenod base domin frontier avoid insert dead oenod renumb operand everi instruct refer valu instead origin virtual regist time accumul avail inform block intersect live avail need block allow construct precis interfer graph form live rang union togeth valu reach oenod use fast disjoint set union disjoint set structur maintain build interfer graph coalesc where coalesc union oper implement step perform singl walk domin tree use techniqu renumb complet avoid use bitvector flow analysi despit appar complex algorithm involv fast practic requir modest amount space renumb alreadi use ssa graph modest chang requir support remateri izat modifi renumb six step determin live basic block use spars dataflow evalu graph insert oenod base domin frontier still avoid insert dead oenod renumb operand instruct refer valu time initi remateri tag valu propag tag use spars simpl constant algorithm modifi section examin copi instruct sourc destin valu ident inst tag union remov copi examin operand oenod operand valu tag result valu union valu otherwis insert split a distinguish copi instruct connect valu correspond predecessor block step perform singl walk domin tree conserv coalesc prevent coalesc remov split care introduc renumb must limit power specif never coalesc split instruct result live rang may spill normal coalesc two live rang l l j combin l j defin copi l otherwis interfer conserv coalesc add addit constraint combin two live rang connect split l ij k neighbor signific degre signific degre mean degre k understand restrict safe inde conserv recal chaitin color heurist spill node degre k remov graph node remov degre neighbor reduc perhap allow remov process repeat graph empti remain node degre k therefor node spill must least k neighbor degre k initi graph practic perform two round coalesc initi possibl copi coalesc but split instruct graph rebuilt coalesc repeat copi remov then begin conserv coalesc split instruct again repeatedli build interfer graph attempt conserv coalesc split remov theori intermix conserv coalesc unrestrict coalesc sinc result unrestrict coalesc may spill exampl l l j might conserv coalesc later coalesc l ij l k provok spill l ijk sinc signific degre l ijk may quit high practic may prove problem measur effect intermix conserv coalesc unrestrict coalesc produc wors alloc would simplifi speed entir process conserv coalesc directli improv alloc coalesc remov instruct result code split instruct introduc alloc region littl competit regist conserv coalesc undo split howev cannot undo nonproduct split itself bias color second mechan remov useless split involv chang order color consid assign renumb insert split mark pair valu connect split partner select assign color l first tri color alreadi assign one l s partner care implement expens pick first avail color realli amount bias spectrum color previou assign l s partner bias mechan combin live rang conserv coalesc cannot exampl l might k neighbor signific degre neighbor might interfer thu might color ident conserv coalesc cannot combin l partner result live rang would mani neighbor signific degre bias may abl combin l partner appli alloc shown live rang receiv color late point alloc combin matter choos right color virtu late applic bias mechan use detail level knowledg problem avail earlier process exampl coalesc perform increas likelihood bias match partner add limit lookahead pick color l uncolor partner l j alloc look color still avail l j averag l small number partner thu add limit lookahead bias color without increas asymptot complex select implement techniqu optim compil fortran compil experiment code gener rtpc sparc i rs experi regist alloc built seri alloc independ particular architectur experiment alloc work routin express iloc lowlevel intermedi languag design allow extens optim iloc routin assum infinit regist set rewritten term particular target regist set spill code ad necessari target regist set specifi small tabl may vari allow conveni experiment wide varieti regist set alloc iloc routin translat complet c routin c routin compil result object file link complet program sever advantag ffl insert appropri instrument translat c collect accur dynam measur ffl compil c allow us test singl routin context complet program run real data ffl perform test machineindepend fashion potenti use varieti regist set simpli time actual machin code inher machinedepend tend obscur effect alloc translat c add instrument count number time specif iloc instruct execut compar regist alloc interest number load store copi loadimmedi addimmedi figur show small sampl iloc code correspond c translat usual onetoon map iloc statement c translat though addit c requir function header declar regist variabl eg r f also note simpl instrument appear immedi sever statement cours sampl simpl major iloc complex lle nop lla ldi r add r r r mvf f f bc l l lddrr f r r dab f f dadd f f f addi r r sub r r r br ge r n n lle goto l r figur iloc c target machin test report here target machin defin sixteen integ regist sixteen floatingpoint regist floatingpoint regist hold doubleprecis valu distinct made singleprecis doubleprecis valu held regist four integ regist may use pass argument recal argument pass refer fortran therefor argument regist hold pointer actual valu remain argument pass stack frame function result return integ floatingpoint regist appropri ten regist class design calleesav remain six includ argument regist preserv calle report cost assum load store requir two cycl instruct assum requir one cycl cours simpl approxim cost real machin spill cost sinc instrument report dynam count load store etc need mechan isol instruct due alloc difficulti spill profit case alloc remov instruct eg copi instruct therefor test routin hypothet huge machin regist assum would give nearli perfect alloc differ huge result result one alloc target standard machin equal number cycl ad alloc cope insuffici regist result test suit collect seventi routin contain eleven program eleven routin forsyth malcolm moler book numer method group seven program simpl driver remain fiftynin routin spec benchmark suit four spec program use doduc routin fpppp routin matrix routin tomcatv routin two fortran program suit spice nasa requir languag extens yet suppli frontend result present sequenc comparison two tabl first two column give program subroutin name third fourth column give observ spill cost two alloc compar cost calcul dynam count instruct describ cycl spill code percentag contribut program routin origin optimist load store copi ldi addi total fmin fmin seval spline solv svd svd doduc colbur deseco inithx lectur prophi repvid supp efil sgemm tabl effect optimist color earlier last column total give percentag improv spill cost old alloc new one larg posit number indic signific improv middl column show contribut instruct type total percentag round nearest integ insignific improv report insignific loss report gamma case result zero simpli show blank sinc result round total entri may equal sum contribut entri tabl show routin differ observ consid first row tabl row present result routin fmin program fmin alloc use chaitin heurist gener alloc requir cycl spill code optimist alloc requir cycl save came execut fewer load aros fewer store insignific improv due execut fewer loadimmedi total improv raw data tabl given appendix brigg thesi optimist color tabl show comparison test result alloc use two differ color heurist column label origin give data version use chaitin color heurist column label optimist give data version use optimist color heurist test suit routin measur improv case singl loss an extra load store requir improv rang tini quit larg sometim reduc spill cost singl loss disappoint sinc claim optimist color heurist never spill chaitin heurist howev must recal structur alloc attempt color spill code insert entir buildcoalescecolor process repeat optimist color heurist perform least well chaitin heurist graph spill two alloc face differ problem remateri tabl summar effect new approach remateri compar two version optimist alloc differ handl neverkil valu column label optimist give data version use chaitin limit approach remateri column label remateri give data version incorpor new method entir suit routin observ improv case degrad case one loss small load store extra copi somewhat larger improv rang tini reason larg mani greater cours adjust rel cost instruct especi load store chang amount improv expect see pattern fewer load instruct loadimmedi typic number store number copi also reduc reduc number copi instruct suggest heurist remov unhelp split adequ practic note reduct obtain spite extra copi introduc renumb alloc cost improv alloc come cost compiletim case optimist alloc color phase expens due need attempt color even spill candid discov support remateri requir sever extra step extra pass code requir initi remateri tag propag time requir propag tag throughout routin final least one extra pass requir accomplish conserv coalesc hand buildcoalesc process may slightli faster sinc elimin copi renumb recal step section tabl show compar time three alloc three routin spec suit time given second measur hertz clock unload ibm rs model run repeat time result averag first column show phase alloc cfa stand controlflow analysi includ time requir comput forward revers domin domin frontier build includ entir buildcoalesc loop color includ simplifi select note tomcatv requir extra round spill origin alloc optimist alloc routin orig column give time requir alloc chaitin origin color heurist opt column give time requir optimist alloc remat column give time requir optimist alloc improv remateri select three routin illustr perform rang size first routin repvid cycl spill code percentag contribut program routin optimist remateri load store copi ldi addi total seval spline solv zeroin zeroin doduc bilan bilsla colbur gamma gamma gamma gamma debico drigl heat inideb inisla lectur orgpar pastem prophi repvid main tabl effect remateri program doduc noncom line fortran compil text size byte use ibm xlf compil full optim second routin tomcatv line text size byte largest routin twldrv program fpppp line text size byte three routin appear tabl obviou conclus draw data tabl support remateri requir small amount addit compiletim hand optimist color heurist littl cost sometim faster chaitin pessimist heurist result tabl also illumin number interest detail behavior three alloc ffl initi pass buildcoalesc loop domin overal cost alloc as note chaitin comparison addit iter colorspil process quit inexpens ffl case cost renumb higher remat reflect cost propag remateri tag repvid tomcatv twldrv phase orig opt remat orig opt remat orig opt remat renum build cost color spill renum build cost color spill renum build cost color spill renum build cost color spill renum build cost color total tabl alloc time second ffl case cost buildcoalesc loop higher remat due addit pass conserv coalesc ffl low cost controlflow analysi illustr speed practic algorithm calcul domin frontier ffl higher cost color first pass aris cost choos node spill cost color linear size graph spill select os delta n number spill choic n number node larg number spill term domin cost color pleas overal speed alloc result appear slightli faster time report ibm xlf compil regist alloc compar time report optim extens comparison prioritybas color alloc appear much slower small routin much faster larg routin cours speed competit fast local techniqu use nonoptim compil howev believ global optim requir global regist alloc implement insight perform experi describ section implement sever version alloc natu ralli gain insight implement chaitinstyl graph color alloc section attempt convey idea concis form hope prove use implementor possibl label insight particular phase alloc affect constant valu remateri scheme suggest compil repres constant way make visibl alloc current compil integ constant obviou code load use integ load immedi instruct noninteg constant store static constant pool load use fix offset static data area pointer effect hide remateri chang intermedi represent make valu visibl would expos remateri improv qualiti final code build like chaitin advoc build two represent interfer bit matrix set adjac vector mani implement use singl represent claim space save howev form graph need effici execut alloc practic problem explos size interfer graph alloc run reason amount space exampl interfer graph tomcatv requir byte graph twldrv requir byte usual bit vector iter solut live variabl problem larg interfer graph actual fact led us spars evalu graph techniqu choi cytron ferrant coalesc coalesc transit even though l l j interfer l l k interfer l ij interfer l k l j interfer l k thu order coalesc import coalesc proceed innermost loop outward insideout coalesc ensur copi deepli nest loop get remov copi outer loop practic make notic differ mani routin conserv coalesc bias color direct tradeoff strength conserv coalesc effect bias color practic experi sever differ restrict coalesc precis ie less conserv restrict coalesc increas set live rang combin decreas number live rang combin bias color unclear whether occur precis coalesc condit restrict freedom graph combin live rang bias color also catch case bias color cannot complet elimin need conserv coalesc comput spill cost alloc spill cost alway execut chaitin alloc wait must choos first valu spill approach merit live rang neg spill cost suggest less expens store reload keep regist alloc comput spill cost earli aggress remov live rang neg spill cost chaitin defer comput spill cost alloc recogn must spill speed alloc procedur color without spill addit alloc skip spillcost comput live rang alreadi remov graph simplifi remateri fundament chang alloc chaitinstyl alloc live rang unrel order remov trivial color node littl notic effect result alloc introduct split isol neverkil valu use bias color chang fact give new import rel remov order trivial color node face multipl node remov select first remov node partner forc node partner color first color less constrain graph practic increas effect bias color pick spill candid introduc split support remateri increas number node interfer graph advers effect run time simplifi increas time spent search spill candid describ section search spill candid must examin node remain current graph naiv implement repeat process spill spill metric includ node current degre thu choos spill candid take ok number spill n number live rang origin graph undoubtedli care algorithm work improv situat practic refactor comparison note l l costl replac floatingpoint divis integ multipli improv constant factor limit backtrack select assign color node somewhat arbitrari manner bias color capit fact care choos order case matter nonetheless improv color choic avoid spill optimist alloc add limit form backtrack color avail node p select consid recolor one ps neighbor open color p backtrack must care constrain avoid combinatori explos examin ps neighbor determin avail color accumul number use color note neighbor use color color remain p one color use one ps neighbor select tri recolor neighbor succe color avail p limit backtrack easi implement take littl compil time rare lead degrad hand rare lead signific improv also fit bias color howev experi suggest limit lookahead see section produc consist improv limit backtrack bias scheme npnois test often stumbl phenomenon label npnois measur output process involv heurist solut npcomplet problem answer often contain behavior seem anomal sometim heurist must pick set choic local cost differ choic lead differ answer alloc use lineartim heurist find color decis tree perspect pick path tree time proport height tree cours tree exponenti number node step pick base local inform histori previou choic remain node chang local choic lead differ global result thu simpl thing like order node tie broken actual color assign produc variat output variat make difficult compar two compet alloc exampl tabl remateri scheme produc wors code optimist alloc chaitin scheme two routin colbur ddeflu doduc heurist that gener better global behavior produc anomal result specif case effect may part account effect seen haifa group best three spill scheme smooth npnois use three differ spill metric take best result never seen produc wors alloc though situat conceiv often better save expens spill instead possibl save lessexpens spill futur relationship econom use memori graph color discuss long time first paper subject appear lavrov paper minim memori use suggest build inconsist graph color it propos practic method find color ershov colleagu built work alpha project solv storag alloc problem build interfer graph use pack algorithm late sixti cock clearli talk appli insight directli regist alloc kennedi schwartz credit insight earli work graph color regist alloc emphas color problem littl consider question spill choic placement algorithm cock ershov as report schwartz concern exclus minim number color requir discuss spill code flow graph ignor entir first complet regist alloc base upon graph color describ chaitin colleagu spill handl varieti heurist base upon interv analysi flow graph unfortun ad hoc techniqu expens alway effect subsequ paper chaitin introduc simpler techniqu attempt solv spill problem base interfer graph spillcost estim live rang section describ alloc chow hennessi describ prioritybas color scheme work valu initi resid memori divid regist set local global alloc build imprecis interfer graph color constrain live rang prioriti order prioriti function use spill cost normal live rang length constrain live rang cannot color split smaller piec tri color independ fabri context work minim memori storag requir introduc renam transform analog chow live rang split note that case split improv result color mention applic regist alloc problem sever group refin chow approach laru hilfing make sever modif work valu initi resid regist elimin local alloc limit basic block size use sophist live rang split techniqu gupta soffa steel describ approach partit interfer graph subgraph color individu later merg hewlettpackard compil group describ anoth prioritybas alloc assign color order decreas degre interfer graph must spill examin current live rang assign color spill valu minim cost spill metric metric combin chaitin notion spill cost term includ impact keep valu regist across loop live use implement version algorithm believ scheme avoid problem like one observ svd routin hand spill live rang chaitin prove trivial color bernstein colleagu describ collect techniqu show bestofthre color scheme produc better result chaitin origin scheme impos largest degre first order remov unconstrain node graph simplifi step a section introduc clean heurist decreas amount spill code gener within singl basic block experi improv orthogon present paper callahan koblenz construct finegrain hierarch decomposit flow graph tile color perform individu tile result merg two pass tree see discuss npnois section one possibl explan behavior algorithm explicitli parallel cours global alloc built graph color paradigm approach includ binpack alloc built digit equip corpor probabilist alloc fischer proebst difficult compar techniqu implement work differ intermedi represent follow differ optim compil target differ machin optimist color simpl improv chaitin origin alloc produc alloc chaitin method except improv result result tabl show happen regularli cost nearli ident occasion one method requir extra trip around main loop spill code insert anoth paper shown optimist alloc gener better alloc machin use regist pair valu implement chaitinstyl alloc incorpor improv make signific differ alloc qualiti littl cost method remateri neverkil valu find maximum extent neverkil valu ensur alloc spill valu least expens way procedur never kill valu must spill result better code result tabl show actual happen opportun remateri exist featur ad remateri hurt addit algorithm describ section fast practic experi suggest asymptot fast algorithm produc good compiletim perform acknowledg ken kennedi particip earli discuss color encourag work start jorg more point matula algorithm mark krentel suggest color heurist give easili encourag us tri aggress color heurist greg chaitin ben chase john cock marti hopkin bob hood ken kennedi chuck lin peter markstein tom murtagh randi scarborough rick simpson tom spillman matthew zaleski contribut work encourag enlighten discuss colleagu parascop project rice provid us excel testb idea peopl go heartfelt thank r spill code minim techniqu optim compil regist alloc via graph color color regist pair regist alloc via hierarch graph color regist alloc spill via graph color regist alloc spill via graph color automat construct spars data flow evalu graph regist alloc prioritybas color prioritybas color approach regist alloc parascop parallel program environ effici comput static singl assign form control depend graph automat storag optim probabilist regist alloc comput method mathemat comput retarget compil ansi c simpl regist spill retarget compil regist alloc via cliqu separ privat commun effect machinelevel global optim global flow analysi regist alloc simpl code structur regist alloc spur lisp compil store economi close oper scheme graph color regist alloc processor multiregist operand program interim report setl project releas constant propag condit branch tr effect machinelevel global optim regist alloc spur lisp compil spill code minim techniqu optim complier regist alloc via cliqu separ prioritybas color approach regist alloc graph color regist alloc processor multiregist operand automat construct spars data flow evalu graph constant propag condit branch regist alloc via hierarch graph color effici comput static singl assign form control depend graph retarget compil ansi c color regist pair simpl regist spill retarget compil probabilist regist alloc regist alloc via graph color alphamyampersandmdashan automat program system high effici smallestlast order cluster graph color algorithm regist alloc prioritybas color engin compil comput intract comput method mathemat comput automat storag optim regist alloc myampersandamp spill via graph color global flow analysi regist alloc simpl code structur ctr christian wimmer hanspet mssenbck optim interv split linear scan regist alloc proceed st acmusenix intern confer virtual execut environ june chicago il usa atsushi ohori regist alloc proof transform scienc comput program v n p march yoonseo choi hwansoo han optim regist reassign regist stack overflow minim acm transact architectur code optim taco v n p march suhyun kim soomook moon jinpyo park kemal ebciolu unrollbas regist coalesc proceed th intern confer supercomput p may santa fe new mexico unit state sriraman tallam rajiv gupta bitwidth awar global regist alloc acm sigplan notic v n p januari john lu keith d cooper regist promot c program acm sigplan notic v n p may weijia li youtao zhang jun yang jiang zheng ucc updateconsci compil energi effici wireless sensor network acm sigplan notic v n june kun zhang tao zhang santosh pand binari translat improv energi effici postpass regist realloc proceed th acm intern confer embed softwar septemb pisa itali sreeranga p rajan masahiro fujita ashok sudarsanam sharad malik develop optim compil fujitsu fixedpoint digit signal processor proceed seventh intern workshop hardwaresoftwar codesign p march rome itali bernhard scholz erik eckstein regist alloc irregular architectur acm sigplan notic v n juli omri traub glenn holloway michael d smith qualiti speed linearscan regist alloc acm sigplan notic v n p may xiaotong zhuang santosh pand parallel loadstor dualbank memori embed processor acm transact embed comput system tec v n p august jame d shuler henri r bauer iii lookahead alloc presenc branch proceed acm symposium appli comput p april san jose california unit state michael paleczni christoph vick cliff click java hotspottm server compil proceed javatm virtual machin research technolog symposium javatm virtual machin research technolog symposium p april monterey california ashok sudarsanam stan liao sriniva devada analysi evalu address arithmet capabl custom dsp architectur proceed th annual confer design autom p june anaheim california unit state daniel luna mikael pettersson konstantino sagona effici compil function languag amd hipe experi proceed th acm sigplan intern confer principl practic declar program p juli lisbon portug kameswari v garigipati cindi norri evalu use profil regionbas regist alloc proceed acm symposium appli comput march madrid spain akira koseki hideaki komatsu toshio nakatani preferencedirect graph color acm sigplan notic v n may christian w probst andrea gal michael franz averag case vs worst case margin safeti system design proceed workshop new secur paradigm septemb lake arrowhead california christoph lupo kent d wilken post regist alloc spill code optim proceed intern symposium code gener optim p march andrew w appel lal georg optim spill cisc machin regist acm sigplan notic v n p may ivan d baev richard e hank david h gross premateri reduc regist pressur free proceed th intern confer parallel architectur compil techniqu septemb seattl washington usa jinpyo park jehyung lee soomook moon regist alloc bank regist file acm sigplan notic v n p aug lal georg andrew w appel iter regist coalesc acm transact program languag system topla v n p may lal georg andrew w appel iter regist coalesc proceed rd acm sigplansigact symposium principl program languag p januari st petersburg beach florida unit state keith d cooper philip j schielk devika subramanian optim reduc code space use genet algorithm acm sigplan notic v n p juli max hailperin compar conserv coalesc criteria acm transact program languag system topla v n p may daniel luna mikael pettersson konstantino sagona hipe amd proceed acm sigplan workshop erlang p septemb snowbird utah usa yang sun chan g r gao roy ju gueiyuan lueh zhaoq zhang interprocedur stack regist alloc itanium like architectur proceed th annual intern confer supercomput june san francisco ca usa ashok sudarsanam sharad malik masahiro fujita retarget compil methodolog embed digit signal processor use machinedepend code optimizaton librari read hardwaresoftwar codesign kluwer academ publish norwel ma thoma zeitlhof bernhard wess listcolor interv graph applic regist assign heterogen registerset architectur signal process v n p juli sathyanarayanan thammanur santosh pand fast memoryeffici regist alloc framework embed system acm transact program languag system topla v n p novemb michael d smith norman ramsey glenn holloway gener algorithm graphcolor regist alloc acm sigplan notic v n may jinpyo park soomook moon optimist regist coalesc acm transact program languag system topla v n p juli massimiliano poletto vivek sarkar linear scan regist alloc acm transact program languag system topla v n p sept changq fu kent wilken faster optim regist alloc proceed th annual acmiee intern symposium microarchitectur novemb istanbul turkey kreahl cindi norri profil assist regist alloc proceed acm symposium appli comput p march como itali johansson mikael pettersson konstantino sagona high perform erlang system proceed nd acm sigplan intern confer principl practic declar program p septemb montreal quebec canada jian wang andrea krall m anton ertl christin eisenbei softwar pipelin regist alloc spill proceed th annual intern symposium microarchitectur p novemb decemb san jose california unit state javier zalamea josep llosa eduard ayguad mateo valero regist constrain modulo schedul ieee transact parallel distribut system v n p may josep llosa mateo valero eduard ayguad heurist registerconstrain softwar pipelin proceed th annual acmiee intern symposium microarchitectur p decemb pari franc martin farach vincenzo liberator local regist alloc proceed ninth annual acmsiam symposium discret algorithm p januari san francisco california unit state david koe seth copen goldstein progress regist alloc irregular architectur proceed intern symposium code gener optim p march florent bouchez alain dart fabric rastello complex regist coalesc proceed intern symposium code gener optim p march tao zhang xiaotong zhuang santosh pand compil optim reduc secur overhead proceed intern symposium code gener optim p march keith d cooper anshuman dasgupta tailor graphcolor regist alloc runtim compil proceed intern symposium code gener optim p march javier zalamea josep llosa eduard ayguad mateo valero improv spill code gener softwar pipelin loop acm sigplan notic v n p may r govindarajan hongbo yang jo nelson amar chihong zhang guang r gao minimum regist instruct sequenc reduc regist spill outoford issu superscalar architectur ieee transact comput v n p januari wentsong shiue retarget compil low power proceed ninth intern symposium hardwaresoftwar codesign p april copenhagen denmark keith d cooper l taylor simpson christoph a vick oper strength reduct acm transact program languag system topla v n p septemb keith i farka paul chow norman p jouppi zvonko vranes multiclust architectur reduc processor cycl time partit intern journal parallel program v n p oct matthia jacob keith h randal crossarchitectur perform portabl java virtual machin implement proceed nd java virtual machin research technolog symposium p august david ryan koe seth copen goldstein global progress regist alloc acm sigplan notic v n june keith i farka paul chow norman p jouppi zvonko vranes multiclust architectur reduc cycl time partit proceed th annual acmiee intern symposium microarchitectur p decemb research triangl park north carolina unit state wolfram amm jefferi von ronn michael franz ssabas mobil code implement empir evalu acm transact architectur code optim taco v n pe june jay bharadwaj william y chen weihaw chuang gerolf hoflehn kishor menez kalyan muthukumar jim pierc intel ia compil code gener ieee micro v n p septemb suhyun kim soomook moon jinpyo park kemal ebcioglu unrollbas copi elimin enhanc pipelin schedul ieee transact comput v n p septemb tao zhang xiaotong zhuang santosh pand build intrusiontoler secur softwar proceed intern symposium code gener optim p march xavier leroy bytecod verif java smart card softwarepractic experi v n p april t suganuma t ogasawara k kawachiya m takeuchi k ishizaki a koseki t inagaki t yasu m kawahito t onodera h komatsu t nakatani evolut java justintim compil ia platform ibm journal research develop v n p septembernovemb