t toward model perform fast connect compon algorithm parallel machin a present analyz portabl highperform algorithm find connect compon modern distribut memori multiprocessor algorithm hybrid classic df subgraph local processor variant shiloachvishkin pram algorithm global collect subgraph implement algorithm splitc measur perform cray td meiko cs think machin cm use class graph deriv cluster dynam method comput physic processor cray td implement outperform previou solut order magnitud character graph paramet allow us select graph highlight key perform featur studi effect paramet machin characterist balanc time local global phase algorithm find edg densiti surfacetovolum ratio rel commun cost domin perform understand effect machin characterist perform studi shed light impact improv comput andor commun perform challeng problem b introduct problem find connect compon graph broad import comput scienc comput scienc comput vision exampl make extens use connect compon algorithm problem edg detect object recognit use connect compon algorithm also advanc studi variou physic properti magnet materi near critic temperatur among physic phenomena connect compon also appear offer uniqu challeng parallel comput sequenti solut well understood commonli use introductori comput scienc theori cours applic depthfirst breadthfirst search parallel solut receiv great deal attent theorist practic comput scientist proven difficult theoret work show good result crcw pram model assum uniform memori access time arbitrari bandwidth memori locat materi base upon work support nation scienc foundat presidenti faculti fellowship award graduat research fellowship infrastructur grant number cda well lawrenc livermor nation laboratori inst scientif research grant ucberl ucberl opinion find conclus recommend express public author necessarili reflect view either organ inher content algorithm made even erew solut much challeng practic applic theoret work parallel machin larg restrict small sharedmemori machin simd machin slow processor mani practic solut develop modern mimd massiv parallel platform mpp vector machin practic solut typic emphas perform issu portabl scalabl gener still rare obtain good perform paper present portabl highperform algorithm find connect compon gener graph distribut memori machin node td algorithm demonstr fastest solut date graph practic import algorithm hybrid classic df subgraph local processor variant shiloachvishkin pram algorithm collect subgraph analyz perform characterist algorithm across rang graph type modern parallel machin studi shed light perform impact improv comput andor commun perform challeng problem tradeoff particularli import quantifi given microprocessor perform improv rapidli time greater comput perform easili obtain expens commun perform build less tightli integr system studi use class graph motiv cluster dynam problem comput physic tradit numer simul materi near critic temperatur util mont carlo algorithm local method inform propag qualiti statist return simul depend heavili size sampl l although larger sampl size lead better statist number step need propag inform grow gener wors use tradit method recent method swendsenwang algorithm reduc correl time simul twodimension ise model correl time use sw grow ol allow much larger sampl studi heart sw connect compon algorithm algorithm gener random graph find connect compon graph appli simpl transform compon start year sinc introduct sw algorithm cluster dynam henc use connect compon also found widespread use area includ comput field theori experiment high energi particl physic statist mechan class graph aris cluster dynam random graph built underli lattic structur ie probabilist mesh instanc graph produc use singl probabl p decid whether edg underli lattic present graph instanc decis edg made independ decis edg figur illustr possibl instanc probabilist mesh dp built dimension lattic dp built dimension lattic remaind paper structur follow section describ parallel algorithm figur probabilist mesh use studi physic phenomena edg underli mesh present given graph instanc probabl p independ edg section provid detail mpp use studi section explain applic scale rule use studi justifi probabilist analysi identifi key perform issu inher scale problem across edg presenc probabl section demonstr develop model perform characterist hybrid algorithm across rang machin graph type section draw conclus algorithm section outlin connect compon algorithm discuss portabl parallel languag use implement obtain good perform distribut memori machin demand pay attent local access order minim commun cost mani algorithm result hybrid approach combin local global phase local phase algorithm deal data resid processor local memori global phase algorithm address issu effici remot data access synchron processor phase employ differ algorithm optim use differ cost model perform gener depend balanc time spent two phase usual good local phase domin total time algorithm balanc impli extra local work reduc complex global phase global algorithm grow complex understand avoid load imbal network content becom much difficult follow strategi hybrid creat algorithm merg simpl fast local algorithm depthfirst search df power effici global algorithm shiloach vishkin sv neither local global algorithm suffici alon might tri extend df task queue assign new tree depthfirst forest whenev processor need work complet ignor data local inher method prove fatal perform sv design crcw pram mind suffer nearli problemth pram model fail recogn nonuniform access time distribut memori machin result poor perform demonstr later merg local df global sv optim result creat algorithm perform scale well interest set graph compar pure global approach algorithm perform order magnitud better optim algorithm follow detail data structur process optim see local phase perform local depthfirst search df processor portion graph collaps local connect compon repres node local phase result much smaller graph global phase compon global graph mark uniqu valu global phase global initi finish prepar global graph point remot edg one local repres node select local phase global iter begin reduc global graph repres node remot edg iter follow step a termin check compon remain process processor quit b hook step merg compon larger compon attempt link compon across share edg condit attach guarante cycl form c star format step collaps newli form compon tree height one star ensur repres node compon singl consist valu e selfloop remov step compon remov edg point node within compon ie node valu local cleanup node select repres node global graph updat valu node repres implement difficulti distribut memori algorithm occur almost complet global phase here must devis method access remot data effici possibl maintain correct minim synchron cost optim global phase essenti good perform requir languag provid easi understand cost model parallel oper also model must stabl across varieti platform make algorithm truli portableif model chang dramat new machin must optim independ machin splitc languag provid cost model give us set simpl yet effect abstract program parallel machin allow us implement algorithm straightforward fashion optim global phase platform particular figur natur partit probabilist mesh underli lattic cut equals block processor provid global address space processor may access locat global address space use global pointer processor own specif region global space local region global pointer use like normal pointer refer entir global address space standard pointer refer portion local processor pointer help build data abstract c distribut data structur splitc realiz lay data across global address space use global pointer hook togeth edg distribut graph exampl mere global pointer one distribut vertex anoth global pointer also allow programm determin owner referenc data without actual dereferenc pointer use abil local phase differenti local edg must collaps singl node graph global phase remot edg must retain edg global graph clear distinct local global object help us appli cost model optim use splitc also give implement portabl version splitc exist cray td ibm sp sp intel paragon think machin corp cm meiko cs network workstat although algorithm accept arbitrari graph input obtain optim perform requir reason partit graph across processor enhanc local load bal anc partit techniqu reli abil determin properti graph structur fortun probabilist mesh offer natur geometr partit via underli lattic structur exploit partit high perform shown figur simpli cut underli lattic equals section one processor effect simpl partit discuss length later paper summari implement portabl hybrid algorithm find connect compon gener graph implement scale reason perform effici class graph interest scientif commun machin studi consid three largescal parallel machin cray td meiko cs think machin corp cm machin offer rang comput commun perform evalu algorithm implement case splitc compil built extens gcc version provid local code gener code gener global access fulli optim exploit specif commun hardwar capabl td base dec alpha bit dual issu second gener risc processor clock mhz kb split instruct data cach splitc global read involv short instruct sequenc gain address remot node load remot memori take approxim s cs base mhz dualissu sparc microprocessor larg cach commun support dedic elan processor within network interfac access remot memori via wordbyword dma network transact splitc global read issu command commun coprocessor via exchang instruct caus wait elan thread either access remot memori begin dma transfer depend length remot read requir roughli s cm base cypress sparc microprocessor clock mhz kb unifi instruct data cach splitc global read involv issu cmaml activ messag access remot locat repli valu take approxim s tradit measur comput perform node mflop specmark offer littl indic perform graph algorithm stress storag hierachi calibr local node perform empir section applic scale bottomlin perform algorithm shown figur four import graph type d d graph rectangular twodimension probabilist mesh edg probabl respect x subgraph per processor similarli d threedimension probabilist mesh edg prob abil respect xx subgraph per processor import particular graph discuss below fix problem size per node scale use td solv larger problem cm cs howev problem size extrem larg problem reason run singl node use larger graph would make obtain high perform easier also shown tabl best publish uniprocessor perform obtain cray c compar graph c perform rate essenti independ problem size long fit memori previous flanigan final version paper intend includ ibm sp intel paragon activ messag highperform network workstat splitc languag current avail platform connect compon algorithm run time write draft data collect yet complet use lower densiti graph d case make comparison somewhat optimist favor c graph greiner type mn mn mn mn tabl raw perform parallel connect compon algorithm valu tabl million node process per second use hybrid algorithm describ text rightmost column show million node process per second singl node cray c use algorithm develop greiner tamayo achiev million node per second much larger graph use node cm also hackl et al achiev nearli mn processor intel ipsc larg graph neither result compar directli sinc appli particular problem specif state edg presenc probabl graph bottomlin perform result pleasant goal understand depth perform characterist hybrid algorithm fundament bottleneck present perform affect machin characterist end need examin rang problem size graph structur across machin addit work class random graph specif problem instanc section sketch key aspect connect compon problem influenc algorithm perform valid probabilist analysi sampl graph wellbehav equal nodesperprocessor scale one expect total work solv connect compon function number node v number edg e number compon c graph class graph consid expect number edg proport number node p edg presenc probabl sampl random graph figur indic given edg probabl number compon graph also proport graph size scale number node linearli number processor scale aspect problem uniformli figur also suggest ratio compon graph node vari significantli edg probabl sinc slope line differ fortun sinc number compon per node larg independ graph size examin vari edg probabl figur show expect number compon per node graph rang edg presenc probabl curv normal graph million node e eee number connect compon number node connect compon vs graph size vari edg presenc figur expect number connect compon graph given edg presenc probabl underli lattic expect number compon linear number connect compon per node edg presenc percentag mesh mesh figur expect number connect compon per node graph size increas fraction varianc decreas make function accur larg graph fraction node largest compon edg presenc percentag mesh mesh figur size largest connect compon graph note rapid transit dimens graph phase transit observ compon per node shown figur highli nonlinear behavior result interest phenomenon critic understand perform exhibit connect compon algorithm edg presenc probabl cross boundari node averag degre two graph graph phase transit occur mostli unconnect mostli connect graph boundari graph consist larg number fairli regular size compon boundari graph consist singl larg compon number tini compon figur show fraction node largest compon probabilist mesh function edg presenc probabl vertic bar mark theoret boundari two graph point node expect connect two node illustr phase transit graphic figur show largest three compon graph edg percentag below on boundari follow tabl give number node compon shown rank largest nd largest rd largest mostli connect graph must expect perform algorithm strongli influenc presenc singl larg compon although phase transit make difficult compar across graph type still good scale rule particular graph type interest next section use nodespersecond metric help understand figur largest connect compon sever x graph left right graph edg presenc percentag white compon largest graph follow red green blue section made smaller count number connect compon connect compon distribut measur gaussian figur distribut number connect compon note close distribut sampl x graph match gaussian distribut mean standard deviat vertic line mark mean one standard deviat either direct perform local global phase algorithm graph type natur might question whether expect number compon statist well behavedit certainli obviou complex discret oper like form connect compon yield nice distribut even random graph find howev expect number connect compon per node inde treat normal random variabl consid figur show distribut number connect compon found graph node averag number compon per node saw figur standard deviat sampl bin tenth standard deviat figur also show gaussian distribut mean standard deviat allow easi comparison two second implic figur mostli unconnect graph partit larg number subgraph similar structur subgraph like number compon much larger averag caus fundament load balanc problem graph select order studi perform algorithm must select specif graph studi discuss suggest two import characterist requir attent process phase transit graph structur surfacetovolum ratio first algorithm act differ mostli connect mostli unconnect graph second global phase algorithm fundament influenc cost remot access execut time local phase algorithm expect proport number node local portion graph assum cost global phase monoton increas number node boundari local portiona size boundari increas number remot edg increas process time rise cost model distribut memori machin tell us work done local done much rapidli work done remot put fact togeth recogn surfacetovolum ratio increas perform decreas realiz equival say cannot achiev perfect speedup problem interest explor probabilist mesh requir consid least two distinct surfacetovolum ratio demonstr perform concept interest valu surfacetovolum ratio characterist obtain simpli examin graphsa cube number node squar much larger surfacetovolum ratio choos examin scale speedup sinc allow us fix surfacetovolum ratio graph therebi simplifi analysi explor phase transit requir examin graph phase underli lattic give us total four graph measur argument given abov obtain best result use largest graph fit memori choos instead use modest amount memori shown tabl describ four graph figur possibl local portion graph white area part compo nent connect great distanc processor underli edg node per surfacetovolum memori per name lattic presenc processor ratio processor mb turn mani expens graph comput connect compon near edg presenc phase transit boundari reason illustr figur show local section graph one processor might sever local compon connect way remot part graph howev behavior graph fairli chaotic near boundari larg variat size largest compon includ graph type studi perform model section present result analyz algorithm build notion scale begin discuss local phase illustr phase transit affect even depthfirst search briefli discuss altern hybrid approach demonstr defici final examin balanc local global phase algorithm graph type select previou section explain balanc use understand speedup result model local phase first step compar comput capabl machin tabl show process power singl node platform second column tabl give graph c greiner td cs cm type mn mn mn mn tabl singl node connect compon perform valu tabl million node process per second use optim depthfirst search algorithm comparison second column show million node process per second cray c report time number node df time requir graph vari size figur time requir df graph cm sparc node execut time linear size graph process speed singl node one today power sequenti supercomput cray c report greiner consid rel perform td cm cycl time alpha node td time faster sparc cm hand memori access latenc time fast see tabl perform td node rang time better perform cm node depend type graph begin understand characterist machin domin behavior connect compon algorithm saw earlier connect compon perform given graph express function number node sinc expect number edg connect compon probabilist mesh also function number node fact local phase function linear size graph shown figur figur see execut time edg presenc percentag df time requir variou edg presenc x x x figur time requir df graph cm sparc node expect time rise linearli edg presenc probabl p see strang behavior around mark time local phase two graph type variou size linear behavior make node persecond metric meaning local phase regardless problem size clearli true parallel algorithm graph size direct impact perform surfacetovolum ratio although inform singlenod perform number cannot use make accur predict graph type machin might consid measur independ process rate node edg allow us character probabilist mesh phase transit graph structur break model shown figur figur show execut time graph rise rapidli around phase transit boundari graph figur larg enough cach behavior problem unless graph structur chang significantli phase transit exactli that howev caus algorithm behav much differ sinc singl df cover small portion graph less connect phase might think liquid phase cover nearli entir graph connect solid phase algorithm differ lead differ cach behavior turn explain rise execut time around phase transit boundari nevertheless nodespersecond metric provid scalabl inform local phase graph type use inform understand local global phase interact predict speedup cm cs perform rate tabl fairli similar number cs one number cm predict cm number within actual valu rememb machin base sparc architectur howev expect number similar predict cm cs td result error either machin scale number processor execut time number processor figur cm execut time pure global algorithm d processor node time processor base local phase algorithm illustr larg overhead incur skip local phase parallel execut compar solut continu model process stop moment ask again use hybrid algorithm algorithm assum uniform access time entir global address space certainli easier write arguabl easier understand well algorithm achiev good perform accord cost model support splitc distribut memori machin answer cannot ignor data local prove fatal perform skip local phase algorithm use sv implement find connect compon abl illustr concept figur figur show cm execut time pure global algorithm d graph although cost global phase asymptot approach constant valu result constant fraction ideal speedup fact remain parallel algorithm requir processor find compon graph singl processor use sequenti algorithm result d slightli better requir processor achiev uniprocessor figur merit highli connect graph suffer phenomenon associ phase transit discuss section never achiev speed singl processor second altern programm use hybrid algorithm discard sequenti program abstract write global phase algorithm typic approach often taken overhead associ commun layer use high global phase algorithm build new program abstract allow bulk commun processor ad complex design often result wors perform forc programm rewrit implement if algorithm accept anyth specif type graph exampl work graph convers hybrid implement use mani sequenti program abstract accept arbitrari graph algorithm perform well provid graph partit well processor graph interest mani area scienc execut time number processor total local global scale number processor figur execut time d td local cost remain nearli constant number processor increas global cost graph disconnect phase quickli reach plateau indic speedup close constant fraction ideal speedup model global phase consid work done global phase algorithm find connect compon local portion processor must examin remot edg process them assum remot interact neighbor processor fairli well loadbalanc global phase requir constant amount time independ number processor balanc local global phase constant well give us constant fraction ideal speedup fraction valu depend rel cost two phase graph disconnect phase approxim reason number remot edg wellbehav random variabl distribut compon split across two processor hand might spread four or even eight graph rare compon cross breadth processor local portion link togeth multipl processor global cost case consist primarili trade inform neighbor cost rise number processor increas hypothesi verifi data figur show local global execut time d td expect nearli constant execut time global phase result nearli constant fraction ideal speedup increas number processor exact fraction obtain depend rel cost local global phase expect turn depend surfacetovolum ratio sinc rel smaller number node boundari local portion result smaller global execut time rel local time fact case d surfacetovolum ratio achiev speedup per processor d surfacetovolum ratio achiev somewhat less per processor although global execut time nearli constant larg number processor small number processor exhibit clear upward trend trend explain straight scale number processor execut time number processor total local global figur execut time d td global cost graph connect phase rise almost linearli number processor indic nearli flat speedup larg number processor forward statist analysi consid normal distribut random variabl shown figur distribut number connect compon graph valu singl variabl distribut like end within standard deviat averag almost sure within two standard deviat hybrid algorithm howev work bulk synchron phase processor work synchron barrier synchron effect appli max function cost step natur select increas number independ variabl normal distribut expect increas maximum valu set variabl fact expect maximum rise fairli quickli first taper off global execut cost figur establish foundat model disconnect phase consid perform graph connect phase figur break local global execut time d td unlik graph disconnect phase global cost almost linearli number processor clearli phase transit connect phase broken intuit model disconnect phase connect phase graph domin singl larg compon singl processor own big compon processor attach singl larg compon main compon send unresolv edg owner number remot edg structur explor owner larg compon thu grow nearli linearli number processor sinc algorithm oper bulk synchron fashion processor must sit idl singl processor handl bulk work shown figur addit load imbal caus singl compon phenomenon connect phase also note high degre content around end algorithm larg compon complet form anoth global iter requir remov connect repres process list iter processor must access larg compon check remain edg cm observ averag time s remot access termin check recal uncongest remot access time number edg structur read edg presenc percentag maximum averag figur load imbal shown graph past phase transit boundari maximum number edg structur read processor grow rapidli though chaotic averag number remain much smaller phenomenon occur even dramat graph s indic eightfold increas polici cach could greatli improv algorithm regard effort requir solv load balanc problem saw graph disconnect phase graph connect phase obey relationship surfacetovolum ratio perform d speedup td nearli flatten processor d howev speedup still increas fairli quickli reach processor observ actual plateau cm cs result machin rel slow commun compar td figur show scale speedup four graph processor td interest ingli result indic better perform graph connect phase number processor small speedup line surfacetovolum ratio cross number processor increas disconnect phase speedup continu rise linearli connect phase fall off small number processor perform better graph connect phase answer lie rel cost local global phase cost local phase significantli greater connect phase disconnect phase greater number edg also differ algorithm behavior discuss model local phase small number processor extra cost reflect global phase ten remot edg link compon might explor cheapli five link distinct compon sinc algorithm discard redund remot edg soon recogn them cost global phase thu rel less scale number processor scale speedup td figur scale speedup cray td note crossov mostli unconnect mostli connect graph dimens graph connect phase tend mani redund edg graph disconnect phase tend redund edg data figur illustr differ execut time global phase d catch time d around processor two graph one disconnect phase one connect phase given us good intuit grasp algorithm perform expect speedup disconnect graph linear increas surfacetovolum ratio decreas connect graph expect find speedup asymptot approach maximum valu defin surfacetovolum ratio also gain intuit might creat better algorithm solv connect graph identifi natur problem reduc speedup yet investig one major factor howev rel cost commun comput given machin cray td best rel commun perform expect give best speedup result next section attempt use measur commun comput perform predict speedup anoth platform cm speedup predict recal moment simpl model algorithm amount comput amount commun local phase algorithm pure comput measur term number node process per second saw model phase let us assum global phase domin comput number processor scale speedup cm speedup vs predict td rel cost actual d predict d actual predict figur perform scale speedup d d predict use scale speedup td rel cost commun comput two machin rudimentari cost model specif domin remot read small piec data call cost local phase p processor c p local cost global phase c p global express scale speedup follow local c p local global local invert equat express ratio global phase cost local phase cost term number processor speedup c p global c p local use assumpt content phase use predict speedup one machin use speedup anoth machin rel cost commun comput exampl graph local phase measur indic cm take time longer td similarli measur discuss section time read remot valu machin indic cm take time long td multipli back predict speedup cm figur show result attempt d predict terribl good expect simpl model within valu valu d scale number processor scale speedup cm figur scale speedup think machin cm speedup yet drop graph processor result cm cs figur give speedup result cm figur give result cs expect scalabl algorithm decreas rel commun perform machin goe down conclus connect compon import problem underli emerg area comput physic well mani area comput scienc although simpl eleg sequenti solut parallel solut prove challeng practic order obtain high perform modern distribut memori machin critic exploit local node perform approach util hybrid algorithm combin simpl sequenti solut subgraph local node variant classic pram solut result global graph subgraph implement alogithm splitc use find connect compon class graph call probabilist mesh aris cluster dynam method graph built underli lattic structur instanc graph produc use singl probabl decid whether edg underli lattic present graph instanc hybrid approach prove effect local phase fast and reduc global graph reduc amount work global phase result solut yield best perform report date problem howev solut still demand high commun perform obtain reason speedup thorough analysi inher properti algorithm provid natur scale rule expos critic phase transit scale number processor scale speedup cs figur scale speedup meiko cs edg probabl increas point graph mostli unconnect collect small compon scale speedup nearli linear slope determin essenti ratio commun comput perform point graph mostli singl larg compon speedup limit due load imbal remot memori content effect quantifi cray td meiko cs think machin cm r a case now empir evalu cray td compil perspect new connect msf algorithm ultracomput pram journal physic find connect compon olog n log log n time erew pram connect compon label coars grain parallel com puter experiment studi parallel program splitc vector a parallel cluster label method mont carlo dynam an optim random parallel algorithm find connect compon graph a comparison parallel algorithm connect compon parallel swendsenwang algorithm a studi connect compon label algorithm mpp comput connect compon parallel comput connect compon olog n parallel time crew pram journal physic fast connect compon algorithm erew pram connect compon distribut memori machin implement effici portabl global memori layer distribut memori multiprocessor physic review letter a vector algorithm cluster format swendsenwang dynam experi activ messag meiko cs an olog n parallel connect algorithm nonunivers critic dynam mont carlo simul cluster mont carlo algorithm journal physic journal physic societi japan splitc meiko cs tr robot vision italicoitalicnsupscrpt log italicn parallel maxflow algorithm optim random parallel algorithm find connect compon graph connect compon italicoitaliclgsupscrptsupscrptitalicvital parallel time crew pram extend abstract fast connect compon algorithm erew pram parallel program splitc connect compon label coars grain parallel comput comparison parallel algorithm connect compon find connect compon italicoitaliclog italicnital loglog italicnital time erew pram comput connect compon parallel comput scale parallel program multiprocessor case network workstat experi activ messag meiko cs implement effici portabl global memori layer ctr michael mitzenmach design stimul program assign algorithm cours collect exercis base random graph acm sigcs bulletin v n p sept richard p martin amin m vahdat david e culler thoma e anderson effect commun latenc overhead bandwidth cluster architectur acm sigarch comput architectur new v n p may mark w goudreau kevin lang satish b rao torsten suel thanasi tsantila portabl effici parallel comput use bsp model ieee transact comput v n p juli