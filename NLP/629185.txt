t unifi formal four sharedmemori model a author present dataracefre sharedmemori model unifi four earliermodel weak order releas consist with sequenti consist specialoper vax memori model dataracefre dataracefre unifi themodel weak order releas consist vax dataracefre byform intuit program synchron explicitli correctli thensequenti consist guarante high perform manner retainsth advantag four model dataracefre express programmersinterfac explicitli formal weak order vax allow animplement allow weak order releas consist dataracefreeth implement propos dataracefre differ earlier implement bypermit execut synchron oper processor even whileprevi data oper processor progress ensur sequentialconsist two sychron processor exchang inform delay later operationsof second processor conflict incomplet data oper firstprocessor b introduct memori model sharedmemori multiprocessor system formal specif memori oper program appear execut programm particular memori model specifi valu may return read oper execut sharedmemori system paper present new memori model dataracefre unifi four earlier model although four model similar model differ advantag disadvantag programm system design unifi four model retain advantag four model uniprocessor provid simpl memori model ensur memori oper appear execut one time order specifi program program order thu read return valu last write in program order locat improv perform howev uniprocessor often allow memori oper overlap memori oper issu execut program order uniprocessor use interlock logic maintain programm model memori that memori oper appear execut one time program order model uniprocessor memori therefor advantag simplic yet allow high perform optim commonli and often implicitli assum memori model sharedmemori multiprocessor system sequenti consist formal lamport follow definit a multiprocessor system sequenti consist if result execut oper processor execut sequenti order oper individu processor appear sequenc order specifi program word sequenti consist multiprocessor appear like multiprogram uniprocessor although sequenti consist retain simplic uniprocessor memori model limit perform prevent use sever optim figur show multiprocessor system without cach common uniprocessor hardwar optim write buffer overlap memori oper outoford memori oper lockupfre cach violat sequenti consist optim significantli improv perform becom increasingli import futur processor cycl time decreas memori latenc increas gharachorloo et al describ earlier version work appear proceed th annual intern symposium comput architectur june dataracefre memori model develop paper extend dataracefre model distinguish unpair synchron oper pair releas acquir synchron opera tion definit dataracefre section use notion differ oper distinguish distinct correct synchronizationord happensbefor relat data race notion extens similar concept develop dataracefre also parallel work paper publish techniqu detect data race dataracefre system consequ review data race datarac memori model contain definit in slightli differ form section materi use section permiss acm mechan allow optim use sequenti consist model mechan requir hardwar support prefetch rollback initi figur violat sequenti consist share variabl r r local regist execut depict violat sequenti consist sinc total order memori oper consist program order let p p return read x note neither processor data depend among instruct therefor simpl interlock logic preclud either processor issu second instruct first sharedbu system without cach execut possibl processor issu memori oper order allow read pass write write buffer system gener interconnect network without cach execut possibl even processor issu memori oper program order oper reach memori modul differ order sharedbu system cach even cach coher protocol execut possibl processor issu memori oper outoford allow read pass write write buffer system gener interconnect network cach execut possibl even memori oper issu reach memori modul program order complet program order situat aris processor initi x cach processor issu read write propag cach processor altern memori model propos improv perform sharedmemori system use new model satisfi follow properti model simpl programm use model allow high perform central assumpt work programm prefer reason sequenti consist model sinc natur extens wellunderstood uniprocessor model therefor one way memori model satisfi first properti appear sequenti consist program formal character group program memori model satisfi second properti allow high perform optim guarante sequenti consist group program one group program possibl guarante sequenti consist still use mani optim program explicitli distinguish synchron memori oper oper use order oper data memori oper oper use read write data dichotomi figur modifi version figur present permiss ieee memori oper motiv behind four model weak order releas consist sequenti consist special oper henceforth call releas consist vax dataracefre origin call order respect dataracefre although four memori model similar small differ formal lead differ way satisfi two properti weak order releas consist restrict hardwar actual execut specif memori oper program order programm author order later state mutual exclus ensur access share variabl use construct critic section implement hardwarerecogniz synchron oper author releas consist formal group program call properli label pro gram releas consist ensur sequenti consist properli label program distinguish memori oper depend use exampl distinguish synchron oper ordinari data oper vax dataracefre model differ weak order releas consist avoid explicit restrict actual order execut specif memori oper vax architectur handbook data share synchron section state follow access explicitli share data may written must synchron access share writabl data programm must acquir control data structur seven instruct provid permit interlock access control variabl dataracefre state sequenti consist provid dataracefre pro gram dataracefre program discuss formal section distinguish synchron oper data oper ensur conflict data oper race ie cannot execut con current program contain data race dataracefre guarante behavior hardwar differ formal four model result model satisfi simplic highperform properti better model howev model satisfi properti better model exampl vax impos least restrict hardwar specif less explicit formal model consid statement befor access share writabl data programm must acquir control data structur allow concurr reader further hardwar behav program satisfi specifi condit although may possibl answer question vax handbook explicit formal interfac would allow straightforward unambigu resolut question releas consist hand provid formal explicit interfac howev section show hardwar requir releas consist restrict necessari paper defin new model dataracefre unifi weak order releas consist vax dataracefre model manner retain advantag model programm hardwar design follow summar dataracefre unifi four model overcom specif disadvantag specif model programm dataracefre unifi four model explicitli address two question a program correctli synchron b hardwar behav correctli synchron pro answer question formal intuit behind answer simpl a program correctli synchron none sequenti consist execut data race ie conflict data oper execut concurr b program correctli synchron hardwar behav sequenti consist viewpoint practic provid releas consist dataracefre howev explicit formal weak order vax eg allow concurr reader form data race hardwar design dataracefre unifi four model as shown section implement model suffici implement dataracefre furthermor dataracefre less restrict either weak order releas consist dataracefre hardwar design sinc exist implement dataracefre allow weak order releas consist data racefre new implement describ section differ implement weak order releas consist allow synchron oper execut even previou data oper synchron processor incomplet achiev sequenti consist processor exchang inform time synchron ensur later oper may conflict incomplet data oper delay data oper complet new implement differ implement data racefre distinguish differ type synchron oper rest paper organ follow section defin dataracefre section compar dataracefre weak order releas consist vax dataracefre model viewpoint programm hardwar design respect section relat dataracefre model section conclud paper dataracefre memori model section first clarifi common terminolog use throughout paper inform motiv dataracefre memori model section give formal definit dataracefre data racefre extens earlier model dataracefre terminolog motiv rest paper assum follow terminolog term system program oper as definit sequenti consist use sever level paper discuss memori model lowest level system machin hardwar program set machinelevel instruct oper memori oper either read memori locat a read oper modifi memori locat a write oper part machin instruct program program order execut partial order memori oper execut impos program text result execut refer valu return read oper execut sequenti consist execut execut could occur sequenti consist hardwar two memori oper conflict least one write access locat motiv dataracefre similar weak order releas consist vax model dataracefre base follow observ made assum processor maintain uniprocessor data control depend sequenti consist violat two processor interact memori oper common locat interact classifi data memori oper synchron memori oper data oper usual frequent involv read write data synchron oper usual less frequent use order conflict data oper differ processor exampl implement critic section use semaphor test semaphor unset clear semaphor synchron oper read write critic section data oper addit synchron oper character pair acquir releas synchron oper unpair synchron oper follow the character similar use properli label program releas consist section discuss differ execut consid write read synchron oper locat read return valu write valu use read processor conclud complet memori oper write processor write program interact write synchron oper call releas read synchron oper call acquir releas acquir said pair other synchron oper unpair pair synchron oper execut exampl consid implement critic section use semaphor semaphor test testset instruct clear unset instruct write due unset pair test return unset valu unset write releas oper observ paraphras permiss ieee test read acquir oper unset valu return test use conclud complet memori oper previou invoc critic section write due set testset read due test testset return set valu unpair oper read acquir write releas set valu commun complet previou memori oper illustr section possibl ensur sequenti consist place hardwar restrict synchron oper further synchron oper pair oper requir restrict thu hardwar could distinguish type oper could complet data oper faster oper unpair synchron oper faster pair synchron oper without violat sequenti consist dataracefre system give programm option distinguish type oper enabl higher perform definit dataracefre section inform character memori oper base function perform indic distinguish memori oper base character higher perform obtain without violat sequenti consist section first discuss memori oper distinguish base character dataracefre system give formal criterion oper distinguish correctli dataracefre section conclud definit dataracefre memori model impos restrict differ memori oper may di tinguish one option distinguish data oper synchron oper hardwar provid differ instruct may use type oper exampl special instruct testset unset may use gener synchron oper altern oper certain memorymap locat may distinguish synchron oper one way distinguish pair unpair synchron oper hardwar provid special instruct synchron oper static pairabl relat instruct write read execut distinguish hardwar pair releas acquir gener instruct relat pairabl relat read return valu write figur give exampl differ instruct pairabl relat illustr use follow discuss programm distinguish oper correctli dataracefre oper distinguish exactli accord function outlin section distinct inde correct howev dataracefre requir programm distinguish oper match syncreadflag a testset b fetchinccount fetchinccount syncwriteflag fetch inc syncwrit unset testset unset test testset set testset unset testset unset data op critic section data op barrier code barrier fetchinccount n data op barrier testset code critic setion sync read acquir acquir releas releas syncreadflag local_flag whilesyncreadflag local_flag els figur synchron instruct pairabl relat differ system figur b repres two system differ set instruct use synchron oper system figur show differ synchron oper pairabl relat along program execut use oper tabl figur list read synchron oper potenti acquir horizont write synchron oper potenti releas verti calli indic synchron oper correspond row column pairabl pair execut read return valu written write execut execut occur sequenti consist hardwar oper execut order shown opx denot oper op locat x dataread datawrit denot data oper testset fetchinc instruct defin atom instruct read write oper repres togeth testsetx fetchincx pair oper connect arrow figur show system testset unset instruct use implement critic sec tion testset atom read memori locat updat valu unset updat memori locat valu write due unset read due testset pairabl figur show code critic section execut involv two processor figur b show system fetchinc syncwrit syncread instruct use implement barrier fetchinc atom read increment memori locat syncwrit synchron write updat memori locat specifi valu syncread synchron read memori locat write due fetchinc pairabl read due anoth fetchinc write due syncwrit pairabl read due syncread also shown code n processor synchron barrier execut variabl local_flag implement local regist processor oper shown execut function exactli absenc precis knowledg regard function oper programm conserv distinguish oper synchron oper even oper actual perform function data oper sequenti consist still guarante although full perform potenti system may exploit henceforth character oper one distinguish programm which may differ base actual function oper per form exampl oper actual data oper programm use synchron instruct refer synchron oper intuit oper distinguish correctli dataracefre suffici synchron oper distinguish releas acquir criteria suffici oper distinguish data involv race ie program dataracefre notion data race formal defin happensbefor relat everi execut program follow happensbefor relat execut partial order memori oper execut inform happensbefor order two oper initi differ processor pair releas acquir oper execut them definit formal intuit use program order synchronizationord relat definit definit execut memori oper order memori oper relat releas oper acquir oper pair other definit happensbefor relat execut irreflex transit closur program order synchronizationord relat execut definit data race dataracefre program dataracefre model follow definit data race execut pair conflict oper least one data order happensbefor relat defin execut execut dataracefre data race program dataracefre sequenti consist execut dataracefre definit hardwar obey data race free memori model result everi execut dataracefre program hardwar obtain execut program sequenti consist hardwar figur b illustr execut respect exhibit exhibit data race execut figur implement critic section code figur a except programm use data oper instead unset synchron oper p s write s therefor happensbefor order p s write x p s read x sinc write read x conflict data opera tion form data race similar reason p s data write form data race p s test set data write s figur b show execut barrier code figur b execut dataracefre happensbefor order conflict pair oper least one pair data note execut figur b use critic section therefor dataracefre requir share done critic section also note program base asynchron algorithm oper access data order synchron program data racefre oper also need distinguish synchron oper syncreadflag a testset b fetchinccount fetchinccount syncwriteflag testset syncreadflag po po po po po po po po po po po po figur execut a exhibit b exhibit data race discuss section definit dataracefre assum program use machin instruct hardwaredefin synchron primit howev programm use highlevel parallel program languag use dataracefre extend definit dataracefre highlevel program as discuss dataracefre extens straightforward requir highlevel parallel languag provid special construct synchron eg semaphor monitor forkjoin task ren dezvou dataracefre place restrict highlevel synchron mechan respons compil ensur program dataracefre highlevel compil one dataracefre machinelevel ensur sequenti consist programm vs weak order releas consist vax model dataracefre programm section compar dataracefre memori model weak order releas consist vax dataracefre programm viewpoint state earlier central assumpt work programm prefer reason sequenti consist programm dataracefre provid simpl model program dataracefre hardwar appear sequenti consist weak order vax memori model state program obey certain condit hardwar wellbehav howev sometim interpret may need deduc whether program obey requir condit as concurr reader case section hardwar behav program obey requir condit dataracefre express aspect explicitli formal weak order vax dataracefre state program datarac free hardwar appear sequenti consist program dataracefre releas consist provid formal interfac programm dataracefre provid similar interfac minor differ program dataracefre ensur sequenti consist also call dataracefre program differ dataracefre distinguish differ synchron oper effect pair conflict synchron oper depend order execut distinct significantli affect programm exploit hardwar design program releas consist ensur sequenti consist call properli label program dataracefre program properli label properli label program dataracefre as defin definit differ minor aris properli label program less explicit notion pair allow conflict data oper order oper nsync correspond nonpair synchron oper dataracefre although memori model allow hardwar guarante sequenti consist properli label program formal describ model would similar dataracefre similar dataracefre properli label program potenti disadvantag dataracefre rel weak order releas consist programm asynchron algorithm reli sequenti consist correct weak order releas consist provid programm option reason explicit hardwar condit write program dataracefre work correctli possibl faster dataracefre base assumpt programm prefer reason sequenti consist therefor restrict behavior hardwar program dataracefre nevertheless maximum perform programm asynchron algorithm could deal directli specif implement dataracefre would entail risk portabl across dataracefre implement would enabl futur faster implement other common program summar programm dataracefre similar releas consist dataracefre provid explicit formal interfac weak order vax model previou work discuss requir dataracefre program model restrict programm data race violat sequenti consist due data race may dynam detect model vs weak order releas consist vax model dataracefre hardwar design section compar dataracefre weak order releas consist vax model data racefre hardwar design viewpoint first show dataracefre unifi four model hardwar design implement weak order releas consist vax model data racefre obey dataracefre section show dataracefre less restrict weak releas consist dataracefre hardwar design dataracefre allow implement allow weak order releas consist dataracefre section unifi weak order releas consist vax model datarac free hardwar design hardwar design dataracefre unifi releas consist dataracefre weak order vax model implement four model obey dataracefre specif implement releas consist obey dataracefre becaus discuss section implement releas consist ensur sequenti consist dataracefre program implement dataracefre obey dataracefre becaus discuss section implement dataracefre ensur sequenti consist dataracefre program implement weak order obey dataracefre earlier work show implement weak order obey dataracefre argument implement dataracefre obey dataracefre dataracefre formal vax model therefor implement vax model obey data racefre dataracefre less restrict weak order releas consist dataracefre hardwar design less restrict hardwar design implement either weak order releas consist dataracefre dataracefre allow implement allow weak releas consist dataracefre figur motiv implement figur show part execut two processor execut critic section code figur a processor p p testset succeed execut data oper includ one locat x final unset s critic section code dataracefre therefor execut dataracefre implement appear sequenti consist execut figur p s testset succe first therefor p s testset succe return valu written p s unset thu appear sequenti consist p s data read x return valu written p s data write x figur show implement weak releas consist dataracefre achiev thi unset testset wo stall p datawrit complet wo rc stall p unset therefor for datawrit drf delay dataread datawrit complet testset rc delay unset datawrit complet drf stall p unset po po po po po po po need never stall p delay oper testset po unset po po po releas consist figur implement memori model weak order releas consist requir p delay execut unset p s data complet ie seen processor howev delay necessari maintain sequenti consist as also observ zucker impos implement propos datarac describ next instead implement maintain sequenti consist requir p s data write x complet p execut data read x achiev ensur i p execut testset p notifi p incomplet write x ii p delay read x p s write x complet new optim p execut unset earlier p s testset succeed earlier weak order releas consist thu p s read write follow testset by program order conflict previou oper p also complet earlier oper data read x conflict previou oper p may delay p s correspond oper complet nevertheless oper also complet earlier weak order releas consist exampl p s read x occur late enough program p s write may alreadi complet p examin read therefor read proceed without delay recent implement releas consist propos use rollback mechan let processor condit execut read follow acquir such p s testset acquir complet optim benefit implement also allow write follow acquir issu complet earlier let read follow acquir commit earlier dataracefre implement differ dataracefre implement dataracefre distinguish unset testset synchron oper take differ action dataracefre make distinct section describ suffici condit implement dataracefre base motiva tion section give detail implement propos base condit suffici condit hardwar obey dataracefre memori model result execut dataracefre program hardwar obtain sequenti consist execut program result execut set valu read oper return section valu return read valu write to locat seen last read processor thu valu return read depend order read processor see read respect write locat ie order processor see conflict oper thu hardwar dataracefre obey follow condit condit hardwar dataracefre everi execut e data racefre program hardwar i oper execut e sequenti consist execut program ii order two conflict oper seen processor execut e sequenti consist execut processor see write read execut processor locat write return valu subsequ write processor see read read return valu notion similar perform respect processor perform follow give three requir data synchron control togeth suffici hardwar satisfi dataracefre condit therefor obey dataracefre data requir pertain pair conflict oper dataracefre program least one oper data oper execut sequenti consist hardwar pair oper order happensbefor relat execut seen processor order data requir execut dataracefre hardwar pair oper continu seen processor happensbefor order execut requir ensur figur p see p s write x read x base discuss figur data requir condit meet data requir pair conflict oper differ processor conflict oper processor suffici maintain intraprocessor data depend condit assum maintain rest section preced follow refer order program order oper either synchron data complet or perform seen as defin abov processor data requir condit let rel acq releas acquir oper issu processor p rel p acq respect let rel acq pair other prereleas condit p rel issu rel rememb oper preced rel incomplet releaseacquir condit i acq complet p rel transfer p acq address ident rememb oper ii acq complet rel complet oper transfer p rel on p rel s acquir preced rel complet postacquir condit let acq preced by program order let oper x transfer p acq acq i issu acq complet ii x conflict issu complet data requir condit prove correct show ensur x conflict oper differ processor happensbefor order x y x complet processor see y impli processor see x y meet data requir execut figur prereleas condit ensur p execut unset rememb incomplet releaseacquir condit ensur p execut success testset transfer address x p postacquir condit ensur p detect delay complet enforc delay thu datareadx return valu written besid data requir dataracefre condit also requir order two conflict synchron oper seen processor sequenti consist hardwar synchron requir data synchron requir would suffic satisfi data condit also guarante execut e hardwar obey requir sequenti consist execut oper happensbefor order execut conflict synchron oper e absenc control flow oper such branch automat ensur presenc control flow oper how ever extra requir call control requir need ensur weak order releas consist propos implement dataracefre satisfi synchron requir explicitli control requir implicitli by requir uniprocessor control depend maintain sinc key differ implement earlier model new implement dataracefre data requir follow describ implement propos data requir condit formal three requir give explicit condit synchron control requir conserv way satisfi synchron requir processor also stall issu synchron oper complet preced synchron oper write oper whose valu return preced synchron read oper conserv way satisfi control requir processor also block read control program flow read complet note optim data requir condit implement follow section possibl exampl releaseacquir condit acquir complet even oper transfer releas processor incomplet long releas processor transfer ident incomplet oper acquir processor postacquir condit necessari delay oper y follow acquir conflict oper x transfer acquir processor complet instead suffici delay x seen acquir processor long mechan such cachecoher protocol ensur write locat seen order processor thu releas processor also transfer valu written incomplet write read follow acquir use transfer valu need delay implement propos dataracefre obey weak order releas con sistenc dataracefre section describ implement propos data requir condit propos assum arbitrarili larg sharedmemori system everi processor independ cach processor connect memori arbitrari interconnect network propos also assum directorybas writeback invalid ownership hardwar cachecoher protocol similar respect discuss agarw et al one signific featur protocol invalid sent write line readonli share state acknowledg invalid processor cachecoher protocol ensur a oper eventu seen processor b write locat seen order processor c processor detect oper issu complet c oper complet issu processor receiv request line cach howev write data synchron line readonli share state complet invalid processor send acknowledg either write processor may directli receiv ack nowledg directori may collect forward singl messag write processor indic complet write implement propos involv ad follow four featur uniprocessorbas processor logic base cachecoher logic mention abov tabl summar featur addit three buffer per processor incomplet reserv special tabl modif issu logic delay issu stall certain oper tabl a modif cachecoher logic allow processor retain ownership line processor reserv buffer special handl pair acquir line tabl b new processortoprocessor messag call empti special buffer tabl c discuss explain featur use implement prereleas releas acquir postacquir part data requir condit recal preced follow refer order program order prereleas condit processor must rememb oper preced releas incomplet thi processor use incomplet buffer store address incomplet data opera tion releas issu preced synchron oper complet to prevent deadlock preced data oper issu thu incomplet buffer rememb oper requir prereleas condit to distinguish oper preced follow releas entri incomplet buffer may tag multipl incomplet buffer may use releaseacquir condit acquir cannot complet follow occur regard releas pair acquir a releas complet b oper receiv releas processor acquir preced releas complet c releas processor transfer new acquir processor address incomplet oper preced releas purpos everi processor use reserv buffer store processor releas condit hold releas which write oper releas processor procur ownership releas line processor give ownership address line reserv buffer consequ cachecoher protocol forward subsequ request line includ acquir pair releas releas buffer content purpos incomplet incomplet data oper of processor use rememb incomplet oper of processor preced releas of pro cessor reserv releas of processor incomplet oper use rememb releas of processor may caus futur pair acquir of processor need special attent special incomplet oper of anoth processor receiv acquir by processor use identifi oper of proce requir special action due earli complet acquir of processor a content purpos buffer buffer insert delet event entri insert event entri delet incomplet data miss address data oper data miss complet address data oper reserv releas issu address releas oper releas com plete oper preced releas complet ie delet incomplet buffer special buffer empti address releas oper special acquir complet address receiv acquir empti special buffer messag arriv entri b insert delet action buffer tabl key buffer aggress implement dataracefre processor releas processor stall acquir pair releas condit a b c met tabl b give detail base cachecoher logic modifi allow releas processor retain ownership releas line reserv buffer servic acquir pair releas a b c met retain ownership releas line releas processor stall releas oper processor line perform remot servic extern request line remot servic mechan allow releas processor servic request address oper special buffer action process usual data unpair synchron releas issu previou oper issu previou synchron oper complet acquir issu special buffer empti stall acquir complet ye stall delay issu oper special buffer empti a modif issu logic address request reserv buffer action request processor process usual process usual read write cach line replac ment stall processor address delet reserv buffer request processor forward processor process usual releas stall request address delet reserv buffer acquir stall request special buffer empti pair releas in reserv buffer complet send acquir processor releas line entri incomplet buffer tag preced releas request acquir processor cach line inform directori processor retain ownership data unpair synchron read request send line processor write request updat line processor cach send acknowledg pro request processor cach line inform directori processor retain ownership b modif cachecoher logic processor event messag incomplet buffer entri correspond releas delet send empti special buffer messag processor execut acquir pair releas c new processortoprocessor messag tabl aggress implement dataracefre processor without allow processor cach line mechan stall oper extern releas remot servic extern oper necessari stall data oper lead deadlock servic extern releas oper remot would let new releas processor procur ownership line requir releaseacquir condit meet condit a b c requir processor wait releas complet special buffer empti transfer content incomplet buffer acquir processor postacquir condit processor must a stall acquir complet b delay follow oper complet conflict oper transfer acquir pur pose processor use special buffer save inform transfer acquir follow oper conflict oper store special buffer processor either a stall b delay oper receiv empti special buffer messag releas processor releas processor send empti special buffer messag delet address releas pair acquir reserv buffer simplic acquir processor also stall acquir special buffer empti avoid complex delay oper incomplet oper multipl processor complet implement propos data requir condit assum process run uninterrupt processor handl context switch correctli processor must stall switch variou buffer mention empti overflow buffer also handl make processor stall entri delet relev buffer propos never lead deadlock livelock long underli cachecoher protocol implement correctli messag lost network or timeout initi system cleanup gener lost messag specif propos never stall memori oper indefinit sinc i propos never delay complet issu data oper ii propos delay oper certain issu data oper incomplet thu propos lead deadlock livelock vs model previou section shown dataracefre memori model unifi weak order releas con sistenc vax model dataracefre section first summar memori model propos literatur examin dataracefre relat them ibm memori model guarante except write follow read differ loca tion oper singl processor appear execut program order write appear execut atom also provid serial oper execut serial oper processor complet oper serial oper accord program order execut nonseri oper processor complet serial oper nonserializa tion oper accord program order processor consist pram total store order model ensur write given processor appear execut order processor model mainli differ whether write appear becom visibl processor simultan differ time partial store order model similar total store order except order write processor separ store barrier oper model known releas consist processorconsist special oper similar releas consist sequenti consist special oper except requir special oper sync nsync processorconsist concurrentconsist model ensur sequenti consist program except which explicitli test sequenti consist take access time consider slow memori model requir read return valu previou conflict write valu written say processor p read valu earlier conflict write p cannot return causal memori model ensur write causal preced read observ read causal preced transit relat establish program order due read return valu write base assumpt programm prefer reason sequenti con sistenc concurr consist model explicitli state programm expect sequenti consist howev condit give sequenti consist seem ambigu difficult relat directli dataracefre model explicitli state programm expect sequenti consist howev previou section dataracefre use determin suffici condit follow serial oper analog synchron oper weak order ing therefor appear sequenti consist dataracefre program serial oper access memori interpret synchron oper everi write serial oper pair abl everi read serial oper remain model difficult determin exactli programm expect sequenti con sistenc assumpt programm prefer reason sequenti consist true state model harder reason dataracefre futur hope specifi model use approach dataracefre ie specifi model term formal set constraint program hardwar appear sequenti consist program obey constraint call approach sequenti consist normal form investig specif provid greater insight lead unif conclus mani programm sharedmemori system implicitli assum model sequenti consist share memori unfortun sequenti consist restrict use mani high perform uniprocessor optim higher perform sever altern memori model propos model simpl reason provid high perform believ programm prefer reason sequenti consist therefor way satisfi properti model appear sequenti consist common program give program highest perform possi ble model weak order releas consist with sequenti consist special oper vax dataracefre base common intuit programm distinguish data synchron oper correct execut guarante along high perform howev model formal intuit differ differ advantag disadvantag respect model paper propos memori model dataracefre unifi weak order releas consist vax model dataracefre retain advantag them hardwar dataracefre appear sequenti consist program dataracefre dataracefre unifi four model provid programm view similar four model permit hardwar allow four model compar weak order dataracefre provid formal interfac programm sinc explicitli state program correctli synchron dataracefre hardwar behav correctli synchron program sequenti consist also dataracefre less restrict weak order hardwar design sinc allow implement weak order allow compar releas consist dataracefre less restrict hardwar design sinc allow implement releas consist allow compar vax model dataracefre provid formal interfac sinc explicitli state program correctli synchron hardwar behav correctli synchron program compar dataracefre dataracefre less restrict hardwar design sinc allow implement take differ action differ type synchron oper acknowledg immens grate dr harold stone editor advic patienc sever revis paper also grate anonym refere mani comment suggest improv work consider thank kourosh gharachorloo mani insight discuss memori model comment earlier draft paper also thank vikram adv brian bershad allan gottlieb ross johnson alex klaiber jim laru david wood richard zucker valuabl comment earlier draft paper r weak order new definit detect data race weak memori system suffici condit implement dataracefre memori model evalu directori scheme cach coher implement program causal distribut share memori evalu use multiprocessor simul model asynchron parallel success overrelax symmetr linear complementar problem memori access buffer multiprocessor memori access depend sharedmemori multiprocessor memori consist event order scalabl sharedmemori multiprocessor two techniqu enhanc perform memori consist model perform evalu memori consist model sharedmemori multiprocessor detect violat prove comput scienc technic report nyu ultracomput design mimd share memori parallel comput weaken consist enhanc concurr distribut share memori make multiprocessor comput correctli execut multiprocess program pram scalabl share memori algorithm scalabl synchron sharedmemori multiprocessor seminar texa instrument research lab dalla access order coher share memori multiprocessor effici correct execut parallel program share memori studi weak consist model tr cach coher protocol evalu use multiprocessor simul model memori access buffer multiprocessor effici correct execut parallel program share memori evalu directori scheme cach coher asynchron parallel success overrelax symmetr linear complementar problem access order coher share memori multiprocessor memori access depend sharedmemori multiprocessor algorithm scalabl synchron sharedmemori multiprocessor perform evalu memori consist model sharedmemori multiprocessor prove sequenti consist highperform share memori extend abstract detect violat sequenti consist detect data race weak memori system weak orderingmyampersandmdasha new definit memori consist event order scalabl sharedmemori multiprocessor lockupfre instruct fetchprefetch cach organ ctr honghui lu alan l cox willi zwaenepoel content elimin replic sequenti section distribut share memori program acm sigplan notic v n p juli alvaro e campo juan e navarro pagecoher causal consist protocol distribut share memori journal system softwar v n p august a l cox s dwarkada p keleh h lu r rajamoni w zwaenepoel softwar versu hardwar sharedmemori implement case studi acm sigarch comput architectur new v n p april leonida i kontothanassi michael l scott ricardo bianchini lazi releas consist hardwarecoher multiprocessor proceed acmiee confer supercomput cdrom pe decemb san diego california unit state neve miguel castro paulo gued checkpoint protocol entri consist share memori system proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state chong kai hwang perform analysi four memori consist model multithread multiprocessor ieee transact parallel distribut system v n p octob povl t koch robert j fowler eric jul messagedriven relax consist softwar distribut share memori proceed st usenix confer oper system design implement pe novemb monterey california jo f martnez josep torrella specul synchron appli threadlevel specul explicitli parallel applic acm sigop oper system review v n decemb jame r laru brad richard guhan viswanathan lcm memori system support parallel languag implement acm sigplan notic v n p nov robert stet sandhya dwarkada nikolao hardavella galen hunt leonida kontothanassi srinivasan parthasarathi michael scott cashmerel softwar coher share memori cluster remotewrit network acm sigop oper system review v n p dec ramakrishnan rajamoni alan l cox perform debug share memori parallel program use runtim depend analysi acm sigmetr perform evalu review v n p june alex gontmakh avi mendelson assaf schuster use fine grain multithread energi effici comput proceed th acm sigplan symposium principl practic parallel program march san jose california usa dejan perkov peter j keleh protocolcentr approach onthefli race detect ieee transact parallel distribut system v n p octob leonida kontothanassi robert stet galen hunt umit rencuzogullari gautam altekar sandhya dwarkada michael l scott share memori comput cluster symmetr multiprocessor system area network acm transact comput system toc v n p august guang r gao vivek sarkar locat consistencya new memori model cach consist protocol ieee transact comput v n p august fong pong michel duboi formal automat verif cach coher multiprocessor relax memori model ieee transact parallel distribut system v n p septemb robert c steink gari j nutt unifi theori share memori consist journal acm jacm v n p septemb vijay s pai parthasarathi ranganathan sarita v adv traci harton evalu memori consist model sharedmemori system ilp processor acm sigplan notic v n p sept matthew j zekauska wayn a sawdon brian n bershad softwar write detect distribut share memori proceed st usenix confer oper system design implement pe novemb monterey california xiaowei shen arvind larri rudolph commitreconcil fenc crf new memori model architect compil writer acm sigarch comput architectur new v n p may fong pong michel duboi verif techniqu cach coher protocol acm comput survey csur v n p march allon adir hagit attiya gil shurek informationflow model share memori applic powerpc architectur ieee transact parallel distribut system v n p may dan grossman jeremi manson william pugh highlevel memori model mean transact proceed workshop memori system perform correct octob san jose california jeremi manson william pugh sarita v adv java memori model acm sigplan notic v n p januari jae bum lee chu shik jhon reduc coher overhead barrier synchron softwar dsm proceed acmiee confer supercomput cdrom p novemb san jose ca h sarojadevi s k nandi s balakrishnan correct program execut cach coher maintain local datashar boundari distribut share memori multiprocessor intern journal parallel program v n p octob m rasit eskicioglu comprehens bibliographi distribut share memori acm sigop oper system review v n p jan