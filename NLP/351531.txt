t priori sparsiti pattern parallel spars approxim invers precondition a parallel algorithm comput spars approxim invers spars matrix either use prescrib sparsiti pattern approxim invers attempt gener good pattern part algorithm paper demonstr that pde problem pattern power sparsifi matric psm use priori effect approxim invers pattern addit effort adapt sparsiti pattern calcul may requir psm pattern relat variou approxim invers sparsiti pattern matrix graph theori heurist concern pde green function parallel implement show psmpattern approxim invers significantli faster construct approxim invers construct adapt often give precondition compar qualiti b introduct spars approxim invers approxim invers usual spars matrix spars matrix accomplish exampl leastsquar method minim matrix residu norm f constraint spars gener degre freedom problem nonzero valu well locat minim consid variabl simultan howev complex thu simpl approach prescrib set nonzero sparsiti pattern s perform minim object function decoupl sum squar norm n individu column ie e j j jth column ident matrix matrix respect leastsquar matrix small number column equal number nonzero correspond j nonsingular leastsquar matric full rank thu approxim invers construct solv n leastsquar problem parallel howev spars approxim invers attract parallel precondit primarili precondit oper spars matrix vector product cost construct approxim invers larg matrix usual high especi adapt pattern select strategi describ below competit construct parallel diagon domin a entri decay rapidli away diagon band pattern produc good approxim invers work perform auspic us depart energi lawrenc livermor nation laboratori contract weng center appli scientic comput lawrenc livermor nation laboratori l box livermor ca echowllnlgov form right approxim invers use here notat slightli clearer matrix distribut parallel processor row left approxim invers comput rowwis gener set without applicationspec inform clear best choos sparsiti pattern algorithm develop rst comput approxim invers initi pattern s updat new minim problem solv either exactli inexactli process repeat threshold residu norm satis maximum number nonzero reach refer adapt procedur one procedur use iter method minim residu start spars initi guess approxim minim ie nd spars approxim solut suppos spars initi guess j use rst iter spars maintain sparsiti strategi drop small element usual use either search direct iter prescrib pattern necessari sinc sparsiti pattern emerg automat method ecient sparsespars oper must use product spars matrix spars vector p nonzero involv p column spars matrix anoth adapt procedur call spai use numer test determin nonzero locat ad current sparsiti pattern jth column numer test ad nonzero locat k form toler residu given sparsiti pattern column j j current approxim test lower bound improv squar residu norm pattern j augment entri k ad toler satis lefthand side larg compar valu k cost perform test spars dot product r column k locat test interprocessor commun need test k correspond column local processor adapt algorithm util addit degre freedom minim aord locat nonzero allow much gener problem solv befor adapt method howev tend expens thu paper focus problem select preprocess step spars approxim invers comput immedi minim section rst examin sparsiti pattern produc nonadapt adapt scheme section test idea use pattern power sparsi matric psm priori sparsiti pattern spars approxim invers numer test present section comparison sequenti parallel version current method final section draw conclus graph interpret approxim invers sparsiti pattern use pattern variant structur spars matrix order n direct graph ga whose vertic integ whose edg i j correspond nonzero odiagon entri a thi notat usual impli matric nonzero diagon entri subset ga direct graph vertic subset edg ga priori pattern spars approxim invers graph ga represent sparsiti pattern a clear context distinguish them structur vector x order n subset ng correspond nonzero entri x associ matrix order n often refer structur x subset vertic associ matrix notic then structur column j matrix set vertic ga edg point vertex j plu vertex j itself structur row j vertex plu set vertic point vertex j invers matrix show unknown linear system depend unknown structur matrix show immedi depend suggest structur edg i whenev direct path vertex vertex j ga if nonsingular ignor coincident cancel structur call transit closur ga denot g a irreduc matrix result say invers full matrix suggest possibl truncat transit closur process approxim invers spars matrix heurist often employ vertic closer vertex j along direct path import retain approxim invers sparsiti pattern idea support decay element observ tang discret green function mani problem sparsiti pattern rst use benson frederickson symmetr case also dene matric pattern qlocal matric given graph ga structur symmetr matrix full diagon structur jth column qlocal matrix consist vertex j qth level nearestneighbor ga local matrix diagon matrix local matrix sparsiti pattern a sparsiti pattern common priori pattern use approxim give good result mani problem usual improv fail mani problem one improv use higher level q unfortu nate storag precondition grow quickli q increas even impract mani case huckl propos similar pattern may eectiv nonsymmetr includ pattern correspond graph ga densiti former particular grow quickli increas k primarili pattern use envelop pattern adapt spai algorithm select pattern give upper bound interprocessor commun requir parallel implement cosgrov daz propos augment pattern without go full local matrix suggest ad nonzero j way minim number new row introduc jth leastsquar matrix in express augment structur determin structur a kolotilina yeremin propos similar heurist augment sparsiti pattern factor spars approxim invers sparsic instead augment pattern a also possibl diminish pattern rel full accomplish spar sicat drop small element matrix a use result pattern introduc kolotilina comput spars approxim invers dens matric see also kaporin spars matric factor approxim invers sparsic combin use higher level neighbor tang show sparsifi matrix prior appli adapt spai algorithm eectiv anisotrop problem observ storag therefor oper count requir precondition produc way much smaller techniqu gener pattern power sparsi matric idea explicitli combin sparsic use higher level neighbor use alleon et al attribut techniqu cosnuau approxim invers dens matric electromagnet howev test show higher level warrant tang wan also use sparsi cation appli qlocal matrix pattern q approxim invers use multigrid smoother show sparsic caus deterior converg rate problem work alleon et al tang wan repres rst use psm pattern instead appli sparsic a also appropri case appli sparsic spars approxim invers comput use reduc cost use approxim invers rel full insight adapt scheme adapt scheme gener pattern dierent pattern a exampl gener pattern much sparser a nevertheless pattern produc adapt scheme interpret use graph a consid rst approxim minim method describ section follow algorithm nd spars approxim solut minim residu iter drop strategi element search direct r encapsul function drop step may depend current pattern m algorithm spars approxim solut spars initi guess r e j loop krk tol reach max iter dropr q ad rq m r r q endloop element r alreadi candid new element m vector r gener essenti product thu structur r set vertic edg point vertic structur m initi guess consist singl nonzero element locat j structur grow outward vertex j ga iter algorithm search direct iter method r instead r kth entri search direct r ae k drop strategi base size entri similar one base test attempt minim updat residu norm method candid new element rst second level neighbor vertic for nonsymmetr a direct edg import priori pattern spars approxim invers exactli graph interpret spai algorithm see huckl comput column j vertic far vertex j enter pattern least initi algebra mean nonzero locat r ae k intersect valu test zero ecient implement spai use graph idea narrow indic k need check earli parallel implement spai test rst level neighbor vertex rather rst second level good approxim mani case implement also assum structur symmetr onesid interprocessor commun necessari recent parallel implement spai implement algorithm exactli code implement onesid commun messag pass interfac mpi use dynam load balanc case processor nish comput row earlier other pattern power sparsi matric graph interpret section observ prescrib sparsiti pattern pattern gener adapt method gener subset pattern low power given full diagon typic increas accuraci higher power clearli method relat neumann seri characterist polynomi structur column j approxim invers subset vertic level set with direct edg vertex j ga good vertic choos level set neighborhood vertex j algorithm dier vertic select convectiondomin anisotrop problem upstream vertic vertic prefer direct greater uenc other column j invers figur show discret green function point pde convect nonsymmetri function show upstream nonzero row column exact invers greater magnitud other without addit physic inform direct ow howev often possibl use sparsic identifi prefer upstream direct fig green function point pde convect examin sparsiti pattern produc adapt algorithm tri determin could gener simpler graph algorithm simpl exampl turn structur produc exactli close transit closur subset ga ie structur sparsi edmond chow matrix figur show structur sever matric a orsirr harwellbo collect b sparsic origin matrix c transit closur g d structur produc spai algorithm latter gure select show exampl eectiv spars approxim invers pattern problem there are howev bothersom featur exampl approxim invers four independ diagon block note approxim adapt gener pattern d well pattern c gener use transit closur a b sparsi orsirr c transit closur b d pattern spai fig adapt gener pattern d approxim transit closur c sparsifi simplest method sparsifi matrix retain entri matrix greater global threshold thresh exampl figur use import howev make sure diagon element retain otherwis structur singular matrix would result case gener diagon alway retain priori pattern spars approxim invers one strategi choos threshold choos one retain exampl onethird origin nonzero matrix fewer nonzero retain power sparsi matrix number nonzero grow quickli threshold chosen small problem test section number level use may increas precondition reach target number nonzero best choic paramet problemdepend special problem strategi may eectiv exampl matrix contain uniqu valu matrix sparsi use global threshold matrix scale becom import often case matrix contain mani dierent type equat variabl scale way exampl consid matrix rst row column scale larg number z threshold z chosen diagon matrix retain third row sparsi matrix becom independ row thu appli threshold matrix symmetr scale one diagon eg matrix scale matrix is threshold less equal guarante diagon retain scale also make easier choos threshold method scale foolproof avoid simpl problem graph sparsi matrix vertex connect vertic accomplish sparsifi matrix one retain least xed number edg vertex exampl one correspond largest matrix valu given paramet ll implement column j select diagon jth element plu largest odiagon element column j origin matrix guarante vertic edg vertex j appli rowwis guarante vertic edg eman vertex j again choos explicitli keep diagon matrix thu column or row least nonzero choos may simpler meaning choos threshold matrix valu dierent valu may use dierent vertic depend vertex initi degre number incid edg denot structur matrix sparsi a denot structur with set vertic edg whenev path distanc less structur subset matrix form ignor coincident cancel call level set expans sparsi matrix pattern power sparsi matrix psm pattern heurist test alleon et al equival use variabl level perform sparsic mention also possibl perform sparsic everi level set expans denot variant variant valu need comput propos follow stress larger element a drop denot sparsic process dene note gener subset complic strategi possibl threshold dierent level i note determin much dicult determin sinc valu need comput factor form approxim invers spars approxim invers choleski lu factor often use analogu leastsquar method minim factor spars approxim invers fsai techniqu kolotilina yeremin implement parallel field normal equat method use solv leastsquar system choleski lu factor requir comput approxim invers mean howev adapt pattern select scheme cannot use sinc matrix whose invers approxim avail priori sparsiti pattern must use instead given spars approxim invers approxim u spars matric g h respect pattern g h chosen pattern gh close sens good pattern approxim suppos good pattern upper lower triangular part good pattern g h sinc pattern gh includ pattern s pattern test section may also possibl use pattern power exact approxim l u known l u factor discret pde invers often band element decay rapidli away main diagon techniqu may appropri approxim l u avail exampl spars incomplet lu factor oppos invers irreduc matric invers choleski lu factor often spars order thu appli give factor whose invers well approxim spars matric experiment fewer nonzero exact invers factor translat lower construct cost better perform factor approxim invers comput incomplet biconjug process transit closur use comput number nonzero exact invers choleski factor base height node elimin tree lead reorder strategi approxim minim height elimin tree thu number nonzero invers factor allow predict well approxim invers might perform given problem approxim invers schur complement determin good pattern schur complement matrix notic schur complement thu good sparsiti pattern determin good sparsiti pattern simpli priori pattern spars approxim invers block good sparsiti pattern b small order compar global matrix els method overli costli code may possibl comput approxim invers extract approxim comput partial approxim invers ie row column approxim invers correspond again almost order a parallel comput comput equival structur spars matrixmatrix product sparsi matric comput also view n level set expans one row column perform parallel vertic near vertic dierent processor commun necessari commun reduc partit graph sparsi matrix among processor number edgecut reduc unfortun gener onesid commun requir comput spars approxim invers processor need request row processor processor cannot predict row need send onesid commun may implement mpi processor occasion probe messag processor latenc probe critic perform factor here multithread environ possibl dedic thread local process node servic request row server thread remain thread comput row make request row necessari worker thread consid matrix approxim invers comput partit way row across sever processor algorithm describ one organ parallel comput processor comput level set expans row continu next level level request repli processor coalesc allow fewer larger messag use like extern row cach processor case need comput row commun numer phase valu comput algorithm implement use occasion probe onesid commun algorithm parallel level set expans comput commun row initi set vertic v empti sparsifi row local processor merg structur local sparsi row v level nonloc k v request receiv row k sparsifi receiv row merg structur new sparsi row v endfor nonloc k v request receiv row k comput structur row local row j initi v j singl entri locat j level new sparsi structur row k v j endfor endfor comput valu row local row j nd pattern v j also implement second parallel code follow featur multithread take advantag multipl processor per sharedmemori node symmetr multiprocessor comput use server worker thread easili implement onesid commu nicat use simpler algorithm algorithm comput row perform associ commun continu next row multipl thread use avoid worker thread need synchron coordin row request node smaller messag use commun also spread entir execut time algorithm scalabl use memori thu also slower rst version use directaddress tabl trade memori faster comput time second code report next section limit time rst code also shown also work factor implement symmetr matric guarante precondition also symmetr implement make simpl chang step algorithm requir onesid commun full matrix store numer test precondit qualiti first test qualiti sparsiti pattern gener power sparsi matric small problem harwellbo collect particular chose problem test spai order make comparison perform test exactli condit solv linear system use gmre rel residu toler zero initi guess report number gmre step need converg indic converg use symbol y right precondit use tabl show test result unfactor column factor column form approxim invers compar result leastsquar ls method use pattern origin matrix a fsai leastsquar method nonsymmetr factor form use pattern origin matrix a unfactor form also display result spai method report use choic paramet adapt method factor form also avail test here global threshold shown tabl scale matrix use perform sparsic tabl also show number nonzero nnz unfactor precondition the entri lsfsai number nonzero a result show precondition almost qualiti adapt spai achiev use pattern case even better precondition result sometim even less storag tabl result also show use pattern gener give good precondition problem sherman rel hard problem spars approxim invers result report show spai could reduc residu norm the precondition nonzero step result similar pattern full residu norm reduct achiev approxim invers denser note case sparsic priori pattern spars approxim invers tabl iter count orsirr pattern unfactor factor nnz lsfsai spai tabl iter count sherman pattern unfactor factor nnz lsfsai spai threshold appli origin matrix rather diagon scale matrix although matrix valu order magnitud diagon scale foolproof factor approxim invers eectiv problem pattern saylr rel hard problem gmre grote huckl report spai could solv problem gmre could bicgstab also true pattern result tabl bicgstab are cours mani problem dicult psmpattern approxim invers includ nnc gre harwellbo collect fidap problem navierstok simul problem howev solv use adapt method problem pose diculti psm pattern green function heurist invalid problem either pde problem modi eg fidap problem use penalti formul tabl show test result unfactor form approxim invers ls pattern problem sinc gener superset guarante better pattern term norm r show thi also display matrix residu norm paramet shown tabl use sparsifi matric level set expans again result show priori method approach qualiti adapt method close parallel time result result show precondit qualiti pde problem signicantli degrad use nonadapt scheme base power sparsi matric section illustr main advantag precondition low construct cost compar adapt scheme section show result use multithread version code parasail parallel spars approxim invers least squar like parallel version spai make comparison parasail implement tabl iter count sherman pattern unfactor factor nnz lsfsai spai tabl iter count pore pattern unfactor factor nnz lsfsai spai precondition object isi solver librari code gener spars approxim invers partit across processor row thu left precondit use code leastsquar problem aros solv use lapack routin qr decomposit problem rel full approxim invers solv leastsquar problem take major comput time test run multipl node ibm rs sp supercomput lawrenc livermor nation laboratori node contain four mhz powerpc cpu time perform use userspac mode much ecient internetprotocol mode howev nonthread code use one processor per node userspac mode test spai one processor per node parasail four processor per node iter solver matrixvector product code also nonthread use one processor per node rst problem test nite element model three concentr spheric shell dierent materi properti matrix order nonzero spai algorithm use default paramet target residu norm row produc much sparser precondi tioner nonzero solv problem use gmre toler step comparison purpos chose paramet parasail gave similar number nonzero precondition particular paramet gave precondition nonzero solv problem step figur show two result sparsiti pattern tabl report variou number node npe wallclock time precondition setup phase precon iter solv phase solv total time total time construct precondition code includ time determin sparsiti pattern due rel small size and next problem one worker one server thread use per node ie two processor per node parasail run one processor use spai run comparison tabl show result use rst nonthread occasion mpi probe onesid commun version code code priori pattern spars approxim invers tabl iter count saylr pattern unfactor factor nnz lsfsai spai tabl iter count sherman step nnz krkf ls spai much faster use directaddress array quickli merg sparsiti pattern row directaddress array length global size matrix scalabl a parasail b spai fig structur spars approxim invers concentr shell problem test second larger problem model workharden metal squeez make pancakelik particular exampl pattern sparsi matrix s paramet lead good precondition parasail produc precondition nonzero solv problem step spai produc precondition nonzero edmond chow tabl iter count sherman step nnz krkf ls spai tabl time concentr shell problem parasail spai npe precon solv total precon solv total solv problem step result vari number process node shown tabl result show nonadapt parasail algorithm implement mani time faster adapt spai algorithm implement scalabl section experiment investig implement scalabl construct spars approxim invers parasail let n p time construct approxim invers order n parallel comput use p processor dene scale ecienc en p n t pn p en implement perfectli scalabl ie one could doubl size problem number processor without increas execut time howev long en p bound away zero xed n p increas say implement scalabl consid d constant coecient pde discret use standard nite dierenc uniform mesh anisotrop paramet problem use test scalabl multigrid solver problem constant size per comput node local problem size node topolog use thu largest problem cube unknown node use four processor worker thread server thread problem precondition construct phase ie processor largest congur threshold parasail chosen nonzero along strongest z direct retain pattern use although symmetr problem precondition symmetr use gmre iter solver zero initi guess converg toler priori pattern spars approxim invers tabl concentr shell problem time precondition setup use direct address npe precon tabl time workharden problem parasail spai npe precon solv total precon solv total tabl show result includ wallclock time construct precondition iter solv phase number iter requir converg averag time one iter solv phase e p e scale ecien cie construct precondition one step solv phase figur graph scale ecienc e p e respect implement seem scalabl valu p may encount comparison tabl show result spai use local problem size larger problem led excess precondition construct time again one processor per node use spai conclus paper demonstr eectiv pattern power sparsi matric spars approxim invers pde problem oppos mani exist method prescrib sparsiti pattern psm pattern use valu structur origin matrix spars pattern produc psm pattern allow simpler direct method construct spars approxim invers precondition use compar precondit qualiti adapt method signicantli less comput cost numer test show addit eort adapt sparsiti pattern calcul alway requir acknowledg author indebt weipai tang one rst use sparsic comput approxim invers sparsiti pattern john gilbert instrument direct attent transit closur matrix motiv possibl nding good pattern priori michel benzi made help comment direct author author also grate ongo support robert clay andrew esmond ng ivan otero yousef saad alan william nalli cogent comment anonym refere tabl time iter count ecienc parasail local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es tabl time iter count ecienc spai local problem size npe n precon solv iter solveit ep es priori pattern spars approxim invers number node scale effici fig implement scalabl parasail precondition construct phase number node scale effici fig implement scalabl one step iter solut r mpi implement spai precondition te portabl mpi implement spai precondition isi iter solut larg spars linear system aris certain multidimension approxim problem order method factor approxim invers pre condition semicoarsen multigrid distribut memori machin class precondit method dens linear system boundari ele ment approxim invers techniqu blockpartit matric etud dun pr decay rate invers band matric parallel implement spars approxim invers precondition predict structur spars matrix comput parallel precondit spars approxim invers precondit conjug gradient method solv discret analog explicit precondit system linear algebra equat dens matric factor spars approxim invers precondit factor spars approxim invers precondit ing iter method spars linear system toward e spars approxim invers smoother multigrid precondit boundari integr equat tr ctr kai wang sangba kim jun zhang kengo nakajima hiroshi okuda global local parallel precondit techniqu larg scale solid earth simul futur gener comput system v n p may robert d falgout jim e jone ulrik meier yang conceptu interfac hypr futur gener comput system v n p januari robert d falgout jim e jone ulrik meier yang pursu scalabl hypr conceptu interfac acm transact mathemat softwar tom v n p septemb kai wang jun zhang chi shen parallel multilevel spars approxim invers precondition larg spars matrix comput proceed acmiee confer supercomput p novemb chi shen jun zhang parallel two level block ilu precondit techniqu solv larg spars linear system parallel comput v n p octob denni c smolarski diagonallystrip matric approxim invers precondition journal comput appli mathemat v n p februari edmond chow parallel implement practic use spars approxim invers precondition priori sparsiti pattern intern journal high perform comput applic v n p februari oliv brker marcu j grote spars approxim invers smoother geometr algebra multigrid appli numer mathemat v n p april luca bergamaschi giorgio pini flavio sartoretto comput experi sequenti parallel precondit jacobidavidson larg spars symmetr matric journal comput physic v michel benzi miroslav tma parallel solver largescal markov chain appli numer mathemat v n p april anwar hussein ke chen fast comput method locat fold point power flow equat journal comput appli mathemat v n p march p k jimack domain decomposit precondit parallel pde softwar engin comput technolog civilcomp press edinburgh uk e flrez m d garca l gonzlez g montero effect order spars approxim invers precondition nonsymmetr problem advanc engin softwar v n p novemb michel benzi precondit techniqu larg linear system survey journal comput physic v n p novemb