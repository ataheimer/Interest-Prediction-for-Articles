t prefetch improv bu wrapper perform core a reus core reduc design time systemsonachip reus depend abl easili interfac core bu enabl interfac mani propos separ core interfac intern use bu wrapper howev separ lead perform penalti read core intern regist paper introduc prefetch analog cach techniqu reduc elimin perform penalti involv tradeoff power size describ prefetch techniqu classifi differ type regist describ initi prefetch architectur heurist certain class regist highlight experi demonstr perform improv sizepow tradeoff introduc techniqu automat design prefetch unit satisfi userimpos registeraccess constraint techniqu benefit map prefetch problem wellknown realtim process schedul problem extend techniqu allow userspecifi regist interdepend use petri net model result even effici prefetch schedul b overview separ core interfac behavior intern behavior lead perform penalti exampl consid core architectur shown figur a b c show core bu wrapper core bu wrapper bw without prefetch core bw prefetch respect latter two architectur similar propos vsia bw interfac system bu whose protocol may arbitrarili complex includ varieti featur like arbitr bw also interfac core intern core intern bu bu typic extrem simpl implement straightforward data transfer intern bu vsi onchip bu group standard without bw read core intern regist onchip bu may take littl two cycl shown figur a bw read core intern regist may requir four cycl two intern modul bw acm transact design autom electron system vol no januari prefetch improv bu wrapper perform fig pvci locat systemonachip two bw bu thu read may requir extra cycl compar core whose interfac intern behavior combin howev core interfac behavior separ bu wrapper believ much easier retarget differ buse core whose interfac behavior integr intern behavior standard interfac core intern bu wrapper retarget core may becom easier pvci decid singl onchip bu standard unlik vsia develop vci virtual socket interfac associ b vci propos standard interfac core intern core bu wrapper illustr figur retarget core use vci involv roughli chang bu wrapper sinc vci ensur chang limit wrapper intern sinc bu provid even provid bu wrapper templat bu vci vci far simpler protocol typic bu protocol sinc pointtopoint transfer protocol contrast bu protocol may involv advanc featur arbitr data multiplex pipelin on thu standard vci far simpler standard bu protocol pvci simpli version vci specic intend periph eral pvci core would resid lowerspe peripher bu shown figur thu would need highspe featur vci eg packet chain gener structur pvci shown figur consist two unidirect buse one bu lead wrapper intern wrapper set read line indic read write set address line valid address write also set wdata line assert val line actual initi read write wrapper must hold line constant intern assert ack line write mean intern captur write data read mean intern put read data rdata bu transact acm transact design autom electron system vol no januari lysecki vahid fig pvci gener structur complet next rise clock edg fast intern modul keep ack assert continu provid fast transfer similar spirit synchron wait protocol vahid givargi experi bu wrapper sought evalu impact wrapper pvci use simpl peripher bu use bu twophas handshak protocol ensur commun fast possibl given peripher previous demonstr use wrapper result twocycl overhead per read compar integr core figur a illustr time read cycl peripher bu integr core peripher bu master in case bridg place address addr strobe rd peripher respond place data data strobe rdi earli cycl receiv rd strobe thu total read cycl could littl two clock cycl figur b illustr read cycl bu core use bu wrapper bu master place address strobe rd wrapper respond translat read request read request intern bu translat involv translat address one appropri core place address wrp addr assert wrp read core intern respond place data wrp data assert wrp rdi wrapper receiv data put peripher bu strobe rdi write cycl need incur perform overhead wrapper ver sion bu master set address strobe appropri readi line wrapper respond immedi captur data strobe readi line like integr core do wrapper proceed write captur data core intern bu master proce activ exampl evalu simpl version digit camera system illustr figur camera system consist simpli mip mi croprocessor bio memori system bu bridg system bu peripher bu isa ccd chargecoupl devic prefetch improv bu wrapper perform fig digit camera exampl system preprocessor simpl codec compressordecompressor twolevel bu structur accord hierarch bu concept describ virtual socket interfac associ a camera written registertransf level synthesiz vhdl synthes cell use synopsi design compil well synopsi power analysi tool evalu differ design metric power perform measur process one frame made chang ccd preprocessor codec core sinc repres peripher peripher bu core use heavili process frame creat three version camera system integr ccd preprocessor codec core written interfac behavior inlin intern behavior core thu synthesi gener one entiti core nonpvci wrapper ccd preprocessor codec core written interfac behavior separ wrapper thu synthesi gener two connect entiti core interfac two wrapper intern entiti consist singl bidirect bu strobe control line readwrit control line howev mani address line necessari distinguish among intern regist pvci wrapper previou version except interfac wrapper intern entiti pvci nonpvci wrapper version creat anoth purpos well pvci standard develop knowledg version would use experi thu structur develop simpl possibl tabl summar size perform power result size report equival nand gate time nanosecond power milliwatt size overhead use buswrapp nonpvci compar integr version roughli gate per core overhead come extra control acm transact design autom electron system vol no januari tabl i comparison interfac version use custom bu version ex size wrapper size power total time io time integr wrapper ccd codec pvci wrapper ccd codec regist integr version core intern includ control interfac peripher bu wrapper version control replac control interfac wrapper size core intern stay same howev wrapper must implement control interfac intern interfac peripher bu repres overhead wrapper must also includ regist whose content copi tofrom intern repres addit overhead reason nonpvci wrapper version show size overhead pvci wrapper version nonpvci version use singl bu transfer two core intern wherea pvci speci two separ buse result less logic wire fifteen hundr gate size overhead seem quit reason given continu increas chip gate capac given peripher core typic poss gate mentor graphic nd system power overhead extra power come transfer item twice per access write item must transfer rst bu wrapper wrapper intern read item must transfer rst intern wrap per wrapper bu howev power consum memori system bu processor domin extra power due wrapper smalleven though ccd codec heavili use process frame tabl i see increas peripher io access time bu wrapper employ overhead due use wrapper would occur whether use pvci anoth wrapper experi ccd access time per imag frame codec access total time per frame mip processor execut approxim instruct per frame overal overhead bu wrapper amount approxim one differ nonpvci pvci interfac appear result number wire intern core nonpvci version use multiplex bu fewer signal some pvci signal shown thu would fewer intern wire note ccd codec core rel small simpl interfac took us design hour exclud synthesi simul time retarget design one wrapper anoth eg convert ccd nonpvci wrapper pvci implement synthesi time ccd codec approxim hour simul time captur acm transact design autom electron system vol no januari prefetch improv bu wrapper perform one imag frame slightli hour power analysi addit hour time obtain synthes model gate use synopsi design compil medium map effort use lsik librari suppli synopsi area delay constraint speci use dual mhz ultra sparc ii machin perform synthesi simul synthesi simul time rel integr bu implement use bu wrapper note peripher devic capabl dma burst mode io interrupt requir time integr system although use bu wrapper improv use core make easier retarget vari system reusabl come cost bu wrapper introduc perform power overhead demon strate tightli constrain system peripher access time critic overhead often infeas ideal use bu wrapper could allow quick retarget core degrad perform next section present techniqu call prefetch effect elimin perform overhead bu wrapper basic prefetch overview focu minim perform penalti order maxim use core seek manner transpar develop core intern behavior well develop onchip bu continu exponenti growth chip capac seek gain perform make tradeoff increas size sinc size constraint continu eas howev note approach increas switch activ core thu must also evalu increas power consumpt seek minim increas focu peripher core whose regist read microprocessor onchip bu perhap via bu bridg idea minim read latenc experienc microprocessor basic techniqu propos call prefetch prefetch techniqu copi core intern regist data prefetch regist core bw read request bu occur core immedi output prefetch data without spend extra cycl rst get data core intern modul use term hit miss manner ident cach hit mean desir data prefetch regist miss mean data must rst fetch prefetch regist output onchip bu exampl figur c show prefetch core intern regist bw regist result system read requir two cycl rather four classic core regist immedi recogn need classifi common type regist found peripher core sinc differ type would requir differ prefetch approach lysecki vahid examin core primarili inventra librari mentor graphic nd focus bu peripher serial commun encrypt com pressiondecompress dene regist classic scheme base four attribut updat type access type notic type structur type updat type regist describ regist content mod i possibl type includ a staticupd regist updat system onli system devic or devic commun core onchip bu exampl static regist congur regist system updat regist regist content chang system updat again b volatileupd regist updat sourc system eg intern core extern core environ either random xed rate exampl analogtodigit convert sampl extern data convert data digit store result regist xed rate c inducedupd regist updat direct result anoth regist within core updat thu associ regist induc regist typic induc regist one provid statu inform access type regist describ whether system read andor write regist possibl type includ a readonli access b writeonli access c readwrit access notic type describ system made awar regist updat possibl type includ a interrupt notic core gener interrupt regist updat b registerbas ag notic core set ag bit where bit may part anoth regist c output ag notic core specic output signal assert regist updat d notic system inform updat simpli use recent regist data structur type regist describ actual storag capabl regist possibl type includ a singli structur regist access address intern implement one regist b queuestructur regist regist access address intern implement block memori common exampl buffer regist uart c blockstructur regist block regist access consecut address regist le memori prefetch improv bu wrapper perform commonli occur regist type rst attempt develop prefetch techniqu core focus follow three commonli occur combin regist core corecongur regist mani core congur set control set congur regist typic congur regist featur static updat readwrit access notic singli structur refer exampl core core task regist mani core carri specic task start complet combin data input regist data output regist statu regist indic complet core task exampl codec compressdecompress core typic set regist look prefetch data output statu regi ter data output regist follow featur volatileupd random rate readonli access registerbas ag notic ag store statu regist singli structur statu regist follow featur induc updat updat data output reg ister readonli access notic singli structur although data input regist prefetch featur are volatileupd random rate writeonli access notic singli structur refer exampl core coreinputbuff regist mani core combin queue data buffer receiv data statu regist indic number byte buffer common exampl core uart featur data buffer includ volatileupd random rate readonli access registerbas ag notic store statu regist queuestructur statu regist featur includ inducedupd updat data regist readonli access notic singli structur refer exampl core prefetch architectur heurist architectur order implement prefetch list combin regist develop architectur bu wrapper each figur illustr architectur three combin respect bw architectur three region control control main task interfac onchip bu thu handl read write core regist write control write data core intern bu core intern regist read control output appropri prefetch regist data onto bu hit output done immedi miss done forc prefetch unit rst read data core intern prefetch regist regist directli connect onchip bu fast output output bu must pass one regist lysecki vahid bu wrapper architectur time diagram a core b core c core fig prefetch improv bu wrapper perform prefetch unit pfu implement prefetch heurist respons read data core intern prefetch regist goal maxim hit architectur core situat shown figur a show one regist correspond prefetch regist d sinc updat onchip bu prefetch unit need instead write whenev write d lack pfu except normal situat figur b show architectur core situat data output regist statu regist prefetch regist bw data input regist di sinc never read onchip bu pfu carri prefetch heurist see next section unless control assert write line case pfu suspend prefetch control may write di core intern bu figur c show architectur core exampl writeaccess regist henc includ bu control core intern bu heurist appli follow prefetch heurist within core bu wrapper upon system write data regist d simultan write data prefetch data regist d assum write data regist occur prior read regist system write data input regist di read core intern statu regist prefetch statu regist sifth statu indic complet read core intern data output regist prefetch dataoutput regist do repeat process continu read core intern statu regist prefetch statu regist statu indic buffer longer empti read core data regist prefetch data regist d wait system read data continu read core intern statu regist prefetch statu regist therebi provid current statu inform data read system depend whether buffer empti either read next data item core repeat process figur show time diagram three core bw prefetch ing three core read latenc core bw prefetch equal latenc core without bw thu elimin perform penalti note bw architectur heurist depend core intern accept sinc core develop build bw bw control bu interfac not howev depend core intern desir experi implement core repres three earlier common exampl order evalu perform power size tradeoff achiev acm transact design autom electron system vol no januari tabl ii impact prefetch sever core size wo bw gate size wbw wo pf gate size wbw wpf gatesperform wo bw ns perform wbw wo pf ns perform wbw wpf nspower wo bw microwatt power wbw wo pf microwatt power wbw wpf microwattsenergi wo bw nj energi wbw wo pf nj energi wbw wpf njprefetch result summar tabl ii three core written soft core registertransferlevel behavior vhdl three core requir line vhdl respect synthes core use synopsi design compil perform averag power energi metric measur use synopsi analysi tool use suit core test vector core import note core simpl intern behavior use experiment purpos onli although exampl small pfu unit independ core intern approach appli larger exampl well three core prefetch ad bw perform penalti effect elimin core core trivial onetim ns ns overhead associ initi time requir start restart prefetch process particular prefetch heurist addit bw core add size overhead design size constraint continu relax chip capac continu exponenti growth three core describ abov averag increas size core gate larg percentag increas size core due fact core unusu small begin sinc simpl intern behavior gate typic core would closer gate percentag increas caus thousand extra gate would much smaller order prefetch viabl solut problem power energi consumpt must also accept power function amount switch core energi function switch total execut time bw without prefetch caus increas power due addit intern transfer bw increas overal energi consumpt due longer execut time three core compar bw without prefetch bw prefetch may increas decreas power depend prefetch heurist particular applic ex ampl core core increas power due constant activ prefetch unit core decreas power due period time prefetch unit idl howev three core use prefetch bw decreas energi consumpt acm transact design autom electron system vol no januari prefetch improv bu wrapper perform tabl iii impact prefetch digit camera perform read cycl wo prefetch cycl w prefetch ccdstatu ccddata codecstatu codecdata total core digit camera peripher io access digit camera processor execut digit camera tabl iv impact prefetch digit camera powerenergi prefetch bw wprefetch power mw energi j bw without prefetch reduc execut time addit increas energi consumpt rel core without bu wrapper fairli small evalu use prefetch analyz digit camera shown figur initi implement ccd codec core use bw without prefetch therefor modi use prefetch compar two version digit camera system tabl iii provid number cycl read statu data regist two core captur one pictur frame number cycl requir core prefetch half number cycl requir without prefetch improv perform read ccd codec overal improv perform digit camera cycl ad prefetch two core total cycl captur pictur frame prefetch perform increas digit camera directli relat ratio io access processor comput digit camera spend execut time perform comput perform io access prefetch larg impact overal perform howev increas perform peripher io access therefor design io intens one would expect greater percentag perform increas furthermor processor pipelin number cycl requir program execut would decreas percentag time requir io access would increas thu one would expect greater percentag perform increas prefetch ad prefetch core would cours result even reduct power energi penalti shown tabl iv see that exampl prefetch abl elimin perform overhead associ keep interfac intern separ core prefetch enabl elimin perform penalti fulli support idea vsi standard intern bu bw core intern also vari tradeoff perform size power ideal futur tool would synthes bw satisfi power perform size constraint given user core realtim prefetch overview one drawback prefetch techniqu describ prefetch unit manual design creat desir also investig automat solut design prefetch unit bu wrapper autom approach ident architectur previou bu wrapper prefetch howev reden task prefetch unit pfu prefetch unit respons keep prefetch regist uptod possibl prefetch core intern regist intern bu intern bu use write control ie intern bu idl cycl one regist read core intern time assum given list core readabl regist must prefetch also assum bu wrapper accommod one copi regist regist list annot two import readaccess constraint regist age constraint constraint repres number cycl old data may read word repres period prefetch regist must updat least onc age constraint mean data must recent data turn mean data must come directli core henc prefetch allow sinc prefetch data necessarili least one cycl old constraint also mean accesstim constraint must least four cycl regist accesstim constraint constraint repres maximum number cycl read access may take minimum two case regist must prefetch accesstim constraint greater denot addit cycl may toler wish design pfu read core intern regist prefetch regist use schedul satis age accesstim constraint regist note certain regist may prefetch frequent other requir satisfi differ regist access constraint tradeoff prefetch perform improv expens size power main goal perform improv ensur size power grow accept amount futur work may includ optim cost function perform size power exampl figur show core three regist a b c assum regist b independ regist readonli updat randomli core intern assum b regist age constraint four six cycl respect might use naiv prefetch heurist prefetch everi idl cycl read prefetch improv bu wrapper perform fig bu wrapper prefetch tabl v prefetch schedul core figur idl cycl schedul schedul b time lead schedul tabl v howev creat efcient schedul shown schedul although schedul meet constraint rst schedul like consum power naiv schedul also consid effect regist write taken consider use realtim schedul techniqu investig heurist solv prefetch problem notic problem could map wide studi problem realtim process schedul rich set power heurist analysi techniqu alreadi exist describ map provid sever prefetch heurist base realtim schedul heurist analysi method map realtim schedul simpl denit realtim schedul problem follow given set n independ period process set processor must acm transact design autom electron system vol no januari lysecki vahid order execut n process onto processor process period pi deadlin di comput time ci period process rate process request execut deadlin length time process must complet execut request execut final comput time length time process take perform comput therefor realtim schedul task order execut n process among processor ensur process execut everi period pi within deadlin di process take ci time complet map prefetch problem realtim processschedul problem follow process regist must schedul prefetch correspond process must schedul execut intern bu processor intern bu accommod one prefetch time likewis processor accommod one process execut time thu intern bu correspond processor prefetch process execut prefetch occur intern bu thu correspond process execut occur processor regist age constraint process period regist age constraint dene period regist must prefetch correspond period process must schedul regist accesstim constraint process deadlin accesstim constraint dene amount time read may take rel read request correspond amount time process must complet execut rel time request servic process comput time prefetch correspond process execut time prefetch correspond comput time process paper assum prefetch requir two cycl although heurist analysi would cours appli extend regist model allow the rather rare situat differ regist would requir differ amount time read core intern given map use sever known realtim schedul analysi techniqu solv prefetch problem heurist cyclic execut approach cyclic execut approach burn well straightforward process schedul method use xed set period process approach construct xed repeat schedul call major cycl consist sever minor cycl xed durat minor cycl rate process highest prioriti execut minor cycl therefor equal smallest age regist prefetch approach attract due simplic howev handl sporad process in case sporad write prefetch improv bu wrapper perform tabl vi prefetch core descript core regist max age prioriti rm pf time respons time util util bound process period registerag constraint must multipl minor cycl time construct execut may comput infeas larg number process regist serv exampl describ three core variou requir tabl vi contain data pertain three core tabl vi contain inform regard maximum regist age constraint max age regist access time constraint deadlin d rate monoton prioriti assign prior iti rm time requir prefetch regist pf time respons time regist respons time util regist set util util bound regist set util bound core implement singlechannel dac convert although analog portion convert could model vhdl techniqu convert analog input implement core singl regist data readonli updat randomli extern system core calcul greatest common divisor gcd three input provid checksum inform input result core contain three regist gcd gcd cs result gcd calcul valid gcd equal gcd regist gcd gcd cs independ readonli regist updat extern system core ve regist stat bia a b re stat statu regist readonli indic statu core ie busi busi regist b readonli regist updat randomli outsid system re readonli regist contain result comput regist a b bia bia writeonli regist repres programm adjust comput use cyclic execut approach creat schedul three core core minor cycl major cycl three core minor cycl major cycl final core construct cyclic execut minor cycl ve major cycl rate monoton prioriti assign gener schedul approach use complex exampl wherein determin process schedul regist prefetch next base prioriti scheme rate monoton prioriti assign burn well assign prioriti regist base upon age regist smallest age highest prioriti likewis regist largest age lowest prioriti exampl use prioriti indic highest prioriti possibl rate monoton prioriti assign known acm transact design autom electron system vol no januari lysecki vahid optim sens process set schedul xedprior assign scheme set also schedul rate monoton assign scheme refer tabl vi data pertain three core core regist age constraint regist data three cycl given data regist present assign highest prior iti core regist gcd gcd cs age constraint respect therefor correspond prioriti highest lowest gcd gcd cs howev regist age constraint gcd gcd equal prioriti core could also be highest lowest gcd gcd cs import note prioriti regist age constraint assign arbitrari rel prioriti long constraint met core age constraint regist stat a b re respect therefor prioriti regist highest lowest would stat re a b utilizationbas schedul test utilizationbas schedul test use quickli indic whether set process schedul case whether regist prefetch n regist regist set prefetch equat true ci comput time regist i ai age constraint regist i n number regist prefetch lefthand side equat repres util bound regist set n regist righthand side repres current util given regist set regist set pass test regist prefetch schedul analysi need howev regist set fail test schedul regist set meet constraint might still exist word utilizationbas schedul test indic regist set prefetch indic regist set cannot prefetch analyz core determin whether schedul them tabl vi see core core pass utilizationbas schedul test respect util correspond util bound indic creat schedul core need perform analysi howev core util util bound four regist therefor fail utilizationbas schedul test though schedul might still exist responsetim analysi responsetim analysi burn well anoth method analyz whether process set in case regist set schedul howev addit test schedul set regist also provid worstcas respons time regist calcul respons regist use equat acm transact design autom electron system vol no januari prefetch improv bu wrapper perform ri respons time regist i ci comput time regist i ii maximum interfer regist experi time interv t c ri interfer regist amount time process must wait higherprior process execut ri ci c ii regist set schedul regist set respons time less equal age constraint tabl vi see regist three core meet regist age constraint therefor possibl creat prefetch schedul three core interest note although utilizationbas schedul test fail core respons time analysi indic regist prefetch refer reader burn well detail responsetim analysi write consid impact write core regist write come unknown interv write tie core intern bu thu delay prefetch done therefor view regist write highprior sporad process attribut maximum rate write command sent core also introduc deadlin write deadlin write similar accesstim regist prefetch deadlin indic write occur must complet within speci number cycl order analyz regist write impact schedul creat dummi regist wr regist set age wr regist period correspond maximum rate write occur wr accesstim equal deadlin analyz regist set determin prefetch schedul exist it analysi provid us analysi worst case scenario write occur everi period deadlin monoton prioriti assign point interest mainli static schedul regist set howev write sporad must provid dynam mechan handl them thu dynam schedul techniqu use cannot accur predict write therefor use advanc prioriti assign scheme deadlin monoton prioriti assign burn well deadlin monoton prioriti assign assign prioriti process regist base upon deadlin accesstim smaller accesstim correspond higher prioriti still incorpor rate monoton prioriti assign order assign prioriti regist equal accesstim deadlin monoton prioriti assign known optim sens process set schedul prioriti scheme schedul deadlin monoton prioriti assign exampl order accommod write bia regist core add bia regist prefetch algorithm deadlin bia regist ensur write alway acm transact design autom electron system vol no januari fig perform ns top size gate middl energi nj bottom highest prioriti use deadlin monoton prioriti assign use prioriti assign mechan prioriti regist highest lowest would bia stat re a b experi realtim prefetch addit implement adjust core describ abov implement two addit exampl order evalu impact perfor manc size energi use realtim prefetch codec core contain three regist din dout stat core behav like simpl compressordecompressor wherebi input data modi via arbitrari translat stat regist updat reect complet fifo core contain two regist data stat core repres simpl fifo data store data current number item fifo store stat model core synthesiz registertransf vhdl model requir line code respectivelynot intent describ intern behavior core rather regist accessrel behavior could see impact prefetch clearli use synopsi design compil synthesi well synopsi power analysi tool figur summar result three core core examin three possibl bu wrapper congur bu wrapper no bw bu wrapper without prefetch bw bu wrapper realtim prefetch rtpf rst chart figur summar perform result use realtim prefetch heurist see good perform improv compar bu wrapper without prefetch howev fifo acm transact design autom electron system vol no januari prefetch improv bu wrapper perform see small perform improv use realtim prefetch ing small improv due fact data regist fifo cannot prefetch use approach prefetch use realtim prefetch would empti fifo lose data fur thermor without prefetch see signic perform penalti second chart figur summar size result expect size core increas bu wrapper ad increas prefetch ad bu wrapper averag increas size caus ad realtim prefetch bu wrapper k gate increas design complex due need keep track current regist age furthermor size increas rel small compar typic core size k k gate third chart figur summar energi consumpt test vector three core overal increas energi consumpt bu wrapper ad core howev addit prefetch bu wrapper alway strictli increas decreas energi consumpt fact realtim prefetch increas energi consumpt codec fifo decreas energi consumpt adjust expect compar core without bu wrapper prefetch result increas energi consumpt updatedepend base prefetch use petri net overview case core design may abl provid us inform regard core intern regist get updatedin particular updat depend among regist eg regist updat extern regist b updat one cycl later use inform design schedul perform fewer prefetch satisfi given constraint thu yield advantag abl handl complex problem use less power gener regist attribut need method captur inform design provid regard regist updat section provid taxonomi regist attribut use categor regist use extend introduc updat dependeci updat depend provid detail regist get updat result updat induc two kind updat depend intern depend depend regist must accur describ depend regist affect oper core time regist updat therefor depend extrem import provid accur model core behavior lysecki vahid extern depend updat regist via read write ocb also need includ model inform import read write directli updat regist trigger updat regist eg write control regist codec core trigger event updat output data regist likewis updat extern port intern core regist must also present model event occur random interv cannot directli monitor bu wrapper therefor need provid complet model core need creat model captur inform analyz mani possibl model describ intern extern updat depen denci conclud petri net model would best t requir petri net model construct petri net model place arc transit model place repres data storag ie regist bu bu wrapper monitor model bu place gener token out pute outgo arc consum data storag place whenev appropri transit red transit repres updat depend either bu regist two regist transit may label condit repres requir data come transit howev mani case regist may updat extern sourc ie regist updatetyp volatil therefor need mechan describ updat use transit without incom arc without associ condit repres behavior refer transit random transit given random transi tion token also gener extern sourc cannot directli monitor bu wrapper thu model provid complet descript core intern regist depend without provid detail core intern behavior implement three core exampl analyz updat depend model prefetch techniqu order demonstr use model describ one core implement refer adjust elabor exampl throughout paper adjust contain three regist go md s first annot regist gener regist attribut describ earlier go regist attribut staticupd write access notic singli structur md regist attribut volatileupd readwrit access notic singli structur final regist attribut volatil updat readonli access notic singli structur next construct petri net adjust figur show regist updat depend model adjust model see regist updat go updat whenev write request go initi ocb updat randomli extern event unknown prefetch unit md updat go equal write request md initi ocb extern acm transact design autom electron system vol no januari prefetch improv bu wrapper perform fig adjust regist depend event occur therefor complet model adjust core use creat prefetch algorithm use current model adjust need three prefetch regist bu wrapper name gomd sgo would updat whenev write go initi ocb md s need method refresh prefetch regist keep uptod possibl later discuss heurist updat regist incom random transit howev know prefetch md regist would requir write md made ocb go regist equal simpl interpret model reduc power consum prefetch unit prefetch md need model renement depend renement regist updat depend model made elimin random transit although model particular core may mani random transit may exist relationship regist random transit two regist updat extern event possibl relationship may exist regist exampl typic codec core would nd data regist statu regist data regist updat statu regist also updat indic oper complet although regist updat random time know statu regist indic compl tion data regist updat thu elimin one random transit replac random transit transit incom arc relat regist assign appropri condit transit thu success rene model elimin random transit goal renement elimin mani random transit possibl import note possibl elimin random transit therefor still need method refresh content regist incom random transit figur show rene regist updat depend model adjust core new model elimin one random transit replac acm transact design autom electron system vol no januari lysecki vahid fig rene adjust regist depend transit re equal henc need modifi prefetch algorithm accompani chang know need prefetch md equal go equal write md initi ocb renement simpli prefetch algorithm reduc power consumpt prefetch schedul given updat depend model core need construct schedul prefetch core regist bu wrapper prefetch regist figur describ updat depend model prefetch heurist use pseudo code heurist use updat depend model conjunct realtim prefetch creat schedul prefetch core regist follow descript elabor heurist order implement prefetch heurist need two data struc ture rst data structur need prefetch regist heap prioriti queue use store regist need prefetch second need list updat arc must analyz regist prefetch read write request detect ocb use data structur next describ prefetch unit design rst step prefetch heurist add regist incom random transit prefetch regist heap regist alway remain heap need repeatedli prefetch order satisfi regist age constraint next prefetch heurist need respond read write request ocb event read request prefetch unit add outgo arc list arc need analyz describ realtim prefetch work write treat anoth regist special age accesstim constraint ie regist age constraint accesstim constraint initi set inniti core intern bu may current use perform prefetch use mechan elimin content describ below set accesstim constraint write regist ensur write next action perform therefor write request handl rst copi data acm transact design autom electron system vol no januari prefetch improv bu wrapper perform fig gener regist model prefetch heurist use implement pfu correspond prefetch regist set accesstim constraint ad write regist prefetch regist heap addit outgo arc ad list updat arc use realtim prefetch prefetch regist accord prioriti assign deadlin monoton prioriti assign two regist prioriti assign mechan use prioriti assign ratemonoton prioriti assign schedul prefetch accord heurist regist accesstim constraint prefetch rst mean write request and describ later regist updat prefetch rst note write still take highest prioriti regist age constraint write request regist without incom random acm transact design autom electron system vol no januari transit need prefetch prefetch heurist next schedul regist incom random transit accord ratemonoton prioriti assign therefor prefetch regist heap sort rst deadlinemonoton prioriti assign ratemonoton prioriti assign regist prefetch made read write request detect ocb need analyz arc updat arc list transit re outgo arc transit ad list token reach anoth place set correspond regist accesstim add heap thu ensur regist prefetch soon possibl order better understand prefetch heurist look adjust core adjust one random transit connect regist notic design averag need read content everi six cycl therefor set regist age constraint six cycl regist accesstim constraint two indic regist must prefetch everi six cycl md regist age accesstim constraint two cycl go howev neither age constraint accesstim constraint writeonli regist note even though go writeonli regist copi must maintain bu wrapper need order analyz updat depend prefetch algorithm monitor ocb write go regist made data copi go write regist accesstim set write md regist accesstim set also go equal equal set accesstim md final use schedul prefetch regist need perform write oper experi updatedepend prefetch implement updat depend prefetch three core abov name adjust codec fifo figur summar result three core four possibl bu wrapper congur core bu wrapper no bw bu wrapper without prefetch bw bu wrapper realtim prefetch rtpf bu wrapper updat depend prefetch model udpf rst chart figur summar perform result three core use updat depend prefetch method almost entir elimin perform penalti associ bu wrapper still slight overhead caus start prefetch unit use realtim prefetch heurist see although perform improv compar bu wrapper without prefetch perform well updat depend model second chart figur summar size result averag increas size caus ad updat depend prefetch techniqu bu wrapper k gate comparison realtim prefetch result averag increas k gate interest note two acm transact design autom electron system vol no januari prefetch improv bu wrapper perform fig perform ns top size gate middl energi nj bottom approach although quit differ result approxim size increas state earlier use realtim prefetch increas design complex due need keep track current regist age howev use extend approach complex increas due ad logic need analyz updat depend third chart figur summar energi consumpt test vector howev addit prefetch bu wrapper alway strictli increas decreas energi consumpt fact see adjust fifo decreas energi consumpt updat depend prefetch ad bu wrapper codec increas hand realtim prefetch increas energi consumpt codec fifo decreas energi consumpt adjust importantli compar result realtim prefetch updat depend prefetch notic updat depend prefetch result signicantli less energi consumpt easili explain fact approach prefetch regist updat wherea realtim prefetch prefetch regist often keep uptod possibl therefor elimin need prefetch regist within regist age constraint reduc energi consumpt conclus keep core interfac intern behavior separ key core market demonstr use bu wrapper nonpvci pvci result size power perform overhead thu retarget advantag standard seem come penalti introduc prefetch techniqu overcom perform over head demonstr common case regist combin prefetch elimin perform degrad expens accept increas size power overcom perform degrad associ bu wrapper prefetch thu improv use core provid power solut problem map problem realtim processschedul domain appli heurist analysi techniqu domain also provid gener regist updat depend model use construct efcient prefetch schedul conjunct realtim prefetch demonstr effect solut sever experi show good perform improv accept size energi increas furthermor demonstr use updat depend model abl better prefetch regist compar realtim prefetch methodolog two approach thu complementaryth realtim approach use regist constraint provid modelbas approach paper use regist updat inform also provid futur work although prefetch work well mani possibl improv ment current approach assum regist core prefetch howev core larg number regist approach feasibl thu consid restrict number regist appear bu wrapper creat new cachelik issu map replac coher issu present current design addit evalu effect prefetch larger core exampl anoth direct involv develop prefetch heurist optim given cost function perform power size r interfac cosynthesi techniqu embed system fast prototyp system design java driven codesign prototyp network embed system new direct comput architectur research descript simul hard waresoftwar system java interfac design corebas system inventra core librari comput architectur introduct rapid silicon prototyp hardwaresoftwar codesign embed systemsonachip ic associ yearyear intern technolog roadmap semiconductor case con objectori commun librari hardwaresoftwar codesign experi system level design consum ic construct applicationspec heterogen embed architectur custom hwsw applic virtual socket interfac associ virtual socket interfac associ virtual socket interfac associ accept may tr comput architectur quantit approach realtim system program languag interfac cosynthesi techniqu embed system construct applicationspecif heterogen embed architectur custom hwsw applic interfacebas design case configureandexecut paradigm fast prototyp java driven codesign prototyp network embed system schedul algorithm multiprogram hardrealtim environ new direct comput architectur research interfac design corebas system objectori commun librari hardwaresoftwar codesign busbas commun synthesi systemlevel ctr ken batcher robert walker cluster miss predict instruct cach embed network applic proceed th acm great lake symposium vlsi april boston ma usa mina dasygeni erik brockmey bart durinck francki catthoor dimitrio soudri antonio thanailaki combin dma applicationspecif prefetch approach tackl memori latenc bottleneck ieee transact larg scale integr vlsi system v n p march