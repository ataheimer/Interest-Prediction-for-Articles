t highli avail local leader elect servic a abstractw defin highli avail local leader elect problem gener leader elect problem partition system propos protocol solv problem effici give perform measur implement local leader elect servic proven use design implement sever failawar servic partition system b introduct leader elect problem requir uniqu leader elect given set process problem wide studi research commun one reason wide interest mani distribut protocol need elect protocol subprotocol exampl atom broadcast protocol process could elect leader order broadcast correct process deliv broadcast messag order highli avail leader elect problem defin follow s point time exist one leader t leader time s within time unit new leader elect highli avail leader elect servic first defin synchron system correct process connect is commun time manner recent research faulttoler system investig asynchron partition system ie distribut system set process split disjoint subset due network failur excess perform failur ie process messag time see section iii detail like mani author do call subset parti tion exampl process run differ lan becom partit bridg network connect lan fail too slow see figur one reason research partition system primari partit approach allow process one partit make progress increas avail servic one often want servic make progress partit recent design membership clock synchron servic partition system indic need leader elect servic differ depart comput scienc engin univers california san diego la jolla ca gamma email cfetzercsucsdedu flaviucsucsdedu httpwwwcsucsdeducfetz research support grant f f air forc offic scientif research earlier version paper appear proceed sixth ifip intern work confer depend comput critic applic dcca inform see httpwwwcsucsdeducfetzerhal properti partition system synchron system first problem encount specifi requir local leader elect ser vice ideal servic elect exactli one local leader partit howev alway possibl elect leader partit exampl process partit suffer excess perform failur one cannot enforc exist exactli one local leader partit approach problem defin partit local leader elect introduc therefor notion stabl partit inform process stabl partit connect other ie two process stabl partit commun time manner process stabl partit requir elect local leader within bound amount time elect servic might abl elect local leader unstabl partit ie partit stabl guarante local leader unstabl partit call process unstabl part unstabl partit stabl partit local leader elect servic elect exactli one local leader unstabl partit servic might abl elect exactli one local leader advantag split unstabl partit two logic partit one local leader enabl process logic partit commun time manner see figur explain thi note definit stabl partit requir process partit connect other impli connect relat partit transit partit unstabl exampl connect relat becom nontransit three process fp q rg network link p r fail overload link p q q r stay correct see figur specif circumst local leader servic split unstabl partit two logic partit one leader each servic make sure time commun two process logic partit possibl howev sometim commun go via local leader case two process r logic partit connect local leader q see figur b inform logic partit creat local leader servic set process local leader logic partit commun time fashion process logic partit scenario depict figur one situ ation two logic partit one leader creat howev logic partit creat ieee transact softwar engin appear connect local leader logic partit q u r fig local leader elect servic permit split unstabl partit fpqruvwg two logic partit fpqrg fuvwg done trivial particular prohibit case local leader servic simpli elect unstabl process local leader exampl unstabl trio consist two process p r connect third process q connect other one three process permit becom local leader see figur note want two local leader p r even two process indirectli connect q see figur g intuit behind restrict elect local leader l support process connect l sinc p q cannot get support p one two process allow becom leader local leader illeg connect r r r r r r r r b c d a fig trio p q r unstabl sinc p r connect local leader elect servic must elect one process trio local leader deriv paper formal specif highli avail local leader elect servic specif impli local leader servic creat logic partit logic partit never overlap stabl partit subset logic partit two local leader alway two separ logic partit logic partit process one partit connect local leader logic partit paper propos effici protocol implement highli avail local leader elect servic use protocol failawar group membership servic failawar clock synchron servic partition system give perform measur implement network workstat ii relat work mani public solut leader elect problem synchron asynchron system elect problem first defin solv mani elect algorithm base messag extinct principl first introduc process r reject messag request process q becom leader whenev r know process p want becom leader p lower id q mani paper leader elect address mask failur elect elect new leader previou one fail awar specif local leader elect servic partition system implement elect servic contain novel aspect first instead use messag extinct use independ assess protocol approxim set process stabl partit typic ensur one process l stabl partit request becom leader process ls stabl partit support ls elect local leader renew leadership roundbas fashion ensur crash local leader stabl partit result replac within bound amount time stabl partit n process protocol send one broadcast messag unicast messag per round second use commun time ensur logic partit never overlap use mechan similar leas make sure process point time one logic partit protocol option allow us use protocol elect either local leader one global leader protocol forc creat logic partit contain major process sinc logic partit never overlap time exist one major partit thu one global leader system local leader use maintain consist amongst process partit global leader use maintain consist amongst process exampl local leader use ensur mutual exclus process one partit global leader use ensur mutual exclus process group membership servic partition system use elect local leader exampl strong membership protocol three round protocol use elect local leader local leader disjoint partit howev local leader servic said basic membership servic sens membership servic partition system typic elect local leader creat new group eg see implement local leader servic need stronger properti provid group membership servic agreement histori group iii time asynchron system model time asynchron system model abstract properti distribut system encount practic built set workstat connect lan wan time model make fetzer cristian highli avail local leader elect servic assumpt system henc almost practic distribut system describ time asynchron system sinc make weak assumpt solut problem time model use solv problem practic distribut sy tem time model howev suffici strong solv mani practic relev problem clock synchron highli avail leadership membership atom broadcast avail manag time model describ distribut system finit set process p link asynchron datagram servic datagram servic provid primit transmit unicast broadcast messag oneway timeout delay ffi defin transmiss delay messag although guarante messag deliv within oneway timeout chosen make likelihood messag deliv within ffi timeout suitabl high say process receiv messag time manner iff transmiss delay ffi transmiss delay greater ffi say suffer perform failur late assum exist constant ffi min denot minimum messag transmiss delay messag sent two remot process transmiss delay least ffi min time unit remot mean messag sent via network asynchron datagram servic omi sionperform failur semant drop messag fail deliv messag time manner probabl deliv corrupt messag neglig broadcast messag allow asymmetr perfor manceomiss failur process might receiv broadcast messag time manner anoth process might receiv late all asynchron datagram servic satisfi follow requir ffl valid process p receiv messag q time t inde exist earlier time sent p s ffl nodupl process receiv messag onc ie messag deliv process q time s exist time datagram servic deliv q too process manag servic defin schedul timeout delay oe mean process like react trigger event within oe time unit see p take oe time unit react trigger event suffer perform failur say p time interv s t iff point s t p crash p suffer perform failur s t assum process crashperform failur semant suffer crash perform failur process recov crash two process said connect s t iff time s t messag sent s gamma ffi deliv time manner see figur denot p q connect s t use predic connectedpqst real time d d d fig time process p q connect s t iff messag sent s gamma ffi deliv within process access local hardwar clock bound drift rate correct hardwar clock display strictli monoton increas valu denot local hardwar clock process p h p simplic assum paper neglect granular hardwar clock eg clock resolut s smaller hardwar clock proceed within linear envelop realtim drift rate correct hardwar clock h p bound priori given constant ae that interv s t import assumpt hardwar clock noncrash process correct inform requir neglect probabl drift rate hardwar clock noncrash within gammaa ae whether failur probabl neglig depend stochast requir applic noncrit applic use simpl counter connect quartz oscil appropri chosen ae provid suffici close approxim crash failur semant ie one neglect probabl clock failur except clock crash failur occur safeti critic applic implement might suffici howev one use multipl oscil counter make sure probabl clock failur except clock crash failur becom neglig simplic assum hardwar clock recov crash hardwar clock synchron deviat h hardwar clock h p h q assum bound quartz clock avail modern comput maximum hardwar clock drift rate ae order gamma gamma sinc ae small quantiti follow neglect term order ae higher particular equat ae process measur length interv s t s error measur within iv commun partit timeli requir specif local leader problem base notion stabl partit howev mani possibl reason ieee transact softwar engin appear abl definit stabl partit one put differ constraint kind commun possibl process two stabl partit strongest definit would requir commun possibl two stabl partit see definit predic stabl weakest definit would place constraint commun partit timeli requir local leader problem demand local leader elect stabl partit within bound amount time therefor weaker definit stabl partit is stronger timeli requir sinc protocol requir elect leader harder condi tion paper use formal notion stabl partit two extrem deltapartit see below protocol propos base deltapartit definit local leader problem larg independ actual definit stabl partit howev assum process stabl partit connect introduc gener predic sta blepartit denot definit assum implement local leader servic stableparti tionspst true iff set process sp stabl partit interv s t section introduc one possibl definit stabl partit let us motiv two lan connect network see figur process run one lan commun process lan via network network provid fast commun two lan want one leader lan sinc network becom overload process two lan becom logic disconnect sens commun slow one leader two lan case want local leader two lan overload network commun slow connect k l fig two lan connect network process two lan becom partit network fail too slow two process p q disconnect interv s t iff messag sent two process arriv s t destin paper introduc weaker predic call deltadisconnect intuit behind predic use fail awar datagram servic classifi messag either fast slow servic calcul upper bound transmiss delay messag deliv bound greater given delta messag classifi slow otherwis messag classifi fast constant delta chosen calcul upper bound messag sent two connect pro cess ie messag transmiss delay ffi delta one choos delta ffi sinc one determin upper bound exact transmiss delay messag abl calcul upper bound transmiss delay messag deliv failawar datagram servic maintain process q array ts ts contain process p receiv send time stamp messag n q receiv p see detail failawar datagram servic piggyback unicast messag send q p time stamp n send stamp m comput upper bound use time stamp roundtrip n m transmiss delay greater durat p send n receiv sinc q receiv n sent m one use sever techniqu improv upper bound becom close realtransmiss delay m upper bound calcul similar read error comput probabilist clock read process p deltadisconnect process q given time interv s t iff messag p receiv s t q transmiss delay time unit see figur use predic delta disconnectedpqst denot p deltadisconnect q s t real time d d fig process p deltadisconnect q s t messag p receiv q s t transmiss delay delta note q might receiv messag p delay less delta say nonempti set process sp delta partit interv s t iff process sp mutual connect s t process sp deltadisconnect process see figur v specif section deriv formal specif local leader problem main goal local leader servic elect one local leader per stabl partit how ever specif also constrain behavior fetzer cristian highli avail local leader elect servic dpartit no partit pqr nect connect disconnect fig process deltapartit commun time manner messag outsid partit transmiss delay delta process stabl partit approach problem requir local leader servic creat logic partit logic partit one leader stabl partit includ logic partit local leader elect problem defin use three predic one constant instanti implement local leader servic sta blepartit leader support constant predic deltapartitionspst defin section iv one possibl definit stablepartit predic leader p t true iff process p local leader time t specif base idea process p collect support eg vote p becom leader vote process q process p restrict lifetim ie q say vote p valid certain amount time specif local leader problem independ actual way protocol implement vote achiev introduc notion process q support process p q support p time t mean q vote ps elect local leader vote still valid time t formal express predic support pq defin true iff p support qs elect local leader time t requir point time process support one process local leader l support process connect l particu lar leader p stabl partit sp must support process sp sinc process stabl partit definit connect defin predic leader support associ propos local leader elect protocol section ix specif local leader problem consist four requir t so bi ls timeli requir t requir stabl partit local leader elect time unit see figur allow local leader servic implement rotat leader schema see figur first local leader elect stabl partit requir process stay local leader long partit remain stabl instead requir interv length set process sp stabl partit exist least one point time exist local leader sp timeli requir t formal ex real time true fals leader stabl partit pqr fig stabl partit fp q rg form time gamma guarante local leader p elect within time unit press follow t set process sp stabl partit exist process p sp time p local leader time s real time u leader r leader leader leader fig rotat leader schema transfer leadership period process schema proven use implement atom broadcast servic requir point time process r support one process formal state support one requir follow so time t process r would support process p process q t p q process connect local leader illeg so r r r support bi support ls r r fig requir so requir process support one process time ls leader support itself thu trio fp q rg exist one leader whenev solsbi satisfi alreadi mention trio three process p q r p q q r connect see figur want one three process local leader therefor introduc two requir leader self support requir ls bound inconsist requir bi requir bi requir local leader p ieee transact softwar engin appear connect process q least time unit q must support p term process connect two leader time unit bound incon sistenc exampl two stabl partit merg new stabl partit time unit one local leader new stabl partit bi process p local leader time p connect least time unit process q support p t time process alway connect itself henc requir bi impli time local leader support within time unit becom local leader strengthen special case requir local leader alway support itself particular local leader l support soon becom local leader even l slow show section vi requir ls so ensur one local leader logic partit ls local leader alway support itself let us explain three requir solsbi impli trio fp q rg pq q r connect least time unit must one leader see figur p q leader time would support ls p would support local leader q p q connect bi howev p allow support one process time so thu p q cannot leader point time t p r would leader time q would requir support p r bi would violat requir so therefor one process fp q rg leader r l support creat leader local logic partit fig support predic partit set process vi logic partit show support predic creat logic partit partit contain one leader furthermor leader stabl partit sp logic partit lp contain sp ie intuit logic partit lp contain process p contain process q exist finit undirect path supportsgraph p q see figur undirect mean path ignor direct support predic formal defin logic partit relat support reflex symmetr transi l closur support r logic partit r l leader local fig support relat reflex symmetr transit closur support closur creat fulli connect subgraph isol other tive closur support see figur definit support equival relat partit set process complet connect subgraph say two process p q logic partit time iff support p q true sinc support reflex process logic partit two logic partit lp lp either non overlap equal symmetri transit support support local leader exlud condit ls fig requir leader support itself guarante undirect path supportsgraph contain one local leader let us show logic partit lp one local leader intuit requir local leader support itself split path cycl two local leader that could exist support graph satisfi ls two path one local leader see figur precis prove contradict exist one leader per logic partit so let us assum would exist time logic partit lp contain two local leader p q see figur sinc definit support p q hold there fore exist finit undirect path supportsgraph p q sinc time process support one process so leader support ls p q two end exist two process k l support p q respect process k l support two process so argument appli recurs show path would infinit length henc cannot exist finit path two leader therefor logic partit contain one local fetzer cristian highli avail local leader elect servic leader l local leader due ls exclud condit so support fig two leader p q would logic partit would exist finit undirect path p q sinc p q two end path ls so would exist process support two process sinc process stabl partit mutual con nect bi impli within time unit stabl partit sp form local leader sp support process sp see figur thu time unit one leader per stabl partit point time process support one process so stabl partit pqr leader local stabl partit no support partit stabl fig leader stabl partit form least time unit ago support process partit exist stabl partit form later time local leader sp time t process sp support p see figur henc two process u v sp exist undirect path u p v impli u v logic partit note logic partit lp strict superset stabl partit sp allow process n outsid sp support process sp henc n logic partit lp contain sp partit stabl local leader support r logic partit l fig logic partit fp q ng strict superset stabl partit fp q rg stabl partit sp form time tgamma time unit could exist one local leader leader previou partit demot first see figur note even though might exist one local leader stabl partit bound amount time local leader logic partit local leader real time fals fals leader true true leader fig two stabl partit merg new partit might exist multipl local leader stabl parti tion durat inconsist behavior howev bound requir bi demand local leader p support process connect p least unit requir ensur two parallel local leader p q elect good reason see figur support p cannot connect q for longer support q connect p for longer support partit logic local leader connect exclud bi fig requir bi prohibit support local leader p connect anoth local leader q time unit vii protocol overview idea propos protocol local leader elect servic follow process send messag failawar datagram servic classifi messag deliv either fast slow process p use independ assess protocol approxim set process deltapartit set call aliveset p set contain process p recent receiv fast messag independ assess protocol send messag use messag sent servic like local leader elect servic updat aliveset store process pair p q receiv time stamp recent fast messag q receiv p process p id smaller id process aliveset broadcast send pe ieee transact softwar engin appear riodic electionmessag request process support elect local leader process q support elect request process p p process smallest id qs aliveset q process q deltapartit sp suffici long time aliveset contain process sp messag receiv process outsid sp slow henc suffici keep process qs aliveset particular process broadcast elect messag sinc ps id smaller id process aliveset sinc process q sp connect p q receiv ps elect messag fast messag includ p aliveset process ps id smaller id qs aliveset ie qs aliveset contain process sp contain p due ps period elect messag thu process sp implicitli agre support elect p repli ps elect messag thu p includ process sp aliveset ie p get fast support repli process aliveset p becom leader sinc process sp support ps elect process p succe becom leader new deltapartit sp form time t process sp support process within time unit process q support elect process bound amount time enabl q support anoth process within bound amount time exampl q support process r t support anoth process p support r expir process r becom leader support q ensur r demot support q expir protocol achiev time demot even r slow r leader long hardwar clock show valu smaller valu expi rationtim calcul rs elect note q support differ process p support r expir without exchang messag q r import properti q learn r demot crash which would imposs decid asynchron system support differ process protocol requir connect relat transit success elect local leader see section x aliveset process p approxim set process connect p process p get support process aliveset p becom leader even two process aliveset connect viii protocol pseudocod protocol local leader elect servic given figur messag sent deliv failawar datagram servic allow receiv messag detect transmiss delay fast slow ie unit delta time unit respec tive failawar datagram servic provid primit send unicast messag denot faunicast one broadcast messag denot fabroadcast deliv messag clock time rectim sent process p q servic gener event denot fadelivermpfastrectim destin process q boolean flag fast set true fast otherwis fals process p maintain set process call aliveset p p receiv fast messag last say expir clock time unit determin valu constant expir later on aliveset process maintain two procedur updatealiveset purgealiveset procedur updatealiveset insert sender fast messag aliveset store receiv time stamp array call lastmsg procedur purgealiveset use array lastmsg remov process r aliveset myid execut process myid process myid receiv fast messag r expir clock time unit let us assum id process total or dere function purgealiveset also return first point clock time given respect local hardwar clock myid could smaller id process aliveset process receiv messag process smaller id return bound tight calcul bound use optim broadcast electionmessag process p start broadcast period electionmessag soon id becom smaller id process aliveset p time broadcast least everi ep clock time unit electionmessag ep elec tion period priori given constant schedul broadcast perform help alarm clock call aliveac process p set alarm clock method setalarm setalarmt request wakeup event gener ps hardwar clock show valu time process p awaken within time unit hardwar clock h p show schedul timeout delay oe priori defin constant process cancel alarm oper cancel electionmessag sent process p contain ffl uniqu time stamp denot request detect repli correspond request p becom leader ffl aliveset p time ps hardwar clock show valu request process p send electionmessag store request time stamp variabl call lastrequest abl identifi repli messag process p also store current aliveset variabl targetset reset variabl replyset empti set p insert replyset id process p get fast repli support ps elect process q repli fast electionmessag ignor slow messag replymessag identifi request q repli also contain flag indic q support ps elect fetzer cristian highli avail local leader elect servic flag true say support repli send m q guarante send anoth support repli next locktim clock time unit process q achiev guarante store ps id request id variabl lockedto sum receiv time plu locktim variabl lockeduntil electionmessag arriv q use variabl lockedto lockeduntil determin still support p ie q still lock p determin valu constant locktim section ix say process q is lock process denot q cannot send support repli process p at t q send support repli p at t say q lock p at t let us consid process q receiv elect messag p contain time stamp request ps aliveset denot aliv process q lock p ffl fast messag q ignor elect request outsid deltapartit ffl q lock process ensur point time process lock one process ffl ps id smaller qs id ffl p process minimum id qs aliveset two process r q deltapartit sp implicitli agre process support sinc explain follow condit hold minaliveset r minaliveset q minsp process p receiv fast support repli process q last electionmessag p insert q replyset delta realtim unit which could unit due drift ps hardwar check becom leader renew leadership by call function checkiflead case p alreadi leader p test abl renew leadership soon p receiv repli process targetset ie soon replysettargetset process p becom leader see function checkiflead iff ffl p aliveset time p sent electionmessag see proof requir bi section ix ffl p receiv fast support repli process current aliveset necessari make sure p support process p connect to ffl p minimum id replyset p make sure support itself p becom leader set local variabl im leader true call procedur newlead notifi client leader ps hardwar clock show clock valu expirationtim to determin section ix process p schedul broadcast next electionmessag time expirationtimedelta ae renew elect leadership expir protocol provid boolean function leader check call process p local leader function leader read hardwar clock time t leader flag imlead true case p succeed becom local leader receiv least one support repli p broadcast releasemessag let process lock know lock anoth process process q receiv releasemessag p last elect messag q lock to q releas lock ix correct show section propos local leader protocol satisfi requir tsobil thi first defin predic stablep artit leader p support sinc protocol design deltapartit defin deltapartitionspst let us denot valu process ps variabl varnam time varnam predic leader p defin by leader process becom leader set variabl sup portset set process sent support repli process q support process p time iff p leader time q ps support set support q p formal express properti process q lock process p predic lock q p defin follow see section viii figur explan variabl lockedto lockeduntil lock q long q crash lock one process time q alway check last lock expir lock new process recal time asynchron system model allow crash process recov assum process q crash stay least lockt ime clock time unit enabl q lock process p immedi q recov crash without wait first least lockt ime clock time unit make sure lock q issu crash expir note initi wait time would otherwis ie without assumpt requir make sure process lock one process simplifi exposit use phrase process action clock time denot pro cess p action point realtim ps hardwar clock h p show valu ie h p a support one so see requir so satisfi ie process q support one process p time let us consid scenario shown figur process p send electionmessag clock time lastrequest p q receiv q send support repli u process q lock p least lockt ime clock unit ie hardwar clock show valu process p becom leader time w q ps support set assign variabl expirationt ime p clock drift apart ae and ps hardwar clock show qs hardwar clock show due posit transmiss delay m ps hardwar clock show valu expirationt ime p qs hardwar clock show ime see figur henc whenev process q support p q lock p sinc q lock one process time follow q support one process time leader locktim locktim electionmessag replymessag d d fig process q send support repli n ps elect messag lock p locktim clock unit p demot q releas lock p b leader self support ls becom leader process p check receiv support repli see condit replysetmin procedur checkiflead thu leader alway support protocol therefor satisfi requir ls c timeli t timeli condit t hold make sure protocol constant expir locktim well chosen constant expir state long process p stay aliveset process without arriv new fast messag p henc deriv lower bound expir make sure process deltapartit remov local leader aliveset deriv lower bound constant expir let us consid situat time process p tri becom leader send period electionmessag see figur goal p stay aliveset process q connect p q stay aliv set p therefor constant expir chosen two success elect messag sent p q receiv clock time respect condit expir hold similarli p receiv qs repli n n time u v respect distanc two receiv event expir expir therefor deriv upper bound assumpt p q connect durat two success broadcast ep clock time unit realtim durat thu ep ae differ transmiss delay expir sinc clock time transmit ep maximum differ roundtrip time expir bound by min d replymessag electionmessagen min rdd fig constant expir chosen p stay qs aliveset q stay ps aliveset u v typic one set constant expir small multipl lower bound one late elect messag omiss failur electionmessag remov sender aliveset process implement defin constant four time lower bound achiev excel stabil sens measur minimum process remov aliveset unless crash process partit system constrain show process deltapartit sp implicitli agre process minimum id sp let us consid sp form time stay stabl least time s figur messag process q sp receiv process r outsid sp ie r transmiss delay delta henc failawar datagram servic deliv slow messag q therefor updat array lastmsg aliveset r expir clock time unit is time outsid sp remov aliveset process sp thu smaller id process aliveset process ps alivetim gener timeout event later time delta sinc process set alivetim gener timeout event within oe time unit ps id becom smaller id aliveset henc p broadcast first electionmessag later time t first elect request fail ps target set necessarili contain ps id process sp receiv fast later delta henc includ p aliveset later time u time u process sp lock process p sinc p minimum id aliveset process sp repli p p fetzer cristian highli avail local leader elect servic get repli fast messag sinc p connect process sp hypothesi process p therefor includ process sp aliveset time u delta ps aliveset consist process sp ie aliveset electionmsg replymessag locktim s expir fig process deltapartit sp form take expireso clock time unit send first elect messag send second ep later show p succe becom leader even process q would lock anoth process u time t p broadcast least everi ep clock unit electionmessag note p time p hypothesi deltapartit henc send next electionmessag later time figur constrain lockt ime even q would lock anoth process u q releas lock receiv w process sp send support repli ffl process sp lock anoth process anymor ffl p minimum id aliveset process sp ffl process sp receiv time messag process p becom leader later time v delta protocol satisfi requir t therefor constrain follow c constrain locktim time process p broadcast electionmessag time s p receiv repli connect process within unit releasetim therefor set ae factor take care drift ps hardwar clock ensur process becom leader posit time quantum locktim chosen ps leadership expir actual start sinc p stay leader lockt send elect messag see figur take delta time unit ps releasetim timeout send m make sure lockt thu assum follow lower bound locktim lockt ime deriv upper bound constant locktim goal process q lock process receiv q releas lock q receiv next messag p see figur p becom leader schedul next request ep clock time unit due schedul imprecis time p actual send unit drift rate ps hardwar clock within gammaa ae thu realtim durat two send event least ep gamma ae realtim durat recept q least ep gammaoegammaaegammadeltaffi min differ transmiss delay therefor constant locktim most locktim ae epoeaedeltaffi min protocol set locktim upper bound ie choos locktim big possibl given ep real time min messag elect d locktim min srdd fig process q lock receiv process r p releas lock receiv next elect messag p d bound inconsist bi show protocol satisfi requir bi consid two process p q becom connect time stay connect time see figur let p smaller id two pro cess ie p q show time x s x p leader x q support p x let us consid last electionmessag p sent s first p send two process becom connect s process p includ aliveset p receiv time elect repli messag itself broadcast could result time repli messag n itself consequ could includ aliveset receiv time stamp h send anoth electionmessag expir clock time unit p remov aliveset note p remov aliveset p target set first elect request p fail p need target set becom leader see function checkiflead henc p send first electionmessag elect request fail howev qs repli forc p get support repli success elect request word p receiv n becom leader support q as long p q stay connect p send first electionmessag elect success even without support q p check becom leader soon receiv repli process target set howev ps leadership expir within locktimea clock time unit due elect without qs support thu requir bi satisfi deltaaeexpireslocktimea note bound smaller previous deriv bound satisfi timeli condit see section locktim r d d expir uelectionmsg replymsg fig process p q becom connect p includ q aliveset time v thu electionmessag p send v requir support repli q allow p becom leader x protocol properti propos protocol elect within time unit deltast partit sp process minimum id local leader process stay leader long sp stay stabl p becom leader reduc timeout broadcast electionmessag ep locktimeaedelta ae make sure long sp stay stabl p renew elect leadership expir locktimea local leader p alway know logic partit lp note definit support give protocol see section ix state process r support anoth process q q leader r qs support set henc protocol process r cannot support process q leader local leader know rs support way protocol actual exclud situat like depict figur logic partit contain process support process local leader sinc logic partit overlap point time support set local leader overlap support set basi implement membership protocol process p piggyback support set next elect messag provid process logic partit current member logic partit propos protocol guarante stronger timeli requir one requir specif connect support logic partit fig protocol elect maximum connect set least process minimum id local leader particular connect relat transit guarante local leader elect within say set process cs maximum connect set iff ffl two process p q cs either connect deltadisconnect ffl two process p q cs exist path connectedgraph p q ffl process cs deltadisconnect process outsid cs protocol succe elect minimum process maximum connect set within time unit see figur behavior protocol maximum connect set cs describ graph algorithm see figur initi set contain process cs process cs mark ie set ms empti set local leader ls empti algorithm iter comput minimum process l set s l process connect l mark ie set ms l includ set local leader ls intuit process mark mark process alreadi lock anoth process process connect l mark includ set ms algorithm termin becom empti algorithm termin ls contain exactli set local leader propos local leader elect protocol elect maximum connect set cs protocol configur guarante exist one leader time ie safeti properti s convent leader elect problem satisfi let n denot maximum number process particip elect protocol ie set constant minnumsupport n e process get support half process becom leader see function checkiflead figur thu local leader logic partit n process logic partit overlap one leader time modifi protocol satisfi requir tsolsbi howev defin predic stablepartit follow way fetzer cristian highli avail local leader elect servic ms l min p l connectedlp ms ms ms endif ms fig algorithm comput set local leader ls propos local leader elect protocol elect maximum connect set cs e xi perform measur perform local leader elect protocol depend system lab ucsd sun ipx workstat connect mbit ethernet messag send failawar datagram servic classifi messag deliv either fast slow servic calcul posteriori upper bound transmiss delay messag calcul bound greater given threshold delta classifi fast otherwis classifi slow failawar datagram servic guarante valid nondupl requir hold see section iii threshold delta fast messag ms timeout schedul delay oe ms elect period ep ms typic behavior protocol exactli one process p period broadcast elect messag process repli unicast messag p measur elect time ie time transmit elect messag process p time p becom leader reflect typic behavior see figur measur base success elect elect time increas linearli number process particip elect averag elect time elect time ie process succe probabl becom leader within time shown figur also measur time take elect new leader system split one two partit see figur graph base measur perform use leader elect protocol part membership protocol process p remov process q aliveset p receiv fast messag q expiresm word system split up take process one partit ms remov process ms ms ms ms msno elect process process fig distribut elect time process particip elect smaller differ process due fact local repli sent node elect time avg time time fig averag elect time elect time particip process partit aliveset howev expir could reduc ms see section ix c howev use larger valu ms minim number parallel local leader case temporari instabl first elect attempt system becom partit typic fail aliveset process two newli form partit uptod yet second elect attempt howev gener succeed elect new local leader linear increas elect time number particip process mainli due fact process receiv replymessag elect messag less fact ethernet overload one possibl enhanc protocol would use aliveset provid elect messag build nari tree use tree collat repli see figur process leav tree repli parent node process inner node wait repli children repli parent node root becom leader receiv repli children reduc elect time enhanc would complic protocol sinc handl case process q tree crash slow henc root would get messag children q ieee transact softwar engin appear ms ms ms ms no partit split elect time exclus time fig left graph show measur time l take remov process partit aliveset time l wait attempt becom local leader right graph show measur time need elect new leader l partit split repli fig aliveset root process use defin ari tree use collat repli process aliveset process outsid aliveset repli directli implement tree base collat repli compar effect elect time system eight process three process directli repli new leader l process repli anoth process q q repli l improv process suffici justifi increas complex see figur howev system process enhanc could decreas elect time significantli xii conclus ideal goal local leader servic elect exactli one local leader commun partit goal howev alway achiev failur frequenc commun partit might high process partit abl elect local leader paper deriv specif approxim ideal goal exaclti one local leader per commun partit also show specif implement time asynchron system ie distribut system without upper bound transmiss schedul delay process access local hardwar clock bound drift rate ms ms ms ms ms no elect direct repli collat repli fig comparison tree base collat repli direct repli leader two graph base elect local leader problem requir implement creat nonoverlap logic partit elect one leader per logic partit logic partit creat local leader servic set process local leader logic partit commun time fashion process logic partit connectedrel chang eg process becom disconnect leader local leader servic adapt logic partit new connectedrel stabl partit commun partit process connect other therefor local leader servic creat stabl partit sp logic partit includ sp elect leader l sp within bound amount time sp form specif local leader servic effici implement time asynchron system introduc paper roundbas local leader elect protocol leader elect maximum durat updat leadership next round period updat necessari abl adapt logic partit chang connect relat exampl current local leader l crash disconnect remain process elect new leader within bound amount time sinc l demot known amount time stabl partit n process protocol send one broadcast datagram unicast datagram per round local leader servic proven use design implement failawar membership servic failawar clock synchron servic asynchron partition system fetzer cristian highli avail local leader elect servic import const myid const const const const const ae time const expir time function newleaderdemotedat time procedur procedur const locktim minnumsupport integ init var releaseac alarm clock imlead boolean init fals expirationtim time init supportset set init aliveset set init replyset set init targetset set init lastmsg lockeduntil time init lastrequest time init msg request time function nominbefor p aliveset lastmsgpexpir els myid p lastmsgpexpir nominbefor return nominbefor procedur updatealivesetsend p fast boolean rectim time fast lastmsgsend rectim endif procedur checkiflead minnumsupport supportset replyset imlead true expirationtim lastrequest newleaderexpirationtim els replyset endif lastrequest fig part pseudocod local leader servic return task leaderelect import rectim begin loop select event fagammadeliverelect request aliv sender fast rectim updatealivesetsend fast rectim support support endif fast sender myid alives sender rectim els support request lastrequest fagammadeliverreleas request sender fast rectim fagammadeliverrepli request support sender fast rectim updatealivesetsend fast rectim fast request lastrequest support checkiflead endif endif aliveacwakeupt lastrequest replyset targetset aliveset lastrequest els releaseacwakeupt checkiflead select loop fig part pseudocod local leader servic xiii appendix sym sec mean alivesetp vii independ assess view p bound inconsist requir connect iii time messag exchang possibl oneway timeout delay delay threshold use classifi messag deltadisconnect iv weak form disconnect deltapartit iv stabl partit ep viii elect period expir viii expir time aliveset entri fast iv upper bound fast messag delta hp iii hardwar clock process p leader locktim viii support time leader p iii set process pqr process ae iii maximum drift rate hardwar clock s t u v realtim valu oe iii schedul timeout delay slow iv upper bound slow messag delta support one requir stablepartit v formal stabl partit support v supportsrel support vi closur supportsrel timeli requir r distribut system toward formal approach elect distribut comput sy tem elect asynchron complet network intermitt link failur optim asynchron agreement leader elect algorithm complet network byzantin faulti link design analysi dynam leader elect protocol broadcast network leader elect presenc link failur reach agreement processorgroup membership synchron distribut system the transi approach high avail cluster commun totem faulttoler multicast group commun system the process group approach reliabl distribut comput a failawar membership servic failawar clock synchron an improv algorithm decentr extremafind circular configur process the tandem global updat protocol leas effici faulttoler mechan distribut file cach consist processor group membership protocol specif design implementa tion processor membership asynchron distribut system agre processorgroup membership asynchron distribut system the time asynchron distribut system model understand faulttoler distribut system failur mode assumpt assumpt coverag build faulttoler hardwar clock a failawar datagram servic probabilist clock synchron tr ctr andrew hume scott daniel ningaui linux cluster busi proceed freenix track usenix annual technic confer p june flaviu cristian christof fetzer time asynchron distribut system model ieee transact parallel distribut system v n p june christof fetzer flaviu cristian failawar approach construct failsaf system realtim system v n p march ying zhao wanlei zhou jiumei huang shui yu e j lanham selfadapt clock synchron comput grid journal comput scienc technolog v n p juli richard john anthoni autonom elect algorithm base emerg natur system integr computeraid engin v n p januari