t approxim throughput multipl machin realtim schedul a consid follow fundament schedul problem input problem consist n job k machin job associ releas time deadlin weight process time machin goal find nonpreempt schedul maxim weight job meet respect deadlin give constant factor approxim algorithm four variant problem depend type machin ident vs unrel weight job ident vs arbitrari variant known nphard two variant involv unrel machin also maxsnp hard specif result obtain follow ident job weight unrel machin greedi approxim algorithm ident job weight k ident machin greedi algorithm achiev tight frackkkk approxim factor arbitrari job weight singl machin lp formul achiev approxim polynomi bound integr input approxim arbitrari input unrel machin factor respect arbitrari job weight k ident machin lpbase algorithm appli repeatedli achiev frackkkk approxim factor polynomi bound integr input frackkkk approxim factor arbitrari input arbitrari job weight unrel machin combinatori sqrt approx approxim algorithm b introduct consid follow fundament schedul problem input problem consist n job k machin job associ releas time deadlin weight process time machin goal nd schedul maxim weight job meet deadlin schedul problem frequent refer realtim schedul problem object maxim valu complet job frequent refer throughput consid four variant problem depend type machin ident vs unrel weight job ident vs arbitrari garey johnson see also show even simplest decis problem correspond problem alreadi nphard strong sens decis problem input consist set n job releas time deadlin process time goal decid whether job schedul singl machin within time window show two variant involv unrel machin also maxsnp hard paper give constant factor approxim algorithm four variant problem best knowledg rst paper give approxim algorithm guarante perform approxim factor problem say algorithm approxim factor maxim problem weight solut least opt opt weight optim solut note dene approxim factor would alway least specic result obtain list summar tabl given figur weight function ident machin unrel machin ident job weight arbitrari job weight integr polys input arbitrari job weight arbitrari input figur entri contain approxim factor ident job weight unrel machin give greedi approxim algorithm ident job weight k ident machin show greedi algorithm achiev tight k k approxim factor arbitrari job weight round fraction solut obtain linear program relax problem distinguish case releas time deadlin process time integr polynomi bound case arbitrari former case achiev approxim factor singl machin approxim factor unrel machin latter case get approxim factor singl machin approxim factor unrel machin arbitrari job weight k ident machin achiev k k approxim factor polynomi bound integr input k k approxim factor arbitrari input note k tend inniti factor tend e e respect arbitrari job weight unrel machin also present combinatori approxim factor comput diculti problem consid due slack time avail schedul job gener time window job schedul may much larger process time interestingli special case slack time solv optim polynomi time even multipl machin moreov problem solv singl machin execut window less twice length job anoth special case consid earlier literatur case job releas time or equival case deadlin same special case remain nphard even singl machin howev sahni gave fulli polynomi approxim scheme special case problem consid mani applic hall magazin consid singl machin version problem context maxim scientic militari commerci valu space mission mean select schedul advanc set project undertaken space mission individu project typic execut part mission indic budget space mission may spent make decis hall magazin present eight heurist procedur nding optim solut togeth comput experi howev provid perform guarante solut produc heurist also mention applic problem patient schedul hospit applic relat work schedul literatur see survey preemptiv version problem singl machin studi lawler ident job weight lawler show appli dynam program techniqu solv problem polynomi time extend techniqu obtain pseudopolynomi algorithm arbitrari weight well lawler also obtain polynomi time algorithm solv problem two special case i time window job schedul nest ii weight process time opposit order kise ibaraki mine show solv special case releas time deadlin similarli order close relat problem consid adler et al context commun linear network problem messag releas time deadlin transmit bu unit bandwidth goal maxim number messag deliv within deadlin turn approxim algorithm case arbitrari weight appli weight version unbuer case consid obtain constant factor approxim algorithm approxim algorithm given version onlin version problem job appear one one known advanc lipton tomkin consid nonpreempt version onlin problem koren shasha baruah et al consid preemptiv version special case weight job proport process time consid onlin set sever paper combinatori algorithm arbitrari weight borrow techniqu use onlin case algorithm base round fraction solut obtain linear program lp relax problem lp formul singl machin variabl everi feasibl schedul job constraint job constraint time point naiv implement approach would requir unbound number variabl constraint overcom diculti rst assum releas time deadlin process time polynomi bound integ yield polynomi number variabl constraint allow lp solv polynomi time case arbitrari input show need consid on variabl constraint n job yield strongli polynomi run time expens minor degrad approxim factor round lp done reduc problem graph color problem extend result singl machin multipl machin appli singl machin algorithm repeatedli machin machin give gener analysi type algorithm and interestingli prove approxim factor case ident machin superior approxim factor singl machin algorithm serv start point similar phenomenon in dierent context observ cornuejol fisher nemhaus analysi unrel machin case similar one describ in dierent context awerbuch et al unlik ident machin case unrel machin case extens multipl machin degrad perform rel singl machin algorithm and specic lp base algorithm appli achiev approxim algorithm schedul problem exampl consid problem comput estim complet time job optim fraction solut then appli algorithm use estim complet time deadlin get schedul constant fraction job inde nish complet time observ alreadi appli wein achiev constant factor approxim algorithm variou problem among minimum owtim problem denit notat let job system contain n job job j character quadrupl r g interpret job j avail time r releas time must execut time deadlin process time machin j ij w weight or prot associ job note techniqu also extend gener case releas time deadlin job dier dierent machin howev simplic consid case releas time deadlin job machin hard result also prove assumpt refer case job weight unweight model case job weight arbitrari weight model in unweight case goal maxim cardin set schedul job refer case process time job machin ident machin model case process time dier unrel machin model unweight job ident machin model job j character triplet r without loss gener assum earliest releas time time feasibl schedul job j machin j time t r ij refer job instanc denot j ij t job instanc also repres interv time line say interv j ij belong job j gener mani interv may belong job set job instanc j j t feasibl schedul machin correspond interv independ ie overlap belong distinct job weight schedul sum weight job interv job instanc belong case multipl machin need nd feasibl schedul distinct job machin object maxim sum weight schedul distinguish case releas time process time deadlin integ bound polynomi number job case arbitrari input former case refer polynomi bound integr input latter case refer arbitrari input unweight job section consid unweight model dene greedi algorithm analyz perform unrel ident model former model show approxim algorithm latter model show kapproxim algorithm greedi algorithm greedi strategi singl machin follow time step start algorithm schedul job instanc nish rst among job schedul later note greedi algorithm take consider deadlin job except determin whether job elig schedul greedi algorithm multipl machin execut greedi algorithm for singl machin machin machin dene procedur nextt j j procedur determin job instanc j ij t t earliest among instanc job j start time later machin j interv exist procedur return null otherwis procedur return j ij t algorithm greedyj j nd feasibl schedul machin j among job j call procedur next repeatedli rst call j assum algorithm alreadi comput let current time let current set job j j n fj g algorithm call nextt j j return either j h j t h null algorithm termin round r return null return set g algorithm kgreedyj nd k schedul job appear schedul call algorithm greedi machin machin time updat set j job schedul assum output greedyj j rst g j feasibl schedul machin j j then algorithm call follow properti algorithm greedi use analysi approxim factor algorithm proposit let set job found greedyj j job system j g let h feasibl schedul machin j among job j n g then jhj jgj proof interv job instanc h exist interv g overlap termin earlier otherwis greedi would chosen interv proposit follow feasibl h sinc one interv h overlap end point interv g unrel machin base proposit follow theorem state perform kgreedi algorithm unweight job unrel machin model theorem algorithm kgreedi achiev approxim factor unweight job unrel machin model proof let output kgreedi let opt set interv schedul k machin optim solut opt we note set consid job job instanc interchang let h set job schedul opt machin j kgreedi schedul machin let set job taken kgreedi opt follow opt proposit impli jh j j jg j j true sinc h j feasibl schedul machin among job pick kgreedi construct schedul machin sinc set h j mutual disjoint hold set g j jhj jgkj sinc jogj jgkj get jopt kj jgkj theorem follow section analyz kgreedi algorithm unweight job ident machin model show approxim factor case k analysi quit gener use fact algorithm appli sequenti machin machin machin ident let opt k optim schedul k ident machin let algorithm one machin dene k or k known approxim factor compar opt k note comparison done algorithm use one machin optim schedul use machin let ak algorithm appli algorithm a machin machin k time next theorem bound perform ak use k theorem algorithm ak achiev k k approxim factor k ident machin proof let set job chosen ak ith machin suppos algorithm alreadi chosen set job consid schedul given remov opt k job also chosen optim solut clearli still feasibl schedul cardin least jopt kj therefor denit k set satis ja j kjopt kj rearrang term give us equat prove induct assum claim hold appli induct hypothesi equat get rearrang term yield induct claim set prove theorem name appli theorem algorithm kgreedi comput valu k algorithm greedi observ algorithm kgreedi inde appli algorithm greedi k time assum theorem theorem approxim factor kgreedi unweight job ident machin model proof recal algorithm greedi scan interv order end point pick rst possibl interv belong job pick befor suppos greedi strategi pick set g consid schedul machin number similar argument proposit machin particular job h chosen must job progress g also job must nish particular job h nish thu number job h execut singl machin optim schedul jgj sinc job execut optim schedul dierent machin disjoint get jhj kjgj consequ jopt kj theorem follow set valu k theorem tight bound greedi subsect construct instanc bound unweight model algorithm greedi tight rst show one machin where unrel ident model coincid approxim tight next gener construct unrel model prove tight bound k machin final gener construct one machin k ident machin prove tight bound k recal unweight model job character triplet r ident machin model triplet r g unrel machin model singl machin singl machin system contain two job g greedi schedul instanc g job g cannot schedul instanc h optim solut schedul instanc h g clearli ratio could repeat pattern time axi obtain ratio number job construct demonstr limit approach algorithm greedi approach ignor deadlin therefor capit urgenc schedul job h order miss deadlin gener idea k machin unrel machin machin job system contain k job g releas time job deadlin gtype job deadlin htype job length job g machin machin length job h machin machin note job g h schedul machin sinc job long meet deadlin henc algorithm kgreedi consid two job construct schedul machin result kgreedi select instanc g schedul machin cannot schedul htype job hand optim solut schedul instanc h g machin algorithm kgreedi schedul k job optim algorithm schedul k job yield tight approxim factor unweight job unrel machin model dene job system j k given k show j k perform kgreedyj k k optj k j system one dene subsect j job system contain set algorithm greedi make follow select rst machin greedi schedul job type g true sinc job length less length job type g job type h last g type interv termin time henc room g type htype interv deadlin length second machin greedi schedul job type g sinc shorter job type h last g type job termin time leav room anoth job type h job show optim solut schedul job schedul job machin follow note instanc termin deadlin result get ratio readi dene j k k job system contain kk job algorithm kgreedi abl schedul kk k k k exist optim solut schedul them result get ratio j k system compos k job set larg enough number xing d forc algorithm kgreedi select machin job type g job thu kgreedi schedul htype job hand optim solut abl construct schedul k machin start schedul k htype job rst possibl instanc then schedul turn k job g k g k order valu d allow schedul omit detail set determin deadlin remark valid optim schedul get lower bound deadlin forc kgreedi schedul get upper bound deadlin larg enough upper bound larger lower bound could check follow valu weight job section present approxim algorithm weight job rst present algorithm singl machin unrel machin base round linear program relax problem then reappli analysi theorem get better approxim factor ident machin model conclud combinatori algorithm unrel machin ecient easi implement howev achiev weaker approxim guarante approxim via linear program subsect describ linear program base approxim algorithm rst describ algorithm case singl machin gener case multipl machin linear program formul base discret time suppos time axi divid n time slot complex algorithm depend n howev assum n part input discret time ne enough repres feasibl schedul up small shift later show get rid assumpt expens slight increas approxim factor linear program relax schedul problem follow way fraction feasibl solut one distribut process job job instanc interv belong restrict given point time t sum fraction assign interv belong job exceed end job interv t belong it ie r would conveni assum x valu n linear program follow maxim subject to time slot t job i n x t x easi see feasibl schedul dene feasibl integr solut linear program vice versa therefor valu optim fraction solut linear program upper bound valu optim integr solut comput optim solut linear program denot valu variabl x solut q denot valu object function optim solut opt show round optim solut linear program integr solut show linear program use dene color interv collect interv belong set job j regard interv represent interv graph i dene set interv independ if i two interv set set belong job note denit restrict regular independ relat interv graph clearli independ set interv dene feasibl schedul weight independ set p wp dene sum weight job interv belong goal color interv color class induc independ set note interv requir color interv may receiv one color suppos collect color class independ set nonneg coecient exist color class p m wp opt color class dene approxim solut approxim factor remain show obtain desir color take short detour dene group constrain interv color problem let interv represent maximum number mutual overlap interv suppos interv partit disjoint group group contain interv legal group constrain color interv q color which i overlap interv allow get color ii interv belong group allow get color theorem exist legal group constrain color interv q use proof use greedi algorithm obtain legal color use interv q left endpoint color interv left right respect order interv consid algorithm color one free color avail time show induct algorithm consid interv alway free color true initi algorithm consid interv q color cannot use q occupi either interv overlap q interv belong group q sinc consid interv sort left endpoint interv overlap q also overlap other henc interv interv belong group q sinc number avail color alway free color back problem color interv i let n round fraction q optim solut closest fraction form an n incur neglig error of nn factor valu object function gener interv graph replac interv j t q n parallel interv dene group constrain color problem group instanc job j note maximum number mutual overlap interv bound n maximum number interv belong group also n theorem exist group constrain color use n color attach coecient n color class clearli sum coecient less also construct sum weight interv color class multipli coecient n opt conclud theorem approxim factor algorithm round optim fraction solut note techniqu round fraction solut decompos convex combin integr solut also use alber et al strongli polynomi bound diculti linear program formul round algorithm complex algorithm depend n number time slot show choos n polynomi number job n expens lose bit approxim factor first note case releas time deadlin process time integr may assum without loss gener job schedul integr point time if addit restrict integ polynomi size number variabl constraint bound polynomi turn attent case arbitrari input let pn n polynomi partit job j two class big slack job j small slack job j obtain fraction solut separ big slack job small slack job rst explain obtain fraction solut big slack job big slack job j nd pn nonoverlap job instanc assign valu pn interv note mani nonoverlap interv found sinc r larg enough claim assign ignor comput solut via lp small slack job true point time t sum fraction assign interv belong big slack job npn thu eect fraction solut neglig in worst case scale fraction correspond small slack job factor npn nevertheless big slack job contribut weight fraction object function restrict attent set small slack job explain comput fraction solut them solv lp bound number variabl constraint lp partit time n pn slot instead variabl job instanc consid n pn variabl job j n pn jth variabl repres job instanc j start jth time slot similarli consid n pn jth constraint cover jth time slot small slack job j along time axi point r pn dene n pn divid time slot determin adjac divid main observ small slack job j interv fulli contain time slot ie two consecut divid lp formul modi variabl constraint slightli dierent origin formul see whi consid feasibl schedul mention abov job instanc cannot fulli contain time slot t howev schedul consid may consist two instanc job one termin within time slot start within t keep constraint stipul sum variabl correspond interv intersect time slot bound would abl repres schedul formul overcom problem relax linear program allow everi time slot t sum fraction assign interv intersect relax linear program follow maxim subject to time slot t job i n x t x easi see relax guarante valu object function linear program least big valu optim schedul round optim fraction solut way previou section sinc relax constraint note run group constrain interv color algorithm number mutual overlap interv twice number interv group therefor gener color class guarante that yield approxim factor conclud theorem approxim factor strongli polynomi algorithm round fraction solut unrel machin section consid case k unrel machin rst present linear program formul clariti give lp formul polynomi bound integr input howev construct given achiev strongli polynomi algorithm arbitrari input appli well assum n time slot job j machin j dene variabl x itj instanc t maxim subject to time slot machin j job i n i j t x itj algorithm round fraction solut machin machin let round solut round machin i rst discard fraction solut interv belong job chosen denot approxim factor achiev round singl machin name input arbitrari input theorem approxim factor algorithm round kmachin solut proof let f k denot fraction solut machin i let wf denot valu denot f fraction solut machin discard interv belong job chosen know i k c ad inequ sinc set mutual disjoint get that c recal job i sum valu fraction solut assign interv belong machin exceed therefor yield ws subsect appli theorem case weight job ident machin distinguish case polynomi bound integr input arbitrari input theorem exist algorithm weight job ident machin case achiev approxim factor polynomi bound integr input arbitrari input proof shown abov linear program formul valu optim solut least big valu optim schedul let n chosen way discuss preced theorem claim use round scheme feasibl solut dene interv graph color kn color integr polynomi size input k color arbitrari input consid rst case integr polynomi size input interv graph induc solut lp n interv that correspond job group kn interv mutual overlap point time appli group constrain interv color get valid color k similarli arbitrari input interv graph induc solut lp n interv that correspond job group kn interv mutual overlap appli group constrain interv color get valid color impli polynomi size input arbitrari input word approxim factor achiev singl machin compar optim algorithm use k ident machin set valu paradigm transform algorithm singl machin algorithm k ident machin yield claim approxim factor remark note k tend inniti approxim factor e unweight job weight job integr polynomi size input arbitrari input approxim factor e set get bound coincid bound singl machin everi k case bound improv upon bound unrel machin of combinatori algorithm section present combinatori algorithm weight machin model rst present algorithm singlemachin version show extend case k machin even unrel machin model singl machin algorithm inspir onlin call admiss algorithm see scan job instanc or interv one one job instanc either accept it reject it note reject irrevoc decis accept temporari ie accept job may still reject later point time remark case nonpreempt onlin call admiss constant competit factor cannot achiev algorithm reason due onlin natur problem job must consid order releas time algorithm freedom order job dierent way yield constant approxim factor outlin algorithm feasibl interv job scan left right on time axi sort end point algorithm maintain set current accept interv new interv i consid accord sort order immedi reject belong job alreadi instanc a immedi accept overlap interv a case accept interv ad a overlap one interv a accept weight to determin later time sum weight overlap interv case say preempt overlap interv add discard overlap interv a process end interv scan formal descript algorithm call algorithm admiss given figur main diculti implement algorithm scan innit number interv prove perform algorithm show overcom diculti inform say interv caus reject preemption anoth interv j algorithm admiss let set accept job instanc initi let set yet unprocess job instanc initi set feasibl job instanc empti repeat follow procedur let j job instanc termin earliest among instanc let w weight let w sum weight instanc h overlap i a n fig b j reject i c els fig d els w w accept preempt g reject i figur algorithm admiss either interv directli reject preempt interv j preempt anoth interv caus reject preemption interv j note relat dene recurs interv may preempt anoth interv preempt interv turn reject interv case interv caus reject preemption interv fix interv accept algorithm consid interv chosen optim solut reject preemption caus interv i prove total weight interv f time weight accept interv i function f optim get theorem approxim factor algorithm admiss proof let set interv chosen optim algorithm opt let set interv accept algorithm admiss denot a interv dene set ri interv account for i set consist case o interv reject preemption caus i formal assum accept rule c then set ri initi case empti set otherwis assum accept rule d ri initi contain interv directli preempt union set ri interv preempt i addit ri contain case o assum j reject rule b let interv caus reject j note j belong job case add j ri assum j reject rule e let h interv overlap j time reject let w weight j let w j weight j view j h imaginari interv j weight j j w j w g note due reject rule follow weight j j time weight j hard see interv o portion use rule e belong exactli one set ri a thu union set ri cover o x interv a let w weight let w sum weight interv ri dene w goal bound abov interv may directli reject one interv o let w r weight the portion of interv r ori directli reject i exist otherwis let w observ w r w sinc otherwis r would reject let interv belong job one belong it mayb itself exist denit weight w let w r sum weight rest interv ri dene w follow assum induct bound valid interv earlier end point end point i sinc overal weight job directli preempt w get w impli therefor equat minim impli final sinc bound hold interv sinc union ri set cover interv taken opt get valu opt time valu a henc approxim factor implement observ step algorithm invok statu chang ie either new job becom avail n time job schedul end n time time step invok total number job instanc examin n at one job implement algorithm employ prioriti queue hold interv accord endpoint point time enough hold one job instanc job prioriti queue turn total number oper retriev next instanc on log n total on log n oper unrel machin number unrel machin k call algorithm admiss k time machin machin arbitrari order set job consid ith call contain job alreadi schedul machin analysi show bound carri case unrel machin similar analysi present proof theorem main dierenc denit ri interv execut machin dene set ri consist case o interv i execut machin optim schedul ii reject preemption job caus i maxsnp hard show problem schedul unweight job unrel machin maxsnp hard done reduc variant maxsat variabl occur three time problem variant maxsat given collect claus consist two boolean variabl addit constraint variabl occur three time goal nd assign valu variabl would maxim number claus satis ie contain least one liter true valu problem known maxsnp hard cf given instanc maxsat problem show construct instanc problem unweight job unrel machin valu maxsat problem equal valu schedul problem variabl x associ machin claus c j associ job releas time job deadlin job execut two machin correspond variabl claus c j contain in word process time job rest machin innit suppos claus c j contain variabl x posit neg liter process time job correspond c j k k f g number occurr variabl x posit neg liter note case variabl x occur posit neg form occur exactli one form sinc variabl x occur three time overal follow feasibl schedul machin cannot execut job correspond posit liter occurr job correspond neg liter occurr conclud job schedul claus satis direct hard verifi claus satis job schedul sinc maxsat restrict variabl occur three time maxsnp hard unweight job unrel machin case maxsnp hard well acknowledg indebt joel wein mani help discuss especi suggest consid gener case maxim throughput job releas time deadlin r schedul timeconstrain commun linear network minim stall time singl parallel disk system schedul job competit bandwidth alloc preemption competit onlin realtim task schedul schedul comput manufactur system locat bank account optim oat note schedul interv onlin two processor schedul start time deadlin comput intract guid theori np complet patienc virtu e maxim valu space mission solvabl case one machin schedul problem readi due date optim onlin schedul algorithm overload realtim system sequenc minim weight number tardi job dynam program algorithm preemptiv schedul singl machin minim number late job sequenc schedul ing algorithm complex onlin interv schedul algorithm schedul independ task approxim maximum sati tr ctr cash j costello christoph p diehl amit banerje heski fisher schedul activ camera observ peopl proceed acm nd intern workshop video surveil sensor network octob new york ny usa lixin tang gongshu wang jiyin liu branchandpric algorithm solv molten iron alloc problem iron steel industri comput oper research v n p octob thoma erlebach klau jansen implement approxim algorithm weight unweight edgedisjoint path bidirect tree journal experiment algorithm jea p randeep bhatia julia chuzhoy ari freund joseph seffi naor algorithm aspect bandwidth trade acm transact algorithm talg v n februari thoma erlebach frit c r spieksma interv select applic algorithm lower bound journal algorithm v n p januari laura barbulescu jeanpaul watson l darrel whitley adel e how schedul spaceground commun air forc satellit control network journal schedul v n p januaryfebruari julia chuzhoy joseph seffi naor new hard result congest minim machin schedul proceed thirtysixth annual acm symposium theori comput june chicago il usa julia chuzhoy rafail ostrovski yuval rabani approxim algorithm job interv select problem relat schedul problem mathemat oper research v n p novemb amotz barnoy reuven baryehuda ari freund joseph seffi naor baruch schieber unifi approach approxim resourc alloc schedul journal acm jacm v n p septemb thoma erlebach klau jansen convers color algorithm maximum weight independ set algorithm discret appli mathemat v n p amotz barnoy sudipto guha yoav katz joseph seffi naor baruch schieber hada shachnai throughput maxim realtim schedul batch proceed thirteenth annual acmsiam symposium discret algorithm p januari san francisco california julia chuzhoy joseph seffi naor new hard result congest minim machin schedul journal acm jacm v n p septemb reuven baryehuda keren bendel ari freund dror rawitz local ratio unifi framework approxim algorithm memoriam shimon even acm comput survey csur v n p decemb faisal z qureshi demetri terzopoulo surveil camera schedul virtual vision approach proceed third acm intern workshop video surveil sensor network novemb hilton singapor