t trubi design system a paper describ trubi system design vlsi circuit start formal specif describ term relat abstract behaviour design process involv correctnesspreserv transform base prove equival relat togeth addit constraint class implement relat defin tool enabl relat simul translat circuit descript vhdl design process illustr deriv circuit dimension convolut b introduct paper describ computerbas system known trubi design vlsi circuit start highlevel mathemat specif behaviour circuit describ binari relat appropri possibl complex domain valu simpl relat compos complex one use varieti combin form higherord function basic relat combin form gener algebra defin equival which may take form equal condit equal relat express term circuit equival describ gener correct preserv transform whole famili circuit particular form design process equival exploit transform specif form one rubi express implement form anoth rubi express calculationori style trubi base formalis rubi origin introduc jone sheeran languag function relat refer trubi languag purpos paper demonstr gener languag use bridg gap pure mathemat specif implement circuit design circuit dimension convolut use illustr featur method particular step given mathemat specif initi rubi descript small obviou method allow us deriv gener circuit choic detail postpon final actual synthesi trubi system enabl user perform desir transform cours design simul behaviour result relat translat final rubi descript relat vhdl descript correspond circuit subsequ synthesi highlevel synthesi tool transform style design ensur correct final circuit respect initi specif assum equival use correct proof correct perform help separ theorem prover simpl interfac trubi proof burden pass prover prove equival pass back inclus trubi databas divis system main trubysystem theorem prover vhdl translat follow divid conquer philosophi theorem prove tediou often need specialist system design use prove transform rule comput rel cheap trubi system leav proof specif rule condit theorem prover certain level concretisaion reach effici tool alreadi exist synthesis circuit therefor chosen translat relat descript vhdl rubi work describ paper base socal pure rubi subset rubi introduc rossen make use observ larg class relat use describ vlsi circuit express term four basic element two relat two combin form usual defin term synchron stream data shown figur figur basic element pure rubi figur type sigt type stream valu type usual repres function type z identifi z time notat arb mean relat b r synonym a b r relat spread f lift stream pointwis relat r type ff fi whose characterist function f of type ff f b true r type spread f sigff sigfi type relat stream type ff stream type fi notat conveni stress idea describ lift stream pointwis relat type ff fi type denot ff sig thu spread f suitabl f describ ani synchron clock combin circuit relat socal delay element describ basic sequenti circuit f g the backward relat composit f g describ serial composit circuit describ f describ g f type ff sig fl g type fl sig fi type ff sig fi final f g the relat product f g describ parallel composit f g f type sig sig type ff theta ff sig type relat describ type signal pass interfac circuit environ howev import note relat descript specifi direct data pass interfac input output mix domain rang r ff fi a b c f g d figur graphic interpret of featur rubi relat combin interpret term circuit element also natur graphic interpret correspond abstract floorplan circuit describ convent graphic interpret spread or fact circuit whose intern detail wish show label rectangular box compon domain rang drawn wire stub whose number reflect type relat obviou manner simpl type give singl stub pair type two on compon domain drawn left hand side compon rang right convent graphic interpret dshape figur domain flat side rang round side f g drawn rang f plug into domain g f two circuit f g parallel unconnect convent illustr figur detail see trubi languag trubi circuit combin defin term four pure rubi element use syntax style type lambda calculu definit circuit combin type given figur ff fi denot type variabl thu stand type first five definit nonparameteris stream relat correspond circuit defin use spread element appli function evalu true z equal sum x pointwis relat two integ sum polymorph ident relat dub pointwis relat valu pair copi valu reorg pointwis relat two way group three valu pair describ combin circuit except describ pattern wire known wire relat fifth sumspec describ simpl sequenti circuit ad machin accumul regist remain definit exampl combin alway one paramet typic describ circuit combin appli combin suitabl argument give circuit thu fst r circuit describ r r l where combin l written infix oper circuit r second compon domain r connect first compon rang definit l and elsewher r denot invers relat r graphic interpret fst l shown figur dialect rubi use trubi system essenti given rossen differ standard version rubi given jone sheeran repetit combin wire relat parameteris number repetit reflect type system includ depend product type generalis normal function type enabl us explicitli express size repet structur type system exampl combin map which map relat element list stream polymorph depend type nlistnt type list exactli n element type thu map function take integ n relat type ff sig fi argument int theta int sig int ff sig dub ff sig dub reorg ff theta fi theta fl sig int theta control sig bool theta int loop fst snd d alu snd dub fst sig fst sig l ff theta fi sig sig sig l fst r sig sig sig sig sig els fst apr n sig sig sig figur exampl circuit combin definit trubi fst r r l map r tri r colf r rdrf r r r r r r r figur graphic interpret combin return relat whose type nlistnff sig nlistnfi depend n socal pi bound variabl full descript trubi type system found relat apr n use definit map pointwis relat nlist valu singl valu n list singl valu append on right nlist combin mapf similar map second paramet function integ relat relat use depend posit structur creat triangular circuit structur colf column structur relat parametris posit column final rdrf call reduc right kind column structur name function program will exampl use relat argument calcul sum list integ graphic interpret repetit combin shown figur note definit given pointfre notat reflect fact express term element pure rubi easi show equival expect definit use data valu exampl howev defin circuit term pure rubi element offer sever advantag greatli simplifi definit use gener rewrit rule simplifi reason circuit theorem prover eas task translat languag tradit vlsi specif languag vhdl transform phase trubi design design process trubi involv three main activ reflect overal design system transform proof translat vhdl section consid first phase involv transform initi specif rewrit possibl addit type time constraint approach implement design describ rubi relat note size argument n here elsewher written subscript improv readibl rewrit rewrit essenti featur calcul style design use rubi trubi system allow user rewrit rubi express accord predefin rewrit rule rewrit take place interact manner direct user use basic rewrit function known tactic combin use higher order function known tactic style system often call transform system distinguish convent rewrit system trubi implement function program languag standard ml sml offer interact user environ tactic tactic sml function appli environ trubi system rewrit rule express form equal implic two equal explicit type univers quantif term variabl case implicit univers quantif type via use type variabl apart restrict form rule may use practic howev commonli use rule equal relat express correspond equival circuit use manipul circuit descript rubi anoth equival form rule manipul integ boolean express could cours also introduc manipul perform automat builtin express simplifi base tradit rewrit normal form exampl rule seen figur first rule express simpl fact combin commut fst snd fstsndcomm fact invers serial composit backward composit invers inversecomp distribut fst serial composit fstcompdist fourth rule maptricomm exampl condit rule precondit r commut serial composit must fulfil order tri n r map n commut similarli forkmap state r function relat singl copi domain side nway fork equival n copi rang side fork final rule retimecol use rubi synthesi express time featur inputoutput equival circuit systol version circuit note sinc rule contain univers quantif relat particular type essenti express gener properti whole famili circuit trubi system direct rule use rewrit come three sourc may explicit rewrit rule definit implicit definit deriv circuit combin definit which permit name circuit combin replac definit viceversa lemmata deriv previou rewrit process establish equal two express say trubi correct explicit rule prove use tool base isabel theorem prover use axiomatis rubi within zf set theori make life easier user conjectur rewrit rule can howev enter without prove rewrit finish unprov rewrit rule print out togeth instanti condit condit rule form proof oblig user must transfer theorem prover order ensur sound rewrit process fstsndcomm sig sig sig sig r fstcompdist sig sig fst r sig sig r sig r retimecol sig col figur rewrit rule trubi constraint transform process trubi system primarili involv rewrit express describ abov howev rewrit produc relat exactli equival origin abstract specif relat often larg restrict obtain implement circuit trivial exam ple relat describ defin type int theta int sig int implement purpos want restrict integ valu represent finit number bit mathemat point view mean restrict relat subtyp given by int n int n subtyp integ represent n bit trubi describ subtyp ad relat constraint express initi specifi bint n int n nbit nbit nbit int n int int int int n int n b a id n int n c bit figur ad constraint relat cation depict figur a narrow type ad relat constraint domain rang case instantant id n ident relat integ represent n bit defin by id n bit n bit n bit n relat integ list n bit repres it constrain relat is shown figur b definit id n expand give bit shown figur c relat bit n manipul origin relat use gener rewrit rule anoth style constraint add delay element d domain rang relat sinc rubi relat relat stream data element stream correspond specif time instant chang time properti circuit simpl exampl relat defin figur describ pure combin circuit ad n delay element rang side would give specif adder total delay n time unit use gener relat rewrit rule push delay element combin part thu obtain descript adder extern time properti differ intern arrang regist style manipul illustr detail convolut exampl follow section note relat framework use describ manipul type time constraint interest variat mix two method abov exampl ad relat specif bitseri integ convert constraint domain side invers rang side obtain specif bitseri adder manipul get implement circuit abov final specif constrain instanti free type term variabl free term variabl typic use describ otherwis unspecifi circuit element give size regular structur gener manner instanti obtain descript specialis circuit particular circuit element particular dimens gener transform process start relat specif spec circuit suitabl high level abstract spec rewritten number equal rewrit order reach implement descript rewrit process relat narrow ad relat constraint process illustr seri transform prime denot ad constraint origin specif chang accordingli spec spec reflect addit constraint ensur equal impl final constrain specif logic point view constraint regard assumpt implement fulfil origin specif constraint impl spec exampl dimension convolut exampl tranform process present part design vlsi circuit dimension discret convolut mathemat definit known convolut kernel stream valu a new stream valu c evalu that r r intuit behind stream repres sequenc row length w valu c weight sum correspond valu astream neighbour distanc sigmar two dimens use weight given matrix k commonli use imag process stream pixel valu scan rowwis sequenc imag k describ kind smooth weight function note summat j equal dimension convolut th row k time offset w dimension convolut defin by r formul problem rubi first step design process formul mathemat definit rubi follow style design use correl divid relat c combin part relat cvalu given time valu time for conveni let summat run appli substitut new tempor part relat valu time origin avalu tempor part matrix split part easili specifi directli rubi first given find relat relat b list offset depend posit j rubi specifi state a relat tri r r way fork specifi a fix offset specifi b assembl get b next find relat relat r list b s offset depend posit b specifi b r way fork b specifi b anoth fix offset b specifi a b assembl get a b conveni rewrit two relat the two follow b butterfli r d a b butterfli r w combin butterfli defin by sig app nn fst irt n r combin part convolut relat easili express rubi term combin q type int int theta int sig int q relat a x k ij x express convolut kernel function posit within matrix k defin c t easi demonstr that arbitrari x a t x t relat c t rubi relat rdrf r q rdrf defin figur combin tempor relat given definit find entir dimension convolut relat cr relat a x given w r x q express term onedimension convolut relat cr relat b int theta int sig butterfli r d rdrf r q int theta int sig int cr fst fork butterfli r w cr correspond inner summat j specif graphic interpret cr shown left figur interpret cr right butterfli contain increas number delay element d midlin increas number antidelay element midlin follow definit small butterfli use singl delay element correspond time differ consecut element data stream larg butterfli use group w delay element correspond time differ consecut line data stream defin relat trubi conveni parameteris them becom combin depend r w q final definit are int theta int sig fst fork butterfli r d rdrf r q int theta int sig fst fork butterfli r d w definit actual circuit dimension convolut describ relat conv r w q suitabl valu r w q figur two dimension convolut transform implement relat unfortun relat given describ physic implement circuit assum as implicitli done now input appear domain relat as x a output rang as c antidelay butterfli instead tri implement relat conv r w q stand implement retim version it form ad constraint domain side delay input signal fst d r d w result antidelay cancel out delay element constraint move inward origin relat result circuit will cours produc output r unit later origin circuit best achiev physic world live in use seri rewrit rule manipul relat obvious implement form output trubi system deriv shown annot somewhat abbrevi form figur concret syntax produc trubi prettyprint free variabl preced sign repeat composit r n denot rn relat invers r r xtb denot express variabl x type bodi b deriv finish relat express fst fork r gener descript convolut circuit express term three free variabl r w correspond respect kernel size convolut line size dimension array point convolut q give kernel function obtain descript particular concret circuit use rubi system facil instanti free variabl particular valu definit convg fst drdwrfst fork rbutterfli r dw fstcompdist use right leftg fst drdwrfork rbutterfli r dw use rule forkmapg fst fork rmap r drdwrbutterfli r dw butterfli fst fork rmap r drtri r dw frule maptricomm rule fstcompdistg fst fork rfst tri r dwfst map r dr fst fork rfst tri r dw kintfst dr iintconv r q i k definit convg fst fork rfst tri r dw kintfst drfst fork rbutterfli r d fnow use similar procedur remov remain butterflyg fst fork rfst tri r dw kintfst fork rfst tri r d use definit fst use tri n d fst fork rfst tri r dw kintfst fork rsnd dr fst fork rfst tri r dw kintfst fork rsnd dr anoth constraint domain side snd d w snd dwrfst fork rfst tri r dw kintfst fork rsnd dr frule fstsndcomm fst r fst fork rtri r dwdwr kintfst fork rsnd dr fst fork r rdrf r kintsnd dwfst fork rsnd dr fst fork r kintfst fork rsnd dwdr gamman g fst fork r kintfst fork rsnd dw r figur deriv dimension convolut relat exampl might instanti r w q acc describ multiplyandadd circuit multipl factor i kernel element describ q use factor weight accumul weight sum suitabl reduct integ express would give us relat descript fst fork free variabl graphic interpret final version circuit shown figur seen figur circuit semisystol latchc z figur semisystol version two dimension convolut lefthand structur depict entir circuit basic build element shown right correspond relat snd q k p q instanti describ text middl structur depict snd delay element shown arrow figur indic inputoutput partit determin causal analysi describ delay element d associ combin element global distribut input stream combin element select extract rewrit system trubi includ facil select subterm target express match pattern free variabl use restrict rewrit temporarili particular subterm or importantli extract part target express implement latter case remaind target express give context describ set implement condit must fulfil extract part work extract mani respect convers ad relat constraint specif context specifi sort requir firstli may give represent rule must obey interfac extract subterm secondli if context contain delay element d may give time requir implement subterm trivial exampl adder extract part typic rewrit circuit insid dash box figur c implement condit case express fact integ must repres n bit specifi bit n vlsi implement relat approach describ vlsi circuit offer greater degre abstract descript use function alon sinc direct data flow specifi howev real circuit offer particular pattern data flow mean interpret relat may gener mani differ circuit case zero circuit say relat unimplement widest class relat gener implement believ causal relat defin hutton generalis function relat sens input restrict domain output rang trubi causal analysi perform end rewrit process user extract part relat implement case fact context relat extract nonimplement exampl may specifi time requir if could implement would correspond forese futur causal analysi exactli relat causal element tupl valu relat partit two class first class the output function determin second class the input partit function depend use tupl relat exampl previous defin relat causal sens three element tupl valu relat partit describ fact three differ way x input z output relat describ adder x z input output relat describ subtractor z input x output relat describ anoth subtractor note relat also causal although function essenti causal mean relat view partit determinist function input trubi relat analys first expand use definit compon relat form express entir term four element pure rubi relat invers expand relat analys simpl bottomup analysi heurist combin element describ spread relat causal determin analys bodi spread must form bodi part is ffl equal singl variabl lefthand side ffl conjunct bodi part ffl condit choic two bodi part equal result analysi depend form righthand side singl variabl conclus drawn equal impli wire abstract floorplan righthand side express valu taken input lefthand side taken output choic valu condit taken input rule result conflict causal partit found sever possibl causal partit case hand rule enabl us choos uniqu one delay element d valu domain input rang output parallel composit preserv causal fact invers serial composit gener requir analysi determin whether inputoutput partit compon relat compat implement unidirect data flow compon essenti check made whether two output use assign new signal valu wire whether wire assign signal valu whether loop contain pure combin compon addit analysi exploit order determin network circuit form netlist name wire activ compon present backtrack arbitrari choic partit sever possibl wrong one possibl find complet causal partit entir circuit exampl let us consid analysi part relat dimension convolut central element relat given accp describ combin multiplyandadd circuit kernel element p k use definit acc substitut p reduc to spread bodi spread form equal singl lefthand side thu causal partit make z output input case relat function domain rang gener need so sinc delay element d input domain side output rang side serial composit snd compat analysi accp rang delay element correspond compon domain accp analysi proce similar manner lead final data flow pattern shown arrow figur translat vhdl sinc causal analysi give network circuit direct data flow along individu wire compon actual translat vhdl compar simpl translat top level rubi relat declar singl design unit incorpor singl entiti name specifi user rough term combin relat c wire relat within expand rubi relat translat one possibl condit signal assign output c assign new valu base input exampl give rise singl concurr signal assign form sig z sig sig name vhdl signal correspond z respect w constant equal valu p circuit element question sinc oper avail use operand integ boolean bit charact type rubi with one simpl except logic implic subset avail vhdl direct style translat problemfre similar manner condit ifthenels express bodi spread directli translat condit assign statement possibl extra signal assign evalu singl signal give condit vhdl type signal involv deriv rubi type use domain rang c obviou way thu elementari type rubi type bit translat vhdl type rubybit bool rubybool int rubyint char rubychar vhdl definit rubybit rubybool rubyint rubychar predefin packag rubydef refer gener vhdl unit compos type give rise group signal gener possibl recurs flatten rubi type pair flatten two compon list n compon elementari type reach rubi relat refer elementari type predefin one packag declar contain suitabl type definit gener translat exampl enumer type etyp use definit vhdl enumer type rubyetyp name element gener free variabl relat type noncombin relat rubi relat translat instanti one vhdl compon exampl delay relat d rubi type sig simpl type translat instanti compon dff rubyt rubyt type correspond abov compos type pair list two compon appropri simpl type use standard definit compon standard simpl rubi type avail librari compon in particular gener free relat variabl assum defin user final result translat fulli instanti dimension convolut relat vhdl shown figur figur show entir vhdl code which cours repetit owe regular natur circuit illustr style signal identifi start input output correspond gener code edit compil rubi relat fst fork rdrf kint fst fork snd d entiti conv port end conv architectur rubi conv compon dff rubyint port end compon signal wirewirewirewirewirewirewir wirewirewirewirewirewir wirewirewir rubyint begin input assign output wire calcul regist d dff rubyint port map wirewireclk d dff rubyint port map wirewireclk d dff rubyint port map wirewireclk d dff rubyint port map wirewireclk d dff rubyint port map wirewireclk d dff rubyint port map wirewireclk figur vhdl translat instanti dimension convolut circuit extern input output mention formal port claus entiti name start wire identifi intern signal clock input gener underli entiti sequenti assign mark calcul describ combin compon mark regist describ compon instanti correspond delay element instanti userdefin compon follow separ section requir correct translat reli heavili two fact simpl map rubi type oper type oper avail vhdl relat consid translat intern consist causal partit found fact also impli vhdl code gener synthesis vlsi present use synopsi vhdl compil perform synthesi automat compon system complet system illustr figur similar style analysi use gener vhdl code use control simul behaviour extract relat user must suppli stream valu input circuit and requir initi valu latch simul use exactli assign new valu signal appear vhdl descript obvious fulli instanti causal relat simul system data flow proof burden silicon equival prove parserprint rubi express intern represent rubi term system analysi dynam behaviour figur complet rubi design system conclus conclus paper present trubi design system outlin gener design method vlsi circuit base transform formal specif use equal rewrit constraint extract simpl mathemat basi specif languag term function relat enabl us prove gener transform rule minimis step mathemat descript problem initi specif system use system illustr nontrivi exampl circuit dimension convolut exampl show trubi use describ complex repetit structur use vlsi design demonstr system use deriv descript highli gener circuit concret circuit descript obtain instanti free paramet circuit describ socal causal relat implement behaviour simul trubi system simpl map trubi vhdl relat use produc vhdl descript final synthesi design system basic reli exist larg databas pre prove transform rule howev design process conjectur rule introduc time rewrit rule precondit may use trubi proof conjectur precondit postpon without loss formal system keep track relev proof burden transfer later separ theorem prover belief divid ocnquer philosophi help make use formal method feasibl practic design acknowledg work describ paper partial support danish technic research council author would like thank lar rossen mani interest discuss construct tool rubi ole sandum work design rubi vhdl translat r framework defin logic function relat calcul program circuit design rubi relat refin circuit design gener theorem prover rubi proof system formal rubi rubi algebra rubi framework trubi tool handl rubi express transform rewrit rubi constraint abstract verif tr