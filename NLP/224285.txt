t messag pass versu distribut share memori network workstat a messag pass program execut parallel virtual machin pvm librari share memori program execut use treadmark program water barneshut splash benchmark suit d fft integ sort is embarrassingli parallel ep na benchmark ilink wide use genet linkag analysi program success overrelax sor travel salesman tsp quicksort qsort two differ input data set use water water water issmal islarg sor sorzero sornonzero execut environ set eight hp workstat connect mbit per second fddi network water ep ilink sorzero sornonzero perform treadmark within of pvm issmal water barneshut d fft tsp qsort differ order to final islarg pvm perform two time better treadmark messag data sent treadmark explain perform differ extra commun caus separ synchron data transfer extra messag request updat data invalid protocol use treadmark accumul migratori data treadmark b introduct parallel comput network workstat gain attent recent year workstat cluster use off shelf product cheaper supercomput furthermor high research support part nsf nyi award ccr nsf cise postdoctor fellowship award cda nsf grant ccr bir texa advanc technolog program grant speed generalpurpos network power workstat processor narrow perform gap workstat cluster supercomput processor workstat cluster share physic memori interprocessor commun processor must perform send messag network current prevail program model parallel comput network workstat messag pass use librari pvm tcgmsg express messag pass standard mpi also develop messag pass paradigm distribut natur memori system fulli expos applic programm programm need keep mind data is decid commun processor commun with commun make hard program messag pass especi applic complex data structur softwar distribut share memori dsm system eg provid share memori abstract top nativ messag pass facil applic written execut share memori multiprocessor access share data ordinari read write oper chore messag pass left underli dsm system easier program way dsm system tend gener commun therefor tend less effici messag pass system messag pass paradigm commun handl entir programm complet knowledg data usag pattern contrast dsm system littl knowledg applic program therefor must conserv determin commun sinc send messag workstat expens extra commun caus seriou perform degrad much work done past decad improv perform dsm system paper compar stateoftheart dsm system treadmark commonli use messag pass system pvm goal assess differ programm perform dsm messag pass system precis determin remain caus lower perform system port nine parallel program treadmark pvm water barneshut splash benchmark suit d fft integ sort is embarrassingli parallel ep na benchmark ilink wide use genet linkag analysi program success overrelax sor travel salesman problem tsp quicksort qsort two differ input set use water water water issmal islarg sor sorzero sornonzero ran program eight hp workstat connect mbit per second fddi network term programm sinc test program simpl difficult port pvm howev two program name d fft ilink messag pass version significantli harder develop dsm version water ep ilink sorzero sornonzero perform treadmark within pvm issmal water barneshut d fft tsp qsort differ order final islarg pvm perform two time better treadmark messag data sent treadmark explain perform differ extra commun caus separ synchron data transfer extra messag request updat data invalid protocol use treadmark accumul migratori data treadmark current tri address defici integr compil support treadmark rest paper organ follow section introduc user interfac implement pvm treadmark section present applic program result section conclud paper pvm pvm stand parallel virtual machin messag pass system origin develop oak ridg nation laboratori although messag pass system tcgmsg provid higher bandwidth pvm chose pvm popular use pvm version experi pvm interfac pvm user data must pack send buffer dispatch receiv messag first store receiv buffer must unpack applic data structur applic program call differ routin pack unpack data differ type routin syntax specifi begin user data structur total number data item pack unpack stride unpack call match correspond pack call type number item pvm provid user nonblock send includ primit send messag singl destin multicast multipl destin broadcast destin send dispatch content send buffer destin return immedi block nonblock receiv provid pvm receiv provid receiv buffer incom messag block receiv wait expect messag arriv time return pointer receiv buffer nonblock receiv return immedi expect messag present return pointer receiv buffer block receiv otherwis nonblock receiv return null pointer nonblock receiv call multipl time check presenc messag perform work call use work do block receiv call messag pvm implement pvm consist two part daemon process host set librari routin daemon connect use udp user process connect local daemon use tcp usual way two user process differ host commun via local daemon can howev set direct tcp connect order reduc overhead use direct connect user processor experi result better perform pvm design work set heterogen machin provid convers extern data represent xdr convers avoid machin use ident treadmark treadmark softwar dsm system built rice univers effici userlevel dsm system run commonli avail unix system use treadmark version experi treadmark interfac treadmark provid primit similar use hardwar share memori machin applic process synchron via two primit barrier mutex lock routin tmk barrieri stall call process process system arriv barrier barrier indic integ certain rang lock use control access critic section routin tmk lock acquirei acquir lock call processor routin tmk lock releasei releas it processor acquir lock anoth processor hold it integ lock index assign pro grammer share memori must alloc dynam call tmk malloc tmk sbrk syntax convent memori alloc call treadmark imper use explicit synchron data move processor processor respons synchron call see section treadmark implement treadmark use lazi invalid version releas consist rc multiplewrit protocol reduc amount commun involv implement share memori abstract virtual memori hardwar use detect access share memori rc relax memori consist model rc ordinari share memori access distinguish synchron access latter categori divid acquir releas access rc requir ordinari share memori updat processor p becom visibl anoth processor q subsequ releas p becom visibl q via chain synchron event practic model allow processor buffer multipl write share data local memori synchron point reach treadmark tmk lock acquirei model acquir tmk lock releasei model releas tmk barrieri model releas follow acquir processor perform releas barrier arriv acquir barrier departur multiplewrit protocol two processor simultan modifi copi share page modif merg next synchron oper accord definit rc therebi reduc effect fals share merg accomplish use diff diff runlength encod modif made page gener compar page copi save prior modif treadmark implement lazi invalid version rc lazi implement delay propag consist inform time acquir furthermor releas notifi acquir page modifi caus acquir invalid local copi page processor incur page fault first access invalid page get diff page previou releas implement lazi rc execut processor divid interv new interv begin everi time processor synchron interv differ processor partial order i interv singl processor total order program order ii interv processor p preced interv processor q interv q begin acquir correspond releas conclud interv p iii interv preced anoth interv transit closur partial order known hb vector timestamp use repres partial order processor execut acquir send current timestamp acquir messag previou releas piggyback respons set write notic timestamp greater timestamp acquir messag write notic describ share memori modif preced acquir accord partial order acquir processor invalid page incom write notic access fault page brought uptod fetch miss diff appli page increas timestamp order write notic without correspond diff examin usual unnecessari send diff request processor modifi page processor modifi page interv must diff interv preced it includ processor treadmark send diff request subset processor recent interv preced recent interv anoth processor lock static assign manag manag record processor recent request lock lock acquir request direct manag and necessari forward processor last request lock lock releas caus commun barrier central manag number messag sent barrier theta n gamma n number processor experiment testb testb use evalu two system node cluster hp workstat mhz parisc processor megabyt main memori machin byte page size connect mbp fddi ring treadmark user process commun use udp pvm process set direct tcp connect other sinc machin ident data convers extern data represent disabl udp tcp built top ip udp connectionless tcp connect orient tcp reliabl protocol udp ensur reliabl deliveri treadmark use lightweight operationspecif userlevel protocol top udp ensur reliabl deliveri overview port nine parallel program treadmark pvm water barneshut splash benchmark suit d fft is ep na benchmark ilink wide use genet linkag analysi program sor tsp qsort ran three nine program use two differ input set water molecul bucket size sor intern element matrix initi either zero nonzero valu execut time sequenti program without call pvm treadmark shown tabl tabl also show problem size use applic figur show speedup curv applic speedup comput rel sequenti program execut time given tabl amount data number messag sent processor execut shown tabl pvm version count number userlevel messag amount user data sent run treadmark count total number udp messag total amount data commun program problem size timesec sorzero theta iter sornonzero theta iter issmal iter islarg iter tsp citi qsort k integ water molecul iter water molecul iter barneshut bodi d fft theta theta iter tabl sequenti time applic program treadmark pvm messag kilobyt messag kilobyt sorzero sornonzero issmal islarg qsort water water barneshut tabl messag data processor treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur islarg treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur water treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur treadmark pvm nproc speedup figur ep embarrassingli parallel program come na benchmark suit ep gener pair gaussian random deviat tabul number pair success squar annuli parallel version commun sum teninteg list end program treadmark updat share list protect lock pvm processor receiv list processor sum up test solv class problem na benchmark pair random number gener result shown figur sequenti program run second treadmark pvm achiev speedup use processor compar overal execut time commun overhead neglig redblack sor redblack success overrelax sor method solv partial differenti equat parallel version program divid red black array roughli equal size band row assign band differ processor commun occur across boundari row band treadmark version array alloc share memori processor synchron use barrier pvm processor explicitli send boundari row neighbor ran redblack sor theta matrix float point number iter problem size share red black row occupi one half page first iter exclud measur elimin differ due fact data initi distribut manner pvm version treadmark done master process first test sorzero edg element initi element second test sornonzero element matrix initi nonzero valu chang valu iter result sorzero shown figur sequenti program run second processor treadmark version pvm version achiev speedup respect treadmark speedup pvm due load imbal neither pvm treadmark achiev good speedup load imbal occur floatingpoint comput involv zero take longer involv nonzero caus processor work middl part array take longer iter result sornonzero shown figur initi valu nonzero singl processor time drop second second processor speedup obtain treadmark pvm speedup compar first test improv speedup due better load balanc treadmark pvm perform rel close low commun rate sor use lazi releas consist treadmark although processor repeatedli write boundari page two barrier diff boundari page sent barrier respons diff request neighbor number messag time higher treadmark pvm n processor pvm send theta n gamma messag end iter treadmark send theta n gamma messag implement barrier theta n gamma messag page diff boundari row each boundari row requir two diff one page behavior exemplifi two perform drawback treadmark rel pvm separ synchron data transfer multipl diff request due invalid protocol result dif treadmark much less data sent sorzero treadmark pvm page remain zero integ sort is na benchmark requir rank unsort sequenc key use bucket sort parallel version divid key among processor first processor count write result privat array bucket then valu privat bucket sum up final processor read sum rank key treadmark version share array bucket processor also privat array bucket count key processor lock share array bucket add valu privat array share array releas lock wait barrier processor finish updat processor read final result share array bucket rank key pvm version processor bucket array privat memori count key processor form chain processor send local array bucket processor processor add valu local array bucket valu array bucket receiv forward result next processor etc last processor chain calcul final result broadcast it test two set input data first test issmal sort key rang iter second test islarg key rang tri key key rang suggest na benchmark extrem low computationcommun ratio suitabl workstat cluster speedup shown figur sequenti execut time issmal second processor speedup pvm treadmark respect islarg sequenti program run second pvm treadmark achiev speedup respect issmal treadmark version send time data time messag pvm version extra messag due separ synchron diff request messag sent treadmark compar pvm synchron messag diff request islarg treadmark send time messag pvm share bucket array islarg contain integ spread page therefor time share bucket array access treadmark send diff request respons pvm handl transmiss share array singl messag exchang extra data treadmark come phenomenon call diff accumul time processor acquir lock modifi share array bucket previou valu array complet overwritten current treadmark implement howev preced diff sent lock acquir even though for is complet overlap other phenomenon occur barrier everi processor read final valu share bucket time processor get diff made processor modifi share bucket array iter assum bucket size b number processor n pvm amount data sent iter theta n gamma theta b amount data sent treadmark n theta n gamma theta b although diff obtain one processor diff accumul also result messag sum diff size exce maximum size udp messag sinc treadmark mtu kilobyt extra messag due diff accumul seriou problem tsp tsp solv travel salesman problem use branch bound algorithm major data structur pool partial evalu tour prioriti queue contain pointer tour pool stack pointer unus tour element pool current shortest path evalu partial tour compos mainli two procedur get tour recurs solv subroutin get tour remov promis path prioriti queue path contain threshold number citi get tour return path otherwis extend path one node put promis path gener extens back prioriti queue call recurs subroutin get tour return either promis path longer threshold prioriti queue becom empti procedur recurs solv take path return get tour tri permut remain node recurs updat shortest tour complet tour found shorter current best tour treadmark version major data structur share subroutin get tour guard lock guarante exclus access tour pool prioriti queue tour stack updat shortest path also protect lock pvm version use masterslav arrang n processor n slave process master process word one processor run master one slave process remain processor run slave process master keep major data structur privat memori execut get tour keep track optim solut slave execut recurs solv send messag master either request solvabl tour updat shortest path solv citi problem recurs solv threshold speedup shown figur sequenti program run second processor treadmark obtain speedup speedup obtain pvm processor treadmark send time messag time data pvm perform gap come differ program style pvm version tsp tour directli solvabl recurs solv minimum tour exchang slave master messag exchang take messag contrast treadmark major data structur migrat among processor get tour take least page fault obtain tour pool prioriti queue tour stack amount data diff accumul averag processor get n gamma diff page fault n number processor system furthermor content lock protect get tour averag processor process spend second wait lock acquir qsort qsort quicksort algorithm use partit unsort list sublist sublist suffici small integ sort use bubblesort qsort parallel use work queue contain descript unsort sublist worker thread continu remov list treadmark version qsort list work queue share access work queue protect lock unlik tsp qsort processor releas task queue without subdivid subarray remov queue subarray divid processor reacquir control task queue place newli gener subarray back task queue pvm version use masterslav arrang similar tsp n slave master n number processor master maintain work queue slave perform partit sort experi array size k bubblesort threshold speedup shown figur sequenti program run second processor speedup use treadmark pvm respect sever factor contribut differ perform import reason diff request treadmark processor treadmark send time messag pvm among messag sent treadmark messag sent due diff request diff transmiss sinc bubblesort threshold intermedi subarray larger one page result multipl diff request subarray addit fals share diff accumul also occur case intermedi subarray work queue migrat among process water water splash benchmark suit molecular dynam simul main data structur water onedimension array record record repres molecul contain molecul center mass atom comput forc displac first six deriv time step intra intermolecular potenti comput avoid comput n pairwis interact among molecul spheric cutoff rang appli parallel algorithm static divid array molecul equal contigu chunk assign chunk processor bulk interprocessor commun happen forc comput phase processor comput updat intermolecular forc molecul n molecul follow array wraparound fashion treadmark version water program origin splash suit tune get better perform center mass displac forc molecul alloc share memori variabl molecul record alloc privat memori lock associ processor addit processor maintain privat copi forc forc comput phase chang forc accumul local order reduc commun share forc updat processor finish phase processor updat privat copi forc molecul belong processor j acquir lock j add contribut forc molecul own processor j pvm version processor exchang displac forc comput commun occur pairwis intermolecular forc comput time processor commun local accumul modif forc use two data set size molecul molecul ran time step result shown figur sequenti execut time molecul simul second processor speedup treadmark pvm respect molecul sequenti program run second treadmark pvm achiev speedup processor respect low computationcommun ratio separ synchron data commun fals share major reason gap perform molecul pvm two userlevel messag sent pair processor interact other one messag read displac messag write forc treadmark extra messag sent synchron diff request read displac write share forc barrier termin phase share forc updat processor may fault read final forc valu molecul last processor updat valu fals share fals share caus processor bring updat molecul access may result commun one processor molecul page updat two differ processor processor fals share occur page molecul array consequ treadmark send messag compar messag pvm fals share also caus treadmark version send unnecessari data anoth caus addit data sent treadmark diff accumul assum n processor n even molecul belong processor modifi n processor protect lock averag processor get n diff sinc molecul modifi processor case diff complet overlap ad fals share diff accumul processor treadmark send time data pvm increas computationcommun ratio reduc fals share caus treadmark perform significantli better molecul treadmark send time data pvm compar time molecul barneshut barneshut splash benchmark suit nbodi simul use hierarch barneshut method treestructur hierarch represent physic space use leaf tree repres bodi intern node tree repres cell collect bodi close physic proxim major data structur two array one repres bodi repres cell sequenti algorithm loop bodi bodi travers tree comput forc act it parallel code four major phase time step construct barneshut tree get bodi partit bodi among processor forc comput comput forc bodi updat updat posit veloc bodi phase execut sequenti run parallel slow execut phase dynam load balanc achiev use costzon method processor walk barneshut tree collect set logic consecut leav comput time spent phase treadmark version array bodi share cell privat maketre processor read share valu bodi build intern node tree privat memori barrier maketre forc comput updat phase synchron necessari forc comput phase barrier end forc comput phase ensur processor finish read posit processor pvm version everi processor broadcast bodi end iter processor obtain bodi creat complet tree phase commun requir ran barneshut bodi timestep last iter time order exclud cold start effect figur show speedup sequenti program run second processor pvm treadmark achiev speedup respect low comput commun ratio need finegrain commun contribut poor speedup treadmark pvm pvm network satur processor everi processor tri broadcast time diff request fals share major reason treadmark lower perform processor treadmark send data time messag pvm although set bodi own processor adjac barneshut tree adjac memori fals share maketre page fault caus processor send diff request sever processor reason forc comput processor may fault access bodi bring unwant data d fft d fft na benchmark suit numer solv partial differenti equat use three dimension forward invers fft assum input array n theta n theta n organ rowmajor order d fft first perform n point d fft n theta n complex vector perform n point d fft n theta n vector next result array transpos n point d fft appli n theta n complex vector distribut comput array element along first dimens a i element complex matrix ijk assign singl processor commun need first two phase n point fft n point fft comput singl processor processor commun transpos processor access differ set element afterward treadmark version barrier call transpos pvm version messag sent explicitli send messag must figur part array goe to part b array need come from index calcul dimension array much errorpron simpli swap indic treadmark make pvm version harder write result obtain run theta theta array doubl precis complex number iter exclud time distribut initi valu begin program matrix size specifi class problem na benchmark scale problem limit swap space machin avail us speedup curv shown figur sequenti execut time second speedup obtain treadmark processor speedup obtain pvm releas consist treadmark send almost amount data pvm except processor execut howev pagebas invalid protocol mani messag sent treadmark pvm processor megabyt data commun transpos page size byte transpos therefor requir diff request respons anomali occur processor attribut fals share matrix size multipl page modifi one processor read two processor although two processor read disjoint part page diff sent them result treadmark messag data sent processor processor ilink ilink wide use genet linkag analysi program locat specif diseas gene chro mosom input ilink consist sever famili tree program travers famili tree visit nuclear famili main data structur ilink pool genarray genarray contain probabl genotyp individu sinc genarray spars index array pointer nonzero valu genarray associ one them bank genarray larg enough accommod biggest nuclear famili alloc begin program bank reus nuclear famili comput move new nuclear famili pool genarray reiniti person current famili comput either updat parent genarray condit spous children updat one child condit parent sibl use parallel algorithm describ dwarkada et al updat individu genarray parallel master processor assign nonzero element parent genarray processor round robin fashion processor work share nonzero valu updat genarray accordingli master processor sum contribut processor treadmark version bank genarray share among processor barrier use synchron pvm version processor local copi genarray messag pass explicitli master slave begin end nuclear famili updat sinc genarray spars nonzero element sent dif mechan treadmark automat achiev effect sinc nonzero element modifi nuclear famili updat diff transmit master contain nonzero element use clp data set allel product theta theta theta result shown figur sequenti program run second processor treadmark achiev speedup obtain pvm high computationtocommun ratio lead good speedup also explain fact pvm treadmark close perform howev abl identifi three reason lower perform treadmark first version send nonzero element pvm perform transmiss singl messag treadmark send diff request respons page genarray clp data set size genarray page second fals share occur treadmark nonzero valu parent genarray assign processor round robin fashion pvm parent genarray distribut processor get part genarray treadmark processor get nonzero element page includ belong processor third final reason differ perform diff accumul bank genarray reiniti begin comput nuclear famili although processor need newli initi data treadmark also send diff creat previou comput summari experi pvm treadmark conclud easier program use treadmark use pvm although littl differ programm simpl program program complic commun pattern ilink d fft take lot effort figur send send to result show use releas consist multiplewrit protocol treadmark perform compar pvm varieti problem experiment environ examin result corrobor perform similar experi compar munin dsm system messag pass v system five twelv experi treadmark perform within pvm remain experi barneshut lesser extent islarg exhibit poor perform pvm treadmark data set use applic low computationtocommun ratio network workstat remain five experi perform differ separ synchron data transfer requestrespons natur data commun treadmark respons lower perform treadmark program pvm data commun synchron integr togeth send receiv oper exchang data also regul progress processor treadmark synchron locksbarri commun data moreov data movement trigger expens page fault diff request sent order get modif addit pvm benefit abil aggreg scatter data singl messag access pattern would result sever miss messag invalidatebas treadmark protocol although multiplewrit protocol address problem simultan write page fals share still affect perform treadmark multipl processor may write disjoint part page without interf other processor read data written one writer synchron point diff request sent writer caus extra messag data sent current implement treadmark diff accumul occur result sever processor modifi data common pattern migratori data diff accumul seriou problem diff size small sever diff sent one messag conclus paper present two contribut first result show that larg varieti program perform well optim dsm system compar messag pass system especi problem practic size ilink water simul molecul treadmark perform within pvm term programm experi indic easier program use treadmark use pvm although littl differ programm simpl program program complic commun pattern ilink d fft lot effort requir determin data send send data to second observ four main caus lower perform treadmark compar pvm separ synchron data transfer treadmark addit messag send diff request invalidatebas treadmark protocol fals share final diff accumul migratori data current integr compil analysi dsm runtim system allevi problem compil determin futur data access prefetch reduc cost page fault diff request furthermor case data movement piggyback synchron messag overcom separ synchron data movement addit compil place data way minim fals share overhead acknowledg would like thank rand hoven hewlettpackard stephen pool perform group give us access workstat cluster use experi describ would also like thank nenad nedelkov edmar wienskoski particip earli version project r weak order new definit na parallel benchmark share memori parallel program entri consist distribut memori multiprocessor techniqu reduc consistencyrel inform distribut share memori system implement perform munin distribut v kernel perform diskless work station memori consist event order scalabl sharedmemori multiprocessor portabl tool applic parallel comput lazi releas consist softwar distribut share memori treadmark distribut share memori standard workstat oper system strategi multilocu linkag analysi human memori coher share virtual memori system messag pass interfac forum express user guid implic hierarch nbodi method multiprocessor architectur splash stanford parallel applic sharedmemori tr memori coher share virtual memori system implement perform munin networkbas concurr comput pvm system lazi releas consist softwar distribut share memori implic hierarch nbodi method multiprocessor architectur techniqu reduc consistencyrel commun distribut sharedmemori system weak orderingmyampersandmdasha new definit memori consist event order scalabl sharedmemori multiprocessor distribut v kernel perform diskless workstat ctr mordechai geva yair wiseman common framework interprocess commun cluster acm sigop oper system review v n p octob michael kistler lorenzo alvisi improv perform softwar distribut share memori specul ieee transact parallel distribut system v n p septemb yichang zhuang tyng yue liang cekuen shieh junqi lee laurenc tianruo yang groupbas load balanc scheme softwar distribut share memori system journal supercomput v n p june jerri a clark emul share memori simplifi distributedmemori program ieee comput scienc engin v n p januari fengguang song shirley moor jack dongarra feedbackdirect thread schedul memori consider proceed th intern symposium high perform distribut comput june monterey california usa mark w macbeth keith a mcguigan philip j hatcher execut java thread parallel distributedmemori environ proceed confer centr advanc studi collabor research p novemb decemb toronto ontario canada david aldabass evtim peytchev moham khalil manl ren scalabl issu urban traffic system proceed st intern confer scalabl inform system pe may june hong kong benghong lim chichao chang grzegorz czajkowski thorsten von eicken perform implic commun mechan allsoftwar global address space system acm sigplan notic v n p juli harjind sandhu tim brecht diego moscoso multiplewrit entri consist cluster comput nova scienc publish inc commack ny honghui lu alan l cox sandhya dwarkada ramakrishnan rajamoni willi zwaenepoel compil softwar distribut share memori support irregular applic acm sigplan notic v n p juli n p manoj k v manjunath r govindarajan casdsm compil assist softwar distribut share memori intern journal parallel program v n p april martin schulz jie tao carsten triniti wolfgang karl smile integr multiparadigm softwar infrastructur scibas cluster futur gener comput system v n p may sandhya dwarkada alan l cox willi zwaenepoel integr compiletimeruntim softwar distribut share memori system acm sigplan notic v n p sept karthik balasubramanian david k lowenth effici support pipelin softwar distribut share memori system realtim system secur nova scienc publish inc commack ny henri e bal raoul bhoedjang rutger hofman ceriel jacob koen langendoen tim rhl m fran kaashoek perform evalu orca sharedobject system acm transact comput system toc v n p feb