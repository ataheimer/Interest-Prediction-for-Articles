t multipl dispatch dispatch tupl a mani popular objectori program languag c smalltalk java eiffel support multipl dispatch yet without multipl dispatch programm find difficult express binari method design pattern visitor pattern describ new simpl orthogon way add multimethod singledispatch objectori languag without affect exist code new mechan also clarifi mani differ singl multipl dispatch b introduct singl dispatch found c stroustrup java arnold gosl gosl et al smalltalk goldberg robson eiffel meyer meyer select method use dynam class one object messag receiv multipl dispatch found clo chapter steel paepck dylan shalit feinberg et al cecil chamber chamber gener idea select method base dynam class subset messag argument multipl dispatch mani way express flexibl singl dispatch objectori oo program bobrow et al chamber castagna moon paper propos new simpl orthogon way ad multipl dispatch exist languag singl dispatch idea add tupl primit express allow messag sent tupl select method base dynam class element tupl give multipl dispatch illustr idea design simpl classbas oo languag call tupl perhap eleg languag built directli multipl dispatch claim follow advantag mechan ad exist singl dispatch languag c java without affect either a semant b type exist program written languag retain encapsul mechan singl dispatch languag simpl enough easili understood rememb believ programm familiar standard singl dispatch uniform previou approach incorpor multipl dispatch within singl dispatch framework argu first two claim present semant languag two layer first layer small classbas singledispatch languag sdcore interest itself second layer tupl proper includ sdcore add multipl dispatch allow messag sent tupl support third claim simplic mechan itself if even now think idea send messag tupl clearli equival multipl dispatch agre support fourth claim argu mechan advantag other solv problem incorpor multipl dispatch exist singledispatch languag rest paper organ follow section describ singledispatch core tupl need show mechan ad languag section describ addit singl dispatch core make mechan support first three claim section support fourth claim comparison relat work section offer appear oopsla confer proceed confer objectori program system applic vancouv british columbia canada octob pp apolog bruce et al whose toopl languag bruce et al pronounc way conclus appendix give concret syntax tupl appendix b give languag formal type rule section introduc syntax semant sdcore exampl syntax semant singledispatch core tupl classbas languag similar spirit convent oo languag like c java integ boolean valu along standard oper valu built languag figur illustr sdcore wellknown pointcolorpoint exampl point class contain two field repres x coordin respect point instanc contain valu field suppli instanc creat exampl express new point return fresh point instanc xval yval set respect point class also contain method retriev valu two field calcul distanc point line we assum line class defin elsewher eas present sdcore encapsul model extrem simpl instanc field access method instanc receiv argument instanc may contain inherit field rule allow access directli similar protect notion c java colorpoint class simpl subclass point class augment definit colorv field method retriev color we assum class color defin elsewher colorpoint class inherit point classs field method creat instanc subclass one give initi valu inherit field first field declar subclass exampl one would write new colorpointr usual subclass also overrid inherit method simplifi languag sdcore singl inherit howev multipl inherit caus problem respect new idea advoc use standard syntax messag send exampl p instanc point subclass express pdistancefromln invok instanc distancefrom method argument ln within method bodi keyword self refer receiv messag case p dynam dispatch use determin method invok particular receiv class first check method implement right name number argument method exist classs immedi superclass check inherit hierarchi valid implement found or none found messagenotunderstood error occur simplic eas theoret analysi includ assign mutat sdcore again could easili ad type check sdcore overview static type system sdcore includ complet detail see appendix b intend complet standard eas present sdcore type system simpler found realist languag peripher contribut four kind type attribut type int bool type builtin integ boolean valu respect function type t t n t n type function accept input n argument valu type respect return result type n class type cn cn class name type instanc class cn type relat simpl subtyp relat type int bool subtyp themselv ordinari contravari subtyp rule use function type cardelli class type cn subtyp anoth class type cn class cn subclass class cn ensur safeti rule type system check that everi method name class cn ms type cn supertyp ms type cn class meet check flag error thu everi subclass pass type checker implement subtyp superclass static check messag send expressionof form check static type e subtyp class type cn whose associ class contain method type t t n t n type express subtyp t n class point field xvalint yvalint method xint xval method yint yval method distancefromllineint class colorpoint inherit point field colorvalcolor method colorcolor colorv figur class point colorpoint unlik c java sdcore allow static overload method name howev sinc add multipl dispatch sdcore separ mechan sinc dynam dispatch seen dynam overload littl reason so respect case e exampl pdistancefromln type int assum p type point ln type line problem singl dispatch singl dispatch easili support program idiom bestknown problem sort binari method problem bruce et al exampl consid ad equal test point colorpoint class follow for simplic sdcore includ super would allow colorpoint equal method call point equal method class point method equalppointbool class colorpoint inherit point method equalpcolorpointbool type error sdcore wellknown make imposs colorpoint consid subtyp point cook et al word colorpoint instanc cannot safe use wherev point expect polymorph point hierarchi lost for reason exampl illtyp sdcore problem semant fault sdcore type system stem asymmetri treatment two point instanc test equal particular one instanc messag receiv therebi dynam dispatch upon ordinari argument messag play role method select castagna multipl dispatch avoid asymmetri dynam dispatch base runtim class argument gener problem visitor design pattern page gamma et al pattern consist hierarchi class typic repres element structur order defin new oper element without modifi element class separ hierarchi visitor creat one per oper code invok visit occur depend visitor element use multimethod easili express requir semant section baumgartn et al singlydispatch implement must reli unwieldi simul multipl dispatch sdcore tupl extend sdcore tupl express tupl class tupl type abil declar send messag tupl give multipl dispatch noth semant type sdcore chang extens syntax semant tupl express creat tupl size n compon v v n v valu correspond figur show one would solv pointcolorpoint problem tupl rather defin equal method within point colorpoint class creat two new tupl class method first tupl class tupl two point instanc receiv name p p use within method tupl class refer tupl compon howev tupl class client code privileg access field compon second tupl class similar defin equal tupl two colorpoint instanc we assum tupl class tupl color color equal method one tupl class given tupl class sinc chang made point colorpoint class ad equal method tupl class subtyp relationship colorpoint point unchang is ad equal method tupl class instead origin class figur colorpoint remain safe subtyp point syntax send messag tupl analog send messag instanc exampl ppequal send messag equal tupl pp invok one two ml milner et al allow tupl length one prevent ambigu syntax semant exampl express xgi interpret messag sent instanc tupl tupl either zero two element allow builtin type int boolean appear compon tupl class well conceptu one think correspond builtin class int boolean nontrivi subclass superclass tupl class ppoint ppoint method equalbool tupl class cpcolorpoint method equalbool cpcolor figur two tupl class hold method test equal point equal method method lookup sdcore reli dynam class receiv method lookup tupl reli dynam class tupl compon therefor appropri equal method select either point point colorpoint tupl class base dynam class p p particular method colorpoint colorpoint tupl class invok argument colorpoint instanc runtim use dynam class distinguish multipl dispatch static overload as found exampl ada ada semant send messag tupl multipl dispatch similar cecil chamber consid express valu v c di minim dynam class v method tupl class c c n applic express method name i in dynam class c di subclass c method take mn addit argument the class addit argument involv determin applic number matter among applic method from variou tupl class uniqu mostspecif method chosen method tupl class c c n specif method tupl class c c n in c i subclass c i the argument method involv determin specif applic method exist messagenotunderstood error occur applic method most specif one messageambigu error occur algorithm effici implement multipl dispatch exist see eg kiczal rodriguez semant immedi justifi part a claim orthogon multipl dispatch mechan sdcore express cannot send messag tupl furthermor semant messag send two case one send messag instanc one send messag tupl henc mean express sdcore unaffect presenc multipl dispatch semant tupl class also justifi second claim is sinc tupl class special privileg access field compon instanc encapsul properti class unaffect howev properti tupl like multimethod languag solv privileg access aspect binari method problem bruce et al may mechan c friendship grant would solv practic avoid give method tupl class default privileg access field instanc tupl would violat inform hide particular client could access field instanc class c simpli creat tupl class c compon multipl dispatch binari method multimethod use mani common situat binari method chamber baumgart et al particular time piec code invok depend one argument messag multimethod easili provid desir semant exampl suppos one want print point output devic consid class output three subclass termin ordinari printer colorprint assum colorprint subclass printer print point termin requir differ code print point either kind printer addit color print requir differ code blackandwhit print figur show situat program tupl exampl binari method problem particular addit print method point colorpoint class upset fact colorpoint subtyp point problem need invok appropri method base whether first argument point colorpoint whether second argument termin printer colorprint singlydispatch languag unnatur workaround ingallss doubl dispatch techniqu ingal bruce et al requir encod desir behavior tupl vs class abil express multipl dispatch via dispatch tupl easi simul singledispatch languag wellknown bruce et al ingal doubledispatch techniqu mention faith simul often requir exponenti in size method multimethodbas solut second attempt simul multipl dispatch singl dispatch languag base product class section tupl class ppoint outtermin method print print point termin tupl class ppoint outprint method print print point printer tupl class cpcolorpoint outcolorprint method print print colorpoint printer color figur multimethod tupl class print unit tupl type like cs void type bruce et al simul faith lose dynam dispatch howev instruct look simul fail sinc reveal essenti capabl tupl add sdcore consid follow class sdcore adapt bruce et al paper class twopoint fieldsppoint ppoint method class twocolorpoint fieldscpcolorpoint cpcolorpoint method new twocolor cpcolor class one could creat instanc simul tupl via new express sdcore exampl instanc simul tupl contain two point instanc creat express new twopointsmy_pmy_p howev lose dynam dispatch problem new express requir name associ class given static particular follow messag send express execut new twopointsmy_pmy_pequ method class twopoint alway invok even my_p my_p denot colorpoint instanc runtim contrast tupl express static determin tupl class applic messag sent tupl use dynam class valu tupl instead static class express use construct tupl exampl even static class my_p my_p point my_p my_p denot colorpoint instanc messag send express my_pmy_pequ invok method tupl class colorpoint colorpoint given figur henc send messag tupl static overload dynam overload precis multipl dispatch cours one also simul multipl dispatch use variant typecas statement determin dynam type argument dispatch appropri for exampl java one use getclass method provid class object howev write code hand errorpron automat dispatch languag dispatch code also need duplic method requir multipl dispatch caus code mainten problem everi time new class enter system dispatch code need appropri rewritten place tupl exist code need modifi problem aris intent dispatch code to dispatch clear mainten programm contrast write tupl class clear multipl dispatch desir semant tupl ensur dispatch handl consist static type system ensur dispatch complet unambigu type check tupl add type attribut sdcore product type type tupl contain element type t n product type t t n subtyp t t n subtyp multipl dispatch involv type check messag sent tupl bit complex check messag sent instanc see appendix b formal type rule divid addit sdcore type system clientsid implementationsid rule chamber leaven clientsid rule check messag sent tupl implementationsid rule check tupl class declar method aim rule ensur static runtim type mismatch occur messagenotunderstood messageambigu error occur execut messag sent tupl clientsid rule analog method applic rule ordinari class describ abov particular given applic tupl class product type t t n static type further tupl class must contain method implement name mn addit argument static type e subtyp method addit argument type rule explicitli check exist appropri method implement elimin possibl messag notunderstood error howev gener multipl dispatch easili caus methodlookup ambigu exampl consid pointcolorpoint exampl section suppos that rather defin equal tupl class pointpoint colorpointcolorpoint defin equal instead tupl class pointcolorpoint colorpointpoint accord clientsid rule abov equal messag sent two colorpoint express legal sinc exist tupl class right type contain appropri method implement problem exist two tupl class neither specif other therefor runtim method invoc caus methodambigu error occur solut base prior work type check multimethod castagna et al castagna pair tupl class method name accept k addit argument check two condit first check ensur monoton castagna et al castagna goguen mesegu reynold let u type method name tupl class respect suppos t t n subtyp must subtyp u contravari rule function type mean j j must subtyp j u must subtyp u second check ensur two method ambigu defin two type relat either subtyp vice versa case minst denot one subtyp other must case t t n t t n tupl further j j j relat must tupl class mint t mint n t n method name k addit argument exist method necessari suffici disambigu two method check type rule tupl class messag send tupl valid part b first claim is tupl extens sdcore type system orthogon type rule tupl superset type rule sdcore henc sdcore program express type t also type tupl tupl chose bynam type disciplin wherebi onetoon correspond class type unif class type subclass subtyp allow simpl static type system also reflect common practic popular objectori languag inde approach variant use c java java interfac allow form separ type class although type system simplist addit multimethod languag greatli increas express allow safe covari overrid preserv equival subclass subtyp sever way could design type system exampl pure structur subtyp paradigm could use class assign record type base type method anoth possibl would maintain bynam type keep type associ subtyp relat complet orthogon class inherit mechan approach taken cecil chamber rule design sake clariti simplic anoth design choic whether dispatch class type tupl choic aris strong correl class type particular tupl dispatch semant view equival dispatch class type howev two altern design present abov dispatch semant could design either way although option feasibl conceptu simpler dispatch class nice gener singledispatch semant keep dynam semant languag complet independ static type system name tupl formal tupl class are sens gener self tupl also allow simpl form pattern match found function languag ml milner et al tupl formal bound element tupl allow tupl like ml includ tupl valu without need build languag primit oper extract compon tupl interest specul advantag might obtain ad algebra datatyp extens patternmatch featur objectori languag see also bourdoncl merz ernst et al section discuss two kind relat work first concern genericfunct languag solv problem address paper use languag way obtain multipl dispatch second closelyrel work address problem do add support multipl dispatch languag singl dispatch inspir idea work techniqu avoid binari method use product class describ bruce et al section bruce et al discuss detail section abov anoth sourc inspir work castagna paper covari contravari castagna make clear key idea covari use argument involv method lookup contravari argument involv lookup tupl two set argument cleanli separ sinc tupl class argument tupl use method lookup addit argument use method lookup covari contravari condit reflect type rule tupl monoton condit genericfunct languag approach provid subset express clo dylan cecil multimethod base gener function method tupl class allow gener function method dynam dispatch differ subset argument is tupl argument may dynam dispatch upon must decid advanc sinc distinct made client code send messag tupl clo dylan cecil inform visibl client hand tupl programm hide inform alway includ argument part tupl tupl class thi suggest use syntact sugar tupl might use fe e n sugar least second gener function languag uniform sinc one dispatch mechan treat singl dispatch degener case multipl dispatch rather differenti them although believ advantag make closstyl multimethod better design new languag approach illustr tupl key advantag adapt exist singlydispatch languag multimethod first design use languag like c java simpli ad tupl express tupl type tupl class abil send messag tupl shown exist code need modifi execut type check befor contrast gener function model caus major shift way program structur second model maintain classbas encapsul keep semant object selfinterpret record gener function model give must base encapsul scope construct packag chapter steel local declar chamber leaven encapsul parasit multimethod encapsul multimethod section bruce et al section castagna similar spirit work attempt integr multimethod exist singlydispatch languag follow exampl use techniqu program equal test point extens sdcore class point method equalppointbool class colorpoint inherit point method equalppointbool method equalpcolorpointbool encapsul multimethod messag send result two dispatch in gener first usual dispatch class receiv instanc messag cannot sent tupl dispatch follow second multimethod dispatch select multimethod within class found first dispatch exampl abov messag pequalp first find dynam class object denot p p denot colorpoint second multimethod dispatch use select two multimethod equal class colorpoint essenc first dispatch select gener function form multimethod class receiv second dispatch usual gener function dispatch remain argument messag one seem advantag encapsul multimethod access privat data receiv object wherea tupl method tupl class privileg access element tupl languag like c java privat data instanc class access method class privileg access use binari method howev advantag illusori multimethod gener special access grant privat data class receiv mean access must provid client form accessor method mechan c friendship grant must provid access argument privat data two problem encapsul multimethod aris multimethod dispatch preced standard dispatch class first problem common need duplic method use stub method simpli forward messag appropri method exampl sinc colorpoint overrid equal gener function point must duplic equal method declar within point class observ bruce et al paper akin ingal techniqu multipl polymorph ingal parasit multimethod boyland castagna variant encapsul multimethod remov disadvantag allow parasit method inherit second problem caus two dispatch exist class sometim need modifi new ad system exampl order program special behavior equal method accept one point one colorpoint in order necessari modifi point class ad new encapsul multimethod kind chang exist code need tupl programm simpli creat new tupl class inde tupl even allow one tupl class tupl compon class allow new multimethod dispatch tupl exist multimethod enter system without requir modif exist code encapsul parasit multimethod advantag term modular genericfunct languag tupl modular problem genericfunct languag note cook cook independentlydevelop program modul free possibl messageambigu error may caus messageambigu error runtim exampl consid defin method equal three modul modul defin tupl class point point modul b tupl class point colorpoint modul c tupl class colorpoint point caus possibl messag ambigu error program use either b c type check howev program includ three modul may messageambigu error sinc messag sent tupl two colorpoint instanc abl find uniqu mostspecif method therefor linktim check necessari ensur type safeti research underway resolv problem gener function languag chamber leaven would also resolv tupl howev date complet satisfactori solut emerg design choic encapsul parasit multimethod larg motiv goal avoid loss modular encapsul multimethod suffer problem essenti defin gener function within class class must overrid gener function whole howev caus duplic describ abov parasit multimethod problem use textual order within class resolv ambigu inherit order howev order hard understand reason about particular singl mostspecif parasit function call control call get pass among applic parasit manner depend specif textual order parasit determin parasit pingpong control termin difficult boyland castagna also say that compar textual order method specif tupl is intuit clear page boyland castagna final note textual order caus small runtim penalti dispatch sinc dispatch take linear instead logarithm time averag key contribut work describ simpl orthogon way add multipl dispatch exist singledispatch languag show introduct tupl tupl type tupl class declar multimethod abil send messag tupl orthogon base languag true execut type tupl class allow programm group sever multimethod togeth send tupl messag use multimethod dispatch rule sinc exist code singledispatch languag cannot send messag tupl execut unaffect new capabl henc mechan provid extra layer superimpos top singlydispatch core design decis core affect role function tupl tupl class tupl also compar well relat attempt add multipl dispatch singlydispatch languag shown tupl uniform dispatch semant avoid sever problem approach notabl need plan ahead multimethod forc modifi exist code new class enter system hand uniform also caus tupl suffer modular problem genericfunct languag current preclud import softwar engin benefit separ type check tupl languag simpli vehicl illustr idea multipl dispatch via dispatch tupl although would complic theoret analysi mechan c java could use singli dispatch core languag acknowledg thank john boyland discuss clarif parasit multimethod thank anonym refere help comment thank olga antropova john boyland giusepp castagna sevtap karakoy clyde rubi r c sekar comment earlier draft thank craig chamber mani discuss multimethod thank olga antropova syntact sugar idea mention section thank vassili litvinov point us baumgartn et al craig kaplan idea exampl leavenss work support part nsf grant ccr ccr r american nation standard institut subtyp recurs type java program languag interact objectori design pattern program languag merg lisp objectori program type check higherord polymorph multi method parasit method implement multimethod java safe decid type check objectori languag hopkin object group semant multipl inherit calculu overload function subtyp covari contravari conflict without caus cecil languag specif rational version typecheck modul multimethod bececil core objectori languag block structur multimethod semant type inherit subtyp predic dispatch unifi theori dispatch dylan program book design pattern element reusabl objectori softwar steeleauthor authorguy lauthor steel java languag specif simpl techniqu handl multipl polymorph rodriguez jr languag definit standard ml use categori theori design implicit convers gener oper structur type program languag dylan refer manual definit guid new objectori dynam languag steel jr tr smalltalk languag implement objectori program flavor commonloop merg lisp objectori program simpl techniqu handl multipl polymorph semant multipl inherit definit standard ml common lisp languag nd ed inherit subtyp c program languag nd ed eiffel languag calculu overload function subtyp subtyp recurs type safe decid type check objectori languag objectori program effici method dispatch pcl structur type program languag design pattern covari contravari typecheck modul multimethod binari method dylan refer manual objectori program objectori softwar construct nd ed parasit method type check higherord polymorph multimethod java program languag nd ed java languag specif objectori multimethod cecil dispatch use categori theori design implicit convers gener oper objectori program versu abstract data type ctr rajeev kumar vikram agraw multipl dispatch reflect runtim environ comput languag system structur v n p juli timmi dougla make gener function useabl smalltalk proceed th annual southeast region confer march winstonsalem north carolina ran rinat typesaf convari special gener match inform comput v n p august curti clifton gari t leaven craig chamber todd millstein multijava modular open class symmetr multipl dispatch java acm sigplan notic v n p oct todd millstein mark reay craig chamber relax multijava balanc extens modular typecheck acm sigplan notic v n novemb antonio cunei jan vitek polyd flexibl dispatch framework acm sigplan notic v n octob paolo ferragina s muthukrishnan mark de berg multimethod dispatch geometr approach applic string match problem proceed thirtyfirst annual acm symposium theori comput p may atlanta georgia unit state curti clifton todd millstein gari t leaven craig chamber multijava design rational compil implement applic acm transact program languag system topla v n p may yuri leontiev m tamer zsu duan szafron type system objectori databas program languag acm comput survey csur v n p decemb