t new faster filter multipl approxim string match a present three new algorithm onlin multipl string match allow error extens previou algorithm search singl pattern averag run time achiev case linear text size moder error level pattern length number pattern adapt with higher cost case howev algorithm differ speed threshold use theoret analyz algorithm use show perform experiment previou solut problem allow one error algorithm first allow error faster previou work moder number pattern eg less english text depend pattern length b introduct approxim string match one main problem classic string algorithm applic text search comput biolog pattern recognit etc given text n length n pattern p m length both sequenc alphabet sigma size oe maxim number error allow m want find text posit pattern match text k error error substitut delet insert charact use term error level refer paper interest onlin problem ie text known advanc classic solut singl pattern base dynam program run time omn recent year sever algorithm improv classic one improv worst averag case use properti dynam program matrix other filter text quickli elimin uninterest part sublinear averag moder ff ie inspect text charact yet approach use bitparallel comput word w bit reduc number oper problem approxim search set r pattern ie occurr anyon them consid recent problem mani applic instanc work support part fondecyt grant ffl spell mani incorrect word search dictionari time order find like variant moreov may even search dictionari correct word text misspel word hope much less cost ffl inform retriev synonym thesauru expans done keyword text errorpron may want search variant allow error batch queri system receiv number queri process may improv effici search singl pass ffl singlepattern queri algorithm singl pattern allow error eg pattern partit reduc problem search mani subpattern allow less error benefit multipattern search algorithm trivial solut multipattern search problem perform r search far know previou attempt improv trivial solut due muth manber use hash search mani pattern one error effici even one thousand pattern work present three new algorithm extens previou one case multipl search section explain basic concept necessari understand algorithm present three new techniqu section present automaton extend bitparallel simul nondeterminist finit automaton section present exact partit extend filter base exact search pattern piec section present count base count pattern letter text window section analyz algorithm section compar experiment final section give conclus detail analys left appendic b although allow search mani pattern limit one error first algorithm multipattern match allow one error moreov even one error improv number pattern larg say less english text depend pattern length multipattern extens improv sequenti counterpart ie one separ search per pattern use base algorithm error level high about ff english text filter base exact search fastest small error level bitparallel simul nfa adapt better error rel short pattern previou partial preliminari version work appear basic concept review section basic concept use algorithm follow paper denot ith charact string be first charact ij stand substr i s j particular ffl empti string filter techiqu multipattern search algorithm consid work base concept filter therefor use defin here filter base fact normal easier tell text posit match ensur match therefor filter fast algorithm check simpl necessari though suffici condit approxim match occur text area satisfi necessari condit safe discard expens algorithm run text area pass filter sinc filter much faster approxim search algorithm filter algorithm competit in fact domin larg rang paramet perform filter algorithm howev sensit error level ff filter work well low error level bad error relat amount text filter abl discard evalu filter algorithm import consid time effici also toler error term normal use refer filter sublinear said filter sublinear inspect charact text like boyermoor algorithm exact search best onm throughout work make use two follow lemma deriv filter condit k error concaten subpattern substr match least one p s bkjc error proof otherwis best match p insid least bkjc error occurr p involv occurr p s total number error occurr least sum error piec here sum error piec error therefor complet match possibl notic even consid match p must proper order disjoint delet may need connect them gener one filter search pattern length k error search j subpattern length mj kj error text area surround occurr piec must check complet match import particular case lemma aris one consid sinc case pattern piec appear unalt zero error lemma j edt ij p k j gammamj includ least gamma k charact p proof suppos opposit observ less charact p ij henc k charact must delet p match text observ k charact ij p henc must insert k charact p match text contradict case note case repeat charact pattern must count differ occurr exampl search aaaa one error text last four letter occurr must includ least three as simplif say essenti design filter approxim search base find enough charact pattern text window without regard order instanc pattern survey cannot appear one error text window surger five letter pattern text howev filter cannot discard possibl pattern appear text window yevru bitparallel bitparallel techniqu common use string match first propos techniqu consist take advantag intrins parallel bit oper insid comput word use cleverli fact number oper algorithm perform cut factor w w number bit comput word sinc current architectur w speedup signific practic and improv technolog progress order relat behavior bitparallel algorithm work normal assum dictat ram model comput prefer howev keep w independ valu notat use bitparallel algorithm order denot b b bit mask length store somewher insid comput word use clike syntax oper bit comput word eg j bitwiseor move bit left enter zero right eg b b also perform arithmet oper bit addit subtract oper bit form number instanc b b x explain first bitparallel algorithm sinc basi much follow work algorithm search pattern text without error parallel oper nondeterminist finit automaton look pattern figur illustr automaton l h figur nondeterminist automaton search aloha exactli automaton m state simul nondeterminist form omn time shiftor algorithm achiev omnw worstcas time ie optim speedup notic convert nondeterminist automaton determinist one on search time get improv version kmp algorithm howev kmp twice slow algorithm first build tabl b charact c store bit mask mask bc bit b zero p c state search kept machin word match end text read ie state number figur activ therefor match report whenev dm zero set one origin new text charact j updat use formula formula correct ith bit zero i gamma th bit zero previou text charact new text charact match pattern posit i word j possibl relat formula movement occur nondeterminist automaton new text charact state get valu previou state happen text charact match correspond arrow pattern longer comput word ie w algorithm use dmwe comput word simul not activ time algorithm omnw worst case time preprocess om averag algorithm on even w sinc first o state automaton activ state averag and henc first o comput word need updat averag easi extend shiftor handl class charact extens posit pattern match set charact rather singl charact classic string match algorithm easili extend shiftor enough set ith bit bc everi c p p set now instanc search survey caseinsensit form set first bit bs bs match zero rest shiftor also search multipl pattern where complex omnw consid total length pattern arrang mani mask b machin word shiftor later enhanc support larger set extend pattern even regular express recent shiftor combin sublinear string match algorithm obtain flexibl effici competit best classic algorithm mani onlin text algorithm seen implement clever automata classic determinist form bitparallel sinc invent becam gener way simul simpl nondeterminist automata instead convert determinist advantag much simpler mani case faster sinc make better usag regist comput word easier extend handl complex pattern classic counterpart main disadvantag limit impos regard size comput word mani case adapt cope longer pattern effici bitparallel approxim pattern match present applic bitparallel approxim pattern match especi relev present work consid nfa search patt error shown figur everi row denot number error seen first one second one on everi column repres match pattern given posit iter new text charact consid automaton chang state horizont arrow repres match charact they follow correspond match occur other repres error move next row vertic arrow repres insert charact pattern sinc advanc text pattern solid diagon arrow repres replac charact sinc advanc text pattern dash diagon arrow repres delet charact pattern sinc ffltransit advanc pattern text loop initi state allow consid charact potenti start point match automaton accept charact as end match whenev rightmost state activ initi activ state row i k column i repres delet first charact pattern p m error figur nfa approxim string match show activ state read text pait interest applic bitparallel simul automaton nondeterminist form first approach obtain okdmwen time pack automaton row machin word extend shiftor algorithm account vertic diagon arrow note even state fit singl machin word k sequenti updat ffltransit happen classic dynam program algorithm regard columnwis simul nfa paper interest recent simul techniqu show pack diagon automaton instead row column new valu comput one step fit comput word give brief descript idea ffltransit state diagon activ subsequ state diagon becom activ too defin minim activ row diagon diagon number look column start at eg enclos dot line figur new valu i read new text charact c comput alway hold report match whenev dmgammak k formula account replac insert match respect delet account keep minimum activ row interest match caught consid diagon d mgammak use bitparallel repres s unari one hold k plu overflow bit store sequenti insid bit mask d interestingli effect read diagon bottomup exchang bit repres state nfa updat formula seen either arithmet implement previou formula unari logic simul flow bit across arrow nfa shiftor tabl m bit long mask b built repres match mismatch pattern tabl bc built map bit b appropri posit insid d figur show state repres insid mask b separ separ final state p figur bitparallel represent nfa figur represent requir k bit per diagon total number bit m gamma kk number bit exceed comput word size w updat done o oper result algorithm linear fast practic purpos import realiz connect pattern algorithm given b tabl pattern use class charact shiftor algorithm use properti next search multipl pattern superimpos automata section describ approach base bitparallel simul nfa describ suppos search r pattern interest occurr one them k error extend previou bitparallel approach build automaton one superimpos automata assum pattern length otherwis truncat shortest one henc automata structur differ label horizont arrow superimposit defin follow build b tabl pattern take bitwiseand tabl recal mean match mean mismatch result tabl match posit ith charact pattern build automaton use tabl result automaton accept text posit end occurr much relax pattern class charact name exampl search patt wait shown figur string pait accept zero error w error error w w figur nfa filter search patt wait moder number pattern filter strict enough cost singl search occurr report automaton verifi involv pattern we use singlepattern automaton step is retravers last m charact determin actual occurr pattern number pattern larg filter relax trigger mani verif case partit set pattern group r pattern each build automaton group perform drr e independ search cost search orr n r small enough make cost verif neglig r alway exist sinc r singl pattern per automaton verif need group use heurist sort pattern pack neighbor group tri first charact hierarch verif simplest verif altern which call plain that superimpos automaton report match tri individu pattern one one candid area howev smarter verif techniqu which call hierarch possibl assum first r power two then automaton report match run two new automata candid area one superimpos first half pattern anoth second half repeat process recurs two automata find match end automata repres singl pattern find match know pattern realli found see figur cours automata requir subset pattern preprocess sinc correspond intern node binari tree r leav space preprocess cost chang r power two one halv may one pattern other figur hierarch verif method pattern node tree repres check the root repres fact global filter node pass check two children test leaf pass check pattern found advantag hierarch verif remov number candid consider singl test moreov even find pattern realli match actual check specif pattern ie may happen none two halv match spuriou match whole group worstcas overhead plain verif constant factor is twice mani test candid area r averag show later analyt experiment hierarch verif far superior plain verif automaton partit consid short pattern whose nfa fit comput word case ie m partit problem subsect next adapt two partit techniqu describ simplest techniqu cope larg automaton use number machin word simul idea follow larg automata superimpos partit superimpos automaton matrix subautomata one fit comput word subautomata behav slightli differ simpl one sinc must propag bit neighbor figur illustr automaton partit run text updat subautomata step take time proport number cell updat ie okm gamma kw observ howev necessari updat subautomata sinc right may activ state follow keep track need updat matrix subautomata work activ cell inform flow affect area row j column c r figur larg nfa partit matrix theta j comput word satisfi r c w pattern partit techniqu base lemma section reduc size problem divid pattern j part provid search subpattern bkjc error match subpattern must verifi determin fact complet match perform partit pick smallest j problem fit singl comput word ie dmje w limit method reach sinc case search zero error algorithm case qualit differ describ section divid pattern j subpattern evenli possibl partit r pattern left j theta r subpattern search bkjc error simpli group independ pattern search gener method differ that determin subpattern appear verifi complet pattern anoth kind hierarch verif call hierarch piec verif appli case too shown singlepattern algorithm verifi hierarch whether complet pattern match given piec match see figur is instead check complet pattern check concaten two piec contain one match match check concaten four piec on work lemma appli level tree figur method orthogon hierarch verif idea hierarch piec verif work bottomup instead topdown oper piec pattern rather set pattern use hierarch verif set pattern piec determin piec match given superimposit match coupl two differ hierarch verif techniqu case first use new mechan determin piec match superimpos group use hierarch piec verif determin occurr complet pattern piec belong to figur illustr whole process aaabbbcccddd aaabbb cccddd ccc ddd bbb aaa figur hierarch piec verif method pattern split part box leav element actual search root repres whole pattern least one pattern level must match occurr complet pattern bold box found bold line may verifi p p p one split piec search superimpos group piec arrang hierarch verif p found search hierarch piec verif p final found figur whole process pattern partit hierarch verif partit exact search techniqu call exact partit short base singlepattern filter reduc problem approxim search problem multipattern exact search algorithm first appear later improv first present singl pattern version extens multipl pattern filter base exact search particular case lemma show pattern match text posit k error split pattern k piec least one piec must present error occurr thi folklor properti use sever time search zero error lead complet differ techniqu sinc effici algorithm search set pattern exactli partit pattern k similar length appli multipattern exact search piec occurr piec verifi check surround complet match mani verif algorithm extrem fast mani algorithm multipattern search extens sunday algorithm gave us best result build trie subpattern text posit search text charact trie leaf found match path follow mismatch jump next text posit precomput minimum jump allow subpattern sunday algorithm use techniqu hierarch piec verif singl pattern present section search multipl pattern observ easili add pattern scheme suppos search r pattern cut one search parallel rk piec piec found text use classic algorithm verifi pattern candid area note import differ superimpos automata multipattern search know piec match case superimpos automata know piec match even possibl piec realli match work determin match piec carri hierarch verif superimpos automata necessari here moreov detect real match match union pattern sum individu match therefor point separ search rk group reason superimpos less pattern shift sunday algorithm reduc number pattern grow show experi never justifi practic split one search two count filter present filter base count letter common pattern text window filter first present a simpl variant use slightli differ version here variant use fixeds instead variables text window a possibl alreadi note make better suit parallel first explain singlepattern filter extend handl mani pattern use bitparallel simpl counter filter base lemma section pass text examin mletter long window keep track mani charact p present current text window account multipl too if given text posit j charact p window j gammamj window area verifi classic algorithm implement filter algorithm follow keep counter count pattern charact appear text window also keep tabl a where initi number time charact c appear p kept ac throughout algorithm entri ac indic mani occurr c still taken belong p exampl h appear p count one hs text window belong p ac neg mean c must exit text window gammaac time take belong p exampl run pattern aloha text aaaaaaaa hold valu counter independ k advanc window must includ new charact j exclud last charact includ new charact subtract one at j greater zero decrement new charact j p increment count exclud old charact j gammam add one at j gammam greater zero increment j gammam consid p decrement count whenev count reach verifi preced area seen algorithm linear exclud verif number oper per charact small keep mani counter parallel search r pattern text use bitparallel keep counter singl machin word must a tabl count valu entri a lie rang gammamm need exactli e bit store them also enough count sinc rang m henc pack pattern length singl search recal w number bit comput word pattern differ length either truncat shortest length use window size longest length pattern must divid set subset maxim size search subset separ focu attent singl subset now algorithm simul simpl one follow tabl ma pack tabl entri ma divid bit area length area machin word correspond pattern store normal a valu set signific bit area subtract ie store algorithm add subtract a s easili parallel without caus overflow area next moreov correspond a valu posit signific bit area zero also parallel counter mcount area align ma initi set signific bit area subtract one ie store later add subtract parallel without caus overflow moreov window must verifi pattern whenev signific bit area reach condit check parallel signific bit reach need sequenti check one wa final observ counter want select increment decrement correspond exactli ma area signific bit ie whose a valu posit allow obviou bit maskshiftadd mechan perform oper parallel counter figur illustr mcount a l o h e count mgammak fals figur bitparallel counter exampl correspond pattern aloha search error text window hello valu a analysi interest complex present algorithm well restrict ff r must satisfi mechan effici filter unrelev part text effect defin two concept first say multipattern search algorithm optim search r pattern time take search one pattern call c nr cost search r pattern text size n algorithm optim c say multipattern search algorithm use search r pattern less time take search one one correspond sequenti algorithm ie c nr r c n work filter interest averag case analysi sinc worst case none use compar tabl complex limit applic algorithm muth manber includ complet analysi lead result present later section algorithm complex optim use simpl superimp r oe automaton part ffm r oe pattern part mr oe wgammaff part exact search ffoe ff log oe rmthetalog oe log oe rm log oe mthetalog oe log oe m count r log muth manber mn tabl complex optim limit applic differ algorithm present figur schemat represent area algorithm best term complex show later experi match figur exact partit fastest choic reason scenario error level appli first faster count m log ffoe ff w hold asymptot hold practic reason valu m second faster superimpos automata min true practic case ffl algorithm faster exact partit muth manber name r ffoe ff howev limit ffl increas m count asymptot fastest algorithm sinc cost grow olog m instead om thank optim use bit comput word howev applic reduc grow useless point win exact partit ffl error level high exact partit superimpos automata remain altern automaton partit better pattern partit asymptot better algorithm limit use higher error level filter improv sequenti search pattern partit partit automaton partit exact search oe log oe ff oe log oe partit exact search superimpos automata r muthmanb ffoe ff ff figur area algorithm better term ff r left plot vari m assum moder r ie less superimpos automata suppos search r pattern explain befor partit set group r pattern each search group separ with r automata superimpos size group larg possibl small enough verif signific analyz optim valu r complex search prove probabl given text posit match random pattern error level ff ofl also prove oe experiment shown hold precis practic replac e fact abrupt phenomenon occur sinc match probabl low oe high otherwis formula oe stand probabl charact cross horizont edg automaton ie probabl two charact equal extend result note r charact edg now mention probabl smaller r oe use upper bound pessimist approxim which stand case r charact differ tight r oe singlepattern algorithm on time multipattern algorithm optim averag whenev total cost verif o per charact sinc verif cost om becaus use lineartim algorithm area length om need total number verif perform om per charact averag use plain verif scheme would mean probabl superimpos automaton match text posit omr perform r verif hierarch verif use that r increas match becom probabl becaus easier cross horizont edg automaton cost becaus check r pattern one one result two differ limit maximum allow r one two fact state limit due increas cost verif stringent increas match probabl result analysi without hierarch verif complex omit hierarch verif yield consider better result simpler analysi show appendix a averag cost verifi match superimpos automaton om hierarch verif use instead orm cost plain verif is cost grow number pattern increas henc limit prevent us superimpos r pattern match probabl becom higher is ff roe match probabl high spend much time verifi almost text posit hand superimpos much like limit reach tell best r which call r maximum one reach limit ie r sinc partit set small enough make verif signific cost simpli orr n mean algorithm optim take error level constant altern ff roe hand oe cost orn better trivial solut ie r henc superimposit occur algorithm use figur illustr automaton partit analysi case similar simpl one except step larg automaton take time proport total number subautomata ie rt pr oe r ff r oe figur behavior superimpos automata left cost increas linearli r slope depend ff right cost parallel search t p approach r singl search fact worst case sinc averag cell activ use worst case superimpos pattern worst case search almost reach therefor cost formula rn optim constant ff altern ff roe use ff oe pattern partit jr pattern search bkjc error error level subproblem recal subpattern length mj determin piec match superimpos group pay om independ number piec superimpos thank hierarch verif henc limit group given eq superimpos singlepattern algorithm also pay verifi match piec part complet match show cost neglig ff oe less strict limit given eq jr piec search need analyt express j sinc j larg enough subpattern fit comput word dw ff shown o w maxim term ff see therefor complex oe rn hand search cost singlepattern algorithm ojrn respect simpl algorithm short pattern cost multipli j therefor limit optim use same compar complex pattern versu automaton partit pattern partit better k w mean constant ff increas m pattern partit asymptot better partit exact search analyz algorithm follow except verif search time made on worst case use ahocorasick machin offn best case use multipattern boyermoor algorithm search piec length mk ff interest analyz cost verif sinc cut pattern k piec length bmk e probabl piec match oe bmkc henc probabl piec match k easili extend analysi case multipl search sinc rk piec length henc probabl verifi rk check match use classic algorithm dynam program note case know pattern verifi sinc know piec match show total verif cost piec length o in case henc search cost ffoe ff must chang ff consid best case consid optim use now optim algorithm pay on total search time hold algorithm alway use sinc search cost independ number pattern number verif trigger exactli search pattern separ howev ff log oe m thetalog oe log oe m algorithm singl multipattern work much dynam program henc multipattern search use case algorithm could use shift boyermoor search shorten mani pattern point better perform separ search never happen practic count number verif neglig pass algorithm on case multipl pattern ow log m pattern pack singl search cost search r pattern orn logmw difficult part analysi maximum error level ff filtrat scheme toler keep number verif low assum use dynam program verifi potenti match call probabl verifi logmwm algorithm keep linear ie optim averag algorithm alway use sinc number verif trigger multipattern search singlepattern version howev m algorithm work ormn dynam program henc filter use deriv appendix b pessimist bound limit optim use name grow toler smaller error level limit hold condit type independ constant c case need use experiment result experiment studi algorithm compar previou work test megabyt lowercas english text pattern randomli select text use sun ultrasparc run solari megabyt ram data point obtain averag unix user time trial present time tenth second per megabyt present result random text avoid excess lengthli exposit gener filter improv alphabet size oe grow lowercas english text behav approxim random text invers probabl two random letter equal figur compar plain hierarch verif method sequenti applic r search case superimpos automata automaton fit comput word show case increas r increas k clear hierarch verif outperform plain verif case moreov analysi hierarch verif confirm sinc maximum r cost parallel algorithm grow linearli close r hand algorithm simpl verif degrad sooner sinc verif cost grow r mention maximum r valu point parallel ratio maxim is search r pattern better split two group size r search group sequenti stress point figur right show quotient parallel sequenti algorithm optimum clear superimpos automata hand parallel ratio exact partit keep improv r grow predict analysi there optimum larger m relat sunday shift still justifi split search two compar algorithm other consid hierarch verif use r valu obtain optim group superimpos automata algorithm exact partit hand perform search singl pass count clear speedup optim pack mani pattern singl search notic plot depend r show point r select depend k for fix r hand show parallel work error level increas cannot control algorithm compar algorithm among other begin short pattern whose nfa fit comput word figur show result increas r increas k low moder error level exact partit fastest algorithm particular faster previou work number pattern for english text r r rt r r rt rt sequenti nfa superimpos plain verif exact partit superimpos hierarch verif figur comparison sequenti multipattern algorithm row correspond respect left plot show search time right plot show ratio parallel t p sequenti time r theta error level increas superimpos automata best choic agre analysi r r exact partit superimpos automata count figur comparison among algorithm top plot show increas r bottom plot show increas k consid longer pattern show result increas r increas k befor exact partit best appli improv previou work r longer pattern superimpos automata techniqu also degrad rare abl improv exact partit case begin best and other longer use figur summar experiment result becom practic version theoret figur main differ exact partit better practic complex suggest clear winner pattern automaton exact partit pattern partit automaton partit count figur comparison among algorithm top plot show increas r bottom plot show increas k partit run would resort exact partit partit exact search superimpos automata r muthmanb apartit exact search superimpos automata figur area algorithm better practic english text right plot assum compar figur conclus present number differ filter algorithm multipattern approxim search ing algorithm allow arbitrari number error hand previou work allow one error outperform number pattern search english text depend pattern length explain analyz experiment test algorithm also present map best algorithm case mani idea propos use adapt singlepattern approxim search algorithm case multipattern search instanc idea superimpos automata adapt bitparallel algorithm anoth fruit idea exact partit multipattern exact search easili adapt search piec mani pattern mani filter algorithm type eg hand exact multipattern search algorithm may better suit search paramet eg work better mani pattern number practic optim algorithm possibl instanc ffl pattern differ length truncat shortest one superimpos automata select cleverli substr use sinc charact posit two pattern improv filter mechan ffl use simpl heurist group subpattern superimpos automata improv maxim common letter too gener techniqu could group pattern similar term number error need convert one ie cluster techniqu ffl free partit pattern k piec like exact partit use minim expect number verif letter alphabet probabl occurr eg english text om dynam program algorithm present select best partit could appli multipattern search acknowledg thank robert muth udi manber implement also thank anonym refere detail comment improv work r effici string match aid bibliograph search effici text search text retriev theori practic new approach text search multipl approxim string match faster approxim string match fast practic approxim pattern match fast string search algorithm theoret empir comparison approxim string match algorithm sublinear approxim string match biolog applic improv algorithm approxim string match simpl effici string match k mismatch comparison approxim string match algo rithm fast parallel serial approxim string match approxim multipl string search sublinear algorithm approxim keyword search fast bitvector algorithm approxim pattern match base dynam progam multipl approxim string match count approxim text search guid tour approxim string match improv algorithm approxim pattern match fast simpl approxim string match theori comput evolutionari distanc pattern recognit fast substr search algorithm use qgram locat approxim string match approxim boyermoor string match algorithm approxim string match find approxim pattern string approxim string match qgram maxim match approxim string match use withinword parallel fast text search allow error tr algorithm approxim string match fast parallel serial approxim string match effici text search fast substr search algorithm improv algorithm approxim string match new approach text search fast text search approxim stringmatch italicqitalicgram maxim match approxim boyermoor string match approxim string match use withinword parallel comparison approxim string match algorithm fast simpl approxim string match fast string search algorithm effici string match guid tour approxim string match textretriev multipl approxim string match fast practic approxim string match theoret empir comparison approxim string match algorithm approxim multipl string search bitparallel approach suffix automata fast bitvector algorithm approxim string match base dynam program use qgram locat approxim string match ctr atsuhiro takasu approxim multiword match algorithm robust document retriev proceed th acm intern confer inform knowledg manag novemb arlington virginia usa kimmo fredriksson onlin approxim string match natur languag fundamenta informatica v n p decemb kimmo fredriksson gonzalo navarro averageoptim singl multipl approxim string match journal experiment algorithm jea v ne josu kuri gonzalo navarro ludov m fast multipattern search algorithm intrus detect fundamenta informatica v n p januari josu kuri gonzalo navarro ludov m fast multipattern search algorithm intrus detect fundamenta informatica v n p juli federica mandreoli riccardo martoglia paolo tiberio syntact approach search similar within sentenc proceed eleventh intern confer inform knowledg manag novemb mclean virginia usa