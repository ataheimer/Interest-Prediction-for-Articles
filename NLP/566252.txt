t weak bisimilar finitest system bpa norm bpp decid polynomi time a prove weak bisimilar decid polynomi time finitest system sever class infinitest system contextfre process norm basic parallel process norm bpp best knowledg first polynomi algorithm weak bisimilar problem involv infinitest system b introduct recent lot attent devot studi decid complex verif problem infinitest system consid problem weak bisimilar certain infinitest process finitest one motiv intend behavior process often easi specifi by finitest system real implement contain compon essenti infinitest eg counter buffer recurs creation new parallel subprocess aim leav institut informat technic univers munich support alexand von humboldt foundat grant agenc czech republ grant no support daad postdoc grant d preprint submit elsevi preprint novemb check finitest specif infinitest implement semant equival ie weakli bisimilar concentr class infinitest process defin syntax bpa basic process algebra norm bpp basic parallel pro cess system bpa process also known contextfre process seen simpl sequenti program due binari oper sequenti composit recent use solv problem dataflow analysi optim compil bpp model simpl parallel system due binari oper parallel composit equival communicationfre net subclass petri net everi transit exactli one inputplac process norm iff everi reachabl state termin via finit sequenc comput step although syntax bpa bpp allow defin simpl infinitest system practic point view also import give compact definit finitest process ie size bpabpp definit finitest process f exponenti smaller number state f see next section verif algorithm polynomi size bpabpp definit potenti verifi larg process thu result also seen way overcom wellknown problem statespac explos state art baeten bergstra klop prove strong bisimilar decid norm bpa process simpler proof given later even polynomialtim algorithm decid result later extend class not necessarili norm bpa process best known algorithm doubli exponenti decid strong bisimilar bpp process establish associ complex analysi yield elementari upper bound although deeper examin might principl show algorithm elementari strong bisimilar bpp shown conphard howev polynomialtim algorithm subclass norm bpp strong bisimilar norm bpa norm bpp also decid result even hold parallel composit norm bpa norm bpp process recent even gener class norm paprocess weak bisimilar much less known semidecid weak bisimilar bpp shown shown weak bisimilar decid bpa bpp process total norm a process total norm termin moment via finit sequenc comput step least one step must visibl ie nonintern decid weak bisimilar gener bpa bpp open problem might decid sure intract as sume p np weak bisimilar norm bpa pspacehard np lower bound weak bisimilar bpp shown stribrna result improv pi p hard mayr recent pspacehard srba moreov pspace lower bound weak bisimilar bpp hold even norm bpp situat dramat differ consid weak bisimilar certain infinitest process finitest one studi motiv fact intend behavior process often easi specifi by finitest system real implement contain compon infinitest eg counter buffer recurs creation new parallel subprocess shown weak bisimilar bpp finitest process decid gener result recent obtain shown mani bisimul like equival includ strong weak one decid pad finitest process class pad strictli subsum bpa bpp also pa pushdown process result obtain gener reduct modelcheck problem simpl branchingtim tempor logic ef decid pad modelcheck problem ef hard for exampl known pspacecomplet bpp pspacecomplet bpa yield effici algorithm contribut show weak and henc also strong bisimilar decid polynomi time bpa finitest process norm bpp finitest process best knowl edg first polynomi algorithm weak bisimilar infinitest system moreov algorithm bpa first exampl effici decis procedur class unnorm infinitest system the polynomi algorithm strong bisimilar work norm subclass bpa bpp respect due aforement hard result symmetr case when compar two bpa two norm bpp process know result cannot extend direct recent work show strong bisimilar pushdown process a proper superclass bpa finitest one alreadi pspacehard furthermor weak bisimilar remain comput intract dphard even process onecount net finitest process onecount net comput equival subclass petri net one unbound place thu also seen simpl pushdown automata henc result bpa rather tight question whether result norm bpp extend class not necessarili norm bpp process left open also note simul equival finitest process conphard bpabpp process exptimecomplet pushdown process polynomi onecount net basic scheme construct bpa norm bpp process same main idea weak bisimilar bpa or norm bpp process finitest one gener finit base small size certain infinit subset bpa bpp statespac symbol describ finit automata contextfre grammar respect detail intuit given section interest point construct work although weak bisimul congruenc wrt sequenti composit left congruenc section propos natur refin weak bisimilar call terminationsensit bisimilar congruenc also decid bpa finitest process polynomi time result demonstr techniqu use weak bisimilar actual wider applicabilityit adapt mani bisimul like equival final note aim show mention problem although comput degre bound polynomi explicitli analysi quit simpl rough moreov present algorithm could easili improv employ standard techniqu see final section comment use process rewrit system formal model process let act countabl infinit set action process constant respect class process express e defin const special constant denot empti expr sion intuit sequenti composit k parallel composit distinguish express relat structur congruenc given follow law k associ k commu tativ unit k process rewrit system specifi finit set rule delta form e act const delta act delta denot set process constant action use rule delta respect note set finit process rewrit system delta defin uniqu transit system state process express const delta act delta set label transit determin delta follow infer rule rememb k commut ef ekf extend notat e f element act standard way f reachabl e e w sequenti parallel express process express contain k oper respect finitest bpa bpp system subclass process rewrit system obtain put certain restrict form rule finitest bpa bpp allow singl constant lefthand side rule singl constant sequenti express parallel express righthand side respect set state transit system gener finitest bpa bpp process delta restrict const delta set sequenti express const delta set parallel express const delta respect exampl g process rewrit system see delta bpa system part transit system associ delta reachabl z look follow z iz iiz iiiz z replac occurr oper k oper obtain bpp system gener follow transit system again draw part reachabl z z z z z z z z z process norm iff everi reachabl state success termin via finit sequenc comput step bpa bpp process equival condit constant x const delta underli system delta w act x w call constant x properti norm semant equival interest weak bisimilar relat distinguish observ intern move compu tation step intern move model special action denot convent follow consid process express const delta delta fix process rewrit system definit extend transit relat defin e binari relat r process express weak bisimul iff whenev act f ffl f e weakli bisimilar written e f iff weak bisimul relat them weak bisimilar approxim famili relat defin follow follow condit hold f e worth note equival transit possibl approxim weak bisimilar differ way approxim equival see howev need purpos gamma finitest system n state f g const gamma easi show problem whether f g decid on time first comput on time transit closur transit system wrt transit thu obtain new system old system suffic decid strong bisimilar f g new system done on log n time use partit refin techniqu sometim also consid weak bisimilar process differ process rewrit system say delta gamma formal delta gamma consid singl system take disjoint union section prove weak bisimilar decid bpa finitest process polynomi time let e bpa process underli system delta f finitest process underli system gamma const delta const wlog e const delta moreov also assum f g const gamma act f g f impli f gamma transit miss gamma add safe ad transit chang weak bisimilar relat among state order suffic comput in cubic time transit closur gamma wrt transit extra transit influenc complex estim alway consid worst case gamma possibl transit condit want add new transit form f proof weak bisimilar would immedi work termin sensit bisimilar which defin end section use uppercas letter denot element const delta lowercas letter f denot element const gamma greek letter ff use denot element const delta size delta denot n size gamma we measur complex algorithm n m set const delta divid two disjoint subset norm unnorm constant rememb x const delta norm iff x w w act note decid on constant norm set norm constant delta denot norm delta construct also use process form fff seen bpa process underli system delta gamma intuit proof divid two part first show greatest weak bisimul process delta gamma finit repr sentabl finit relat b size onm call bisimul base pair weakli bisimilar process gener base a techniqu first use caucal show bisimul base comput polynomi time that take suffici larg relat g sure subsum base refin thi refin techniqu use size g still onm step refin procedur possibl delet element g noth delet found base henc need step refin step formal introduc definit we comput expans current comput approxim base intuit pair process belong expans iff move one compon move compon result pair process gener current approxim b overcom two problem set pair gener b and approxim infinit set state reachabl given bpa state one move infinit employ symbol techniqu repres infinit set similar one use take advantag fact simpl reg ular structur encod finitest automata see theorem allow comput expans polynomi time relat k wellform iff subset relat g defin const gamma theta const gamma const delta theta const gamma const gamma theta const gamma const gamma note size wellform relat onm g greatest wellform relat one wellform relat special import definit bisimul base delta gamma denot b defin follow weak bisimilar left congruenc wrt sequenti composit gener b new pair weakli bisimilar process substitut it worth note weak bisimilar right congruenc wrt sequencingto see thi suffic defin x z gener procedur defin wellform relat follow definit let k wellform relat closur k denot least relat satisfi follow condit contain unnorm constant fffi g fffih g everi fi const delta h const gamma note clk contain element two form ff g fff g consist pair immedi deriv clk rule definit although closur wellform relat infinit structur sens regular fact precis formul follow theorem theorem let k wellform relat g const gamma finitest automaton g size onm construct onm proof construct regular grammar size onm gener mention languag let g const gammag fug const delta const gamma ffl ffi defin follow h k add rule h f h k add rule h y f h k add rule x h k add rule h x x unnorm also add rule h xu x const delta f const gamma add rule u xu u x proof g g inde gener mention languag routin translat g g g see eg note size g essenti size g g g nondeterminist contain rule follow immedi wellform relat k membership problem clk decid polynomi time anoth properti clk specifi lemma below clk similarli fi f proof give proof first claim the second one similar let fff g clk induct i immedi appli rule definit rememb ff ffl induct step let fff g clk i three possibl cf definit i r fff r k induct hypothesi know fffih r due rule definit ii r y hypothesi flfih r clk henc also y flfih r clk rule definit iii contain unnorm constant fl ffifih g clk last rule definit import bisimul base clarifi follow theorem say clb subsum greatest weak bisimul process delta gamma theorem ff f g ff g iff ff g clb fff g iff proof if part obviou case b contain weakli bisimilar pair rule definit produc pair weakli bisimilar onli if part can case easili prove induct length ff we show first proof second one similar y g b rule definit obtain y fi g clb norm fi w w act g must abl match sequenc w fi g substitut obtain g g induct hypothesi henc due rule definit next definit formal one step refin procedur appli g comput b intuit start g approxim b refin step pair delet current approxim refin step pair delet found b next definit specifi condit given pair delet refin step current comput approxim b definit let k wellform relat say pair x g k expand k iff follow two condit hold ffl x ff g ffl g x ff ff expans pair form y f g f g g k defin wayfor move left compon must move right compon result pair process belong clk vice versa note set pair k expand k denot expk notion expans sens compat definit bisimul intuit formal follow lemma k wellform relat clk weak bisimul proof prove everi pair ff g fff g clk properti move one compon move compon result pair process belong clk we consid pair form fff g case similar induct i claim follow directli definit ffl induct step let fff g clk i three possibl i h fff let fff flf note ff empti case consid move form f done similar way below fff h clk use induct hypothesi conclud h distinguish two case h g k obtain due lemma henc g use move g g transit h see begin section h g k induct hypothesi know g due lemma let g h g k h clk distinguish two possibl again use move fff h h h fff or fff handl way flf h henc also flf g clk lemma ii h y h g k fif let fif flfif y h g k use induct hypothesi conclud g fif obtain flfif let g y h g k induct hypothesi know h match move g two possibl flh flh immedi flfif clk transit h h h h done immedi fi h g fi need h h transit h fif due induct hypothesi know fif fif handl way flf h fif iii contain unnorm constant fi g clk let ff ffi fi g clk due induct hypothesi clearli contain unnorm constant henc ffifl last rule definit let g fi g clk fi ffi contain unnorm constant henc ff due last rule definit notion expans allow approxim b follow way theorem j n bound onm proof exp view function complet lattic wellform relat monoton henc greatest fixedpoint exist must reach onm step size g onm prove first let us realiz immedi definit definit theorem inclus prove simpl induct argument clearli definit expans fact expb j know clb j weak bisimul due lemma thu process everi pair b j weakli bisimilar word b obtain g onm refin step correspond construct expans thing remain shown expk effect construct polynomi time that employ symbol techniqu allow repres infinit subset bpa statespac eleg succinct way theorem x const delta act delta finitest automaton xa size on construct on time proof defin leftlinear grammar g xa size on gener mention languag grammar convert xa standard algorithm known automata theori see eg note size xa essenti size g xa first let us realiz comput on time set consist const delta const deltag fsg intuit index indic whether action a alreadi emit const delta ffl ffi defin follow add product x ffi x also add product delta everi transit delta everi test whether z j i case add ffi product delta everi transit delta everi follow test whether z j i case add ffi product z test whether z everi t case add ffi product fact g xa gener mention languag intuit clear formal proof easi size g xa on delta contain on basic transit length on crucial part algorithm the refin step present proof next theorem complex analysi base follow fact let nondeterminist automaton rule let total number state transit a ffl problem whether given w sigma belong la decid ojwj delta t time ffl problem whether decid ot time theorem let k wellform relat relat expk effect construct proof first construct automata g theorem everi g const gamma take onm time construct automata xa theorem x a take on time furthermor also comput set pair form f g g belong clk done om time show pair k decid expand k pair form f g g easi handl state f f state g g henc need check om pair verifi first and consequ also second condit definit pair check constant time set pair f g g belong clk alreadi comput begin let us consid pair form y g first need verifi ff g h ff h clk requir onm test whether ff length ff on size h onm test done on henc need on total second condit definit need find whether g h x ff that simpli test empti size product automaton on need perform om test henc on suffic pair form y f g handl similar way first condit definit problem interest move left compon let g exist good move f verifi test whether one follow condit hold ffl f f condit check on requir analysi fact done abov k contain onm pair total time need comput expk on bpa process e introduc begin section element const delta comput b perform comput expans onm time see theorem give us follow main theorem theorem weak bisimilar decid bpa finitest process on terminationsensit bisimilar alreadi mention previou section weak bisimilar congruenc wrt sequenti composit major drawback equival consid behavior prop erti propos solut problem design natur refin weak bisimilar call terminationsensit bisimilar relat respect main featur sequenc overlook weak consequ congruenc wrt sequenti composit also show terminationsensit bisimilar decid bpa finitest process polynomi time adapt method previou section note right begin aim design new fundament notion theori sequenti process that properti terminationsensit bisimilar studi detail want demonstr method applic larger class bisimulationlik equival relat termin sensit bisimilar provid hope convinc evid might interest use opinion reason model sequenti behavior abl express and distinguish follow basic phenomena sequenc ffl success termin process current execut system continu execut next process queue ffl unsuccess termin execut process deadlock model sever error caus whole system get stuck ffl enter infinit intern loop cycl differ success unsuccess termin certainli signific need distinguish termin cycl also recogn practic major exampl come eg theori oper system bpa process natur model recurs sequenti behavior success termin model reach also hidden syntact tool model deadlocknot definit bpa system x const delta delta contain rule form x us call constant undefin state xfi model situat execut process reach deadlockther transit no comput step xfi process stuck easi see safe assum delta contain one undefin constant the one simpli renam x denot ffi convent note ffi unnorm definit state form ffiff call deadlock case finitest system distinguish success unsuccess termin similar way deadlock model distinguish undefin constant ffi undefin constant model success termin note definit weak bisimilar repres success termin definit want defin promis relat terminationsensit bisimilar need clarifi meant cycl intuit situat process enter infinit intern loop word forev without possibl anyth els termin either success unsuccess definit set initi action process e denot ie defin fg process e cycl iff everi state f reachabl e satisfi if note easili decid quadrat time whether given bpa process cycl case finitest system need linear time definit say express e normal iff e cycl deadlock success termin binari relat r process express terminationsensit bisimul follow condit hold ffl one express e f cycl also cycl ffl one express e f deadlock either normal also deadlock ffl one express e f success termin either normal also success termin f ffl f e terminationsensit bisimilar written e f iff terminationsensit bisimul relat them terminationsensit bisimilar seem natur refin weak bisimilar better captur intuit understand same sequenti process distinguish among phenomena mention begin section still allow ignor intern comput step larg extent exampl deadlock process still equival process deadlock yet necessarili deadlock finit number transit thi exampl also explain first three condit definit state care famili approxim defin way case weak bisimilar differ relat exactli process satisfi first three condit definit follow theorem follow immedi definit theorem terminationsensit bisimilar congruenc wrt sequenti composit techniqu use previou section also work terminationsensit bisimilar theorem terminationsensit bisimilar decid bpa finitest process on proof first assumpt delta gamma mention begin section also safe wrt terminationsensit bisimilar note would true also assum exist loop f everi f const gamma see assumpt gamma formul care thing modifi notion wellform relat defin way addit requir process everi pair contain wellform relat k relat easili shown process pair contain clk also relat word take care first two requir definit construct anymor everyth work without singl chang previou proof indic method section adapt bisimulationlik equival see final section comment norm bpp process section prove weak bisimilar decid polynomi time norm bpp finitest process basic structur proof similar one bpa key weak bisimul problem decompos problem singl constant interact other particular norm bpp process finit wrt weak bisimilar iff everi singl reachabl process constant finit wrt weak bisimilar hold gener bpp thu construct carri gener bpp exampl consid unnorm bpp defin follow rule process x wrt bisimilar everi subprocess eg x kx kx everi singl constant x infinit wrt bisimilar even norm bpp solv addit problem bisimul base closur simpler due normed assumpt symbol represent bpp statespac problemat see below set state reachabl given bpp state one move longer regular sens repres cfgrammar algorithm use fact empti cf languag decid polynomi time cf languag close intersect regular languag let e bpp process f finitest process underli system delta gamma respect assum wlog e const delta element const delta denot x y element const gamma set parallel express const delta denot const deltaomega element greek letter ff size delta denot n size gamma m construct repres certain subset const deltaomega finit automata cf grammar problem element const deltaomega consid modulo commut howev finit automata cf grammar cours distinguish differ permut word class regular cf languag close permut problem import want clarifi distinct ff possibl linear represent defin ff set linff follow permut set f delta exampl linxki xg also assum linff contain uniqu element call canon form linff import canon form chosen need make construct determinist for exampl fix linear order process constant let canon form linff sort order constant ff relat k wellform iff subset const delta fg theta const gamma bisimul base delta gamma denot b defin follow definit let k wellform relat closur k denot least relat satisfi famili clk approxim defin way section lemma let ff f clk proof let ff f clk induct i immedi appli rule definit ffl induct step let ff f clk i two possibl i x r k fl s clk rk f clearli rkskg h henc also skg t induct hypothesi flkfi due second rule definit note rkt h ii ff r clk s k rk f rkskg h rkg t induct hypothesi obtain ffkfi due third rule definit again closur bisimul base greatest weak bisimul process delta gamma theorem let ff const const gamma ff f iff proof if part obviou onli if part prove induct lengthff delta norm xkfi f w v act x process f must abl match sequenc w v enter weakli bisimilar statesther const delta fi g x h consequ also f gkh here need fact weak bisimilar congruenc wrt parallel oper clearli induct hypothesi henc xkfi f definit closur wellform relat sens repres finitest automaton state next theorem construct first need comput set ffkg hg consid parallel composit finitest system itself ie state system form fkg let new system union system old system new system size om state form fkg h appli usual cubictim partit refin algorithm decid bisimilar new system see section give us set theorem let k wellform relat g const gamma finitest automaton g size onm construct onm time follow condit hold ffl whenev g accept element linff ff g clk accept least one element linff proof design regular grammar size onm lg g mention properti let g const gamma fsg const delta ffl ffi defin follow x f k add rule xf f k add rule f delta f const gamma x const delta x r k f rk add rule xf delta f const gamma r k f rk add rule delta add rule g first claim follow observ whenev ff linff fff sentenc g g ff f clk easili prove induct length deriv fff second part suffic prove ff f clk ff linff fff sentenc g g done straightforward induct i import realiz ff g necessarili accept element linff exampl const const gamma g accept string xy z string xzi gener g cannot repair see begin section howev actual need repair g follow nice properti lemma let k wellform relat b k ff g automaton g the proof of theorem construct k accept element linff proof let g g grammar previou proof first prove s const gamma const deltaomega fl r skr f deriv flf g g everi fl linfl induct lengthfl pair r belong b henc f definit g g form xkfi fi linfi xkfi r delta norm u v const gamma x u fi v ukv r henc also skukv f thu const gamma x u pair x u belong b definit g g fi v vkt f use induct hypothesi conclud fif henc xfif requir let ff g delta norm r const gamma r henc definit g g clearli rkg g due prove properti r ffg everi ff linff rule g g obtain set state reachabl given x const delta one move longer regular can sens repres cf grammar theorem x const delta act delta contextfre grammar g xa gnf greibach normal form ie variabl right hand side everi product size on construct on time follow two condit hold ffl g xa gener element linff x xa gener least one element linff proof let g const delta ffl ffi defin follow delta rule x ad ffi transit delta add rule add rule transit delta add rule also add rule const delta add rule fact g xa satisfi mention condit follow directli construct note size g xa on moment transform g xa gnf standard procedur automata theori see done on time size result grammar on notion expans defin differ way when compar one previou section definit let k wellform relat say pair x f k expand k iff follow two condit hold ffl x ff f ff la g ff canon form linff ffl f g languag pair f k expand k iff f impli f la g set pair k expand k denot expk theorem let k wellform relat set expk comput on time proof first comput automata g theorem g const gamma take onm time comput grammar g xa theorem x const delta act take on time show decid on f k expand k first condit definit check on time on transit x state g f g pair ff g verifi whether ff canon form linff membership test done on m time size ff on size g onm second condit definit expens test empti first construct pushdown automaton p recogn languag p om control state total size on m furthermor rule px qff p properti lengthff g xa gnf transform automaton equival cf grammar wellknown procedur describ eg size result grammar on empti thu check construct perform om time henc need on pair form f handl similar but less expens way k contain onm pair comput expk take on previou theorem actual straightforward consequ definit next theorem say exp realli need theorem let k wellform relat clk weak bisimul proof let ff f clk prove ff fi f fi g clk vice versa induct i distinguish follow two possibl let x fi definit f fi fi linfi henc fi g clk due first part theorem let f g definit string w let w linfi x due first part theorem due theorem let f g henc g clk due theorem ffl induct step let ff f clk i two possibl i x r k fl s clk rk f let xkff fi action a emit either x ff distinguish two case ffikfl x r k x ffi r ffi r rk f r f r ks g sum up ffi r ks g henc ffikfl g clk due lemma xkae fl s clk fl ae ae rk f f rk g due lemma obtain xkae g clk let f g rk f r x r ks g x r k fl s clk x x ae ffi r ffika g clk due lemma ii ff r clk s k rk f proof complet along line abov approxim and comput bisimul base way section theorem j n bound onm proof suffic show const delta ff show x f expand b a proof pair f similar let x fi x f f fi g let fi canon form linfi due lemma let f g x f x g due theorem fi linfi fi lg xa moreov fi due lemma henc follow directli theorem theorem weak bisimilar norm bpp finitest process decid on time proof theorem comput expans theorem which cost on time done onm time conclus prove weak bisimilar decid bpa process finitest process on time norm bpp finitest process on time may possibl improv algorithm reus previous comput inform exampl set reachabl state expon would still high whole bisimul basi construct get effici algorithm one could tri avoid thi note howev construct b for bpanbpp system delta finitest system gamma automaton g theorem theorem for const gamma decid weak bisimilar bpanbpp process ff delta process const gamma time ojffjit suffic test whether f accept ff observ substanti differ f g except initi state techniqu bisimul base also use strong bisimilar howev base differ our design way gener new bisimilar pair process reli addit algebra properti strong bisimilar which full congruenc wrt sequenc allow uniqu decomposit norm process wrt sequenc parallel etc main difficulti proof show membership closur defin base decid polynomi time main point proof use symbol represent infinit subset bpa bpp statespac would also like mention proof easili adapt bisimulationlik equival notion bisimulationlik equival one concret exampl terminationsensit bisimilar section intuit almost everi bisimulationlik equival algebra properti need construct bisimul base symbol techniqu statespac represent also adapt see detail r decid bisimul equival process gener contextfre languag process algebra reachabl analysi pushdown automata applic model check elementari decis procedur arbitrari contextfre process infinit result graph canoniqu de graph algebriqu decid decomposit process algebra bisimul decid basic parallel process bisimul equival decid contextfre process petri net decid model check infinitest concurr system automatatheoret approach interprocedur dataflow analysi short proof decid bisimul norm bpa process bisimul tree decid weak bisimul bisimul equival decid norm process algebra polynomi algorithm decid bisimilar norm contextfre process polynomi algorithm decid bisimul equival norm basic parallel process introduct automata theori action speak louder word prove bisimilar contextfre process decid bisimulationlik equival finitest process effect decompos sequenti behaviour effici verif algorithm onecount process simulationcheck sequenti system simul preorder simpl process algebra weak bisimul model check basic parallel process strict lower bound model check bpa complex bisimul problem basic parallel process complex bisimul problem pushdown automata decid model check tempor logic ef process rewrit system infinit result three partit refin algorithm concurr automata infinit sequenc petri net theori model system complex weak bisimilar regular bpa bpp hard result weak bisimilar simpl process algebra model check ctl properti pushdown system tr three partit refin algorithm commun concurr process algebra short proof decid bisimul norm bpaprocess decid bisimul equival process gener contextfre languag bisimul equival decid contextfre process polynomi algorithm decid bisimilar norm contextfre process process rewrit system effect decompos sequenti behaviour decid model check tempor logic ef petri net theori model system introduct automata theori languag comput elementari bisimul decis procedur arbitrari contextfre process simul preorder simpl process algebra bisimul equivanl decid norm process algebra effici verif algorithm onecount process decid bisimulationlik equival finitest process reachabl analysi pushdown automata bisimul equival decid basic parallel process infinit result automatatheoret approach interprocedur dataflow analysi weak bisimul model check basic parallel process model check ctl properti pushdown system concurr automata infinit sequenc complex bisimul problem pushdown automata petri net commut contextfre grammar basic parallel process simulationcheck sequenti system complex bisimul problem basic parallel process ctr richard mayr weak bisimilar regular contextfre process exptimehard theoret comput scienc v n p februari antonn kuera richard mayr simul preorder simpl process algebra inform comput v n p march antonn kuera complex bisimilaritycheck onecount process theoret comput scienc v n p juli antonn kuera petr janar equivalencecheck infinitest system techniqu result theori practic logic program v n p may