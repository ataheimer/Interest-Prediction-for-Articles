t waitfre synchron a waitfre implement concurr data object one guarante process complet oper finit number step regardless execut speed process problem construct waitfre implement one data object anoth lie heart much recent work concurr algorithm concurr data structur multiprocessor architectur first introduc simpl gener techniqu base reduct concensu protocol prove statement form waitfre implement x y deriv hierarchi object object one level waitfre implement term object lower level particular show atom readwrit regist focu much recent attent bottom hierarchi thay cannot use construct waitfre implement mani simpl familiar data type moreov classic synchron primit astestset fetchadd power read write also comput weak standard messagepass primit second nevertheless show exist simpl univers object one construct waitfre implement sequenti object b introduct concurr object data structur share concurr process algorithm implement concurr object lie heart mani import problem concurr system tradit approach implement object center around use critic section one process time allow oper object nevertheless critic section poorli suit asynchron faulttoler system faulti process halt delay critic section nonfaulti process also unabl progress even failurefre system process encount unexpect delay result page fault cach miss exhaust schedul quantum swap out similar problem aris heterogen architectur processor may inher faster other memori locat may slower access waitfre implement concurr data object one guarante process complet oper finit number step regardless execut speed process waitfre condit provid faulttoler process prevent complet oper undetect halt failur process arbitrari variat speed fundament problem waitfre synchron phrase follow given two concurr object x exist waitfre implement x y clear show waitfre implement exist one display it current literatur take approach exampl includ atom regist nonatom safe regist complex atom regist simpler atom regist readmodifywrit oper combin network type object queue set simpler object less clear show implement ex ist first part paper propos simpl new techniqu prove statement form there waitfre implement x deriv hierarchi object object one level implement object higher level see figur basic idea follow object associ consensu number maximum number process object solv simpl consensu problem system n concurr process show imposs construct waitfre implement object consensu number n object lower consensu number imposs result mean impli waitfre synchron imposs infeas second part paper show exist univers object one construct waitfre implement object give simpl test univ saliti show object univers system n process consensu number greater equal n figur object level n univers system n process machin architectur program languag comput power enough support arbitrari waitfre synchron provid univers object primit recent work waitfre synchron focus construct atom readwrit regist result address basic question regist good for use construct waitfre implement complex data structur show atom regist few ani interest applic area set atom regist show imposs construct waitfre implement common data type set queue stack prioriti queue list classic synchron primit testset compareswap fetchadd simpl memorytomemori oper move memorytomemori swap result suggest progress understand waitfre synchron requir turn attent convent read write oper fundament primit result also illustr inher limit certain multiprocessor architectur nyu ultracomput project investig architectur support waitfre implement common synchron primit use combin network implement fetchadd gener testset ibm rp project investig similar approach fetchadd oper quit flexibl use semaphor highli concurr queue even databas synchron nevertheless show univers disprov conjectur gottlieb et al also show messagepass architectur hypercub univers either paper organ follow section defin model com putat section present imposs result section describ univers object section conclud summari consensu object number readwrit regist testset swap fetchadd queue stack assign memorytomemori move swap augment queue figur imposs univers hierarchi model inform model comput consist collect sequenti thread control call process commun share data structur call object object type defin set possibl state set primit oper provid mean manipul object process appli sequenc oper ob ject issu invoc receiv associ respons basic correct condit concurr system lineariz although oper concurr process may overlap oper appear take effect instantan point invoc re spons particular oper overlap take effect realtim order io automata formal model object process use simplifi form io automata waitfre condit requir fair live condit consid finit set process object make use full power io automata formal nevertheless simplifi io automata provid conveni way describ basic structur model give basic definit mean one object implement anoth breviti later construct imposs result express less formal use pseudocod straightforward exercis translat notat io automata io automaton nondeterminist automaton follow ffl statesa finit infinit set state includ distinguish set start state ffl ina set input event ffl outa set output event ffl inta set intern event ffl stepsa transit relat given set tripl state e event tripl call step mean automaton state undergo transit state s transit associ event e step say e enabl io automata must satisfi addit condit input cannot disabl input event e state exist state step s execut fragment automaton finit sequenc infinit sequenc altern state event step a execut execut fragment start state histori fragment automaton subsequ event occur execut fragment histori subsequ occur execut new io automaton construct compos set compat io automata in paper consid finit composit set automata compat share output intern event state compos automaton tupl compon state start state tupl compon start state set event s eventss union compon set event set output event s out union compon set output event set intern event int union compon set intern event set input event s in in gamma out input event output event compon tripl s stepss if compon automata a one follow hold e event a project remain consist terminolog use event lynch tuttl use oper histori use schedul step onto step a e event a as state compon ident s note composit associ h histori composit automaton compon automaton h ja denot subhistori h consist event a concurr system concurr system set process set object process repres sequenti thread control object repres data structur share process process p io automaton output event invokep op x op oper object x input event re result valu refer event invoc respons two invoc respons match process object name agre captur notion process repres singl thread control say process histori wellform begin invoc altern match invoc respons invoc pend follow match respons object x input event invokep op x p process op oper object output event re x re result valu process object name uniqu ensur process object automata compat concurr system fp io automaton compos process p object compos identifi correspond invok respond event histori concurr system wellform h jp wellform concurr system wellform histori wellform henceforth restrict attent wellform concurr system execut sequenti first event invoc altern match invoc respons histori sequenti deriv sequenti execut notic sequenti execut permit process step interleav granular complet oper restrict attent sequenti histori behavior object specifi particularli simpl way give pre postcondit oper refer specif sequenti specif paper consid object whose sequenti specif total object pend invoc may also includ argument valu match enabl respons exampl partial deq might undefin appli empti queue total deq would return except restrict attent object whose oper total unclear interpret waitfre condit partial oper exampl natur way defin effect partial deq concurr system wait queue becom nonempti specif clearli admit waitfre implement histori h induc partial realtim order oe h opera tion op oe h op respons op preced invoc op oper unrel oe h said concurr h sequenti oe h total order let completeh denot maxim subsequ h consist invoc match respons concurr system lineariz if histori h exist sequenti histori that ffl word histori appear sequenti individu process appar sequenti interleav respect realtim preced order oper equival oper appear take effect instantan point invoc respons concurr object lineariz if everi histori h everi concurr system lineariz lineariz object thu equival sequenti object oper also specifi simpl pre postcondit henceforth object assum lineariz unlik relat correct condit sequenti consist strict serializ lineariz local properti concurr system lineariz individu object lineariz restrict attent lineariz concurr system implement implement object concurr system ff f call frontend r call represent object inform r data structur implement a f procedur call process p execut oper object implement shown schemat figur oe process invok oe respond oe frontend invok oe respond oe object r object figur schemat view object implement ffl extern event implement extern event a input event input event f output event output event ffl implement follow intern event input event r compos match output event f output event re r r compos match input event f ffl rule certain trivial solut frontend share event commun indirectli r let j implement j j correct everi histori h everi system fp exist histori h fp g hjfp g implement waitfre if ffl histori invoc p remain pend across infinit number step f ffl p pend invoc state s exist histori fragment start s consist entir event f r includ respons invoc first condit rule unbound busywait frontend cannot take infinit number step without respond invoc second condit rule condit wait f cannot block wait anoth process make condit true note found necessari make fair live assumpt waitfre implement guarante r eventu respond invoc f f eventu respond invoc p independ process speed implement bound waitfre exist n histori invoc p remain pend across n step f bound waitfre impli waitfre viceversa use waitfre condit imposs result bound waitfre condit univers construct breviti say r implement exist waitfre implement a immedi definit implement reflex partial order univers object rest paper investig mathemat structur implement relat next section introduc simpl techniqu prove one object implement anoth follow section display univers object capabl implement object imposs result inform consensu protocol system n process commun set share object fx g process start input valu domain d commun one anoth appli oper share object eventu agre common input valu halt consensu protocol requir be ffl consist distinct process never decid distinct valu ffl waitfre process decid finit number step ffl valid common decis valu input process purpos conveni express consensu problem use terminolog abstract data type consensu object provid singl oper decideinput valu returnsvalu protocol sequenti specif simpl decid oper return argument valu first decid cf plotkin stickybit common valu call histori decis valu waitfre lineariz implement consensu object call consensu protocol cf fisher lynch paterson investig circumst possibl construct consensu protocol particular object construct present paper use multireadermultiwrit regist addit object interest breviti say x solv nprocess consensu exist consensu protocol ff set readwrit regist w x may initi state consensu number x largest n x solv nprocess consensu largest n exist consensu number said infinit immedi consequ definit implement x x solv nprocess consensu also solv nprocess consensu theorem x consensu number n consensu number exist waitfre implement x system process proof note abov frontend object automata compat definit thu composit welldefin let ff consensu protocol k w set readwrit regi ter let ff implement x easili check waitfre composit associ ident ff composit f f sinc former consensu protocol latter contradict hypothesi consensu number m rest section consid number object display consensu protocol some imposs result other imposs proof usual assum exist consensu protocol deriv contradict construct sequenti execut forc protocol run forev construct consensu protocol particular lineariz object observ lineariz condit impli exist execut consensu fail either inconsist invalid run forev exist gammapsi read r run alon decid r decid x run alon figur p read first gammapsi xvalent state r yvalent state gammapsi r figur p q write differ regist equival sequenti execut properti consequ consensu protocol correct sequenti execut correct breviti protocol defin inform pseudocod translat io automata selfevid atom readwrit regist section show exist twoprocess consensu protocol use multireadermultiwrit atom regist first terminolog protocol state bival either decis valu still possibl ie current execut extend yield differ decis valu otherwis unival xvalent state unival state eventu decis valu x decis step oper carri protocol bival unival state theorem readwrit regist consensu number gammapsi r gammapsi gammapsi decid x run alon gammapsi decid run alon figur p q write regist proof assum exist twoprocess consensu protocol implement atom readwrit regist deriv contradict construct infinit sequenti execut keep protocol bival state process differ input valu valid condit impli initi state bival consid follow sequenti execut start initi state first stage p execut sequenc oper ie altern match invoc respons event reach state next oper leav protocol unival state p must eventu reach state sinc cannot run forev cannot block second stage q execut sequenc oper reach similar state success stage p q altern sequenc oper make decis step protocol cannot run forev must eventu reach bival state subsequ oper either process decis step suppos p s oper carri protocol xvalent state qs oper carri protocol yvalent state x distinct ffl suppos decis step one process say p read share regist figur let protocol state immedi follow read protocol histori fragment start s con rmwr regist f function returnsvalu previou r r fr return previou figur sist entir oper q yield decis valu y sinc state differ intern state p protocol histori fragment start imposs xvalent ffl suppos process write differ regist figur state result p s write immedi follow qs ident state result write occur opposit order imposs sinc one state xvalent yvalent ffl suppos process write regist figur let xvalent state immedi p s write exist histori fragment start consist entir oper p yield decis valu x let yvalent state reach qs write immedi follow p s p overwrit valu written q differ intern state q therefor protocol histori fragment start imposs sinc yvalent similar result shown loui abuamara chor isra li anderson gouda contribut lie follow corollari corollari imposs construct waitfre implement object consensu number greater use atom readwrit regist readmodifywrit oper decideinput valu returnsvalu preferp input return preferp els return preferq decid figur readmodifywrit twoprocess consensu kruskal rudolph snir observ mani all classic synchron primit express readmodifi write oper defin follow let r regist f function valu valu oper rmwr f inform defin procedur shown figur execut atom f iden titi rmwr f simpli read oper readmodifywrit oper nontrivi f ident function exampl wellknown nontrivi readmodifywrit oper includ testset swap compareswap fetchadd numer other given theorem regist nontrivi readmodifywrit oper consensu number least proof sinc f ident exist valu v v fv let p q two process share tworegist array prefer entri initi readmodifywrit regist r initi v p execut protocol shown figur qs protocol symmetr express term io automaton model readmodifywrit regist r object x prefer array set atom regist w pseudocod figur defin frontend automaton frontend three output event write rmw invoc sent r prefer decis valu return p similarli input event p s invoc decid respons write rmw invoc note abov r prefer lineariz suffic check correct sequenti execut oper commut two readmodifywrit oper appli r protocol choos p s input p s oper occur first qs input otherwis corollari imposs construct waitfre implement nontrivi readmodifywrit oper set atom readwrit regist system two process although readmodifywrit regist power readwrit regist mani common readmodifywrit oper still comput weak particular one cannot construct waitfre solut three process consensu use regist support combin read write testset swap fetchadd oper let f set function index arbitrari set s defin f interf valu v j s either f f j commut f f j one function overwrit other either f f j theorem waitfre solut threeprocess consensu use combin readmodifywrit oper appli function interf set f proof contradict let three process p q r proof theorem construct sequenti execut leav protocol bival state everi oper enabl p q decis step oper p carri protocol xvalent state oper q carri protocol yvalent state x distinct usual commut argument p q must oper regist say p execut let v current valu regist r two case consid first suppos f f j v state result p execut xvalent thu exist histori fragment consist entir oper r yield decis valu x let state result p q execut oper revers order sinc regist valu ident protocol histori fragment start contradict hypothesi yvalent second suppos f f j v state result p execut xvalent thu exist histori fragment consist entir oper r yield decis valu x let state result q alon execut oper sinc regist valu ident protocol compareswapr regist old valu new valu returnsvalu previou r previou old r new return previou figur compareswap histori fragment start contradict hypothesi y valent follow one cannot use combin classic primit construct waitfre implement object consensu number greater anoth classic primit compareswap shown figur primit take two valu old new regist current valu equal old replac new otherwis left unchang regist old valu return theorem compareswap regist infinit consensu number proof protocol shown figur process share regist r initi process attempt replac input decis valu establish process succe protocol clearli waitfre sinc contain loop consist follow follow observ r postcondit compareswap v assert r v stabl becom true remain true valid follow observ r r contain processs input corollari imposs construct waitfre implement compareswap regist set regist support combin read write testset swap fetchadd oper system three process decideinput valu returnsvalu first compareswapr input return input els return first decid figur compareswap nprocess consensu decideinput valu returnsvalu preferp input return preferp els return preferq decid figur fifo queue twoprocess consensu queue stack list etc consid fifo queue two oper enq place item end queue deq remov item head queue return error valu queue empti theorem fifo queue consensu number least proof figur show twoprocess consensu protocol queue initi enqueu valu follow valu abov process share twoelement array prefer p execut protocol shown figur qs protocol symmetr process dequeu item queue return prefer dequeu other prefer dequeu protocol waitfre sinc contain loop process return input must dequeu violat queue specif return other input must dequeu also violat queue specif let winner process dequeu valid follow observ winner posit prefer initi first queue oper trivial variat program yield protocol stack prioriti queue list set object oper return differ result appli differ order corollari imposs construct waitfre implement queue stack prioriti queue set list set atom readwrit regist although fifo queue solv twoprocess consensu cannot solv threeprocess consensu theorem fifo queue consensu number proof contradict assum consensu protocol process befor maneuv protocol state p q make decis step assum p s oper would carri protocol xvalent state qs yvalent state rest case analysi first suppos p q execut deq oper let protocol state p dequeu q dequeu let state dequeu occur opposit order sinc xvalent exist histori fragment s consist entir oper r yield decis valu x differ intern state p q thu protocol histori fragment contradict yvalent suppos p enq q deq queue nonempti contradict immedi two oper commut r cannot observ order occur queue empti yvalent state reach q dequeu p enqueu indistinguish r xvalent state reach p alon enqueu final suppos p q enq oper let state end follow execut p q enqueu item p q order run p dequeu p sinc way observ queue state via deq oper p cannot decid observ one p q run q dequeu q let state follow altern execut decideinput valu returnsvalu enqq input return peekq decid figur augment fifo queue nprocess consensu q p enqueu item q p order run p dequeu q run q dequeu p clearli xvalent yvalent p s execut ident dequeu p q sinc p halt modifi object qs execut also ident dequeu p q nowfamiliar argument contradict aris indistinguish r trivial variat argument appli show mani similar data type set stack doubleend queue prioriti queue consensu number messagepass architectur eg hypercub set processor commun via share fifo queue theorem impli messagepass architectur cannot solv threeprocess consensu implement object can dolev dwork stockmey give relat result pointtopoint fifo messag channel cannot solv twoprocess con sensu result impli theorem howev queue item unlik messag address particular process henc dequeu anyon augment queue let us augment queue one oper peek return remov first item queue theorem augment queue infinit consensu number proof protocol shown figur queue q initi empti process enqueu input decis valu input process whose enq occur first decideinput valu returnsvalu preferp input p n ri n return preferi decid figur memorytomemori move nprocess consensu usual protocol waitfre sinc contain loop consist follow follow observ the queue nonempti postcondit enq henc precondit peek v v first item queue stabl valid follow observ first item queue processs input corollari imposs construct waitfre implement augment queue set regist support combin read write testset swap fetchadd oper corollari imposs construct waitfre implement augment queue set regular queue fetchcon oper atom thread item onto front link list argument virtual ident one given theorem link list fetchcon infinit consensu number memorytomemori oper consid collect atom readwrit regist one addit oper move atom copi valu one regist anoth use express a b move content b a memorytomemori move confus assign former copi valu two public regist latter copi valu public privat regist theorem array regist move infinit consensu number proof nprocess consensu protocol appear figur process share two array prefern rn rp initi rp n protocol clearli waitfre sinc loop bound show consist use follow assert easili check pp qp sp stabl p pp qp mutual exclus sp true p execut statement si true execut statement say process p stabil sp hold claim pp hold p qq hold everi process q p stabil let p least process pp hold sinc rp rp must assign rp statement p execut statement q howev execut statement statement henc sq hold sinc pq fals hypothesi qq must hold moreov q assign rp assign everi rp thu p stabil defin termin assert follow stabl hold one process p finish first loop statement everi process greater equal p stabil satisfi done otherwis exist largest process p q stabil impli q hold p s protocol termin choos input uniqu q satisfi q sinc termin assert stabl process agre valid follow preferp must initi p becom true decideinput valu returnsvalu preferp input q n return preferq end decid figur memorytomemori swap nprocess consensu theorem array regist memorytomemori swap infinit consensu number proof protocol shown figur process share array regist an whose element initi singl regist r initi first process swap win protocol waitfre loop bound show consist consid follow assert p mean there exist uniqu p first assert invari second stabl becom true first swap follow process observ uniqu stabl p ap valid follow process initi posit prefer execut swap corollari imposs construct waitfre implement memorytomemori move swap set regist support combin read write testset swap fetchadd oper corollari imposs construct waitfre implement memorytomemori move swap set fifo queue memorytomemori swap confus readmodifywrit swap former exchang valu two public regist latter exchang valu public regist processor privat regist multipl assign express atom assign valu v regist r theorem atom mregist assign consensu number least m proof protocol use singlewrit regist r write regist r mmgamma multiwrit regist r ij j write regist r ij regist initi process atom assign input valu regist singlewrit regist regist decis valu protocol first valu assign assign regist process determin rel order assign two process p p j follow valu neither assign occur ffl otherwis read r r j r s valu p j preced p similarli r j ffl neither r r j reread r ij valu equal valu read r p j preced p els viceversa repeat procedur process determin valu written earliest assign result improv theorem atom mregist assign consensu number least proof consid follow twophas protocol process two singlewrit regist one phase pair process share regist divid process two predefin group gamma first phase group achiev consensu within use protocol theorem second phase process atom assign group valu phasetwo singlewrit regist regist share process group use order procedur describ abov process construct direct graph g properti edg p j p k p j p k differ group former assign preced latter locat sourc process least one outgo edg incom edg return processs valu least one process perform assign thu g edg let q process whose assign first linear order q sourc outgo edg everi process group thu process group also sourc therefor sourc process belong group algorithm optim respect number process theorem atom mregist assign consensu number exactli proof show atom mregist assign cannot solv gamma process consensu usual construct maneuv protocol bival state subsequ oper execut process decis step refer decis valu forc process default first show process must singlewrit regist alon write to suppos not let p q process distinct default x y let state reach p perform assign q perform assign process perform their p went first xvalent hypothesi everi regist written p overwritten anoth process let state reach p halt without write process execut order q wrote first yvalent exist histori fragment consist entir oper q decis valu x valu regist ident protocol histori fragment contradict yvalent next show p q distinct default valu must regist written two process suppos not let state reach p perform assign q perform assign follow process assign let state reach sequenc oper except p q execut assign revers order xvalent exist histori fragment consist oper p decis valu x everi regist written p q overwritten process regist valu henc protocol histori fragment contradict follow p default valu x k process differ default valu p must assign k regist default process must disagre least process process must must assign m regist last theorem show consensu irreduc follow sens imposs achiev consensu among n process combin protocol achiev consensu among n process possibl one could implement individu mprocess protocol use yield nprocess consensu protocol contradict theorem remark fischer lynch paterson shown exist twoprocess consensu protocol use messag channel permit messag delay reorder result impli theorem howev atom readwrit regist lack certain commut properti asynchron messag buffer in particular lemma hold dolev dwork stockmey give thorough analysi circumst consensu achiev messagepass consid effect thirtytwo combin paramet synchron vs asynchron processor synchron vs asynchron commun fifo vs nonfifo messag deliveri broadcast vs pointtopoint transmi sion whether send receiv distinct primit express terminolog model asynchron process synchron communi cation distinct send receiv primit model send receiv oper share messag channel object whether deliveri fifo whether broadcast support depend type channel result translat directli model imposs achiev twoprocess consensu commun share channel support either broadcast unord deliveri pointtopoint transmiss fifo deliveri broadcast order deliveri howev solv nprocess consensu safe readwrit regist one behav like atom readwrit regist long oper overlap read overlap write howev guarante made valu read sinc atom regist implement safe regist safe regist cannot solv twoprocess con sensu henc imposs result deriv atom regist appli equal safe regist similar remark appli atom regist restrict number reader writer loui abuamara give number construct imposs result consensu protocol use share readmodifywrit regist call testset regist among result show nprocess consensu n cannot solv readmodifywrit oper singlebit regist lamport give queue implement permit one enqueu process execut concurr one dequeu process minor chang implement transform waitfre implement use atom readwrit regist theorem impli lamport queue cannot extend permit concurr deq oper without augment read write oper power primit concurr object implement nonblock guarante process complet oper finit number step regardless rel execut speed process nonblock condit guarante system whole make progress despit individu halt failur delay waitfre implement necessarili nonblock viceversa sinc nonblock implement may permit individu process starv imposs univers result present paper hold nonblock implement well waitfre implement elsewher give nonblock implement fifo queue use read fetchadd swap oper permit arbitrari number concurr enq deq oper corollari impli queue implement cannot extend support nonblock peek oper without introduc power primit univers result object univers implement object section show object consensu number n univers system n or fewer process basic idea follow repres object link list sequenc cell repres sequenc oper appli object and henc object sequenc state process execut oper thread new cell end list cell becom suffici old reclaim reus construct requir on memori cell repres object on worstcas time execut oper assum cell hold integ unbound size present intend emphas simplic omit mani obviou optim let invoc object domain invoc result domain result state domain state object behavior may specifi follow relat appli ae invoc theta state theta state theta result specif mean appli oper p state leav object state return result valu r hp s ri appli appli relat rather function oper may nondeterminist breviti use notat applyp s denot arbitrari pair hs ri hp s ri appli algorithm object repres doublylink list cell follow field ffl seq cell sequenc number list field zero cell initi yet thread onto list otherwis posit sequenc number success cell list increas one ffl inv invoc oper name argument valu ffl new consensu object whose valu pair hnewstat newresulti first compon object state follow oper second oper result valu ani ffl pointer previou cell list field use free storag manag ffl consensu object whose valu pointer next cell list c cell function maxc d return cell higher sequenc number initi object repres uniqu anchor cell sequenc number hold creation oper initi state process share follow data structur ffl announc nelement array whose p th element pointer cell p current tri thread onto list initi element point anchor cell ffl head nelement array whose p th element pointer last cell list p observ initi element point anchor cell let maxhead maxhead denot assert pointer cell c assign head q q use follow auxiliari variabl set cell whose address store head array sinc p s last announc startp valu maxhead p s last announc notic that auxiliari variabl affect protocol control flow present facilit proof protocol process p shown figur figur v declar initi variabl v type valu e type cell mean pointer cell sequenc statement enclos angl bracket execut atom compound state ment first affect share data control flow remaind bookkeep oper updat auxiliari variabl readabl auxiliari variabl shown ital inform protocol work follow p alloc initi cell repres oper statement store pointer cell announcep statement ensur p succeed thread cell onto list process will locat cell near end list p scan head array set head p cell maxim sequenc number statement p enter main loop protocol statement execut cell thread onto list detect sequenc number becom non zero p choos process help statement check whether process unthread cell statement so p tri thread it otherwis tri thread cell if help step omit protocol would nonblock rather waitfre p tri set head p after point cell tri thread statement field must consensu cell ensur one process succe set it whether p succe initi remain field next cell list oper may nondeterminist differ process may tri set new field differ valu field must consensu object statement valu field comput determinist simpli written atom regist statement breviti say process thread cell statement decid oper alter valu field announc cell statement store cell address announc lemma follow assert invari proof jconcurp j n concurp includ success cell q r respect sequenc number equal thread process q r q concurp q thread q p s announc r cannot modifi unthread cell r read announcep statement q thread q follow r read announcep p s announc therefor either announcep alreadi thread r p lemma place bound number cell thread oper progress give sequenc lemma show p finish scan head array either announcep thread head p lie within cell end list lemma follow assert invari proof sequenc number head q nondecreas universalwhat invoc returnsresult mine cell seq inv what new createconsensu object befor createconsensu object after null process q end announcep c cell headp help cell announcecseq mod n prefer help els prefer announcep decidecaft prefer decidednew applydinv cnewstat dbefor hheadp hheadp return announcep newresult univers figur univers construct lemma follow loop invari statement maxhead p q loop index proof q assert impli lemma truth assert preserv iter head p replac maxhead p head q lemma follow assert hold statement head p seq startp proof loop statement maxhead p head head p seq result follow lemma lemma follow invari proof lower bound follow lemma upper bound follow equat theorem protocol figur correct bound waitfre proof lineariz immedi sinc order cell thread clearli compat natur partial order correspond oper protocol bound waitfre p execut main loop time iter head p seq increas one impli lemma impli announcep must thread memori manag section discuss cell alloc reclaim reclaim cell assum consensu object provid reset oper restor object state reus new round consensu construct reset consensu object concurr oper progress basic idea follow process execut oper travers cell thread theorem convers cell travers time process finish thread cell releas preced cell set bit cell releas recycl it cell hold addit field array releas n bit initi fals process complet oper scan set releasedi true cell distanc i process maintain privat pool cell process need alloc new cell scan pool reiniti first cell whose releas bit true assum object pool particular cell new sequenc number exce old sequenc number process p alloc new cell list repres object includ n gamma incomplet oper cell inhibit reclam n cell ensur p find need pool least n cell note locat free cell requir worst on read oper sinc process may scan cell cell requir read bit atom fetchadd oper avail counter use instead releas bit free cell locat on read oper proof lemma remain unchang lemma observ cell reclaim follow list least n cell henc reclaim cell cannot affect valu maxhead statement lemma need strengthen lemma follow assert hold statement proof p announc cell process q head q sequenc number greater equal startp cell reclaim n cell thread front it impli jconcurp j n henc announcep proof theorem proce befor one last detail check p s cell thread time finish scan head claim none cell travers reclaim oper progress lemma state list cannot grown n cell sinc p s announc thu everi cell reachabl lie within n cell end list announcep thread either case cell cannot reclaim p s oper progress sinc must least one releas bit unset remark first univers construct use unbound memori plotkin describ univers construct employ stickybyt regist kind writeonc memori plotkin construct cell alloc common pool reclaim way similar our author describ univers construct use compareswap current implement multiprocessor random waitfre implement concurr object one guarante process complet oper finit expect number step elsewher give random consensu protocol use atom regist whose expect run time polynomi number process protocol sever import implic waitfre guarante allow probabilist natur hierarchi shown figur collaps atom regist becom uni versal moreov combin random consensu protocol univers construct yield polynomialtim random univers con struction barnoy dolev adapt random consensu protocol messagepass model protocol use manag random waitfre replic data object conclus waitfre synchron repres qualit break tradit lockingbas techniqu implement concurr object tri suggest result theori rich structur yield number unexpect result consequ algorithm design multiprocessor architectur realtim system nevertheless mani interest problem remain unsolv littl known lower bound univers construct term time round consensu space number cell implement relat may addit structur shown imposs hierarchi figur exampl atom regist implement object consensu number system two process fetchadd implement object consensu number system three process implement relat differ structur bound waitfre waitfre nonblock synchron final littl known practic implement techniqu acknowledg grate jim aspn vladimir lanin michael merritt serg plotkin mark tuttl jennif welch anonym refere mani invalu suggest r virtu patienc concurr program without wait fast random consensu use share memori share memori vs messagepass asynchron distribut environ construct twowrit atom regist construct multiread atom valu nonatom valu processor coordin use asynchron hardwar minim synchron need distribut consensu ibm research parallel processor prototyp rp introduct architectur imposs distribut commit one faulti process nyu ultracomput design mimd parallel com puter basic techniqu effici coordin larg number cooper sequenti processor imposs univers result waitfre syn chroniz methodolog implement highli concurr data structur axiom concurr object concurr read write make multiprocessor comput correctli execut multiprocess program specifi concurr program modul interprocess commun concurr set manipul without lock ing memori requir agreement among unreli asynchron process introduct inputoutput au tomata protocol waitfre serializ concurr databas updat concurr read write concurr read write ii multiwrit case bit univers consensu cosmic cube elus atom regist revisit databas applic fetchandadd instruct atom share regist access asynchron hardwar tr cosmic cube minim synchron need distribut consensu effici synchron multiprocessor share memori axiom concurr object processor coordin use asynchron hardwar elus atom regist revisit construct multiread atom valu nonatom valu protocol waitfre atom multiread share variabl construct twowrit atom regist imposs univers result waitfre synchron bit univers consensu sharedmemori vs messagepass asynchron distribut environ fast random consensu use share memori methodolog implement highli concurr data structur imposs distribut consensu one faulti process concurr set manipul without lock serializ concurr databas updat concurr read write basic techniqu effici coordin larg number cooper sequenti processor specifi concurr program modul concurr read write ctr ted herman valeriu damianiordach spaceoptim waitfre queue proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state matei david brief announc singl enqueuer waitfre queue implement proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada john d valoi space bound transact synchron proceed fifteenth annual acm symposium principl distribut comput p may philadelphia pennsylvania unit state waikau lo martha j kosa lazywrit multivalu regist proceed fourteenth annual acm symposium principl distribut comput p august ottowa ontario canada jason liu david m nicol king tan lockfre schedul logic process parallel simul proceed fifteenth workshop parallel distribut simul p may lake arrowhead california unit state philippa tsiga yi zhang simpl fast scalabl nonblock concurr fifo queue share memori multiprocessor system proceed thirteenth annual acm symposium parallel algorithm architectur p juli crete island greec olin shiver jame w clark roland mcgrath atom heap transact finegrain interrupt acm sigplan notic v n p sept shenk consensu hierarchi robust proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state robert d blumof dionisio papadopoulo perform work steal multiprogram environ extend abstract acm sigmetr perform evalu review v n p june martha j kosa waitfre lazywrit regist eager reader proceed th annual southeast region confer p april m p herlihi j e b moss lockfre garbag collect multiprocessor ieee transact parallel distribut system v n p may hadzilaco note group mutual exclus proceed twentieth annual acm symposium principl distribut comput p august newport rhode island unit state jame h anderson mark moir univers construct multiobject oper proceed fourteenth annual acm symposium principl distribut comput p august ottowa ontario canada jame h anderson mark moir waitfre synchron multiprogram system integr prioritybas quantumbas schedul proceed eighteenth annual acm symposium principl distribut comput p may atlanta georgia unit state consensu number multiobject proceed seventeenth annual acm symposium principl distribut comput p june juli puerto vallarta mexico progress bound fair distribut comput v n p septemb mikhail fomitchev eric ruppert lockfre link list skip list proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada partha dutta rachid guerraoui ron r levi arindam chakraborti fast distribut atom read be proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada hkan sundel philippa tsiga scalabl lockfre concurr dictionari proceed acm symposium appli comput march nicosia cypru donald e porter owen s hofmann emmett witchel optim optimist concurr warrant proceed th usenix workshop hot topic oper system p may san diego ca gari l peterson rida a bazzi gil neiger gap theorem consensu type extend abstract proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state waikau lo vasso hadzilaco us smarter us waitfre hierarchi robust proceed twentyninth annual acm symposium theori comput p may el paso texa unit state tushar chandra vasso hadzilaco prasad jayanti sam toueg waitfreedom vs jon kleinberg sendhil mullainathan resourc bound combin consensu object proceed twelfth annual acm symposium principl distribut comput p august ithaca new york unit state waikau lo vasso hadziolaco power share object type implement oneresili consensu proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state richard j anderson primit asynchron list compress proceed fourth annual acm symposium parallel algorithm architectur p june juli san diego california unit state michael l scott william n scherer scalabl queuebas spin lock timeout acm sigplan notic v n p juli philippa tsiga yi zhang integr nonblock synchronis parallel applic perform advantag methodolog proceed rd intern workshop softwar perform juli rome itali paul atti waitfre byzantin consensu inform process letter v n p august jan friso groot wim h hesselink sjouk mauw rogier vermeulen algorithm asynchron writeal problem base process collis distribut comput v n p april simon doherti mauric herlihi victor luchangco mark moir bring practic lockfre synchron bit applic proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada linear assert proof distribut comput v n p octob dimitrio s nikolopoulo theodor s papatheodor quantit architectur evalu synchron algorithm disciplin ccnuma system case sgi origin proceed th intern confer supercomput p june rhode greec mark moir practic implement nonblock synchron primit proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state danni hendler nir shavit nonblock stealhalf work queue proceed twentyfirst annual symposium principl distribut comput juli monterey california rachid guerraoui benot garbinato karim r mazouni garf librari dsm consist model proceed th workshop acm sigop european workshop match oper system applic need septemb wadern germani jaeheon yang jame h anderson time bound mutual exclus relat problem proceed twentysixth annual acm symposium theori comput p may montreal quebec canada srikanth ramamurthi mark moir jame h anderson realtim object share minim system support proceed fifteenth annual acm symposium principl distribut comput p may philadelphia pennsylvania unit state waikau lo vasso hadzilaco power share object type implement oneresili consensu distribut comput v n p novemb liqiang wang scott d stoller static analysi atom program nonblock synchron proceed tenth acm sigplan symposium principl practic parallel program june chicago il usa john bruno jo brustoloni eran gabber avi silberschatz christoph small pebbl componentbas oper system embed applic proceed workshop embed system workshop embed system p march cambridg massachusett prasad jayanti robust herlihi hierarchi proceed twelfth annual acm symposium principl distribut comput p august ithaca new york unit state ramesh subramonian design synchron algorithm asynchron processor proceed fourth annual acm symposium parallel algorithm architectur p june juli san diego california unit state mage m michael high perform dynam lockfre hash tabl listbas set proceed fourteenth annual acm symposium parallel algorithm architectur august winnipeg manitoba canada hagit attiya eyal dagan univers oper unari versu binari proceed fifteenth annual acm symposium principl distribut comput p may philadelphia pennsylvania unit state svend frlund rachid guerraoui xabil theori replic proceed nineteenth annual acm symposium principl distribut comput p juli portland oregon unit state xiaozhou li c greg plaxton name resolut peertop network proceed second acm intern workshop principl mobil comput octob toulous franc rida a bazzi gil neiger gari l peterson use regist achiev waitfre consensu proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state hansj boehm almost nonblock stack proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada jame h anderson mark moir univers construct larg object ieee transact parallel distribut system v n p decemb mage m michael scalabl lockfre dynam memori alloc acm sigplan notic v n may n scherer iii doug lea michael l scott scalabl synchron queue proceed eleventh acm sigplan symposium principl practic parallel program march new york new york usa faith fich danni hendler nir shavit inher weak condit synchron primit proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada joseph s berrio manuel e bermudez use waitfre synchron design distribut applic futur gener comput system v n p januari lesli lamport arbitrationfre synchron distribut comput v n p septemb faith ellen fich danni hendler nir shavit inher weak condit primit distribut comput v n p march taisuk izumi toshimitsu masuzawa weaklyadapt conditionbas consensu algorithm asynchron distribut system inform process letter v n p decemb w craig scratchley use smalltalk waitfre implement highlyconcurr object acm sigplan oop messeng v n p oct yehuda afek michael merritt gadi taubenfeld power multiobject extend abstract proceed fifteenth annual acm symposium principl distribut comput p may philadelphia pennsylvania unit state alur hagit attiya gadi taubenfeld timeadapt algorithm synchron proceed twentysixth annual acm symposium theori comput p may montreal quebec canada stephen menk mark moir srikanth ramamurthi synchron mechan scramnet system proceed seventeenth annual acm symposium principl distribut comput p june juli puerto vallarta mexico frank stomp gadi taubenfeld construct reliabl testset bit ieee transact parallel distribut system v n p march prasad jayanti robust waitfre hierarchi journal acm jacm v n p juli j strother moor mechan check proof multiprocessor result via uniprocessor view formal method system design v n p march concurr memori manag creat read delet carud distribut comput v n p januari prasad jayanti farray implement applic proceed twentyfirst annual symposium principl distribut comput juli monterey california mage m michael hazard pointer safe memori reclam lockfre object ieee transact parallel distribut system v n p june jame h anderson yongjik kim gener localspin fetchandbas mutual exclus algorithm journal parallel distribut comput v n p may ruppert determin consensu number proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state yehuda afek gideon stupp dan touitou longliv adapt atom snapshot immedi snapshot extend abstract proceed nineteenth annual acm symposium principl distribut comput p juli portland oregon unit state mage m michael safe memori reclam dynam lockfre object use atom read write proceed twentyfirst annual symposium principl distribut comput juli monterey california tushar deepak chandra prasad jayanti king tan polylog time waitfre construct close object proceed seventeenth annual acm symposium principl distribut comput p june juli puerto vallarta mexico hagit attiya ari fouren adapt waitfre algorithm lattic agreement renam extend abstract proceed seventeenth annual acm symposium principl distribut comput p june juli puerto vallarta mexico juan alemani edward w felten perform issu nonblock synchron sharedmemori multiprocessor proceed eleventh annual acm symposium principl distribut comput p august vancouv british columbia canada dahlia malkhi michael merritt michael k reiter gadi taubenfeld object share byzantin process distribut comput v n p februari h gao j f groot w h hesselink lockfre dynam hash tabl open address distribut comput v n p juli guy e blelloch perri cheng phillip b gibbon room synchron proceed thirteenth annual acm symposium parallel algorithm architectur p juli crete island greec yehuda afek gideon stupp delimit power bound size synchron object extend abstract proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state weight content balanc network proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state j aspn m herlihi waitfre data structur asynchron pram model proceed second annual acm symposium parallel algorithm architectur p juli island crete greec mauric herlihi sergio rajsbaum set consensu use arbitrari object preliminari version proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state john d valoi lockfre link list use compareandswap proceed fourteenth annual acm symposium principl distribut comput p august ottowa ontario canada mauric p herlihi j e b moss lockfre garbag collect multiprocessor proceed third annual acm symposium parallel algorithm architectur p juli hilton head south carolina unit state jaaphenk hoepman marina papatriantafil philippa tsiga selfstabil waitfre share memori object journal parallel distribut comput v n p may danni hendler nir shavit operationval cost coordin proceed twentysecond annual symposium principl distribut comput p juli boston massachusett hagit attiya alla gorbach shlomo moran comput total anonym asynchron share memori system inform comput v n p march hkan sundel philippa tsiga fast lockfre concurr prioriti queue multithread system journal parallel distribut comput v n p may alur gadi taubenfeld fast timingbas algorithm distribut comput v n p juli michel raynal waitfre comput introductori lectur futur gener comput system v n p may hagit attiya rachid guerraoui danni hendler petr kouznetsov synchron without lock inher expens proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa h gao w h hesselink gener lockfre algorithm use compareandswap inform comput v n p februari ronald c unrau orran krieger benjamin gamsa michael stumm experi lock numa multiprocessor oper system kernel proceed st usenix confer oper system design implement pe novemb monterey california yehuda afek eytan weisberg hanan weisman complet theorem class synchron object proceed twelfth annual acm symposium principl distribut comput p august ithaca new york unit state michael sak fotio zaharogl waitfre ravi rajwar jame r goodman transact lockfre execut lockbas program acm sigop oper system review v n decemb danni hendler nir shavit operationval cost coordin proceed twentysecond annual symposium principl distribut comput p juli boston massachusett faith fich mauric herlihi nir shavit space complex random synchron proceed twelfth annual acm symposium principl distribut comput p august ithaca new york unit state victor luchangco mark moir nir shavit nonblock kcomparesingleswap proceed fifteenth annual acm symposium parallel algorithm architectur june san diego california usa simon doherti david l detlef lindsay grove christin h flood victor luchangco paul a martin mark moir nir shavit guy l steel jr dca silver bullet nonblock algorithm design proceed sixteenth annual acm symposium parallel algorithm architectur june barcelona spain rida a bazzi gil neiger gari l peterson use regist achiev waitfre consensu distribut comput v n p april michael merritt gadi taubenfeld atom mregist oper distribut comput v n p may rachid guerraoui marko vukoli fast robust read be proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa yehuda afek eli gafni adam morrison common extend stack unbound concurr proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa yehuda afek david s greenberg michael merritt gadi taubenfeld comput faulti share memori proceed eleventh annual acm symposium principl distribut comput p august vancouv british columbia canada manhoi choy ambuj k singh effici faulttoler algorithm distribut resourc alloc acm transact program languag system topla v n p may yehuda afek dalia dauber dan touitou waitfre made fast proceed twentyseventh annual acm symposium theori comput p may june la vega nevada unit state prasad jayanti lower bound local time complex univers construct proceed seventeenth annual acm symposium principl distribut comput p june juli puerto vallarta mexico jame h anderson srikanth ramamurthi kevin jeffay realtim comput lockfre share object acm transact comput system toc v n p may milto grammatikaki marcello coppola fabrizio sensini softwar multiprocessor network chip network chip kluwer academ publish hingham ma mauric herlihi beyond regist waitfre readabl object proceed twentieth annual acm symposium principl distribut comput p august newport rhode island unit state hansj boehm thread cannot implement librari acm sigplan notic v n june mauric herlihi victor luchangco paul martin mark moir nonblock memori manag support dynamics data structur acm transact comput system toc v n p may greg barn method implement lockfre shareddata structur proceed fifth annual acm symposium parallel algorithm architectur p june juli velen germani mauric herlihi benghong lim nir shavit low content load balanc largescal multiprocessor proceed fourth annual acm symposium parallel algorithm architectur p june juli san diego california unit state hagit attiya eyal dagan improv implement binari univers oper journal acm jacm v n p septemb kai shen hong tang tao yang adapt twolevel thread manag fast mpi execut share memori machin proceed acmiee confer supercomput cdrom pe novemb portland oregon unit state hong tang kai shen tao yang program transform runtim support thread mpi execut sharedmemori machin acm transact program languag system topla v n p juli edouard bugnion scott devin kinshuk govil mendel rosenblum disco run commod oper system scalabl multiprocessor acm transact comput system toc v n p nov alessandro panconesi marina papatriantafil philippa tsiga paul vitnyi random name use waitfre share variabl distribut comput v n p august mark burgess demosthen skipitari adapt lock frequent schedul task unpredict runtim proceed th usenix confer system administr octob san diego california yuhjzer joung asynchron group mutual exclus distribut comput v n p novemb panagiota fatour mauric herlihi readmodifywrit network distribut comput v n p februari wojciech golab danni hendler philipp woelfel o rmr leader elect algorithm proceed twentyfifth annual acm symposium principl distribut comput juli denver colorado usa hagit attiya fabian kuhn c greg plaxton mirjam wattenhof roger wattenhof effici adapt collect use random distribut comput v n p februari alysson neve bessani joni da silva fraga lau cheuk lung bt byzantin faulttoler tupl space proceed acm symposium appli comput april dijon franc daniel stodolski j bradley chen brian n bershad fast interrupt prioriti manag oper system kernel usenix symposium usenix microkernel kernel architectur symposium p septemb san diego california phuong hoai ha marina papatriantafil philippa tsiga selftun reactiv diffract tree journal parallel distribut comput v n p june nir shavit dan touitou softwar transact memori proceed fourteenth annual acm symposium principl distribut comput p august ottowa ontario canada elizabeth borowski eli gafni yehuda afek consensu power make some sens extend abstract proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state hagit brit shlomo moran waitfreedom vs bound waitfreedom public data structur extend abstract proceed thirteenth annual acm symposium principl distribut comput p august lo angel california unit state hagit attiya vita bortnikov adapt effici mutual exclus extend abstract proceed nineteenth annual acm symposium principl distribut comput p juli portland oregon unit state yehuda afek danni dolev eli gafni michael merritt nir shavit bound firstin firsten solut lexclus problem acm transact program languag system topla v n p may ole agesen david l detlef christin h flood alexand t garthwait paul a martin nir n shavit guy l steel jr dcasbas concurr dequ proceed twelfth annual acm symposium parallel algorithm architectur p juli bar harbor main unit state jame h anderson composit regist distribut comput v n p april alon michael merritt omer reingold gadi taubenfeld rebecca n wright tight bound share memori system access byzantin process distribut comput v n p decemb edouard bugnion scott devin mendel rosenblum disco run commod oper system scalabl multiprocessor acm sigop oper system review v n p dec hai huang padmanabhan pillai kang g shin improv waitfre algorithm interprocess commun embed realtim system proceed gener track usenix annual technic confer p june michel raynal gadi taubenfeld notion time regist applic indulg synchron proceed nineteenth annual acm symposium parallel algorithm architectur june san diego california usa hagit attiya ophir rachman atom snapshot on lorenz huelsbergen jame r laru concurr copi garbag collector languag distinguish immut data acm sigplan notic v n p juli soma chaudhuri mauric erlihi nanci a lynch mark r tuttl tight bound brian n bershad david d redel john r elli fast mutual exclus uniprocessor acm sigplan notic v n p sept gil neiger failur detector waitfre hierarchi extend abstract proceed fourteenth annual acm symposium principl distribut comput p august ottowa ontario canada grzegorz malewicz workoptim determinist algorithm asynchron certifi writeal problem proceed twentysecond annual symposium principl distribut comput p juli boston massachusett yoram mose sergio rajsbaum unifi structur consensu layer analysi guy e blelloch perri cheng bound time space multiprocessor garbag collect acm sigplan notic v n april mauric herlihi nir shavit asynchron comput theorem z m kedem k v palem m o rabin a raghunathan effici program transform resili parallel comput via random preliminari version proceed twentyfourth annual acm symposium theori comput p may victoria british columbia canada john tromp paul vitnyi random twoprocess waitfre testandset distribut comput v n p juli mauric herlihi random waitfre concurr object extend abstract proceed tenth annual acm symposium principl distribut comput p august montreal quebec canada mari hall peter kogg jeff koller pedro diniz jacquelin chame jeff draper jeff lacoss john granacki jay brockman apoorv srivastava william atha vincent freeh jaewook shin joonseok park map irregular applic diva pimbas dataintens architectur proceed acmiee confer supercomput cdrom pe novemb portland oregon unit state yehuda afek hagit attiya danni dolev eli gafni michael merritt nir shavit atom snapshot share memori journal acm jacm v n p sept nir shavit eli upfal asaph zemach waitfre sort algorithm proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state yehuda afek hagit attiya ari fouren gideon stupp dan touitou longliv renam made adapt proceed eighteenth annual acm symposium principl distribut comput p may atlanta georgia unit state steven l scott synchron commun te multiprocessor acm sigplan notic v n p sept nir shavit asaph zemach diffract tree preliminari version proceed sixth annual acm symposium parallel algorithm architectur p june cape may new jersey unit state prasad jayanti tushar deepak chandra sam toueg faulttoler waitfre share object journal acm jacm v n p may mer eeciolu ambuj k singh name symmetr process use share variabl distribut comput v n p august mauric herlihi imposs result asynchron pram extend abstract proceed third annual acm symposium parallel algorithm architectur p juli hilton head south carolina unit state freudenth allan gottlieb process coordin fetchandincr acm sigplan notic v n p apr panagiota fatour faith fich eric ruppert spaceoptim multiwrit snapshot object slow proceed twentyfirst annual symposium principl distribut comput juli monterey california prasad jayanti time complex lower bound random implement share object proceed seventeenth annual acm symposium principl distribut comput p june juli puerto vallarta mexico yehuda afek michael merritt gadi taubenfeld dan touitou disentangl multiobject oper extend abstract proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state hong tang kai shen tao yang compileruntim support thread mpi execut multiprogram share memori machin acm sigplan notic v n p aug jame h anderson multiwrit composit regist distribut comput v n p may hani e ramadan christoph j rossbach donald e porter owen s hofmann aditya bhandari emmett witchel metatmtxlinux transact memori oper system acm sigarch comput architectur new v n may yehuda afek gideon stupp dan touitou long live adapt splitter applic distribut comput v n p april mauric herlihi methodolog implement highli concurr data object acm transact program languag system topla v n p nov p d v van der stok a h t janssenraemaek realtim atom multicast algorithm implement share memori multiprocessor realtim system v n p januari taisuk izumi akinori saitoh toshimitsu masuzawa adapt timeli consensu presenc crash time fault journal parallel distribut comput v n p june faith fich mauric herlihi nir shavit space complex random synchron journal acm jacm v n p sept paul c atti e allen emerson synthesi concurr program atom readwrit model comput acm transact program languag system topla v n p march yonatan aumann michael a bender effici lowcontent asynchron consensu valueoblivi adversari schedul distribut comput v n p march gunnar hoest nir shavit toward topolog character asynchron complex proceed sixteenth annual acm symposium principl distribut comput p august santa barbara california unit state phillip b gibbon ephraim korach test cachecoher share memori proceed sixth annual acm symposium parallel algorithm architectur p june cape may new jersey unit state panagiota fatour faith fich eric ruppert tight time lower bound spaceoptim implement multiwrit snapshot proceed thirtyfifth annual acm symposium theori comput june san diego ca usa hagit attiya faith ellen fich yaniv kaplan lower bound adapt collect relat object proceed twentythird annual acm symposium principl distribut comput juli st john newfoundland canada michael hick greg morrisett dan grossman trevor jim experi safe manual memorymanag cyclon proceed th intern symposium memori manag octob vancouv bc canada mauric herlihi sergio rajsbaum classif waitfre loop agreement task theoret comput scienc v n p januari hagit attiya keren censor tight bound asynchron random consensu proceed thirtyninth annual acm symposium theori comput june san diego california usa svend frlund rachid guerraoui implement etransact asynchron replic ieee transact parallel distribut system v n p februari jame aspn gauri shah jatin shah waitfre consensu infinit arriv proceed thiryfourth annual acm symposium theori comput may montreal quebec canada hagit brit shlomo moran gadi taubenfeld public data structur counter special case theoret comput scienc v n p octob mauric herlihi nir shavit topolog structur asynchron comput journal acm jacm v n p nov hagit attiya ari fouren algorithm adapt point content journal acm jacm v n p juli hagit attiya nanci lynch nir shavit waitfre algorithm fast journal acm jacm v n p juli mauric herlihi sergio rajsbaum decid distribut decis task extend abstract proceed twentyninth annual acm symposium theori comput p may el paso texa unit state dimitrio s nikolopoulo theodor s papatheodor architectur oper system implic perform synchron ccnuma multiprocessor intern journal parallel program v n p june achour mostefaoui sergio rajsbaum michel raynal condit input vector consensu solvabl asynchron distribut system proceed thirtythird annual acm symposium theori comput p juli hersonisso greec jame aspn lower bound distribut coinflip random consensu proceed twentyninth annual acm symposium theori comput p may el paso texa unit state nir shavit asaph zemach diffract tree acm transact comput system toc v n p nov nimar s arora robert d blumof c greg plaxton thread schedul multiprogram multiprocessor proceed tenth annual acm symposium parallel algorithm architectur p june juli puerto vallarta mexico yehuda afek david s greenberg michael merritt gadi taubenfeld comput faulti share object journal acm jacm v n p nov hagit attiya ari fouren eli gafni adapt collect algorithm applic distribut comput v n p april cynthia dwork mauric herlihi orli waart content share memori algorithm proceed twentyfifth annual acm symposium theori comput p may san diego california unit state jame aspn lower bound distribut coinflip random consensu journal acm jacm v n p may hagit attiya mauric herlihi ophir rachman atom snapshot use lattic agreement distribut comput v n p march gregori chockler dahlia malkhi activ disk paxo infinit mani process proceed twentyfirst annual symposium principl distribut comput juli monterey california hagit attiya amotz barnoy danni dolev share memori robustli messagepass system journal acm jacm v n p jan henri g baker live linear lisp look ma garbag acm sigplan notic v n p aug philipp charl christian grothoff vijay saraswat christoph donawa allan kielstra kemal ebcioglu christoph von praun vivek sarkar x objectori approach nonuniform cluster comput acm sigplan notic v n octob achour mostefaoui sergio rajsbaum michel raynal condit input vector consensu solvabl asynchron distribut system journal acm jacm v n p novemb guoj cong david a bader design irregular parallel algorithm mutual exclus lockfre protocol journal parallel distribut comput v n p june gregori chockler dahlia malkhi activ disk paxo infinit mani process distribut comput v n p juli marco k aguilera pleasant stroll land infinit mani creatur acm sigact new v n june henri g baker useonc variabl linear object storag manag reflect multithread acm sigplan notic v n p jan cynthia dwork mauric herlihi orli waart content share memori algorithm journal acm jacm v n p nov jame aspn orli waart composit competit distribut algorithm journal algorithm v n p februari jame aspn random protocol asynchron consensu distribut comput v n p septemb henri g baker linear logic permut stacksth forth shall first acm sigarch comput architectur new v n p march faith fich eric ruppert hundr imposs result distribut comput distribut comput v n p septemb