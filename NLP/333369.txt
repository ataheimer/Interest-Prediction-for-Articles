t model hardwar synthesi methodolog isabel a formal synthesi methodolog develop univers kent combin circuit design verif circuit construct proof meet given formal specif reinterpret methodolog isabel theori higherord logic circuit increment built proof use higherord resolut interpret simplifi extend formal synthesi conceptu implement also support integr develop style proofbas synthesi methodolog lead techniqu develop new class circuit eg recurs descript parametr design b introduct verif formal proof time intens burden bring formal method softwar hardwar design one approach reduc verif burden combin develop verif use calculu develop step either guarante correct or sinc proof step parallel design step allow earli detect design error present approach here use resolut synthes circuit design proof correct approach base model particular methodolog hierarch design develop within synthesi resolut framework start point novel methodolog hardwar synthesi call formal synthesi propos verita group kent formal synthesi one start design goal specifi behavior properti circuit construct interact refin design use small power set techniqu allow develop hierarch decompos specif introduc subdesign librari compon natur way intern techniqu consist pair function subgoal function valid function former decompos specif spec sub specif spec latter take proof circ achiev spec construct implement circ proof circ achiev spec refin finish system compos valid function appli construct theorem synthes circuit satisfi origin design goal make clearer consid one simpler techniqu call split subgoal function reduc design goal spec spec two new design goal one conjunct valid function base rule explain combin implement achiev subgoal implement achiev origin goal kind topdown problem decomposit spirit lcf style tactic design good set techniqu analog design appropri set tactic problem domain howev tactic decompos goal subgoal valid prove origin goal wherea techniqu valid prove differ theorem altogeth formal synthesi separ design goal techniqu ordinari theoremprov goal tactic conceptu separ differ sort entiti differ semant moreov treat differ implement formal synthesi requir extend verita theorem prover itself show reinterpret formal synthesi deduct synthesi base higherord resolut thi begin final theorem formal synthesi valid deliv circuit achiev state specif howev circuit given front instead name metavari proof proce appli rule isabel correspond verita valid rule like rule applic use resolut metavari abl increment instanti synthes circuit let us illustr split techniqu goal simplifi slightli prove theorem like circspec question mark mean circ metavari spec conjunct spec spec resolv circspec spec rule result substitut circ imp imp subgoal imp spec imp spec refin subgoal gener instanc imp henc circ number advantag reinterpret conceptu simpl away subgoal valid function let resolut construct circuit simpl implement chang requir isabel system instead deriv rule program tactic appropri extens isabel theori higherord logic hol moreov reinterpret make easi implement new techniqu compat formal synthesi style develop past work rule tactic synthesi logic program program similar circuit describ conjunct combin primit relat existenti quantif use pass valu move formal synthesi similar theorem prove set could adapt appli mani tactic rule logic program synthesi circuit synthesi exampl rule develop recurs program yield new techniqu develop parameter class circuit also exhibit cf section kind rule use resolutionbas develop lambda system compat reinterpret background assum familiar isabel higherord logic space limit restrict us review notat essenti isabel interact tacticbas theorem prover logic encod isabel metalog declar theori signatur set axiom exampl proposit logic might type f orm formula constructor like typic proof rule would b b implic univers quantif isabel metalog outermost metaquantifi often omit iter implic written readabl list notat eg b implicitli quantifi variabl treat metavari instanti appli rule use higherord unif work use isabel theori higherord logic extend theori set well found recurs natur number like isabel support proof construct higherord resolut given proof state subgoal proof rule unifi oe succe unif yield substitut oe proof state updat appli oe replac subgoal oeoe unif use appli rule proof state may contain metavari use synthes circuit proof note proof rule read intuitionist sequent oe hypothes isabel resolut tactic appli rule way maintain illus work sequent often refer oe assumpt verita tactic base theorem prover similar isabel hol higherord logic augment construct type theori eg standard type constructor depend function space product subtyp use reason hardwar one prove theorem relat circuit circ specif spec eg extern port name common hardwar repres relat primit constructor eg transistor gate etc relat combin conjunct wire togeth use existenti quantif variabl p type primari differ verita similar system one use richer type specif exampl defin circuit oper bit word would formal requir wordlength type formal synthesi formal synthesi base techniqu previous indic techniqu combin subgoal function valid valid execut deriv complet build proof circuit achiev im plement give techniqu introduc notat use formal synthesi design specif spec implement written spec symbol relationship modal logic formula thm prove written thm term tm demonstr well type written tm proof verita associ support name subgoal rule valid rule impspec reveal dec spec dec impdecspec insid circ b dec spec port librari librari part arg librari part argslibrari part arg subdesign spec let c b design subdesign arg subdesign argssubdesign arg proof thm pitm thm tm tabl verita design techniqu signatur contain theori use eg datatyp definit definit predic like verita signatur extend dynam proof techniqu extend signatur goal spec written extensionspec final initi design goal must form circ name assign circuit eight techniqu adequ develop combin circuit structur hierarch way subgoal valid function base rule subgoal rule read top down implement goal line solv subgoal line valid rule oper opposit direct goal line establish proof goal line rule behav follow claim subgoal function yield new design goal spec subgoal suffic spec valid base transit split subgoal function decompos conjunct specif problem implement conjunct valid construct design design two subpart reveal shift intern quantifi port signatur allow refin insid sinc initi design goal given lambda abstract techniqu need remov bind implement circuit circ mean implement specif spec valid theorem state implement correct portvalu appear port port declar declar dec librari subgoal function import compon databas predefin circuit valid correspond use lemma subdesign subdesign submit lambda abstract may intro duce must implement second subgoal may use prove origin design goal first subgoal design like librari techniqu enabl user appli design alreadi implement case implement subdesign introduc design process proof verita use prove theorem implement extens describ reinterpret formal synthesi isabel divid present sever part roughli correspond isabel theori implement circuit abstract concret technolog techniqu reinterpret new techniqu circuit abstract concret technolog repres circuit relat portvalu model kind signal set use isabel set theori in hol imit depend type verita logic henc quantifi use encod bound quantifi isabel set theori name connect serv constructor circuit follow definit say type p w shortli definit deriv rule character oper use rule subsequ proof rather expand definit exampl use properti conjunct implic deriv henc guarante correct isabel follow rule relat join sat associ definit character theorem increas comprehens provid abstract chang definit reus theori provid character theorem still deriv definit second function distinguish circuit constructor proposit connect restrict resolut eg join unifi make easier write tactic autom design use abstract express correct to synthes circuit respect specif quit adequ though simul formal synthesi style proof small problem applic techniqu reveal insid subdesign extend verita signatur direct analog dynam signatur extens isabel model reveal insid use bound quantif achiev effect similar signatur extens ad declar inform assumpt proof state accord rule set theori subdesign verita extend signatur new definit slightli trickier model regard new definit condit necessari valid correct theorem express condit use ordinari implic cours state initi goal yet know definit made use metavari leav unknown thu theorem prove take initi form analog formal synthesi design goal call theorem design theorem constant simpli ident function defdefinit serv kind definit context time definit made definit instanti conjunct definit fresh metavari instanti definit made later design theorem wire bound type type defin theori concret technolog eg represent voltag signal like simpl instanc port valu rang datatyp bin voltag take either valu lo hi use isabel hol set theori defin set bin contain two element afterward deriv standard rule bin eg caseanalysi binari valu extend theori tactic autom common kind reason binari valu exampl tactic perform exhaust analysi port valu quantifi bin tactic combin case analysi isabel simplifi heurist base proof procedur fast tac hol tactic autom almost standard kind reason combin circuit extend voltag theori theori gate declar type gate axiomat behavior exampl gate predic type bin bin bin bool whose behaviour axiomat axiom form part librari circuit specif use synthes part circuit reinterpret techniqu implement tactic simul first seven techniqu for proof techniqu simpli call prover tabl list tactic deriv rule correspond verita techniqu tactic base reveal reveal tac insid insid tac librari librari tac del elim thm subdesign subdesign tac str design design tac del elim tabl isabel techniqu name tactic rule deriv rule correspond valid rule associ verita techniqu function mostli self explanatori claim split tactic appli rule direct translat correspond verita valid rule specif spec suppli string str claim tac reveal insid ident verita techniqu except intern wire quantif port convert quantif metalevel type constraint express isabel hol settheori becom assumpt rule state implement satisfi spec ific wire signal port insid hide intern wire reveal reveal tac insid tac appli respect rule mani time possibl specifi goal librari librari tac solv design goal r use previous implement design suppli user rule form implic elimin first subgoal instanti compon design theorem second solv extend definit context overal design third establish correct design use specif librari compon involv type check port depend concret technolog design henc suppli tactic addit elimin delet rule solv type check goal subdesign given inform rule schema the other formal deriv repres infinit mani rule there arbitrarili mani quan tifier indic ellips subdesign tac simul effect appli rule user give design goal subdesign implement form initi goal three new subgoal gener tactic first correspond subdesign definit tactic discharg ad definit context main design second subgoal commit us implement subdesign third allow us use subdesign prove origin subgoal design solv design goal use previous introduc subdesign subdesign given design goal part assumpt goal solv tactic remov port quantifi assumpt repeatedli appli associ rule port new subgoal gener concern type port solv librari techniqu henc provid list type check rule tactic proof gener proof goal aris applic claim rule undecid gener must proven user extens calculu techniqu defin formal synthesi effect develop combin circuit howev nontrivi circuit often best develop instanc parametr design exampl rather design bit adder prefer develop one parameter wordlength afterward comput particular instanc develop new techniqu compat reinterpret formal synthesi construct parameter circuit structur induct use build parameter linear circuit gener ndimension grid courseofvalu induct use build gener recurs defin design consid courseofvalu induct later appli build treestructur addit circuit idea extens motiv previou work calculi isabel synthes recurs logic program develop rule tactic base induct extend definit context templat a function predic name metavari stand bodi recurs definit leav user goal prove use induct hypothesi build recurs program past work much common techniquebas calculu circuit syntact logic program circuit similar describ conjunct combin primit relat existenti quantif pass val ue turn could with minor adapt directli use rule tactic develop synthes logic program build recurs circuit find kind reus concept also actual rule tactic attract advantag interpret differ synthesi methodolog common framework address point section consid techniqu develop lambda system also appli formal synthesi set construct parameter circuit prove parameter design the orem design theorem outermost quantifi or quantifi rang induct defin datatyp like natur number eg specifi implement whose size depend number n use induct instanti circ recurs specifi design isabel hol come theori natur number given induct definit easi deriv follow courseofvalu induct rule use rule basi tactic cov induct tac function follow rule schema appli rule appli higherord resolut spec unifi specif design theorem circ metavari stand circuit first subgoal set parameter circuit definit equal circ defin equal definit metavari tactic discharg subgoal ad definit main design leav us second goal design goal howev build circuit name definit instanti subsequ proof step instanti definit circ moreov new assumpt the induct hypothesiswhich state circ achiev spec smaller valu k reduc problem implement smaller design resolv induct hypothesi build recurs design instanti definit bodi circ instanc circ work practic becom clearer section parameter specif requir parameter input type eg rather input port parameter input buss support develop theori buss encod list specifi length there possibl allow us directli use isabel list theori definit follow bu b bu n list length n whose member set b function upper lower return upper lower n bit when exist bu b ln return nth element bu proven mani standard fact definit eg decompos buss exampl present two exampl first exampl compar develop use formal synthesi illustr directli mimic formal synthesi creat hierarch design second exampl use induct construct parameter treeshap adder compar cell compar take input two word b repres numer determin rel order ie three case b hold circuit built ripplecarri fashion compar cell cell lefthand figur figur compar bit b also input three bit one case result previou comparison grin eqin lsin output three bit grout eqout lsout behavior specif is compcellsa b grin eqin lsin grout eqout lsout function vl defin theori binari valu submit follow design theorem isabel port abin bbin grinbin eqinbin lsinbin groutbin eqoutbin lsoutbin compcellsa b grin eqin lsin grout eqout lsout appli initi tactic set design goal implic introduct which move definit context assumpt list appli insid tactic yield follow proof state we elid inform type port compcellsa b grin eqin lsin grout eqout lsout b grin eqin lsin grout eqout lsout grin eqin lsin grin eqin lsin b b bitcomp compcel lsout eqout grout grout eqout lsout fig compcel claim implement origin goal given firstthre line contain two metavari circ h stand implement compcel definit made respect also present follow line which contain subgoal must establish prove origin goal instanti prove subgoal next introduc new subdesign bitcomp use compon idea first compar two bit b repres current digit combin result comparison inform come comparison less signific bit give result specif bitcomp subdesign follow appli subdesign tac yield two subgoal top see origin goal definit context h extend definit bitcomp new metavari g definit first subgoal design theorem subdesign second origin design theorem addit assumpt implement subdesign satisfi specif bitcomp port abin bbin grbin eqbin lsbin compcellsa b grin eqin lsin grout eqout lsout b grin eqin lsin grout eqout lsout bitless bitless bitcomp bitless ls eq gr z x fig claim implement bitcomp bitless given subdesign use claim tac state follow specif entail origin goal figur ex grbin eqbin lsbin xbin ybin andseq eqin eqout andseq lsin ls orsl y lsout due space limit sketch remain proof first show claim specif entail origin one prove automat use tactic perform caseanalysi simplif after implement use reveal tac strip existenti quantif and introduc intern wire use split tac break conjunct and join togeth subcircuit compon implement either introduc simpler subdesign implement see below use librari tac access appropri librari part use design tac appli develop subdesign let us sketch one remain task implement subdesign bitcomp proceed manner earlier introduc new subdesign bitless build bitcomp use bitless twice shown figur final bitlesss simpl claim direct implement consist compon librari step design theorem prove follow port xbin ybin zbin bitlessx y y z andeq eqin eqout join andeq lsin ls join orl y lsout sat compcellsa b grin eqin lsin grout eqout lsout metavari h becom instanti conjunct definit subdesign use implement main design goal ie bitcomp bitless main goal unknown circ becom predic repres structur desir circuit built subdesign addit gate overal proof build circuit use ident sequenc techniqu applic present differ much techniqu appli rather underli conceptu implement verita system implement construct end proof valid function wherea set design take shape increment proof find advantag sinc directli see effect design decis taken carri lookahead adder second exampl illustr wellfound induct techniqu synthes parameter design synthes carri lookahead adder henceforth claadder parametr bitwidth n nbit number adder height proport logn thu comput sum carri co two number a b incom carri c ologn time instead propag carri digit digit done ripplecarri adder comput detail inform cf gener bit g indic carri gener ad digit b propag bit indic incom carri hand through inform obtain carri bit co adder follow way hi hi carri lookahead adder implement roughli speak recurs decompos two adder half size origin propag gener bit overal adder obtain combin correspond bit subpart incom carri c case ad singl digit b the base case recurs propag bit correspond logic gener bit correspond logic digit adder synthes built two compon figur first cla comput sum s propag bit p gener bit g number b incom carri c second auxiliari compon aux use combin propag bit gener bit incom carri outgo carri co compon consist two gate deriv step focu develop interest compon cla specifi behavior use data abstract arithmet express clasnabspgci case g hi note number repres buss ie bit vector valu bu natur number given val assum buss nonzero length henc follow design theorem restrict induct set nnat natur number greater zero bu n bbin bu n sbin bu n pbin gbin cibin n cla carri lookahead adder aux b ci aux co x fig implement claadder two compon befor begin shift definit environ defh as sumption after appli courseofvalu induct tactic yield follow proof state bu n bbin bu n sbin bu n pbin gbin cibin clan a b s p g all nnnat port abin bu n bbin bu n sbin bu n pbin gbin cibin clan a b s p g ci sat clasn a b s p g ci n port abin bu clak a b s p g ci sat clask a b s p g ci abin bu n bbin bu n sbin bu n pbin gbin cibin dn a b s p g ci sat clasn a b s p g ci previous describ h extend definit templat definit collect q metavari lefthand side definit serv name design defin metavari righthand side instanti implement prove subgoal induct hypothesi ad assumpt subgoal may assum implement k less n use build circuit size n proceed perform case analysi n type byiftac n resolv subgoal rule p instanti bu n bbin bu n sbin bu n pbin gbin cibin clan a b s p g clabas b cla c c aux aux carri carri c lower upper lower lower upper l l l b u u b u cla fig base case left recurs decomposit middleright all nnnat port abin bu n bbin bu n sbin bu n pbin gbin cibin clan a b s p g ci sat clasn a b s p g ci n b p g ci port abin bu clak a b s p g ci sat clask a b s p g ci abin bu n bbin bu n sbin bu n pbin gbin cibin cn a b s p g ci sat clasn a b s p g ci n b p g ci port abin bu clak a b s p g c sat clask a b s p g ci abin bu n bbin bu n sbin bu n pbin gbin cibin n cn a b s p g ci sat clasn a b s p g ci overal design goal righthand side definit instanti condit whose altern c c respect implement base step case former implement prove subgoal assumpt latter prove subgoal assumpt n base case solv subdesign cla base figur simpl step step case build adder two smaller adder half size decompos buss a b segment lowern div contain inferior n div bit bu segment uppern div nmod contain remain bit lower upper segment b ad adder bitwidth n div n div nmod yield lower upper segment sum s propag gener carri bit overal adder carri flow lower upper part adder comput addit circuitri collect new subdesign accordingli reformul specif compon cla follow claimtac ex pbin ex gbin ex pbin ex gbin ex cbin clasn div lowern div a lowern div b lowern div s p g c clasn proof new specif entail origin accomplish automat tactic implement perform exhaust case analysi valu carri propag gener bit perform simplif arithmet express decompos new specif subpart implement recurs occurr specif cla use induct hypothesi done appli design tac twice remain specif carri solv new subdesign implement shown figur note reus formerli develop aux here thu design goal solv step finish bu n bbin bu n sbin bu n pbin gbin cibin clan a b s p g wire pbin gbin pbin gbin cbin clan div lowern div a lowern div b lowern div s p g ci join port abin bbin sbin pbin gbin cibin wire wbin xora b w join xorw ci s join ora b p join anda b port pbin gbin pbin gbin cbin pbin gbin cibin port ubin vbin wbin xbin all nnnat port abin bu n bbin bu n sbin bu n pbin gbin cibin clan a b s p g ci sat clasn a b s p g ci definit context h becom instanti four definit one one correspond implement shown figur predic defin them comparison conclus combin two develop methodolog formal synthesi implement verita resolut base synthesi isabel result simpl realiz formal synthesi compat approach resolut base synthesi moreov implement support structur behavior dataabstract well independ concret circuit technolog implement base seri extens higherord logic abl directli util standard isabel theori work well isabel simplif tactic deriv rule proven one step proof isabel classic prover idea use firstord resolut build program goe back green recent within system like isabel interact proof higherord resolut use construct verifi program hardwar design work close relat mike fourman group base lambda system proof develop system support synthesi base secondord resolut motiv isabel use rule order repres design state differ lie particular approach use proof construct instead use gener purpos techniqu formal synthesi deriv intro duction rule compon definit rule appli proof state order simplifi specif therebi refin implement special form rule support higher degre autom gener purpos techniqu convers gener formal synthesi techniqu provid abstract view design process better support hierarch develop extend formal synthesi techniqu induct possibl adapt methodolog within set carri initi experi indic use formal synthesi techniqu synthes lambda style design rule rule combin techniqu circuit develop simpl illustr suppos axiom adder circuit given appli techniqu synthes partial implement schemat specif spec contain subexpress form anat bnat circab sat specab appli techniqu insid claim reveal split solv proof oblig claim arriv follow intermedi proof state anat bnat wire snat a b s anat bnat snat discharg first subgoal assum remov port quan tifier arriv lambdastyl design rule anat bnat explain techniqu say reduc specif involv addit b one instead involv s valid tell us end mani proof develop system mani strategi construct proof circuit built spec hook appropri adder build circuit origin specif would difficult build tactic enabl us integr lambda techniqu other develop take advantag differ strength two approach conclud brief mention defici futur work current amount inform present proof overwhelm shortterm solut instruct isabel elid inform howev graphic interfac like lambda would tremend valu display design give specif anoth weak autom autom mani simpl kind reason combin isabel simplifi caseanalysi binari valu result tactic effect execut slow decis procedur base bdd effect solv mani problem start integr one synthesi environ name decis procedur decid monad logic wellsuit model hardwar hope step toward synthesi framework differ verif methodolog may integr r logic framework logic program hardwar verif use monad secondord logic hardwar verif use higherord logic interact program deriv formal system design interact synthesi base computerassist formal reason applic theorem prove problem solv formal synthesi digit sy tem comput architectur isabel gener theorem prover tr