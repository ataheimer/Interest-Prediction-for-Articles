t support scalabl perform monitor analysi parallel program a tool perform monitor analysi becom indispens part program environ parallel comput number processor increas convent techniqu monitor perform parallel program produc larg amount data form event trace file hand wealth inform problem programm forc navig it tool must store process it make situat wors time larg amount data irrelev understand perform applic paper present new approach collect perform data trace event store statist perform approach provid accur use perform inform yet requir far less data store addit approach also support realtim perform monitor b introduct monitor perform parallel program runtim extrem use featur power perform tool exist runtim perform monitor provid display limit inform perform tune one major reason that runtim monitor limit time data collect analysi longer time data collect take intrus behaviour program intrus monitor may result chang program behaviour anoth major difficulti provid use perform inform runtim due larg amount perform data understand perform parallel program necessari collect fullsiz data set run larg number processor convent techniqu monitor perform parallel program gener larg volum perform data common gener megabyt data per second program run collect basic perform inform granular procedur system call estim base gener trace procedur system call event larg scale parallel comput consist say node amount data would impract collect therefor creat dilemma identifi perform bottleneck necessit collect detail inform yet collect larg amount data overload memori trace file reduc volum data collect perform tool collect inform necessari explain perform program howev decid data relev program execut difficult hand wealth data problem user navig through tool process runtim monitor paper introduc instrument approach data collect support runtim analysi parallel program perform approach maintain order program event collect time inform interest event paper also present trace data organis scheme provid perform inform rapidli execut program requir far less amount data store collect trace data organis differ level rang program individu commun statement user tune program topdown fashion focus area greatest impact perform furthermor techniqu also suitabl postmortem perform analysi relat work review previou work relat two major concern mention abov ie dynam program instrument method reduc intrus trace data organis method reduc data volum increas scalabl instrument gupta spezialetti present approach dynam minim intrus effect monitor ensur execut select nondeterminist event uninstru instrument version program assum execut model distribut comput compos multipl process locat differ process site process commun via messag pass pend messag maintain messag pool process nondetermin aris due order messag arriv process differ sourc handl restor messag pool messag order approach undo intrus effect monitor runtim estim time messag would sent receiv monitor action perform basi estim process restor messag pool wait late messag ignor messag becom avail earli addit messag also appropri order major limit system are assum messag sent asynchron mode assum messag sent arriv store destin messag pool receiv process readi receiv nondeterminist receiv event request monitor wait messag remot site arriv cai turner introduc logic clock approach monitor behaviour occam program transput system approach partial order event also commun order process preserv permit nondeterminist commun alt construct oc cam monitor wait safe allow commun occur is process grant permiss receiv messag messag destin process earlier logic time how ever may introduc deadlock normal exist program without monitor avoid deadlock introduc logic clock approach cai turner develop carriernul messag algorithm base deadlock avoid algorithm call nullmessag develop chandi misra scalabl perform metric predic librari pmpl attempt solv problem perform data size pmpl use exist trace monitor aim picl use userdefin predic pmp control output event trace data applic execut predic test state program perform perform fall specifi toler monitor output perform histori lead point perform degrad major limit system requir user manual specifi predic addit perturb applic perform impos perform metric predic dynam instrument control amount data collect defer insert instrument probe applic exe cution insert chang instrument time execut modifi applic binari imag instrument probe requir current select analysi visualis insert approach period sampl detail inform store event counter timer intermedi valu provid inform use make decis chang instrument meet need volum data collect control collect inform need given moment control sampl rate although approach provid great flexi biliti requir mani decis made collect collect them qualiti collect perform data depend sampl rate time requir make decis correct decis mpp apprentic perform tool design help user tune perform cray td applic collect statist section code summaris data processor display summari across processor program execut time pass count code block sum within processor kept local processor mem ori enabl mpp apprentic tool handl longrun program without increas demand processor memori end program execut request user global reduct statist code object across processor done runtim inform file creat mpp apprentic tool postprocess file provid perform inform user major limit tool support realtim perform analysi quartz profil tool tune parallel program perform share memori multiprocessor philosophi underli quartz inspir sequenti unix tool gprof appropri direct attent programm effici measur factor respons perform relat metric one anoth structur program primari limit profil tool depend extern sampl task potenti error inher sampl anoth limit tool focus find cpu time bottleneck onli design goal compar exist approach identifi limit discuss four major goal design runtim perform monitor goal provid accur perform inform goal includ minimis intrus data collect accur calcul perform eg time inform goal keep trace data manag size mention befor larg scale parallel comput could impract collect amount perform data problem also happen small long run program also gener larg amount trace data there fore second goal monitor maintain perform data set manag size without lose characterist use data goal provid perform inform rapidli parallel program incur overhead mani differ way synchronis load imbal commun prompt assess process time spent aspect use perform tune parallel program third goal monitor store perform data form perform inform includ statist cpu time for load imbal transmiss time for commun block time for synchronis easili deriv rapidli provid goal provid hierarch data relat back sourc program perform tune process associ sourc program mean focus success detail region program provid one proceed hierarch manner respect program code studi code variou level detail help systemat focu region code caus perform problem previou inform studi show user gener start take high level view perform applic isol sourc program poor perform process continu understand program perform well enough start tune it therefor fourth goal monitor provid user differ level perform statist rang whole program singl commun statement perform statist organis accord hierarch structur program achiev four goal key question answer are ffl minim intrus data collect ffl data collect ffl collect data organis next section discuss variou approach perform data collect achiev goal present design decis made order achiev goal section present approach intrus minimis reduct trace data volum data collect method design decis three basic approach collect perform data count statist sampl event trace repres differ tradeoff among inform volum potenti instrument perturb accuraci implement complex count first approach record number time interest event occur unix grof monitor routin call prologu profil procedur monitor routin updat count call procedur caller given count total time one comput averag execut time approach significantli reduc volum perform data collect howev record number time event occur event occur therefor lose import inform event context approach achiev goal cannot achiev goal also achiev goal extent sinc collect count inform introduc littl intrus statist sampl anoth approach data collect statist sampl involv period sampl program resourc current activ procedur gaug program perform unix grof period interrupt program sampl program counter therebi estim execut time procedur quartz set processor execut program maintain state share memori special code execut thread oper procedur entri exit state sampl dedic processor particip execut program crovella leblanc predic profil tool use similar approach primari limit approach depend extern sampl task potenti error inher sampl sampl procedur provid estim accur need routin keichun li kang zhang spend program time accuraci result depend sampl rate hand total program execut time low sampl error may intoler ponder fateman identifi number limit statist sampl approach statist sampl approach achiev goal cannot achiev goal event trace event trace gener flexibl approach data collect gener sequenc event record event record consist encod instanc action attribut typic includ follow ffl action occur i e event identifi ffl time event occur ffl locat event occur eg line number ffl addit data defin event circumst event trace identifi happen happen event timestamp impos order event defin control flow interact system compon one strength judici chosen event identifi perform problem correct prob lem task schedul may directli obtain trace file immens amount flexibl avail assign interpret timestamp event event trace subsum count sampl one comput time count trace data exampl given trace procedur entri ex it one comput total number call procedur count number instanc event type well total procedur execut time match procedur entri exit event comput differ event time ad differ run sum procedur addit dynam procedur call graph spacetim diagram drawn program visualis use trace data trace one captur compon interact dynam behavior transient well load imbal due messag wait sinc perform inform retriev trace file techniqu usual use postmortem perform tune tool aim picl pablo tool present inform perspect time tri give user idea happen everi processor system given moment event trace great potenti help user understand program behaviour also seriou problem discuss below understand perform parallel program necessari collect larg amount data run larg number processor volum data proport number processor frequenc trace point length program execut limit scalabl monitor system exampl aim gener megabyt trace file parallelis version arcd an na parallel benchmark execut processor two second massiv parallel comput amount trace data larg collect maintain realist program continu increas number processor size applic event trace solut scale well hand data volum also difficult manag display user left interpret event happen thousand processor therefor approach achiev goal cannot achiev goal goal collect accur perform inform count time gener seriou intrus especi monitor larg longrun parallel program design decis discuss singl approach achiev four goal therefor develop approach hybrid count event trace provid low data volum count detail trace instrument interest event eg commun collect event trace execut program collect data summaris count time count approach inform locat event breakdown time also store eventtrac approach moreov support user crossreferenc approach use knowledg program structur relat perform characterist back sourc program data collect collect perform data parallel program interest event usual includ procedur commun support tune longrun program reason assum execut time spent loop henc loop treat interest event approach provid detail time inform procedur procedur call also consid monitor interest event thu statement commun procedur call procedur loop instrument perform data collect organis perform data collect perform data interest event monitor accumul collect execut time store data structur dynam gener program execut also updat count event locat monitor event sourc program also store data structur use relat perform characterist interest event back sourc program moreov break time also record detail exampl monitor record total execut time count call procedur also break inform differ procedur call process onthefli execut program crossrefer perform data sourc program relat perform characterist back sourc program must maintain link control flow comput perform data mean repres origin sourc program control flow provid abstract intermedi program represent use program graph follow two section present approach base design decis program instrument aim minimis intrus data organis aim reduc volum trace data intrus minimis fundament problem perform monitor tool intrus data collect perturb program behaviour intrus may alter time event program arbitrari manner lead chang order event mean result monitor intrus monitor taken approxim happen unmonitor program may also hide deadlock exist program even creat new deadlock situat perturb instrument time characterist intrus monitor may alter time characterist event program arbitrari manner delay introduc monitor execut process chang rel time execut thu overal execut time process affect also time characterist wait messag processor idl on figur spacetim diagram show effect intrus term time three differ process without instrument send event e p readi send messag p time receiv event e b p readi receiv messag p time assum earlier t readi time e b earlier e assum one probe insert one probe insert event two instrument event e b instrument one probe e five probe e b simplic calcul assum delay time everi probe equal t readi time e becom earlier e b therefor instrument alter order event time inform synchronis delay longer without monitor execut select second major problem program instrument may result chang execut select nondeterminist commun multipl legal execut given input nondeterminist messag recept support use anyway branch receiv process may accept messag r r r r ea ea tt a without instrument b instrument receiv event probe r send event figur intrus time characterist process node ie select path along anyway branch ie correspond sender messag criteria messag select express applic user may differ differ implement distribut system select base upon criteria order messag arriv prioriti sender fair criteria select messag process least recent consid pure random select may made etc assum receiv select path along anyway branch correspond sender whose messag first readi send receiv therefor select particular execut made runtim typic influenc time variou event sinc monitor action alter execut time likelihood select variou legal execut may also alter instrument method exist instrument method classifi three group softwar hardwar hybrid approach softwar approach add set instruct probe applic program enabl runtim collect use inform system behaviour approach offer advantag fairli independ target architectur also provid inform high level abstract directli useabl design graphic display tool mani way realis softwar instrument probe insert manual edit sourc code automat precompil link instrument librari modifi link execut modifi oper system accord program stage probe insert softwar instrument divid sourc instrumen tation librari instrument object instrument kernel instrument main shortcom softwar instrument relat time overhead introduc inform gather limit effect intrus instrument usual limit event whose observ consid essenti instrument method repli extens hardwar support notic effect behaviour program observ hardwar approach involv connect probe system hardwar order observ behaviour without disturb it howev number limita tion firstli provid lowlevel data usual consider process complic mechan requir provid applic level monitor inform machin level data secondli form least portabl class monitor mechan thirdli design hardwar monitor complic use pipelin onchip cach increas throughput microprocessor also increas integr variou function unit eg float point unit memori manag unit make monitor difficult hybrid monitor compromis softwar hardwar monitor approach base addit instruct program order select adequ inform use explain behaviour offlin inform collect specif devic transmit host system interpret offlin display result approach advantag two approach give inform high abstract level introduc low overhead howev major limit hybrid instrument often dedic specif hardwar architectur therefor standard interfac import support instrument portabl achiev high portabl flexibl choos sourc instrument method use softwar monitor follow subsect present instrument method use virtual time monitor parallel messagepass program virtual clock approach order achiev goal state section ie accur captur perform inform synchron delay transmiss time introduc minim intrus program behaviour use virtual clock approach collect perform data approach base cai turner logic clock approach abl handl parallel program involv nondeterminist commun howev differ cai turner approach three key aspect ffl new deadlock avoid method use speed realis global wait depend decreas amount control messag time monitor select earliest avail send process moreov suitabl parallel system contain node connect within network provid pointtopoint commun ffl approach design implement monitor synchron asynchron commun function cmmd cm is howev gener enough appli parallel platform process necessari approach monitor implement runtim librari contain set routin ie probe insert sourc code assum execut model parallel comput compos multipl process locat differ processor process commun via messag pass nondetermin aris due order commun request process differ sourc handl destin process virtual time order keep execut select collect time characterist event origin uninstru program estim time spent monitor activ maintain virtual clock process use estim process involv infer time variou action would occur monitor perform next defin variou time use approach local time processor p execut instrument process denot lt given rt real time p obtain p s intern physic clock current intrus time virtual time v estim real time p execut origin uninstru program given rt given applic process local valu intrus time indic delay due monitor activ execut process execut control order preserv time characterist keep execut select unchang monitor need take control process readi commun process determin time order commun event monitor determinist synchron commun event monitor postpon permiss commun detect arriv partner commun event monitor determinist asynchron commun event monitor permit asynchron function execut without wait readi commun partner permit nondeterminist commun monitor wait safe allow commun occur receiv process oeha grant permiss receiv messag process send messag process earlier virtual time time count inform collect subroutin call probe data collect librari insert sourc code preprocessor probe insert procedur call commun loop statement procedur probe insert head procedur monitor commun event monitor function divid two part fore monitor activ back monitor activ fore monitor respons record synchronis time control interprocess commun sinc fore monitor activ perform commun statement monitor control occurr commun event monitor notic commun partner readi commun abl decid sender commun monitor calcul time spent synchronis permit commun start execut commun back monitor simpli calcul time spent messag transmiss preserv time characterist consid exampl shown figur use virtual time preserv order execut time event illustr figur rt rt rt real time virtual time send event e receiv event e b arriv real time time spent monitor activ e e b respect intrus time e arriv e b t therefor e arriv virtual time arriv virtual time base virtual time measur correct order event preserv is e arriv e b synchron delay equal also accur collect r r tt tt ea figur preserv time characterist preserv execut select monitor also use virtual time control occurr interprocess commun keep execut select unchang achiev thi nondeterminist receiv event arriv monitor make decis interprocess commun happen next base virtual time rather real time pro cess delay occurr commun awar least one possibl candid process commun run earlier virtual time way commun prevent occur either earli virtual time late real time therefor although realtim execut process slow monitor activ behaviour program unchang figur show exampl monitor use virtual time keep execut select unchang virtual time process nondeterminist receiv event p e e c send event p p respect delay introduc monitor routin e arriv real time q p r instead origin time execut uninstru program relationship time r ea r ec real time ed figur preserv execut select deadlock avoid virtual clock approach may introduc deadlock nondeterminist commun consid exampl shown figur w end line connect wait process n end line connect nonwait process exampl process p wait input process p p p readi output p virtual time p wait receiv process p p wait receiv assum virtual time p less thu p might chanc becom readi output p therefor accord virtual clock approach monitor cannot permit p receiv p messag sent p thu deadlock occur p wait wait p p wait p without monitor deadlock situat happen sinc p select commun so deadlock introduc monitor polici virtual clock approach clear kind deadlock avoid cai turner develop carriernul messag algorithm keichun li kang zhang figur deadlock creation base nullmessag algorithm algorithm avoid deadlock transmit null messag announc absenc real messag advanc simul time logic time process wait depend loop howev parallel system eg cm sp ten hundr processor use carriernul messag algorithm amount protocol messag overload system messag traffic develop new deadlock avoid method detect global wait depend allow earliest avail send process p exampl send messag obtain inform global wait depend monitor nondeterminist receiv event collect time state inform process identifi depend loop monitor select earliest readi process permit commun nondeterminist receiv event approach use simpl algorithm introduc littl amount extra control messag perform instrument compar time differ stage test program execut monitor without monitor order measur overhead monitor accuraci time collect monitor test program matrix multipl parallel program written c cmmd program master process execut processor number worker process execut processor begin master process initialis matrix matrix b send differ portion matrix matrix b worker process worker process perform calcul receiv data send result back master process master process merg result multipl matrix matrix b form matrix c figur show toler time differ stage indic maximum toler also obtain monitor overhead total execut time program without monitor insert differ delay monitor routin evalu variat toler time observ maximum toler rang result shown toler proport increas delay insert monitor figur toler time reduc trace data volum reduc amount trace data maintain organis perform data collect program instrument two major form data structur ie static tabl dynam record figur illustr perform inform organis execut parallel program perform analys gener perform report base inform static tabl dynam record user input user interfac end program execut monitor may also save dynam record system disk postmortem analysi combin use static tabl dynam record ensur necessari perform inform structur maintain storag requir data structur manag size increas proport program size run time program graph abl repres interpret perform program relat perform back sourc program use abstract call program graph depict figur program graph consist node repres major control point program procedur call loop procedur header node organis accord hierarch structur parallel program tabl analys inform analysi runtim postmortem analysi queri perform interfac user perform dynam record figur gener perform inform procedur commun commun procedur procedur call commun loop loop procedur call commun procedur procedur call procedur figur program graph messag pass parallel program top level program graph main procedur second level consist monitor event main procedur commun event procedur call loop loop event nest loop procedur call commun event within loop lower level descript event attach loop event procedur call event call procedur attach call event program graph implement number static tabl monitor static tabl construct program instrument preprocessor execut program sinc entri determin program text figur show structur preprocessor static tabl static tabl use store hierarch relationship program structur statement interest program structur statement identifi static tabl applic sourc code instrument sourc code preprocessor figur preprocessor program instrument line number program tabl pl pcom pc store inform loop structur commun statement procedur call insid procedur respect tabl lcom lc store inform loop structur commun statement procedur call insid loop structur respect figur show format static tabl follow field l p line number procedur statement sinc data present monitor primarili base procedur field key tabl l l line number loop statement field key tabl lcom lc l c line number commun statement l pc line number procedur call statement l pi line number procedur statement invok l pc l il line number loop statement nest anoth loop field tabl l p l l l c l pc l pi l il figur format static tabl dynam record dynam record gener monitor execut parallel program store statist interest event approach interest event includ procedur loop commun dynam record alloc procedur loop commun statement whose structur shown figur loop_tim loop_num commun event dest_nod trans_tim sync_delay trans_num next_dest com record record com line self_nod event_typ c_p_l_ptr activate_lin next_cal proc_tim proc_num loop record proc record loop event procedur event record record figur structur dynam record store interest event list dynam record name event record alloc runtim differ interest program event parallel program event record store statist interest program event four tupl line self node event ffl line line number first statement program event ffl self node identifi process execut program event event type type program event commun loop procedur ffl c p l ptr pointer point correspond record type event type relat perform characterist back sourc program interest program event identifi line number program commun event line store line number commun statement loop procedur event line store line number first statement event sinc perform data may collect differ process self node identifi process program event execut use multipl event record store perform data differ program event accord type program event store event type c p l ptr point correspond record commun event event point list com record loop event loop record procedur event point list proc record describ design record respect program event procedur event larg complex program usual compos mani small procedur implement abstract program direct user attent locat caus perform problem statist procedur count procedur invoc execut time provid hand use know procedur statist procedur invok consid follow exampl procedur x call assum procedur x respons execut time program call statement respons execut time obvious focu attent procedur rather procedur x reason necessari detect situat time dispers among sever procedur unix gprof provid inform gather three piec inform program execut call count execut time profil routin arc dynam call graph travers program execut postprocess data gprof build dynam call graph node repres routin direct arc repres call routin propag time along arc graph routin invok them sinc assum call routin take averag amount time call routin caller r account theta c rs c total time spent calle s c rs number call caller r s c number call routin s assumpt alway true sinc execut time routin may depend paramet pass procedur invok provid accur time routin time spent routin invok separ store execut inform procedur differ caller sinc approach provid runtim perform inform execut parallel program rather build dynam call graph execut program list proc record dynam alloc procedur execut store statist differ procedur call statement proc record list store statist particular call statement four tupl activ line next caller proc time proc num ffl activ line line number statement call procedur ffl next caller pointer link proc record list ffl proc time accumul execut time procedur call statement whose line number store activ line ffl proc num count number execut procedur call statement whose line number store activ line howev arrang would work program contain recurs call figur show two simpl exampl relationship caller calle mix up time propag one statement anoth cycl solut alloc proc record recurs call exampl figur a proc record alloc call x statement provid count time inform procedur x like call x statement exist inform store proc time proc num proc record procedur x extern call statement case figur b treat procedur x singl procedur z caller procedur x becom caller procedur z arrang result situat like figur a proc record alloc either call x call statement count time inform procedur z store list proc record procedur z event record extern call statement procedur x procedur x procedur call x call call x a recurs routin b mutual recurs routin figur program exampl contain recurs call therefor provid user simpl accur perform inform recurs procedur instead present overlap complic time inform commun event commun one import activ may optimis improv perform parallel program order observ commun behaviour collect measur transmiss time synchron delay count execut commun statement commun statement may chang destin execut parallel program follow exampl cm cmmd send statement whose destin chang numwork dest numwork dest cmmdsendblockdest buf bsize provid detail time inform commun event time spent commun two process list com record dynam alloc store statist inform differ destin commun statement program com record five tupl dest node tran time tran num sync delay next dest ffl dest node identifi process destin commun ffl tran time accumul messag transmiss time commun event ffl tran num count number execut commun event ffl sync delay accumul synchronis time event ffl next dest pointer link next com record list loop event mani longrun program execut time spent loop collect time count execut everi loop event program loop record dynam alloc store statist inform loop event program two tupl loop time loop num ffl loop time accumul execut time loop event ffl loop num count number execut loop event result follow two case studi indic result evalu effect data structur perform interpret reduct trace volum keichun li kang zhang perform interpret describ explain data structur use approach demonstr provid perform statist exampl parallel program use shown figur exampl program l l line number program state ment main procedur main l consist two procedur call statement l l call procedur p p l l respect therefor two record l l l l l l includ tabl pl loop event loop l nest loop loop l record l l includ tabl sinc commun statement e l insid procedur p l record l l tabl pcom hand commun statement e l insid loop l record l l tabl lcom figur show static tabl gener exampl program sinc procedur p call statement l l two dynam record ie proc record activ line l proc record activ list referenc c p l ptr event record procedur p one loop record also alloc loop loop follow perform inform deriv static tabl dynam record total execut time whole program sinc line number main procedur l record line l search event record main procedur first procedur execut proc record activ line list referenc c p l ptr match event record valu proc time proc record total execut time whole program total messag transmiss time whole program record event type equal commun event search event record match record valu tran time com record referenc record c p l ptr accumul sum accumul valu total messag transmiss time whole program total commun synchronis time whole program calcul total messag transmiss time whole program except valu sync delay rather tran time accumul total execut time procedur call main procedur use activ line l key two record l l l l l l found tabl pc mean two procedur call statement main procedur execut time first call statement proc time proc record whose activ line l referenc c p l ptr record whose l method find execut time second procedur call statement find first sum two valu total execut time procedur call main procedur total execut time procedur call l calcul without search tabl pc one procedur call statement search dynam record l call p l call p l procedur p l call p l procedur p l call p l procedur p call p l loop l loop l call p procedur p figur exampl program tabl pl tabl pcom l p l l l p l c tabl l p l pc l pi tabl tabl lcom l l l il l l l c tabl l l l pc l pi figur static tabl gener exampl program total time count procedur p execut sinc line number procedur p l record line l search event record sum proc time valu proc record referenc c p l ptr match event record total execut time procedur p sum valu proc num count procedur p execut total execut time commun event l record line l search event record sum valu tran time sync delay com record list referenc c p l ptr match event record total execut time commun event l total execut time loop time inform event loop record line l search event record valu loop time loop record referenc c p l ptr match event record total execut time loop use line l search key record l l found tabl mean loop l nest insid loop method find total execut time loop loop key record l l found tabl lcom mean commun event l loop way calcul time spent commun event demonstr befor use key record found tabl pc procedur call statement loop discuss see collect perform data organis way relat back structur applic program perform inform provid differ level perform statist rang whole program singl commun statement inform user tune program topdown fashion focus effort area greatest impact perform use program figur exampl assum procedur p consum program execut time firstli user check perform main procedur find execut time spent call p call p statement perform procedur p p check indic call p timeconsum statement user check perform procedur p found execut time procedur p spent call p statement user conclud procedur p greatest impact whole perform focu hisher attent procedur p comparison data size size perform data need approach much smaller gener tradit tracebas system let us consid follow portion parallel program written cmmd execut cm cmmdreceiveblock stype coffset bsize cmmdsendblock mtype offset intsiz cmmdsendblock mtype b ncadbsiz processor repeatedli receiv data processor call subroutin cal calcul send result processor assum user interest time spent commun compar volum data collect tradit event trace tool approach tradit event trace tool monitor routin insert four commun statement line collect time inform gener trace event record assum follow format event trace record line line number event sourc program type event type sourc process execut event destin receiv process identifi commun event timestamp start time event execut given size five field byte respect record occupi byte follow event record creat first iter loop line keichun li kang zhang sinc loop execut time theta event record creat mean size trace data store time inform four commun statement kbyte theta field size in byte line self node event type dest node tran time delay tran next dest tabl size field event com record approach four event record alloc four commun statement sinc destin four commun statement fix one com record alloc list point c p l ptr event record tabl show size field event com record tabl calcul event record occupi byte com record occupi byte total size four event record four com record byte theta volum trace data significantli less kbyte gener use tradit approach tradit event trace tool trace data size increas proport number iter loop structur approach increas trace data size increas number iter approach especi suitabl handl long run program hand set event trace record gener tradit event trace tool provid breakdown time inform commun eg transmiss time synchron delay howev detail inform provid approach small size perform data set summari achiev four goal summaris approach match origin design goal state section claim four goal achiev larg extent runtim monitor use virtual time instrument approach timestamp maintain order interest event allow monitor collect accur perform data transfer data central process perform activ support runtim perform analysi achiev first goal sinc monitor trace event store statist per formanc obtain suffici perform inform yet requir far less data store thu amount trace data control manag size achiev second goal store statist form trace data provid perform inform rapidli runtim monitor achiev third goal combin inform dynam record static tabl monitor provid user differ level perform statist whole program singl commun statement appropri direct user attent effici measur factor respons perform relat metric one anoth structur program inform user tune program topdown fashion focus effort area greatest impact perform achiev fourth goal conclus paper introduc monitor support runtim data collect analysi parallel program perform high scalabl assist user locat identif resolut perform problem parallel program instrument approach preserv order event without affect speed monitor activ thu support runtim perform monitor sinc raw perform data process summaris statist process dynam record program execut monitor requir far less data store maintain perform inform provid easili rapidli runtim monitor further more reduc data volum requir fewer resourc caus less intrus program behaviour data volum proport execut time program approach scale well grow number process handl long run program lower data volum manag tool process easi user understand perform characterist refer back sourc code monitor provid user differ level perform statist relat entir program procedur loop block procedur call statement commun statement statist organis accord hierarch structur keichun li kang zhang program approach appropri direct attent user effici measur factor respons perform relat metric one anoth structur program therefor user tune program topdown fashion focus effort area greatest impact perform acknowledg author would like thank anonym refere comment use improv paper r quartz tool tune parallel program perfor manc algorithm distribut discreteev simul carriernul messag approach case studi design verif distribut program perform debug use parallel perform pred icat select monitor use perform metric pred icat user guid picl portabl instrument commun librari gprof call graph execut profil dynam techniqu minim intrus effect monitor action dynam program instrument scalabl perform tool find bottleneck larg scale parallel program instrument parallel program base virtual clock ap proach perform tune support messagepass parallel program inaccuraci program profil scalabl perform analysi pablo perform analysi environ logic clock approach visual parallel program mpp apprentic perform tool deliv perform cray td perform tune aim autom instrument monitor system multicomput visualis model parallel distribut program use aim toolkit collect time inform preserv event order parallel program instrument tr