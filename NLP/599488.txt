t improv mcmillan unfold algorithm a mcmillan recent propos new techniqu avoid state explos problem verif system model finitest petri net techniqu requir construct finit initi part unfold net mcmillan algorithm task may yield initi part larger necessari exponenti larger worst case present refin algorithm overcom problem b introduct semin paper mcmillan propos new techniqu avoid state explos problem verif system model finitest petri net techniqu base concept net un fold well known partial order semant petri net introduc later describ detail name branch process unfold net anoth net usual infinit simpler structur mcmillan propos algorithm construct finit initi part unfold contain full inform reachabl state call initi part satisfi properti in fact slightli stronger one finit complet prefix show use prefix deadlock detect unfold techniqu later appli verif prob lem use check relev properti speed independ circuit unfoldingbas model check algorithm simpl branch time logic propos although mcmillan algorithm simpl eleg sometim gen institut fr informatik technisch universitt munchen email fesparzaroemerginformatiktumuenchend partial support teilprojekt sam sonderforschungsbereich werkzeug und methoden fr die nutzung parallel rechnerarchitekturen institut fr mathematik universitt augsburg email waltervoglerinformatikuniaugsburgd j esparza s romer w vogler erat prefix much larger necessari case minim complet prefix on size petri net algorithm gener prefix size o n paper provid algorithm gener minim complet prefix in certain sens defin prefix alway smaller larg prefix gener old algorithm paper organis follow section contain basic definit petri net branch process section show mcmil lan algorithm element whole famili algorithm construct finit complet prefix section select element famili show gener minim prefix certain sens final section present experiment result basic definit petri net tripl s t f net element call place element transit place transit gener call node identifi f characterist function set s theta t theta s preset node x denot ffl x set fy g postset x denot x ffl set fy g mark net s t f map identifi mark multiset contain s copi everi s tupl net system s t f net mark call initi mark sigma mark enabl transit enabl occur occurr lead new mark denot defin everi place s sequenc transit occurr sequenc exist mark mn gamma mn mn mark reach occurr oe also denot oe gamma reachabl mark exist occurr sequenc oe oe gamma reachabl graph net system sigma label graph set reachabl mark sigma node relat gamma mark edg mark net nsafe everi place s identifi safe mark set place net system sigma nsafe reachabl mark nsafe improv mcmillan unfold algorithm paper consid net system satisfi follow two addit properti ffl number place transit finit everi transit nonempti preset nonempti postset occurr net net let x x node x x conflict denot x x exist distinct transit belong reflex transit closur f word x x conflict exist two path lead x x start place immedi diverg although later converg again x t x selfconflict xx occurr net net ffl everi b b j ffl bj ffl f acycl ie irreflex transit closur f partial order ffl n finit preced ie everi x set element belong transit closur f finit ffl event e e selfconflict element b e call condit event respect minn denot set minim element b e respect transit closur f irreflex transit closur f call causal relat denot symbol denot reflex transit closur f given two node xy branch process branch process unfold net system contain inform concurr conflict introduc engelfriet quickli review main definit result two net homomorph n n map homomorph defin net system instead net small technic differ without sever consequ j esparza s romer w vogler net system two branch process ffl everi restrict h ffl biject ffl in word homomorph map preserv natur node environ transit branch process net system occurr net p homomorph n n i restrict p minn biject minn ii everi e figur show safe net system part a two branch process part b c two branch process net system isomorph biject homomorph h n n intuit two isomorph branch process differ name condit event shown net system uniqu maxim branch process isomorph call unfold system unfold safe system figur infinit two branch process net system fi prefix fi n subnet n satisfi ffl condit belong n input event n also belong n improv mcmillan unfold algorithm ffl event belong n input output condit n also belong n p restrict p n configur cut configur c occurr net set event satisfi follow two condit causal close condit occurr net coset element co relat maxim coset b respect set inclus call cut finit configur cut tightli relat let c finit configur branch process p coset cutc defin below cut particular given finit configur c set place pcutc reachabl mark denot markc mark system sigma repres branch process fi sigma fi contain finit configur c mark easi prove use result everi mark repres branch process reachabl everi reachabl mark repres unfold net system safe system follow result later use section proposit two node branch process safe net system x co x given cut c branch process uniqu subnet n whose set node restrict p node n further defin pc multiset contain instanc place pb everi b c follow result also use later proposit fi branch process n c cut fi c branch process n pc j esparza s romer w vogler algorithm construct complet finit prefix construct unfold give algorithm construct unfold net system first all let us describ suitabl data structur represent branch process implement branch process net system sigma list node node either condit event condit pair s e place sigma e input event event pair t b transit sigma b set input condit notic flow relat label function branch process alreadi encod list node express notion causal relat configur cut term data structur left reader algorithm construct unfold start branch process condit correspond initi mark sigma event event ad one time togeth output condit need notion event ad given branch process definit branch process net system sigma possibl extens fi pair t b b coset condit fi transit sigma t ffl fi contain event e satisfi pe fi denot set possibl extens fi procedur unfold algorithm input net system output unfold unf sigma begin pe pe unf pe append unf event pe condit s e everi output place t pe pe unf endwhil improv mcmillan unfold algorithm a safe net system unfold prefix procedur necessarili termin fact termin input system sigma infinit occurr sequenc eventu produc reachabl mark fair assumpt everi event ad pe eventu chosen extend unf the correct proof follow easili definit result construct finit complet prefix say branch process fi net system sigma complet everi reachabl mark exist configur c fi that ffl mark ie repres fi ffl everi transit enabl exist configur cfeg c e label t unfold net system alway complet complet prefix contain much inform unfold sens construct unfold least fixpoint suitabl oper properti hold requir everi reachabl mark repres instanc net system figur a figur b unfold figur c show prefix unfold everi reachabl mark repres prefix lost inform indic occur initi mark observ prefix complet sinc nsafe net system finit mani reachabl mark unfold contain least one complet finit prefix transform algorithm new one whose output prefix need preliminari notat definit given configur c denot c phi e fact c e configur c say extens c e suffix c obvious c ae c suffix c c phi let c c two finit configur mark c follow easili definit cutc isomorph j esparza s romer w vogler unfold sigma isomorph moreov isomorph c c cutc cut c isomorph induc map finit extens c onto extens c e introduc three basic notion algorithm definit partial order oe finit configur branch process adequ order if ffl oe wellfound ffl oe refin ae ie c ffl oe preserv finit extens mean c oe c c edefinit local configur local configur e event branch process set event e e e definit cutoff event let fi branch process let oe adequ partial order configur fi event e cutoff event with respect oe fi contain local configur e a b eth new algorithm paramet adequ order oe ie everi differ adequ order lead differ algorithm algorithm complet finit prefix algorithm input nsafe net system g output complet finit prefix fin unf begin fin pe pe cutoff immedi prove e configur improv mcmillan unfold algorithm pe choos event pe e minim respect oe e append fin event e condit s e everi output place t pe pe e cutoff event fin cutoff cutoff feg endif els pe pe n feg endif endwhil endmcmillan algorithm correspond order easi see oe adequ reason condit a definit cutoff event intuit clear light algorithm sinc mark e mark continu unf cute cute isomorph then loos speak reachabl mark find continu unf cute alreadi present continu cute need former fin role condit b technic fact mcmillan algorithm appli ordinari small exampl condit b seem superflu follow strategi seem work event e ad fin alreadi contain local configur e mark mark e cutoff event follow exampl also independ found k mcmillan show strategi incorrect consid safe net system figur mark fs g reachabl without condit b gener prefix figur name event number indic order ad prefix event cutoff event correspond mark fs also mark correspond event respect prefix complet fs g repres it observ fin contain event set cutoff could modifi algorithm remov event prefix obtain would still enjoy properti everi reachabl mark repres it howev prefix would necessarili complet consid j esparza s romer w vogler safe net system exampl net system figur a algorithm gener branch process figur b one two event process the maxim one respect oe cutoff event event remov obtain incomplet prefix prove correct algorithm proposit fin finit proof given event e fin defin depth e length longest chain event depth e denot de prove follow result everi event e fin de number reachabl mark sigma sinc cut correspond reachabl mark everi chain event contain two event e oe refin ae cutoff event unf finit prefix algorithm gener e j gener e e j recogn cutoff event fin too everi event e fin set ffl e e ffl finit definit homomorph biject denot homomorph fin similarli ffl pe p ffl e result follow finit n improv mcmillan unfold algorithm prefix net system figur everi k fin contain finit mani event e de k complet induct k base case set event depth k prove g induct hypothesi k finit sinc ffl e k get properti ii definit branch process e k finit follow fin contain finit mani event contain finit mani condit proposit fin complet proof first prove everi reachabl mark sigma repres fin let arbitrari reachabl mark sigma exist configur c unf mark c configur fin contain cutoff event e set event e definit cutoff event exist local configur e e oe e mark e consid configur c e e sinc oe preserv finit extens c oe c morev markc c configur fin iter procedur j esparza s romer w vogler find configur c c oe c mark c procedur cannot iter infinit often oe well found therefor termin configur fin show fin complet prove everi reachabl mark exist configur c fi that ffl everi transit enabl exist configur c e label t let arbitrari reachabl mark sigma sinc repres fin set configur c fin satisfi markc nonempti wellfounded set least minim element cm respect oe cm would contain cutoff event would find anoth configur c satisfi contradict minim cm cm contain cutoff event let arbitrari transit enabl exist configur cm feg unf cm e label t assum cm feg configur fin sinc fin contain event set cutoff algorithm also contain cutoff event e e impli e cm contradict cm contain cutoff event cm feg configur fin adequ order safe case mention introduct mcmillan algorithm may ineffici case extrem exampl due kishinevski taubin famili system left figur minim complet prefix size on size system see dot line figur branch process gener mcmillan algorithm size o n reason that everi mark local configur e satisfi size therefor exist cutoff event respect mcmillan parametr present algorithm suggest improv thi suffic find new adequ order oe r refin mcmillan order induc weaker notion cutoff event precis everi cutoff event respect oe also cutoff event respect oe r mayb way round therefor instanc algorithm use new order gener least mani cutoff event mcmillan instanc mayb more latter case algorithm gener smaller prefix improv mcmillan unfold algorithm sk sk sk sk sk copi sk minim complet prefix petri net unfold order oe r particularli good addit total case whenev event e gener event e mark e becaus event gener accord total order oe r e mark cutoff event follow two properti ffl guard e cutoff event fin inner instruct algorithm replac fin contain local configur ffl number event complet prefix cutoff event cannot exceed number reachabl mark sequel let fix net system let arbitrari total order transit sigma extend partial order set event branch process follow set e event let e sequenc transit order accord contain transit often event e label t say length e lexicograph smaller e note e incompar respect iff particular incompar respect je defin oe r gener suffix configur branch process recal set event e suffix configur exist configur c c phi e definit total order oe r two suffix configur branch process fi let mine mine denot set minim element respect causal relat say j esparza s romer w vogler notic definit would correct configur onli need configur even e one second condit definit could express as foata normalform e smaller e respect cf eg theorem let fi branch process safe net system oe r adequ total order configur fi proof a oe r partial order easi see induct jej oe r irreflex assum tripl equal appli induct otherwis appli induct e n mine also suffix configur r total configur assum c c two incompar configur ie prove induct jc base case give c first prove minc assum without loss gener contain event e pe ffl minc subset minn condit differ label proposit ffl e contradict condit ii definit branch process configur branch process cutminc proposit induct conclud c oe r wellfound sequenc c size c cannot decreas infinit often also configur size improv mcmillan unfold algorithm decreas infinit often respect sinc sequenc drawn finit set analog statement hold minc henc assum jc j c minc equal appli induct common size jc infinit decreas sequenc impo sibl otherwis conclud case b would imposs induct d oe r refin ae obviou oe r preserv finit extens intric part proof complic definit come play take c oe r c mark show c phi c c e assum appli induct af terward case c c easi henc assum c particular jc show first e minim c c e minim c eg let e minim c ie transit pe enabl initi mark let ffl pe condit ffl label s sinc condit would co relat slabel condit ffl e contradict proposit thu c contain event e ffl pe hold c sinc therefor condit cutc label ffl pe minim condit fi c revers implic hold analog sinc c c use hypothesi c knowledg posit e c c c e c proceed follow see done minc e minc henc c final minc argu minc configur branch process induct argument get c also done case close section remark minim prefix gener new algorithm ie algorithm oe r adequ order figur b c minim complet prefix prefix j esparza s romer w vogler gener new algorithm safe system figur a re spectiv follow new algorithm alway comput minim complet prefix howev prefix comput algorithm minim anoth sens algorithm store reachabl mark correspond local configur purpos discuss call local mark featur make algorithm interest concurr system local mark small subset reachabl mark therefor storag unfold may requir much less memori storag state space order find prefix figur b complet also need know initi mark fs appear prefix nonloc mark store inform local mark prefix figur c minim well prefix gener new algorithm reason observ made abov local configur fin induc cutoff event correspond differ mark ing therefor prefix smaller fin lose inform reachabl mark implement issu experiment result implement algorithm carri context model checker describ allow effici verifi formula express simpl branch time tempor logic storag petri net branch process develop effici univers data structur allow fast access singl node data structur base underli incid matrix net place transit arc repres node doubli link list support fast insert delet singl node comput new element set pe involv combinatori problem find set condit b transit t implement sever improv combinatori determin signific influenc perform algorithm interest reader refer algorithm simpl easili prove correct effici particular comput set pe possibl extens time new event ad fin clearli redund similarli mcmillan origin algorithm implement use queue store set pe possibl extens new event fin extract head list and event ad new possibl extens gener append tail simplest way organ list would sort event accord total order oe r howev ineffici involv improv mcmillan unfold algorithm nbuffer origin net unfold time s result n buffer exampl perform unneccessari comparison solut sort event accord size local configur compar event respect oe r realli need implement new algorithm comput mcmillan two event e e satisfi j precis case algorithm behav better alway identifi either e e cutoff event word complet prefix comput mcmillan algorithm minim algorithm comput result time overhead run time new algorithm o jbj set condit unfold denot maxim size preset transit origin net notic measur size input domin factor time complex comput possibl extens space requir linear size unfold store fix amount inform per event final present experiment result three scalabl exam ple compar mcmillan algorithm new algorithm implement use univers data structur improv combinatori determin mention abov first exampl model concurr nbuffer see figur net n place buffer capac number reachabl mark n fin size on contain one singl cutoff event see tabl exampl complet prefix comput mcmillan algorithm minim new algorithm comput prefix without time overhead expect second exampl figur model slot ring protocol taken size prefix produc new algorithm grow j esparza s romer w vogler givefreeslot p givefreeslot p free use goon owner use goon slot ring protocol origin net mcmillan algorithm new algorithm result slot ring protocol exampl slowli case mcmillan algorithm output alreadi one order magnitud smaller slow growth size caus even dramat reduct run time origin net mcmillan algorithm new algorithm result milner cyclic tabl give time exampl taken model milner cyclic schedul n task size unfold produc mcmillan algorithm grow exponenti number task get linear size use new one time measur sparcstat mb main memori time could calcul interrupt comput hour improv mcmillan unfold algorithm conclus present algorithm comput complet finit prefix unfold use refin mcmillan basic notion cutoff event prefix construct algorithm contain noncutoff event n number reachabl mark net therefor guarante prefix never larger reachabl graph hold algorithm recent kondratyev et al independ found anoth partial order event permit obtain reduc unfold techniqu work bound net howev partial order total upper bound size unfold cannot deriv acknowledg thank michael kishinevski alexand taubin alex yakovlev draw attent problem burkhard grave detect mistak anonym refere help comment r nonsequenti process petri net view evalu deadlock detect method combinator trace branch process petri net model check use net unfold improv mcmillan unfold algorithm concurr hardwar theori practic selftim design verif speedindepend circuit stg unfold analysi petri net order relat techniqu state space search base unfold trace theoret verif asynchron circuit use unfold petri net petri net analysi use boolean manipul implement composit partial order semant petri box tr combinator trace branch process petri net execut new partialord semant petri net model check use net unfold techniqu state space search base unfold improv mcmillan unfold algorithm use unfold avoid state explos problem verif asynchron circuit trace theoret verif asynchron circuit use unfold petri net analysi use boolean manipul calcul place capac petri net use unfold ctr alessandro giua xiaolan xie control safe ordinari petri net use unfold discret event dynam system v n p decemb victor khomenko maciej koutni verif bound petri net use integ program formal method system design v n p april victor khomenko maciej koutni alex yakovlev logic synthesi asynchron circuit base stg unfold increment sat fundamenta informatica v n p march victor khomenko maciej koutni alex yakovlev logic synthesi asynchron circuit base stg unfold increment sat fundamenta informatica v n p april victor khomenko maciej koutni alex yakovlev detect state encod conflict stg unfold use sat fundamenta informatica v n p april fabr trelli process compact represent run concurr system discret event dynam system v n p septemb stefan haar probabilist cluster unfold fundamenta informatica v n p decemb stefan haar probabilist cluster unfold fundamenta informatica v n p august