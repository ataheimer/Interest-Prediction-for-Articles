t test input gener java pathfind a show model check symbol execut use gener test input achiev structur coverag code manipul complex data structur focu obtain branchcoverag unit test core method redblack tree implement java treemap librari use java pathfind model checker three differ test gener techniqu introduc compar name straight model check code model check use blackbox fashion gener input fix size lastli model check use whitebox test input gener main contribut work show effici whitebox test input gener done code manipul complex data take account complex method precondit b evalu approach gener test redblack tree implement java treemap li brari contribut work are power exibl test input gener framework unit test framework use ecient approach symbol execut code manipul complex data structur take account precondit stop analysi infeas path soon possibl framework use uniformli whitebox blackbox test show framework use gener test code manipul complex data structur specic redblack tree illustr exibl model check tool test input creation compar straight model check code test blackbox approach whitebox approach background describ java pathfind jpf model checker extend symbol execut ca x x y pc true x x y pc xy x x y pc xy x xy y pc xyint x if x y x xy y x pc xy x y y x pc xy x y y x x y y x figur code swap two integ correspond execut tree transit label program control point pabil show section use extens jpf whitebox blackbox test input gener java pathfind jpf explicitst model checker java program built top custommad java virtual machin jvm jpf handl languag featur java also treat nondeterminist choic express annot program analyz annot ad program method call special class verifi follow method verifi class use paper randombool return boolean valu nondeterminist randomn return valu n nondeterminist ignoreifcond forc model checker backtrack cond evalu true jpf previous use nd error number complex system includ realtim oper system deo honeywel prototyp mar rover develop nasa ame call k recent also use mean gener input plan current k rover take input plan gener blackbox fashion similar techniqu describ section symbol execut java pathfind section give background symbol execut present symbol execut framework use reason java program background symbol execut main idea behind symbol execut use valu instead actual data input valu repres valu program variabl symbol ex pression result output comput program express function symbol input state symbol execut program includ symbol valu program variabl path condit pc program counter path condit quantier symbol input accumul constraint input must satisfi order execut follow particular associ path program counter dene next statement execut symbol execut tree character execut path follow symbol execut program node repres program state arc repres transit state consid code fragment figur swap valu integ variabl x y x greater y figur also show correspond symbol execut tree initi pc true x symbol valu x y respect branch point pc updat assumpt input order choos altern path exampl execut rst statement els altern statement possibl pc updat accordingli path condit becom fals ie set input satisfi it mean symbol state reachabl symbol execut continu path exampl statement unreach gener symbol execut describ algorithm gener tradit symbol execut support advanc construct modern program languag java c algorithm handl dynam alloc structur primit data concurr sinc extend work ad support symbol execut array algorithm start execut method input uniniti eld use lazi initi assign valu eld ie initi eld rst access method symbol execut allow symbol execut method without requir priori bound number input object execut access uniniti refer eld algorithm nondeterminist initi eld null refer new object uniniti eld refer object creat prior eld initi systemat treat alias execut access uniniti primit or string eld algorithm rst initi eld new symbol valu appropri type execut proce branch condit primit eld eval uat algorithm nondeterminist add condit negat correspond path condit check path condit satis use decis procedur path condit becom infeas current execut termin ie algorithm back track framework symbol execut framework built top jpf model checker enabl jpf perform symbol execut and lazi initi origin program instrument sourc sourc translat add nondetermin support manipul formula repres path condit interest reader refer detail descript code instrument class node int elem node next precondit acycl void foo elem telem figur simpl exampl illustr gener execut model checker check instrument program use usual state space explor techniqu essenti model checker explor symbol execut tree program state includ heap congur path condit primit eld thread schedul whenev path condit updat check satis use appropri decis procedur omega librari linear integ constraint path condit unsatis model checker backtrack framework use test input gener nding counterexampl safeti properti test input gener model checker gener path wit test criterion encod set properti everi report path model checker also report input heap congur encod constraint refer eld path condit primit input eld thread schedul use reproduc error note perform forward symbol execut program loop explor innit execut tree whi systemat state space explor framework use depth rst search iter deepen breadth rst search although concentr paper analysi sequenti code worth mention symbol execut framework handl concurr use model checker systemat analyz thread inter leav use model checker search engin framework allow us also exploit builtin capabl model checker backtrack dierent search capabl eg heurist search techniqu combat stateexplos eg partial order symmetri reduct also note that although consid branch coverag metric test framework handl test criteria encod properti model checker check eg dataow base coverag illustr illustr gener symbol execut simpl exampl see figur class node implement singlylink list eld elem next repres respect node integ valu refer next node figur give part of correspond code instrument symbol execut concret type replac symbol type librari class pro vide concret oper method call implement equival oper symbol type class express support manipul symbol integ class node express elem node next boolean _next_is_initi fals boolean _elem_is_initi fals static vector static vaddnul node _new_nod int return nodevelementati return n node _get_next if_next_is_initi verifyignoreifpreconditioneg acycl return next void foo if_get_elem_gtt_get_elem _set_nextt_get_next figur instrument code input structur next next pc true next next pc ee pcee next next next next next next next next next next next figur symbol execut tree excerpt field read updat replac get set method get method implement lazi initi eld origin class declar boolean eld ie next initi elem initi ad eld set true get set method vector v store input object creat result lazi initi helper method new node call get node use element vector v systemat initi input refer eld accord dierent alias possibl figur illustr path gener symbol execut code method foo given input structur node execut tree denot symbol state branch tree correspond nondeterminist choic introduc build path condit handl alias edg label number refer program statement without number lazi initi step valu elem eld indic eld initi cloud indic next eld initi null node repres structur repres constraint refer eld eg input structur figur repres cyclic acycl list least two node point second node explain later section method precondit use lazi initi input structur violat precondit model checker backtrack ie call method verifyignoreif figur exampl consid precondit input list acycl algorithm explor transit mark x figur case studi redblack tree use input gener techniqu test varieti program includ method class javautil packag program manipul complex data structur particular illustr techniqu java implement redblack tree given javautiltreemap standard java librari version redblack tree binari search tree one extra bit inform per node color either red black restrict way node color path root leaf redblack tree ensur tree balanc ie guarante basic dynam set oper redblack tree take olog n time worst case binari search tree redblack tree if everi node either red black root black node red children black everi simpl path root node descend leaf contain number black node four redblack properti express java use four properti togeth basic properti binari search tree dene repok method ie java predic check represent invari or class invari correspond data structur case repok check input redblack tree figur give part javautiltreemap declar figur give fragment code repok repres third redblack tree properti red node black children gener redblack tree particularli interest framework due complex structur ie primit eld back pointer etc next section present dierent techniqu use gener test input implement redblack tree javautiltreemap illustr test input gener sever helper method put remov method class javautiltreemap respons ad delet node correspond public class treemap entri root static final boolean static final boolean static class entri implement mapentri object object valu entri left entri right entri parent boolean precondit repokroot public object removeobject key public object addobject key figur declar javautiltreemap boolean repokentri e redhasonlyblackchildren worklistisempti entri currententryworklistremovefirst entri cl currentleft entri cr currentright ifcurrentcolor red ifcl null clcolor red return fals ifcr null crcolor red cl null cr null return true figur given key tree note delet complex oper among standard oper redblack tree involv rotat togeth auxiliari method addit togeth delet javautiltreemap line java code implicit precondit put remov method requir input satisfi class invari ie repok input must redblack tree test input gener section illustr three applic model check test input gener softwar manipul complex data structur focu implement put remov method redblack tree java treemap librari test criterion use sourc code level branchcoverag sinc want compar blackbox whitebox approach test input gen erat mention section framework also handl kind test criteria aim gener set nonisomorph test meet desir coverag criteria isomorph among test dene isomorph among graph heap java program view edgelabel node ident permut primit valu note java semant allow object alloc dictat exact object ident impli initi test input at concret represent level set eld valu abstract level use sequenc method invoc say regress test gener ident structur gener isomorph structur first show model checker use test execut sequenc method call data structur interfac secondli show use execut framework build nonisomorph input tree given small size use blackbox test method done symbol execut java code method precondit in case code repok lastli show framework use whitebox test input gener conserv precondit use lazi initi stop analysi infeas path also show input constraint comput symbol execut solv provid input actual test model check test model check clear distinct system analyz environ system ie input system take whenev environ underapproxim less behavior consid present actual environ model check model check becom form test note often case model check softwar sinc environ usual larg consid connect one therefor use model checker gener input analyz code input illustr idea show one test java treemap librari analyz sequenc put remov call set maxim n element use jpf model checker figur note that exampl interest coverag code rather correct henc use model checker default properti uncaught except import here oracl gener approach allow gener oracl includ method postcondit express java predic input gener blackbox test framework use automat gener java data structur descript method precon public static int public static treemap new treemap public static integ elem static elem new integern int new public static void mainstr arg true els figur model check test dition note sequenti code gener symbol execut explor path nonisomorph in put therefor gener nonisomorph input structur satisfi precondit appli gener symbol execut code precondit input structur use otheshelf constraint solver solv constraint path condit thu obtain test input test input use blackbox test method test drawback approach relationship input code coverag hand one would interest cover input specic rather code test blackbox method achiev full coverag input structur given bound order test put remov method automat gener nonisomorph input tree given small size java descript method precondit ie structur invari thu elimin need construct input use sequenc method call framework symbol execut repok gener input structur whenev repok return true put limit number gener object whenev size vector store object creat lazi initi see section reach limit model checker backtrack result input structur satisfi repok size speci limit creat approach contrast brute forc ap proach one rst gener possibl tree given size accord class denit would appli repok select valid redblack tree approach scale better sinc gener tree demand with lazi initi backtrack soon redblack tree properti violat thu prune larg portion search space import note actual structur repok crucial ecienc method repok would rst evalu tree end determin whether tree valid approach would equival gener tree prune input gener whitebox test symbol execut framework use input gener white box test gener input meet given test criterion framework use symbol execut method test model check properti encod test criterion counterexampl properti repres path satisfi criterion everi path framework also report input structur path condit primit input valu togeth dene set constraint input satisfi order execut path particular characterist framework use method precondit two phase input gener elimin infeas structur conserv precondit deal partial initi structur use lazi initi see section counterexampl found structur constraint path use input concret precondit the one use section solv constraint valid input see section conserv precondit use precondit initi eld see figur particular eld initi valu violat precondit notic evalu precondit structur still may uniniti eld therefor requir precondit conserv ie return fals initi eld structur violat constraint precondit consid analysi remov method redblack tree implement method precondit class invari redblack tree data structur ie repok java predic conserv version precondit use lazi initi illustr figur boolean ag left initi right initi ad code instrument keep track uniniti input eld see section code conserv repok ident repok except constraint encod repok evalu initi eld exampl assum three input tree illustr figur creat analysi remov method at lazi initi step round lled node repres entri color black empti node repres entri color red null node repres befor cloud denot uniniti eld intuit repres set node sinc lazili initi dierent node simplic present omit repres key valu eld figur also show result evalu conserv repok tree structur rst tree violat repok matter concret valu cloud is sinc red node cannot red children case model checker backtrack consid structur further second tree concret structur satis repok third tree repres concret tree may may satisfi repok conserv repok return true or rather know analysi continu note lazi initi input eld framework relat materi summari node shape analysi conserv precondit formul context abstract interpr tation would like explor connect further framework also report thread schedul informa tion case multithread code boolean conservative_repokentri e redhasonlyblackchildren worklistisempti entri currententryworklistremovefirst entri cl currentleft entri cr currentright currentcolor red current_left_is_initi cl null clcolor red return fals current_right_is_initi cr null crcolor red return fals current_left_is_initi cl null current_right_is_initi cr null return true figur predic conserv repok fals true true dont know figur evalu conserv repok structur handl destruct updat lazi initi algorithm build input structur need basi rst access symbol execut code analysi perform destruct updat structur input lost creat test input therefor need reconstruct input structur exampl consid structur leav symbol execut tree depict figur result destruct updat structur longer contain inform input structur link rst two node order recov origin input structur keep map object uniniti eld object solut satisfi repok solut symbol input structur constraint violat satisfi conservative_repok figur concret symbol structur creat eld initi map use reconstruct input structur note whenev precondit need evalu lazi initi rst reconstruct input structur evalu precondit reconstruct input structur solv constraint result symbol execut particular program path heap structur encod constraint refer eld path condit encod constraint primit data constraint dene input allow execut path order obtain actual test input solv constraint ie build actual java data structur use test framework solv constraint separ structur primit data rst convert symbol structur concret structur uniniti eld also satisfi method precondit method pre condit amount simpli set uniniti eld null otherwis symbol input structur which satis conserv precondit use input code concret precondit symbol execut obtain concret structur way similar test input gener method describ section constraint path condit solv use otheshelf constraint solver note concret symbol structur satis conserv precondit valid solut exampl given figur experi mention measur branchcoverag method treemap class simplic consid helper method deleteentri del fixafterdeletet xd fixafterinsert xi optim branchcoverag achiev method deleteentri fixafterdelet fixafterinsert note statement coverag obtain method uncov branch miss els branch option alway taken rest branch shown infeas resourc coverag n time mem state del xd xi memori tabl model check test result obtain use jpf model checker version ghz dual processor pentium gb memori run window java model check test result tabl show coverag achiev three method model check code figur dierent valu n the number entri ad treemap coverag number gather use jpf facil calcul branchcoverag bytecod level execut simpl transform done obtain branchcoverag sourc code level note techniqu also use branchcoverag calcul rest section tabl also contain time taken in second memori consum in mb number state gener model check result indic approach scale well size result give appear actual good fast low memori reason coverag exponenti explos becom appar size size cannot handl entireti fixafterdelet branchcoverag achiev fixafterdelet call deleteentri henc surpris larg jump coverag size advantag model check approach obtain good path behavior coverag small input domain well system test fundament hard concurr system domain consid here name sequenti program manipul complex data techniqu test could appropri rst pass nding error obtain good structur coverag one need sophist approach blackbox tabl show result blackbox structur coverag xed size n input tree gener symbol execut repok method use jpf input tree possibl node delet one new insert execut test code coverag measur also report total number tree creat struct specic size n in parenthesi number tree size n given well mani structur consid candid lazi initi code within repok sinc memori consumpt minim less mb case shown report time taken gener tree time run test neglig note sinc structur gener given size result includ smaller structur well statist coverag struct candid time test del xd xi tabl blackbox structur test statist coverag time mem test del xd xi tabl whitebox test minut tree requir achiev optim coverag code gener size note tree size n creat analyz sequenc put remov oper section subset tree size n allow repok believ due class invari repok permiss properti maintain sequenc putremov op erat inde say perform concern method may maintain properti stronger state class invari therebi disallow certain structur otherwis valid gener execut method sequenc whitebox result whitebox analysi method treemap obtain set test input achiev optim branchcoverag three method given tabl report time taken second memori usag mb number test run with number test gener remov duplic parenthesi coverag obtain although mention input tree consid test input consist input tree well node putremov note parameter result size tree as tabl sinc goal cover branch achiev dierent size tree howev limit size tree look size smaller expect coverag obtain optim mani duplic amongst input tree gener cover branch code uniqu input tree requir tree made tree size two tree size out possibl tree discuss lazi initi repok use blackbox test input gener compar approach taken korat korat gener input constraint given java predic use backtrack as also do monitor execut repok fulli initi input within priori given input size exampl use number candid structur two techniqu consid similar howev one also introduc integ valu structur approach consid lot fewer structur sinc use symbol execut togeth integ constraint solv wherea korat enumer integ eld fact whitebox approach test input requir versu obtain optim coverag blackbox approach illustr power use goaldirect whitebox approach blind blackbox approach test input gener obtain high coverag believ complic structur invari dierenc test input size black white box approach would even pronounc drawback current approach cannot determin whether code unreach code contain cycl case redblack tree exampl consid here consid techniqu automat invari gener use shapepred abstract address problem inher drawback symbol execut strength decis procedur use check infeas path condit current deal linear integ constraint hope add power decis procedur near futur note experi dierent approach repres data structur eg could complet symbol repres partial initi java structur context work present here use latter approach facilit evalu precondit written java predic relat work specicationbas test idea use constraint repres input date back least three decad idea implement variou tool includ effigi tegtgen inka prior work solv constraint primit data integ boolean solv constraint complex structur requir dierent constraint solv techniqu recent framework notabl testera korat support nonisomorph gener complex structur redblack tree testera gener input constraint given alloy rstorder declar languag base relat testera use otheshelf sat solver solv constraint alreadi discuss korat section korat algorithm recent includ asml test gener enabl gener structur testera korat focu solv structur constraint directli solv constraint primit data instead systemat tri primit valu within given bound may in ecient further testera korat use blackbox test whitebox set earli paper goodenough gerhart emphas import specicationbas test variou project autom test case gener specic z specic uml statechart adl specic asml specic specic typic involv structur complex input address objectori program doong frankl use algebra specic gener test includ oracl object orient program astoot tool gener sequenc interfac event check whether result object observ equival as speci algebra specic although interest gener test cover input structur blackbox code white box use algebra specic creat addit test check function requir code straightforward extens gargantini heitmey use model checker gener test violat known properti specic given scr notat ammann black combin model check mutat analysi gener test case specic rayadurgam et al use structur coverag base approach gener test case specic given rsmle use model checker lee et al dene framework use tempor logic specifi dataow test coverag static analysi threevaluedlog analyz tvla rst static analysi system verifi preserv list structur program perform list revers via destruct updat input list tvla use analyz small program manipul doubli link list circular list well sort program recent tvla system extend also deal precondit shapegraph pointer assert logic engin pale verifi larg class data structur repres span tree back bone possibl addit pointer data structur includ doubli link list tree parent pointer thread tree static analysi program properti promis approach ensur program correct long run current static analysi techniqu verifi limit program properti exampl none techniqu verifi correct implement balanc tree redblack tree test hand gener verifi decid program properti realist larg implement bound input softwar model check lot recent interest appli model check softwar work focus check event sequenc speci tempor logic api usag rule form nite state machin approach oer strong guarante program success check inputexecut would lead error howev typic consid link data structur consid reduc state space explor check data structur themselv work show enabl otheshelf model checker check properti complex structur take account complex precondit algorithm implement straightforward fashion enabl model checker support dynam structur check structur properti too recent two popular softwar model checker blast slam base predic abstract use whitebox test input gener case goal gener test cover specic predic combin predic techniqu focu gener complex test input class invari redblack tree would also like handl complex precondit thank review detail comment allow us greatli improv paper conclus main contribut work show com plex precondit use allow ecient symbol execut code manipul complex data gener test input obtain high code coverag particular illustr use conserv precondit evalu structur ie structur fulli initi elimin structur cannot lead valid concret input achiev state coverag conserv precondit seen abstract version concret precondit sinc disallow in valid structur might accept structur instanti concret structur fail concret precondit although creat conserv precondit hand would like investig gener directli concret precondit use techniqu abstract interpret experi precondit class invari approach handl precondit express java predic also show two approach use model check symbol execut test firstli tradit approach model check perspec tive one simpli appli model check system test approach obtain high level behavior coverag small congur data structur secondli show symbol execut code precondit one ecient obtain test suitabl blackbox test second ap proach show exibl lazi initi approach symbol execut resembl algorithm employ korat tool highli success gener test input believ exibl approach test complex softwar import end think techniqu cover seen continuum follow fashion code analyz full specic one use blackbox approach consid structur input gener test note structur input must known case given java predic specic exist for exampl algebra specic use specic center approach test input genera tion use augment abov note requir specic given notat accept model checker java case point blackbox approach exhaust one need consid code whitebox gener addit test although consid simpl coverag criteria drive symbol execut base test input gener one specifi criteria express prop erti model checker exampl predic coverag lastli test sucient case exampl test concurr program notori incomplet power techniqu program model check use acknowledg would like thank darko marinov insight discuss share us java implement r econom impact inadequ infrastructur softwar test specicationbas coverag metric evalu test set use model check gener test specic experi test case gener runtim analysi automat valid tempor safeti properti interfac slam project debug system softwar via static analysi softwar test techniqu korat autom test base java predic intern symposium softwar test analysi issta experiment evalu veric valid tool martian rover softwar structur specicationbas test autom support experiment evalu model check system gener test data symbol execut program introduct algorithm autom formal specic base use model model check program languag use verisoft toward theori test data select tempor logic base theori test coverag gener approach program test gener symbol execut model check test symbol execut program test autom test data gener program procedur tvla system implement static analys test use solver imper constraint testera novel framework autom test java program pointer assert logic engin gener test uml specic veric java program use symbol execut invari gener veric time partit deo schedul kernel omega test fast practic integ program algorithm depend analysi autom gener program test data solv shapeanalysi problem languag destruct updat model check program symbol comput mostprecis abstract oper shape analysi tr introduct algorithm astoot approach test objectori program model check program languag use verisoft solv shapeanalysi problem languag destruct updat automat test data gener use constraint solv techniqu deadlock detect tool concurr java program use model check gener test requir specif structur specificationbas test model check bandera verif time partit deo schedul kernel approach program test symbol execut program test pointer assert logic engin automat valid tempor safeti properti interfac sscplamscp project softwar test techniqu gener finit state machin abstract state machin korat model check program specificationbas coverag metric evalu test set tempor logic base theori test coverag gener autom formal specificationbas test tvla toward theori test data select use model check gener test specif testera gener test counterexampl ctr willem visser corina s psreanu radek pelnek test input gener redblack tree use abstract proceed th ieeeacm intern confer autom softwar engin novemb long beach ca usa autom test gener engin applic proceed th ieeeacm intern confer autom softwar engin novemb long beach ca usa nikolai tillmann wolfram schult parameter unit test unit meister acm sigsoft softwar engin note v n septemb colin blundel dimitra giannakopoul corina s psreanu assumeguarante test acm sigsoft softwar engin note v n march patric godefroid composit dynam test gener acm sigplan notic v n januari petri ihantola creat visual test data program exercis informat educ v n p januari carlo pacheco shuvendu k lahiri michael d ernst thoma ball feedbackdirect random test gener proceed th intern confer softwar engin p may koushik sen darko marinov gul agha cute concol unit test engin c acm sigsoft softwar engin note v n septemb rupak majumdar koushik sen hybrid concol test proceed th intern confer softwar engin p may nikolai tillmann wolfram schult parameter unit test acm sigsoft softwar engin note v n septemb michael emmi rupak majumdar koushik sen dynam test input gener databas applic proceed intern symposium softwar test analysi juli london unit kingdom willem visser corina s psreanu radek pelnek test input gener java contain use state match proceed intern symposium softwar test analysi juli portland main usa tao xie jianjun zhao framework tool support gener test input aspectj program proceed th intern confer aspectori softwar develop march bonn germani sarfraz khurshid yuk lai suen gener symbol execut librari class acm sigsoft softwar engin note v n januari jame h andrew susmita haldar yong lei felix chun hang li tool support random unit test proceed st intern workshop random test juli portland main marat boshernitsan roongko doong alberto savoia daikon agit lesson challeng build commerci tool develop test proceed intern symposium softwar test analysi juli portland main usa arindam chakrabarti patric godefroid softwar partit effect autom unit test proceed th acm ieee intern confer embed softwar octob seoul korea patric godefroid nil klarlund koushik sen dart direct autom random test acm sigplan notic v n june marcelo damorim steven lauterburg darko marinov delta execut effici statespac explor objectori program proceed intern symposium softwar test analysi juli london unit kingdom aysu betin tevfik bultan mikael lindval benjamin lux stefan topp elimin synchron fault air traffic control softwar via design verif concurr control autom softwar engin v n p june paul t darga chandrasekhar boyapati effici softwar model check data structur properti acm sigplan notic v n octob marc fisher ii gregg rothermel darren brown mingm cao curti cook margaret burnett integr autom test gener wysiwyt spreadsheet test methodolog acm transact softwar engin methodolog tosem v n p april